<def f='halide/build-apps/abseil-cpp/absl/container/internal/layout.h' l='733' ll='734' type='void absl::lts_2020_02_25::container_internal::Layout::Layout&lt;Ts...&gt;(internal_layout::TypeToSize&lt;Ts&gt;... sizes)'/>
<doc f='halide/build-apps/abseil-cpp/absl/container/internal/layout.h' l='725'>// Creates a layout with the sizes of all arrays specified. If you know
  // only the sizes of the first N arrays (where N can be zero), you can use
  // `Partial()` defined above. The constructor is essentially equivalent to
  // calling `Partial()` and passing in all array sizes; the constructor is
  // provided as a convenient abbreviation.
  //
  // Note: The sizes of the arrays must be specified in number of elements,
  // not in bytes.</doc>
