<inh f='halide/llvm-install/include/llvm/IR/Constants.h' l='1353' c='llvm::UndefValue'/>
<def f='halide/llvm-install/include/llvm/IR/Constants.h' l='1401' ll='1433'/>
<use f='halide/llvm-install/include/llvm/IR/Constants.h' l='1409' c='_ZN4llvm11PoisonValueC1ERKS0_'/>
<use f='halide/llvm-install/include/llvm/IR/Constants.h' l='1412' c='_ZN4llvm11PoisonValue3getEPNS_4TypeE'/>
<use f='halide/llvm-install/include/llvm/IR/Constants.h' l='1416' c='_ZNK4llvm11PoisonValue20getSequentialElementEv'/>
<use f='halide/llvm-install/include/llvm/IR/Constants.h' l='1420' c='_ZNK4llvm11PoisonValue16getStructElementEj'/>
<use f='halide/llvm-install/include/llvm/IR/Constants.h' l='1424' c='_ZNK4llvm11PoisonValue15getElementValueEPNS_8ConstantE'/>
<use f='halide/llvm-install/include/llvm/IR/Constants.h' l='1427' c='_ZNK4llvm11PoisonValue15getElementValueEj'/>
<size>24</size>
<doc f='halide/llvm-install/include/llvm/IR/Constants.h' l='1394'>//===----------------------------------------------------------------------===//
/// In order to facilitate speculative execution, many instructions do not
/// invoke immediate undefined behavior when provided with illegal operands,
/// and return a poison value instead.
///
/// see LangRef.html#poisonvalues for details.
///</doc>
<fun r='_ZN4llvm11PoisonValueC1EPNS_4TypeE'/>
<fun r='_ZN4llvm11PoisonValue19destroyConstantImplEv'/>
<fun r='_ZN4llvm11PoisonValueC1ERKS0_'/>
<fun r='_ZN4llvm11PoisonValue3getEPNS_4TypeE'/>
<fun r='_ZNK4llvm11PoisonValue20getSequentialElementEv'/>
<fun r='_ZNK4llvm11PoisonValue16getStructElementEj'/>
<fun r='_ZNK4llvm11PoisonValue15getElementValueEPNS_8ConstantE'/>
<fun r='_ZNK4llvm11PoisonValue15getElementValueEj'/>
<fun r='_ZN4llvm11PoisonValue7classofEPKNS_5ValueE'/>
