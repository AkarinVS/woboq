<def f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='166'/>
<def f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='172' ll='173'/>
<use f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='173'/>
<def f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='179' ll='182'/>
<def f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='187' ll='188'/>
<use f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='188'/>
<use f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='600' c='_ZN4absl14lts_2020_02_2513hash_internal19hash_range_or_bytesET_PKT0_m'/>
<use f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='608' c='_ZN4absl14lts_2020_02_2513hash_internal19hash_range_or_bytesET_PKT0_m'/>
<use f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='643' c='_ZN4absl14lts_2020_02_2513hash_internal10HashSelect24UniquelyRepresentedProbe6InvokeET_RKT0_'/>
<use f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='727'/>
<size>1</size>
<doc f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='168'>// is_uniquely_represented&lt;unsigned char&gt;
//
// unsigned char is a synonym for &quot;byte&quot;, so it is guaranteed to be
// uniquely represented.</doc>
<doc f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='175'>// is_uniquely_represented for non-standard integral types
//
// Integral types other than bool should be uniquely represented on any
// platform that this will plausibly be ported to.</doc>
<doc f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='184'>// is_uniquely_represented&lt;bool&gt;
//
//</doc>
