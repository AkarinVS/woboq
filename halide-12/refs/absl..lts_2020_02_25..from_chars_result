<def f='halide/build-apps/abseil-cpp/absl/strings/charconv.h' l='46' ll='49'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/charconv.h' l='78' c='_ZN4absl14lts_2020_02_2510from_charsEPKcS2_RdNS0_12chars_formatE'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/charconv.h' l='82' c='_ZN4absl14lts_2020_02_2510from_charsEPKcS2_RfNS0_12chars_formatE'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/charconv.cc' l='329' c='_ZN4absl14lts_2020_02_2512_GLOBAL__N_112EncodeResultERKNS1_15CalculatedFloatEbPNS0_17from_chars_resultEPT_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/charconv.cc' l='599' c='_ZN4absl14lts_2020_02_2512_GLOBAL__N_113FromCharsImplEPKcS3_RT_NS0_12chars_formatE'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/charconv.cc' l='601' c='_ZN4absl14lts_2020_02_2512_GLOBAL__N_113FromCharsImplEPKcS3_RT_NS0_12chars_formatE'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/charconv.cc' l='679' c='_ZN4absl14lts_2020_02_2510from_charsEPKcS2_RdNS0_12chars_formatE'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/charconv.cc' l='684' c='_ZN4absl14lts_2020_02_2510from_charsEPKcS2_RfNS0_12chars_formatE'/>
<size>16</size>
<doc f='halide/build-apps/abseil-cpp/absl/strings/charconv.h' l='36'>// The return result of a string-to-number conversion.
//
// `ec` will be set to `invalid_argument` if a well-formed number was not found
// at the start of the input range, `result_out_of_range` if a well-formed
// number was found, but it was out of the representable range of the requested
// type, or to std::errc() otherwise.
//
// If a well-formed number was found, `ptr` is set to one past the sequence of
// characters that were successfully parsed.  If none was found, `ptr` is set
// to the `first` argument to from_chars.</doc>
<mbr r='absl::lts_2020_02_25::from_chars_result::ptr' o='0' t='const char *'/>
<mbr r='absl::lts_2020_02_25::from_chars_result::ec' o='64' t='std::errc'/>
