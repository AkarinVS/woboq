<def f='halide/llvm-install/include/llvm/ExecutionEngine/RTDyldMemoryManager.h' l='47' ll='48' type='void llvm::MCJITMemoryManager::notifyObjectLoaded(llvm::ExecutionEngine * EE, const object::ObjectFile &amp; )'/>
<doc f='halide/llvm-install/include/llvm/ExecutionEngine/RTDyldMemoryManager.h' l='37'>/// This method is called after an object has been loaded into memory but
  /// before relocations are applied to the loaded sections.  The object load
  /// may have been initiated by MCJIT to resolve an external symbol for another
  /// object that is being finalized.  In that case, the object about which
  /// the memory manager is being notified will be finalized immediately after
  /// the memory manager returns from this call.
  ///
  /// Memory managers which are preparing code for execution in an external
  /// address space can use this call to remap the section addresses for the
  /// newly loaded object.</doc>
