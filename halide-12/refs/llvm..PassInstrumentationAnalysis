<use f='halide/llvm-install/include/llvm/IR/PassManager.h' l='499' c='_ZN4llvm11PassManager3runERT_RT0_DpT1_'/>
<inh f='halide/llvm-install/include/llvm/IR/PassManager.h' l='391' c='llvm::AnalysisInfoMixin'/>
<def f='halide/llvm-install/include/llvm/IR/PassManager.h' l='603' ll='622'/>
<use f='halide/llvm-install/include/llvm/IR/PassManager.h' l='604'/>
<use f='halide/llvm-install/include/llvm/IR/PassManager.h' l='605'/>
<use f='halide/llvm-install/include/llvm/IR/PassManager.h' l='1340' c='_ZN4llvm12RepeatedPass3runERTL0__RTL0_0_DpOTL0_1_'/>
<size>8</size>
<doc f='halide/llvm-install/include/llvm/IR/PassManager.h' l='598'>/// Pseudo-analysis pass that exposes the \c PassInstrumentation to pass
/// managers. Goes before AnalysisManager definition to provide its
/// internals (e.g PassInstrumentationAnalysis::ID) for use there if needed.
/// FIXME: figure out a way to move PassInstrumentationAnalysis into its own
/// header.</doc>
<smbr r='llvm::PassInstrumentationAnalysis::Key' t='llvm::AnalysisKey'/>
<mbr r='llvm::PassInstrumentationAnalysis::Callbacks' o='0' t='llvm::PassInstrumentationCallbacks *'/>
<fun r='_ZN4llvm27PassInstrumentationAnalysisC1EPNS_28PassInstrumentationCallbacksE'/>
<fun r='_ZN4llvm27PassInstrumentationAnalysis3runERT_RT0_DpOT1_'/>
