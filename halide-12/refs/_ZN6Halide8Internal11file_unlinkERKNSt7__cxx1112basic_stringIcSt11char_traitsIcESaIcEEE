<dec f='halide/halide-install/include/Halide.h' l='3004' type='void Halide::Internal::file_unlink(const std::string &amp; name)'/>
<dec f='halide/halide-install/include/Halide.h' l='3007' type='void Halide::Internal::file_unlink(const std::string &amp; name)'/>
<use f='halide/halide-install/include/Halide.h' l='3048' u='c' c='_ZN6Halide8Internal13TemporaryFileD1Ev'/>
<doc f='halide/halide-install/include/Halide.h' l='3003'>/** Wrapper for unlink(). Asserts upon error. */</doc>
<doc f='halide/halide-install/include/Halide.h' l='3006'>/** Wrapper for unlink(). Quietly ignores errors. */</doc>
<dec f='halide/build/include/Halide.h' l='3004' type='void Halide::Internal::file_unlink(const std::string &amp; name)'/>
<dec f='halide/build/include/Halide.h' l='3007' type='void Halide::Internal::file_unlink(const std::string &amp; name)'/>
<use f='halide/build/include/Halide.h' l='3048' u='c' c='_ZN6Halide8Internal13TemporaryFileD1Ev'/>
<doc f='halide/build/include/Halide.h' l='3003'>/** Wrapper for unlink(). Asserts upon error. */</doc>
<doc f='halide/build/include/Halide.h' l='3006'>/** Wrapper for unlink(). Quietly ignores errors. */</doc>
<dec f='halide/src/Util.h' l='252' type='void Halide::Internal::file_unlink(const std::string &amp; name)'/>
<dec f='halide/src/Util.h' l='255' type='void Halide::Internal::file_unlink(const std::string &amp; name)'/>
<use f='halide/src/Util.h' l='296' u='c' c='_ZN6Halide8Internal13TemporaryFileD1Ev'/>
<doc f='halide/src/Util.h' l='251'>/** Wrapper for unlink(). Asserts upon error. */</doc>
<doc f='halide/src/Util.h' l='254'>/** Wrapper for unlink(). Quietly ignores errors. */</doc>
<use f='halide/src/Module.cpp' l='74' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_122TemporaryObjectFileDirD1Ev'/>
<def f='halide/src/Util.cpp' l='311' ll='317' type='void Halide::Internal::file_unlink(const std::string &amp; name)'/>
<use f='halide/src/Util.cpp' l='321' u='c' c='_ZN6Halide8Internal21ensure_no_file_existsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
