<def f='halide/halide-install/include/Halide.h' l='12559' ll='12561' type='static const Halide::Internal::Call * Halide::Internal::Call::as_tag(const Halide::Expr &amp; e)'/>
<def f='halide/build/include/Halide.h' l='12559' ll='12561' type='static const Halide::Internal::Call * Halide::Internal::Call::as_tag(const Halide::Expr &amp; e)'/>
<def f='halide/src/IR.h' l='667' ll='669' type='static const Halide::Internal::Call * Halide::Internal::Call::as_tag(const Halide::Expr &amp; e)'/>
<use f='halide/src/Bounds.cpp' l='1230' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4CallE'/>
<use f='halide/src/Bounds.cpp' l='2473' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_112BoxesTouched5visitEPKNS0_10IfThenElseE'/>
<use f='halide/src/Derivative.cpp' l='1169' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_126ReverseAccumulationVisitor5visitEPKNS0_4CallE'/>
<use f='halide/src/IROperator.cpp' l='1039' u='c' c='_ZN6Halide8Internal11unwrap_tagsERKNS_4ExprE'/>
<use f='halide/src/LICM.cpp' l='100' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118LiftLoopInvariants11should_liftERKNS_4ExprE'/>
<use f='halide/src/Monotonic.cpp' l='473' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116DerivativeBounds5visitEPKNS0_4CallE'/>
<use f='halide/src/RegionCosts.cpp' l='232' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_18ExprCost5visitEPKNS0_4CallE'/>
<use f='halide/src/Simplify.cpp' l='152' u='c' c='_ZN6Halide8Internal8Simplify10ScopedFact11learn_falseERKNS_4ExprE'/>
<use f='halide/src/Simplify.cpp' l='287' u='c' c='_ZN6Halide8Internal8Simplify10ScopedFact10learn_trueERKNS_4ExprE'/>
<use f='halide/src/Simplify_Call.cpp' l='600' u='c' c='_ZN6Halide8Internal8Simplify5visitEPKNS0_4CallEPNS1_8ExprInfoE'/>
<use f='halide/src/Simplify_Let.cpp' l='178' u='c' c='_ZN6Halide8Internal8Simplify12simplify_letEPKT_PNS1_8ExprInfoE'/>
<use f='halide/src/Solve.cpp' l='421' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_115SolveExpression5visitEPKNS0_4CallE'/>
<use f='halide/src/TrimNoOps.cpp' l='28' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_115StripIdentities5visitEPKNS0_4CallE'/>
