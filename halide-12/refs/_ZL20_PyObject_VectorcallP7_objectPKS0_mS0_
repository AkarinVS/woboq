<def f='include/python3.8/cpython/abstract.h' l='114' ll='129' type='PyObject * _PyObject_Vectorcall(PyObject * callable, PyObject *const * args, size_t nargsf, PyObject * kwnames)'/>
<use f='include/python3.8/cpython/abstract.h' l='147' u='c' c='_ZL18_PyObject_FastCallP7_objectPKS0_l'/>
<use f='include/python3.8/cpython/abstract.h' l='153' u='c' c='_ZL19_PyObject_CallNoArgP7_object'/>
<doc f='include/python3.8/cpython/abstract.h' l='95'>/* Call the callable object &apos;callable&apos; with the &quot;vectorcall&quot; calling
   convention.

   args is a C array for positional arguments.

   nargsf is the number of positional arguments plus optionally the flag
   PY_VECTORCALL_ARGUMENTS_OFFSET which means that the caller is allowed to
   modify args[-1].

   kwnames is a tuple of keyword names. The values of the keyword arguments
   are stored in &quot;args&quot; after the positional arguments (note that the number
   of keyword arguments does not change nargsf). kwnames can also be NULL if
   there are no keyword arguments.

   keywords must only contains str strings (no subclass), and all keys must
   be unique.

   Return the result on success. Raise an exception and return NULL on
   error. */</doc>
