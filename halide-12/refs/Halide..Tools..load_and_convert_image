<def f='halide/halide-install/share/tools/halide_image_io.h' l='2309' ll='2330'/>
<use f='halide/apps/bgu/filter.cpp' l='34' c='main'/>
<size>32</size>
<doc f='halide/halide-install/share/tools/halide_image_io.h' l='2307'>// Like load_image, but quietly convert the loaded image to the type of the LHS
// if necessary, discarding information if necessary.</doc>
<fun r='_ZN6Halide5Tools22load_and_convert_imageC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<fun r='_ZN6Halide5Tools22load_and_convert_imagecvT_Ev'/>
<mbr r='Halide::Tools::load_and_convert_image::filename' o='0' t='const std::string'/>
<use f='halide/apps/bilateral_grid/filter.cpp' l='27' c='main'/>
<size>32</size>
<use f='halide/apps/camera_pipe/process.cpp' l='32' c='main'/>
<size>32</size>
<use f='halide/apps/harris/filter.cpp' l='22' c='main'/>
<size>32</size>
<use f='halide/apps/hist/filter.cpp' l='22' c='main'/>
<size>32</size>
<use f='halide/apps/iir_blur/filter.cpp' l='22' c='main'/>
<size>32</size>
<use f='halide/apps/interpolate/filter.cpp' l='22' c='main'/>
<size>32</size>
<use f='halide/apps/local_laplacian/process.cpp' l='24' c='main'/>
<size>32</size>
<use f='halide/apps/max_filter/filter.cpp' l='22' c='main'/>
<size>32</size>
<use f='halide/apps/nl_means/process.cpp' l='21' c='main'/>
<size>32</size>
<use f='halide/apps/stencil_chain/process.cpp' l='24' c='main'/>
<size>32</size>
<use f='halide/apps/unsharp/filter.cpp' l='22' c='main'/>
<size>32</size>
<use f='halide/apps/wavelet/wavelet.cpp' l='60' c='main'/>
<size>32</size>
<def f='halide/tools/halide_image_io.h' l='2309' ll='2330'/>
<size>32</size>
<doc f='halide/tools/halide_image_io.h' l='2307'>// Like load_image, but quietly convert the loaded image to the type of the LHS
// if necessary, discarding information if necessary.</doc>
<fun r='_ZN6Halide5Tools22load_and_convert_imageC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<fun r='_ZN6Halide5Tools22load_and_convert_imagecvT_Ev'/>
<mbr r='Halide::Tools::load_and_convert_image::filename' o='0' t='const std::string'/>
