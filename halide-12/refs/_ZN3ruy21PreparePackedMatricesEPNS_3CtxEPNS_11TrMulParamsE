<dec f='halide/build-apps/ruy/ruy/prepare_packed_matrices.h' l='38' type='void ruy::PreparePackedMatrices(ruy::Ctx * ctx, ruy::TrMulParams * params)'/>
<use f='halide/build-apps/ruy/ruy/frontend.cc' l='29' u='c' c='_ZN3ruy26MulFrontEndFromTrMulParamsEPNS_3CtxEPNS_11TrMulParamsE'/>
<doc f='halide/build-apps/ruy/ruy/prepare_packed_matrices.h' l='24'>// Ensures that the packed matrices are ready for TrMul&apos;s work. In the generic
// case, this is merely allocating their buffers.
//
// In the non-default case where
// a matrix has a cache_policy allowing caching, this is where we implement
// this caching feature: determining whether to cache each matrix, performing
// the cache lookup, and possibly performing the packing and cache update if
// not already cached.
//
// Assumes that the packed matrices have previously been created, with their
// fields already set except for the buffer allocations, as part of
// CreateTrMulParams. The reason for separating this preparation from the
// creation is that the creation needs to be templatized and this preparation
// does not.</doc>
<def f='halide/build-apps/ruy/ruy/prepare_packed_matrices.cc' l='69' ll='92' type='void ruy::PreparePackedMatrices(ruy::Ctx * ctx, ruy::TrMulParams * params)'/>
