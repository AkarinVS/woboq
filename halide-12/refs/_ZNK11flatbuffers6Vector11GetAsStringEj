<def f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='278' ll='280' type='const flatbuffers::String * flatbuffers::Vector::GetAsString(flatbuffers::uoffset_t i) const'/>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='276'>// If this a vector of unions, this does the cast for you. There&apos;s no check
  // to make sure this is actually a string!</doc>
