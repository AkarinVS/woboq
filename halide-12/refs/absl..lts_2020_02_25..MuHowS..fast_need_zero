<dec f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='668' type='intptr_t'/>
<use f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='1840' u='r' c='_ZN4absl14lts_2020_02_255Mutex20LockSlowWithDeadlineEPKNS0_6MuHowSEPKNS0_9ConditionENS0_24synchronization_internal13KernelTimeoutEi'/>
<offset>0</offset>
<doc f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='665'>// if all the bits in fast_need_zero are zero, the lock can be acquired by
  // adding fast_add and oring fast_or.  The bit kMuDesig should be reset iff
  // this is the designated waker.</doc>
