<use f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.h' l='117'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.cc' l='79'/>
<def f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.cc' l='198' ll='225'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.cc' l='201' c='_ZN4absl14lts_2020_02_2514flags_internal13FlagSaverImplC1ERKS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.cc' l='202' c='_ZN4absl14lts_2020_02_2514flags_internal13FlagSaverImplaSERKS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.cc' l='227' c='_ZN4absl14lts_2020_02_2514flags_internal9FlagSaverC1Ev'/>
<size>24</size>
<doc f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.cc' l='188'>// --------------------------------------------------------------------
// FlagSaver
// FlagSaverImpl
//    This class stores the states of all flags at construct time,
//    and restores all flags to that state at destruct time.
//    Its major implementation challenge is that it never modifies
//    pointers in the &apos;main&apos; registry, so global FLAG_* vars always
//    point to the right place.
// --------------------------------------------------------------------</doc>
<fun r='_ZN4absl14lts_2020_02_2514flags_internal13FlagSaverImplC1Ev'/>
<fun r='_ZN4absl14lts_2020_02_2514flags_internal13FlagSaverImplC1ERKS2_'/>
<fun r='_ZN4absl14lts_2020_02_2514flags_internal13FlagSaverImplaSERKS2_'/>
<fun r='_ZN4absl14lts_2020_02_2514flags_internal13FlagSaverImpl16SaveFromRegistryEv'/>
<fun r='_ZN4absl14lts_2020_02_2514flags_internal13FlagSaverImpl17RestoreToRegistryEv'/>
<mbr r='absl::lts_2020_02_25::flags_internal::FlagSaverImpl::backup_registry_' o='0' t='std::vector&lt;std::unique_ptr&lt;flags_internal::FlagStateInterface&gt; &gt;'/>
