<def f='halide/llvm-install/include/llvm/Support/DataExtractor.h' l='126' ll='128' type='const char * llvm::DataExtractor::getCStr(uint64_t * OffsetPtr, llvm::Error * Err = nullptr) const'/>
<doc f='halide/llvm-install/include/llvm/Support/DataExtractor.h' l='100'>/// Extract a C string from \a *offset_ptr.
  ///
  /// Returns a pointer to a C String from the data at the offset
  /// pointed to by \a offset_ptr. A variable length NULL terminated C
  /// string will be extracted and the \a offset_ptr will be
  /// updated with the offset of the byte that follows the NULL
  /// terminator byte.
  ///
  /// @param[in,out] OffsetPtr
  ///     A pointer to an offset within the data that will be advanced
  ///     by the appropriate number of bytes if the value is extracted
  ///     correctly. If the offset is out of bounds or there are not
  ///     enough bytes to extract this value, the offset will be left
  ///     unmodified.
  ///
  /// @param[in,out] Err
  ///     A pointer to an Error object. Upon return the Error object is set to
  ///     indicate the result (success/failure) of the function. If the Error
  ///     object is already set when calling this function, no extraction is
  ///     performed.
  ///
  /// @return
  ///     A pointer to the C string value in the data. If the offset
  ///     pointed to by \a offset_ptr is out of bounds, or if the
  ///     offset plus the length of the C string is out of bounds,
  ///     NULL will be returned.</doc>
<use f='halide/src/Introspection.cpp' l='1959' u='c' c='_ZN6Halide8Internal13Introspection12_GLOBAL__N_113DebugSections16parse_debug_lineERKN4llvm13DataExtractorE'/>
<use f='halide/src/Introspection.cpp' l='1971' u='c' c='_ZN6Halide8Internal13Introspection12_GLOBAL__N_113DebugSections16parse_debug_lineERKN4llvm13DataExtractorE'/>
<use f='halide/src/Introspection.cpp' l='2047' u='c' c='_ZN6Halide8Internal13Introspection12_GLOBAL__N_113DebugSections16parse_debug_lineERKN4llvm13DataExtractorE'/>
