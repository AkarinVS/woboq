<def f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='793' ll='1029'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='808' c='_ZN11flatbuffers15vector_downwardC1EOS0_'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='834' c='_ZN11flatbuffers15vector_downwardaSEOS0_'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='834' c='_ZN11flatbuffers15vector_downwardaSEOS0_'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='836' c='_ZN11flatbuffers15vector_downwardaSEOS0_'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='981' c='_ZN11flatbuffers15vector_downward4swapERS0_'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='993' c='_ZN11flatbuffers15vector_downward14swap_allocatorERS0_'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1001' c='_ZN11flatbuffers15vector_downwardC1ERKS0_'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1002' c='_ZN11flatbuffers15vector_downwardaSERKS0_'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1002' c='_ZN11flatbuffers15vector_downwardaSERKS0_'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1864' c='_ZN11flatbuffers17FlatBufferBuilder18TableKeyComparatorC1ERNS_15vector_downwardE'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1871'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='2024'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='2046' c='_ZN11flatbuffers17FlatBufferBuilder19StringOffsetCompareC1ERKNS_15vector_downwardE'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='2053'/>
<size>64</size>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='787'>// This is a minimal replication of std::vector&lt;uint8_t&gt; functionality,
// except growing from higher to lower addresses. i.e push_back() inserts data
// in the lowest address in the vector.
// Since this vector leaves the lower part unused, we support a &quot;scratch-pad&quot;
// that can be stored there for temporary data, to share the allocated space.
// Essentially, this supports 2 std::vectors in a single buffer.</doc>
<fun r='_ZN11flatbuffers15vector_downwardC1EmPNS_9AllocatorEbm'/>
<fun r='_ZN11flatbuffers15vector_downwardC1EOS0_'/>
<fun r='_ZN11flatbuffers15vector_downwardaSEOS0_'/>
<fun r='_ZN11flatbuffers15vector_downwardD1Ev'/>
<fun r='_ZN11flatbuffers15vector_downward5resetEv'/>
<fun r='_ZN11flatbuffers15vector_downward5clearEv'/>
<fun r='_ZN11flatbuffers15vector_downward13clear_scratchEv'/>
<fun r='_ZN11flatbuffers15vector_downward15clear_allocatorEv'/>
<fun r='_ZN11flatbuffers15vector_downward12clear_bufferEv'/>
<fun r='_ZN11flatbuffers15vector_downward11release_rawERmS1_'/>
<fun r='_ZN11flatbuffers15vector_downward7releaseEv'/>
<fun r='_ZN11flatbuffers15vector_downward12ensure_spaceEm'/>
<fun r='_ZN11flatbuffers15vector_downward10make_spaceEm'/>
<fun r='_ZN11flatbuffers15vector_downward20get_custom_allocatorEv'/>
<fun r='_ZNK11flatbuffers15vector_downward4sizeEv'/>
<fun r='_ZNK11flatbuffers15vector_downward12scratch_sizeEv'/>
<fun r='_ZNK11flatbuffers15vector_downward8capacityEv'/>
<fun r='_ZNK11flatbuffers15vector_downward4dataEv'/>
<fun r='_ZNK11flatbuffers15vector_downward12scratch_dataEv'/>
<fun r='_ZNK11flatbuffers15vector_downward11scratch_endEv'/>
<fun r='_ZNK11flatbuffers15vector_downward7data_atEm'/>
<fun r='_ZN11flatbuffers15vector_downward4pushEPKhm'/>
<fun r='_ZN11flatbuffers15vector_downward10push_smallERKT_'/>
<fun r='_ZN11flatbuffers15vector_downward18scratch_push_smallERKT_'/>
<fun r='_ZN11flatbuffers15vector_downward4fillEm'/>
<fun r='_ZN11flatbuffers15vector_downward8fill_bigEm'/>
<fun r='_ZN11flatbuffers15vector_downward3popEm'/>
<fun r='_ZN11flatbuffers15vector_downward11scratch_popEm'/>
<fun r='_ZN11flatbuffers15vector_downward4swapERS0_'/>
<fun r='_ZN11flatbuffers15vector_downward14swap_allocatorERS0_'/>
<fun r='_ZN11flatbuffers15vector_downwardC1ERKS0_'/>
<mbr r='flatbuffers::vector_downward::allocator_' o='0' t='flatbuffers::Allocator *'/>
<mbr r='flatbuffers::vector_downward::own_allocator_' o='64' t='bool'/>
<mbr r='flatbuffers::vector_downward::initial_size_' o='128' t='size_t'/>
<mbr r='flatbuffers::vector_downward::buffer_minalign_' o='192' t='size_t'/>
<mbr r='flatbuffers::vector_downward::reserved_' o='256' t='size_t'/>
<mbr r='flatbuffers::vector_downward::buf_' o='320' t='uint8_t *'/>
<mbr r='flatbuffers::vector_downward::cur_' o='384' t='uint8_t *'/>
<mbr r='flatbuffers::vector_downward::scratch_' o='448' t='uint8_t *'/>
<fun r='_ZN11flatbuffers15vector_downward10reallocateEm'/>
