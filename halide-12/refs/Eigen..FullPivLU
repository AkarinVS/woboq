<use f='halide/build-apps/eigen/Eigen/src/Core/MatrixBase.h' l='326' c='_ZNK5Eigen10MatrixBase9fullPivLuEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='16'/>
<def f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='60' ll='437'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='61'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='440' c='_ZN5Eigen9FullPivLUC1Ev'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='446' c='_ZN5Eigen9FullPivLUC1Ell'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='459' c='_ZN5Eigen9FullPivLUC1ERKNS_9EigenBaseITL0__EE'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='473' c='_ZN5Eigen9FullPivLUC1ERNS_9EigenBaseITL0__EE'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='486' c='_ZN5Eigen9FullPivLU14computeInPlaceEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='579' c='_ZNK5Eigen9FullPivLU11determinantEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='590' c='_ZNK5Eigen9FullPivLU19reconstructedMatrixEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='615'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='616'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='618'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='618'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='618' c='_ZN5Eigen8internal13kernel_retvalINS_9FullPivLUIT_EEEC1ERKS4_'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='701'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='702'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='704'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='704'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='704' c='_ZN5Eigen8internal12image_retvalINS_9FullPivLUIT_EEEC1ERKS4_RKNS4_10MatrixTypeE'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='743' c='_ZNK5Eigen9FullPivLU11_solve_implERKTL0__RTL0_0_'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='790' c='_ZNK5Eigen9FullPivLU22_solve_impl_transposedERKTL0_0_RTL0_1_'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='847'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='847'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='849'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='867' c='_ZNK5Eigen10MatrixBase9fullPivLuEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='870' c='_ZNK5Eigen10MatrixBase9fullPivLuEv'/>
<doc f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='27'>/** \ingroup LU_Module
  *
  * \class FullPivLU
  *
  * \brief LU decomposition of a matrix with complete pivoting, and related features
  *
  * \tparam _MatrixType the type of the matrix of which we are computing the LU decomposition
  *
  * This class represents a LU decomposition of any matrix, with complete pivoting: the matrix A is
  * decomposed as \f$ A = P^{-1} L U Q^{-1} \f$ where L is unit-lower-triangular, U is
  * upper-triangular, and P and Q are permutation matrices. This is a rank-revealing LU
  * decomposition. The eigenvalues (diagonal coefficients) of U are sorted in such a way that any
  * zeros are at the end.
  *
  * This decomposition provides the generic approach to solving systems of linear equations, computing
  * the rank, invertibility, inverse, kernel, and determinant.
  *
  * This LU decomposition is very stable and well tested with large matrices. However there are use cases where the SVD
  * decomposition is inherently more stable and/or flexible. For example, when computing the kernel of a matrix,
  * working with the SVD allows to select the smallest singular values of the matrix, something that
  * the LU decomposition doesn&apos;t see.
  *
  * The data of the LU decomposition can be directly accessed through the methods matrixLU(),
  * permutationP(), permutationQ().
  *
  * As an example, here is how the original matrix can be retrieved:
  * \include class_FullPivLU.cpp
  * Output: \verbinclude class_FullPivLU.out
  *
  * This class supports the \link InplaceDecomposition inplace decomposition \endlink mechanism.
  *
  * \sa MatrixBase::fullPivLu(), MatrixBase::determinant(), MatrixBase::inverse()
  */</doc>
<fun r='_ZN5Eigen9FullPivLUC1Ev'/>
<fun r='_ZN5Eigen9FullPivLUC1Ell'/>
<fun r='_ZN5Eigen9FullPivLUC1ERKNS_9EigenBaseITL0__EE'/>
<fun r='_ZN5Eigen9FullPivLUC1ERNS_9EigenBaseITL0__EE'/>
<fun r='_ZN5Eigen9FullPivLU7computeERKNS_9EigenBaseITL0__EE'/>
<fun r='_ZNK5Eigen9FullPivLU8matrixLUEv'/>
<fun r='_ZNK5Eigen9FullPivLU13nonzeroPivotsEv'/>
<fun r='_ZNK5Eigen9FullPivLU8maxPivotEv'/>
<fun r='_ZNK5Eigen9FullPivLU12permutationPEv'/>
<fun r='_ZNK5Eigen9FullPivLU12permutationQEv'/>
<fun r='_ZNK5Eigen9FullPivLU6kernelEv'/>
<fun r='_ZNK5Eigen9FullPivLU5imageERKT_'/>
<fun r='_ZNK5Eigen9FullPivLU5rcondEv'/>
<fun r='_ZNK5Eigen9FullPivLU11determinantEv'/>
<fun r='_ZN5Eigen9FullPivLU12setThresholdERKNS_9NumTraitsINS_8internal6traitsINS_9FullPivLUIT_EEE6ScalarEE4RealE'/>
<fun r='_ZN5Eigen9FullPivLU12setThresholdENS_9Default_tE'/>
<fun r='_ZNK5Eigen9FullPivLU9thresholdEv'/>
<fun r='_ZNK5Eigen9FullPivLU4rankEv'/>
<fun r='_ZNK5Eigen9FullPivLU17dimensionOfKernelEv'/>
<fun r='_ZNK5Eigen9FullPivLU11isInjectiveEv'/>
<fun r='_ZNK5Eigen9FullPivLU12isSurjectiveEv'/>
<fun r='_ZNK5Eigen9FullPivLU12isInvertibleEv'/>
<fun r='_ZNK5Eigen9FullPivLU7inverseEv'/>
<fun r='_ZNK5Eigen9FullPivLU19reconstructedMatrixEv'/>
<fun r='_ZNK5Eigen9FullPivLU4rowsEv'/>
<fun r='_ZNK5Eigen9FullPivLU4colsEv'/>
<fun r='_ZNK5Eigen9FullPivLU11_solve_implERKTL0__RTL0_0_'/>
<fun r='_ZNK5Eigen9FullPivLU22_solve_impl_transposedERKTL0_0_RTL0_1_'/>
<fun r='_ZN5Eigen9FullPivLU25check_template_parametersEv'/>
<fun r='_ZN5Eigen9FullPivLU14computeInPlaceEv'/>
<mbr r='Eigen::FullPivLU::m_lu' t='Eigen::FullPivLU::MatrixType'/>
<mbr r='Eigen::FullPivLU::m_p' t='Eigen::FullPivLU::PermutationPType'/>
<mbr r='Eigen::FullPivLU::m_q' t='Eigen::FullPivLU::PermutationQType'/>
<mbr r='Eigen::FullPivLU::m_rowsTranspositions' t='Eigen::FullPivLU::IntColVectorType'/>
<mbr r='Eigen::FullPivLU::m_colsTranspositions' t='Eigen::FullPivLU::IntRowVectorType'/>
<mbr r='Eigen::FullPivLU::m_nonzero_pivots' t='Eigen::Index'/>
<mbr r='Eigen::FullPivLU::m_l1_norm' t='Eigen::FullPivLU::RealScalar'/>
<mbr r='Eigen::FullPivLU::m_maxpivot' t='Eigen::FullPivLU::RealScalar'/>
<mbr r='Eigen::FullPivLU::m_prescribedThreshold' t='Eigen::FullPivLU::RealScalar'/>
<mbr r='Eigen::FullPivLU::m_det_pq' t='signed char'/>
<mbr r='Eigen::FullPivLU::m_isInitialized' t='bool'/>
<mbr r='Eigen::FullPivLU::m_usePrescribedThreshold' t='bool'/>
<fun r='_ZN5Eigen9FullPivLUC1Ev'/>
<fun r='_ZN5Eigen9FullPivLUC1Ell'/>
<fun r='_ZN5Eigen9FullPivLUC1ERKNS_9EigenBaseITL0__EE'/>
<fun r='_ZN5Eigen9FullPivLUC1ERNS_9EigenBaseITL0__EE'/>
<fun r='_ZN5Eigen9FullPivLU14computeInPlaceEv'/>
<fun r='_ZNK5Eigen9FullPivLU11determinantEv'/>
<fun r='_ZNK5Eigen9FullPivLU19reconstructedMatrixEv'/>
<fun r='_ZNK5Eigen9FullPivLU11_solve_implERKTL0__RTL0_0_'/>
<fun r='_ZNK5Eigen9FullPivLU22_solve_impl_transposedERKTL0_0_RTL0_1_'/>
