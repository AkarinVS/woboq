<dec f='halide/build-apps/abseil-cpp/absl/random/internal/distribution_test_util.h' l='56' type='double absl::lts_2020_02_25::random_internal::RequiredSuccessProbability(double p_fail, int num_trials)'/>
<doc f='halide/build-apps/abseil-cpp/absl/random/internal/distribution_test_util.h' l='53'>// Returns the probability of success required for a single trial to ensure that
// after `num_trials` trials, the probability of at least one failure is no more
// than `p_fail`.</doc>
<def f='halide/build-apps/abseil-cpp/absl/random/internal/distribution_test_util.cc' l='397' ll='401' type='double absl::lts_2020_02_25::random_internal::RequiredSuccessProbability(const double p_fail, const int num_trials)'/>
<doc f='halide/build-apps/abseil-cpp/absl/random/internal/distribution_test_util.cc' l='393'>// Given `num_trials` trials each with probability `p` of success, the
// probability of no failures is `p^k`. To ensure the probability of a failure
// is no more than `p_fail`, it must be that `p^k == 1 - p_fail`. This function
// computes `p` from that equation.</doc>
