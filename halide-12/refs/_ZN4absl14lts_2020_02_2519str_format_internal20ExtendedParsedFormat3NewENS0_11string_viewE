<def f='halide/build-apps/abseil-cpp/absl/strings/internal/str_format/parser.h' l='309' ll='311' type='static std::unique_ptr&lt;ExtendedParsedFormat&lt;C...&gt; &gt; absl::lts_2020_02_25::str_format_internal::ExtendedParsedFormat::New(absl::lts_2020_02_25::string_view format)'/>
<doc f='halide/build-apps/abseil-cpp/absl/strings/internal/str_format/parser.h' l='297'>// ExtendedParsedFormat factory function.
  // The user still has to specify the conversion characters, but they will not
  // be checked at compile time. Instead, it will be checked at runtime.
  // This delays the checking to runtime, but allows the user to pass
  // dynamically sourced formats.
  // It returns NULL if the format does not match the conversion characters.
  // The user is responsible for checking the return value before using it.
  //
  // The &apos;New&apos; variant will check that all the specified arguments are being
  // consumed by the format and return NULL if any argument is being ignored.
  // The &apos;NewAllowIgnored&apos; variant will not verify this and will allow formats
  // that ignore arguments.</doc>
