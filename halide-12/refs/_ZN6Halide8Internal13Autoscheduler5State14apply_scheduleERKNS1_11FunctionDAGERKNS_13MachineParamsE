<dec f='halide/src/autoschedulers/adams2019/State.h' l='95' type='void Halide::Internal::Autoscheduler::State::apply_schedule(const Halide::Internal::Autoscheduler::FunctionDAG &amp; dag, const Halide::MachineParams &amp; params)'/>
<use f='halide/src/autoschedulers/adams2019/AutoSchedule.cpp' l='608' u='c' c='_ZN6Halide8Internal13Autoscheduler17generate_scheduleERKSt6vectorINS0_8FunctionESaIS3_EERKNS_6TargetERKNS_13MachineParamsEPNS_20AutoSchedulerResultsE'/>
<use f='halide/src/autoschedulers/adams2019/AutoSchedule.cpp' l='676' u='c' c='_ZN6Halide8Internal13Autoscheduler23find_and_apply_scheduleERNS1_11FunctionDAGERKSt6vectorINS0_8FunctionESaIS5_EERKNS_13MachineParamsEPNS_9CostModelEi5169466'/>
<doc f='halide/src/autoschedulers/adams2019/State.h' l='91'>// Apply the schedule represented by this state to a Halide
    // Pipeline. Also generate source code for the schedule for the
    // user to copy-paste to freeze this schedule as permanent artifact.
    // Also fills `schedule_source`.</doc>
<def f='halide/src/autoschedulers/adams2019/State.cpp' l='540' ll='688' type='void Halide::Internal::Autoscheduler::State::apply_schedule(const Halide::Internal::Autoscheduler::FunctionDAG &amp; dag, const Halide::MachineParams &amp; params)'/>
<doc f='halide/src/autoschedulers/adams2019/State.cpp' l='537'>// Apply the schedule represented by this state to a Halide
// Pipeline. Also generate source code for the schedule for the
// user to copy-paste to freeze this schedule as permanent artifact.</doc>
