<dec f='halide/build/include/HalideRuntimeMetal.h' l='87' type='int halide_metal_acquire_context(void * user_context, struct halide_metal_device ** device_ret, struct halide_metal_command_queue ** queue_ret, _Bool create)'/>
<doc f='halide/build/include/HalideRuntimeMetal.h' l='72'>/** This prototype is exported as applications will typically need to
 * replace it to get Halide filters to execute on the same device and
 * command queue used for other purposes. The halide_metal_device is an
 * id \&lt;MTLDevice\&gt; and halide_metal_command_queue is an id \&lt;MTLCommandQueue\&gt;.
 * No reference counting is done by Halide on these objects. They must remain
 * valid until all off the following are true:
 * - A balancing halide_metal_release_context has occurred for each
 *     halide_metal_acquire_context which returned the device/queue
 * - All Halide filters using the context information have completed
 * - All halide_buffer_t objects on the device have had
 *     halide_device_free called or have been detached via
 *     halide_metal_detach_buffer.
 * - halide_device_release has been called on the interface returned from
 *     halide_metal_device_interface(). (This releases the programs on the context.)
 */</doc>
