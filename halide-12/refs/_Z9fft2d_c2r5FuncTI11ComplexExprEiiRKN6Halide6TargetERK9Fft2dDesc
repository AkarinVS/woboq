<dec f='halide/apps/fft/fft.h' l='65' type='Halide::Func fft2d_c2r(ComplexFunc c, int N0, int N1, const Halide::Target &amp; target, const Fft2dDesc &amp; desc = Fft2dDesc())'/>
<def f='halide/apps/fft/fft.cpp' l='1117' ll='1122' type='Halide::Func fft2d_c2r(ComplexFunc c, int N0, int N1, const Halide::Target &amp; target, const Fft2dDesc &amp; desc = Fft2dDesc())'/>
<doc f='halide/apps/fft/fft.h' l='62'>// Compute the real valued N0 x N1 2D inverse DFT of dimensions 0, 1 of c. Note
// that the transform domain has dimensions N0 x N1 / 2 + 1 due to the conjugate
// symmetry of real DFTs. There is no normalization.</doc>
<use f='halide/apps/fft/fft_generator.cpp' l='123' u='c' c='_ZN12_GLOBAL__N_112FFTGenerator8generateEv'/>
<use f='halide/apps/fft/main.cpp' l='107' u='c' c='main'/>
<use f='halide/apps/fft/main.cpp' l='212' u='c' c='main'/>
