<def f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1174' ll='1177' type='absl::lts_2020_02_25::Time absl::lts_2020_02_25::FromDateTime(int64_t year, int mon, int day, int hour, int min, int sec, absl::lts_2020_02_25::TimeZone tz)'/>
<doc f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1159'>// FromDateTime()
//
// A convenience wrapper for `absl::ConvertDateTime()` that simply returns
// the &quot;pre&quot; `absl::Time`.  That is, the unique result, or the instant that
// is correct using the pre-transition offset (as if the transition never
// happened).
//
// Example:
//
//   absl::Time t = absl::FromDateTime(2017, 9, 26, 9, 30, 0, lax);
//   // t = 2017-09-26 09:30:00 -0700
//
// Deprecated. Use `absl::FromCivil(CivilSecond, TimeZone)`. Note that the
// behavior of `FromCivil()` differs from `FromDateTime()` for skipped civil
// times. If you care about that see `absl::TimeZone::At(absl::CivilSecond)`.</doc>
