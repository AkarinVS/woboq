<use f='halide/build-apps/eigen/Eigen/src/Core/DenseBase.h' l='438' c='_ZNK5Eigen9DenseBase11nestByValueEv'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/NestByValue.h' l='18'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/NestByValue.h' l='38' ll='57'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/NestByValue.h' l='39'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/NestByValue.h' l='62' c='_ZNK5Eigen9DenseBase11nestByValueEv'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/NestByValue.h' l='65' c='_ZNK5Eigen9DenseBase11nestByValueEv'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/NestByValue.h' l='72'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/NestByValue.h' l='77' c='_ZN5Eigen8internal9evaluatorINS_11NestByValueIT_EEEC1ERKS4_'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/NestByValue.h' l='26'>/** \class NestByValue
  * \ingroup Core_Module
  *
  * \brief Expression which must be nested by value
  *
  * \tparam ExpressionType the type of the object of which we are requiring nesting-by-value
  *
  * This class is the return type of MatrixBase::nestByValue()
  * and most of the time this is the only way it is used.
  *
  * \sa MatrixBase::nestByValue()
  */</doc>
<fun r='_ZN5Eigen11NestByValueC1ERKT_'/>
<fun r='_ZNK5Eigen11NestByValue4rowsEv'/>
<fun r='_ZNK5Eigen11NestByValue4colsEv'/>
<fun r='_ZNK5Eigen11NestByValuecvRKT_Ev'/>
<fun r='_ZNK5Eigen11NestByValue16nestedExpressionEv'/>
<mbr r='Eigen::NestByValue::m_expression' t='const ExpressionType'/>
