<dec f='halide/src/autoschedulers/adams2019/LoopNest.h' l='131' type='void Halide::Internal::Autoscheduler::LoopNest::compute_features(const Halide::Internal::Autoscheduler::FunctionDAG &amp; dag, const Halide::MachineParams &amp; params, const StageMap&lt;Halide::Internal::Autoscheduler::LoopNest::Sites&gt; &amp; sites, int64_t instances, int64_t parallelism, const Halide::Internal::Autoscheduler::LoopNest * parent, const Halide::Internal::Autoscheduler::LoopNest * grandparent, const Halide::Internal::Autoscheduler::LoopNest &amp; root, int64_t * working_set, StageMap&lt;Halide::Internal::ScheduleFeatures&gt; * features, bool use_cached_features) const'/>
<doc f='halide/src/autoschedulers/adams2019/LoopNest.h' l='130'>// Do a recursive walk over the loop nest computing features to feed the cost model.</doc>
<def f='halide/src/autoschedulers/adams2019/LoopNest.cpp' l='229' ll='1028' type='void Halide::Internal::Autoscheduler::LoopNest::compute_features(const Halide::Internal::Autoscheduler::FunctionDAG &amp; dag, const Halide::MachineParams &amp; params, const StageMap&lt;Halide::Internal::Autoscheduler::LoopNest::Sites&gt; &amp; sites, int64_t instances, int64_t parallelism, const Halide::Internal::Autoscheduler::LoopNest * parent, const Halide::Internal::Autoscheduler::LoopNest * grandparent, const Halide::Internal::Autoscheduler::LoopNest &amp; root, int64_t * working_set, StageMap&lt;Halide::Internal::ScheduleFeatures&gt; * features, bool use_cached_features) const'/>
<use f='halide/src/autoschedulers/adams2019/LoopNest.cpp' l='354' u='c' c='_ZNK6Halide8Internal13Autoscheduler8LoopNest16compute_featuresERKNS1_11FunctionDAGERKNS_13MachineParamsERK14PerfectHashMapINS3_4Node5StageENS2_5SitesE1864315'/>
<use f='halide/src/autoschedulers/adams2019/LoopNest.cpp' l='598' u='c' c='_ZNK6Halide8Internal13Autoscheduler8LoopNest16compute_featuresERKNS1_11FunctionDAGERKNS_13MachineParamsERK14PerfectHashMapINS3_4Node5StageENS2_5SitesE1864315'/>
<doc f='halide/src/autoschedulers/adams2019/LoopNest.cpp' l='228'>// Do a recursive walk over the loop nest computing features to feed the cost model.</doc>
<use f='halide/src/autoschedulers/adams2019/State.cpp' l='85' u='c' c='_ZN6Halide8Internal13Autoscheduler5State21compute_featurizationERKNS1_11FunctionDAGERKNS_13MachineParamsEP14PerfectHashMapINS3_4Node5StageENS0_16Sched11298370'/>
