<def f='halide/llvm-install/include/llvm/Support/TypeSize.h' l='325' ll='329' type='static bool llvm::LinearPolySize::isKnownLT(const LinearPolySize&lt;LeafTy&gt; &amp; LHS, const LinearPolySize&lt;LeafTy&gt; &amp; RHS)'/>
<doc f='halide/llvm-install/include/llvm/Support/TypeSize.h' l='315'>// For some cases, size ordering between scalable and fixed size types cannot
  // be determined at compile time, so such comparisons aren&apos;t allowed.
  //
  // e.g. &lt;vscale x 2 x i16&gt; could be bigger than &lt;4 x i32&gt; with a runtime
  // vscale &gt;= 5, equal sized with a vscale of 4, and smaller with
  // a vscale &lt;= 3.
  //
  // All the functions below make use of the fact vscale is always &gt;= 1, which
  // means that &lt;vscale x 4 x i32&gt; is guaranteed to be &gt;= &lt;4 x i32&gt;, etc.</doc>
