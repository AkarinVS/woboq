<use f='halide/llvm-install/include/llvm/Analysis/MemoryLocation.h' l='239' c='_ZN4llvm14MemoryLocation3getEPKNS_17AtomicCmpXchgInstE'/>
<use f='halide/llvm-install/include/llvm/Analysis/AliasAnalysis.h' l='632' c='_ZN4llvm9AAResults13getModRefInfoEPKNS_17AtomicCmpXchgInstERKNS_14MemoryLocationE'/>
<use f='halide/llvm-install/include/llvm/Analysis/AliasAnalysis.h' l='636' c='_ZN4llvm9AAResults13getModRefInfoEPKNS_17AtomicCmpXchgInstEPKNS_5ValueENS_12LocationSizeE'/>
<use f='halide/llvm-install/include/llvm/Analysis/AliasAnalysis.h' l='776' c='_ZN4llvm9AAResults13getModRefInfoEPKNS_17AtomicCmpXchgInstERKNS_14MemoryLocationERNS_11AAQueryInfoE'/>
<inh f='halide/llvm-install/include/llvm/IR/Instruction.h' l='45' c='llvm::Instruction'/>
<def f='halide/llvm-install/include/llvm/IR/Instructions.h' l='522' ll='685'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='536' c='_ZNK4llvm17AtomicCmpXchgInst9cloneImplEv'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='688'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='692' c='_ZNK4llvm17AtomicCmpXchgInst8op_beginEv'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='692' c='_ZNK4llvm17AtomicCmpXchgInst6op_endEv'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='692' c='_ZNK4llvm17AtomicCmpXchgInst10getOperandEj'/>
<use f='halide/llvm-install/include/llvm/IR/IRBuilder.h' l='1842' c='_ZN4llvm13IRBuilderBase19CreateAtomicCmpXchgEPNS_5ValueES2_S2_NS_14AtomicOrderingES3_h'/>
<use f='halide/llvm-install/include/llvm/IR/IRBuilder.h' l='1847' c='_ZN4llvm13IRBuilderBase19CreateAtomicCmpXchgEPNS_5ValueES2_S2_NS_14AtomicOrderingES3_h'/>
<size>64</size>
<doc f='halide/llvm-install/include/llvm/IR/Instructions.h' l='512'>//===----------------------------------------------------------------------===//
//                                AtomicCmpXchgInst Class
//===----------------------------------------------------------------------===//

/// An instruction that atomically checks whether a
/// specified value is in a memory location, and, if it is, stores a new value
/// there. The value returned by this instruction is a pair containing the
/// original value as first element, and an i1 indicating success (true) or
/// failure (false) as second element.
///</doc>
<fun r='_ZN4llvm17AtomicCmpXchgInst4InitEPNS_5ValueES2_S2_NS_5AlignENS_14AtomicOrderingES4_h'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst9cloneImplEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInstC1EPNS_5ValueES2_S2_NS_5AlignENS_14AtomicOrderingES4_hPNS_11InstructionE'/>
<fun r='_ZN4llvm17AtomicCmpXchgInstC1EPNS_5ValueES2_S2_NS_5AlignENS_14AtomicOrderingES4_hPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17AtomicCmpXchgInstnwEm'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst8getAlignEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst12setAlignmentENS_5AlignE'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst10isVolatileEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst11setVolatileEb'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst6isWeakEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst7setWeakEb'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst10getOperandEj'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst10setOperandEjPNS_5ValueE'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst8op_beginEv'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst8op_beginEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst6op_endEv'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst6op_endEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst2OpEv'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst2OpEv'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst14getNumOperandsEv'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst18getSuccessOrderingEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst18setSuccessOrderingENS_14AtomicOrderingE'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst18getFailureOrderingEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst18setFailureOrderingENS_14AtomicOrderingE'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst14getSyncScopeIDEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst14setSyncScopeIDEh'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst17getPointerOperandEv'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst17getPointerOperandEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst22getPointerOperandIndexEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst17getCompareOperandEv'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst17getCompareOperandEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst16getNewValOperandEv'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst16getNewValOperandEv'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst22getPointerAddressSpaceEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst27getStrongestFailureOrderingENS_14AtomicOrderingE'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst7classofEPKNS_11InstructionE'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst7classofEPKNS_5ValueE'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst15setSubclassDataENT_4TypeE'/>
<mbr r='llvm::AtomicCmpXchgInst::SSID' o='480' t='SyncScope::ID'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst8op_beginEv'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst8op_beginEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst6op_endEv'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst6op_endEv'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst10getOperandEj'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst10setOperandEjPNS_5ValueE'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst14getNumOperandsEv'/>
<fun r='_ZN4llvm17AtomicCmpXchgInst2OpEv'/>
<fun r='_ZNK4llvm17AtomicCmpXchgInst2OpEv'/>
