<dec f='halide/llvm-install/include/llvm/Transforms/Utils/ModuleUtils.h' l='112' type='std::string llvm::getUniqueModuleId(llvm::Module * M)'/>
<doc f='halide/llvm-install/include/llvm/Transforms/Utils/ModuleUtils.h' l='102'>/// Produce a unique identifier for this module by taking the MD5 sum of
/// the names of the module&apos;s strong external symbols that are not comdat
/// members.
///
/// This identifier is normally guaranteed to be unique, or the program would
/// fail to link due to multiply defined symbols.
///
/// If the module has no strong external symbols (such a module may still have a
/// semantic effect if it performs global initialization), we cannot produce a
/// unique identifier for this module, so we return the empty string.</doc>
