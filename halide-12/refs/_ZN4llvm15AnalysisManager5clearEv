<def f='halide/llvm-install/include/llvm/IR/PassManager.h' l='776' ll='779' type='void llvm::AnalysisManager::clear()'/>
<use f='halide/llvm-install/include/llvm/Analysis/LoopAnalysisManager.h' l='114' u='c' c='_ZN4llvm25InnerAnalysisManagerProxyINS_15AnalysisManagerINS_4LoopEJRNS_27LoopStandardAnalysisResultsEEEENS_8FunctionEJEE6ResultD1Ev'/>
<doc f='halide/llvm-install/include/llvm/IR/PassManager.h' l='770'>/// Clear all analysis results cached by this AnalysisManager.
  ///
  /// Like \c clear(IRUnitT&amp;), this doesn&apos;t invalidate the results; it simply
  /// deletes them.  This lets you clean up the AnalysisManager when the set of
  /// IR units itself has potentially changed, and thus we can&apos;t even look up a
  /// a result and invalidate/clear it directly.</doc>
