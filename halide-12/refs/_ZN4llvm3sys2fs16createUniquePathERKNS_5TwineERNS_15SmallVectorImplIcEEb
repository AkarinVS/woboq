<dec f='halide/llvm-install/include/llvm/Support/FileSystem.h' l='783' type='void llvm::sys::fs::createUniquePath(const llvm::Twine &amp; Model, SmallVectorImpl&lt;char&gt; &amp; ResultPath, bool MakeAbsolute)'/>
<doc f='halide/llvm-install/include/llvm/Support/FileSystem.h' l='765'>/// Create a potentially unique file name but does not create it.
///
/// Generates a unique path suitable for a temporary file but does not
/// open or create the file. The name is based on \a Model with &apos;%&apos;
/// replaced by a random char in [0-9a-f]. If \a MakeAbsolute is true
/// then the system&apos;s temp directory is prepended first. If \a MakeAbsolute
/// is false the current directory will be used instead.
///
/// This function does not check if the file exists. If you want to be sure
/// that the file does not yet exist, you should use use enough &apos;%&apos; characters
/// in your model to ensure this. Each &apos;%&apos; gives 4-bits of entropy so you can
/// use 32 of them to get 128 bits of entropy.
///
/// Example: clang-%%-%%-%%-%%-%%.s =&gt; clang-a0-b1-c2-d3-e4.s
///
/// @param Model Name to base unique path off of.
/// @param ResultPath Set to the file&apos;s path.
/// @param MakeAbsolute Whether to use the system temp directory.</doc>
