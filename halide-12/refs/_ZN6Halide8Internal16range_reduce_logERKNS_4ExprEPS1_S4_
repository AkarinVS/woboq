<def f='halide/src/IROperator.cpp' l='709' ll='736' type='void Halide::Internal::range_reduce_log(const Halide::Expr &amp; input, Halide::Expr * reduced, Halide::Expr * exponent)'/>
<use f='halide/src/IROperator.cpp' l='753' u='c' c='_ZN6Halide8Internal10halide_logERKNS_4ExprE'/>
<use f='halide/src/IROperator.cpp' l='1263' u='c' c='_ZN6Halide8fast_logERKNS_4ExprE'/>
<doc f='halide/src/IROperator.cpp' l='706'>// Fast math ops based on those from Syrah (http://github.com/boulos/syrah). Thanks, Solomon!

// Factor a float into 2^exponent * reduced, where reduced is between 0.75 and 1.5</doc>
