<def f='halide/build-apps/eigen/Eigen/src/Core/GenericPacketMath.h' l='395' ll='396' macro='1' type='Packet Eigen::internal::ploaddup(const typename unpacket_traits&lt;Packet&gt;::type * from)'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/arch/SSE/PacketMath.h' l='581' ll='584' type='Eigen::internal::Packet4f Eigen::internal::ploaddup(const float * from)'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/arch/SSE/PacketMath.h' l='585' ll='586' type='Eigen::internal::Packet2d Eigen::internal::ploaddup(const double * from)'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/arch/SSE/PacketMath.h' l='587' ll='592' type='Eigen::internal::Packet4i Eigen::internal::ploaddup(const int * from)'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/arch/SSE/PacketMath.h' l='596' ll='600' type='Eigen::internal::Packet16b Eigen::internal::ploaddup(const bool * from)'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/arch/SSE/Complex.h' l='113' type='Eigen::internal::Packet2cf Eigen::internal::ploaddup(const std::complex&lt;float&gt; * from)'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/arch/SSE/Complex.h' l='306' type='Eigen::internal::Packet1cd Eigen::internal::ploaddup(const std::complex&lt;double&gt; * from)'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/arch/SSE/PacketMath.h' l='594'>// Loads 8 bools from memory and returns the packet
// {b0, b0, b1, b1, b2, b2, b3, b3, b4, b4, b5, b5, b6, b6, b7, b7}</doc>
