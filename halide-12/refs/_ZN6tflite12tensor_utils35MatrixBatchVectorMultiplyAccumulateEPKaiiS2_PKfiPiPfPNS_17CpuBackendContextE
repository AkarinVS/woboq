<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/tensor_utils.h' l='42' type='void tflite::tensor_utils::MatrixBatchVectorMultiplyAccumulate(const int8_t *__restrict matrix, const int m_rows, const int m_cols, const int8_t *__restrict vectors, const float *__restrict scaling_factors, int n_batch, int32_t *__restrict scratch, float *__restrict result, tflite::CpuBackendContext *__restrict context)'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/optimized/optimized_ops.h' l='1414' u='c' c='_ZN6tflite13optimized_ops10HybridConvERKNS_10ConvParamsEPfRKNS_12RuntimeShapeEPKaS7_S9_S7_PKfS7_PiS7_S4_S7_PaPNS_17CpuBackendContextE'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/tensor_utils.h' l='39'>// Same as the function above, but provide a scratch buffer for the
// int8 x int8 -&gt; int32 and a CpuBackendContext for the accumulator
// computation.</doc>
<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/reference/portable_tensor_utils.h' l='87' ll='96' type='void tflite::tensor_utils::MatrixBatchVectorMultiplyAccumulate(const int8_t *__restrict matrix, const int m_rows, const int m_cols, const int8_t *__restrict vector, const float * scaling_factors, int n_batch, int32_t * scratch, float *__restrict result, tflite::CpuBackendContext * context)'/>
