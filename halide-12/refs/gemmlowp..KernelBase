<def f='halide/build-apps/gemmlowp/internal/kernel.h' l='217' ll='229'/>
<ovr f='halide/build-apps/gemmlowp/internal/kernel_reference.h' l='33' c='gemmlowp::ReferenceKernel'/>
<use f='halide/build-apps/gemmlowp/internal/kernel_reference.h' l='33'/>
<use f='halide/build-apps/gemmlowp/internal/compute.h' l='34'/>
<use f='halide/build-apps/gemmlowp/internal/compute.h' l='42' c='_ZN8gemmlowp11ComputeImplC1ERKNS_10KernelBaseERKNS_11BlockParamsEPT1_RKT_RKT0_'/>
<use f='halide/build-apps/gemmlowp/internal/compute.h' l='106' c='_ZN8gemmlowp7ComputeERKNS_10KernelBaseERKNS_11BlockParamsEPT1_RKT_RKT0_i'/>
<use f='halide/build-apps/gemmlowp/internal/single_thread_gemm.h' l='67' c='_ZN8gemmlowp16SingleThreadGemmEPNS_23SingleThreadGemmContextERKNS_10KernelBaseERKNS_9MatrixMapIKT0_XT3_EEERKNS5_IS7_XT4_EEEPNS5_IT1_XT5_EEERKT6_RKT7_RKT8_'/>
<use f='halide/build-apps/gemmlowp/internal/multi_thread_gemm.h' l='469' c='_ZN8gemmlowp21GemmWithPackedRhsTaskC1EPT9_RKNS_10KernelBaseERKNS_9MatrixMapIKT0_XT3_EEERKNS_15PackedSideBlockINT_3RhsEEEPNS6_IT1_XT5_EEERKNS_17MatrixB727101'/>
<use f='halide/build-apps/gemmlowp/internal/multi_thread_gemm.h' l='527'/>
<use f='halide/build-apps/gemmlowp/internal/multi_thread_gemm.h' l='636' c='_ZN8gemmlowp15MultiThreadGemmEPT9_RKNS_10KernelBaseERKNS_9MatrixMapIKT0_XT3_EEERKNS5_IS7_XT4_EEEPNS5_IT1_XT5_EEERKT6_RKT7_RKT8_'/>
<size>8</size>
<doc f='halide/build-apps/gemmlowp/internal/kernel.h' l='213'>// KernelBase is the virtual base class below all kernels.
// The idea is that we don&apos;t need to templatize all our code on the exact
// kernel type; we only need to templatize on kernel format. Kernels
// sharing the same format can thus share the same packing/unpacking code.</doc>
<fun r='_ZNK8gemmlowp10KernelBase4NameEv'/>
<fun r='_ZNK8gemmlowp10KernelBase3RunEPimmPKhS3_mm'/>
<fun r='_ZN8gemmlowp10KernelBaseD1Ev'/>
