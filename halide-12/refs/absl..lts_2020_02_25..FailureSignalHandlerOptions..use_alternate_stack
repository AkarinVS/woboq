<dec f='halide/build-apps/abseil-cpp/absl/debugging/failure_signal_handler.h' l='68' type='bool'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/failure_signal_handler.cc' l='199' u='r' c='_ZN4absl14lts_2020_02_25L24InstallOneFailureHandlerEPNS0_17FailureSignalDataEPFviP9siginfo_tPvE'/>
<offset>8</offset>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/failure_signal_handler.h' l='62'>// If true, try to run signal handlers on an alternate stack (if supported on
  // the given platform). An alternate stack is useful for program crashes due
  // to a stack overflow; by running on a alternate stack, the signal handler
  // may run even when normal stack space has been exausted. The downside of
  // using an alternate stack is that extra memory for the alternate stack needs
  // to be pre-allocated.</doc>
