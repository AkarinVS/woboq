<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFFT.h' l='504' u='r' c='_ZN5Eigen15TensorEvaluatorIKNS_11TensorFFTOpIT_T0_XT2_EXT3_EEET1_E18butterfly_1D_mergeEPSt7complexINS_9NumTraitsINS4_6ScalarEE4RealEENS4_5IndexESF_'/>
<dec f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFFT.h' l='595' type='const Eigen::TensorEvaluator&lt;const TensorFFTOp&lt;type-parameter-0-0, type-parameter-0-1, FFTResultType, FFTDir&gt;, type-parameter-0-2&gt;::RealScalar [32]'/>
<doc f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFFT.h' l='593'>// This will support a maximum FFT size of 2^32 for each dimension
  // m_sin_PI_div_n_LUT[i] = (-2) * std::sin(M_PI / std::pow(2,i)) ^ 2;</doc>
