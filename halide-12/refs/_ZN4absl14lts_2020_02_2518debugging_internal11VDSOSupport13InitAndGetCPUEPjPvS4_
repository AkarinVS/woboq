<dec f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.h' l='128' type='static long absl::lts_2020_02_25::debugging_internal::VDSOSupport::InitAndGetCPU(unsigned int * cpu, void * cache, void * unused)'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='48' u='a'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='130' u='a' c='_ZN4absl14lts_2020_02_2518debugging_internal11VDSOSupport7SetBaseEPKv'/>
<def f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='160' ll='166' type='static long absl::lts_2020_02_25::debugging_internal::VDSOSupport::InitAndGetCPU(unsigned int * cpu, void * x, void * y)'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='164' u='a' c='_ZN4absl14lts_2020_02_2518debugging_internal11VDSOSupport13InitAndGetCPUEPjPvS4_'/>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='159'>// Use fast __vdso_getcpu if available.</doc>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='160'>// NOLINT(runtime/int)</doc>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.h' l='124'>// NOLINT on &apos;long&apos; because these routines mimic kernel api.
  // The &apos;cache&apos; parameter may be used by some versions of the kernel,
  // and should be nullptr or point to a static buffer containing at
  // least two &apos;long&apos;s.</doc>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.h' l='128'>// NOLINT &apos;long&apos;.</doc>
