<dec f='halide/build-apps/eigen/Eigen/src/Core/functors/UnaryFunctors.h' l='129' type='0'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/functors/UnaryFunctors.h' l='121'>// Yes the cost is zero even for complexes because in most cases for which
    // the cost is used, conjugation turns to be a no-op. Some examples:
    //   cost(a*conj(b)) == cost(a*b)
    //   cost(a+conj(b)) == cost(a+b)
    //   &lt;etc.
    // If we don&apos;t set it to zero, then:
    //   A.conjugate().lazyProduct(B.conjugate())
    // will bake its operands. We definitely don&apos;t want that!</doc>
