<def f='halide/llvm-install/include/llvm/ADT/ArrayRef.h' l='313' ll='314' type='void llvm::MutableArrayRef::MutableArrayRef&lt;T&gt;(T * data, size_t length)'/>
<use f='halide/llvm-install/include/llvm/ADT/BitVector.h' l='836' u='c' c='_ZN4llvm9BitVector8allocateEm'/>
<use f='halide/llvm-install/include/llvm/ADT/BitVector.h' l='876' u='c' c='_ZN4llvm9BitVector4growEj'/>
<doc f='halide/llvm-install/include/llvm/ADT/ArrayRef.h' l='312'>/// Construct a MutableArrayRef from a pointer and length.</doc>
<doc f='halide/llvm-install/include/llvm/ADT/ArrayRef.h' l='313'>/*implicit*/</doc>
