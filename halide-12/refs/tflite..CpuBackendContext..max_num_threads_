<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_context.h' l='50' u='r' c='_ZNK6tflite17CpuBackendContext15max_num_threadsEv'/>
<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_context.h' l='110' type='int'/>
<offset>224</offset>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_context.h' l='101'>// The maximum of threads used for parallelizing TfLite ops. However,
  // cpu_backend_threadpool::Execute creates as many threads as it&apos;s
  // asked to, regardless of this. Typically a call site would query
  // cpu_backend_context-&gt;max_num_threads() and used that to determine
  // the number of tasks to create and to give to
  // cpu_backend_threadpool::Execute.
  //
  // This value also gets propagated to back-ends, where it plays the same
  // information-only role.</doc>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_context.cc' l='144' u='w' c='_ZN6tflite17CpuBackendContext16SetMaxNumThreadsEi'/>
