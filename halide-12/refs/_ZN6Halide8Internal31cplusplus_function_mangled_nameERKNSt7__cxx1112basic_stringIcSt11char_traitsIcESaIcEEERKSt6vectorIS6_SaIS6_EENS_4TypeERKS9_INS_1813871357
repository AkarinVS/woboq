<dec f='halide/halide-install/include/Halide.h' l='20864' type='std::string Halide::Internal::cplusplus_function_mangled_name(const std::string &amp; name, const std::vector&lt;std::string&gt; &amp; namespaces, Halide::Type return_type, const std::vector&lt;ExternFuncArgument&gt; &amp; args, const Halide::Target &amp; target)'/>
<doc f='halide/halide-install/include/Halide.h' l='20860'>/** Return the mangled C++ name for a function.
 * The target parameter is used to decide on the C++
 * ABI/mangling style to use.
 */</doc>
<dec f='halide/build/include/Halide.h' l='20864' type='std::string Halide::Internal::cplusplus_function_mangled_name(const std::string &amp; name, const std::vector&lt;std::string&gt; &amp; namespaces, Halide::Type return_type, const std::vector&lt;ExternFuncArgument&gt; &amp; args, const Halide::Target &amp; target)'/>
<doc f='halide/build/include/Halide.h' l='20860'>/** Return the mangled C++ name for a function.
 * The target parameter is used to decide on the C++
 * ABI/mangling style to use.
 */</doc>
<dec f='halide/src/CPlusPlusMangle.h' l='24' type='std::string Halide::Internal::cplusplus_function_mangled_name(const std::string &amp; name, const std::vector&lt;std::string&gt; &amp; namespaces, Halide::Type return_type, const std::vector&lt;ExternFuncArgument&gt; &amp; args, const Halide::Target &amp; target)'/>
<def f='halide/src/CPlusPlusMangle.cpp' l='606' ll='614' type='std::string Halide::Internal::cplusplus_function_mangled_name(const std::string &amp; name, const std::vector&lt;std::string&gt; &amp; namespaces, Halide::Type return_type, const std::vector&lt;ExternFuncArgument&gt; &amp; args, const Halide::Target &amp; target)'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='818' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='821' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='824' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='827' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='831' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='841' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='845' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='865' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='871' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='877' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='880' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='887' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='898' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='912' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='926' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='974' u='c' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1000' u='c' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1026' u='c' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1051' u='c' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1073' u='c' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1089' u='c' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<doc f='halide/src/CPlusPlusMangle.h' l='20'>/** Return the mangled C++ name for a function.
 * The target parameter is used to decide on the C++
 * ABI/mangling style to use.
 */</doc>
<use f='halide/src/CodeGen_LLVM.cpp' l='370' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_117get_mangled_namesERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_11LinkageTypeENS_12NameManglingERKSt6vec9383748'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='374' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_117get_mangled_namesERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_11LinkageTypeENS_12NameManglingERKSt6vec9383748'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='375' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_117get_mangled_namesERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_11LinkageTypeENS_12NameManglingERKSt6vec9383748'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='3265' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_4CallE'/>
