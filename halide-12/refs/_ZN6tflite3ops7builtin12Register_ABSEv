<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/elementwise.cc' l='298' ll='306' type='TfLiteRegistration * tflite::ops::builtin::Register_ABS()'/>
<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/builtin_op_kernels.h' l='32' type='TfLiteRegistration * tflite::ops::builtin::Register_ABS()'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/register.cc' l='37' u='c' c='_ZN6tflite3ops7builtin17BuiltinOpResolverC1Ev'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/builtin_op_kernels.h' l='24'>// Forward declaration of all builtin op kernel registration methods. These
// registrations are included with the standard `BuiltinOpResolver`.
//
// This header is particularly useful in cases where only a subset of ops are
// needed. In such cases, the client can selectively add only the registrations
// their model requires, using a custom `OpResolver` or `MutableOpResolver`.
// Selective registration in turn allows the linker to strip unused kernels.</doc>
<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/register_ref.cc' l='39' type='TfLiteRegistration * tflite::ops::builtin::Register_ABS()'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/register_ref.cc' l='197' u='c' c='_ZN6tflite3ops7builtin20BuiltinRefOpResolverC1Ev'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/register_ref.cc' l='37'>// TODO(yunluli): Some of the registries, e.g. Tanh(), could only invoke
// optimized kernels. Add a _REF() variant for them.</doc>
