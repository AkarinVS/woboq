<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='261'/>
<def f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='353' ll='376'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='363' c='_ZN4absl14lts_2020_02_254Cord12CharIteratorppEv'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='364' c='_ZN4absl14lts_2020_02_254Cord12CharIteratorppEi'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='365' c='_ZNK4absl14lts_2020_02_254Cord12CharIteratoreqERKS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='366' c='_ZNK4absl14lts_2020_02_254Cord12CharIteratorneERKS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='383' c='_ZN4absl14lts_2020_02_254Cord14AdvanceAndReadEPNS1_12CharIteratorEm'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='390' c='_ZN4absl14lts_2020_02_254Cord7AdvanceEPNS1_12CharIteratorEm'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='395' c='_ZN4absl14lts_2020_02_254Cord14ChunkRemainingERKNS1_12CharIteratorE'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='398' c='_ZNK4absl14lts_2020_02_254Cord10char_beginEv'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='400' c='_ZNK4absl14lts_2020_02_254Cord8char_endEv'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='410' c='_ZNK4absl14lts_2020_02_254Cord9CharRange5beginEv'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='411' c='_ZNK4absl14lts_2020_02_254Cord9CharRange3endEv'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='981' c='_ZN4absl14lts_2020_02_254Cord12CharIteratorppEv'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='990' c='_ZN4absl14lts_2020_02_254Cord12CharIteratorppEi'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='991' c='_ZN4absl14lts_2020_02_254Cord12CharIteratorppEi'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='996' c='_ZNK4absl14lts_2020_02_254Cord12CharIteratoreqERKS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='1000' c='_ZNK4absl14lts_2020_02_254Cord12CharIteratorneERKS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='1012' c='_ZN4absl14lts_2020_02_254Cord14AdvanceAndReadEPNS1_12CharIteratorEm'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='1017' c='_ZN4absl14lts_2020_02_254Cord7AdvanceEPNS1_12CharIteratorEm'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='1022' c='_ZN4absl14lts_2020_02_254Cord14ChunkRemainingERKNS1_12CharIteratorE'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='1026' c='_ZNK4absl14lts_2020_02_254Cord10char_beginEv'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='1027' c='_ZNK4absl14lts_2020_02_254Cord10char_beginEv'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='1030' c='_ZNK4absl14lts_2020_02_254Cord8char_endEv'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='1030' c='_ZNK4absl14lts_2020_02_254Cord8char_endEv'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='1032' c='_ZNK4absl14lts_2020_02_254Cord9CharRange5beginEv'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='1036' c='_ZNK4absl14lts_2020_02_254Cord9CharRange3endEv'/>
<size>72</size>
<doc f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='337'>// Type for iterating over the characters of a `Cord`. See comments for
  // `Cord::char_begin()`, `Cord::char_end()` and `Cord::Chars()` below for
  // preferred usage.
  //
  // Additional notes:
  //   * A `CharIterator` object is invalidated after any non-const
  //     operation on the `Cord` object over which it iterates.
  //   * Two `CharIterator` objects can be equality compared if and only if
  //     they remain valid and iterate over the same `Cord`.
  //   * The iterator keeps state that can grow for `Cord`s that contain many
  //     nodes and are imbalanced due to sharing. Prefer to pass this type by
  //     const reference instead of by value.
  //   * This type cannot be a forward iterator because a `Cord` can reuse
  //     sections of memory. This violates the requirement that if dereferencing
  //     two iterators returns the same object, the iterators must compare
  //     equal.</doc>
<fun r='_ZN4absl14lts_2020_02_254Cord12CharIteratorC1Ev'/>
<fun r='_ZN4absl14lts_2020_02_254Cord12CharIteratorppEv'/>
<fun r='_ZN4absl14lts_2020_02_254Cord12CharIteratorppEi'/>
<fun r='_ZNK4absl14lts_2020_02_254Cord12CharIteratoreqERKS2_'/>
<fun r='_ZNK4absl14lts_2020_02_254Cord12CharIteratorneERKS2_'/>
<fun r='_ZNK4absl14lts_2020_02_254Cord12CharIteratordeEv'/>
<fun r='_ZNK4absl14lts_2020_02_254Cord12CharIteratorptEv'/>
<fun r='_ZN4absl14lts_2020_02_254Cord12CharIteratorC1EPKS1_'/>
<mbr r='absl::lts_2020_02_25::Cord::CharIterator::chunk_iterator_' o='0' t='absl::lts_2020_02_25::Cord::ChunkIterator'/>
<fun r='_ZN4absl14lts_2020_02_254Cord12CharIteratorppEv'/>
<fun r='_ZN4absl14lts_2020_02_254Cord12CharIteratorppEi'/>
<fun r='_ZNK4absl14lts_2020_02_254Cord12CharIteratoreqERKS2_'/>
<fun r='_ZNK4absl14lts_2020_02_254Cord12CharIteratorneERKS2_'/>
<fun r='_ZNK4absl14lts_2020_02_254Cord12CharIteratordeEv'/>
<fun r='_ZNK4absl14lts_2020_02_254Cord12CharIteratorptEv'/>
