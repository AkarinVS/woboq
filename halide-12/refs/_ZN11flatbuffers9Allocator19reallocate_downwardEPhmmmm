<def f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='601' ll='610' type='uint8_t * flatbuffers::Allocator::reallocate_downward(uint8_t * old_p, size_t old_size, size_t new_size, size_t in_use_back, size_t in_use_front)'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='657' u='c' c='_ZN11flatbuffers18ReallocateDownwardEPNS_9AllocatorEPhmmmm'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='659' u='c' c='_ZN11flatbuffers18ReallocateDownwardEPNS_9AllocatorEPhmmmm'/>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='596'>// Reallocate `new_size` bytes of memory, replacing the old region of size
  // `old_size` at `p`. In contrast to a normal realloc, this grows downwards,
  // and is intended specifcally for `vector_downward` use.
  // `in_use_back` and `in_use_front` indicate how much of `old_size` is
  // actually in use at each end, and needs to be copied.</doc>
