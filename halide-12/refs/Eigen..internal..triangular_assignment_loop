<use f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='825' c='_ZN5Eigen8internal31call_triangular_assignment_loopERT1_RKT2_RKT3_'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='871' ll='896'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='887' c='_ZN5Eigen8internal26triangular_assignment_loop3runERT_'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='899' ll='904'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='912' ll='943'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='898'>// prevent buggy user code from causing an infinite recursion</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='908'>// TODO: experiment with a recursive assignment procedure splitting the current
//       triangular part into one rectangular and two triangular parts.</doc>
<fun r='_ZN5Eigen8internal26triangular_assignment_loop3runERT_'/>
<fun r='_ZN5Eigen8internal26triangular_assignment_loopIT_XT0_ELi0EXT1_EE3runERS2_'/>
<fun r='_ZN5Eigen8internal26triangular_assignment_loopIT_XT0_ELin1EXT1_EE3runERS2_'/>
