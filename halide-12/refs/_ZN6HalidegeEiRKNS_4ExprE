<dec f='halide/halide-install/include/Halide.h' l='7391' type='Halide::Expr Halide::operator&gt;=(int a, const Halide::Expr &amp; b)'/>
<doc f='halide/halide-install/include/Halide.h' l='7387'>/** Return a boolean expression that tests whether a constant integer
 * is greater than or equal to an expression. Coerces the integer to the
 * type of the expression. Errors if the integer is not representable
 * in that type. */</doc>
<dec f='halide/build/include/Halide.h' l='7391' type='Halide::Expr Halide::operator&gt;=(int a, const Halide::Expr &amp; b)'/>
<doc f='halide/build/include/Halide.h' l='7387'>/** Return a boolean expression that tests whether a constant integer
 * is greater than or equal to an expression. Coerces the integer to the
 * type of the expression. Errors if the integer is not representable
 * in that type. */</doc>
<dec f='halide/src/IROperator.h' l='586' type='Halide::Expr Halide::operator&gt;=(int a, const Halide::Expr &amp; b)'/>
<doc f='halide/src/IROperator.h' l='582'>/** Return a boolean expression that tests whether a constant integer
 * is greater than or equal to an expression. Coerces the integer to the
 * type of the expression. Errors if the integer is not representable
 * in that type. */</doc>
<def f='halide/src/IROperator.cpp' l='1742' ll='1747' type='Halide::Expr Halide::operator&gt;=(int a, const Halide::Expr &amp; b)'/>
