<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/tensor_utils.h' l='135' type='void tflite::tensor_utils::MatrixBatchVectorMultiplyAccumulate(const int8_t * input, const int32_t * bias, const int8_t * input_to_gate_weights, int32_t multiplier, int32_t shift, int32_t n_batch, int32_t n_input, int32_t n_output, int32_t output_zp, int32_t * scratch, int8_t * output, tflite::CpuBackendContext * context)'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/tensor_utils.h' l='110'>// Multiplies a matrix by a &quot;batched&quot; vector (i.e. a matrix with a batch
// dimension composed by input vectors independent from each other). The result
// of the multiplication is accumulated to the passed result buffer.
// More specifically, for a matrix M of shape [n, i] and a batched-vector
// of shape [i, batch] it will first compute the product of shape [n, batch].
// This product will be accumulated to the result buffer,
// Parameters:
//     - input: batch vector of size n_batch * n_input
//     - bias:  vector of size b_input
//     - input_to_gate_weights: matrix of size n_input * n_output
//     - multiplier: scalar
//     - shift: scalar
//     - n_batch: the batch size
//     - n_input: the input size
//     - n_output: the output size
//     - output_zp: the zero point of the output.
//     - scratch: batch vector of size n_batch * n_output
//     - output: the 8 bit output
// Notes:
//     - this is used for projection matmul.
//     - multiplier and shift combined gives the scale.
//     - assumes input zero point is 0.
//     - scratch is created for optimization purpose only.
// TODO(b/152066492): this can be removed if some future optimization
// work makes it unnecessary.</doc>
<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/reference/portable_tensor_utils.h' l='133' ll='141' type='void tflite::tensor_utils::MatrixBatchVectorMultiplyAccumulate(const int8_t * input, const int32_t * bias, const int8_t * input_to_gate_weights, int32_t multiplier, int32_t shift, int32_t n_batch, int32_t n_input, int32_t n_output, int32_t output_zp, int32_t * scratch, int8_t * output, tflite::CpuBackendContext * context)'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/lstm_eval.cc' l='636' u='c' c='_ZN6tflite3ops7builtin9lstm_eval12_GLOBAL__N_132CalculateLstmOutputInteger8x8_16EiiiPKsiS5_iiiPKaiiPKiiaPaPNS_17CpuBackendContextEPsSA_Pi'/>
