<use f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='536' u='c' c='_ZNK11flexbuffers9Reference8ToStringB5cxx11Ev'/>
<def f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='544' ll='594' type='void flexbuffers::Reference::ToString(bool strings_quoted, bool keys_quoted, std::string &amp; s) const'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='575' u='c' c='_ZNK11flexbuffers9Reference8ToStringEbbRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='577' u='c' c='_ZNK11flexbuffers9Reference8ToStringEbbRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='540'>// Convert any type to a JSON-like string. strings_quoted determines if
  // string values at the top level receive &quot;&quot; quotes (inside other values
  // they always do). keys_quoted determines if keys are quoted, at any level.
  // TODO(wvo): add further options to have indentation/newlines.</doc>
<use f='halide/build-apps/flatbuffers/src/idl_gen_text.cpp' l='270' u='c' c='_ZN11flatbuffers11JsonPrinter14GenFieldOffsetERKNS_8FieldDefEPKNS_5TableEbiPKh'/>
<use f='halide/build-apps/flatbuffers/src/idl_gen_text.cpp' l='387' u='c' c='_ZN11flatbuffers16GenerateTextFileERKNS_6ParserERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_'/>
