<dec f='halide/build-apps/abseil-cpp/absl/time/time.h' l='372' type='absl::lts_2020_02_25::Duration absl::lts_2020_02_25::InfiniteDuration()'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='427' u='c' c='_ZN4absl14lts_2020_02_257SecondsET_'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='432' u='c' c='_ZN4absl14lts_2020_02_257SecondsET_'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='432' u='c' c='_ZN4absl14lts_2020_02_257SecondsET_'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='433' u='c' c='_ZN4absl14lts_2020_02_257SecondsET_'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1407' u='c' c='_ZN4absl14lts_2020_02_2513time_internal9FromInt64ElSt5ratioILl60ELl1EE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1407' u='c' c='_ZN4absl14lts_2020_02_2513time_internal9FromInt64ElSt5ratioILl60ELl1EE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1413' u='c' c='_ZN4absl14lts_2020_02_2513time_internal9FromInt64ElSt5ratioILl3600ELl1EE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1413' u='c' c='_ZN4absl14lts_2020_02_2513time_internal9FromInt64ElSt5ratioILl3600ELl1EE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1526' u='c' c='_ZN4absl14lts_2020_02_25ngENS0_8DurationE'/>
<def f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1537' ll='1540' type='absl::lts_2020_02_25::Duration absl::lts_2020_02_25::InfiniteDuration()'/>
<doc f='halide/build-apps/abseil-cpp/absl/time/time.h' l='338'>// InfiniteDuration()
//
// Returns an infinite `Duration`.  To get a `Duration` representing negative
// infinity, use `-InfiniteDuration()`.
//
// Duration arithmetic overflows to +/- infinity and saturates. In general,
// arithmetic with `Duration` infinities is similar to IEEE 754 infinities
// except where IEEE 754 NaN would be involved, in which case +/-
// `InfiniteDuration()` is used in place of a &quot;nan&quot; Duration.
//
// Examples:
//
//   constexpr absl::Duration inf = absl::InfiniteDuration();
//   const absl::Duration d = ... any finite duration ...
//
//   inf == inf + inf
//   inf == inf + d
//   inf == inf - inf
//   -inf == d - inf
//
//   inf == d * 1e100
//   inf == inf / 2
//   0 == d / inf
//   INT64_MAX == inf / d
//
//   d &lt; inf
//   -inf &lt; d
//
//   // Division by zero returns infinity, or INT64_MIN/MAX where appropriate.
//   inf == d / 0
//   INT64_MAX == d / absl::ZeroDuration()
//
// The examples involving the `/` operator above also apply to `IDivDuration()`
// and `FDivDuration()`.</doc>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='162' u='c' c='_ZN4absl14lts_2020_02_2512_GLOBAL__N_120MakeDurationFromU128ENS0_7uint128Eb'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='162' u='c' c='_ZN4absl14lts_2020_02_2512_GLOBAL__N_120MakeDurationFromU128ENS0_7uint128Eb'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='202' u='c' c='_ZN4absl14lts_2020_02_2512_GLOBAL__N_112SafeAddRepHiEddPNS0_8DurationE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='206' u='c' c='_ZN4absl14lts_2020_02_2512_GLOBAL__N_112SafeAddRepHiEddPNS0_8DurationE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='367' u='c' c='_ZN4absl14lts_2020_02_2513time_internal12IDivDurationEbNS0_8DurationES2_PS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='367' u='c' c='_ZN4absl14lts_2020_02_2513time_internal12IDivDurationEbNS0_8DurationES2_PS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='416' u='c' c='_ZN4absl14lts_2020_02_258DurationpLES1_'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='416' u='c' c='_ZN4absl14lts_2020_02_258DurationpLES1_'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='424' u='c' c='_ZN4absl14lts_2020_02_258DurationmIES1_'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='424' u='c' c='_ZN4absl14lts_2020_02_258DurationmIES1_'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='435' u='c' c='_ZN4absl14lts_2020_02_258DurationmIES1_'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='435' u='c' c='_ZN4absl14lts_2020_02_258DurationmIES1_'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='447' u='c' c='_ZN4absl14lts_2020_02_258DurationmLEl'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='447' u='c' c='_ZN4absl14lts_2020_02_258DurationmLEl'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='455' u='c' c='_ZN4absl14lts_2020_02_258DurationmLEd'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='455' u='c' c='_ZN4absl14lts_2020_02_258DurationmLEd'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='463' u='c' c='_ZN4absl14lts_2020_02_258DurationdVEl'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='463' u='c' c='_ZN4absl14lts_2020_02_258DurationdVEl'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='471' u='c' c='_ZN4absl14lts_2020_02_258DurationdVEd'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='471' u='c' c='_ZN4absl14lts_2020_02_258DurationdVEd'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='775' u='c' c='_ZN4absl14lts_2020_02_2514FormatDurationB5cxx11ENS0_8DurationE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='889' u='c' c='_ZN4absl14lts_2020_02_2513ParseDurationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPNS0_8DurationE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.cc' l='76' u='c' c='_ZN4absl14lts_2020_02_2512_GLOBAL__N_123InfiniteFutureBreakdownEv'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.cc' l='93' u='c' c='_ZN4absl14lts_2020_02_2512_GLOBAL__N_121InfinitePastBreakdownEv'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.cc' l='105' u='c' c='_ZN4absl14lts_2020_02_2512_GLOBAL__N_123InfiniteFutureCivilInfoEv'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.cc' l='115' u='c' c='_ZN4absl14lts_2020_02_2512_GLOBAL__N_121InfinitePastCivilInfoEv'/>
