<dec f='halide/build-apps/abseil-cpp/absl/base/internal/thread_identity.h' l='181' type='void absl::lts_2020_02_25::base_internal::SetCurrentThreadIdentity(absl::lts_2020_02_25::base_internal::ThreadIdentity * identity, absl::lts_2020_02_25::base_internal::ThreadIdentityReclaimerFunction reclaimer)'/>
<def f='halide/build-apps/abseil-cpp/absl/base/internal/thread_identity.cc' l='67' ll='114' type='void absl::lts_2020_02_25::base_internal::SetCurrentThreadIdentity(absl::lts_2020_02_25::base_internal::ThreadIdentity * identity, absl::lts_2020_02_25::base_internal::ThreadIdentityReclaimerFunction reclaimer)'/>
<doc f='halide/build-apps/abseil-cpp/absl/base/internal/thread_identity.h' l='178'>// Sets the current thread identity to the given value.  &apos;reclaimer&apos; is a
// pointer to the global function for cleaning up instances on thread
// destruction.</doc>
<use f='halide/build-apps/abseil-cpp/absl/synchronization/internal/create_thread_identity.cc' l='132' u='c' c='_ZN4absl14lts_2020_02_2524synchronization_internal20CreateThreadIdentityEv'/>
