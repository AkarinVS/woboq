<def f='halide/build-apps/eigen/Eigen/src/QR/FullPivHouseholderQR.h' l='263' ll='267' type='Eigen::Index Eigen::FullPivHouseholderQR::dimensionOfKernel() const'/>
<doc f='halide/build-apps/eigen/Eigen/src/QR/FullPivHouseholderQR.h' l='257'>/** \returns the dimension of the kernel of the matrix of which *this is the QR decomposition.
      *
      * \note This method has to determine which pivots should be considered nonzero.
      *       For that, it uses the threshold value that you can control by calling
      *       setThreshold(const RealScalar&amp;).
      */</doc>
