<def f='halide/build-apps/eigen/Eigen/src/SVD/BDCSVD.h' l='140' ll='144' type='void Eigen::BDCSVD::BDCSVD&lt;MatrixType&gt;(const Eigen::BDCSVD::MatrixType &amp; matrix, unsigned int computationOptions = 0)'/>
<doc f='halide/build-apps/eigen/Eigen/src/SVD/BDCSVD.h' l='130'>/** \brief Constructor performing the decomposition of given matrix.
   *
   * \param matrix the matrix to decompose
   * \param computationOptions optional parameter allowing to specify if you want full or thin U or V unitaries to be computed.
   *                           By default, none is computed. This is a bit - field, the possible bits are #ComputeFullU, #ComputeThinU, 
   *                           #ComputeFullV, #ComputeThinV.
   *
   * Thin unitaries are only available if your matrix type has a Dynamic number of columns (for example MatrixXf). They also are not
   * available with the (non - default) FullPivHouseholderQR preconditioner.
   */</doc>
<use f='halide/build-apps/eigen/lapack/svd.cpp' l='56' u='c' c='zgesdd_'/>
