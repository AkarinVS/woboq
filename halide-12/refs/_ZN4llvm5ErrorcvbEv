<def f='halide/llvm-install/include/llvm/Support/Error.h' l='235' ll='238' type='bool llvm::Error::operator bool()'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='398' u='c' c='_ZN4llvm9ErrorList4joinENS_5ErrorES1_'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='400' u='c' c='_ZN4llvm9ErrorList4joinENS_5ErrorES1_'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='709' u='c' c='_ZN4llvm8cantFailENS_5ErrorEPKc'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='907' u='c' c='_ZN4llvm12handleErrorsENS_5ErrorEDpOT_'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='1030' u='c' c='_ZN4llvm11errorToBoolENS_5ErrorE'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='1065' u='c' c='_ZN4llvm19ErrorAsOutParameterC1EPNS_5ErrorE'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='1070' u='c' c='_ZN4llvm19ErrorAsOutParameterD1Ev'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='1340' u='c' c='_ZNK4llvm11ExitOnError10checkErrorENS_5ErrorE'/>
<use f='halide/llvm-install/include/llvm/ADT/fallible_iterator.h' l='85' u='c' c='_ZN4llvm17fallible_iterator3itrET_RNS_5ErrorE'/>
<use f='halide/llvm-install/include/llvm/Support/DataExtractor.h' l='67' u='c' c='_ZN4llvm13DataExtractor6CursorcvbEv'/>
<doc f='halide/llvm-install/include/llvm/Support/Error.h' l='232'>/// Bool conversion. Returns true if this Error is in a failure state,
  /// and false if it is in an accept state. If the error is in a Success state
  /// it will be considered checked.</doc>
<use f='halide/src/LLVM_Output.cpp' l='185' u='c' c='_ZN6Halide8Internal7Archive12_GLOBAL__N_118write_symbol_tableERSoRKSt6vectorIN4llvm16NewArchiveMemberESaIS6_EEbPSt3mapImS4_INS2_9PatchInfoESaISC_EESt45819532'/>
<use f='halide/src/LLVM_Output.cpp' l='581' u='c' c='_ZN6Halide21create_static_libraryERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EERKNS_6TargetERKS6_b'/>
