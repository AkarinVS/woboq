<dec f='halide/llvm-install/include/llvm/Analysis/IVDescriptors.h' l='285' type='static bool llvm::InductionDescriptor::isInductionPHI(llvm::PHINode * Phi, const llvm::Loop * L, llvm::ScalarEvolution * SE, llvm::InductionDescriptor &amp; D, const llvm::SCEV * Expr = nullptr, SmallVectorImpl&lt;llvm::Instruction *&gt; * CastsToIgnore = nullptr)'/>
<doc f='halide/llvm-install/include/llvm/Analysis/IVDescriptors.h' l='277'>/// Returns true if \p Phi is an induction in the loop \p L. If \p Phi is an
  /// induction, the induction descriptor \p D will contain the data describing
  /// this induction. If by some other means the caller has a better SCEV
  /// expression for \p Phi than the one returned by the ScalarEvolution
  /// analysis, it can be passed through \p Expr. If the def-use chain
  /// associated with the phi includes casts (that we know we can ignore
  /// under proper runtime checks), they are passed through \p CastsToIgnore.</doc>
