<dec f='halide/llvm-install/include/llvm/Support/raw_ostream.h' l='546' type='Expected&lt;sys::fs::FileLocker&gt; llvm::raw_fd_ostream::lock()'/>
<doc f='halide/llvm-install/include/llvm/Support/raw_ostream.h' l='526'>/// Locks the underlying file.
  ///
  /// @returns RAII object that releases the lock upon leaving the scope, if the
  ///          locking was successful. Otherwise returns corresponding
  ///          error code.
  ///
  /// The function blocks the current thread until the lock become available or
  /// error occurs.
  ///
  /// Possible use of this function may be as follows:
  ///
  ///   @code{.cpp}
  ///   if (auto L = stream.lock()) {
  ///     // ... do action that require file to be locked.
  ///   } else {
  ///     handleAllErrors(std::move(L.takeError()), [&amp;](ErrorInfoBase &amp;EIB) {
  ///       // ... handle lock error.
  ///     });
  ///   }
  ///   @endcode</doc>
