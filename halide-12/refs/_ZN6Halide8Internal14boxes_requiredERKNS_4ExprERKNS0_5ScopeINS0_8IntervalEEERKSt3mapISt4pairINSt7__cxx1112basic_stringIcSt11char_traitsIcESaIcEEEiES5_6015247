<dec f='halide/halide-install/include/Halide.h' l='4853' type='std::map&lt;std::string, Box&gt; Halide::Internal::boxes_required(const Halide::Expr &amp; e, const Scope&lt;Halide::Internal::Interval&gt; &amp; scope = Scope&lt;Interval&gt;::empty_scope(), const Halide::Internal::FuncValueBounds &amp; func_bounds = empty_func_value_bounds())'/>
<doc f='halide/halide-install/include/Halide.h' l='4848'>/** Compute rectangular domains large enough to cover all the &apos;Call&apos;s
 * to each function that occurs within a given statement or
 * expression. This is useful for figuring out what regions of things
 * to evaluate. */
// @{</doc>
<dec f='halide/build/include/Halide.h' l='4853' type='std::map&lt;std::string, Box&gt; Halide::Internal::boxes_required(const Halide::Expr &amp; e, const Scope&lt;Halide::Internal::Interval&gt; &amp; scope = Scope&lt;Interval&gt;::empty_scope(), const Halide::Internal::FuncValueBounds &amp; func_bounds = empty_func_value_bounds())'/>
<doc f='halide/build/include/Halide.h' l='4848'>/** Compute rectangular domains large enough to cover all the &apos;Call&apos;s
 * to each function that occurs within a given statement or
 * expression. This is useful for figuring out what regions of things
 * to evaluate. */
// @{</doc>
<dec f='halide/src/Bounds.h' l='113' type='std::map&lt;std::string, Box&gt; Halide::Internal::boxes_required(const Halide::Expr &amp; e, const Scope&lt;Halide::Internal::Interval&gt; &amp; scope = Scope&lt;Interval&gt;::empty_scope(), const Halide::Internal::FuncValueBounds &amp; func_bounds = empty_func_value_bounds())'/>
<doc f='halide/src/Bounds.h' l='108'>/** Compute rectangular domains large enough to cover all the &apos;Call&apos;s
 * to each function that occurs within a given statement or
 * expression. This is useful for figuring out what regions of things
 * to evaluate. */
// @{</doc>
<def f='halide/src/Bounds.cpp' l='2812' ll='2814' type='map&lt;std::string, Halide::Internal::Box&gt; Halide::Internal::boxes_required(const Halide::Expr &amp; e, const Scope&lt;Halide::Internal::Interval&gt; &amp; scope = Scope&lt;Interval&gt;::empty_scope(), const Halide::Internal::FuncValueBounds &amp; fb = empty_func_value_bounds())'/>
<use f='halide/src/BoundsInference.cpp' l='936' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_115BoundsInferenceC1ERKSt6vectorINS0_8FunctionESaIS4_EERKS3_IS6_SaIS6_EERKS3_ISt3setINS0_9FusedPairESt4lessISE_ESaISE_9408405'/>
<use f='halide/src/DerivativeUtils.cpp' l='272' u='c' c='_ZN6Halide8Internal16inference_boundsB5cxx11ERKSt6vectorINS_4FuncESaIS2_EERKS1_INS0_3BoxESaIS7_EE'/>
<use f='halide/src/autoschedulers/adams2019/FunctionDAG.cpp' l='908' u='c' c='_ZN6Halide8Internal13Autoscheduler11FunctionDAGC1ERKSt6vectorINS0_8FunctionESaIS4_EERKNS_13MachineParamsERKNS_6TargetE'/>
<use f='halide/src/autoschedulers/mullapudi2016/AutoSchedule.cpp' l='454' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118DependenceAnalysis16regions_requiredERKNS0_8FunctionEiRKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE1958793'/>
<use f='halide/src/autoschedulers/mullapudi2016/AutoSchedule.cpp' l='494' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118DependenceAnalysis16regions_requiredERKNS0_8FunctionEiRKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE1958793'/>
<use f='halide/src/autoschedulers/mullapudi2016/AutoSchedule.cpp' l='503' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118DependenceAnalysis16regions_requiredERKNS0_8FunctionEiRKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE1958793'/>
