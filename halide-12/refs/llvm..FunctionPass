<inh f='halide/llvm-install/include/llvm/Pass.h' l='91' c='llvm::Pass'/>
<def f='halide/llvm-install/include/llvm/Pass.h' l='298' ll='320'/>
<ovr f='halide/llvm-install/include/llvm/Analysis/AliasAnalysis.h' l='1191' c='llvm::AAResultsWrapperPass'/>
<use f='halide/llvm-install/include/llvm/Analysis/AliasAnalysis.h' l='1191'/>
<use f='halide/llvm-install/include/llvm/Analysis/AliasAnalysis.h' l='1225' c='_ZN4llvm26createAAResultsWrapperPassEv'/>
<use f='halide/llvm-install/include/llvm/IR/Verifier.h' l='103' c='_ZN4llvm18createVerifierPassEb'/>
<ovr f='halide/llvm-install/include/llvm/Analysis/BlockFrequencyInfo.h' l='138' c='llvm::BlockFrequencyInfoWrapperPass'/>
<use f='halide/llvm-install/include/llvm/Analysis/BlockFrequencyInfo.h' l='138'/>
<ovr f='halide/llvm-install/include/llvm/Analysis/OptimizationRemarkEmitter.h' l='138' c='llvm::OptimizationRemarkEmitterWrapperPass'/>
<use f='halide/llvm-install/include/llvm/Analysis/OptimizationRemarkEmitter.h' l='138'/>
<use f='halide/llvm-install/include/llvm/Transforms/Instrumentation.h' l='92' c='_ZN4llvm31createPGOMemOPSizeOptLegacyPassEv'/>
<ovr f='halide/llvm-install/include/llvm/Analysis/LoopInfo.h' l='1249' c='llvm::LoopInfoWrapperPass'/>
<use f='halide/llvm-install/include/llvm/Analysis/LoopInfo.h' l='1249'/>
<ovr f='halide/llvm-install/include/llvm/IR/Dominators.h' l='278' c='llvm::DominatorTreeWrapperPass'/>
<use f='halide/llvm-install/include/llvm/IR/Dominators.h' l='278'/>
<use f='halide/llvm-install/include/llvm/Transforms/Instrumentation/AddressSanitizer.h' l='136' c='_ZN4llvm34createAddressSanitizerFunctionPassEbbb'/>
<use f='halide/llvm-install/include/llvm/Transforms/Instrumentation/ThreadSanitizer.h' l='21' c='_ZN4llvm35createThreadSanitizerLegacyPassPassEv'/>
<ovr f='halide/llvm-install/include/llvm/Analysis/MemoryDependenceAnalysis.h' l='516' c='llvm::MemoryDependenceWrapperPass'/>
<use f='halide/llvm-install/include/llvm/Analysis/MemoryDependenceAnalysis.h' l='516'/>
<use f='halide/llvm-install/include/llvm/Transforms/Scalar/GVN.h' l='355' c='_ZN4llvm13createGVNPassEb'/>
<size>32</size>
<doc f='halide/llvm-install/include/llvm/Pass.h' l='289'>//===----------------------------------------------------------------------===//
/// FunctionPass class - This class is used to implement most global
/// optimizations.  Optimizations should subclass this class if they meet the
/// following constraints:
///
///  1. Optimizations are organized globally, i.e., a function at a time
///  2. Optimizing a function does not cause the addition or removal of any
///     functions in the module
///</doc>
<fun r='_ZN4llvm12FunctionPassC1ERc'/>
<fun r='_ZNK4llvm12FunctionPass17createPrinterPassERNS_11raw_ostreamERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<fun r='_ZN4llvm12FunctionPass13runOnFunctionERNS_8FunctionE'/>
<fun r='_ZN4llvm12FunctionPass17assignPassManagerERNS_7PMStackENS_15PassManagerTypeE'/>
<fun r='_ZNK4llvm12FunctionPass27getPotentialPassManagerTypeEv'/>
<fun r='_ZNK4llvm12FunctionPass12skipFunctionERKNS_8FunctionE'/>
<use f='halide/src/CodeGen_PTX_Dev.cpp' l='26' c='_ZN4llvm21createNVVMReflectPassERKNS_9StringMapIiNS_15MallocAllocatorEEE'/>
<size>32</size>
