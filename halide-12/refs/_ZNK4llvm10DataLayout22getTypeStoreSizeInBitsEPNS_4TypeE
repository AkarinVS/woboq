<def f='halide/llvm-install/include/llvm/IR/DataLayout.h' l='480' ll='482' type='llvm::TypeSize llvm::DataLayout::getTypeStoreSizeInBits(llvm::Type * Ty) const'/>
<use f='halide/llvm-install/include/llvm/IR/DataLayout.h' l='489' u='c' c='_ZNK4llvm10DataLayout23typeSizeEqualsStoreSizeEPNS_4TypeE'/>
<doc f='halide/llvm-install/include/llvm/IR/DataLayout.h' l='473'>/// Returns the maximum number of bits that may be overwritten by
  /// storing the specified type; always a multiple of 8.
  ///
  /// If Ty is a scalable vector type, the scalable property will be set and
  /// the runtime size will be a positive integer multiple of the base size.
  ///
  /// For example, returns 40 for i36 and 80 for x86_fp80.</doc>
