<dec f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.h' l='243' type='bool absl::lts_2020_02_25::Mutex::ReaderTryLock()'/>
<doc f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.h' l='238'>// Mutex::ReaderTryLock()
  //
  // If the mutex can be acquired without blocking, acquires this mutex for
  // shared access and returns `true`. Otherwise, returns `false`. Returns
  // `true` with high probability if the `Mutex` was free or shared.</doc>
<def f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='1618' ll='1662' type='bool absl::lts_2020_02_25::Mutex::ReaderTryLock()'/>
