<def f='halide/llvm-install/include/llvm/ADT/SmallVector.h' l='45' ll='88'/>
<use f='halide/llvm-install/include/llvm/ADT/SmallVector.h' l='98'/>
<use f='halide/llvm-install/include/llvm/ADT/SmallVector.h' l='97'/>
<use f='halide/llvm-install/include/llvm/ADT/SmallVector.h' l='107'/>
<use f='halide/llvm-install/include/llvm/ADT/SmallVector.h' l='108'/>
<use f='halide/llvm-install/include/llvm/ADT/SmallVector.h' l='355' c='_ZN4llvm23SmallVectorTemplateBase13mallocForGrowEmRm'/>
<doc f='halide/llvm-install/include/llvm/ADT/SmallVector.h' l='37'>/// This is all the stuff common to all SmallVectors.
///
/// The template parameter specifies the type which should be used to hold the
/// Size and Capacity of the SmallVector, so it can be adjusted.
/// Using 32 bit size is desirable to shrink the size of the SmallVector.
/// Using 64 bit size is desirable for cases like SmallVector&lt;char&gt;, where a
/// 32 bit size would limit the vector to ~4GB. SmallVectors are used for
/// buffering bitcode output - which can exceed 4GB.</doc>
<mbr r='llvm::SmallVectorBase::BeginX' t='void *'/>
<mbr r='llvm::SmallVectorBase::Size' t='Size_T'/>
<mbr r='llvm::SmallVectorBase::Capacity' t='Size_T'/>
<fun r='_ZN4llvm15SmallVectorBase11SizeTypeMaxEv'/>
<fun r='_ZN4llvm15SmallVectorBaseC1Ev'/>
<fun r='_ZN4llvm15SmallVectorBaseC1EPvm'/>
<fun r='_ZN4llvm15SmallVectorBase13mallocForGrowEmmRm'/>
<fun r='_ZN4llvm15SmallVectorBase8grow_podEPvmm'/>
<fun r='_ZNK4llvm15SmallVectorBase4sizeEv'/>
<fun r='_ZNK4llvm15SmallVectorBase8capacityEv'/>
<fun r='_ZNK4llvm15SmallVectorBase5emptyEv'/>
<fun r='_ZN4llvm15SmallVectorBase8set_sizeEm'/>
