<dec f='halide/halide-install/include/Halide.h' l='18473' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Expr &amp; e)'/>
<doc f='halide/halide-install/include/Halide.h' l='18469'>/** Create a 2-D halide function in the first two arguments that
 * returns the last argument. The function may have more dimensions if
 * the expression contains implicit arguments and the list of Var
 * arguments contains a placeholder (&quot;_&quot;). */</doc>
<use f='halide/apps/fft/main.cpp' l='143' u='c' c='main'/>
<use f='halide/apps/fft/main.cpp' l='144' u='c' c='main'/>
<dec f='halide/build/include/Halide.h' l='18473' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Expr &amp; e)'/>
<doc f='halide/build/include/Halide.h' l='18469'>/** Create a 2-D halide function in the first two arguments that
 * returns the last argument. The function may have more dimensions if
 * the expression contains implicit arguments and the list of Var
 * arguments contains a placeholder (&quot;_&quot;). */</doc>
<dec f='halide/src/Lambda.h' l='28' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Expr &amp; e)'/>
<doc f='halide/src/Lambda.h' l='24'>/** Create a 2-D halide function in the first two arguments that
 * returns the last argument. The function may have more dimensions if
 * the expression contains implicit arguments and the list of Var
 * arguments contains a placeholder (&quot;_&quot;). */</doc>
<def f='halide/src/Lambda.cpp' l='17' ll='21' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Expr &amp; e)'/>
