<def f='halide/llvm-install/include/llvm/Analysis/AliasAnalysis.h' l='986' ll='1105'/>
<doc f='halide/llvm-install/include/llvm/Analysis/AliasAnalysis.h' l='973'>/// A CRTP-driven &quot;mixin&quot; base class to help implement the function alias
/// analysis results concept.
///
/// Because of the nature of many alias analysis implementations, they often
/// only implement a subset of the interface. This base class will attempt to
/// implement the remaining portions of the interface in terms of simpler forms
/// of the interface where possible, and otherwise provide conservatively
/// correct fallback implementations.
///
/// Implementors of an alias analysis should derive from this CRTP, and then
/// override specific methods that they wish to customize. There is no need to
/// use virtual anywhere, the CRTP base class does static dispatch to the
/// derived type passed into it.</doc>
<mbr r='llvm::AAResultBase::AAR' t='llvm::AAResults *'/>
<fun r='_ZN4llvm12AAResultBase7derivedEv'/>
<fun r='_ZN4llvm12AAResultBase12setAAResultsEPNS_9AAResultsE'/>
<fun r='_ZN4llvm12AAResultBaseC1Ev'/>
<fun r='_ZN4llvm12AAResultBaseC1ERKNS_12AAResultBaseIT_EE'/>
<fun r='_ZN4llvm12AAResultBaseC1EONS_12AAResultBaseIT_EE'/>
<fun r='_ZN4llvm12AAResultBase16getBestAAResultsEv'/>
<fun r='_ZN4llvm12AAResultBase5aliasERKNS_14MemoryLocationES3_RNS_11AAQueryInfoE'/>
<fun r='_ZN4llvm12AAResultBase22pointsToConstantMemoryERKNS_14MemoryLocationERNS_11AAQueryInfoEb'/>
<fun r='_ZN4llvm12AAResultBase16getArgModRefInfoEPKNS_8CallBaseEj'/>
<fun r='_ZN4llvm12AAResultBase17getModRefBehaviorEPKNS_8CallBaseE'/>
<fun r='_ZN4llvm12AAResultBase17getModRefBehaviorEPKNS_8FunctionE'/>
<fun r='_ZN4llvm12AAResultBase13getModRefInfoEPKNS_8CallBaseERKNS_14MemoryLocationERNS_11AAQueryInfoE'/>
<fun r='_ZN4llvm12AAResultBase13getModRefInfoEPKNS_8CallBaseES3_RNS_11AAQueryInfoE'/>
