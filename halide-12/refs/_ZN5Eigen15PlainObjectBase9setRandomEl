<dec f='halide/build-apps/eigen/Eigen/src/Core/PlainObjectBase.h' l='730' type='Derived &amp; Eigen::PlainObjectBase::setRandom(Eigen::Index size)'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/Random.h' l='149' ll='155' type='Derived &amp; Eigen::PlainObjectBase::setRandom(Eigen::Index newSize)'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/Random.h' l='136'>/** Resizes to the given \a newSize, and sets all coefficients in this expression to random values.
  *
  * Numbers are uniformly spread through their whole definition range for integer types,
  * and in the [-1:1] range for floating point scalar types.
  * 
  * \only_for_vectors
  * \not_reentrant
  *
  * Example: \include Matrix_setRandom_int.cpp
  * Output: \verbinclude Matrix_setRandom_int.out
  *
  * \sa DenseBase::setRandom(), setRandom(Index,Index), class CwiseNullaryOp, DenseBase::Random()
  */</doc>
