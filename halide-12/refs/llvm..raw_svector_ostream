<inh f='halide/llvm-install/include/llvm/Support/raw_ostream.h' l='399' c='llvm::raw_pwrite_stream'/>
<def f='halide/llvm-install/include/llvm/Support/raw_ostream.h' l='636' ll='662'/>
<ovr f='halide/llvm-install/include/llvm/Support/raw_ostream.h' l='679' c='llvm::buffer_ostream'/>
<use f='halide/llvm-install/include/llvm/Support/raw_ostream.h' l='679'/>
<use f='halide/llvm-install/include/llvm/Support/raw_ostream.h' l='686' c='_ZN4llvm14buffer_ostreamC1ERNS_11raw_ostreamE'/>
<ovr f='halide/llvm-install/include/llvm/Support/raw_ostream.h' l='690' c='llvm::buffer_unique_ostream'/>
<use f='halide/llvm-install/include/llvm/Support/raw_ostream.h' l='690'/>
<use f='halide/llvm-install/include/llvm/Support/raw_ostream.h' l='698' c='_ZN4llvm21buffer_unique_ostreamC1ESt10unique_ptrINS_11raw_ostreamESt14default_deleteIS2_EE'/>
<size>72</size>
<doc f='halide/llvm-install/include/llvm/Support/raw_ostream.h' l='631'>/// A raw_ostream that writes to an SmallVector or SmallString.  This is a
/// simple adaptor class. This class does not encounter output errors.
/// raw_svector_ostream operates without a buffer, delegating all memory
/// management to the SmallString. Thus the SmallString is always up-to-date,
/// may be used directly and there is no need to call flush().</doc>
<mbr r='llvm::raw_svector_ostream::OS' o='512' t='SmallVectorImpl&lt;char&gt; &amp;'/>
<fun r='_ZN4llvm19raw_svector_ostream10write_implEPKcm'/>
<fun r='_ZN4llvm19raw_svector_ostream11pwrite_implEPKcmm'/>
<fun r='_ZNK4llvm19raw_svector_ostream11current_posEv'/>
<fun r='_ZN4llvm19raw_svector_ostreamC1ERNS_15SmallVectorImplIcEE'/>
<fun r='_ZN4llvm19raw_svector_ostreamD1Ev'/>
<fun r='_ZN4llvm19raw_svector_ostream5flushEv'/>
<fun r='_ZNK4llvm19raw_svector_ostream3strEv'/>
<use f='halide/src/CodeGen_PTX_Dev.cpp' l='631' c='_ZN6Halide8Internal12_GLOBAL__N_115CodeGen_PTX_Dev14compile_to_srcEv'/>
<size>72</size>
<use f='halide/src/HexagonOffload.cpp' l='1016' c='_ZN6Halide8Internal39compile_module_to_hexagon_shared_objectERKNS_6ModuleE'/>
<use f='halide/src/HexagonOffload.cpp' l='1024' c='_ZN6Halide8Internal39compile_module_to_hexagon_shared_objectERKNS_6ModuleE'/>
<size>72</size>
<use f='halide/src/LLVM_Output.cpp' l='183' c='_ZN6Halide8Internal7Archive12_GLOBAL__N_118write_symbol_tableERSoRKSt6vectorIN4llvm16NewArchiveMemberESaIS6_EEbPSt3mapImS4_INS2_9PatchInfoESaISC_EESt45819532'/>
<use f='halide/src/LLVM_Output.cpp' l='328' c='_ZN6Halide12_GLOBAL__N_112clone_moduleERKN4llvm6ModuleE'/>
<size>72</size>
<use f='halide/src/Module.cpp' l='486' c='_ZNK6Halide6Module17compile_to_bufferEv'/>
<use f='halide/src/Module.cpp' l='493' c='_ZNK6Halide6Module17compile_to_bufferEv'/>
<size>72</size>
