<dec f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.h' l='106' type='static const void * absl::lts_2020_02_25::debugging_internal::VDSOSupport::Init()'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='54' u='c' c='_ZN4absl14lts_2020_02_2518debugging_internal11VDSOSupportC1Ev'/>
<def f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='66' ll='121' type='static const void * absl::lts_2020_02_25::debugging_internal::VDSOSupport::Init()'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='162' u='c' c='_ZN4absl14lts_2020_02_2518debugging_internal11VDSOSupport13InitAndGetCPUEPjPvS4_'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='187' u='c' c='_ZN4absl14lts_2020_02_2518debugging_internal14VDSOInitHelperC1Ev'/>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='57'>// NOTE: we can&apos;t use GoogleOnceInit() below, because we can be
// called by tcmalloc, and none of the *once* stuff may be functional yet.
//
// In addition, we hope that the VDSOSupportHelper constructor
// causes this code to run before there are any threads, and before
// InitGoogle() has executed any chroot or setuid calls.
//
// Finally, even if there is a race here, it is harmless, because
// the operation should be idempotent.</doc>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.h' l='104'>// Computes vdso_base_ and returns it. Should be called as early as
  // possible; before any thread creation, chroot or setuid.</doc>
