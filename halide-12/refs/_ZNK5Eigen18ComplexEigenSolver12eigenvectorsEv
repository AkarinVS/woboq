<def f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h' l='157' ll='162' type='const Eigen::ComplexEigenSolver::EigenvectorType &amp; Eigen::ComplexEigenSolver::eigenvectors() const'/>
<doc f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h' l='137'>/** \brief Returns the eigenvectors of given matrix.
      *
      * \returns  A const reference to the matrix whose columns are the eigenvectors.
      *
      * \pre Either the constructor
      * ComplexEigenSolver(const MatrixType&amp; matrix, bool) or the member
      * function compute(const MatrixType&amp; matrix, bool) has been called before
      * to compute the eigendecomposition of a matrix, and
      * \p computeEigenvectors was set to true (the default).
      *
      * This function returns a matrix whose columns are the eigenvectors. Column
      * \f$ k \f$ is an eigenvector corresponding to eigenvalue number \f$ k
      * \f$ as returned by eigenvalues().  The eigenvectors are normalized to
      * have (Euclidean) norm equal to one. The matrix returned by this
      * function is the matrix \f$ V \f$ in the eigendecomposition \f$ A = V D
      * V^{-1} \f$, if it exists.
      *
      * Example: \include ComplexEigenSolver_eigenvectors.cpp
      * Output: \verbinclude ComplexEigenSolver_eigenvectors.out
      */</doc>
