<dec f='include/python3.8/pythread.h' l='79' type='PyLockStatus PyThread_acquire_lock_timed(PyThread_type_lock , long long microseconds, int intr_flag)'/>
<doc f='include/python3.8/pythread.h' l='67'>/* If microseconds == 0, the call is non-blocking: it returns immediately
   even when the lock can&apos;t be acquired.
   If microseconds &gt; 0, the call waits up to the specified duration.
   If microseconds &lt; 0, the call waits until success (or abnormal failure)

   microseconds must be less than PY_TIMEOUT_MAX. Behaviour otherwise is
   undefined.

   If intr_flag is true and the acquire is interrupted by a signal, then the
   call will return PY_LOCK_INTR.  The caller may reattempt to acquire the
   lock.
*/</doc>
