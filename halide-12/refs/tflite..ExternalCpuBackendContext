<inh f='halide/build-apps/_deps/tflite-src/tensorflow/lite/c/common.h' l='72' c='TfLiteExternalContext'/>
<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/external_cpu_backend_context.h' l='81' ll='102'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/external_cpu_backend_context.h' l='99' c='_ZN6tflite25ExternalCpuBackendContextC1ERKS0_'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/external_cpu_backend_context.h' l='100' c='_ZN6tflite25ExternalCpuBackendContextaSERKS0_'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/external_cpu_backend_context.h' l='100' c='_ZN6tflite25ExternalCpuBackendContextaSERKS0_'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/interpreter.h' l='762'/>
<size>24</size>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/external_cpu_backend_context.h' l='43'>// This TfLiteExternalContext-derived class is the default
// &apos;kTfLiteCpuBackendContext&apos;-typed context that&apos;s used internally in TF Lite
// framework. The primary purpose of having this class is to allow the same cpu
// backend context to be sharable among a set of TF Lite interpreters so that
// certain system costs are saved, like saving the cost of having multiple
// thread pools in each separate cpu backend context etc..
//
// Note: as of 2019/07/19, such context sharing among a set of interpreters will
// break the execution if these interpreters are invoked simultaneously. It
// works only when these context-sharing interpreters are invoked in a
// serialized way. Here&apos;s an example to illustrate the context sharing among 2
// TF Lite interpreters:
//
//  TfLiteExternalContext* global_ctxt = new ExternalCpuBackendContext();
//  interpreter1 = /*...*/;
//  interpreter1-&gt;SetExternalContext(kTfLiteCpuBackendContext, global_ctxt);
//  interpreter2 = /*...*/;
//  interpreter2-&gt;SetExternalContext(kTfLiteCpuBackendContext, global_ctxt);
//
//  interpreter1-&gt;SetNumThreads(2);
//  interpreter1-&gt;Invoke();
//
//  interpreter2-&gt;SetNumThreads(4);
//  interpreter2-&gt;Invoke();
//
// After sharing the context, calling &apos;SetNumThreads&apos; on any of the
// context-sharing interpreters will have the global impact as it also refreshes
// the #thread info in the global cpu backend context (i.e. &apos;global_ctxt&apos; above)
// that affects how much parallelism an interpreter invocation will use.
// Therefore, if different number of threads are used among different
// interpreters, don&apos;t call &apos;SetNumThreads&apos; consecutively but call it
// separately between each interpreter&apos;s invocation as illustrated above.
//
// Note: it is the responsibility of the user of this context (i.e. a
// TFLiteInterpreter) to clear any state from the internal backend
// context if/when the interpreter no longer needs the shared context.
// See, e.g., TFLiteInterpreter destructor clears caches in the case of a
// shared ExternalCpuBackendContext.</doc>
<fun r='_ZN6tflite25ExternalCpuBackendContextC1Ev'/>
<fun r='_ZN6tflite25ExternalCpuBackendContextD1Ev'/>
<fun r='_ZN6tflite25ExternalCpuBackendContext28set_internal_backend_contextESt10unique_ptrINS_28TfLiteInternalBackendContextESt14default_deleteIS2_EE'/>
<fun r='_ZNK6tflite25ExternalCpuBackendContext24internal_backend_contextEv'/>
<mbr r='tflite::ExternalCpuBackendContext::internal_backend_context_' o='128' t='std::unique_ptr&lt;TfLiteInternalBackendContext&gt;'/>
<fun r='_ZN6tflite25ExternalCpuBackendContextC1ERKS0_'/>
<fun r='_ZN6tflite25ExternalCpuBackendContextaSERKS0_'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/external_cpu_backend_context.cc' l='23' c='_ZN6tflite12_GLOBAL__N_132RefreshExternalCpuBackendContextEP13TfLiteContext'/>
<size>24</size>
<fun r='_ZN6tflite25ExternalCpuBackendContextC1Ev'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/interpreter.cc' l='111' c='_ZN6tflite11InterpreterC1EPNS_13ErrorReporterE'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/interpreter.cc' l='124' c='_ZN6tflite11InterpreterD1Ev'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/interpreter.cc' l='125' c='_ZN6tflite11InterpreterD1Ev'/>
<size>24</size>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_context.cc' l='103' c='_ZN6tflite17CpuBackendContext14GetFromContextEP13TfLiteContext'/>
<size>24</size>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/tools/benchmark/benchmark_tflite_model.h' l='88'/>
<size>24</size>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/tools/benchmark/benchmark_tflite_model.cc' l='648' c='_ZN6tflite9benchmark20BenchmarkTfLiteModel15InitInterpreterEv'/>
<size>24</size>
