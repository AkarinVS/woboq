<dec f='halide/halide-install/include/Halide.h' l='6485' type='std::vector&lt;ApplySplitResult&gt; Halide::Internal::apply_split(const Halide::Internal::Split &amp; split, bool is_update, const std::string &amp; prefix, std::map&lt;std::string, Expr&gt; &amp; dim_extent_alignment)'/>
<doc f='halide/halide-install/include/Halide.h' l='6480'>/** Given a Split schedule on a definition (init or update), return a list of
 * of predicates on the definition, substitutions that needs to be applied to
 * the definition (in ascending order of application), and let stmts which
 * defined the values of variables referred by the predicates and substitutions
 * (ordered from innermost to outermost let). */</doc>
<dec f='halide/build/include/Halide.h' l='6485' type='std::vector&lt;ApplySplitResult&gt; Halide::Internal::apply_split(const Halide::Internal::Split &amp; split, bool is_update, const std::string &amp; prefix, std::map&lt;std::string, Expr&gt; &amp; dim_extent_alignment)'/>
<doc f='halide/build/include/Halide.h' l='6480'>/** Given a Split schedule on a definition (init or update), return a list of
 * of predicates on the definition, substitutions that needs to be applied to
 * the definition (in ascending order of application), and let stmts which
 * defined the values of variables referred by the predicates and substitutions
 * (ordered from innermost to outermost let). */</doc>
<dec f='halide/src/ApplySplit.h' l='58' type='std::vector&lt;ApplySplitResult&gt; Halide::Internal::apply_split(const Halide::Internal::Split &amp; split, bool is_update, const std::string &amp; prefix, std::map&lt;std::string, Expr&gt; &amp; dim_extent_alignment)'/>
<def f='halide/src/ApplySplit.cpp' l='14' ll='128' type='vector&lt;Halide::Internal::ApplySplitResult&gt; Halide::Internal::apply_split(const Halide::Internal::Split &amp; split, bool is_update, const std::string &amp; prefix, map&lt;std::string, Halide::Expr&gt; &amp; dim_extent_alignment)'/>
<doc f='halide/src/ApplySplit.h' l='53'>/** Given a Split schedule on a definition (init or update), return a list of
 * of predicates on the definition, substitutions that needs to be applied to
 * the definition (in ascending order of application), and let stmts which
 * defined the values of variables referred by the predicates and substitutions
 * (ordered from innermost to outermost let). */</doc>
<use f='halide/src/Func.cpp' l='538' u='c' c='_ZN6Halide12_GLOBAL__N_111apply_splitERKNS_8Internal5SplitERSt6vectorINS1_17ReductionVariableESaIS6_EERS5_INS_4ExprESaISA_EESD_SD_RSt3mapINSt7__cxx1115776508'/>
<use f='halide/src/Func.cpp' l='573' u='c' c='_ZN6Halide12_GLOBAL__N_110apply_fuseERKNS_8Internal5SplitERSt6vectorINS1_17ReductionVariableESaIS6_EERS5_INS_4ExprESaISA_EESD_SD_RSt3mapINSt7__cxx111212296807'/>
<use f='halide/src/Func.cpp' l='597' u='c' c='_ZN6Halide12_GLOBAL__N_112apply_purifyERKNS_8Internal5SplitERSt6vectorINS1_17ReductionVariableESaIS6_EERS5_INS_4ExprESaISA_EESD_SD_RSt3mapINSt7__cxx118786755'/>
<use f='halide/src/Func.cpp' l='617' u='c' c='_ZN6Halide12_GLOBAL__N_112apply_renameERKNS_8Internal5SplitERSt6vectorINS1_17ReductionVariableESaIS6_EERS5_INS_4ExprESaISA_EESD_SD_RSt3mapINSt7__cxx117099658'/>
<use f='halide/src/ScheduleFunctions.cpp' l='123' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_115build_loop_nestERKNS0_4StmtERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiRKNS0_8FunctionERKNS0_10DefinitionEb'/>
