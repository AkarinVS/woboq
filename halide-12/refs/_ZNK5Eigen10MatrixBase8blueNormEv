<dec f='halide/build-apps/eigen/Eigen/src/Core/MatrixBase.h' l='195' type='Eigen::MatrixBase::RealScalar Eigen::MatrixBase::blueNorm() const'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/StableNorm.h' l='240' ll='245' type='typename NumTraits&lt;typename internal::traits&lt;Derived&gt;::Scalar&gt;::Real Eigen::MatrixBase::blueNorm() const'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/StableNorm.h' l='231'>/** \returns the \em l2 norm of \c *this using the Blue&apos;s algorithm.
  * A Portable Fortran Program to Find the Euclidean Norm of a Vector,
  * ACM TOMS, Vol 4, Issue 1, 1978.
  *
  * For architecture/scalar types without vectorization, this version
  * is much faster than stableNorm(). Otherwise the stableNorm() is faster.
  *
  * \sa norm(), stableNorm(), hypotNorm()
  */</doc>
