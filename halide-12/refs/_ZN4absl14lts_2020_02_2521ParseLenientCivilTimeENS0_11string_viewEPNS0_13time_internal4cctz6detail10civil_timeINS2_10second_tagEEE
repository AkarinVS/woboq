<dec f='halide/build-apps/abseil-cpp/absl/time/civil_time.h' l='507' type='bool absl::lts_2020_02_25::ParseLenientCivilTime(absl::string_view s, absl::lts_2020_02_25::CivilSecond * c)'/>
<doc f='halide/build-apps/abseil-cpp/absl/time/civil_time.h' l='494'>// ParseLenientCivilTime()
//
// Parses any of the formats accepted by `absl::ParseCivilTime()`, but is more
// lenient if the format of the string does not exactly match the associated
// type.
//
// Example:
//
//   absl::CivilDay d;
//   bool ok = absl::ParseLenientCivilTime(&quot;1969-07-20&quot;, &amp;d); // OK
//   ok = absl::ParseLenientCivilTime(&quot;1969-07-20T10&quot;, &amp;d);   // OK: T10 floored
//   ok = absl::ParseLenientCivilTime(&quot;1969-07&quot;, &amp;d);   // OK: day defaults to 1
//</doc>
<def f='halide/build-apps/abseil-cpp/absl/time/civil_time.cc' l='132' ll='134' type='bool absl::lts_2020_02_25::ParseLenientCivilTime(absl::lts_2020_02_25::string_view s, absl::lts_2020_02_25::CivilSecond * c)'/>
