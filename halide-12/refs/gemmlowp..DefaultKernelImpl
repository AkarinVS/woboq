<def f='halide/build-apps/gemmlowp/internal/kernel_default.h' l='29'/>
<def f='halide/build-apps/gemmlowp/internal/kernel_default.h' l='35' ll='37'/>
<use f='halide/build-apps/gemmlowp/internal/kernel_default.h' l='37'/>
<def f='halide/build-apps/gemmlowp/internal/kernel_default.h' l='42' ll='44'/>
<use f='halide/build-apps/gemmlowp/internal/kernel_default.h' l='44'/>
<use f='halide/build-apps/gemmlowp/internal/kernel_default.h' l='48'/>
<inh f='halide/build-apps/gemmlowp/internal/kernel_reference.h' l='33' c='gemmlowp::ReferenceKernel'/>
<def f='halide/build-apps/gemmlowp/internal/kernel_default.h' l='109' macro='1'/>
<use f='halide/build-apps/gemmlowp/internal/kernel_default.h' l='62'/>
<size>8</size>
<doc f='halide/build-apps/gemmlowp/internal/kernel_default.h' l='31'>// Partial specialization implementing the logic that if we want to use
// a kernel for MaxProductIsLessThan4096 but do not have such a kernel, then we
// fall back to a generic kernel not taking advantage of
// MaxProductIsLessThan4096.</doc>
<doc f='halide/build-apps/gemmlowp/internal/kernel_default.h' l='39'>// Partial specialization implementing the logic that if we want to use
// a kernel for LhsNonZero but do not have such a kernel, then we fall
// back to a generic kernel not taking advantage of LhsNonZero.</doc>
