<dec f='halide/llvm-install/include/llvm/Passes/PassBuilder.h' l='429' type='llvm::ModulePassManager llvm::PassBuilder::buildLTOPreLinkDefaultPipeline(llvm::PassBuilder::OptimizationLevel Level)'/>
<doc f='halide/llvm-install/include/llvm/Passes/PassBuilder.h' l='417'>/// Build a pre-link, LTO-targeting default optimization pipeline to a pass
  /// manager.
  ///
  /// This adds the pre-link optimizations tuned to work well with a later LTO
  /// run. It works to minimize the IR which needs to be analyzed without
  /// making irreversible decisions which could be made better during the LTO
  /// run.
  ///
  /// Note that \p Level cannot be `O0` here. The pipelines produced are
  /// only intended for use when attempting to optimize code. If frontends
  /// require some transformations for semantic reasons, they should explicitly
  /// build them.</doc>
