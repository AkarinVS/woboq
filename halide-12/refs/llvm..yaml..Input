<inh f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='751' c='llvm::yaml::IO'/>
<def f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1373' ll='1530'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1644' c='_ZN4llvm4yaml2IO21processKeyWithDefaultEPKcRNS_8OptionalIT_EERKS6_bRT0_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1728' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1729' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1744' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1745' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1755' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1756' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1765' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1766' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1775' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1776' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1785' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1786' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1795' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<use f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1796' c='_ZN4llvm4yamlrsERNS0_5InputERT_'/>
<size>272</size>
<doc f='halide/llvm-install/include/llvm/Support/YAMLTraits.h' l='1361'>///
/// The Input class is used to parse a yaml document into in-memory structs
/// and vectors.
///
/// It works by using YAMLParser to do a syntax parse of the entire yaml
/// document, then the Input class builds a graph of HNodes which wraps
/// each yaml Node.  The extra layer is buffering.  The low level yaml
/// parser only lets you look at each node once.  The buffering layer lets
/// you search and interate multiple times.  This is necessary because
/// the mapRequired() method calls may not be in the same order
/// as the keys in the document.
///</doc>
<fun r='_ZN4llvm4yaml5InputC1ENS_9StringRefEPvPFvRKNS_12SMDiagnosticES3_ES3_'/>
<fun r='_ZN4llvm4yaml5InputC1ENS_15MemoryBufferRefEPvPFvRKNS_12SMDiagnosticES3_ES3_'/>
<fun r='_ZN4llvm4yaml5InputD1Ev'/>
<fun r='_ZN4llvm4yaml5Input5errorEv'/>
<fun r='_ZNK4llvm4yaml5Input10outputtingEv'/>
<fun r='_ZN4llvm4yaml5Input6mapTagENS_9StringRefEb'/>
<fun r='_ZN4llvm4yaml5Input12beginMappingEv'/>
<fun r='_ZN4llvm4yaml5Input10endMappingEv'/>
<fun r='_ZN4llvm4yaml5Input12preflightKeyEPKcbbRbRPv'/>
<fun r='_ZN4llvm4yaml5Input13postflightKeyEPv'/>
<fun r='_ZN4llvm4yaml5Input4keysEv'/>
<fun r='_ZN4llvm4yaml5Input16beginFlowMappingEv'/>
<fun r='_ZN4llvm4yaml5Input14endFlowMappingEv'/>
<fun r='_ZN4llvm4yaml5Input13beginSequenceEv'/>
<fun r='_ZN4llvm4yaml5Input11endSequenceEv'/>
<fun r='_ZN4llvm4yaml5Input16preflightElementEjRPv'/>
<fun r='_ZN4llvm4yaml5Input17postflightElementEPv'/>
<fun r='_ZN4llvm4yaml5Input17beginFlowSequenceEv'/>
<fun r='_ZN4llvm4yaml5Input20preflightFlowElementEjRPv'/>
<fun r='_ZN4llvm4yaml5Input21postflightFlowElementEPv'/>
<fun r='_ZN4llvm4yaml5Input15endFlowSequenceEv'/>
<fun r='_ZN4llvm4yaml5Input15beginEnumScalarEv'/>
<fun r='_ZN4llvm4yaml5Input15matchEnumScalarEPKcb'/>
<fun r='_ZN4llvm4yaml5Input17matchEnumFallbackEv'/>
<fun r='_ZN4llvm4yaml5Input13endEnumScalarEv'/>
<fun r='_ZN4llvm4yaml5Input17beginBitSetScalarERb'/>
<fun r='_ZN4llvm4yaml5Input11bitSetMatchEPKcb'/>
<fun r='_ZN4llvm4yaml5Input15endBitSetScalarEv'/>
<fun r='_ZN4llvm4yaml5Input12scalarStringERNS_9StringRefENS0_11QuotingTypeE'/>
<fun r='_ZN4llvm4yaml5Input17blockScalarStringERNS_9StringRefE'/>
<fun r='_ZN4llvm4yaml5Input9scalarTagERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<fun r='_ZN4llvm4yaml5Input11getNodeKindEv'/>
<fun r='_ZN4llvm4yaml5Input8setErrorERKNS_5TwineE'/>
<fun r='_ZN4llvm4yaml5Input21canElideEmptySequenceEv'/>
<fun r='_ZN4llvm4yaml5Input12createHNodesEPNS0_4NodeE'/>
<fun r='_ZN4llvm4yaml5Input8setErrorEPNS1_5HNodeERKNS_5TwineE'/>
<fun r='_ZN4llvm4yaml5Input8setErrorEPNS0_4NodeERKNS_5TwineE'/>
<fun r='_ZN4llvm4yaml5Input8setErrorERKNS_7SMRangeERKNS_5TwineE'/>
<fun r='_ZN4llvm4yaml5Input13reportWarningEPNS1_5HNodeERKNS_5TwineE'/>
<fun r='_ZN4llvm4yaml5Input13reportWarningEPNS0_4NodeERKNS_5TwineE'/>
<fun r='_ZN4llvm4yaml5Input13reportWarningERKNS_7SMRangeERKNS_5TwineE'/>
<fun r='_ZN4llvm4yaml5Input18setCurrentDocumentEv'/>
<fun r='_ZN4llvm4yaml5Input12nextDocumentEv'/>
<fun r='_ZNK4llvm4yaml5Input14getCurrentNodeEv'/>
<fun r='_ZN4llvm4yaml5Input19setAllowUnknownKeysEb'/>
<mbr r='llvm::yaml::Input::SrcMgr' o='128' t='llvm::SourceMgr'/>
<mbr r='llvm::yaml::Input::Strm' o='640' t='std::unique_ptr&lt;llvm::yaml::Stream&gt;'/>
<mbr r='llvm::yaml::Input::TopNode' o='704' t='std::unique_ptr&lt;HNode&gt;'/>
<mbr r='llvm::yaml::Input::EC' o='768' t='std::error_code'/>
<mbr r='llvm::yaml::Input::StringAllocator' o='896' t='llvm::BumpPtrAllocator'/>
<mbr r='llvm::yaml::Input::DocIterator' o='1664' t='llvm::yaml::document_iterator'/>
<mbr r='llvm::yaml::Input::BitValuesUsed' o='1728' t='std::vector&lt;bool&gt;'/>
<mbr r='llvm::yaml::Input::CurrentNode' o='2048' t='llvm::yaml::Input::HNode *'/>
<mbr r='llvm::yaml::Input::ScalarMatchFound' o='2112' t='bool'/>
<mbr r='llvm::yaml::Input::AllowUnknownKeys' o='2120' t='bool'/>
