<use f='halide/build-apps/eigen/Eigen/src/Eigenvalues/RealQZ.h' l='115' u='c' c='_ZN5Eigen6RealQZC1ERKT_S3_b'/>
<dec f='halide/build-apps/eigen/Eigen/src/Eigenvalues/RealQZ.h' l='163' type='RealQZ&lt;_MatrixType&gt; &amp; Eigen::RealQZ::compute(const Eigen::RealQZ::MatrixType &amp; A, const Eigen::RealQZ::MatrixType &amp; B, bool computeQZ = true)'/>
<def f='halide/build-apps/eigen/Eigen/src/Eigenvalues/RealQZ.h' l='558' ll='653' type='RealQZ&lt;MatrixType&gt; &amp; Eigen::RealQZ::compute(const Eigen::RealQZ::MatrixType &amp; A_in, const Eigen::RealQZ::MatrixType &amp; B_in, bool computeQZ = true)'/>
<doc f='halide/build-apps/eigen/Eigen/src/Eigenvalues/RealQZ.h' l='156'>/** \brief Computes QZ decomposition of given matrix. 
       * 
       * \param[in]  A          Matrix A.
       * \param[in]  B          Matrix B.
       * \param[in]  computeQZ  If false, A and Z are not computed.
       * \returns    Reference to \c *this
       */</doc>
