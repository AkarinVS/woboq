<dec f='halide/build-apps/eigen/Eigen/src/Core/DenseBase.h' l='364' type='static const Eigen::DenseBase::ConstantReturnType Eigen::DenseBase::Ones(Eigen::Index size)'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/CwiseNullaryOp.h' l='598' ll='603' type='static const typename DenseBase&lt;Derived&gt;::ConstantReturnType Eigen::DenseBase::Ones(Eigen::Index newSize)'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/CwiseNullaryOp.h' l='582'>/** \returns an expression of a vector where all coefficients equal one.
  *
  * The parameter \a newSize is the size of the returned vector.
  * Must be compatible with this MatrixBase type.
  *
  * \only_for_vectors
  *
  * This variant is meant to be used for dynamic-size vector types. For fixed-size types,
  * it is redundant to pass \a size as argument, so Ones() should be used
  * instead.
  *
  * Example: \include MatrixBase_ones_int.cpp
  * Output: \verbinclude MatrixBase_ones_int.out
  *
  * \sa Ones(), Ones(Index,Index), isOnes(), class Ones
  */</doc>
