<dec f='halide/apps/linear_algebra/src/halide_blas.h' l='131' type='float hblas_sdot(const int N, const float * X, const int incX, const float * Y, const int incY)'/>
<doc f='halide/apps/linear_algebra/src/halide_blas.h' l='122'>/*
 * ===========================================================================
 * Prototypes for level 1 BLAS functions (complex are recast as routines)
 * ===========================================================================
 */
// float  hblas_sdsdot(const int N, const float alpha, const float *X,
//                     const int incX, const float *Y, const int incY);
// double hblas_dsdot(const int N, const float *X, const int incX, const float *Y,
//                    const int incY);</doc>
<def f='halide/apps/linear_algebra/src/halide_blas.cpp' l='92' ll='100' type='float hblas_sdot(const int N, const float * x, const int incx, const float * y, const int incy)'/>
<doc f='halide/apps/linear_algebra/src/halide_blas.cpp' l='88'>//////////
// dot  //
//////////</doc>
<use f='halide/apps/linear_algebra/tests/test_halide_blas.cpp' l='222' macro='1' u='c' c='_ZN14BLASFloatTests9test_sdotEi'/>
