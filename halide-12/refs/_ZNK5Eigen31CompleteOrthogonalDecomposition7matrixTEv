<def f='halide/build-apps/eigen/Eigen/src/QR/CompleteOrthogonalDecomposition.h' l='183' type='const Eigen::CompleteOrthogonalDecomposition::MatrixType &amp; Eigen::CompleteOrthogonalDecomposition::matrixT() const'/>
<use f='halide/build-apps/eigen/Eigen/src/QR/CompleteOrthogonalDecomposition.h' l='547' u='c' c='_ZNK5Eigen31CompleteOrthogonalDecomposition11_solve_implERKTL0__RTL0_0_'/>
<use f='halide/build-apps/eigen/Eigen/src/QR/CompleteOrthogonalDecomposition.h' l='581' u='c' c='_ZNK5Eigen31CompleteOrthogonalDecomposition22_solve_impl_transposedERKTL0_0_RTL0_1_'/>
<doc f='halide/build-apps/eigen/Eigen/src/QR/CompleteOrthogonalDecomposition.h' l='172'>/** \returns a reference to the matrix where the complete orthogonal
   * decomposition is stored.
   * \warning The strict lower part and \code cols() - rank() \endcode right
   * columns of this matrix contains internal values.
   * Only the upper triangular part should be referenced. To get it, use
   * \code matrixT().template triangularView&lt;Upper&gt;() \endcode
   * For rank-deficient matrices, use
   * \code
   * matrixR().topLeftCorner(rank(), rank()).template triangularView&lt;Upper&gt;()
   * \endcode
   */</doc>
