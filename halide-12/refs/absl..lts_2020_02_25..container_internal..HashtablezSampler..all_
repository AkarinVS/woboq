<dec f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.h' l='271' type='std::atomic&lt;HashtablezInfo *&gt;'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.cc' l='85' u='w' c='_ZN4absl14lts_2020_02_2518container_internal17HashtablezSamplerC1Ev'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.cc' l='91' u='m' c='_ZN4absl14lts_2020_02_2518container_internal17HashtablezSamplerD1Ev'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.cc' l='100' u='m' c='_ZN4absl14lts_2020_02_2518container_internal17HashtablezSampler7PushNewEPNS1_14HashtablezInfoE'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.cc' l='101' u='m' c='_ZN4absl14lts_2020_02_2518container_internal17HashtablezSampler7PushNewEPNS1_14HashtablezInfoE'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.cc' l='158' u='m' c='_ZN4absl14lts_2020_02_2518container_internal17HashtablezSampler7IterateERKSt8functionIFvRKNS1_14HashtablezInfoEEE'/>
<offset>128</offset>
<doc f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.h' l='246'>// Intrusive lock free linked lists for tracking samples.
  //
  // `all_` records all samples (they are never removed from this list) and is
  // terminated with a `nullptr`.
  //
  // `graveyard_.dead` is a circular linked list.  When it is empty,
  // `graveyard_.dead == &amp;graveyard`.  The list is circular so that
  // every item on it (even the last) has a non-null dead pointer.  This allows
  // `Iterate` to determine if a given sample is live or dead using only
  // information on the sample itself.
  //
  // For example, nodes [A, B, C, D, E] with [A, C, E] alive and [B, D] dead
  // looks like this (G is the Graveyard):
  //
  //           +---+    +---+    +---+    +---+    +---+
  //    all --&gt;| A |---&gt;| B |---&gt;| C |---&gt;| D |---&gt;| E |
  //           |   |    |   |    |   |    |   |    |   |
  //   +---+   |   | +-&gt;|   |-+  |   | +-&gt;|   |-+  |   |
  //   | G |   +---+ |  +---+ |  +---+ |  +---+ |  +---+
  //   |   |         |        |        |        |
  //   |   | --------+        +--------+        |
  //   +---+                                    |
  //     ^                                      |
  //     +--------------------------------------+
  //</doc>
