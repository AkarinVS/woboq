<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/kernel_util.h' l='142' type='TfLiteStatus tflite::GetIntermediatesSafe(const TfLiteContext * context, const TfLiteNode * node, int index, TfLiteTensor ** tensor)'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/kernel_util.h' l='132'>// Same as `GetIntermediates` but returns boolean and uses output argument for
// tensor.
//
//   TfLiteTensor* my_tensor;
//   TF_LITE_ENSURE_OK(context,
//                     GetIntermediatesSafe(context, node, kMyTensorIdx,
//                     &amp;my_tensor));
//   // can use my_tensor directly from here onwards, it is not nullptr
//
// Should be used in cases where the binary size is too large.</doc>
<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/kernel_util.cc' l='182' ll='191' type='TfLiteStatus tflite::GetIntermediatesSafe(const TfLiteContext * context, const TfLiteNode * node, int index, TfLiteTensor ** tensor)'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/lstm.cc' l='247' u='c' c='_ZN6tflite3ops7builtin4lstm4full12_GLOBAL__N_133PopulateQuantizedLstmParams8x8_16EP13TfLiteContextP10TfLiteNodePNS1_9lstm_eval20IntegerLstmParameterE'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/lstm.cc' l='261' u='c' c='_ZN6tflite3ops7builtin4lstm4full12_GLOBAL__N_133PopulateQuantizedLstmParams8x8_16EP13TfLiteContextP10TfLiteNodePNS1_9lstm_eval20IntegerLstmParameterE'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/unidirectional_sequence_lstm.cc' l='162' u='c' c='_ZN6tflite3ops7builtin28unidirectional_sequence_lstm12_GLOBAL__N_133PopulateQuantizedLstmParams8x8_16EP13TfLiteContextP10TfLiteNodePNS1_9lstm_eval20IntegerLstmParameterE'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/unidirectional_sequence_lstm.cc' l='176' u='c' c='_ZN6tflite3ops7builtin28unidirectional_sequence_lstm12_GLOBAL__N_133PopulateQuantizedLstmParams8x8_16EP13TfLiteContextP10TfLiteNodePNS1_9lstm_eval20IntegerLstmParameterE'/>
