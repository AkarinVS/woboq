<def f='halide/build-apps/ruy/ruy/prepacked_cache.h' l='68' ll='75'/>
<use f='halide/build-apps/ruy/ruy/prepacked_cache.h' l='77' c='_ZN3ruyeqERKNS_14PrepackedCache3KeyES3_'/>
<use f='halide/build-apps/ruy/ruy/prepacked_cache.h' l='77' c='_ZN3ruyeqERKNS_14PrepackedCache3KeyES3_'/>
<use f='halide/build-apps/ruy/ruy/prepacked_cache.h' l='83' c='_ZNK3ruy14PrepackedCache7KeyHashclERKNS0_3KeyE'/>
<use f='halide/build-apps/ruy/ruy/prepacked_cache.h' l='133'/>
<size>32</size>
<doc f='halide/build-apps/ruy/ruy/prepacked_cache.h' l='47'>// A key in this key-value cache. Equality of keys implies interchangeable
  // packed matrices, so we must be careful to make this Key type specific
  // enough, and its equality comparison operator strict enough.
  //
  // These keys need to be used before the packed matrix buffers are allocated
  // (since they are used to determine whether to allocate a new buffer).
  // So they instead use the source matrix&apos;s data pointer. On the other hand,
  // the packed matrix&apos;s layout structure is already available by the time we
  // need to handle Keys, and that&apos;s fortunate because it is more specific
  // than the source matrix&apos;s layout: it also encodes details about the kernel&apos;s
  // small-scale block layout. In the past, we made the kernel function pointer
  // part of the cache key, but all that is relevant here is the packed layout.
  //
  // The only other field that needs to be involved is the zero_point, for
  // quantized matrices, although it seems far-fetched that the same matrix
  // data would be reused with different zero_point values.
  //
  // The data types (PEMat::data_type and PEMat::sums_type) are omitted based on
  // the &quot;strict aliasing&quot; model: each memory location should contain data of
  // only one type. This could be relaxed in the future, by adding data types
  // to this Key type, if a use case arises.</doc>
<mbr r='ruy::PrepackedCache::Key::src_data' o='0' t='const void *'/>
<mbr r='ruy::PrepackedCache::Key::packed_layout' o='64' t='ruy::PMatLayout'/>
<mbr r='ruy::PrepackedCache::Key::zero_point' o='192' t='std::int32_t'/>
<use f='halide/build-apps/ruy/ruy/prepacked_cache.cc' l='50' c='_ZNK3ruy14PrepackedCache7KeyHashclERKNS0_3KeyE'/>
<use f='halide/build-apps/ruy/ruy/prepacked_cache.cc' l='82' c='_ZN3ruy14PrepackedCache3GetEPKvPNS_5PEMatE'/>
<size>32</size>
