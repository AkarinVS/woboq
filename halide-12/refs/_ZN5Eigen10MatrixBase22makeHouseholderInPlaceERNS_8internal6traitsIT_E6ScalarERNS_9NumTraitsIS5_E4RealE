<dec f='halide/build-apps/eigen/Eigen/src/Core/MatrixBase.h' l='422' type='void Eigen::MatrixBase::makeHouseholderInPlace(Eigen::MatrixBase::Scalar &amp; tau, Eigen::MatrixBase::RealScalar &amp; beta)'/>
<def f='halide/build-apps/eigen/Eigen/src/Householder/Householder.h' l='41' ll='47' type='void Eigen::MatrixBase::makeHouseholderInPlace(Eigen::MatrixBase::Scalar &amp; tau, Eigen::MatrixBase::RealScalar &amp; beta)'/>
<doc f='halide/build-apps/eigen/Eigen/src/Householder/Householder.h' l='25'>/** Computes the elementary reflector H such that:
  * \f$ H *this = [ beta 0 ... 0]^T \f$
  * where the transformation H is:
  * \f$ H = I - tau v v^*\f$
  * and the vector v is:
  * \f$ v^T = [1 essential^T] \f$
  *
  * The essential part of the vector \c v is stored in *this.
  * 
  * On output:
  * \param tau the scaling factor of the Householder transformation
  * \param beta the result of H * \c *this
  *
  * \sa MatrixBase::makeHouseholder(), MatrixBase::applyHouseholderOnTheLeft(),
  *     MatrixBase::applyHouseholderOnTheRight()
  */</doc>
