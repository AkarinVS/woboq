<dec f='halide/llvm-install/include/llvm/Support/Path.h' l='494' type='bool llvm::sys::path::is_absolute_gnu(const llvm::Twine &amp; path, llvm::sys::path::Style style = Style::native)'/>
<doc f='halide/llvm-install/include/llvm/Support/Path.h' l='471'>/// Is path absolute using GNU rules?
///
/// GNU rules are:
/// 1) Paths starting with a path separator are absolute.
/// 2) Windows style paths are also absolute if they start with a character
///    followed by &apos;:&apos;.
/// 3) No other paths are absolute.
///
/// On Windows style the path &quot;C:\Users\Default&quot; has &quot;C:&quot; as root name and &quot;\&quot;
/// as root directory.
///
/// Hence &quot;C:&quot; on Windows is absolute under GNU rules and not absolute under
/// C++17 because it has no root directory. Likewise &quot;/&quot; and &quot;\&quot; on Windows are
/// absolute under GNU and are not absolute under C++17 due to empty root name.
///
/// \see has_root_name
/// \see has_root_directory
///
/// @param path Input path.
/// @param style The style of \p path (e.g. Windows or POSIX). &quot;native&quot; style
/// means to derive the style from the host.
/// @result True if the path is absolute following GNU rules, false if it is
/// not.</doc>
