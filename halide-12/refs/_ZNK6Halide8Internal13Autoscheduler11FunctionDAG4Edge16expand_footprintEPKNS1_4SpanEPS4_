<dec f='halide/src/autoschedulers/adams2019/FunctionDAG.h' l='557' type='void Halide::Internal::Autoscheduler::FunctionDAG::Edge::expand_footprint(const Halide::Internal::Autoscheduler::Span * consumer_loop, Halide::Internal::Autoscheduler::Span * producer_required) const'/>
<doc f='halide/src/autoschedulers/adams2019/FunctionDAG.h' l='554'>// Given a loop nest of the consumer stage, expand a region
        // required of the producer to be large enough to include all
        // points required.</doc>
<def f='halide/src/autoschedulers/adams2019/FunctionDAG.cpp' l='506' ll='550' type='void Halide::Internal::Autoscheduler::FunctionDAG::Edge::expand_footprint(const Halide::Internal::Autoscheduler::Span * consumer_loop, Halide::Internal::Autoscheduler::Span * producer_required) const'/>
<use f='halide/src/autoschedulers/adams2019/LoopNest.cpp' l='1073' u='c' c='_ZNK6Halide8Internal13Autoscheduler8LoopNest10get_boundsEPKNS1_11FunctionDAG4NodeE'/>
