<dec f='halide/build-apps/eigen/Eigen/src/Core/DenseBase.h' l='369' type='Derived &amp; Eigen::DenseBase::setLinSpaced(Eigen::Index size, const Eigen::DenseBase::Scalar &amp; low, const Eigen::DenseBase::Scalar &amp; high)'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/CwiseNullaryOp.h' l='402' ll='407' type='Derived &amp; Eigen::DenseBase::setLinSpaced(Eigen::Index newSize, const Eigen::DenseBase::Scalar &amp; low, const Eigen::DenseBase::Scalar &amp; high)'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/CwiseNullaryOp.h' l='386'>/**
  * \brief Sets a linearly spaced vector.
  *
  * The function generates &apos;size&apos; equally spaced values in the closed interval [low,high].
  * When size is set to 1, a vector of length 1 containing &apos;high&apos; is returned.
  *
  * \only_for_vectors
  *
  * Example: \include DenseBase_setLinSpaced.cpp
  * Output: \verbinclude DenseBase_setLinSpaced.out
  *
  * For integer scalar types, do not miss the explanations on the definition
  * of \link LinSpaced(Index,const Scalar&amp;,const Scalar&amp;) even spacing \endlink.
  *
  * \sa LinSpaced(Index,const Scalar&amp;,const Scalar&amp;), CwiseNullaryOp
  */</doc>
