<dec f='halide/halide-install/include/Halide.h' l='17458' type='Halide::Func &amp; Halide::Func::tile(const Halide::VarOrRVar &amp; x, const Halide::VarOrRVar &amp; y, const Halide::VarOrRVar &amp; xo, const Halide::VarOrRVar &amp; yo, const Halide::VarOrRVar &amp; xi, const Halide::VarOrRVar &amp; yi, const Halide::Expr &amp; xfactor, const Halide::Expr &amp; yfactor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<use f='halide/apps/bgu/bgu_generator.cpp' l='607' u='c' c='_ZN12_GLOBAL__N_13BGU8generateEv'/>
<doc f='halide/halide-install/include/Halide.h' l='17455'>/** Split two dimensions at once by the given factors, and then
     * reorder the resulting dimensions to be xi, yi, xo, yo from
     * innermost outwards. This gives a tiled traversal. */</doc>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='534' u='c' c='_ZN12_GLOBAL__N_110CameraPipe8generateEv'/>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='550' u='c' c='_ZN12_GLOBAL__N_110CameraPipe8generateEv'/>
<use f='halide/apps/iir_blur/iir_blur_generator.cpp' l='44' u='c' c='_Z19blur_cols_transposeN6Halide4FuncENS_4ExprES1_bNS_6TargetE'/>
<use f='halide/apps/nl_means/nl_means_generator.cpp' l='135' u='c' c='_ZN12_GLOBAL__N_113NonLocalMeans8generateEv'/>
<use f='halide/apps/stencil_chain/stencil_chain_generator.cpp' l='132' u='c' c='_ZN12_GLOBAL__N_112StencilChain8generateEv'/>
<dec f='halide/build/include/Halide.h' l='17458' type='Halide::Func &amp; Halide::Func::tile(const Halide::VarOrRVar &amp; x, const Halide::VarOrRVar &amp; y, const Halide::VarOrRVar &amp; xo, const Halide::VarOrRVar &amp; yo, const Halide::VarOrRVar &amp; xi, const Halide::VarOrRVar &amp; yi, const Halide::Expr &amp; xfactor, const Halide::Expr &amp; yfactor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<doc f='halide/build/include/Halide.h' l='17455'>/** Split two dimensions at once by the given factors, and then
     * reorder the resulting dimensions to be xi, yi, xo, yo from
     * innermost outwards. This gives a tiled traversal. */</doc>
<dec f='halide/src/Func.h' l='1578' type='Halide::Func &amp; Halide::Func::tile(const Halide::VarOrRVar &amp; x, const Halide::VarOrRVar &amp; y, const Halide::VarOrRVar &amp; xo, const Halide::VarOrRVar &amp; yo, const Halide::VarOrRVar &amp; xi, const Halide::VarOrRVar &amp; yi, const Halide::Expr &amp; xfactor, const Halide::Expr &amp; yfactor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<doc f='halide/src/Func.h' l='1575'>/** Split two dimensions at once by the given factors, and then
     * reorder the resulting dimensions to be xi, yi, xo, yo from
     * innermost outwards. This gives a tiled traversal. */</doc>
<def f='halide/src/Func.cpp' l='2350' ll='2358' type='Halide::Func &amp; Halide::Func::tile(const Halide::VarOrRVar &amp; x, const Halide::VarOrRVar &amp; y, const Halide::VarOrRVar &amp; xo, const Halide::VarOrRVar &amp; yo, const Halide::VarOrRVar &amp; xi, const Halide::VarOrRVar &amp; yi, const Halide::Expr &amp; xfactor, const Halide::Expr &amp; yfactor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<use f='halide/test/generator/buffer_copy_generator.cpp' l='37' u='c' c='_ZN10BufferCopy8scheduleEv'/>
<use f='halide/test/generator/buffer_copy_generator.cpp' l='45' u='c' c='_ZN10BufferCopy8scheduleEv'/>
<use f='halide/tutorial/lesson_05_scheduling_1.cpp' l='437' u='c' c='main'/>
<use f='halide/tutorial/lesson_05_scheduling_1.cpp' l='486' u='c' c='main'/>
<use f='halide/tutorial/lesson_05_scheduling_1.cpp' l='497' u='c' c='main'/>
<use f='halide/tutorial/lesson_08_scheduling_2.cpp' l='483' u='c' c='main'/>
<use f='halide/tutorial/lesson_19_wrapper_funcs.cpp' l='242' u='c' c='main'/>
