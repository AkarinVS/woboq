<def f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h' l='182' ll='186' type='const Eigen::ComplexEigenSolver::EigenvalueType &amp; Eigen::ComplexEigenSolver::eigenvalues() const'/>
<doc f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h' l='164'>/** \brief Returns the eigenvalues of given matrix.
      *
      * \returns A const reference to the column vector containing the eigenvalues.
      *
      * \pre Either the constructor
      * ComplexEigenSolver(const MatrixType&amp; matrix, bool) or the member
      * function compute(const MatrixType&amp; matrix, bool) has been called before
      * to compute the eigendecomposition of a matrix.
      *
      * This function returns a column vector containing the
      * eigenvalues. Eigenvalues are repeated according to their
      * algebraic multiplicity, so there are as many eigenvalues as
      * rows in the matrix. The eigenvalues are not sorted in any particular
      * order.
      *
      * Example: \include ComplexEigenSolver_eigenvalues.cpp
      * Output: \verbinclude ComplexEigenSolver_eigenvalues.out
      */</doc>
