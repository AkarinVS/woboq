<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='63' c='_ZNK8pybind116detail10object_api5beginEv'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='65' c='_ZNK8pybind116detail10object_api3endEv'/>
<inh f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='232' c='pybind11::object'/>
<def f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='843' ll='900'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='851' c='_ZN8pybind118iteratorC1ERKNS_6detail8accessorIT_EE'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='853' c='_ZN8pybind118iteratorppEv'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='858' c='_ZN8pybind118iteratorppEi'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='866' c='_ZNK8pybind118iteratordeEv'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='887' c='_ZN8pybind118iterator8sentinelEv'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='889' c='_ZN8pybind11eqERKNS_8iteratorES2_'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='889' c='_ZN8pybind11eqERKNS_8iteratorES2_'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='890' c='_ZN8pybind11neERKNS_8iteratorES2_'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='890' c='_ZN8pybind11neERKNS_8iteratorES2_'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='1579' c='_ZN8pybind114iterENS_6handleE'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='1582' c='_ZN8pybind114iterENS_6handleE'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='1587' c='_ZNK8pybind116detail10object_api5beginEv'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='1588' c='_ZNK8pybind116detail10object_api3endEv'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/cast.h' l='1639'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1895' c='_ZN8pybind1113make_iteratorET0_T1_DpOT3_'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1924' c='_ZN8pybind1117make_key_iteratorET0_T1_DpOT3_'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1949' c='_ZN8pybind1113make_iteratorERT0_DpOT1_'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1956' c='_ZN8pybind1117make_key_iteratorERT0_DpOT1_'/>
<size>16</size>
<doc f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='835'>/** \rst
    Wraps a Python iterator so that it can also be used as a C++ input iterator

    Caveat: copying an iterator does not (and cannot) clone the internal
    state of the Python iterable. This also applies to the post-increment
    operator. This iterator should only be used to retrieve the current
    value using ``operator*()``.
\endrst */</doc>
<fun r='_ZN8pybind118iteratorC1ENS_6handleEb'/>
<fun r='_ZN8pybind118iteratorC1ENS_6handleENS_6object10borrowed_tE'/>
<fun r='_ZN8pybind118iteratorC1ENS_6handleENS_6object8stolen_tE'/>
<fun r='_ZNK8pybind118iterator5checkEv'/>
<fun r='_ZN8pybind118iterator6check_ENS_6handleE'/>
<fun r='_ZN8pybind118iteratorC1ERKNS_6detail8accessorIT_EE'/>
<fun r='_ZN8pybind118iteratorC1ERKNS_6objectE'/>
<fun r='_ZN8pybind118iteratorC1EONS_6objectE'/>
<fun r='_ZN8pybind118iteratorC1Ev'/>
<fun r='_ZN8pybind118iteratorppEv'/>
<fun r='_ZN8pybind118iteratorppEi'/>
<fun r='_ZNK8pybind118iteratordeEv'/>
<fun r='_ZNK8pybind118iteratorptEv'/>
<fun r='_ZN8pybind118iterator8sentinelEv'/>
<fun r='_ZN8pybind118iterator7advanceEv'/>
<mbr r='pybind11::iterator::value' o='64' t='pybind11::object'/>
