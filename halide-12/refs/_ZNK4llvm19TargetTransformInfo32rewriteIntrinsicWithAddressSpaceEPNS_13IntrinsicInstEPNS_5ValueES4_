<dec f='halide/llvm-install/include/llvm/Analysis/TargetTransformInfo.h' l='400' type='llvm::Value * llvm::TargetTransformInfo::rewriteIntrinsicWithAddressSpace(llvm::IntrinsicInst * II, llvm::Value * OldV, llvm::Value * NewV) const'/>
<doc f='halide/llvm-install/include/llvm/Analysis/TargetTransformInfo.h' l='395'>/// Rewrite intrinsic call \p II such that \p OldV will be replaced with \p
  /// NewV, which has a different address space. This should happen for every
  /// operand index that collectFlatAddressOperands returned for the intrinsic.
  /// \returns nullptr if the intrinsic was not handled. Otherwise, returns the
  /// new value (which may be the original \p II with modified operands).</doc>
