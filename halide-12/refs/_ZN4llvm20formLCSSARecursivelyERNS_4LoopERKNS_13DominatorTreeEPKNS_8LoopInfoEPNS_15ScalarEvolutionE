<dec f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='111' type='bool llvm::formLCSSARecursively(llvm::Loop &amp; L, const llvm::DominatorTree &amp; DT, const llvm::LoopInfo * LI, llvm::ScalarEvolution * SE)'/>
<doc f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='102'>/// Put a loop nest into LCSSA form.
///
/// This recursively forms LCSSA for a loop nest.
///
/// LoopInfo and DominatorTree are required and preserved.
///
/// If ScalarEvolution is passed in, it will be preserved.
///
/// Returns true if any modifications are made to the loop.</doc>
