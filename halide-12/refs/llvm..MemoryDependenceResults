<use f='halide/llvm-install/include/llvm/Analysis/MemoryDependenceAnalysis.h' l='197'/>
<def f='halide/llvm-install/include/llvm/Analysis/MemoryDependenceAnalysis.h' l='276' ll='491'/>
<use f='halide/llvm-install/include/llvm/Analysis/MemoryDependenceAnalysis.h' l='506'/>
<use f='halide/llvm-install/include/llvm/Analysis/MemoryDependenceAnalysis.h' l='511' c='_ZN4llvm24MemoryDependenceAnalysis3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<use f='halide/llvm-install/include/llvm/Analysis/MemoryDependenceAnalysis.h' l='517'/>
<use f='halide/llvm-install/include/llvm/Analysis/MemoryDependenceAnalysis.h' l='534' c='_ZN4llvm27MemoryDependenceWrapperPass9getMemDepEv'/>
<use f='halide/llvm-install/include/llvm/Transforms/Scalar/GVN.h' l='135' c='_ZNK4llvm3GVN9getMemDepEv'/>
<use f='halide/llvm-install/include/llvm/Transforms/Scalar/GVN.h' l='168'/>
<use f='halide/llvm-install/include/llvm/Transforms/Scalar/GVN.h' l='205' c='_ZN4llvm3GVN10ValueTable9setMemDepEPNS_23MemoryDependenceResultsE'/>
<use f='halide/llvm-install/include/llvm/Transforms/Scalar/GVN.h' l='215'/>
<use f='halide/llvm-install/include/llvm/Transforms/Scalar/GVN.h' l='258' c='_ZN4llvm3GVN7runImplERNS_8FunctionERNS_15AssumptionCacheERNS_13DominatorTreeERKNS_17TargetLibraryInfoERNS_9AAResultsEPNS_23MemoryDependenceResultsEPNS7303437'/>
<size>384</size>
<doc f='halide/llvm-install/include/llvm/Analysis/MemoryDependenceAnalysis.h' l='264'>/// Provides a lazy, caching interface for making common memory aliasing
/// information queries, backed by LLVM&apos;s alias analysis passes.
///
/// The dependency information returned is somewhat unusual, but is pragmatic.
/// If queried about a store or call that might modify memory, the analysis
/// will return the instruction[s] that may either load from that memory or
/// store to it.  If queried with a load or call that can never modify memory,
/// the analysis will return calls and stores that might modify the pointer,
/// but generally does not return loads unless a) they are volatile, or
/// b) they load from *must-aliased* pointers.  Returning a dependence on
/// must-alias&apos;d pointers instead of all pointers interacts well with the
/// internal caching mechanism.</doc>
<mbr r='llvm::MemoryDependenceResults::LocalDeps' o='0' t='llvm::MemoryDependenceResults::LocalDepMapType'/>
<mbr r='llvm::MemoryDependenceResults::NonLocalDefsCache' o='192' t='DenseMap&lt;AssertingVH&lt;const llvm::Value&gt;, llvm::NonLocalDepResult&gt;'/>
<mbr r='llvm::MemoryDependenceResults::ReverseNonLocalDefsCache' o='384' t='llvm::MemoryDependenceResults::ReverseNonLocalDefsCacheTy'/>
<mbr r='llvm::MemoryDependenceResults::NonLocalPointerDeps' o='576' t='llvm::MemoryDependenceResults::CachedNonLocalPointerInfo'/>
<mbr r='llvm::MemoryDependenceResults::ReverseNonLocalPtrDeps' o='768' t='llvm::MemoryDependenceResults::ReverseNonLocalPtrDepTy'/>
<mbr r='llvm::MemoryDependenceResults::NonLocalDeps' o='960' t='llvm::MemoryDependenceResults::NonLocalDepMapType'/>
<mbr r='llvm::MemoryDependenceResults::ReverseLocalDeps' o='1152' t='llvm::MemoryDependenceResults::ReverseDepMapType'/>
<mbr r='llvm::MemoryDependenceResults::ReverseNonLocalDeps' o='1344' t='llvm::MemoryDependenceResults::ReverseDepMapType'/>
<mbr r='llvm::MemoryDependenceResults::AA' o='1536' t='llvm::AAResults &amp;'/>
<mbr r='llvm::MemoryDependenceResults::AC' o='1600' t='llvm::AssumptionCache &amp;'/>
<mbr r='llvm::MemoryDependenceResults::TLI' o='1664' t='const llvm::TargetLibraryInfo &amp;'/>
<mbr r='llvm::MemoryDependenceResults::DT' o='1728' t='llvm::DominatorTree &amp;'/>
<mbr r='llvm::MemoryDependenceResults::PV' o='1792' t='llvm::PhiValues &amp;'/>
<mbr r='llvm::MemoryDependenceResults::PredCache' o='1856' t='llvm::PredIteratorCache'/>
<mbr r='llvm::MemoryDependenceResults::DefaultBlockScanLimit' o='3008' t='unsigned int'/>
<fun r='_ZN4llvm23MemoryDependenceResultsC1ERNS_9AAResultsERNS_15AssumptionCacheERKNS_17TargetLibraryInfoERNS_13DominatorTreeERNS_9PhiValuesEj'/>
<fun r='_ZN4llvm23MemoryDependenceResults10invalidateERNS_8FunctionERKNS_17PreservedAnalysesERNS_15AnalysisManagerIS1_JEE11InvalidatorE'/>
<fun r='_ZNK4llvm23MemoryDependenceResults24getDefaultBlockScanLimitEv'/>
<fun r='_ZN4llvm23MemoryDependenceResults13getDependencyEPNS_11InstructionE'/>
<fun r='_ZN4llvm23MemoryDependenceResults25getNonLocalCallDependencyEPNS_8CallBaseE'/>
<fun r='_ZN4llvm23MemoryDependenceResults28getNonLocalPointerDependencyEPNS_11InstructionERNS_15SmallVectorImplINS_17NonLocalDepResultEEE'/>
<fun r='_ZN4llvm23MemoryDependenceResults17removeInstructionEPNS_11InstructionE'/>
<fun r='_ZN4llvm23MemoryDependenceResults27invalidateCachedPointerInfoEPNS_5ValueE'/>
<fun r='_ZN4llvm23MemoryDependenceResults28invalidateCachedPredecessorsEv'/>
<fun r='_ZN4llvm23MemoryDependenceResults24getPointerDependencyFromERKNS_14MemoryLocationEbNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11Instructio3230749'/>
<fun r='_ZN4llvm23MemoryDependenceResults30getSimplePointerDependencyFromERKNS_14MemoryLocationEbNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11Inst8138037'/>
<fun r='_ZN4llvm23MemoryDependenceResults34getInvariantGroupPointerDependencyEPNS_8LoadInstEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm23MemoryDependenceResults13releaseMemoryEv'/>
<fun r='_ZN4llvm23MemoryDependenceResults21getCallDependencyFromEPNS_8CallBaseEbNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb0ELb0Ev9146597'/>
<fun r='_ZN4llvm23MemoryDependenceResults27getNonLocalPointerDepFromBBEPNS_11InstructionERKNS_12PHITransAddrERKNS_14MemoryLocationEbPNS_10BasicBlockERNS_15Sma8294299'/>
<fun r='_ZN4llvm23MemoryDependenceResults23GetNonLocalInfoForBlockEPNS_11InstructionERKNS_14MemoryLocationEbPNS_10BasicBlockEPSt6vectorINS_16NonLocalDepEntryESaIS9_EEj'/>
<fun r='_ZN4llvm23MemoryDependenceResults39RemoveCachedNonLocalPointerDependenciesENS_14PointerIntPairIPKNS_5ValueELj1EbNS_21PointerLikeTypeTraitsIS4_EENS_18P8877613'/>
<fun r='_ZNK4llvm23MemoryDependenceResults13verifyRemovedEPNS_11InstructionE'/>
