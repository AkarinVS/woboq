<dec f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.h' l='506' type='void absl::lts_2020_02_25::Mutex::Fer(base_internal::PerThreadSynch * w)'/>
<def f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='2335' ll='2387' type='void absl::lts_2020_02_25::Mutex::Fer(absl::lts_2020_02_25::base_internal::PerThreadSynch * w)'/>
<use f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='2589' u='c' c='_ZN4absl14lts_2020_02_257CondVar6WakeupEPNS0_13base_internal14PerThreadSynchE'/>
<doc f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='2331'>// Used by CondVar implementation to effectively wake thread w from the
// condition variable.  If this mutex is free, we simply wake the thread.
// It will later acquire the mutex with high probability.  Otherwise, we
// enqueue thread w on this mutex.</doc>
