<dec f='halide/build-apps/abseil-cpp/absl/random/seed_sequences.h' l='105' type='absl::lts_2020_02_25::SeedSeq absl::lts_2020_02_25::MakeSeedSeq()'/>
<def f='halide/build-apps/abseil-cpp/absl/random/seed_sequences.cc' l='22' ll='26' type='absl::lts_2020_02_25::SeedSeq absl::lts_2020_02_25::MakeSeedSeq()'/>
<doc f='halide/build-apps/abseil-cpp/absl/random/seed_sequences.h' l='90'>// -----------------------------------------------------------------------------
// absl::MakeSeedSeq()
// -----------------------------------------------------------------------------
//
// Constructs an `absl::SeedSeq` salting the generated values using
// implementation-defined entropy. The returned sequence can be used to create
// equivalent bit generators correlated using this sequence.
//
// Example:
//
//   auto my_seed_seq = absl::MakeSeedSeq();
//   std::mt19937 rng1(my_seed_seq);
//   std::mt19937 rng2(my_seed_seq);
//   EXPECT_EQ(rng1(), rng2());
//</doc>
