<dec f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='335' type='absl::lts_2020_02_25::Cord::ChunkRange absl::lts_2020_02_25::Cord::Chunks() const'/>
<def f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='979' type='Cord::ChunkRange absl::lts_2020_02_25::Cord::Chunks() const'/>
<doc f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='319'>// Returns a range for iterating over the chunks of a `Cord` with a
  // range-based for-loop.
  //
  // Example:
  //
  //   void ProcessChunks(const Cord&amp; cord) {
  //     for (absl::string_view chunk : cord.Chunks()) { ... }
  //   }
  //
  // Note that the ordinary caveats of temporary lifetime extension apply:
  //
  //   void Process() {
  //     for (absl::string_view chunk : CordFactory().Chunks()) {
  //       // The temporary Cord returned by CordFactory has been destroyed!
  //     }
  //   }</doc>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.cc' l='1502' u='c' c='_ZNK4absl14lts_2020_02_254Cord19CopyToArraySlowPathEPc'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.cc' l='1994' u='c' c='_ZN4absl14lts_2020_02_25lsERSoRKNS0_4CordE'/>
