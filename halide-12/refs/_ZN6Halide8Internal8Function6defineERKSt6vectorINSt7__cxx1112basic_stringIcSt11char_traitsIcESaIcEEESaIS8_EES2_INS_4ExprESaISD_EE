<dec f='halide/halide-install/include/Halide.h' l='13690' type='void Halide::Internal::Function::define(const std::vector&lt;std::string&gt; &amp; args, std::vector&lt;Expr&gt; values)'/>
<doc f='halide/halide-install/include/Halide.h' l='13686'>/** Add a pure definition to this function. It may not already
     * have a definition. All the free variables in &apos;value&apos; must
     * appear in the args list. &apos;value&apos; must not depend on any
     * reduction domain */</doc>
<dec f='halide/build/include/Halide.h' l='13690' type='void Halide::Internal::Function::define(const std::vector&lt;std::string&gt; &amp; args, std::vector&lt;Expr&gt; values)'/>
<doc f='halide/build/include/Halide.h' l='13686'>/** Add a pure definition to this function. It may not already
     * have a definition. All the free variables in &apos;value&apos; must
     * appear in the args list. &apos;value&apos; must not depend on any
     * reduction domain */</doc>
<dec f='halide/src/Function.h' l='87' type='void Halide::Internal::Function::define(const std::vector&lt;std::string&gt; &amp; args, std::vector&lt;Expr&gt; values)'/>
<doc f='halide/src/Function.h' l='83'>/** Add a pure definition to this function. It may not already
     * have a definition. All the free variables in &apos;value&apos; must
     * appear in the args list. &apos;value&apos; must not depend on any
     * reduction domain */</doc>
<use f='halide/src/Func.cpp' l='2858' u='c' c='_ZN6Halide7FuncRefaSERKNS_5TupleE'/>
<def f='halide/src/Function.cpp' l='386' ll='496' type='void Halide::Internal::Function::define(const vector&lt;std::string&gt; &amp; args, vector&lt;Halide::Expr&gt; values)'/>
