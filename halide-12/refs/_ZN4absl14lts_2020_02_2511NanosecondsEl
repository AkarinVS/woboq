<dec f='halide/build-apps/abseil-cpp/absl/time/time.h' l='395' type='absl::lts_2020_02_25::Duration absl::lts_2020_02_25::Nanoseconds(int64_t n)'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='413' u='c' c='_ZN4absl14lts_2020_02_2511NanosecondsET_'/>
<def f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1476' ll='1478' type='absl::lts_2020_02_25::Duration absl::lts_2020_02_25::Nanoseconds(int64_t n)'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1562' u='c' c='_ZN4absl14lts_2020_02_2513FromUnixNanosEl'/>
<doc f='halide/build-apps/abseil-cpp/absl/time/time.h' l='374'>// Nanoseconds()
// Microseconds()
// Milliseconds()
// Seconds()
// Minutes()
// Hours()
//
// Factory functions for constructing `Duration` values from an integral number
// of the unit indicated by the factory function&apos;s name. The number must be
// representable as int64_t.
//
// NOTE: no &quot;Days()&quot; factory function exists because &quot;a day&quot; is ambiguous.
// Civil days are not always 24 hours long, and a 24-hour duration often does
// not correspond with a civil day. If a 24-hour duration is needed, use
// `absl::Hours(24)`. If you actually want a civil day, use absl::CivilDay
// from civil_time.h.
//
// Example:
//
//   absl::Duration a = absl::Seconds(60);
//   absl::Duration b = absl::Minutes(1);  // b == a</doc>
<use f='halide/build-apps/abseil-cpp/absl/time/clock.cc' l='45' u='c' c='_ZN4absl14lts_2020_02_253NowEv'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='526' u='c' c='_ZN4absl14lts_2020_02_2520DurationFromTimespecE8timespec'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='547' u='c' c='_ZN4absl14lts_2020_02_2518ToInt64NanosecondsENS0_8DurationE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='585' u='c' c='_ZN4absl14lts_2020_02_2519ToDoubleNanosecondsENS0_8DurationE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='781' u='c' c='_ZN4absl14lts_2020_02_2514FormatDurationB5cxx11ENS0_8DurationE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='838' u='c' c='_ZN4absl14lts_2020_02_2512_GLOBAL__N_119ConsumeDurationUnitEPPKcPNS0_8DurationE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.cc' l='239' u='c' c='_ZN4absl14lts_2020_02_2513FromUniversalEl'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.cc' l='249' u='c' c='_ZN4absl14lts_2020_02_2511ToUnixNanosENS0_4TimeE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.cc' l='284' u='c' c='_ZN4absl14lts_2020_02_2511ToUniversalENS0_4TimeE'/>
