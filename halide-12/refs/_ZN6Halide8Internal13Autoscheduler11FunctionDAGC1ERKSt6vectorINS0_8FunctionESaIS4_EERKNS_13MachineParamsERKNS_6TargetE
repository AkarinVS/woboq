<dec f='halide/src/autoschedulers/adams2019/FunctionDAG.h' l='565' type='void Halide::Internal::Autoscheduler::FunctionDAG::FunctionDAG(const vector&lt;Halide::Internal::Function&gt; &amp; outputs, const Halide::MachineParams &amp; params, const Halide::Target &amp; target)'/>
<use f='halide/src/autoschedulers/adams2019/AutoSchedule.cpp' l='578' u='c' c='_ZN6Halide8Internal13Autoscheduler17generate_scheduleERKSt6vectorINS0_8FunctionESaIS3_EERKNS_6TargetERKNS_13MachineParamsEPNS_20AutoSchedulerResultsE'/>
<doc f='halide/src/autoschedulers/adams2019/FunctionDAG.h' l='563'>// Create the function DAG, and do all the dependency and cost
    // analysis. This is done once up-front before the tree search.</doc>
<def f='halide/src/autoschedulers/adams2019/FunctionDAG.cpp' l='552' ll='989' type='void Halide::Internal::Autoscheduler::FunctionDAG::FunctionDAG(const vector&lt;Halide::Internal::Function&gt; &amp; outputs, const Halide::MachineParams &amp; params, const Halide::Target &amp; target)'/>
<use f='halide/src/autoschedulers/adams2019/test_function_dag.cpp' l='58' u='c' c='_Z15test_coeff_wiseRKN6Halide13MachineParamsERKNS_6TargetE'/>
<use f='halide/src/autoschedulers/adams2019/test_function_dag.cpp' l='73' u='c' c='_Z15test_coeff_wiseRKN6Halide13MachineParamsERKNS_6TargetE'/>
<use f='halide/src/autoschedulers/adams2019/test_function_dag.cpp' l='143' u='c' c='_Z11test_matmulRKN6Halide13MachineParamsERKNS_6TargetE'/>
<use f='halide/src/autoschedulers/adams2019/test_function_dag.cpp' l='156' u='c' c='_Z11test_matmulRKN6Halide13MachineParamsERKNS_6TargetE'/>
