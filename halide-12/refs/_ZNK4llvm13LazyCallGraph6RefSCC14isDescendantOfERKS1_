<def f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='642' ll='644' type='bool llvm::LazyCallGraph::RefSCC::isDescendantOf(const llvm::LazyCallGraph::RefSCC &amp; RC) const'/>
<doc f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='637'>/// Test if this RefSCC is a descendant of \a RC.
    ///
    /// CAUTION: This method walks the directed graph of edges as far as
    /// necessary to find a possible path from the argument. In the worst case
    /// this may walk the entire graph and can be extremely expensive.</doc>
