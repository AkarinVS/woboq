<def f='halide/halide-install/include/Halide.h' l='3304' ll='3347'/>
<use f='halide/halide-install/include/Halide.h' l='3346' c='_ZN28halide_handle_cplusplus_type4makeEv'/>
<use f='halide/halide-install/include/Halide.h' l='3418' c='_ZN28halide_handle_cplusplus_type4makeEv'/>
<use f='halide/halide-install/include/Halide.h' l='3443' c='_ZN28halide_handle_cplusplus_type4makeEv'/>
<use f='halide/halide-install/include/Halide.h' l='3470' c='_ZN20halide_handle_traits9type_infoEv'/>
<use f='halide/halide-install/include/Halide.h' l='3474' c='_ZN20halide_handle_traits9type_infoEv'/>
<use f='halide/halide-install/include/Halide.h' l='3519' c='_ZN6Halide4TypeC1E18halide_type_code_tiiPK28halide_handle_cplusplus_type'/>
<use f='halide/halide-install/include/Halide.h' l='3533' c='_ZN6Halide4TypeC1ERK13halide_type_tPK28halide_handle_cplusplus_type'/>
<use f='halide/halide-install/include/Halide.h' l='3591'/>
<use f='halide/halide-install/include/Halide.h' l='3744' c='_ZN6Halide6HandleEiPK28halide_handle_cplusplus_type'/>
<use f='halide/halide-install/include/Halide.h' l='19303'/>
<size>120</size>
<doc f='halide/halide-install/include/Halide.h' l='3294'>/** A structure to represent the fully scoped name of a C++ composite
 * type for use in generating function signatures that use that type.
 *
 * This is intended to be a constexpr usable type, but we don&apos;t depend
 * on C++11 yet. In C++14, it is possible this will be replaced with
 * introspection/reflection facilities.
 *
 * Although this is in the global namespace, it should be considered &quot;Halide Internal&quot;
 * and subject to change; code outside Halide should avoid referencing it.
 */</doc>
<mbr r='halide_handle_cplusplus_type::inner_name' o='0' t='halide_cplusplus_type_name'/>
<mbr r='halide_handle_cplusplus_type::namespaces' o='320' t='std::vector&lt;std::string&gt;'/>
<mbr r='halide_handle_cplusplus_type::enclosing_types' o='512' t='std::vector&lt;halide_cplusplus_type_name&gt;'/>
<mbr r='halide_handle_cplusplus_type::cpp_type_modifiers' o='704' t='std::vector&lt;uint8_t&gt;'/>
<mbr r='halide_handle_cplusplus_type::reference_type' o='896' t='halide_handle_cplusplus_type::ReferenceType'/>
<fun r='_ZN28halide_handle_cplusplus_typeC1ERK26halide_cplusplus_type_nameRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EERKS3_IS0_SaI11091343'/>
<fun r='_ZN28halide_handle_cplusplus_type4makeEv'/>
<fun r='_ZN28halide_handle_cplusplus_type4makeEv'/>
<def f='halide/build/include/Halide.h' l='3304' ll='3347'/>
<use f='halide/build/include/Halide.h' l='3346' c='_ZN28halide_handle_cplusplus_type4makeEv'/>
<use f='halide/build/include/Halide.h' l='3418' c='_ZN28halide_handle_cplusplus_type4makeEv'/>
<use f='halide/build/include/Halide.h' l='3443' c='_ZN28halide_handle_cplusplus_type4makeEv'/>
<use f='halide/build/include/Halide.h' l='3470' c='_ZN20halide_handle_traits9type_infoEv'/>
<use f='halide/build/include/Halide.h' l='3474' c='_ZN20halide_handle_traits9type_infoEv'/>
<use f='halide/build/include/Halide.h' l='3519' c='_ZN6Halide4TypeC1E18halide_type_code_tiiPK28halide_handle_cplusplus_type'/>
<use f='halide/build/include/Halide.h' l='3533' c='_ZN6Halide4TypeC1ERK13halide_type_tPK28halide_handle_cplusplus_type'/>
<use f='halide/build/include/Halide.h' l='3591'/>
<use f='halide/build/include/Halide.h' l='3744' c='_ZN6Halide6HandleEiPK28halide_handle_cplusplus_type'/>
<use f='halide/build/include/Halide.h' l='19303'/>
<size>120</size>
<doc f='halide/build/include/Halide.h' l='3294'>/** A structure to represent the fully scoped name of a C++ composite
 * type for use in generating function signatures that use that type.
 *
 * This is intended to be a constexpr usable type, but we don&apos;t depend
 * on C++11 yet. In C++14, it is possible this will be replaced with
 * introspection/reflection facilities.
 *
 * Although this is in the global namespace, it should be considered &quot;Halide Internal&quot;
 * and subject to change; code outside Halide should avoid referencing it.
 */</doc>
<mbr r='halide_handle_cplusplus_type::inner_name' o='0' t='halide_cplusplus_type_name'/>
<mbr r='halide_handle_cplusplus_type::namespaces' o='320' t='std::vector&lt;std::string&gt;'/>
<mbr r='halide_handle_cplusplus_type::enclosing_types' o='512' t='std::vector&lt;halide_cplusplus_type_name&gt;'/>
<mbr r='halide_handle_cplusplus_type::cpp_type_modifiers' o='704' t='std::vector&lt;uint8_t&gt;'/>
<mbr r='halide_handle_cplusplus_type::reference_type' o='896' t='halide_handle_cplusplus_type::ReferenceType'/>
<fun r='_ZN28halide_handle_cplusplus_typeC1ERK26halide_cplusplus_type_nameRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EERKS3_IS0_SaI11091343'/>
<fun r='_ZN28halide_handle_cplusplus_type4makeEv'/>
<fun r='_ZN28halide_handle_cplusplus_type4makeEv'/>
<def f='halide/src/Type.h' l='83' ll='126'/>
<use f='halide/src/Type.h' l='125' c='_ZN28halide_handle_cplusplus_type4makeEv'/>
<use f='halide/src/Type.h' l='197' c='_ZN28halide_handle_cplusplus_type4makeEv'/>
<use f='halide/src/Type.h' l='222' c='_ZN28halide_handle_cplusplus_type4makeEv'/>
<use f='halide/src/Type.h' l='249' c='_ZN20halide_handle_traits9type_infoEv'/>
<use f='halide/src/Type.h' l='253' c='_ZN20halide_handle_traits9type_infoEv'/>
<use f='halide/src/Type.h' l='298' c='_ZN6Halide4TypeC1E18halide_type_code_tiiPK28halide_handle_cplusplus_type'/>
<use f='halide/src/Type.h' l='312' c='_ZN6Halide4TypeC1ERK13halide_type_tPK28halide_handle_cplusplus_type'/>
<use f='halide/src/Type.h' l='370'/>
<use f='halide/src/Type.h' l='523' c='_ZN6Halide6HandleEiPK28halide_handle_cplusplus_type'/>
<size>120</size>
<doc f='halide/src/Type.h' l='73'>/** A structure to represent the fully scoped name of a C++ composite
 * type for use in generating function signatures that use that type.
 *
 * This is intended to be a constexpr usable type, but we don&apos;t depend
 * on C++11 yet. In C++14, it is possible this will be replaced with
 * introspection/reflection facilities.
 *
 * Although this is in the global namespace, it should be considered &quot;Halide Internal&quot;
 * and subject to change; code outside Halide should avoid referencing it.
 */</doc>
<mbr r='halide_handle_cplusplus_type::inner_name' o='0' t='halide_cplusplus_type_name'/>
<mbr r='halide_handle_cplusplus_type::namespaces' o='320' t='std::vector&lt;std::string&gt;'/>
<mbr r='halide_handle_cplusplus_type::enclosing_types' o='512' t='std::vector&lt;halide_cplusplus_type_name&gt;'/>
<mbr r='halide_handle_cplusplus_type::cpp_type_modifiers' o='704' t='std::vector&lt;uint8_t&gt;'/>
<mbr r='halide_handle_cplusplus_type::reference_type' o='896' t='halide_handle_cplusplus_type::ReferenceType'/>
<fun r='_ZN28halide_handle_cplusplus_typeC1ERK26halide_cplusplus_type_nameRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EERKS3_IS0_SaI11091343'/>
<fun r='_ZN28halide_handle_cplusplus_type4makeEv'/>
<fun r='_ZN28halide_handle_cplusplus_type4makeEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='41' c='_ZN6Halide8Internal12_GLOBAL__N_123non_null_void_star_typeEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='41' c='_ZN6Halide8Internal12_GLOBAL__N_123non_null_void_star_typeEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='834' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='834' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='850' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='850' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='857' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='857' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='882' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='882' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='890' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='890' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='904' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='904' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='918' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='918' c='_ZN6Halide8Internal12_GLOBAL__N_110main_testsEPKNS1_12MangleResultERKNS_6TargetE'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='980' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='985' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='985' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1006' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1011' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1011' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1033' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1040' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1040' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1060' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1060' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1062' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1062' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1064' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<use f='halide/src/CPlusPlusMangle.cpp' l='1064' c='_ZN6Halide8Internal21cplusplus_mangle_testEv'/>
<size>120</size>
<use f='halide/src/CodeGen_C.h' l='183'/>
<size>120</size>
<use f='halide/src/CodeGen_LLVM.cpp' l='371' c='_ZN6Halide8Internal12_GLOBAL__N_117get_mangled_namesERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_11LinkageTypeENS_12NameManglingERKSt6vec9383748'/>
<size>120</size>
<use f='halide/src/IREquality.cpp' l='221' c='_ZN6Halide8Internal12_GLOBAL__N_110IRComparer13compare_typesENS_4TypeES3_'/>
<use f='halide/src/IREquality.cpp' l='222' c='_ZN6Halide8Internal12_GLOBAL__N_110IRComparer13compare_typesENS_4TypeES3_'/>
<size>120</size>
<use f='halide/src/Type.cpp' l='220' c='_ZNK6Halide4Type16same_handle_typeERKS0_'/>
<use f='halide/src/Type.cpp' l='221' c='_ZNK6Halide4Type16same_handle_typeERKS0_'/>
<size>120</size>
