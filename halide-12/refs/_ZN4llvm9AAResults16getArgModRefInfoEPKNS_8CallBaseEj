<dec f='halide/llvm-install/include/llvm/Analysis/AliasAnalysis.h' l='478' type='llvm::ModRefInfo llvm::AAResults::getArgModRefInfo(const llvm::CallBase * Call, unsigned int ArgIdx)'/>
<use f='halide/llvm-install/include/llvm/Analysis/AliasAnalysis.h' l='838' u='c' c='_ZN4llvm14BatchAAResults16getArgModRefInfoEPKNS_8CallBaseEj'/>
<use f='halide/llvm-install/include/llvm/Analysis/AliasAnalysis.h' l='1028' u='c' c='_ZN4llvm12AAResultBase14AAResultsProxy16getArgModRefInfoEPKNS_8CallBaseEj'/>
<doc f='halide/llvm-install/include/llvm/Analysis/AliasAnalysis.h' l='468'>/// @}
  //===--------------------------------------------------------------------===//
  /// \name Simple mod/ref information
  /// @{

  /// Get the ModRef info associated with a pointer argument of a call. The
  /// result&apos;s bits are set to indicate the allowed aliasing ModRef kinds. Note
  /// that these bits do not necessarily account for the overall behavior of
  /// the function, but rather only provide additional per-argument
  /// information. This never sets ModRefInfo::Must.</doc>
