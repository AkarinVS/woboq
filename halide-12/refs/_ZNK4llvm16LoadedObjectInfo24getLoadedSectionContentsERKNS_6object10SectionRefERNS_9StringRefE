<def f='halide/llvm-install/include/llvm/DebugInfo/DIContext.h' l='293' ll='296' type='bool llvm::LoadedObjectInfo::getLoadedSectionContents(const object::SectionRef &amp; Sec, llvm::StringRef &amp; Data) const'/>
<doc f='halide/llvm-install/include/llvm/DebugInfo/DIContext.h' l='282'>/// If conveniently available, return the content of the given Section.
  ///
  /// When the section is available in the local address space, in relocated
  /// (loaded) form, e.g. because it was relocated by a JIT for execution, this
  /// function should provide the contents of said section in `Data`. If the
  /// loaded section is not available, or the cost of retrieving it would be
  /// prohibitive, this function should return false. In that case, relocations
  /// will be read from the local (unrelocated) object file and applied on the
  /// fly. Note that this method is used purely for optimzation purposes in the
  /// common case of JITting in the local address space, so returning false
  /// should always be correct.</doc>
