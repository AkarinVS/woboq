<dec f='halide/llvm-install/include/llvm/Support/CommandLine.h' l='68' type='bool llvm::cl::ParseCommandLineOptions(int argc, const char *const * argv, llvm::StringRef Overview = &quot;&quot;, llvm::raw_ostream * Errs = nullptr, const char * EnvVar = nullptr, bool LongOptionsUseDoubleDash = false)'/>
<doc f='halide/llvm-install/include/llvm/Support/CommandLine.h' l='54'>//===----------------------------------------------------------------------===//
// ParseCommandLineOptions - Command line option processing entry point.
//
// Returns true on success. Otherwise, this will print the error message to
// stderr and exit if \p Errs is not set (nullptr by default), or print the
// error message to \p Errs and return false if \p Errs is provided.
//
// If EnvVar is not nullptr, command-line options are also parsed from the
// environment variable named by EnvVar.  Precedence is given to occurrences
// from argv.  This precedence is currently implemented by parsing argv after
// the environment variable, so it is only implemented correctly for options
// that give precedence to later occurrences.  If your program supports options
// that give precedence to earlier occurrences, you will need to extend this
// function to support it correctly.</doc>
<use f='halide/src/CodeGen_LLVM.cpp' l='256' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM15initialize_llvmEv'/>
