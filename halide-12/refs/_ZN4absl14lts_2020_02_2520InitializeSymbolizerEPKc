<dec f='halide/build-apps/abseil-cpp/absl/debugging/symbolize.h' l='73' type='void absl::lts_2020_02_25::InitializeSymbolizer(const char * argv0)'/>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/symbolize.h' l='60'>// InitializeSymbolizer()
//
// Initializes the program counter symbolizer, given the path of the program
// (typically obtained through `main()`s `argv[0]`). The Abseil symbolizer
// allows you to read program counters (instruction pointer values) using their
// human-readable names within output such as stack traces.
//
// Example:
//
// int main(int argc, char *argv[]) {
//   absl::InitializeSymbolizer(argv[0]);
//   // Now you can use the symbolizer
// }</doc>
<def f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='84' ll='92' type='void absl::lts_2020_02_25::InitializeSymbolizer(const char * argv0)'/>
