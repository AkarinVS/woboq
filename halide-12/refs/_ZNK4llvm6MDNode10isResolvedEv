<def f='halide/llvm-install/include/llvm/IR/Metadata.h' l='964' type='bool llvm::MDNode::isResolved() const'/>
<doc f='halide/llvm-install/include/llvm/IR/Metadata.h' l='953'>/// Check if node is fully resolved.
  ///
  /// If \a isTemporary(), this always returns \c false; if \a isDistinct(),
  /// this always returns \c true.
  ///
  /// If \a isUniqued(), returns \c true if this has already dropped RAUW
  /// support (because all operands are resolved).
  ///
  /// As forward declarations are resolved, their containers should get
  /// resolved automatically.  However, if this (or one of its operands) is
  /// involved in a cycle, \a resolveCycles() needs to be called explicitly.</doc>
