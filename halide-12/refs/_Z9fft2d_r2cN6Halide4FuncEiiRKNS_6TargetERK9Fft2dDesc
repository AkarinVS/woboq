<dec f='halide/apps/fft/fft.h' l='58' type='ComplexFunc fft2d_r2c(Halide::Func r, int N0, int N1, const Halide::Target &amp; target, const Fft2dDesc &amp; desc = Fft2dDesc())'/>
<def f='halide/apps/fft/fft.cpp' l='1110' ll='1115' type='ComplexFunc fft2d_r2c(Halide::Func r, int N0, int N1, const Halide::Target &amp; target, const Fft2dDesc &amp; desc = Fft2dDesc())'/>
<doc f='halide/apps/fft/fft.h' l='53'>// Compute the N0 x N1 2D complex DFT of the first 2 dimensions of a real valued
// function r. The first 2 dimensions of r should be defined on at least [0, N0)
// and [0, N1) for dimensions 0, 1, respectively. Note that the transform domain
// has dimensions N0 x N1 / 2 + 1 due to the conjugate symmetry of real DFTs.
// There is no normalization.</doc>
<use f='halide/apps/fft/fft_generator.cpp' l='111' u='c' c='_ZN12_GLOBAL__N_112FFTGenerator8generateEv'/>
<use f='halide/apps/fft/main.cpp' l='97' u='c' c='main'/>
<use f='halide/apps/fft/main.cpp' l='98' u='c' c='main'/>
<use f='halide/apps/fft/main.cpp' l='186' u='c' c='main'/>
