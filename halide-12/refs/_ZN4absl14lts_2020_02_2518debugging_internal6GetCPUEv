<dec f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.h' l='139' type='int absl::lts_2020_02_25::debugging_internal::GetCPU()'/>
<dec f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.h' l='150' type='int absl::lts_2020_02_25::debugging_internal::GetCPU()'/>
<def f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='171' ll='176' macro='1' type='int absl::lts_2020_02_25::debugging_internal::GetCPU()'/>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.h' l='139'>// Needs access to getcpu_fn_.</doc>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.h' l='145'>// Same as sched_getcpu() on later glibc versions.
// Return current CPU, using (fast) __vdso_getcpu@LINUX_2.6 if present,
// otherwise use syscall(SYS_getcpu,...).
// May return -1 with errno == ENOSYS if the kernel doesn&apos;t
// support SYS_getcpu.</doc>
