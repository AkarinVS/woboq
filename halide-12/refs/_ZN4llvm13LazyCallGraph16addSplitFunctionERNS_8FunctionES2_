<dec f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='1060' type='void llvm::LazyCallGraph::addSplitFunction(llvm::Function &amp; OriginalFunction, llvm::Function &amp; NewFunction)'/>
<doc f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='1049'>/// Add a new function split/outlined from an existing function.
  ///
  /// The new function may only reference other functions that the original
  /// function did.
  ///
  /// The original function must reference (either directly or indirectly) the
  /// new function.
  ///
  /// The new function may also reference the original function.
  /// It may end up in a parent SCC in the case that the original function&apos;s
  /// edge to the new function is a ref edge, and the edge back is a call edge.</doc>
