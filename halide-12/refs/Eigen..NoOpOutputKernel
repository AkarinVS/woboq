<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h' l='599' c='_ZNK5Eigen10TensorBaseIT_Li0EE8contractERKTL0__RKTL0_0_'/>
<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h' l='601' c='_ZNK5Eigen10TensorBaseIT_Li0EE8contractERKTL0__RKTL0_0_'/>
<def f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h' l='294' ll='322'/>
<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h' l='324'/>
<size>1</size>
<doc f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorContraction.h' l='287'>// Output kernel allows to fuse operations into the tensor contraction.
//
// Examples:
//   1. Elementwise Relu transformation following Conv2D.
//   2. AddBias to the Conv2D output channels dimension.
//
// The NoOpOutputKernel implements an output kernel that does absolutely nothing.</doc>
<fun r='_ZNK5Eigen16NoOpOutputKernelclERKNS_8internal16blas_data_mapperIT0_T_Li0ELi0ELi1EEERKNS_23TensorContractionParamsES4_S4_S4_S4_'/>
