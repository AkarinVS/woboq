<def f='halide/llvm-install/include/llvm/MC/MCTargetOptions.h' l='36' ll='83'/>
<use f='halide/llvm-install/include/llvm/Target/TargetOptions.h' l='410'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='132'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='151'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='154'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='340' c='_ZNK4llvm6Target15createMCAsmInfoERKNS_14MCRegisterInfoENS_9StringRefERKNS_15MCTargetOptionsE'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='409' c='_ZNK4llvm6Target18createMCAsmBackendERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoERKNS_15MCTargetOptionsE'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='422' c='_ZNK4llvm6Target17createMCAsmParserERKNS_15MCSubtargetInfoERNS_11MCAsmParserERKNS_11MCInstrInfoERKNS_15MCTargetOptionsE'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='955' c='_ZN4llvm17RegisterMCAsmInfo9AllocatorERKNS_14MCRegisterInfoERKNS_6TripleERKNS_15MCTargetOptionsE'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='1142' c='_ZN4llvm20RegisterMCAsmBackend9AllocatorERKNS_6TargetERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoERKNS_15MCTargetOptionsE'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='1163' c='_ZN4llvm19RegisterMCAsmParser9AllocatorERKNS_15MCSubtargetInfoERNS_11MCAsmParserERKNS_11MCInstrInfoERKNS_15MCTargetOptionsE'/>
<size>152</size>
<mbr r='llvm::MCTargetOptions::MCRelaxAll' o='0' t='bool'/>
<mbr r='llvm::MCTargetOptions::MCNoExecStack' o='1' t='bool'/>
<mbr r='llvm::MCTargetOptions::MCFatalWarnings' o='2' t='bool'/>
<mbr r='llvm::MCTargetOptions::MCNoWarn' o='3' t='bool'/>
<mbr r='llvm::MCTargetOptions::MCNoDeprecatedWarn' o='4' t='bool'/>
<mbr r='llvm::MCTargetOptions::MCSaveTempLabels' o='5' t='bool'/>
<mbr r='llvm::MCTargetOptions::MCUseDwarfDirectory' o='6' t='bool'/>
<mbr r='llvm::MCTargetOptions::MCIncrementalLinkerCompatible' o='7' t='bool'/>
<mbr r='llvm::MCTargetOptions::ShowMCEncoding' o='8' t='bool'/>
<mbr r='llvm::MCTargetOptions::ShowMCInst' o='9' t='bool'/>
<mbr r='llvm::MCTargetOptions::AsmVerbose' o='10' t='bool'/>
<mbr r='llvm::MCTargetOptions::PreserveAsmComments' o='11' t='bool'/>
<mbr r='llvm::MCTargetOptions::Dwarf64' o='12' t='bool'/>
<mbr r='llvm::MCTargetOptions::DwarfVersion' o='32' t='int'/>
<mbr r='llvm::MCTargetOptions::ABIName' o='64' t='std::string'/>
<mbr r='llvm::MCTargetOptions::AssemblyLanguage' o='320' t='std::string'/>
<mbr r='llvm::MCTargetOptions::SplitDwarfFile' o='576' t='std::string'/>
<mbr r='llvm::MCTargetOptions::Argv0' o='832' t='const char *'/>
<mbr r='llvm::MCTargetOptions::CommandLineArgs' o='896' t='ArrayRef&lt;const char *&gt;'/>
<mbr r='llvm::MCTargetOptions::IASSearchPaths' o='1024' t='std::vector&lt;std::string&gt;'/>
<fun r='_ZN4llvm15MCTargetOptionsC1Ev'/>
<fun r='_ZNK4llvm15MCTargetOptions10getABINameEv'/>
<fun r='_ZNK4llvm15MCTargetOptions19getAssemblyLanguageEv'/>
