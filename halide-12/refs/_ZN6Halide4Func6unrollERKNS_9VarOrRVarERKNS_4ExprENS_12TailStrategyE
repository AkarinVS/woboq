<dec f='halide/halide-install/include/Halide.h' l='17401' type='Halide::Func &amp; Halide::Func::unroll(const Halide::VarOrRVar &amp; var, const Halide::Expr &amp; factor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<doc f='halide/halide-install/include/Halide.h' l='17397'>/** Split a dimension by the given factor, then unroll the inner
     * dimension. This is how you unroll a loop of unknown size by
     * some constant factor. After this call, var refers to the outer
     * dimension of the split. &apos;factor&apos; must be an integer. */</doc>
<use f='halide/apps/bilateral_grid/bilateral_grid_generator.cpp' l='111' u='c' c='_ZN12_GLOBAL__N_113BilateralGrid8generateEv'/>
<use f='halide/apps/bilateral_grid/bilateral_grid_generator.cpp' l='118' u='c' c='_ZN12_GLOBAL__N_113BilateralGrid8generateEv'/>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='162' u='c' c='_ZN12_GLOBAL__N_18Demosaic8scheduleEv'/>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='472' u='c' c='_ZN12_GLOBAL__N_110CameraPipe8generateEv'/>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='476' u='c' c='_ZN12_GLOBAL__N_110CameraPipe8generateEv'/>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='480' u='c' c='_ZN12_GLOBAL__N_110CameraPipe8generateEv'/>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='493' u='c' c='_ZN12_GLOBAL__N_110CameraPipe8generateEv'/>
<use f='halide/apps/fft/fft.cpp' l='865' u='c' c='_Z9fft2d_r2cN6Halide4FuncERKSt6vectorIiSaIiEES5_RKNS_6TargetERK9Fft2dDesc'/>
<use f='halide/apps/fft/fft.cpp' l='1054' u='c' c='_Z9fft2d_c2r5FuncTI11ComplexExprESt6vectorIiSaIiEES4_RKN6Halide6TargetERK9Fft2dDesc'/>
<use f='halide/apps/hannk/halide/conv_generator.cpp' l='228' u='c' c='_ZN5hannk4Conv8generateEv'/>
<use f='halide/apps/hannk/halide/depthwise_conv_generator.cpp' l='204' u='c' c='_ZN5hannk13DepthwiseConv8generateEv'/>
<use f='halide/apps/harris/harris_generator.cpp' l='80' u='c' c='_ZN12_GLOBAL__N_16Harris8generateEv'/>
<use f='halide/apps/harris/harris_generator.cpp' l='93' u='c' c='_ZN12_GLOBAL__N_16Harris8generateEv'/>
<use f='halide/apps/harris/harris_generator.cpp' l='96' u='c' c='_ZN12_GLOBAL__N_16Harris8generateEv'/>
<use f='halide/apps/unsharp/unsharp_generator.cpp' l='87' u='c' c='_ZN12_GLOBAL__N_17Unsharp8generateEv'/>
<dec f='halide/build/include/Halide.h' l='17401' type='Halide::Func &amp; Halide::Func::unroll(const Halide::VarOrRVar &amp; var, const Halide::Expr &amp; factor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<doc f='halide/build/include/Halide.h' l='17397'>/** Split a dimension by the given factor, then unroll the inner
     * dimension. This is how you unroll a loop of unknown size by
     * some constant factor. After this call, var refers to the outer
     * dimension of the split. &apos;factor&apos; must be an integer. */</doc>
<dec f='halide/src/Func.h' l='1521' type='Halide::Func &amp; Halide::Func::unroll(const Halide::VarOrRVar &amp; var, const Halide::Expr &amp; factor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<doc f='halide/src/Func.h' l='1517'>/** Split a dimension by the given factor, then unroll the inner
     * dimension. This is how you unroll a loop of unknown size by
     * some constant factor. After this call, var refers to the outer
     * dimension of the split. &apos;factor&apos; must be an integer. */</doc>
<def f='halide/src/Func.cpp' l='2216' ll='2220' type='Halide::Func &amp; Halide::Func::unroll(const Halide::VarOrRVar &amp; var, const Halide::Expr &amp; factor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<use f='halide/test/generator/mandelbrot_generator.cpp' l='85' u='c' c='_ZN12_GLOBAL__N_110Mandelbrot8generateEv'/>
<use f='halide/test/generator/memory_profiler_mandelbrot_generator.cpp' l='88' u='c' c='_ZN12_GLOBAL__N_110Mandelbrot8generateEv'/>
