<dec f='halide/halide-install/include/Halide.h' l='5892' type='void Halide::LoopLevel::LoopLevel()'/>
<use f='halide/halide-install/include/Halide.h' l='23642' u='c' c='_ZNK6Halide8Internal24GeneratorParam_LoopLevel17get_default_valueB5cxx11Ev'/>
<doc f='halide/halide-install/include/Halide.h' l='5890'>/** Construct an undefined LoopLevel. Calling any method on an undefined
     * LoopLevel (other than set()) will assert. */</doc>
<dec f='halide/build/include/Halide.h' l='5892' type='void Halide::LoopLevel::LoopLevel()'/>
<use f='halide/build/include/Halide.h' l='23642' u='c' c='_ZNK6Halide8Internal24GeneratorParam_LoopLevel17get_default_valueB5cxx11Ev'/>
<doc f='halide/build/include/Halide.h' l='5890'>/** Construct an undefined LoopLevel. Calling any method on an undefined
     * LoopLevel (other than set()) will assert. */</doc>
<dec f='halide/src/Schedule.h' l='175' type='void Halide::LoopLevel::LoopLevel()'/>
<doc f='halide/src/Schedule.h' l='173'>/** Construct an undefined LoopLevel. Calling any method on an undefined
     * LoopLevel (other than set()) will assert. */</doc>
<use f='halide/src/Generator.h' l='708' u='c' c='_ZNK6Halide8Internal24GeneratorParam_LoopLevel17get_default_valueB5cxx11Ev'/>
<def f='halide/src/Schedule.cpp' l='72' ll='74' type='void Halide::LoopLevel::LoopLevel()'/>
<doc f='halide/src/Schedule.cpp' l='69'>// Note that even &apos;undefined&apos; LoopLevels get a LoopLevelContents; this is deliberate,
// as we want to be able to create an undefined LoopLevel, pass it to another function
// to use, then mutate it afterwards via &apos;set()&apos;.</doc>
<use f='halide/src/ScheduleFunctions.cpp' l='1712' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_121ComputeLegalSchedules5visitEPKNS0_3ForE'/>
