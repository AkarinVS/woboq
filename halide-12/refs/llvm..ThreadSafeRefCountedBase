<def f='halide/llvm-install/include/llvm/ADT/IntrusiveRefCntPtr.h' l='101' ll='130'/>
<ovr f='halide/llvm-install/include/llvm/Support/VirtualFileSystem.h' l='245' c='llvm::vfs::FileSystem'/>
<use f='halide/llvm-install/include/llvm/Support/VirtualFileSystem.h' l='245'/>
<doc f='halide/llvm-install/include/llvm/ADT/IntrusiveRefCntPtr.h' l='100'>/// A thread-safe version of \c RefCountedBase.</doc>
<mbr r='llvm::ThreadSafeRefCountedBase::RefCount' t='std::atomic&lt;int&gt;'/>
<fun r='_ZN4llvm24ThreadSafeRefCountedBaseC1Ev'/>
<fun r='_ZN4llvm24ThreadSafeRefCountedBaseC1ERKNS_24ThreadSafeRefCountedBaseIT_EE'/>
<fun r='_ZN4llvm24ThreadSafeRefCountedBaseaSERKNS_24ThreadSafeRefCountedBaseIT_EE'/>
<fun r='_ZN4llvm24ThreadSafeRefCountedBaseD1Ev'/>
<fun r='_ZNK4llvm24ThreadSafeRefCountedBase6RetainEv'/>
<fun r='_ZNK4llvm24ThreadSafeRefCountedBase7ReleaseEv'/>
