<def f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='100' ll='107'/>
<def f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='108' ll='116'/>
<def f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='117' ll='124'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='136' c='_ZN11flatbuffers14VectorIteratorC1EPKhj'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='167' c='_ZNK11flatbuffers14VectorIteratormiERKNS_14VectorIteratorIT_T0_EE'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='170' c='_ZNK11flatbuffers14VectorIteratordeEv'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='172' c='_ZNK11flatbuffers14VectorIteratorptEv'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='175' c='_ZN11flatbuffers14VectorIteratorppEv'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='181' c='_ZN11flatbuffers14VectorIteratorppEi'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='186' c='_ZNK11flatbuffers14VectorIteratorplERKj'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='191' c='_ZN11flatbuffers14VectorIteratorpLERKj'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='196' c='_ZN11flatbuffers14VectorIteratormmEv'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='202' c='_ZN11flatbuffers14VectorIteratormmEi'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='207' c='_ZNK11flatbuffers14VectorIteratormiERKj'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='212' c='_ZN11flatbuffers14VectorIteratormIERKj'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='240'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='242'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='253'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='254'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='258' c='_ZNK11flatbuffers6Vector3GetEj'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='330' c='_ZNK11flatbuffers6Vector16GetMutableObjectEj'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='346' c='_ZNK11flatbuffers6Vector11LookupByKeyETL0__'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='354' c='_ZNK11flatbuffers6Vector11LookupByKeyETL0__'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='373' c='_ZN11flatbuffers6Vector10KeyCompareEPKvS2_'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='433'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='441' c='_ZNK11flatbuffers5Array3GetEj'/>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='92'>// When we read serialized data from memory, in the case of most scalars,
// we want to just read T, but in the case of Offset, we want to actually
// perform the indirection and return a pointer.
// The template specialization below does just that.
// It is wrapped in a struct since function templates can&apos;t overload on the
// return type like this.
// The typedef is for the convenience of callers of this function
// (avoiding the need for a trailing return decltype)</doc>
<smbr r='flatbuffers::IndirectHelper::element_stride' t='const size_t'/>
<fun r='_ZN11flatbuffers14IndirectHelper4ReadEPKhj'/>
<smbr r='flatbuffers::IndirectHelper{Offset{type-parameter-0-0}}::element_stride' t='const size_t'/>
<fun r='_ZN11flatbuffers14IndirectHelperINS_6OffsetIT_EEE4ReadEPKhj'/>
<smbr r='flatbuffers::IndirectHelper{consttype-parameter-0-0*}::element_stride' t='const size_t'/>
<fun r='_ZN11flatbuffers14IndirectHelperIPKT_E4ReadEPKhj'/>
