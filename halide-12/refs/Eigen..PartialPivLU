<use f='halide/build-apps/eigen/Eigen/src/Core/MatrixBase.h' l='327' c='_ZNK5Eigen10MatrixBase12partialPivLuEv'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/MatrixBase.h' l='329' c='_ZNK5Eigen10MatrixBase2luEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='17'/>
<def f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='76' ll='281'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='77'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='284' c='_ZN5Eigen12PartialPivLUC1Ev'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='295' c='_ZN5Eigen12PartialPivLUC1El'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='307' c='_ZN5Eigen12PartialPivLUC1ERKNS_9EigenBaseITL0__EE'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='320' c='_ZN5Eigen12PartialPivLUC1ERNS_9EigenBaseITL0__EE'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='520' c='_ZN5Eigen12PartialPivLU7computeEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='547' c='_ZNK5Eigen12PartialPivLU11determinantEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='547' c='_ZNK5Eigen12PartialPivLU11determinantEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='557' c='_ZNK5Eigen12PartialPivLU19reconstructedMatrixEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='576'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='576'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='578'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='596' c='_ZNK5Eigen10MatrixBase12partialPivLuEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='599' c='_ZNK5Eigen10MatrixBase12partialPivLuEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='611' c='_ZNK5Eigen10MatrixBase2luEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='614' c='_ZNK5Eigen10MatrixBase2luEv'/>
<doc f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='43'>/** \ingroup LU_Module
  *
  * \class PartialPivLU
  *
  * \brief LU decomposition of a matrix with partial pivoting, and related features
  *
  * \tparam _MatrixType the type of the matrix of which we are computing the LU decomposition
  *
  * This class represents a LU decomposition of a \b square \b invertible matrix, with partial pivoting: the matrix A
  * is decomposed as A = PLU where L is unit-lower-triangular, U is upper-triangular, and P
  * is a permutation matrix.
  *
  * Typically, partial pivoting LU decomposition is only considered numerically stable for square invertible
  * matrices. Thus LAPACK&apos;s dgesv and dgesvx require the matrix to be square and invertible. The present class
  * does the same. It will assert that the matrix is square, but it won&apos;t (actually it can&apos;t) check that the
  * matrix is invertible: it is your task to check that you only use this decomposition on invertible matrices.
  *
  * The guaranteed safe alternative, working for all matrices, is the full pivoting LU decomposition, provided
  * by class FullPivLU.
  *
  * This is \b not a rank-revealing LU decomposition. Many features are intentionally absent from this class,
  * such as rank computation. If you need these features, use class FullPivLU.
  *
  * This LU decomposition is suitable to invert invertible matrices. It is what MatrixBase::inverse() uses
  * in the general case.
  * On the other hand, it is \b not suitable to determine whether a given matrix is invertible.
  *
  * The data of the LU decomposition can be directly accessed through the methods matrixLU(), permutationP().
  *
  * This class supports the \link InplaceDecomposition inplace decomposition \endlink mechanism.
  * 
  * \sa MatrixBase::partialPivLu(), MatrixBase::determinant(), MatrixBase::inverse(), MatrixBase::computeInverse(), class FullPivLU
  */</doc>
<fun r='_ZN5Eigen12PartialPivLUC1Ev'/>
<fun r='_ZN5Eigen12PartialPivLUC1El'/>
<fun r='_ZN5Eigen12PartialPivLUC1ERKNS_9EigenBaseITL0__EE'/>
<fun r='_ZN5Eigen12PartialPivLUC1ERNS_9EigenBaseITL0__EE'/>
<fun r='_ZN5Eigen12PartialPivLU7computeERKNS_9EigenBaseITL0__EE'/>
<fun r='_ZNK5Eigen12PartialPivLU8matrixLUEv'/>
<fun r='_ZNK5Eigen12PartialPivLU12permutationPEv'/>
<fun r='_ZNK5Eigen12PartialPivLU5rcondEv'/>
<fun r='_ZNK5Eigen12PartialPivLU7inverseEv'/>
<fun r='_ZNK5Eigen12PartialPivLU11determinantEv'/>
<fun r='_ZNK5Eigen12PartialPivLU19reconstructedMatrixEv'/>
<fun r='_ZNK5Eigen12PartialPivLU4rowsEv'/>
<fun r='_ZNK5Eigen12PartialPivLU4colsEv'/>
<fun r='_ZNK5Eigen12PartialPivLU11_solve_implERKTL0__RTL0_0_'/>
<fun r='_ZNK5Eigen12PartialPivLU22_solve_impl_transposedERKTL0_0_RTL0_1_'/>
<fun r='_ZN5Eigen12PartialPivLU25check_template_parametersEv'/>
<fun r='_ZN5Eigen12PartialPivLU7computeEv'/>
<mbr r='Eigen::PartialPivLU::m_lu' t='Eigen::PartialPivLU::MatrixType'/>
<mbr r='Eigen::PartialPivLU::m_p' t='Eigen::PartialPivLU::PermutationType'/>
<mbr r='Eigen::PartialPivLU::m_rowsTranspositions' t='Eigen::PartialPivLU::TranspositionType'/>
<mbr r='Eigen::PartialPivLU::m_l1_norm' t='Eigen::PartialPivLU::RealScalar'/>
<mbr r='Eigen::PartialPivLU::m_det_p' t='signed char'/>
<mbr r='Eigen::PartialPivLU::m_isInitialized' t='bool'/>
<fun r='_ZN5Eigen12PartialPivLUC1Ev'/>
<fun r='_ZN5Eigen12PartialPivLUC1El'/>
<fun r='_ZN5Eigen12PartialPivLUC1ERKNS_9EigenBaseITL0__EE'/>
<fun r='_ZN5Eigen12PartialPivLUC1ERNS_9EigenBaseITL0__EE'/>
<fun r='_ZN5Eigen12PartialPivLU7computeEv'/>
<fun r='_ZNK5Eigen12PartialPivLU11determinantEv'/>
<fun r='_ZNK5Eigen12PartialPivLU19reconstructedMatrixEv'/>
