<def f='halide/src/IROperator.cpp' l='672' ll='679' type='void Halide::Internal::match_bits(Halide::Expr &amp; x, Halide::Expr &amp; y)'/>
<use f='halide/src/IROperator.cpp' l='703' u='c' c='_ZN6Halide8Internal19match_types_bitwiseERNS_4ExprES2_PKc'/>
<use f='halide/src/IROperator.cpp' l='1077' u='c' c='_ZN6Halide8Internal12widening_mulENS_4ExprES1_'/>
<use f='halide/src/IROperator.cpp' l='1100' u='c' c='_ZN6Halide8Internal19widening_shift_leftENS_4ExprES1_'/>
<use f='halide/src/IROperator.cpp' l='1120' u='c' c='_ZN6Halide8Internal20widening_shift_rightENS_4ExprES1_'/>
<use f='halide/src/IROperator.cpp' l='1140' u='c' c='_ZN6Halide8Internal20rounding_shift_rightENS_4ExprES1_'/>
<use f='halide/src/IROperator.cpp' l='1160' u='c' c='_ZN6Halide8Internal19rounding_shift_leftENS_4ExprES1_'/>
<use f='halide/src/IROperator.cpp' l='1224' u='c' c='_ZN6Halide8Internal15mul_shift_rightENS_4ExprES1_S1_'/>
<use f='halide/src/IROperator.cpp' l='1243' u='c' c='_ZN6Halide8Internal24rounding_mul_shift_rightENS_4ExprES1_S1_'/>
<use f='halide/src/IROperator.cpp' l='2392' u='c' c='_ZN6HalidelsENS_4ExprES0_'/>
<use f='halide/src/IROperator.cpp' l='2410' u='c' c='_ZN6HalidersENS_4ExprES0_'/>
<doc f='halide/src/IROperator.cpp' l='670'>// Cast to the wider type of the two. Already guaranteed to leave
// signed/unsigned on number of lanes unchanged.</doc>
