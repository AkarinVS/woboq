<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_params.h' l='85' ll='98'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_params.h' l='114'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_params.h' l='168'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_params.h' l='204'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_params.h' l='230'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_custom_gemv.h' l='58'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_custom_gemv.h' l='98'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_custom_gemv.h' l='146'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_ruy.h' l='63'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_ruy.h' l='77'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_ruy.h' l='103'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_ruy.h' l='114'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_ruy.h' l='123'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_gemmlowp.h' l='68'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_x86.h' l='36'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_x86.h' l='82'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_x86.h' l='88'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_x86.h' l='94'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm.h' l='57'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm.h' l='115'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm.h' l='177'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_params.h' l='70'>// Enumeration of broad categories of Gemm.
//
// The primary reason for this to exist is to allow Gemm to compile
// only uniform-quantized or only per-channel-quantized code paths.
// This is unneeded with ruy as the back-end, as this is only a runtime
// difference in ruy, but with gemmlowp these really are separate code
// paths and templatizing in a QuantizationFlavor is necessary to avoid
// compiling unused gemmlowp code. Indeed, TFLite currently uses
// uint8 with uniform quantization and int8 with per-channel quantization,
// and does not use uint8 with per-channel. We want to avoid compiling
// the gemmlowp uint8 per-channel path when gemmlowp is the back-end.
//
// It&apos;s possible to drop this in the future if gemmlowp goes away and no
// other then-relevant backend library handles quantized paths in a way that
// requires knowing this at compile-time.</doc>
