<dec f='halide/build-apps/abseil-cpp/absl/numeric/int128.h' l='435' type='absl::lts_2020_02_25::int128 absl::lts_2020_02_25::MakeInt128(int64_t high, uint64_t low)'/>
<def f='halide/build-apps/abseil-cpp/absl/numeric/int128.h' l='969' ll='971' type='absl::lts_2020_02_25::int128 absl::lts_2020_02_25::MakeInt128(int64_t high, uint64_t low)'/>
<doc f='halide/build-apps/abseil-cpp/absl/numeric/int128.h' l='421'>// MakeInt128()
  //
  // Constructs a `int128` numeric value from two 64-bit integers. Note that
  // signedness is conveyed in the upper `high` value.
  //
  //   (absl::int128(1) &lt;&lt; 64) * high + low
  //
  // Note that this factory function is the only way to construct a `int128`
  // from integer values greater than 2^64 or less than -2^64.
  //
  // Example:
  //
  //   absl::int128 big = absl::MakeInt128(1, 0);
  //   absl::int128 big_n = absl::MakeInt128(-1, 0);</doc>
