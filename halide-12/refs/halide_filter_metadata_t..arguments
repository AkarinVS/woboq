<dec f='halide/halide-install/include/Halide.h' l='1781' type='const struct halide_filter_argument_t *'/>
<offset>64</offset>
<doc f='halide/halide-install/include/Halide.h' l='1777'>/** An array of the filters input and output arguments; this will never be
     * null. The order of arguments is not guaranteed (input and output arguments
     * may come in any order); however, it is guaranteed that all arguments
     * will have a unique name within a given filter. */</doc>
<dec f='halide/halide-install/include/HalideRuntime.h' l='1683' type='const struct halide_filter_argument_t *'/>
<offset>64</offset>
<doc f='halide/halide-install/include/HalideRuntime.h' l='1679'>/** An array of the filters input and output arguments; this will never be
     * null. The order of arguments is not guaranteed (input and output arguments
     * may come in any order); however, it is guaranteed that all arguments
     * will have a unique name within a given filter. */</doc>
<use f='halide/apps/hannk/interpreter/ops.cpp' l='699' u='r' c='_ZNK5hannk8Conv2DOp11filter_typeEv'/>
<dec f='halide/build/include/HalideRuntime.h' l='1683' type='const struct halide_filter_argument_t *'/>
<offset>64</offset>
<doc f='halide/build/include/HalideRuntime.h' l='1679'>/** An array of the filters input and output arguments; this will never be
     * null. The order of arguments is not guaranteed (input and output arguments
     * may come in any order); however, it is guaranteed that all arguments
     * will have a unique name within a given filter. */</doc>
<dec f='halide/build/include/Halide.h' l='1781' type='const struct halide_filter_argument_t *'/>
<offset>64</offset>
<doc f='halide/build/include/Halide.h' l='1777'>/** An array of the filters input and output arguments; this will never be
     * null. The order of arguments is not guaranteed (input and output arguments
     * may come in any order); however, it is guaranteed that all arguments
     * will have a unique name within a given filter. */</doc>
<dec f='halide/src/runtime/HalideRuntime.h' l='1683' type='const struct halide_filter_argument_t *'/>
<offset>64</offset>
<doc f='halide/src/runtime/HalideRuntime.h' l='1679'>/** An array of the filters input and output arguments; this will never be
     * null. The order of arguments is not guaranteed (input and output arguments
     * may come in any order); however, it is guaranteed that all arguments
     * will have a unique name within a given filter. */</doc>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='1339' u='r' c='_Z14check_metadataRK24halide_filter_metadata_tb'/>
<use f='halide/tools/RunGen.h' l='909' u='r' c='_ZN6Halide6RunGen6RunGenC1EPFiPPvEPK24halide_filter_metadata_t'/>
<use f='halide/tools/RunGen.h' l='914' u='r' c='_ZN6Halide6RunGen6RunGenC1EPFiPPvEPK24halide_filter_metadata_t'/>
<use f='halide/tools/RunGen.h' l='1353' u='r' c='_ZNK6Halide6RunGen6RunGen8describeEv'/>
<dec f='halide/build/tutorial/lesson_10_halide.h' l='1755' type='const struct halide_filter_argument_t *'/>
<offset>64</offset>
<doc f='halide/build/tutorial/lesson_10_halide.h' l='1751'>/** An array of the filters input and output arguments; this will never be
     * null. The order of arguments is not guaranteed (input and output arguments
     * may come in any order); however, it is guaranteed that all arguments
     * will have a unique name within a given filter. */</doc>
