<dec f='halide/halide-install/include/Halide.h' l='2397' type='void Halide::set_custom_compile_time_error_reporter(Halide::CompileTimeErrorReporter * error_reporter)'/>
<doc f='halide/halide-install/include/Halide.h' l='2390'>/** The default error reporter logs to stderr, then throws an exception
 * (if HALIDE_WITH_EXCEPTIONS) or calls abort (if not). This allows customization
 * of that behavior if a more gentle response to error reporting is desired.
 * Note that error_reporter is expected to remain valid across all Halide usage;
 * it is up to the caller to ensure that this is the case (and to do any
 * cleanup necessary).
 */</doc>
<dec f='halide/build/include/Halide.h' l='2397' type='void Halide::set_custom_compile_time_error_reporter(Halide::CompileTimeErrorReporter * error_reporter)'/>
<doc f='halide/build/include/Halide.h' l='2390'>/** The default error reporter logs to stderr, then throws an exception
 * (if HALIDE_WITH_EXCEPTIONS) or calls abort (if not). This allows customization
 * of that behavior if a more gentle response to error reporting is desired.
 * Note that error_reporter is expected to remain valid across all Halide usage;
 * it is up to the caller to ensure that this is the case (and to do any
 * cleanup necessary).
 */</doc>
<use f='halide/python_bindings/src/PyError.cpp' l='32' u='c' c='_ZN6Halide14PythonBindings12define_errorERN8pybind117module_E'/>
<use f='halide/python_bindings/stub/PyStubImpl.cpp' l='60' u='c' c='_ZN6Halide14PythonBindings12_GLOBAL__N_122install_error_handlersERN8pybind117module_E'/>
<dec f='halide/src/Error.h' l='61' type='void Halide::set_custom_compile_time_error_reporter(Halide::CompileTimeErrorReporter * error_reporter)'/>
<doc f='halide/src/Error.h' l='54'>/** The default error reporter logs to stderr, then throws an exception
 * (if HALIDE_WITH_EXCEPTIONS) or calls abort (if not). This allows customization
 * of that behavior if a more gentle response to error reporting is desired.
 * Note that error_reporter is expected to remain valid across all Halide usage;
 * it is up to the caller to ensure that this is the case (and to do any
 * cleanup necessary).
 */</doc>
<def f='halide/src/Error.cpp' l='24' ll='26' type='void Halide::set_custom_compile_time_error_reporter(Halide::CompileTimeErrorReporter * error_reporter)'/>
