<dec f='halide/build-apps/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h' l='244' type='SelfAdjointEigenSolver&lt;_MatrixType&gt; &amp; Eigen::SelfAdjointEigenSolver::computeFromTridiagonal(const Eigen::SelfAdjointEigenSolver::RealVectorType &amp; diag, const Eigen::SelfAdjointEigenSolver::SubDiagonalType &amp; subdiag, int options = ComputeEigenvectors)'/>
<def f='halide/build-apps/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h' l='456' ll='474' type='SelfAdjointEigenSolver&lt;MatrixType&gt; &amp; Eigen::SelfAdjointEigenSolver::computeFromTridiagonal(const Eigen::SelfAdjointEigenSolver::RealVectorType &amp; diag, const Eigen::SelfAdjointEigenSolver::SubDiagonalType &amp; subdiag, int options = ComputeEigenvectors)'/>
<doc f='halide/build-apps/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h' l='232'>/**
      *\brief Computes the eigen decomposition from a tridiagonal symmetric matrix
      *
      * \param[in] diag The vector containing the diagonal of the matrix.
      * \param[in] subdiag The subdiagonal of the matrix.
      * \param[in] options Can be #ComputeEigenvectors (default) or #EigenvaluesOnly.
      * \returns Reference to \c *this
      *
      * This function assumes that the matrix has been reduced to tridiagonal form.
      *
      * \sa compute(const MatrixType&amp;, int) for more information
      */</doc>
