<dec f='halide/build-apps/abseil-cpp/absl/synchronization/barrier.h' l='69' type='bool absl::lts_2020_02_25::Barrier::Block()'/>
<def f='halide/build-apps/abseil-cpp/absl/synchronization/barrier.cc' l='28' ll='49' type='bool absl::lts_2020_02_25::Barrier::Block()'/>
<doc f='halide/build-apps/abseil-cpp/absl/synchronization/barrier.h' l='59'>// Barrier::Block()
  //
  // Blocks the current thread, and returns only when the `num_threads`
  // threshold of threads utilizing this barrier has been reached. `Block()`
  // returns `true` for precisely one caller, which may then destroy the
  // barrier.
  //
  // Memory ordering: For any threads X and Y, any action taken by X
  // before X calls `Block()` will be visible to Y after Y returns from
  // `Block()`.</doc>
