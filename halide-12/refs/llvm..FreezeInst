<inh f='halide/llvm-install/include/llvm/IR/InstrTypes.h' l='57' c='llvm::UnaryInstruction'/>
<def f='halide/llvm-install/include/llvm/IR/Instructions.h' l='5307' ll='5328'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='5313' c='_ZNK4llvm10FreezeInst9cloneImplEv'/>
<use f='halide/llvm-install/include/llvm/IR/IRBuilder.h' l='2563' c='_ZN4llvm13IRBuilderBase12CreateFreezeEPNS_5ValueERKNS_5TwineE'/>
<size>64</size>
<doc f='halide/llvm-install/include/llvm/IR/Instructions.h' l='5301'>//===----------------------------------------------------------------------===//
//                              FreezeInst Class
//===----------------------------------------------------------------------===//

/// This class represents a freeze function that returns random concrete
/// value if an operand is either a poison value or an undef value</doc>
<fun r='_ZNK4llvm10FreezeInst9cloneImplEv'/>
<fun r='_ZN4llvm10FreezeInstC1EPNS_5ValueERKNS_5TwineEPNS_11InstructionE'/>
<fun r='_ZN4llvm10FreezeInstC1EPNS_5ValueERKNS_5TwineEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm10FreezeInst7classofEPKNS_11InstructionE'/>
<fun r='_ZN4llvm10FreezeInst7classofEPKNS_5ValueE'/>
