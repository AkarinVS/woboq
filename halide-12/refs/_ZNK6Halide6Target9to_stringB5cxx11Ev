<dec f='halide/halide-install/include/Halide.h' l='5248' type='std::string Halide::Target::to_string() const'/>
<doc f='halide/halide-install/include/Halide.h' l='5237'>/** Convert the Target into a string form that can be reconstituted
     * by merge_string(), which will always be of the form
     *
     *   arch-bits-os-feature1-feature2...featureN.
     *
     * Note that is guaranteed that Target(t1.to_string()) == t1,
     * but not that Target(s).to_string() == s (since there can be
     * multiple strings that parse to the same Target)...
     * *unless* t1 contains &apos;unknown&apos; fields (in which case you&apos;ll get a string
     * that can&apos;t be parsed, which is intentional).
     */</doc>
<dec f='halide/build/include/Halide.h' l='5248' type='std::string Halide::Target::to_string() const'/>
<doc f='halide/build/include/Halide.h' l='5237'>/** Convert the Target into a string form that can be reconstituted
     * by merge_string(), which will always be of the form
     *
     *   arch-bits-os-feature1-feature2...featureN.
     *
     * Note that is guaranteed that Target(t1.to_string()) == t1,
     * but not that Target(s).to_string() == s (since there can be
     * multiple strings that parse to the same Target)...
     * *unless* t1 contains &apos;unknown&apos; fields (in which case you&apos;ll get a string
     * that can&apos;t be parsed, which is intentional).
     */</doc>
<use f='halide/python_bindings/src/PyTarget.cpp' l='10' u='c' c='_ZN6Halide14PythonBindings12_GLOBAL__N_111target_reprB5cxx11ERKNS_6TargetE'/>
<use f='halide/python_bindings/src/PyTarget.cpp' l='37' u='a' c='_ZN6Halide14PythonBindings13define_targetERN8pybind117module_E'/>
<use f='halide/python_bindings/src/PyTarget.cpp' l='38' u='a' c='_ZN6Halide14PythonBindings13define_targetERN8pybind117module_E'/>
<dec f='halide/src/Target.h' l='254' type='std::string Halide::Target::to_string() const'/>
<doc f='halide/src/Target.h' l='243'>/** Convert the Target into a string form that can be reconstituted
     * by merge_string(), which will always be of the form
     *
     *   arch-bits-os-feature1-feature2...featureN.
     *
     * Note that is guaranteed that Target(t1.to_string()) == t1,
     * but not that Target(s).to_string() == s (since there can be
     * multiple strings that parse to the same Target)...
     * *unless* t1 contains &apos;unknown&apos; fields (in which case you&apos;ll get a string
     * that can&apos;t be parsed, which is intentional).
     */</doc>
<use f='halide/src/CPlusPlusMangle.cpp' l='811' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_112check_resultEPKNS1_12MangleResultERmRKNS_6TargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='238' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM14new_for_targetERKNS_6TargetERN4llvm11LLVMContextE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='524' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM14finish_codegenEv'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='1033' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM21embed_metadata_getterERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_RKSt6vectorINS0_15LoweredArgumentESa9032539'/>
<use f='halide/src/CodeGen_OpenCL_Dev.cpp' l='1085' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118CodeGen_OpenCL_Dev11init_moduleEv'/>
<use f='halide/src/CompilerLogger.cpp' l='270' u='c' c='_ZN6Halide8Internal18JSONCompilerLogger14emit_to_streamERSo'/>
<use f='halide/src/DebugArguments.cpp' l='16' u='c' c='_ZN6Halide8Internal15debug_argumentsEPNS0_11LoweredFuncERKNS_6TargetE'/>
<use f='halide/src/DeviceInterface.cpp' l='82' u='c' c='_ZN6Halide35get_device_interface_for_device_apiENS_9DeviceAPIERKNS_6TargetEPKc'/>
<use f='halide/src/DeviceInterface.cpp' l='123' u='c' c='_ZN6Halide35get_device_interface_for_device_apiENS_9DeviceAPIERKNS_6TargetEPKc'/>
<use f='halide/src/Generator.cpp' l='995' u='c' c='_ZN6Halide8Internal26generate_filter_main_innerEiPPcRSo'/>
<use f='halide/src/Generator.cpp' l='997' u='c' c='_ZN6Halide8Internal26generate_filter_main_innerEiPPcRSo'/>
<use f='halide/src/Generator.cpp' l='1003' u='c' c='_ZN6Halide8Internal26generate_filter_main_innerEiPPcRSo'/>
<use f='halide/src/IRPrinter.cpp' l='69' u='c' c='_ZN6HalidelsERSoRKNS_6ModuleE'/>
<use f='halide/src/IRPrinter.cpp' l='170' u='c' c='_ZN6HalidelsERSoRKNS_6TargetE'/>
<use f='halide/src/JITModule.cpp' l='311' u='c' c='_ZN6Halide8Internal9JITModule14compile_moduleESt10unique_ptrIN4llvm6ModuleESt14default_deleteIS4_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc1691512'/>
<use f='halide/src/LLVM_Runtime_Linker.cpp' l='810' u='c' c='_ZN6Halide8Internal29get_initial_module_for_targetENS_6TargetEPN4llvm11LLVMContextEbb'/>
<use f='halide/src/Module.cpp' l='309' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118emit_schedule_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_6TargetESaISB_EES9_S9_S9_RSo'/>
<use f='halide/src/Module.cpp' l='456' u='c' c='_ZN6Halide12link_modulesERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_6ModuleESaIS9_EE'/>
<use f='halide/src/Module.cpp' l='458' u='c' c='_ZN6Halide12link_modulesERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_6ModuleESaIS9_EE'/>
<use f='halide/src/Module.cpp' l='774' u='c' c='_ZN6Halide19compile_multitargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt3mapINS_6OutputES5_St4lessIS9_ESaISt4pairIKS9_S5_EEERKSt6vec11731248'/>
<use f='halide/src/Module.cpp' l='792' u='c' c='_ZN6Halide19compile_multitargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt3mapINS_6OutputES5_St4lessIS9_ESaISt4pairIKS9_S5_EEERKSt6vec11731248'/>
<use f='halide/src/OffloadGPULoops.cpp' l='183' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116InjectGpuOffload5visitEPKNS0_3ForE'/>
<use f='halide/src/OffloadGPULoops.cpp' l='271' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116InjectGpuOffloadC1ERKNS_6TargetE'/>
<use f='halide/src/ScheduleFunctions.cpp' l='1998' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_117validate_scheduleENS0_8FunctionERKNS0_4StmtERKNS_6TargetEbRKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaI9230913'/>
<use f='halide/src/StmtToHtml.cpp' l='781' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110StmtToHtml5printERKNS_6ModuleE'/>
<use f='halide/src/Target.cpp' l='432' u='c' c='_ZN6Halide31get_jit_target_from_environmentEv'/>
<use f='halide/src/Target.cpp' l='562' u='c' c='_ZN6Halide12_GLOBAL__N_117bad_target_stringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<def f='halide/src/Target.cpp' l='607' ll='633' type='std::string Halide::Target::to_string() const'/>
<use f='halide/src/Target.cpp' l='1129' u='c' c='_ZN6Halide8Internal11target_testEv'/>
<use f='halide/src/Target.cpp' l='1129' u='c' c='_ZN6Halide8Internal11target_testEv'/>
<use f='halide/src/Target.cpp' l='1130' u='c' c='_ZN6Halide8Internal11target_testEv'/>
<use f='halide/src/Target.cpp' l='1133' u='c' c='_ZN6Halide8Internal11target_testEv'/>
<use f='halide/src/Target.cpp' l='1133' u='c' c='_ZN6Halide8Internal11target_testEv'/>
<use f='halide/src/autoschedulers/adams2019/AutoSchedule.cpp' l='543' u='c' c='_ZN6Halide8Internal13Autoscheduler17generate_scheduleERKSt6vectorINS0_8FunctionESaIS3_EERKNS_6TargetERKNS_13MachineParamsEPNS_20AutoSchedulerResultsE'/>
<use f='halide/src/autoschedulers/adams2019/get_host_target.cpp' l='19' u='c' c='main'/>
<use f='halide/src/autoschedulers/mullapudi2016/AutoSchedule.cpp' l='3380' u='c' c='_ZN6Halide8Internal13Mullapudi2016clERKNS_8PipelineERKNS_6TargetERKNS_13MachineParamsEPNS_20AutoSchedulerResultsE'/>
<use f='halide/tutorial/lesson_12_using_the_gpu.cpp' l='190' u='c' c='_ZN10MyPipeline16schedule_for_gpuEv'/>
