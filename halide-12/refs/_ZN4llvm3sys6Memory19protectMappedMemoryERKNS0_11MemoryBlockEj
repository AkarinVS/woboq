<dec f='halide/llvm-install/include/llvm/Support/Memory.h' l='129' type='static std::error_code llvm::sys::Memory::protectMappedMemory(const llvm::sys::MemoryBlock &amp; Block, unsigned int Flags)'/>
<doc f='halide/llvm-install/include/llvm/Support/Memory.h' l='114'>/// This method sets the protection flags for a block of memory to the
    /// state specified by /p Flags.  The behavior is not specified if the
    /// memory was not allocated using the allocateMappedMemory method.
    /// \p Block describes the memory block to be protected.
    /// \p Flags specifies the new protection state to be assigned to the block.
    /// \p ErrMsg [out] returns a string describing any error that occurred.
    ///
    /// If \p Flags is MF_WRITE, the actual behavior varies
    /// with the operating system (i.e. MF_READ | MF_WRITE on Windows) and the
    /// target architecture (i.e. MF_WRITE -&gt; MF_READ | MF_WRITE on i386).
    ///
    /// \r error_success if the function was successful, or an error_code
    /// describing the failure if an error occurred.
    ///
    /// Set memory protection state.</doc>
