<dec f='halide/llvm-install/include/llvm/IR/Module.h' l='268' type='std::unique_ptr&lt;RandomNumberGenerator&gt; llvm::Module::createRNG(const llvm::StringRef Name) const'/>
<doc f='halide/llvm-install/include/llvm/IR/Module.h' l='259'>/// Get a RandomNumberGenerator salted for use with this module. The
  /// RNG can be seeded via -rng-seed=&lt;uint64&gt; and is salted with the
  /// ModuleID and the provided pass salt. The returned RNG should not
  /// be shared across threads or passes.
  ///
  /// A unique RNG per pass ensures a reproducible random stream even
  /// when other randomness consuming passes are added or removed. In
  /// addition, the random stream will be reproducible across LLVM
  /// versions when the pass does not change.</doc>
