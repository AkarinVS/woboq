<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/delegates/telemetry.h' l='60' ll='91'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/delegates/telemetry.h' l='62' c='_ZN6tflite9delegates14DelegateStatusC1Ev'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/delegates/telemetry.h' l='64' c='_ZN6tflite9delegates14DelegateStatusC1Ei'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/delegates/telemetry.h' l='66' c='_ZN6tflite9delegates14DelegateStatusC1El'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/delegates/telemetry.h' l='105' c='_ZN6tflite9delegates20ReportDelegateStatusEP13TfLiteContextP14TfLiteDelegateRKNS0_14DelegateStatusE'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/delegates/telemetry.cc' l='40' c='_ZN6tflite9delegates20ReportDelegateStatusEP13TfLiteContextP14TfLiteDelegateRKNS0_14DelegateStatusE'/>
<size>8</size>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/delegates/telemetry.h' l='50'>// DelegateStatus defines a namespaced status with a combination of
// DelegateStatusSource &amp; the corresponding fine-grained 32-bit code. Used to
// convert to/from a 64-bit representation as follows:
//
// delegates::DelegateStatus status(
//      delegates::DelegateStatusSource::TFLITE_NNAPI,
//      ANEURALNETWORKS_OP_FAILED);
// int64_t code = status.full_status();
//
// auto parsed_status = delegates::DelegateStatus(code);</doc>
<fun r='_ZN6tflite9delegates14DelegateStatusC1Ev'/>
<fun r='_ZN6tflite9delegates14DelegateStatusC1Ei'/>
<fun r='_ZN6tflite9delegates14DelegateStatusC1El'/>
<fun r='_ZN6tflite9delegates14DelegateStatusC1ENS0_20DelegateStatusSourceEi'/>
<fun r='_ZNK6tflite9delegates14DelegateStatus11full_statusEv'/>
<fun r='_ZNK6tflite9delegates14DelegateStatus6sourceEv'/>
<fun r='_ZNK6tflite9delegates14DelegateStatus4codeEv'/>
<mbr r='tflite::delegates::DelegateStatus::source_' o='0' t='int32_t'/>
<mbr r='tflite::delegates::DelegateStatus::code_' o='32' t='int32_t'/>
