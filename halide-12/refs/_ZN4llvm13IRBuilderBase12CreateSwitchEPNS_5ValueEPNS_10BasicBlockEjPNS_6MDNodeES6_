<def f='halide/llvm-install/include/llvm/IR/IRBuilder.h' l='1078' ll='1083' type='llvm::SwitchInst * llvm::IRBuilderBase::CreateSwitch(llvm::Value * V, llvm::BasicBlock * Dest, unsigned int NumCases = 10, llvm::MDNode * BranchWeights = nullptr, llvm::MDNode * Unpredictable = nullptr)'/>
<doc f='halide/llvm-install/include/llvm/IR/IRBuilder.h' l='1075'>/// Create a switch instruction with the specified value, default dest,
  /// and with a hint for the number of cases that will be added (for efficient
  /// allocation).</doc>
<use f='halide/src/CodeGen_LLVM.cpp' l='4151' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM15codegen_assertsERKSt6vectorIPKNS0_10AssertStmtESaIS5_EE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='4230' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_10IfThenElseE'/>
