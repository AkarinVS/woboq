<def f='halide/build/_deps/pybind11-src/include/pybind11/detail/class.h' l='280' ll='295' type='void pybind11::detail::traverse_offset_bases(void * valueptr, const detail::type_info * tinfo, pybind11::detail::instance * self, bool (*)(void *, pybind11::detail::instance *) f)'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/detail/class.h' l='289' u='c' c='_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/detail/class.h' l='316' u='c' c='_ZN8pybind116detail17register_instanceEPNS0_8instanceEPvPKNS0_9type_infoE'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/detail/class.h' l='322' u='c' c='_ZN8pybind116detail19deregister_instanceEPNS0_8instanceEPvPKNS0_9type_infoE'/>
<doc f='halide/build/_deps/pybind11-src/include/pybind11/detail/class.h' l='277'>/// For multiple inheritance types we need to recursively register/deregister base pointers for any
/// base classes with pointers that are difference from the instance value pointer so that we can
/// correctly recognize an offset base class pointer. This calls a function with any offset base ptrs.</doc>
