<inh f='halide/llvm-install/include/llvm/ADT/iterator.h' l='207' c='llvm::iterator_adaptor_base'/>
<def f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='227' ll='256'/>
<use f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='228'/>
<use f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='251' c='_ZN4llvm13LazyCallGraph12EdgeSequence13call_iteratorppEv'/>
<use f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='276' c='_ZN4llvm13LazyCallGraph12EdgeSequence10call_beginEv'/>
<use f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='277' c='_ZN4llvm13LazyCallGraph12EdgeSequence10call_beginEv'/>
<use f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='279' c='_ZN4llvm13LazyCallGraph12EdgeSequence8call_endEv'/>
<use f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='279' c='_ZN4llvm13LazyCallGraph12EdgeSequence8call_endEv'/>
<use f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='281' c='_ZN4llvm13LazyCallGraph12EdgeSequence5callsEv'/>
<size>16</size>
<doc f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='223'>/// An iterator over specifically call edges.
    ///
    /// This has the same iteration properties as the \c iterator, but
    /// restricts itself to edges which represent actual calls.</doc>
<mbr r='llvm::LazyCallGraph::EdgeSequence::call_iterator::E' o='64' t='VectorImplT::iterator'/>
<fun r='_ZN4llvm13LazyCallGraph12EdgeSequence13call_iterator17advanceToNextEdgeEv'/>
<fun r='_ZN4llvm13LazyCallGraph12EdgeSequence13call_iteratorC1EPNS0_4EdgeES4_'/>
<fun r='_ZN4llvm13LazyCallGraph12EdgeSequence13call_iteratorC1Ev'/>
<fun r='_ZN4llvm13LazyCallGraph12EdgeSequence13call_iteratorppEv'/>
