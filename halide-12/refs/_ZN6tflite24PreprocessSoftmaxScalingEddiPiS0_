<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/quantization_util.h' l='240' type='void tflite::PreprocessSoftmaxScaling(double beta, double input_scale, int input_integer_bits, int32_t * quantized_multiplier, int * left_shift)'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/quantization_util.h' l='236'>// This first creates a multiplier in a double equivalent of
// Q(input_integer_bits).(31-input_integer_bits) representation, with extra
// precision in the double&apos;s fractional bits.  It then splits the result into
// significand and exponent.</doc>
<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/quantization_util.cc' l='269' ll='298' type='void tflite::PreprocessSoftmaxScaling(double beta, double input_scale, int input_integer_bits, int32_t * quantized_multiplier, int * left_shift)'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/quantization_util.cc' l='306' u='c' c='_ZN6tflite30PreprocessLogSoftmaxScalingExpEddiPiS0_S0_S0_'/>
