<dec f='halide/build-apps/abseil-cpp/absl/base/internal/low_level_alloc.h' l='113' type='static bool absl::lts_2020_02_25::base_internal::LowLevelAlloc::DeleteArena(absl::lts_2020_02_25::base_internal::LowLevelAlloc::Arena * arena)'/>
<def f='halide/build-apps/abseil-cpp/absl/base/internal/low_level_alloc.cc' l='383' ll='430' type='static bool absl::lts_2020_02_25::base_internal::LowLevelAlloc::DeleteArena(absl::lts_2020_02_25::base_internal::LowLevelAlloc::Arena * arena)'/>
<doc f='halide/build-apps/abseil-cpp/absl/base/internal/low_level_alloc.cc' l='382'>// L &lt; arena-&gt;mu, L &lt; arena-&gt;arena-&gt;mu</doc>
<doc f='halide/build-apps/abseil-cpp/absl/base/internal/low_level_alloc.h' l='108'>// Destroys an arena allocated by NewArena and returns true,
  // provided no allocated blocks remain in the arena.
  // If allocated blocks remain in the arena, does nothing and
  // returns false.
  // It is illegal to attempt to destroy the DefaultArena().</doc>
<use f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='224' u='c' c='_ZN4absl14lts_2020_02_2518debugging_internal12_GLOBAL__N_116InitSigSafeArenaEv'/>
