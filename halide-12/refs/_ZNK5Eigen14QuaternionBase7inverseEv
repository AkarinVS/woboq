<dec f='halide/build-apps/eigen/Eigen/src/Geometry/Quaternion.h' l='154' type='Quaternion&lt;Eigen::QuaternionBase::Scalar&gt; Eigen::QuaternionBase::inverse() const'/>
<def f='halide/build-apps/eigen/Eigen/src/Geometry/Quaternion.h' l='719' ll='731' type='Quaternion&lt;typename internal::traits&lt;Derived&gt;::Scalar&gt; Eigen::QuaternionBase::inverse() const'/>
<doc f='halide/build-apps/eigen/Eigen/src/Geometry/Quaternion.h' l='153'>/** \returns the quaternion describing the inverse rotation */</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Geometry/Quaternion.h' l='713'>/** \returns the multiplicative inverse of \c *this
  * Note that in most cases, i.e., if you simply want the opposite rotation,
  * and/or the quaternion is normalized, then it is enough to use the conjugate.
  *
  * \sa QuaternionBase::conjugate()
  */</doc>
