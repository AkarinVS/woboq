<dec f='halide/llvm-install/include/llvm/IR/IRBuilder.h' l='957' type='llvm::CallInst * llvm::IRBuilderBase::CreateIntrinsic(Intrinsic::ID ID, ArrayRef&lt;llvm::Type *&gt; Types, ArrayRef&lt;llvm::Value *&gt; Args, llvm::Instruction * FMFSource = nullptr, const llvm::Twine &amp; Name = &quot;&quot;)'/>
<use f='halide/llvm-install/include/llvm/IR/IRBuilder.h' l='985' u='c' c='_ZN4llvm13IRBuilderBase19CreateExtractVectorEPNS_4TypeEPNS_5ValueES4_RKNS_5TwineE'/>
<use f='halide/llvm-install/include/llvm/IR/IRBuilder.h' l='993' u='c' c='_ZN4llvm13IRBuilderBase18CreateInsertVectorEPNS_4TypeEPNS_5ValueES4_S4_RKNS_5TwineE'/>
<doc f='halide/llvm-install/include/llvm/IR/IRBuilder.h' l='954'>/// Create a call to intrinsic \p ID with \p args, mangled using \p Types. If
  /// \p FMFSource is provided, copy fast-math-flags from that instruction to
  /// the intrinsic.</doc>
