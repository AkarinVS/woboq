<use f='halide/build-apps/eigen/Eigen/src/Core/Block.h' l='104'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/Block.h' l='106'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/Block.h' l='153' ll='167'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseBlock.h' l='16' ll='86'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseBlock.h' l='286' ll='303'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseBlock.h' l='305' ll='325'/>
<inh f='halide/build-apps/eigen/Eigen/src/Core/util/XprHelper.h' l='109' c='Eigen::internal::no_assignment_operator'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseBlock.h' l='332' ll='415'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/Block.h' l='151'>// The generic default implementation for dense block simplu forward to the internal::BlockImpl_dense
// that must be specialized for direct and non-direct access...</doc>
<doc f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseBlock.h' l='15'>// Subset of columns or rows</doc>
<doc f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseBlock.h' l='329'>/** Generic implementation of sparse Block expression.
  * Real-only.
  */</doc>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_5DenseEEC1ERKNS0_IS1_XT0_EXT1_EXT2_ES2_EE'/>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_5DenseEEC1ERS1_l'/>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_5DenseEEC1ERS1_ll'/>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_5DenseEEC1ERS1_llll'/>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEEC1ERS1_l'/>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEEC1ERS1_llll'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEE4rowsEv'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEE4colsEv'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEE8nonZerosEv'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEE5coeffEll'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEE5coeffEl'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEE16nestedExpressionEv'/>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEE16nestedExpressionEv'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEE8startRowEv'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEE8startColEv'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEE9blockRowsEv'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEE9blockColsEv'/>
<mbr r='Eigen::BlockImpl::m_matrix' t='typename internal::ref_selector&lt;XprType&gt;::non_const_type'/>
<mbr r='Eigen::BlockImpl::m_outerStart' t='Eigen::Index'/>
<mbr r='Eigen::BlockImpl::m_outerSize' t='const internal::variable_if_dynamic&lt;Index, OuterSize&gt;'/>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_ELb1ENS_6SparseEEaSERKTL0__'/>
<fun r='_ZN5Eigen9BlockImplINS_12SparseMatrixIT_XT0_ET1_EEXT2_EXT3_ELb1ENS_6SparseEEC1ERS4_l'/>
<fun r='_ZN5Eigen9BlockImplINS_12SparseMatrixIT_XT0_ET1_EEXT2_EXT3_ELb1ENS_6SparseEEC1ERS4_llll'/>
<fun r='_ZN5Eigen9BlockImplIKNS_12SparseMatrixIT_XT0_ET1_EEXT2_EXT3_ELb1ENS_6SparseEEC1ERS5_l'/>
<fun r='_ZN5Eigen9BlockImplIKNS_12SparseMatrixIT_XT0_ET1_EEXT2_EXT3_ELb1ENS_6SparseEEC1ERS5_llll'/>
<fun r='_ZN5Eigen9BlockImplIKNS_12SparseMatrixIT_XT0_ET1_EEXT2_EXT3_ELb1ENS_6SparseEEC1ERKNS_16SparseMatrixBaseITL0__EEl'/>
<fun r='_ZN5Eigen9BlockImplIKNS_12SparseMatrixIT_XT0_ET1_EEXT2_EXT3_ELb1ENS_6SparseEEC1ERKNS_16SparseMatrixBaseITL0__EE'/>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEEC1ERS1_l'/>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEEC1ERS1_llll'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEE4rowsEv'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEE4colsEv'/>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEE8coeffRefEll'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEE5coeffEll'/>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEE8coeffRefEl'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEE5coeffEl'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEE16nestedExpressionEv'/>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEE16nestedExpressionEv'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEE8startRowEv'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEE8startColEv'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEE9blockRowsEv'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEE9blockColsEv'/>
<fun r='_ZNK5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEE8nonZerosEv'/>
<mbr r='Eigen::BlockImpl::m_matrix' t='typename internal::ref_selector&lt;XprType&gt;::non_const_type'/>
<mbr r='Eigen::BlockImpl::m_startRow' t='const internal::variable_if_dynamic&lt;Index, XprType::RowsAtCompileTime == 1 ? 0 : Dynamic&gt;'/>
<mbr r='Eigen::BlockImpl::m_startCol' t='const internal::variable_if_dynamic&lt;Index, XprType::ColsAtCompileTime == 1 ? 0 : Dynamic&gt;'/>
<mbr r='Eigen::BlockImpl::m_blockRows' t='const internal::variable_if_dynamic&lt;Index, RowsAtCompileTime&gt;'/>
<mbr r='Eigen::BlockImpl::m_blockCols' t='const internal::variable_if_dynamic&lt;Index, ColsAtCompileTime&gt;'/>
<fun r='_ZN5Eigen9BlockImplIT_XT0_EXT1_EXT2_ENS_6SparseEEaSERKTL0__'/>
