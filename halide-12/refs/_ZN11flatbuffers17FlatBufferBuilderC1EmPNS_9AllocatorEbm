<def f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1076' ll='1090' type='void flatbuffers::FlatBufferBuilder::FlatBufferBuilder(size_t initial_size = 1024, flatbuffers::Allocator * allocator = nullptr, bool own_allocator = false, size_t buffer_minalign = AlignOf&lt;flatbuffers::largest_scalar_t&gt;())'/>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1065'>/// @brief Default constructor for FlatBufferBuilder.
  /// @param[in] initial_size The initial size of the buffer, in bytes. Defaults
  /// to `1024`.
  /// @param[in] allocator An `Allocator` to use. If null will use
  /// `DefaultAllocator`.
  /// @param[in] own_allocator Whether the builder/vector should own the
  /// allocator. Defaults to / `false`.
  /// @param[in] buffer_minalign Force the buffer to be aligned to the given
  /// minimum alignment upon reallocation. Only needed if you intend to store
  /// types with custom alignment AND you wish to read the buffer in-place
  /// directly after creation.</doc>
<use f='halide/build-apps/flatbuffers/src/idl_parser.cpp' l='1402' u='c' c='_ZN11flatbuffers6Parser10ParseArrayERNS_5ValueE'/>
