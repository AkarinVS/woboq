<dec f='halide/build-apps/ruy/ruy/trmul.h' l='35' type='void ruy::TrMul(ruy::Ctx * ctx, ruy::TrMulParams * params)'/>
<use f='halide/build-apps/ruy/ruy/frontend.cc' l='32' u='c' c='_ZN3ruy26MulFrontEndFromTrMulParamsEPNS_3CtxEPNS_11TrMulParamsE'/>
<def f='halide/build-apps/ruy/ruy/trmul.cc' l='291' ll='402' type='void ruy::TrMul(ruy::Ctx * ctx, ruy::TrMulParams * params)'/>
<doc f='halide/build-apps/ruy/ruy/trmul.cc' l='285'>// TrMul is the ruy middle-end. It contains the high-level logic to perform
// a ruy::Mul&apos;s work, down to calls to back-end Kernel and Pack functions.
// This includes determining how many threads to use, computing the BlockMap,
// executing tasks on a thread-pool. The TrMul function itself runs on the main
// thread, the code that is potentially running on worker threads is in
// TrMulTask::Run().</doc>
