<dec f='halide/halide-install/include/Halide.h' l='7736' type='Halide::Expr Halide::sqrt(Halide::Expr x)'/>
<doc f='halide/halide-install/include/Halide.h' l='7733'>/** Return the square root of a floating-point expression. If the
 * argument is not floating-point, it is cast to Float(32). Typically
 * vectorizes cleanly. */</doc>
<dec f='halide/build/include/Halide.h' l='7736' type='Halide::Expr Halide::sqrt(Halide::Expr x)'/>
<doc f='halide/build/include/Halide.h' l='7733'>/** Return the square root of a floating-point expression. If the
 * argument is not floating-point, it is cast to Float(32). Typically
 * vectorizes cleanly. */</doc>
<use f='halide/python_bindings/src/PyIROperator.cpp' l='130' u='a' c='_ZN6Halide14PythonBindings16define_operatorsERN8pybind117module_E'/>
<dec f='halide/src/IROperator.h' l='931' type='Halide::Expr Halide::sqrt(Halide::Expr x)'/>
<doc f='halide/src/IROperator.h' l='928'>/** Return the square root of a floating-point expression. If the
 * argument is not floating-point, it is cast to Float(32). Typically
 * vectorizes cleanly. */</doc>
<use f='halide/src/CodeGen_OpenGLCompute_Dev.cpp' l='425' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_123CodeGen_OpenGLCompute_C5visitEPKNS0_4CallE'/>
<use f='halide/src/Derivative.cpp' l='1075' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_126ReverseAccumulationVisitor5visitEPKNS0_4CallE'/>
<use f='halide/src/Derivative.cpp' l='1082' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_126ReverseAccumulationVisitor5visitEPKNS0_4CallE'/>
<use f='halide/src/Derivative.cpp' l='1103' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_126ReverseAccumulationVisitor5visitEPKNS0_4CallE'/>
<use f='halide/src/Derivative.cpp' l='1111' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_126ReverseAccumulationVisitor5visitEPKNS0_4CallE'/>
<use f='halide/src/Derivative.cpp' l='1111' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_126ReverseAccumulationVisitor5visitEPKNS0_4CallE'/>
<use f='halide/src/Derivative.cpp' l='1132' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_126ReverseAccumulationVisitor5visitEPKNS0_4CallE'/>
<def f='halide/src/IROperator.cpp' l='2103' ll='2112' type='Halide::Expr Halide::sqrt(Halide::Expr x)'/>
<use f='halide/src/IROperator.cpp' l='2115' u='c' c='_ZN6Halide5hypotERKNS_4ExprES2_'/>
<use f='halide/src/Solve.cpp' l='1331' u='c' c='_ZN6Halide8Internal10solve_testEv'/>
<use f='halide/src/Solve.cpp' l='1331' u='c' c='_ZN6Halide8Internal10solve_testEv'/>
<use f='halide/src/autoschedulers/adams2019/cost_model_generator.cpp' l='84' u='c' c='_ZN11ModelWeightILb1EE8backpropERKN6Halide10DerivativeERKNS1_4ExprES7_'/>
<use f='halide/src/autoschedulers/adams2019/test.cpp' l='254' u='c' c='main'/>
<use f='halide/src/autoschedulers/adams2019/test.cpp' l='547' u='c' c='main'/>
<use f='halide/src/autoschedulers/adams2019/test.cpp' l='547' u='c' c='main'/>
<use f='halide/src/autoschedulers/adams2019/test.cpp' l='547' u='c' c='main'/>
<use f='halide/src/autoschedulers/adams2019/test.cpp' l='547' u='c' c='main'/>
<use f='halide/test/generator/variable_num_threads_generator.cpp' l='13' u='c' c='_ZN12_GLOBAL__N_118VariableNumThreads8generateEv'/>
<use f='halide/test/generator/variable_num_threads_generator.cpp' l='13' u='c' c='_ZN12_GLOBAL__N_118VariableNumThreads8generateEv'/>
<use f='halide/tutorial/lesson_19_wrapper_funcs.cpp' l='225' u='c' c='main'/>
