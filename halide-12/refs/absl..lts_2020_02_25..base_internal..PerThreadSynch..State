<def f='halide/build-apps/abseil-cpp/absl/base/internal/thread_identity.h' l='108' ll='111'/>
<use f='halide/build-apps/abseil-cpp/absl/base/internal/thread_identity.h' l='112'/>
<doc f='halide/build-apps/abseil-cpp/absl/base/internal/thread_identity.h' l='97'>// State values:
  //   kAvailable: This PerThreadSynch is available.
  //   kQueued: This PerThreadSynch is unavailable, it&apos;s currently queued on a
  //            Mutex or CondVar waistlist.
  //
  // Transitions from kQueued to kAvailable require a release
  // barrier. This is needed as a waiter may use &quot;state&quot; to
  // independently observe that it&apos;s no longer queued.
  //
  // Transitions from kAvailable to kQueued require no barrier, they
  // are externally ordered by the Mutex.</doc>
