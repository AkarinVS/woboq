<dec f='halide/build-apps/ruy/ruy/context.h' l='71' type='int ruy::Context::max_num_threads() const'/>
<doc f='halide/build-apps/ruy/ruy/context.h' l='62'>// Controls the maximum number of threads to be used by ruy::Mul with this
  // Context. The number of threads in the pool will be that value minus one,
  // as the remaining portion of the work is done directly on the calling
  // thread.
  //
  // This defaults to 1. Multi-threading in ruy is always opt-in. There is
  // no auto-detection of hardware concurrency. That is on purpose, ruy focuses
  // on mobile applications where such concepts are difficult to define
  // (e.g. ARM big.LITTLE).</doc>
<def f='halide/build-apps/ruy/ruy/context.cc' l='43' type='int ruy::Context::max_num_threads() const'/>
