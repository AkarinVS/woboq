<def f='halide/llvm-install/include/llvm/Transforms/Scalar/LoopPassManager.h' l='263' ll='272' type='void llvm::LPMUpdater::markLoopAsDeleted(llvm::Loop &amp; L, llvm::StringRef Name)'/>
<doc f='halide/llvm-install/include/llvm/Transforms/Scalar/LoopPassManager.h' l='253'>/// Loop passes should use this method to indicate they have deleted a loop
  /// from the nest.
  ///
  /// Note that this loop must either be the current loop or a subloop of the
  /// current loop. This routine must be called prior to removing the loop from
  /// the loop nest.
  ///
  /// If this is called for the current loop, in addition to clearing any
  /// state, this routine will mark that the current loop should be skipped by
  /// the rest of the pass management infrastructure.</doc>
