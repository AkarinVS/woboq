<def f='halide/build-apps/eigen/Eigen/src/Core/GenericPacketMath.h' l='499' ll='502' type='typename conditional&lt;(unpacket_traits&lt;Packet&gt;::size % 8) == 0, typename unpacket_traits&lt;Packet&gt;::half, Packet&gt;::type Eigen::internal::predux_half_dowto4(const Packet &amp; a)'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/GenericPacketMath.h' l='495'>/** \internal \returns the sum of the elements of upper and lower half of \a a if \a a is larger than 4.
  * For a packet {a0, a1, a2, a3, a4, a5, a6, a7}, it returns a half packet {a0+a4, a1+a5, a2+a6, a3+a7}
  * For packet-size smaller or equal to 4, this boils down to a noop.
  */</doc>
