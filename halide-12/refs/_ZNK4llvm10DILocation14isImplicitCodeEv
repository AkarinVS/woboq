<use f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='1604' u='c' c='_ZNK4llvm10DILocation9cloneImplEv'/>
<def f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='1646' type='bool llvm::DILocation::isImplicitCode() const'/>
<doc f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='1640'>/// Check if the location corresponds to an implicit code.
  /// When the ImplicitCode flag is true, it means that the Instruction
  /// with this DILocation has been added by the front-end but it hasn&apos;t been
  /// written explicitly by the user (e.g. cleanup stuff in C++ put on a closing
  /// bracket). It&apos;s useful for code coverage to not show a counter on &quot;empty&quot;
  /// lines.</doc>
