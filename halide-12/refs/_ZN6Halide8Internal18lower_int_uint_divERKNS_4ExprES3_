<dec f='halide/halide-install/include/Halide.h' l='19701' type='Halide::Expr Halide::Internal::lower_int_uint_div(const Halide::Expr &amp; a, const Halide::Expr &amp; b)'/>
<doc f='halide/halide-install/include/Halide.h' l='19696'>/** Given a Halide Euclidean division/mod operation, do constant optimizations
 * and possibly call lower_euclidean_div/lower_euclidean_mod if necessary.
 * Can introduce mulhi_shr and sorted_avg intrinsics as well as those from the
 * lower_euclidean_ operation -- div_round_to_zero or mod_round_to_zero. */
///@{</doc>
<dec f='halide/build/include/Halide.h' l='19701' type='Halide::Expr Halide::Internal::lower_int_uint_div(const Halide::Expr &amp; a, const Halide::Expr &amp; b)'/>
<doc f='halide/build/include/Halide.h' l='19696'>/** Given a Halide Euclidean division/mod operation, do constant optimizations
 * and possibly call lower_euclidean_div/lower_euclidean_mod if necessary.
 * Can introduce mulhi_shr and sorted_avg intrinsics as well as those from the
 * lower_euclidean_ operation -- div_round_to_zero or mod_round_to_zero. */
///@{</doc>
<dec f='halide/src/CodeGen_Internal.h' l='98' type='Halide::Expr Halide::Internal::lower_int_uint_div(const Halide::Expr &amp; a, const Halide::Expr &amp; b)'/>
<doc f='halide/src/CodeGen_Internal.h' l='93'>/** Given a Halide Euclidean division/mod operation, do constant optimizations
 * and possibly call lower_euclidean_div/lower_euclidean_mod if necessary.
 * Can introduce mulhi_shr and sorted_avg intrinsics as well as those from the
 * lower_euclidean_ operation -- div_round_to_zero or mod_round_to_zero. */
///@{</doc>
<def f='halide/src/CodeGen_Internal.cpp' l='268' ll='362' type='Halide::Expr Halide::Internal::lower_int_uint_div(const Halide::Expr &amp; a, const Halide::Expr &amp; b)'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='1548' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_3DivE'/>
<use f='halide/src/HexagonOptimize.cpp' l='1033' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116OptimizePatterns5visitEPKNS0_3DivE'/>
