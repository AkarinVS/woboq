<def f='halide/build-apps/abseil-cpp/absl/container/internal/raw_hash_set.h' l='1783' type='bool absl::lts_2020_02_25::container_internal::raw_hash_set::is_small() const'/>
<doc f='halide/build-apps/abseil-cpp/absl/container/internal/raw_hash_set.h' l='1769'>// The representation of the object has two modes:
  //  - small: For capacities &lt; kWidth-1
  //  - large: For the rest.
  //
  // Differences:
  //  - In small mode we are able to use the whole capacity. The extra control
  //  bytes give us at least one &quot;empty&quot; control byte to stop the iteration.
  //  This is important to make 1 a valid capacity.
  //
  //  - In small mode only the first `capacity()` control bytes after the
  //  sentinel are valid. The rest contain dummy kEmpty values that do not
  //  represent a real slot. This is important to take into account on
  //  find_first_non_full(), where we never try ShouldInsertBackwards() for
  //  small tables.</doc>
