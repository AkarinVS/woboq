<use f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='200' c='_ZN4llvm28promoteLoopAccessesToScalarsERKNS_14SmallSetVectorIPNS_5ValueELj8EEERNS_15SmallVectorImplIPNS_10BasicBlockEEERNS6_IPNS_11InstructionEEERNS6_2137798'/>
<def f='halide/llvm-install/include/llvm/IR/PredIteratorCache.h' l='27' ll='76'/>
<use f='halide/llvm-install/include/llvm/Analysis/MemoryDependenceAnalysis.h' l='363'/>
<size>144</size>
<doc f='halide/llvm-install/include/llvm/IR/PredIteratorCache.h' l='24'>/// PredIteratorCache - This class is an extremely trivial cache for
/// predecessor iterator queries.  This is useful for code that repeatedly
/// wants the predecessor list for the same blocks.</doc>
<mbr r='llvm::PredIteratorCache::BlockToPredsMap' o='0' t='DenseMap&lt;llvm::BasicBlock *, llvm::BasicBlock **&gt;'/>
<mbr r='llvm::PredIteratorCache::BlockToPredCountMap' o='192' t='DenseMap&lt;llvm::BasicBlock *, unsigned int&gt;'/>
<mbr r='llvm::PredIteratorCache::Memory' o='384' t='llvm::BumpPtrAllocator'/>
<fun r='_ZN4llvm17PredIteratorCache8GetPredsEPNS_10BasicBlockE'/>
<fun r='_ZNK4llvm17PredIteratorCache11GetNumPredsEPNS_10BasicBlockE'/>
<fun r='_ZNK4llvm17PredIteratorCache4sizeEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17PredIteratorCache3getEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17PredIteratorCache5clearEv'/>
