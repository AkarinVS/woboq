<dec f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='83' type='pybind11::detail::obj_attr_accessor pybind11::detail::object_api::attr(pybind11::handle key) const'/>
<def f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='1595' ll='1597' type='pybind11::detail::obj_attr_accessor pybind11::detail::object_api::attr(pybind11::handle key) const'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1215' u='c' c='_ZN8pybind116detail16add_class_methodERNS_6objectEPKcRKNS_12cpp_functionE'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1751' u='c' c='_ZN8pybind116detail9enum_base5valueEPKcNS_6objectES3_'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1757' u='c' c='_ZN8pybind116detail9enum_base13export_valuesEv'/>
<doc f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='77'>/** \rst
        Return an internal functor to access the object&apos;s attributes. Casting the
        returned ``detail::obj_attr_accessor`` instance to a `handle` or `object`
        subclass causes a corresponding call to ``getattr``. Assigning a `handle`
        or `object` subclass causes a call to ``setattr``.
    \endrst */</doc>
