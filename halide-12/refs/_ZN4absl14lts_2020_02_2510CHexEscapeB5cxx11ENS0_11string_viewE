<dec f='halide/build-apps/abseil-cpp/absl/strings/escaping.h' l='103' type='std::string absl::lts_2020_02_25::CHexEscape(absl::string_view src)'/>
<doc f='halide/build-apps/abseil-cpp/absl/strings/escaping.h' l='92'>// CHexEscape()
//
// Escapes a &apos;src&apos; string using C-style escape sequences, escaping
// other non-printable/non-whitespace bytes as hexadecimal sequences (e.g.
// &quot;\xFF&quot;).
//
// Example:
//
//   std::string s = &quot;foo\rbar\tbaz\010\011\012\013\014\x0d\n&quot;;
//   std::string escaped_s = absl::CHexEscape(s);
//   EXPECT_EQ(escaped_s, &quot;foo\\rbar\\tbaz\\x08\\t\\n\\x0b\\x0c\\r\\n&quot;);</doc>
<use f='halide/build-apps/abseil-cpp/absl/status/status.cc' l='306' u='c' c='_ZNK4absl14lts_2020_02_256Status12ToStringSlowB5cxx11Ev'/>
<def f='halide/build-apps/abseil-cpp/absl/strings/escaping.cc' l='860' ll='862' type='std::string absl::lts_2020_02_25::CHexEscape(absl::string_view src)'/>
