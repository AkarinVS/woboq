<dec f='halide/build-apps/eigen/Eigen/src/Core/VectorwiseOp.h' l='740' type='const Eigen::VectorwiseOp::HNormalizedReturnType Eigen::VectorwiseOp::hnormalized() const'/>
<def f='halide/build-apps/eigen/Eigen/src/Geometry/Homogeneous.h' l='194' ll='211' type='const typename VectorwiseOp&lt;ExpressionType, Direction&gt;::HNormalizedReturnType Eigen::VectorwiseOp::hnormalized() const'/>
<doc f='halide/build-apps/eigen/Eigen/src/Geometry/Homogeneous.h' l='180'>/** \geometry_module \ingroup Geometry_Module
  *
  * \brief column or row-wise homogeneous normalization
  *
  * \returns an expression of the first N-1 coefficients of each column (or row) of \c *this divided by the last coefficient of each column (or row).
  *
  * This can be used to convert homogeneous coordinates to affine coordinates.
  *
  * It is conceptually equivalent to calling MatrixBase::hnormalized() to each column (or row) of \c *this.
  *
  * Example: \include DirectionWise_hnormalized.cpp
  * Output: \verbinclude DirectionWise_hnormalized.out
  *
  * \sa MatrixBase::hnormalized() */</doc>
