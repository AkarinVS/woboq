<dec f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.h' l='94' type='const int'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.h' l='97'/>
<def f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.cc' l='33' type='const int'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.cc' l='79' u='r' c='_ZN4absl14lts_2020_02_2518container_internal14HashtablezInfo18PrepareForSamplingEv'/>
<doc f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.h' l='89'>// All of the fields below are set by `PrepareForSampling`, they must not be
  // mutated in `Record*` functions.  They are logically `const` in that sense.
  // These are guarded by init_mu, but that is not externalized to clients, who
  // can only read them during `HashtablezSampler::Iterate` which will hold the
  // lock.</doc>
