<dec f='halide/halide-install/include/Halide.h' l='18479' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Var &amp; z, const Halide::Expr &amp; e)'/>
<doc f='halide/halide-install/include/Halide.h' l='18475'>/** Create a 3-D halide function in the first three arguments that
 * returns the last argument.  The function may have more dimensions
 * if the expression contains implicit arguments and the list of Var
 * arguments contains a placeholder (&quot;_&quot;). */</doc>
<use f='halide/apps/interpolate/interpolate_generator.cpp' l='46' u='c' c='_ZN12_GLOBAL__N_111Interpolate8generateEv'/>
<dec f='halide/build/include/Halide.h' l='18479' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Var &amp; z, const Halide::Expr &amp; e)'/>
<doc f='halide/build/include/Halide.h' l='18475'>/** Create a 3-D halide function in the first three arguments that
 * returns the last argument.  The function may have more dimensions
 * if the expression contains implicit arguments and the list of Var
 * arguments contains a placeholder (&quot;_&quot;). */</doc>
<dec f='halide/src/Lambda.h' l='34' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Var &amp; z, const Halide::Expr &amp; e)'/>
<doc f='halide/src/Lambda.h' l='30'>/** Create a 3-D halide function in the first three arguments that
 * returns the last argument.  The function may have more dimensions
 * if the expression contains implicit arguments and the list of Var
 * arguments contains a placeholder (&quot;_&quot;). */</doc>
<def f='halide/src/Lambda.cpp' l='23' ll='27' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Var &amp; z, const Halide::Expr &amp; e)'/>
