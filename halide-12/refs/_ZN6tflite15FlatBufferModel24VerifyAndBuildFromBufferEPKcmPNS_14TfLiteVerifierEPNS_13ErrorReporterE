<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/model_builder.h' l='108' type='static std::unique_ptr&lt;FlatBufferModel&gt; tflite::FlatBufferModel::VerifyAndBuildFromBuffer(const char * caller_owned_buffer, size_t buffer_size, tflite::TfLiteVerifier * extra_verifier = nullptr, tflite::ErrorReporter * error_reporter = DefaultErrorReporter())'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/c/c_api.cc' l='91' u='c' c='TfLiteModelCreate'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/model_builder.h' l='98'>/// Verifies whether the content of the buffer is legit, then builds a model
  /// based on the pre-loaded flatbuffer.
  /// The extra_verifier argument is an additional optional verifier for the
  /// buffer. By default, we always check with tflite::VerifyModelBuffer. If
  /// extra_verifier is supplied, the buffer is checked against the
  /// extra_verifier after the check against tflite::VerifyModelBuilder. The
  /// caller retains ownership of the buffer and should keep it alive until the
  /// returned object is destroyed. Caller retains ownership of `error_reporter`
  /// and must ensure its lifetime is longer than the FlatBufferModel instance.
  /// Returns a nullptr in case of failure.</doc>
<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/model_builder.cc' l='83' ll='91' type='static std::unique_ptr&lt;FlatBufferModel&gt; tflite::FlatBufferModel::VerifyAndBuildFromBuffer(const char * caller_owned_buffer, size_t buffer_size, tflite::TfLiteVerifier * extra_verifier = nullptr, tflite::ErrorReporter * error_reporter = DefaultErrorReporter())'/>
