<use f='halide/halide-install/include/Halide.h' l='3883' c='_ZNK6Halide8Internal12BaseStmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/halide-install/include/Halide.h' l='3892' c='_ZNK6Halide8Internal12BaseExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/halide-install/include/Halide.h' l='3905' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/halide-install/include/Halide.h' l='3915' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/halide-install/include/Halide.h' l='6331' c='_ZN6Halide8Internal12FuncSchedule6mutateEPNS0_9IRMutatorE'/>
<use f='halide/halide-install/include/Halide.h' l='6437' c='_ZN6Halide8Internal13StageSchedule6mutateEPNS0_9IRMutatorE'/>
<use f='halide/halide-install/include/Halide.h' l='8645' c='_ZN6Halide8Internal10Definition6mutateEPNS0_9IRMutatorE'/>
<use f='halide/halide-install/include/Halide.h' l='11902' c='_ZN6Halide8Internal15ReductionDomain6mutateEPNS0_9IRMutatorE'/>
<use f='halide/halide-install/include/Halide.h' l='13708' c='_ZN6Halide8Internal8Function6mutateEPNS0_9IRMutatorE'/>
<use f='halide/halide-install/include/Halide.h' l='14733'/>
<use f='halide/halide-install/include/Halide.h' l='15134' c='_ZN6Halide8Pipeline24add_custom_lowering_passEPNS_8Internal9IRMutatorESt8functionIFvvEE'/>
<use f='halide/halide-install/include/Halide.h' l='17020' c='_ZN6Halide4Func24add_custom_lowering_passEPNS_8Internal9IRMutatorESt8functionIFvvEE'/>
<def f='halide/halide-install/include/Halide.h' l='29998' ll='30064'/>
<ovr f='halide/halide-install/include/Halide.h' l='30069' c='Halide::Internal::IRGraphMutator'/>
<use f='halide/halide-install/include/Halide.h' l='30069'/>
<use f='halide/halide-install/include/Halide.h' l='30308' c='_ZN6Halide8Internal5lowerERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS_8ArgumentESaIS464497'/>
<use f='halide/halide-install/include/Halide.h' l='30308' c='_ZN6Halide8Internal5lowerERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS_8ArgumentESaIS464497'/>
<use f='halide/halide-install/include/Halide.h' l='30320' c='_ZN6Halide8Internal15lower_main_stmtERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS0_4S10231373'/>
<use f='halide/halide-install/include/Halide.h' l='30320' c='_ZN6Halide8Internal15lower_main_stmtERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS0_4S10231373'/>
<size>8</size>
<doc f='halide/halide-install/include/Halide.h' l='29987'>/** A base class for passes over the IR which modify it
 * (e.g. replacing a variable with a value (Substitute.h), or
 * constant-folding).
 *
 * Your mutator should override the visit() methods you care about and return
 * the new expression or stmt. The default implementations recursively
 * mutate their children. To mutate sub-expressions and sub-statements you
 * should override the mutate() method, which will dispatch to
 * the appropriate visit() method and then return the value of expr or
 * stmt after the call to visit.
 */</doc>
<fun r='_ZN6Halide8Internal9IRMutatorC1Ev'/>
<fun r='_ZN6Halide8Internal9IRMutatorD1Ev'/>
<fun r='_ZN6Halide8Internal9IRMutator6mutateERKNS_4ExprE'/>
<fun r='_ZN6Halide8Internal9IRMutator6mutateERKNS0_4StmtE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6IntImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7UIntImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8FloatImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_9StringImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4CastE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8VariableE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3AddE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3SubE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3MulE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3DivE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3ModE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3MinE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3MaxE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2EQE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2NEE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2LTE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2LEE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2GTE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2GEE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3AndE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2OrE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3NotE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6SelectE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4LoadE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4RampE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_9BroadcastE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4CallE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3LetE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7ShuffleE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_12VectorReduceE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7LetStmtE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_10AssertStmtE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_16ProducerConsumerE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3ForE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_5StoreE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7ProvideE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8AllocateE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4FreeE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7RealizeE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_5BlockE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_10IfThenElseE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8EvaluateE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8PrefetchE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7AcquireE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4ForkE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6AtomicE'/>
<use f='halide/build/include/Halide.h' l='3883' c='_ZNK6Halide8Internal12BaseStmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/build/include/Halide.h' l='3892' c='_ZNK6Halide8Internal12BaseExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/build/include/Halide.h' l='3905' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/build/include/Halide.h' l='3915' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/build/include/Halide.h' l='6331' c='_ZN6Halide8Internal12FuncSchedule6mutateEPNS0_9IRMutatorE'/>
<use f='halide/build/include/Halide.h' l='6437' c='_ZN6Halide8Internal13StageSchedule6mutateEPNS0_9IRMutatorE'/>
<use f='halide/build/include/Halide.h' l='8645' c='_ZN6Halide8Internal10Definition6mutateEPNS0_9IRMutatorE'/>
<use f='halide/build/include/Halide.h' l='11902' c='_ZN6Halide8Internal15ReductionDomain6mutateEPNS0_9IRMutatorE'/>
<use f='halide/build/include/Halide.h' l='13708' c='_ZN6Halide8Internal8Function6mutateEPNS0_9IRMutatorE'/>
<use f='halide/build/include/Halide.h' l='14733'/>
<use f='halide/build/include/Halide.h' l='15134' c='_ZN6Halide8Pipeline24add_custom_lowering_passEPNS_8Internal9IRMutatorESt8functionIFvvEE'/>
<use f='halide/build/include/Halide.h' l='17020' c='_ZN6Halide4Func24add_custom_lowering_passEPNS_8Internal9IRMutatorESt8functionIFvvEE'/>
<def f='halide/build/include/Halide.h' l='29998' ll='30064'/>
<ovr f='halide/build/include/Halide.h' l='30069' c='Halide::Internal::IRGraphMutator'/>
<use f='halide/build/include/Halide.h' l='30069'/>
<use f='halide/build/include/Halide.h' l='30308' c='_ZN6Halide8Internal5lowerERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS_8ArgumentESaIS464497'/>
<use f='halide/build/include/Halide.h' l='30308' c='_ZN6Halide8Internal5lowerERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS_8ArgumentESaIS464497'/>
<use f='halide/build/include/Halide.h' l='30320' c='_ZN6Halide8Internal15lower_main_stmtERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS0_4S10231373'/>
<use f='halide/build/include/Halide.h' l='30320' c='_ZN6Halide8Internal15lower_main_stmtERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS0_4S10231373'/>
<size>8</size>
<doc f='halide/build/include/Halide.h' l='29987'>/** A base class for passes over the IR which modify it
 * (e.g. replacing a variable with a value (Substitute.h), or
 * constant-folding).
 *
 * Your mutator should override the visit() methods you care about and return
 * the new expression or stmt. The default implementations recursively
 * mutate their children. To mutate sub-expressions and sub-statements you
 * should override the mutate() method, which will dispatch to
 * the appropriate visit() method and then return the value of expr or
 * stmt after the call to visit.
 */</doc>
<fun r='_ZN6Halide8Internal9IRMutatorC1Ev'/>
<fun r='_ZN6Halide8Internal9IRMutatorD1Ev'/>
<fun r='_ZN6Halide8Internal9IRMutator6mutateERKNS_4ExprE'/>
<fun r='_ZN6Halide8Internal9IRMutator6mutateERKNS0_4StmtE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6IntImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7UIntImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8FloatImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_9StringImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4CastE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8VariableE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3AddE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3SubE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3MulE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3DivE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3ModE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3MinE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3MaxE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2EQE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2NEE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2LTE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2LEE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2GTE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2GEE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3AndE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2OrE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3NotE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6SelectE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4LoadE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4RampE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_9BroadcastE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4CallE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3LetE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7ShuffleE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_12VectorReduceE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7LetStmtE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_10AssertStmtE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_16ProducerConsumerE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3ForE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_5StoreE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7ProvideE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8AllocateE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4FreeE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7RealizeE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_5BlockE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_10IfThenElseE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8EvaluateE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8PrefetchE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7AcquireE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4ForkE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6AtomicE'/>
<use f='halide/src/Expr.h' l='136' c='_ZNK6Halide8Internal12BaseStmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/Expr.h' l='145' c='_ZNK6Halide8Internal12BaseExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/Expr.h' l='158' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/Expr.h' l='168' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/Reduction.h' l='104' c='_ZN6Halide8Internal15ReductionDomain6mutateEPNS0_9IRMutatorE'/>
<use f='halide/src/Schedule.h' l='614' c='_ZN6Halide8Internal12FuncSchedule6mutateEPNS0_9IRMutatorE'/>
<use f='halide/src/Schedule.h' l='720' c='_ZN6Halide8Internal13StageSchedule6mutateEPNS0_9IRMutatorE'/>
<use f='halide/src/Definition.h' l='73' c='_ZN6Halide8Internal10Definition6mutateEPNS0_9IRMutatorE'/>
<use f='halide/src/Function.h' l='105' c='_ZN6Halide8Internal8Function6mutateEPNS0_9IRMutatorE'/>
<use f='halide/src/Pipeline.h' l='77'/>
<use f='halide/src/Pipeline.h' l='478' c='_ZN6Halide8Pipeline24add_custom_lowering_passEPNS_8Internal9IRMutatorESt8functionIFvvEE'/>
<use f='halide/src/Func.h' l='1140' c='_ZN6Halide4Func24add_custom_lowering_passEPNS_8Internal9IRMutatorESt8functionIFvvEE'/>
<def f='halide/src/IRMutator.h' l='26' ll='92'/>
<ovr f='halide/src/IRMutator.h' l='97' c='Halide::Internal::IRGraphMutator'/>
<use f='halide/src/IRMutator.h' l='97'/>
<ovr f='halide/src/AddAtomicMutex.cpp' l='180' c='Halide::Internal::(anonymousnamespace)::RemoveUnnecessaryMutexUse'/>
<use f='halide/src/AddAtomicMutex.cpp' l='180'/>
<ovr f='halide/src/AddAtomicMutex.cpp' l='252' c='Halide::Internal::(anonymousnamespace)::ReplaceStoreIndexWithVar'/>
<use f='halide/src/AddAtomicMutex.cpp' l='252'/>
<ovr f='halide/src/AddAtomicMutex.cpp' l='277' c='Halide::Internal::(anonymousnamespace)::AddAtomicMutex'/>
<use f='halide/src/AddAtomicMutex.cpp' l='277'/>
<size>8</size>
<doc f='halide/src/IRMutator.h' l='15'>/** A base class for passes over the IR which modify it
 * (e.g. replacing a variable with a value (Substitute.h), or
 * constant-folding).
 *
 * Your mutator should override the visit() methods you care about and return
 * the new expression or stmt. The default implementations recursively
 * mutate their children. To mutate sub-expressions and sub-statements you
 * should override the mutate() method, which will dispatch to
 * the appropriate visit() method and then return the value of expr or
 * stmt after the call to visit.
 */</doc>
<fun r='_ZN6Halide8Internal9IRMutatorC1Ev'/>
<fun r='_ZN6Halide8Internal9IRMutatorD1Ev'/>
<fun r='_ZN6Halide8Internal9IRMutator6mutateERKNS_4ExprE'/>
<fun r='_ZN6Halide8Internal9IRMutator6mutateERKNS0_4StmtE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6IntImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7UIntImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8FloatImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_9StringImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4CastE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8VariableE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3AddE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3SubE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3MulE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3DivE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3ModE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3MinE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3MaxE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2EQE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2NEE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2LTE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2LEE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2GTE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2GEE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3AndE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2OrE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3NotE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6SelectE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4LoadE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4RampE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_9BroadcastE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4CallE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3LetE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7ShuffleE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_12VectorReduceE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7LetStmtE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_10AssertStmtE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_16ProducerConsumerE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3ForE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_5StoreE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7ProvideE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8AllocateE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4FreeE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7RealizeE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_5BlockE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_10IfThenElseE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8EvaluateE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8PrefetchE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7AcquireE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4ForkE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6AtomicE'/>
<ovr f='halide/src/AddImageChecks.cpp' l='102' c='Halide::Internal::(anonymousnamespace)::TrimStmtToPartsThatAccessBuffers'/>
<use f='halide/src/AddImageChecks.cpp' l='102'/>
<ovr f='halide/src/AddImageChecks.cpp' l='733' c='Injector'/>
<use f='halide/src/AddImageChecks.cpp' l='733' c='_ZN6Halide8Internal16add_image_checksERKNS0_4StmtERKSt6vectorINS0_8FunctionESaIS5_EERKNS_6TargetERKS4_INSt7__cxx1112basic_stringIcSt11char_traitsIcESa9167729'/>
<size>8</size>
<ovr f='halide/src/AlignLoads.cpp' l='22' c='Halide::Internal::(anonymousnamespace)::AlignLoads'/>
<use f='halide/src/AlignLoads.cpp' l='22'/>
<size>8</size>
<ovr f='halide/src/AllocationBoundsInference.cpp' l='25' c='Halide::Internal::(anonymousnamespace)::AllocationInference'/>
<use f='halide/src/AllocationBoundsInference.cpp' l='25'/>
<ovr f='halide/src/AllocationBoundsInference.cpp' l='153' c='Halide::Internal::(anonymousnamespace)::StripDeclareBoxTouched'/>
<use f='halide/src/AllocationBoundsInference.cpp' l='153'/>
<size>8</size>
<ovr f='halide/src/AsyncProducers.cpp' l='20' c='Halide::Internal::(anonymousnamespace)::NoOpCollapsingMutator'/>
<use f='halide/src/AsyncProducers.cpp' l='20'/>
<ovr f='halide/src/AsyncProducers.cpp' l='261' c='Halide::Internal::(anonymousnamespace)::CloneAcquire'/>
<use f='halide/src/AsyncProducers.cpp' l='261'/>
<ovr f='halide/src/AsyncProducers.cpp' l='309' c='Halide::Internal::(anonymousnamespace)::ForkAsyncProducers'/>
<use f='halide/src/AsyncProducers.cpp' l='309'/>
<ovr f='halide/src/AsyncProducers.cpp' l='391' c='Halide::Internal::(anonymousnamespace)::InitializeSemaphores'/>
<use f='halide/src/AsyncProducers.cpp' l='391'/>
<ovr f='halide/src/AsyncProducers.cpp' l='455' c='Halide::Internal::(anonymousnamespace)::TightenProducerConsumerNodes'/>
<use f='halide/src/AsyncProducers.cpp' l='455'/>
<ovr f='halide/src/AsyncProducers.cpp' l='518' c='Halide::Internal::(anonymousnamespace)::ExpandAcquireNodes'/>
<use f='halide/src/AsyncProducers.cpp' l='518'/>
<ovr f='halide/src/AsyncProducers.cpp' l='587' c='Halide::Internal::(anonymousnamespace)::TightenForkNodes'/>
<use f='halide/src/AsyncProducers.cpp' l='587'/>
<size>8</size>
<ovr f='halide/src/AutoScheduleUtils.cpp' l='22' c='Halide::Internal::(anonymousnamespace)::SubstituteVarEstimates'/>
<use f='halide/src/AutoScheduleUtils.cpp' l='22'/>
<size>8</size>
<ovr f='halide/src/BoundSmallAllocations.cpp' l='14' c='Halide::Internal::(anonymousnamespace)::BoundSmallAllocations'/>
<use f='halide/src/BoundSmallAllocations.cpp' l='14'/>
<size>8</size>
<ovr f='halide/src/Bounds.cpp' l='1868' c='Halide::Internal::(anonymousnamespace)::SolveIfThenElse'/>
<use f='halide/src/Bounds.cpp' l='1868'/>
<ovr f='halide/src/Bounds.cpp' l='2698' c='Filter'/>
<use f='halide/src/Bounds.cpp' l='2698' c='_ZN6Halide8Internal13boxes_touchedERKNS_4ExprENS0_4StmtEbbRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS0_5ScopeINS0_8IntervalEEERKSt3mapI4565527'/>
<size>8</size>
<ovr f='halide/src/BoundsInference.cpp' l='202' c='Halide::Internal::(anonymousnamespace)::BoundsInference'/>
<use f='halide/src/BoundsInference.cpp' l='202'/>
<ovr f='halide/src/BoundsInference.cpp' l='360' c='SelectToIfThenElse'/>
<use f='halide/src/BoundsInference.cpp' l='360' c='_ZN6Halide8Internal12_GLOBAL__N_115BoundsInference5Stage13compute_exprsEv'/>
<size>8</size>
<ovr f='halide/src/CSE.cpp' l='73' c='Halide::Internal::(anonymousnamespace)::GVN'/>
<use f='halide/src/CSE.cpp' l='73'/>
<ovr f='halide/src/CSE.cpp' l='230' c='Halide::Internal::(anonymousnamespace)::CSEEveryExprInStmt'/>
<use f='halide/src/CSE.cpp' l='230'/>
<ovr f='halide/src/CSE.cpp' l='340' c='Halide::Internal::(anonymousnamespace)::NormalizeVarNames'/>
<use f='halide/src/CSE.cpp' l='340'/>
<size>8</size>
<ovr f='halide/src/CanonicalizeGPUVars.cpp' l='80' c='Halide::Internal::(anonymousnamespace)::CanonicalizeGPUVars'/>
<use f='halide/src/CanonicalizeGPUVars.cpp' l='80'/>
<size>8</size>
<ovr f='halide/src/CodeGen_D3D12Compute_Dev.cpp' l='1034' c='FindSharedAllocationsAndUniquify'/>
<use f='halide/src/CodeGen_D3D12Compute_Dev.cpp' l='1034' c='_ZN6Halide8Internal12_GLOBAL__N_124CodeGen_D3D12Compute_Dev22CodeGen_D3D12Compute_C10add_kernelENS0_4StmtERKNSt7__cxx1112basic_stringIcSt11char_traits2924180'/>
<size>8</size>
<ovr f='halide/src/CodeGen_Hexagon.cpp' l='196' c='Halide::Internal::(anonymousnamespace)::SloppyUnpredicateLoadsAndStores'/>
<use f='halide/src/CodeGen_Hexagon.cpp' l='196'/>
<ovr f='halide/src/CodeGen_Hexagon.cpp' l='376' c='Halide::Internal::(anonymousnamespace)::InjectHVXLocks'/>
<use f='halide/src/CodeGen_Hexagon.cpp' l='376'/>
<size>8</size>
<ovr f='halide/src/CodeGen_PTX_Dev.cpp' l='415' c='Halide::Internal::(anonymousnamespace)::RewriteLoadsAs32Bit'/>
<use f='halide/src/CodeGen_PTX_Dev.cpp' l='415'/>
<size>8</size>
<ovr f='halide/src/CompilerLogger.cpp' l='22' c='Halide::Internal::(anonymousnamespace)::ObfuscateNames'/>
<use f='halide/src/CompilerLogger.cpp' l='22'/>
<size>8</size>
<ovr f='halide/src/DebugToFile.cpp' l='20' c='Halide::Internal::(anonymousnamespace)::DebugToFile'/>
<use f='halide/src/DebugToFile.cpp' l='20'/>
<ovr f='halide/src/DebugToFile.cpp' l='98' c='Halide::Internal::(anonymousnamespace)::RemoveDummyRealizations'/>
<use f='halide/src/DebugToFile.cpp' l='98'/>
<ovr f='halide/src/DebugToFile.cpp' l='118' c='Halide::Internal::(anonymousnamespace)::AddDummyRealizations'/>
<use f='halide/src/DebugToFile.cpp' l='118'/>
<size>8</size>
<use f='halide/src/Definition.cpp' l='53' c='_ZN6Halide8Internal18DefinitionContents6mutateEPNS0_9IRMutatorE'/>
<use f='halide/src/Definition.cpp' l='145' c='_ZN6Halide8Internal10Definition6mutateEPNS0_9IRMutatorE'/>
<size>8</size>
<ovr f='halide/src/Deinterleave.cpp' l='22' c='Halide::Internal::(anonymousnamespace)::StoreCollector'/>
<use f='halide/src/Deinterleave.cpp' l='22'/>
<ovr f='halide/src/Deinterleave.cpp' l='417' c='Halide::Internal::(anonymousnamespace)::Interleaver'/>
<use f='halide/src/Deinterleave.cpp' l='417'/>
<size>8</size>
<ovr f='halide/src/DerivativeUtils.cpp' l='567' c='Halide::Internal::(anonymousnamespace)::SubstituteCallArgWithPureArg'/>
<use f='halide/src/DerivativeUtils.cpp' l='567'/>
<size>8</size>
<ovr f='halide/src/EarlyFree.cpp' l='112' c='Halide::Internal::(anonymousnamespace)::InjectMarker'/>
<use f='halide/src/EarlyFree.cpp' l='112'/>
<ovr f='halide/src/EarlyFree.cpp' l='147' c='Halide::Internal::(anonymousnamespace)::InjectEarlyFrees'/>
<use f='halide/src/EarlyFree.cpp' l='147'/>
<size>8</size>
<ovr f='halide/src/EliminateBoolVectors.cpp' l='11' c='Halide::Internal::(anonymousnamespace)::EliminateBoolVectors'/>
<use f='halide/src/EliminateBoolVectors.cpp' l='11'/>
<size>8</size>
<ovr f='halide/src/FindIntrinsics.cpp' l='168' c='Halide::Internal::(anonymousnamespace)::FindIntrinsics'/>
<use f='halide/src/FindIntrinsics.cpp' l='168'/>
<ovr f='halide/src/FindIntrinsics.cpp' l='792' c='Halide::Internal::(anonymousnamespace)::LowerIntrinsics'/>
<use f='halide/src/FindIntrinsics.cpp' l='792'/>
<size>8</size>
<ovr f='halide/src/FlattenNestedRamps.cpp' l='15' c='Halide::Internal::(anonymousnamespace)::FlattenRamps'/>
<use f='halide/src/FlattenNestedRamps.cpp' l='15'/>
<size>8</size>
<use f='halide/src/Lower.h' l='39' c='_ZN6Halide8Internal5lowerERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS_8ArgumentESaIS464497'/>
<use f='halide/src/Lower.h' l='39' c='_ZN6Halide8Internal5lowerERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS_8ArgumentESaIS464497'/>
<use f='halide/src/Lower.h' l='51' c='_ZN6Halide8Internal15lower_main_stmtERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS0_4S10231373'/>
<use f='halide/src/Lower.h' l='51' c='_ZN6Halide8Internal15lower_main_stmtERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS0_4S10231373'/>
<ovr f='halide/src/Func.cpp' l='437' c='Halide::(anonymousnamespace)::SubstituteSelfReference'/>
<use f='halide/src/Func.cpp' l='437'/>
<use f='halide/src/Func.cpp' l='3288' c='_ZN6Halide4Func24add_custom_lowering_passEPNS_8Internal9IRMutatorESt8functionIFvvEE'/>
<size>8</size>
<ovr f='halide/src/Function.cpp' l='35' c='Halide::Internal::(anonymousnamespace)::WeakenFunctionPtrs'/>
<use f='halide/src/Function.cpp' l='35'/>
<use f='halide/src/Function.cpp' l='138' c='_ZN6Halide8Internal16FunctionContents6mutateEPNS0_9IRMutatorE'/>
<use f='halide/src/Function.cpp' l='761' c='_ZN6Halide8Internal8Function6mutateEPNS0_9IRMutatorE'/>
<ovr f='halide/src/Function.cpp' l='1020' c='Halide::Internal::(anonymousnamespace)::SubstituteCalls'/>
<use f='halide/src/Function.cpp' l='1020'/>
<size>8</size>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='127' c='Halide::Internal::(anonymousnamespace)::NormalizeDimensionality'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='127'/>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='189' c='Halide::Internal::(anonymousnamespace)::ReplaceForWithIf'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='189'/>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='227' c='Halide::Internal::(anonymousnamespace)::ExtractSharedAndHeapAllocations'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='227'/>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='871' c='RewriteGroupAccess'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='871' c='_ZN6Halide8Internal12_GLOBAL__N_131ExtractSharedAndHeapAllocations12rewrap_blockENS0_4StmtERKNS1_16ExtractBlockSizeE'/>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='1039' c='Halide::Internal::(anonymousnamespace)::ExtractRegisterAllocations'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='1039'/>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='1204' c='Halide::Internal::(anonymousnamespace)::InjectThreadBarriers'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='1204'/>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='1357' c='Halide::Internal::(anonymousnamespace)::FuseGPUThreadLoopsSingleKernel'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='1357'/>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='1445' c='Halide::Internal::(anonymousnamespace)::FuseGPUThreadLoops'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='1445'/>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='1481' c='Halide::Internal::(anonymousnamespace)::ZeroGPULoopMins'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='1481'/>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='1573' c='Halide::Internal::(anonymousnamespace)::AddConditionToALoop'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='1573'/>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='1595' c='Halide::Internal::(anonymousnamespace)::NormalizeIfStatements'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='1595'/>
<size>8</size>
<ovr f='halide/src/FuzzFloatStores.cpp' l='9' c='Halide::Internal::(anonymousnamespace)::FuzzFloatStores'/>
<use f='halide/src/FuzzFloatStores.cpp' l='9'/>
<size>8</size>
<ovr f='halide/src/HexagonOffload.cpp' l='657' c='Halide::Internal::(anonymousnamespace)::ReplaceParams'/>
<use f='halide/src/HexagonOffload.cpp' l='657'/>
<ovr f='halide/src/HexagonOffload.cpp' l='692' c='Halide::Internal::(anonymousnamespace)::InjectHexagonRpc'/>
<use f='halide/src/HexagonOffload.cpp' l='692'/>
<size>8</size>
<use f='halide/src/HexagonOptimize.cpp' l='293' c='_ZN6Halide8Internal12_GLOBAL__N_114apply_patternsENS_4ExprERKSt6vectorINS1_7PatternESaIS4_EERKNS_6TargetEPNS0_9IRMutatorE'/>
<use f='halide/src/HexagonOptimize.cpp' l='333' c='_ZN6Halide8Internal12_GLOBAL__N_126apply_commutative_patternsEPKT_RKSt6vectorINS1_7PatternESaIS6_EERKNS_6TargetEPNS0_9IRMutatorE'/>
<ovr f='halide/src/HexagonOptimize.cpp' l='447' c='Halide::Internal::(anonymousnamespace)::OptimizePatterns'/>
<use f='halide/src/HexagonOptimize.cpp' l='447'/>
<ovr f='halide/src/HexagonOptimize.cpp' l='1051' c='Halide::Internal::(anonymousnamespace)::VectorReducePatterns'/>
<use f='halide/src/HexagonOptimize.cpp' l='1051'/>
<ovr f='halide/src/HexagonOptimize.cpp' l='1313' c='Halide::Internal::(anonymousnamespace)::EliminateInterleaves'/>
<use f='halide/src/HexagonOptimize.cpp' l='1313'/>
<ovr f='halide/src/HexagonOptimize.cpp' l='1887' c='Halide::Internal::(anonymousnamespace)::FuseInterleaves'/>
<use f='halide/src/HexagonOptimize.cpp' l='1887'/>
<ovr f='halide/src/HexagonOptimize.cpp' l='1946' c='Halide::Internal::(anonymousnamespace)::OptimizeShuffles'/>
<use f='halide/src/HexagonOptimize.cpp' l='1946'/>
<ovr f='halide/src/HexagonOptimize.cpp' l='2049' c='Halide::Internal::(anonymousnamespace)::DistributeShiftsAsMuls'/>
<use f='halide/src/HexagonOptimize.cpp' l='2049'/>
<ovr f='halide/src/HexagonOptimize.cpp' l='2171' c='Halide::Internal::(anonymousnamespace)::ScatterGatherGenerator'/>
<use f='halide/src/HexagonOptimize.cpp' l='2171'/>
<ovr f='halide/src/HexagonOptimize.cpp' l='2318' c='Halide::Internal::(anonymousnamespace)::SyncronizationBarriers'/>
<use f='halide/src/HexagonOptimize.cpp' l='2318'/>
<size>8</size>
<use f='halide/src/IR.cpp' l='1133' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1137' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1141' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1145' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1149' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1153' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1157' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1161' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1165' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1169' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1173' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1177' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1181' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1185' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1189' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1193' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1197' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1201' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1205' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1209' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1213' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1217' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1221' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1225' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1229' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1233' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1237' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1241' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1245' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1249' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1254' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1258' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1262' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1266' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1270' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1274' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1278' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1282' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1286' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1290' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1294' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1298' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1302' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1306' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1310' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<use f='halide/src/IR.cpp' l='1314' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<size>8</size>
<ovr f='halide/src/IRMatch.cpp' l='344' c='Halide::Internal::(anonymousnamespace)::WithLanes'/>
<use f='halide/src/IRMatch.cpp' l='344'/>
<size>8</size>
<use f='halide/src/IRMutator.cpp' l='42' c='_ZN6Halide8Internal12_GLOBAL__N_122mutate_binary_operatorEPNS0_9IRMutatorEPKT_'/>
<size>8</size>
<fun r='_ZN6Halide8Internal9IRMutator6mutateERKNS_4ExprE'/>
<fun r='_ZN6Halide8Internal9IRMutator6mutateERKNS0_4StmtE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6IntImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7UIntImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8FloatImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_9StringImmE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8VariableE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4CastE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3AddE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3SubE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3MulE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3DivE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3ModE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3MinE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3MaxE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2EQE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2NEE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2LTE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2LEE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2GTE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2GEE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3AndE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_2OrE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3NotE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6SelectE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4LoadE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4RampE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_9BroadcastE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4CallE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3LetE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7LetStmtE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_10AssertStmtE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_16ProducerConsumerE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3ForE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_5StoreE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7ProvideE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8AllocateE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4FreeE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7RealizeE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8PrefetchE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_5BlockE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_10IfThenElseE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_8EvaluateE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7ShuffleE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_12VectorReduceE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_4ForkE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7AcquireE'/>
<fun r='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6AtomicE'/>
<ovr f='halide/src/IROperator.cpp' l='1016' c='Halide::Internal::(anonymousnamespace)::RemoveLikelies'/>
<use f='halide/src/IROperator.cpp' l='1016'/>
<size>8</size>
<ovr f='halide/src/InjectHostDevBufferCopies.cpp' l='144' c='Halide::Internal::(anonymousnamespace)::InjectBufferCopiesForSingleBuffer'/>
<use f='halide/src/InjectHostDevBufferCopies.cpp' l='144'/>
<ovr f='halide/src/InjectHostDevBufferCopies.cpp' l='508' c='Halide::Internal::(anonymousnamespace)::InjectBufferCopies'/>
<use f='halide/src/InjectHostDevBufferCopies.cpp' l='508'/>
<ovr f='halide/src/InjectHostDevBufferCopies.cpp' l='514' c='Halide::Internal::(anonymousnamespace)::InjectBufferCopies::InjectDeviceDestructor'/>
<use f='halide/src/InjectHostDevBufferCopies.cpp' l='514'/>
<ovr f='halide/src/InjectHostDevBufferCopies.cpp' l='542' c='Halide::Internal::(anonymousnamespace)::InjectBufferCopies::InjectCombinedAllocation'/>
<use f='halide/src/InjectHostDevBufferCopies.cpp' l='542'/>
<ovr f='halide/src/InjectHostDevBufferCopies.cpp' l='593' c='Halide::Internal::(anonymousnamespace)::InjectBufferCopies::FreeAfterLastUse'/>
<use f='halide/src/InjectHostDevBufferCopies.cpp' l='593'/>
<ovr f='halide/src/InjectHostDevBufferCopies.cpp' l='738' c='Halide::Internal::(anonymousnamespace)::InjectBufferCopiesForInputsAndOutputs'/>
<use f='halide/src/InjectHostDevBufferCopies.cpp' l='738'/>
<size>8</size>
<ovr f='halide/src/Inline.cpp' l='96' c='Halide::Internal::Inliner'/>
<use f='halide/src/Inline.cpp' l='96'/>
<size>8</size>
<ovr f='halide/src/InlineReductions.cpp' l='20' c='Halide::Internal::(anonymousnamespace)::FindFreeVars'/>
<use f='halide/src/InlineReductions.cpp' l='20'/>
<size>8</size>
<ovr f='halide/src/LICM.cpp' l='56' c='Halide::Internal::(anonymousnamespace)::LiftLoopInvariants'/>
<use f='halide/src/LICM.cpp' l='56'/>
<ovr f='halide/src/LICM.cpp' l='182' c='Halide::Internal::(anonymousnamespace)::SubstituteTrivialLets'/>
<use f='halide/src/LICM.cpp' l='182'/>
<ovr f='halide/src/LICM.cpp' l='202' c='Halide::Internal::(anonymousnamespace)::LICM'/>
<use f='halide/src/LICM.cpp' l='202'/>
<ovr f='halide/src/LICM.cpp' l='345' c='Halide::Internal::(anonymousnamespace)::GroupLoopInvariants'/>
<use f='halide/src/LICM.cpp' l='345'/>
<ovr f='halide/src/LICM.cpp' l='541' c='Halide::Internal::(anonymousnamespace)::HoistIfStatements'/>
<use f='halide/src/LICM.cpp' l='541'/>
<size>8</size>
<ovr f='halide/src/LoopCarry.cpp' l='185' c='Halide::Internal::(anonymousnamespace)::LoopCarryOverLoop'/>
<use f='halide/src/LoopCarry.cpp' l='185'/>
<ovr f='halide/src/LoopCarry.cpp' l='511' c='Halide::Internal::(anonymousnamespace)::LoopCarry'/>
<use f='halide/src/LoopCarry.cpp' l='511'/>
<size>8</size>
<use f='halide/src/Lower.cpp' l='108' c='_ZN6Halide8Internal12_GLOBAL__N_110lower_implERKSt6vectorINS0_8FunctionESaIS3_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS7388887'/>
<ovr f='halide/src/Lower.cpp' l='489' c='StrengthenRefs'/>
<use f='halide/src/Lower.cpp' l='489' c='_ZN6Halide8Internal12_GLOBAL__N_110lower_implERKSt6vectorINS0_8FunctionESaIS3_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS7388887'/>
<use f='halide/src/Lower.cpp' l='533' c='_ZN6Halide8Internal5lowerERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS_8ArgumentESaIS464497'/>
<use f='halide/src/Lower.cpp' l='546' c='_ZN6Halide8Internal15lower_main_stmtERKSt6vectorINS0_8FunctionESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS1_INS0_4S10231373'/>
<size>8</size>
<ovr f='halide/src/LowerWarpShuffles.cpp' l='88' c='Halide::Internal::(anonymousnamespace)::SubstituteInLaneVar'/>
<use f='halide/src/LowerWarpShuffles.cpp' l='88'/>
<ovr f='halide/src/LowerWarpShuffles.cpp' l='358' c='Halide::Internal::(anonymousnamespace)::LowerWarpShuffles'/>
<use f='halide/src/LowerWarpShuffles.cpp' l='358'/>
<ovr f='halide/src/LowerWarpShuffles.cpp' l='657' c='Halide::Internal::(anonymousnamespace)::HoistWarpShufflesFromSingleIfStmt'/>
<use f='halide/src/LowerWarpShuffles.cpp' l='657'/>
<ovr f='halide/src/LowerWarpShuffles.cpp' l='739' c='Halide::Internal::(anonymousnamespace)::MoveIfStatementInwards'/>
<use f='halide/src/LowerWarpShuffles.cpp' l='739'/>
<ovr f='halide/src/LowerWarpShuffles.cpp' l='758' c='Halide::Internal::(anonymousnamespace)::HoistWarpShuffles'/>
<use f='halide/src/LowerWarpShuffles.cpp' l='758'/>
<ovr f='halide/src/LowerWarpShuffles.cpp' l='801' c='Halide::Internal::(anonymousnamespace)::LowerWarpShufflesInEachKernel'/>
<use f='halide/src/LowerWarpShuffles.cpp' l='801'/>
<size>8</size>
<ovr f='halide/src/Memoization.cpp' l='322' c='Halide::Internal::(anonymousnamespace)::InjectMemoization'/>
<use f='halide/src/Memoization.cpp' l='322'/>
<ovr f='halide/src/Memoization.cpp' l='477' c='Halide::Internal::(anonymousnamespace)::RewriteMemoizedAllocations'/>
<use f='halide/src/Memoization.cpp' l='477'/>
<size>8</size>
<ovr f='halide/src/OffloadGPULoops.cpp' l='95' c='Halide::Internal::(anonymousnamespace)::InjectGpuOffload'/>
<use f='halide/src/OffloadGPULoops.cpp' l='95'/>
<size>8</size>
<ovr f='halide/src/ParallelRVar.cpp' l='53' c='Halide::Internal::(anonymousnamespace)::RenameFreeVars'/>
<use f='halide/src/ParallelRVar.cpp' l='53'/>
<ovr f='halide/src/ParallelRVar.cpp' l='80' c='Halide::Internal::(anonymousnamespace)::SubstituteInBooleanLets'/>
<use f='halide/src/ParallelRVar.cpp' l='80'/>
<size>8</size>
<ovr f='halide/src/PartitionLoops.cpp' l='31' c='Halide::Internal::(anonymousnamespace)::MarkClampedRampsAsLikely'/>
<use f='halide/src/PartitionLoops.cpp' l='31'/>
<ovr f='halide/src/PartitionLoops.cpp' l='441' c='Halide::Internal::(anonymousnamespace)::MakeSimplifications'/>
<use f='halide/src/PartitionLoops.cpp' l='441'/>
<ovr f='halide/src/PartitionLoops.cpp' l='494' c='Halide::Internal::(anonymousnamespace)::PartitionLoops'/>
<use f='halide/src/PartitionLoops.cpp' l='494'/>
<ovr f='halide/src/PartitionLoops.cpp' l='775' c='Halide::Internal::(anonymousnamespace)::RenormalizeGPULoops'/>
<use f='halide/src/PartitionLoops.cpp' l='775'/>
<ovr f='halide/src/PartitionLoops.cpp' l='934' c='Halide::Internal::(anonymousnamespace)::ExpandSelects'/>
<use f='halide/src/PartitionLoops.cpp' l='934'/>
<ovr f='halide/src/PartitionLoops.cpp' l='976' c='Halide::Internal::(anonymousnamespace)::CollapseSelects'/>
<use f='halide/src/PartitionLoops.cpp' l='976'/>
<ovr f='halide/src/PartitionLoops.cpp' l='1020' c='Halide::Internal::(anonymousnamespace)::LowerLikelyIfInnermost'/>
<use f='halide/src/PartitionLoops.cpp' l='1020'/>
<ovr f='halide/src/PartitionLoops.cpp' l='1066' c='Mutator'/>
<use f='halide/src/PartitionLoops.cpp' l='1066' c='_ZN6Halide8Internal15partition_loopsENS0_4StmtE'/>
<size>8</size>
<use f='halide/src/Pipeline.cpp' l='513' c='_ZN6Halide8Pipeline17compile_to_moduleERKSt6vectorINS_8ArgumentESaIS2_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetENS_11LinkageTypeE'/>
<use f='halide/src/Pipeline.cpp' l='686' c='_ZN6Halide8Pipeline24add_custom_lowering_passEPNS_8Internal9IRMutatorESt8functionIFvvEE'/>
<ovr f='halide/src/Prefetch.cpp' l='60' c='Halide::Internal::(anonymousnamespace)::InjectPrefetch'/>
<use f='halide/src/Prefetch.cpp' l='60'/>
<ovr f='halide/src/Prefetch.cpp' l='166' c='Halide::Internal::(anonymousnamespace)::InjectPlaceholderPrefetch'/>
<use f='halide/src/Prefetch.cpp' l='166'/>
<ovr f='halide/src/Prefetch.cpp' l='223' c='Halide::Internal::(anonymousnamespace)::ReducePrefetchDimension'/>
<use f='halide/src/Prefetch.cpp' l='223'/>
<ovr f='halide/src/Prefetch.cpp' l='280' c='Halide::Internal::(anonymousnamespace)::SplitPrefetch'/>
<use f='halide/src/Prefetch.cpp' l='280'/>
<size>8</size>
<ovr f='halide/src/Profiling.cpp' l='24' c='Halide::Internal::(anonymousnamespace)::InjectProfiling'/>
<use f='halide/src/Profiling.cpp' l='24'/>
<size>8</size>
<ovr f='halide/src/PurifyIndexMath.cpp' l='11' c='Halide::Internal::(anonymousnamespace)::PurifyIndexMath'/>
<use f='halide/src/PurifyIndexMath.cpp' l='11'/>
<size>8</size>
<ovr f='halide/src/Qualify.cpp' l='12' c='Halide::Internal::(anonymousnamespace)::QualifyExpr'/>
<use f='halide/src/Qualify.cpp' l='12'/>
<size>8</size>
<ovr f='halide/src/Random.cpp' l='98' c='Halide::Internal::(anonymousnamespace)::LowerRandom'/>
<use f='halide/src/Random.cpp' l='98'/>
<size>8</size>
<ovr f='halide/src/RebaseLoopsToZero.cpp' l='24' c='Halide::Internal::(anonymousnamespace)::RebaseLoopsToZero'/>
<use f='halide/src/RebaseLoopsToZero.cpp' l='24'/>
<size>8</size>
<use f='halide/src/Reduction.cpp' l='120' c='_ZN6Halide8Internal23ReductionDomainContents6mutateEPNS0_9IRMutatorE'/>
<ovr f='halide/src/Reduction.cpp' l='165' c='Halide::Internal::(anonymousnamespace)::DropSelfReferences'/>
<use f='halide/src/Reduction.cpp' l='165'/>
<use f='halide/src/Reduction.cpp' l='223' c='_ZN6Halide8Internal15ReductionDomain6mutateEPNS0_9IRMutatorE'/>
<size>8</size>
<ovr f='halide/src/RemoveDeadAllocations.cpp' l='11' c='Halide::Internal::(anonymousnamespace)::RemoveDeadAllocations'/>
<use f='halide/src/RemoveDeadAllocations.cpp' l='11'/>
<size>8</size>
<ovr f='halide/src/RemoveExternLoops.cpp' l='9' c='Halide::Internal::(anonymousnamespace)::RemoveExternLoops'/>
<use f='halide/src/RemoveExternLoops.cpp' l='9'/>
<size>8</size>
<ovr f='halide/src/RemoveUndef.cpp' l='15' c='Halide::Internal::(anonymousnamespace)::RemoveUndef'/>
<use f='halide/src/RemoveUndef.cpp' l='15'/>
<size>8</size>
<use f='halide/src/Schedule.cpp' l='231' c='_ZN6Halide8Internal20FuncScheduleContents6mutateEPNS0_9IRMutatorE'/>
<use f='halide/src/Schedule.cpp' l='294' c='_ZN6Halide8Internal21StageScheduleContents6mutateEPNS0_9IRMutatorE'/>
<use f='halide/src/Schedule.cpp' l='482' c='_ZN6Halide8Internal12FuncSchedule6mutateEPNS0_9IRMutatorE'/>
<use f='halide/src/Schedule.cpp' l='609' c='_ZN6Halide8Internal13StageSchedule6mutateEPNS0_9IRMutatorE'/>
<size>8</size>
<ovr f='halide/src/ScheduleFunctions.cpp' l='817' c='Halide::Internal::(anonymousnamespace)::InjectStmt'/>
<use f='halide/src/ScheduleFunctions.cpp' l='817'/>
<ovr f='halide/src/ScheduleFunctions.cpp' l='893' c='Halide::Internal::(anonymousnamespace)::SubstituteFusedBounds'/>
<use f='halide/src/ScheduleFunctions.cpp' l='893'/>
<ovr f='halide/src/ScheduleFunctions.cpp' l='971' c='Halide::Internal::(anonymousnamespace)::ShiftLoopNest'/>
<use f='halide/src/ScheduleFunctions.cpp' l='971'/>
<ovr f='halide/src/ScheduleFunctions.cpp' l='1017' c='Halide::Internal::(anonymousnamespace)::InjectFunctionRealization'/>
<use f='halide/src/ScheduleFunctions.cpp' l='1017'/>
<ovr f='halide/src/ScheduleFunctions.cpp' l='2256' c='Halide::Internal::(anonymousnamespace)::RemoveLoopsOverOutermost'/>
<use f='halide/src/ScheduleFunctions.cpp' l='2256'/>
<size>8</size>
<ovr f='halide/src/SelectGPUAPI.cpp' l='10' c='Halide::Internal::(anonymousnamespace)::SelectGPUAPI'/>
<use f='halide/src/SelectGPUAPI.cpp' l='10'/>
<size>8</size>
<ovr f='halide/src/Simplify.cpp' l='361' c='Halide::Internal::SimplifyExprs'/>
<use f='halide/src/Simplify.cpp' l='361'/>
<ovr f='halide/src/Simplify.cpp' l='388' c='RenameVariables'/>
<use f='halide/src/Simplify.cpp' l='388' c='_ZN6Halide8Internal9can_proveENS_4ExprERKNS0_5ScopeINS0_8IntervalEEE'/>
<size>8</size>
<ovr f='halide/src/SimplifyCorrelatedDifferences.cpp' l='22' c='Halide::Internal::(anonymousnamespace)::SimplifyCorrelatedDifferences'/>
<use f='halide/src/SimplifyCorrelatedDifferences.cpp' l='22'/>
<ovr f='halide/src/SimplifyCorrelatedDifferences.cpp' l='132' c='Halide::Internal::(anonymousnamespace)::SimplifyCorrelatedDifferences::PartiallyCancelDifferences'/>
<use f='halide/src/SimplifyCorrelatedDifferences.cpp' l='132'/>
<size>8</size>
<ovr f='halide/src/SimplifySpecializations.cpp' l='33' c='Halide::Internal::(anonymousnamespace)::SimplifyUsingFact'/>
<use f='halide/src/SimplifySpecializations.cpp' l='33'/>
<size>8</size>
<ovr f='halide/src/SkipStages.cpp' l='252' c='Halide::Internal::(anonymousnamespace)::ProductionGuarder'/>
<use f='halide/src/SkipStages.cpp' l='252'/>
<ovr f='halide/src/SkipStages.cpp' l='322' c='Halide::Internal::(anonymousnamespace)::StageSkipper'/>
<use f='halide/src/SkipStages.cpp' l='322'/>
<size>8</size>
<ovr f='halide/src/SlidingWindow.cpp' l='67' c='Halide::Internal::(anonymousnamespace)::ExpandExpr'/>
<use f='halide/src/SlidingWindow.cpp' l='67'/>
<ovr f='halide/src/SlidingWindow.cpp' l='128' c='Halide::Internal::(anonymousnamespace)::RollFunc'/>
<use f='halide/src/SlidingWindow.cpp' l='128'/>
<ovr f='halide/src/SlidingWindow.cpp' l='220' c='Halide::Internal::(anonymousnamespace)::SlidingWindowOnFunctionAndLoop'/>
<use f='halide/src/SlidingWindow.cpp' l='220'/>
<ovr f='halide/src/SlidingWindow.cpp' l='699' c='Halide::Internal::(anonymousnamespace)::SubstitutePrefetchVar'/>
<use f='halide/src/SlidingWindow.cpp' l='699'/>
<ovr f='halide/src/SlidingWindow.cpp' l='725' c='Halide::Internal::(anonymousnamespace)::SlidingWindow'/>
<use f='halide/src/SlidingWindow.cpp' l='725'/>
<ovr f='halide/src/SlidingWindow.cpp' l='886' c='Halide::Internal::(anonymousnamespace)::AddLoopMinOrig'/>
<use f='halide/src/SlidingWindow.cpp' l='886'/>
<size>8</size>
<ovr f='halide/src/Solve.cpp' l='35' c='Halide::Internal::(anonymousnamespace)::SolveExpression'/>
<use f='halide/src/Solve.cpp' l='35'/>
<size>8</size>
<ovr f='halide/src/SplitTuples.cpp' l='62' c='Halide::Internal::(anonymousnamespace)::SplitTuples'/>
<use f='halide/src/SplitTuples.cpp' l='62'/>
<ovr f='halide/src/SplitTuples.cpp' l='343' c='Halide::Internal::(anonymousnamespace)::SplitScatterGather'/>
<use f='halide/src/SplitTuples.cpp' l='343'/>
<ovr f='halide/src/SplitTuples.cpp' l='393' c='Halide::Internal::(anonymousnamespace)::SplitScatterGather::ExtractScatterGatherElement'/>
<use f='halide/src/SplitTuples.cpp' l='393'/>
<size>8</size>
<ovr f='halide/src/StorageFlattening.cpp' l='26' c='Halide::Internal::(anonymousnamespace)::FlattenDimensions'/>
<use f='halide/src/StorageFlattening.cpp' l='26'/>
<ovr f='halide/src/StorageFlattening.cpp' l='391' c='Halide::Internal::(anonymousnamespace)::PromoteToMemoryType'/>
<use f='halide/src/StorageFlattening.cpp' l='391'/>
<size>8</size>
<ovr f='halide/src/StorageFolding.cpp' l='57' c='Halide::Internal::(anonymousnamespace)::FoldStorageOfFunction'/>
<use f='halide/src/StorageFolding.cpp' l='57'/>
<ovr f='halide/src/StorageFolding.cpp' l='159' c='Halide::Internal::(anonymousnamespace)::InjectFoldingCheck'/>
<use f='halide/src/StorageFolding.cpp' l='159'/>
<ovr f='halide/src/StorageFolding.cpp' l='484' c='Halide::Internal::(anonymousnamespace)::AttemptStorageFoldingOfFunction'/>
<use f='halide/src/StorageFolding.cpp' l='484'/>
<ovr f='halide/src/StorageFolding.cpp' l='932' c='Halide::Internal::(anonymousnamespace)::StorageFolding'/>
<use f='halide/src/StorageFolding.cpp' l='932'/>
<size>8</size>
<ovr f='halide/src/StrictifyFloat.cpp' l='12' c='Halide::Internal::(anonymousnamespace)::StrictifyFloat'/>
<use f='halide/src/StrictifyFloat.cpp' l='12'/>
<size>8</size>
<ovr f='halide/src/Substitute.cpp' l='14' c='Halide::Internal::(anonymousnamespace)::Substitute'/>
<use f='halide/src/Substitute.cpp' l='14'/>
<ovr f='halide/src/Substitute.cpp' l='116' c='Halide::Internal::(anonymousnamespace)::SubstituteExpr'/>
<use f='halide/src/Substitute.cpp' l='116'/>
<size>8</size>
<ovr f='halide/src/Tracing.cpp' l='54' c='Halide::Internal::(anonymousnamespace)::InjectTracing'/>
<use f='halide/src/Tracing.cpp' l='54'/>
<ovr f='halide/src/Tracing.cpp' l='314' c='Halide::Internal::(anonymousnamespace)::RemoveRealizeOverOutput'/>
<use f='halide/src/Tracing.cpp' l='314'/>
<size>8</size>
<ovr f='halide/src/TrimNoOps.cpp' l='24' c='Halide::Internal::(anonymousnamespace)::StripIdentities'/>
<use f='halide/src/TrimNoOps.cpp' l='24'/>
<ovr f='halide/src/TrimNoOps.cpp' l='188' c='Halide::Internal::(anonymousnamespace)::SimplifyUsingBounds'/>
<use f='halide/src/TrimNoOps.cpp' l='188'/>
<ovr f='halide/src/TrimNoOps.cpp' l='353' c='Halide::Internal::(anonymousnamespace)::TrimNoOps'/>
<use f='halide/src/TrimNoOps.cpp' l='353'/>
<size>8</size>
<ovr f='halide/src/UnifyDuplicateLets.cpp' l='14' c='Halide::Internal::(anonymousnamespace)::UnifyDuplicateLets'/>
<use f='halide/src/UnifyDuplicateLets.cpp' l='14'/>
<size>8</size>
<ovr f='halide/src/UniquifyVariableNames.cpp' l='18' c='Halide::Internal::(anonymousnamespace)::UniquifyVariableNames'/>
<use f='halide/src/UniquifyVariableNames.cpp' l='18'/>
<size>8</size>
<ovr f='halide/src/UnrollLoops.cpp' l='17' c='Halide::Internal::(anonymousnamespace)::UnrollLoops'/>
<use f='halide/src/UnrollLoops.cpp' l='17'/>
<size>8</size>
<ovr f='halide/src/UnsafePromises.cpp' l='10' c='Halide::Internal::(anonymousnamespace)::LowerUnsafePromises'/>
<use f='halide/src/UnsafePromises.cpp' l='10'/>
<ovr f='halide/src/UnsafePromises.cpp' l='45' c='Halide::Internal::(anonymousnamespace)::LowerSafePromises'/>
<use f='halide/src/UnsafePromises.cpp' l='45'/>
<size>8</size>
<ovr f='halide/src/VectorizeLoops.cpp' l='298' c='Halide::Internal::(anonymousnamespace)::RewriteAccessToVectorAlloc'/>
<use f='halide/src/VectorizeLoops.cpp' l='298'/>
<ovr f='halide/src/VectorizeLoops.cpp' l='358' c='Halide::Internal::(anonymousnamespace)::SerializeLoops'/>
<use f='halide/src/VectorizeLoops.cpp' l='358'/>
<ovr f='halide/src/VectorizeLoops.cpp' l='372' c='Halide::Internal::(anonymousnamespace)::PredicateLoadStore'/>
<use f='halide/src/VectorizeLoops.cpp' l='372'/>
<ovr f='halide/src/VectorizeLoops.cpp' l='501' c='Halide::Internal::(anonymousnamespace)::VectorSubs'/>
<use f='halide/src/VectorizeLoops.cpp' l='501'/>
<ovr f='halide/src/VectorizeLoops.cpp' l='1376' c='Halide::Internal::(anonymousnamespace)::FindVectorizableExprsInAtomicNode'/>
<use f='halide/src/VectorizeLoops.cpp' l='1376'/>
<ovr f='halide/src/VectorizeLoops.cpp' l='1468' c='Halide::Internal::(anonymousnamespace)::LiftVectorizableExprsOutOfSingleAtomicNode'/>
<use f='halide/src/VectorizeLoops.cpp' l='1468'/>
<ovr f='halide/src/VectorizeLoops.cpp' l='1522' c='Halide::Internal::(anonymousnamespace)::LiftVectorizableExprsOutOfAllAtomicNodes'/>
<use f='halide/src/VectorizeLoops.cpp' l='1522'/>
<ovr f='halide/src/VectorizeLoops.cpp' l='1548' c='Halide::Internal::(anonymousnamespace)::VectorizeLoops'/>
<use f='halide/src/VectorizeLoops.cpp' l='1548'/>
<ovr f='halide/src/VectorizeLoops.cpp' l='1612' c='Halide::Internal::(anonymousnamespace)::RemoveUnnecessaryAtomics'/>
<use f='halide/src/VectorizeLoops.cpp' l='1612'/>
<ovr f='halide/src/VectorizeLoops.cpp' l='1646' c='Halide::Internal::(anonymousnamespace)::RemovePredicateHints'/>
<use f='halide/src/VectorizeLoops.cpp' l='1646'/>
<size>8</size>
<ovr f='halide/src/autoschedulers/adams2019/FunctionDAG.cpp' l='560' c='ApplyParamEstimates'/>
<use f='halide/src/autoschedulers/adams2019/FunctionDAG.cpp' l='560' c='_ZN6Halide8Internal13Autoscheduler11FunctionDAGC1ERKSt6vectorINS0_8FunctionESaIS4_EERKNS_13MachineParamsERKNS_6TargetE'/>
<size>8</size>
