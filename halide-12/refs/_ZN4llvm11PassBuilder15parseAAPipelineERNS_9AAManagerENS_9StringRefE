<dec f='halide/llvm-install/include/llvm/Passes/PassBuilder.h' l='527' type='llvm::Error llvm::PassBuilder::parseAAPipeline(llvm::AAManager &amp; AA, llvm::StringRef PipelineText)'/>
<doc f='halide/llvm-install/include/llvm/Passes/PassBuilder.h' l='510'>/// @}}

  /// Parse a textual alias analysis pipeline into the provided AA manager.
  ///
  /// The format of the textual AA pipeline is a comma separated list of AA
  /// pass names:
  ///
  ///   basic-aa,globals-aa,...
  ///
  /// The AA manager is set up such that the provided alias analyses are tried
  /// in the order specified. See the \c AAManaager documentation for details
  /// about the logic used. This routine just provides the textual mapping
  /// between AA names and the analyses to register with the manager.
  ///
  /// Returns false if the text cannot be parsed cleanly. The specific state of
  /// the \p AA manager is unspecified if such an error is encountered and this
  /// returns false.</doc>
