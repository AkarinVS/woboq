<dec f='halide/halide-install/include/Halide.h' l='6985' type='void Halide::Internal::match_types_bitwise(Halide::Expr &amp; a, Halide::Expr &amp; b, const char * op_name)'/>
<doc f='halide/halide-install/include/Halide.h' l='6980'>/** Asserts that both expressions are integer types and are either
 * both signed or both unsigned. If one argument is scalar and the
 * other a vector, the scalar is broadcasted to have the same number
 * of lanes as the vector. If one expression is of narrower type than
 * the other, it is widened to the bit width of the wider. */</doc>
<dec f='halide/build/include/Halide.h' l='6985' type='void Halide::Internal::match_types_bitwise(Halide::Expr &amp; a, Halide::Expr &amp; b, const char * op_name)'/>
<doc f='halide/build/include/Halide.h' l='6980'>/** Asserts that both expressions are integer types and are either
 * both signed or both unsigned. If one argument is scalar and the
 * other a vector, the scalar is broadcasted to have the same number
 * of lanes as the vector. If one expression is of narrower type than
 * the other, it is widened to the bit width of the wider. */</doc>
<dec f='halide/src/IROperator.h' l='180' type='void Halide::Internal::match_types_bitwise(Halide::Expr &amp; a, Halide::Expr &amp; b, const char * op_name)'/>
<doc f='halide/src/IROperator.h' l='175'>/** Asserts that both expressions are integer types and are either
 * both signed or both unsigned. If one argument is scalar and the
 * other a vector, the scalar is broadcasted to have the same number
 * of lanes as the vector. If one expression is of narrower type than
 * the other, it is widened to the bit width of the wider. */</doc>
<def f='halide/src/IROperator.cpp' l='681' ll='704' type='void Halide::Internal::match_types_bitwise(Halide::Expr &amp; x, Halide::Expr &amp; y, const char * op_name)'/>
<use f='halide/src/IROperator.cpp' l='2329' u='c' c='_ZN6HalideanENS_4ExprES0_'/>
<use f='halide/src/IROperator.cpp' l='2347' u='c' c='_ZN6HalideorENS_4ExprES0_'/>
<use f='halide/src/IROperator.cpp' l='2365' u='c' c='_ZN6HalideeoENS_4ExprES0_'/>
