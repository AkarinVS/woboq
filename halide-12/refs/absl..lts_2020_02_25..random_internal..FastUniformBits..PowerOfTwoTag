<def f='halide/build-apps/abseil-cpp/absl/random/internal/fast_uniform_bits.h' l='115'/>
<use f='halide/build-apps/abseil-cpp/absl/random/internal/fast_uniform_bits.h' l='129' c='_ZN4absl14lts_2020_02_2515random_internal15FastUniformBits17PowerOfTwoVariateERTL0__NS2_13PowerOfTwoTagE'/>
<doc f='halide/build-apps/abseil-cpp/absl/random/internal/fast_uniform_bits.h' l='110'>// PowerOfTwoVariate() generates a single random variate, always returning a
  // value in the half-open interval `[0, PowerOfTwoSubRangeSize&lt;URBG&gt;())`. If
  // the URBG already generates values in a power-of-two range, the generator
  // itself is used. Otherwise, we use rejection sampling on the largest
  // possible power-of-two-sized subrange.</doc>
