<dec f='halide/build-apps/eigen/Eigen/src/Core/VectorwiseOp.h' l='710' type='Eigen::VectorwiseOp::HomogeneousReturnType Eigen::VectorwiseOp::homogeneous() const'/>
<def f='halide/build-apps/eigen/Eigen/src/Geometry/Homogeneous.h' l='146' ll='151' type='Homogeneous&lt;ExpressionType, Direction&gt; Eigen::VectorwiseOp::homogeneous() const'/>
<doc f='halide/build-apps/eigen/Eigen/src/Geometry/Homogeneous.h' l='136'>/** \geometry_module \ingroup Geometry_Module
  *
  * \returns an expression where the value 1 is symbolically appended as the final coefficient to each column (or row) of the matrix.
  *
  * This can be used to convert affine coordinates to homogeneous coordinates.
  *
  * Example: \include VectorwiseOp_homogeneous.cpp
  * Output: \verbinclude VectorwiseOp_homogeneous.out
  *
  * \sa MatrixBase::homogeneous(), class Homogeneous */</doc>
