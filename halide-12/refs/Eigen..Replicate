<use f='halide/build-apps/eigen/Eigen/src/Core/DenseBase.h' l='549' c='_ZNK5Eigen9DenseBase9replicateEv'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/DenseBase.h' l='560' c='_ZNK5Eigen9DenseBase9replicateEll'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/DenseBase.h' l='562' c='_ZNK5Eigen9DenseBase9replicateEll'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/CoreEvaluators.h' l='1282'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/CoreEvaluators.h' l='1283'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/CoreEvaluators.h' l='1285'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/VectorwiseOp.h' l='221'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/VectorwiseOp.h' l='244'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/VectorwiseOp.h' l='552'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/VectorwiseOp.h' l='566' c='_ZNK5Eigen12VectorwiseOp9replicateEl'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/VectorwiseOp.h' l='570' c='_ZNK5Eigen12VectorwiseOp9replicateEl'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/VectorwiseOp.h' l='734'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/Replicate.h' l='17'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/Replicate.h' l='61' ll='106'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/Replicate.h' l='62'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/Replicate.h' l='118' c='_ZNK5Eigen9DenseBase9replicateEv'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/Replicate.h' l='121' c='_ZNK5Eigen9DenseBase9replicateEv'/>
<use f='halide/build-apps/eigen/Eigen/src/Geometry/Homogeneous.h' l='201' c='_ZNK5Eigen12VectorwiseOp11hnormalizedEv'/>
<use f='halide/build-apps/eigen/Eigen/src/Geometry/Homogeneous.h' l='403'/>
<use f='halide/build-apps/eigen/Eigen/src/Geometry/Homogeneous.h' l='456'/>
<use f='halide/build-apps/eigen/Eigen/src/Geometry/Transform.h' l='1383' c='_ZN5Eigen8internal28transform_right_product_implIT_T0_Li2EXT1_EE3runERKS2_RKS3_'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/Replicate.h' l='45'>/**
  * \class Replicate
  * \ingroup Core_Module
  *
  * \brief Expression of the multiple replication of a matrix or vector
  *
  * \tparam MatrixType the type of the object we are replicating
  * \tparam RowFactor number of repetitions at compile time along the vertical direction, can be Dynamic.
  * \tparam ColFactor number of repetitions at compile time along the horizontal direction, can be Dynamic.
  *
  * This class represents an expression of the multiple replication of a matrix or vector.
  * It is the return type of DenseBase::replicate() and most of the time
  * this is the only way it is used.
  *
  * \sa DenseBase::replicate()
  */</doc>
<fun r='_ZN5Eigen9ReplicateC1ERKTL0__'/>
<fun r='_ZN5Eigen9ReplicateC1ERKTL0__ll'/>
<fun r='_ZNK5Eigen9Replicate4rowsEv'/>
<fun r='_ZNK5Eigen9Replicate4colsEv'/>
<fun r='_ZNK5Eigen9Replicate16nestedExpressionEv'/>
<mbr r='Eigen::Replicate::m_matrix' t='Eigen::Replicate::MatrixTypeNested'/>
<mbr r='Eigen::Replicate::m_rowFactor' t='const internal::variable_if_dynamic&lt;Index, RowFactor&gt;'/>
<mbr r='Eigen::Replicate::m_colFactor' t='const internal::variable_if_dynamic&lt;Index, ColFactor&gt;'/>
