<dec f='halide/halide-install/include/Halide.h' l='17788' type='Halide::Func &amp; Halide::Func::gpu_lanes(const Halide::VarOrRVar &amp; thread_x, Halide::DeviceAPI device_api = DeviceAPI::Default_GPU)'/>
<doc f='halide/halide-install/include/Halide.h' l='17783'>/** The given dimension corresponds to the lanes in a GPU
     * warp. GPU warp lanes are distinguished from GPU threads by the
     * fact that all warp lanes run together in lockstep, which
     * permits lightweight communication of data from one lane to
     * another. */</doc>
<use f='halide/apps/conv_layer/conv_layer_generator.cpp' l='91' u='c' c='_ZN12_GLOBAL__N_116ConvolutionLayer8generateEv'/>
<use f='halide/apps/conv_layer/conv_layer_generator.cpp' l='99' u='c' c='_ZN12_GLOBAL__N_116ConvolutionLayer8generateEv'/>
<use f='halide/apps/conv_layer/conv_layer_generator.cpp' l='118' u='c' c='_ZN12_GLOBAL__N_116ConvolutionLayer8generateEv'/>
<use f='halide/apps/hist/hist_generator.cpp' l='86' u='c' c='_ZN12_GLOBAL__N_14Hist8generateEv'/>
<use f='halide/apps/hist/hist_generator.cpp' l='95' u='c' c='_ZN12_GLOBAL__N_14Hist8generateEv'/>
<use f='halide/apps/hist/hist_generator.cpp' l='105' u='c' c='_ZN12_GLOBAL__N_14Hist8generateEv'/>
<use f='halide/apps/iir_blur/iir_blur_generator.cpp' l='77' u='c' c='_Z19blur_cols_transposeN6Halide4FuncENS_4ExprES1_bNS_6TargetE'/>
<use f='halide/apps/iir_blur/iir_blur_generator.cpp' l='81' u='c' c='_Z19blur_cols_transposeN6Halide4FuncENS_4ExprES1_bNS_6TargetE'/>
<use f='halide/apps/iir_blur/iir_blur_generator.cpp' l='109' u='c' c='_Z19blur_cols_transposeN6Halide4FuncENS_4ExprES1_bNS_6TargetE'/>
<dec f='halide/build/include/Halide.h' l='17788' type='Halide::Func &amp; Halide::Func::gpu_lanes(const Halide::VarOrRVar &amp; thread_x, Halide::DeviceAPI device_api = DeviceAPI::Default_GPU)'/>
<doc f='halide/build/include/Halide.h' l='17783'>/** The given dimension corresponds to the lanes in a GPU
     * warp. GPU warp lanes are distinguished from GPU threads by the
     * fact that all warp lanes run together in lockstep, which
     * permits lightweight communication of data from one lane to
     * another. */</doc>
<dec f='halide/src/Func.h' l='1908' type='Halide::Func &amp; Halide::Func::gpu_lanes(const Halide::VarOrRVar &amp; thread_x, Halide::DeviceAPI device_api = DeviceAPI::Default_GPU)'/>
<doc f='halide/src/Func.h' l='1903'>/** The given dimension corresponds to the lanes in a GPU
     * warp. GPU warp lanes are distinguished from GPU threads by the
     * fact that all warp lanes run together in lockstep, which
     * permits lightweight communication of data from one lane to
     * another. */</doc>
<def f='halide/src/Func.cpp' l='2419' ll='2423' type='Halide::Func &amp; Halide::Func::gpu_lanes(const Halide::VarOrRVar &amp; tx, Halide::DeviceAPI device_api = DeviceAPI::Default_GPU)'/>
