<def f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1597' ll='1616' type='Offset&lt;Vector&lt;T&gt; &gt; flatbuffers::FlatBufferBuilder::CreateVector(const T * v, size_t len)'/>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1588'>/// @endcond

  /// @brief Serialize an array into a FlatBuffer `vector`.
  /// @tparam T The data type of the array elements.
  /// @param[in] v A pointer to the array of type `T` to serialize into the
  /// buffer as a `vector`.
  /// @param[in] len The number of elements to serialize.
  /// @return Returns a typed `Offset` into the serialized data indicating
  /// where the vector is stored.</doc>
<use f='halide/build-apps/flatbuffers/src/idl_parser.cpp' l='1479' u='c' c='_ZN11flatbuffers6Parser21ParseNestedFlatbufferERNS_5ValueEPNS_8FieldDefEmPKNS_9StructDefE'/>
