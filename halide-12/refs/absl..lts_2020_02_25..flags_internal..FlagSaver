<def f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.h' l='105' ll='118'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.h' l='110' c='_ZN4absl14lts_2020_02_2514flags_internal9FlagSaverC1ERKS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.h' l='111' c='_ZN4absl14lts_2020_02_2514flags_internal9FlagSaveraSERKS2_'/>
<size>8</size>
<doc f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.h' l='95'>//-----------------------------------------------------------------------------
// Saves the states (value, default value, whether the user has set
// the flag, registered validators, etc) of all flags, and restores
// them when the FlagSaver is destroyed.
//
// This class is thread-safe.  However, its destructor writes to
// exactly the set of flags that have changed value during its
// lifetime, so concurrent _direct_ access to those flags
// (i.e. FLAGS_foo instead of {Get,Set}CommandLineOption()) is unsafe.</doc>
<fun r='_ZN4absl14lts_2020_02_2514flags_internal9FlagSaverC1Ev'/>
<fun r='_ZN4absl14lts_2020_02_2514flags_internal9FlagSaverD1Ev'/>
<fun r='_ZN4absl14lts_2020_02_2514flags_internal9FlagSaverC1ERKS2_'/>
<fun r='_ZN4absl14lts_2020_02_2514flags_internal9FlagSaveraSERKS2_'/>
<fun r='_ZN4absl14lts_2020_02_2514flags_internal9FlagSaver6IgnoreEv'/>
<mbr r='absl::lts_2020_02_25::flags_internal::FlagSaver::impl_' o='0' t='class FlagSaverImpl *'/>
