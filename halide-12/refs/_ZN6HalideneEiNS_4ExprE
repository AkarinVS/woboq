<dec f='halide/halide-install/include/Halide.h' l='7425' type='Halide::Expr Halide::operator!=(int a, Halide::Expr b)'/>
<doc f='halide/halide-install/include/Halide.h' l='7421'>/** Return a boolean expression that tests whether a constant integer
 * is not equal to an expression. Coerces the integer to the type of
 * the expression. Errors if the integer is not representable in that
 * type. */</doc>
<dec f='halide/build/include/Halide.h' l='7425' type='Halide::Expr Halide::operator!=(int a, Halide::Expr b)'/>
<doc f='halide/build/include/Halide.h' l='7421'>/** Return a boolean expression that tests whether a constant integer
 * is not equal to an expression. Coerces the integer to the type of
 * the expression. Errors if the integer is not representable in that
 * type. */</doc>
<dec f='halide/src/IROperator.h' l='620' type='Halide::Expr Halide::operator!=(int a, Halide::Expr b)'/>
<doc f='halide/src/IROperator.h' l='616'>/** Return a boolean expression that tests whether a constant integer
 * is not equal to an expression. Coerces the integer to the type of
 * the expression. Errors if the integer is not representable in that
 * type. */</doc>
<def f='halide/src/IROperator.cpp' l='1782' ll='1787' type='Halide::Expr Halide::operator!=(int a, Halide::Expr b)'/>
