<dec f='halide/halide-install/include/Halide.h' l='19843' type='void Halide::Internal::CodeGen_LLVM::begin_func(Halide::LinkageType linkage, const std::string &amp; simple_name, const std::string &amp; extern_name, const std::vector&lt;LoweredArgument&gt; &amp; args)'/>
<doc f='halide/halide-install/include/Halide.h' l='19836'>/** Helper functions for compiling Halide functions to llvm
     * functions. begin_func performs all the work necessary to begin
     * generating code for a function with a given argument list with
     * the IRBuilder. A call to begin_func should be a followed by a
     * call to end_func with the same arguments, to generate the
     * appropriate cleanup code. */
    // @{</doc>
<dec f='halide/build/include/Halide.h' l='19843' type='void Halide::Internal::CodeGen_LLVM::begin_func(Halide::LinkageType linkage, const std::string &amp; simple_name, const std::string &amp; extern_name, const std::vector&lt;LoweredArgument&gt; &amp; args)'/>
<doc f='halide/build/include/Halide.h' l='19836'>/** Helper functions for compiling Halide functions to llvm
     * functions. begin_func performs all the work necessary to begin
     * generating code for a function with a given argument list with
     * the IRBuilder. A call to begin_func should be a followed by a
     * call to end_func with the same arguments, to generate the
     * appropriate cleanup code. */
    // @{</doc>
<dec f='halide/src/CodeGen_LLVM.h' l='104' type='void Halide::Internal::CodeGen_LLVM::begin_func(Halide::LinkageType linkage, const std::string &amp; simple_name, const std::string &amp; extern_name, const std::vector&lt;LoweredArgument&gt; &amp; args)'/>
<doc f='halide/src/CodeGen_LLVM.h' l='97'>/** Helper functions for compiling Halide functions to llvm
     * functions. begin_func performs all the work necessary to begin
     * generating code for a function with a given argument list with
     * the IRBuilder. A call to begin_func should be a followed by a
     * call to end_func with the same arguments, to generate the
     * appropriate cleanup code. */
    // @{</doc>
<use f='halide/src/CodeGen_Hexagon.cpp' l='508' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_115CodeGen_Hexagon12compile_funcERKNS0_11LoweredFuncERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESD_'/>
<def f='halide/src/CodeGen_LLVM.cpp' l='532' ll='603' type='void Halide::Internal::CodeGen_LLVM::begin_func(Halide::LinkageType linkage, const std::string &amp; name, const std::string &amp; extern_name, const std::vector&lt;LoweredArgument&gt; &amp; args)'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='625' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM12compile_funcERKNS0_11LoweredFuncERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESC_'/>
