<dec f='halide/llvm-install/include/llvm/Support/Regex.h' l='97' type='std::string llvm::Regex::sub(llvm::StringRef Repl, llvm::StringRef String, std::string * Error = nullptr) const'/>
<doc f='halide/llvm-install/include/llvm/Support/Regex.h' l='87'>/// sub - Return the result of replacing the first match of the regex in
    /// \p String with the \p Repl string. Backreferences like &quot;\0&quot; in the
    /// replacement string are replaced with the appropriate match substring.
    ///
    /// Note that the replacement string has backslash escaping performed on
    /// it. Invalid backreferences are ignored (replaced by empty strings).
    ///
    /// \param Error If non-null, any errors in the substitution (invalid
    /// backreferences, trailing backslashes) will be recorded as a non-empty
    /// string. If there is no error, it will be an empty string.</doc>
