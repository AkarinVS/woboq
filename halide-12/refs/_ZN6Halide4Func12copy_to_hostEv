<dec f='halide/halide-install/include/Halide.h' l='17346' type='Halide::Func Halide::Func::copy_to_host()'/>
<use f='halide/halide-install/include/Halide.h' l='25181' u='c' c='_ZN6Halide8Internal19GeneratorOutputBase12copy_to_hostEDpOT_'/>
<use f='halide/halide-install/include/Halide.h' l='25181' u='c' c='_ZN6Halide8Internal19GeneratorOutputBase12copy_to_hostEDpOT_'/>
<doc f='halide/halide-install/include/Halide.h' l='17333'>/** Declare that this function should be implemented by a call to
     * halide_buffer_copy with a NULL target device API. Equivalent to
     * copy_to_device(DeviceAPI::Host). Asserts that the Func has a
     * pure definition which is a simple call to a single input, and
     * no update definitions. The wrapper Funcs returned by in() are
     * suitable candidates. Consumes all pure variables, and rewrites
     * the Func to have an extern definition that calls
     * halide_buffer_copy.
     *
     * Note that if the source Func is already valid in host memory,
     * this compiles to code that does the minimum number of calls to
     * memcpy.
     */</doc>
<dec f='halide/build/include/Halide.h' l='17346' type='Halide::Func Halide::Func::copy_to_host()'/>
<use f='halide/build/include/Halide.h' l='25181' u='c' c='_ZN6Halide8Internal19GeneratorOutputBase12copy_to_hostEDpOT_'/>
<use f='halide/build/include/Halide.h' l='25181' u='c' c='_ZN6Halide8Internal19GeneratorOutputBase12copy_to_hostEDpOT_'/>
<doc f='halide/build/include/Halide.h' l='17333'>/** Declare that this function should be implemented by a call to
     * halide_buffer_copy with a NULL target device API. Equivalent to
     * copy_to_device(DeviceAPI::Host). Asserts that the Func has a
     * pure definition which is a simple call to a single input, and
     * no update definitions. The wrapper Funcs returned by in() are
     * suitable candidates. Consumes all pure variables, and rewrites
     * the Func to have an extern definition that calls
     * halide_buffer_copy.
     *
     * Note that if the source Func is already valid in host memory,
     * this compiles to code that does the minimum number of calls to
     * memcpy.
     */</doc>
<use f='halide/python_bindings/src/PyFunc.cpp' l='322' u='a' c='_ZN6Halide14PythonBindings11define_funcERN8pybind117module_E'/>
<dec f='halide/src/Func.h' l='1466' type='Halide::Func Halide::Func::copy_to_host()'/>
<doc f='halide/src/Func.h' l='1453'>/** Declare that this function should be implemented by a call to
     * halide_buffer_copy with a NULL target device API. Equivalent to
     * copy_to_device(DeviceAPI::Host). Asserts that the Func has a
     * pure definition which is a simple call to a single input, and
     * no update definitions. The wrapper Funcs returned by in() are
     * suitable candidates. Consumes all pure variables, and rewrites
     * the Func to have an extern definition that calls
     * halide_buffer_copy.
     *
     * Note that if the source Func is already valid in host memory,
     * this compiles to code that does the minimum number of calls to
     * memcpy.
     */</doc>
<def f='halide/src/Func.cpp' l='2076' ll='2086' type='Halide::Func Halide::Func::copy_to_host()'/>
<use f='halide/src/Generator.h' l='2247' u='c' c='_ZN6Halide8Internal19GeneratorOutputBase12copy_to_hostEDpOT_'/>
<use f='halide/src/Generator.h' l='2247' u='c' c='_ZN6Halide8Internal19GeneratorOutputBase12copy_to_hostEDpOT_'/>
<use f='halide/test/generator/buffer_copy_generator.cpp' l='55' u='c' c='_ZN10BufferCopy8scheduleEv'/>
<use f='halide/test/generator/buffer_copy_generator.cpp' l='61' u='c' c='_ZN10BufferCopy8scheduleEv'/>
