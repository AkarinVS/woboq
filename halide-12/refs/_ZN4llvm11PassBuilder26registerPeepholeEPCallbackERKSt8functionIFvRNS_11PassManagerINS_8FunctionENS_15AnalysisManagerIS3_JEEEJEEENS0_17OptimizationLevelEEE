<def f='halide/llvm-install/include/llvm/Passes/PassBuilder.h' l='541' ll='544' type='void llvm::PassBuilder::registerPeepholeEPCallback(const std::function&lt;void (FunctionPassManager &amp;, OptimizationLevel)&gt; &amp; C)'/>
<doc f='halide/llvm-install/include/llvm/Passes/PassBuilder.h' l='535'>/// Register a callback for a default optimizer pipeline extension
  /// point
  ///
  /// This extension point allows adding passes that perform peephole
  /// optimizations similar to the instruction combiner. These passes will be
  /// inserted after each instance of the instruction combiner pass.</doc>
