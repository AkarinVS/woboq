<def f='halide/build-apps/abseil-cpp/absl/random/internal/randen_traits.h' l='37' ll='57'/>
<size>1</size>
<doc f='halide/build-apps/abseil-cpp/absl/random/internal/randen_traits.h' l='31'>// RANDen = RANDom generator or beetroots in Swiss German.
// &apos;Strong&apos; (well-distributed, unpredictable, backtracking-resistant) random
// generator, faster in some benchmarks than std::mt19937_64 and pcg64_c32.
//
// RandenTraits contains the basic algorithm traits, such as the size of the
// state, seed, sponge, etc.</doc>
<smbr r='absl::lts_2020_02_25::random_internal::RandenTraits::kStateBytes' t='const size_t'/>
<smbr r='absl::lts_2020_02_25::random_internal::RandenTraits::kCapacityBytes' t='const size_t'/>
<smbr r='absl::lts_2020_02_25::random_internal::RandenTraits::kSeedBytes' t='const size_t'/>
<smbr r='absl::lts_2020_02_25::random_internal::RandenTraits::kFeistelBlocks' t='const size_t'/>
<smbr r='absl::lts_2020_02_25::random_internal::RandenTraits::kFeistelFunctions' t='const size_t'/>
<smbr r='absl::lts_2020_02_25::random_internal::RandenTraits::kFeistelRounds' t='const size_t'/>
