<def f='halide/llvm-install/include/llvm/Support/Timer.h' l='76' ll='134'/>
<use f='halide/llvm-install/include/llvm/Support/Timer.h' l='85'/>
<use f='halide/llvm-install/include/llvm/Support/Timer.h' l='86'/>
<use f='halide/llvm-install/include/llvm/Support/Timer.h' l='94' c='_ZN4llvm5TimerC1ERKS0_'/>
<use f='halide/llvm-install/include/llvm/Support/Timer.h' l='97' c='_ZN4llvm5TimeraSERKS0_'/>
<use f='halide/llvm-install/include/llvm/Support/Timer.h' l='97' c='_ZN4llvm5TimeraSERKS0_'/>
<use f='halide/llvm-install/include/llvm/Support/Timer.h' l='141'/>
<use f='halide/llvm-install/include/llvm/Support/Timer.h' l='145' c='_ZN4llvm10TimeRegionC1ERNS_5TimerE'/>
<use f='halide/llvm-install/include/llvm/Support/Timer.h' l='148' c='_ZN4llvm10TimeRegionC1EPNS_5TimerE'/>
<use f='halide/llvm-install/include/llvm/Support/Timer.h' l='188'/>
<use f='halide/llvm-install/include/llvm/Support/Timer.h' l='239'/>
<use f='halide/llvm-install/include/llvm/Support/Timer.h' l='241' c='_ZN4llvm10TimerGroup8addTimerERNS_5TimerE'/>
<use f='halide/llvm-install/include/llvm/Support/Timer.h' l='242' c='_ZN4llvm10TimerGroup11removeTimerERNS_5TimerE'/>
<use f='halide/llvm-install/include/llvm/IR/PassTimingInfo.h' l='39' c='_ZN4llvm12getPassTimerEPNS_4PassE'/>
<use f='halide/llvm-install/include/llvm/IR/PassTimingInfo.h' l='55'/>
<use f='halide/llvm-install/include/llvm/IR/PassTimingInfo.h' l='60'/>
<use f='halide/llvm-install/include/llvm/IR/PassTimingInfo.h' l='94' c='_ZN4llvm17TimePassesHandler12getPassTimerENS_9StringRefE'/>
<size>160</size>
<doc f='halide/llvm-install/include/llvm/Support/Timer.h' l='69'>/// This class is used to track the amount of time spent between invocations of
/// its startTimer()/stopTimer() methods.  Given appropriate OS support it can
/// also keep track of the RSS of the program at various points.  By default,
/// the Timer will print the amount of time it has captured to standard error
/// when the last timer is destroyed, otherwise it is printed when its
/// TimerGroup is destroyed.  Timers do not print their information if they are
/// never started.</doc>
<mbr r='llvm::Timer::Time' o='0' t='llvm::TimeRecord'/>
<mbr r='llvm::Timer::StartTime' o='256' t='llvm::TimeRecord'/>
<mbr r='llvm::Timer::Name' o='512' t='std::string'/>
<mbr r='llvm::Timer::Description' o='768' t='std::string'/>
<mbr r='llvm::Timer::Running' o='1024' t='bool'/>
<mbr r='llvm::Timer::Triggered' o='1032' t='bool'/>
<mbr r='llvm::Timer::TG' o='1088' t='llvm::TimerGroup *'/>
<mbr r='llvm::Timer::Prev' o='1152' t='llvm::Timer **'/>
<mbr r='llvm::Timer::Next' o='1216' t='llvm::Timer *'/>
<fun r='_ZN4llvm5TimerC1ENS_9StringRefES1_'/>
<fun r='_ZN4llvm5TimerC1ENS_9StringRefES1_RNS_10TimerGroupE'/>
<fun r='_ZN4llvm5TimerC1ERKS0_'/>
<fun r='_ZN4llvm5TimeraSERKS0_'/>
<fun r='_ZN4llvm5TimerD1Ev'/>
<fun r='_ZN4llvm5TimerC1Ev'/>
<fun r='_ZN4llvm5Timer4initENS_9StringRefES1_'/>
<fun r='_ZN4llvm5Timer4initENS_9StringRefES1_RNS_10TimerGroupE'/>
<fun r='_ZNK4llvm5Timer7getNameB5cxx11Ev'/>
<fun r='_ZNK4llvm5Timer14getDescriptionB5cxx11Ev'/>
<fun r='_ZNK4llvm5Timer13isInitializedEv'/>
<fun r='_ZNK4llvm5Timer9isRunningEv'/>
<fun r='_ZNK4llvm5Timer12hasTriggeredEv'/>
<fun r='_ZN4llvm5Timer10startTimerEv'/>
<fun r='_ZN4llvm5Timer9stopTimerEv'/>
<fun r='_ZN4llvm5Timer5clearEv'/>
<fun r='_ZNK4llvm5Timer12getTotalTimeEv'/>
