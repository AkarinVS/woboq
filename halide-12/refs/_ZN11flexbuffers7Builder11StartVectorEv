<def f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='1072' type='size_t flexbuffers::Builder::StartVector()'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='1147' u='c' c='_ZN11flexbuffers7Builder6VectorET_'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='1152' u='c' c='_ZN11flexbuffers7Builder6VectorET_RT0_'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='1173' u='c' c='_ZN11flexbuffers7Builder6VectorEPKT_m'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='1188' u='c' c='_ZN11flexbuffers7Builder11TypedVectorET_'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='1193' u='c' c='_ZN11flexbuffers7Builder11TypedVectorET_RT0_'/>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='1068'>// TODO(wvo): support all the FlexBuffer types (like flexbuffers::String),
  // e.g. Vector etc. Also in overloaded versions.
  // Also some FlatBuffers types?</doc>
<use f='halide/build-apps/flatbuffers/src/idl_parser.cpp' l='2759' u='c' c='_ZN11flatbuffers6Parser20ParseFlexBufferValueEPN11flexbuffers7BuilderE'/>
