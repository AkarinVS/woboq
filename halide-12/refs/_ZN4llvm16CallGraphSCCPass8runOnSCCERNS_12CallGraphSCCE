<dec f='halide/llvm-install/include/llvm/Analysis/CallGraphSCCPass.h' l='59' type='bool llvm::CallGraphSCCPass::runOnSCC(llvm::CallGraphSCC &amp; SCC)'/>
<ovr f='halide/llvm-install/include/llvm/Analysis/CallGraphSCCPass.h' l='131' c='_ZN4llvm14DummyCGSCCPass8runOnSCCERNS_12CallGraphSCCE'/>
<doc f='halide/llvm-install/include/llvm/Analysis/CallGraphSCCPass.h' l='52'>/// runOnSCC - This method should be implemented by the subclass to perform
  /// whatever action is necessary for the specified SCC.  Note that
  /// non-recursive (or only self-recursive) functions will have an SCC size of
  /// 1, where recursive portions of the call graph will have SCC size &gt; 1.
  ///
  /// SCC passes that add or delete functions to the SCC are required to update
  /// the SCC list, otherwise stale pointers may be dereferenced.</doc>
