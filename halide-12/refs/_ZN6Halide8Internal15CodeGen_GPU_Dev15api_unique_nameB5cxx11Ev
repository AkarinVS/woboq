<dec f='halide/halide-install/include/Halide.h' l='19564' type='std::string Halide::Internal::CodeGen_GPU_Dev::api_unique_name()'/>
<doc f='halide/halide-install/include/Halide.h' l='19560'>/** This routine returns the GPU API name that is combined into
     *  runtime routine names to ensure each GPU API has a unique
     *  name.
     */</doc>
<dec f='halide/build/include/Halide.h' l='19564' type='std::string Halide::Internal::CodeGen_GPU_Dev::api_unique_name()'/>
<doc f='halide/build/include/Halide.h' l='19560'>/** This routine returns the GPU API name that is combined into
     *  runtime routine names to ensure each GPU API has a unique
     *  name.
     */</doc>
<dec f='halide/src/CodeGen_GPU_Dev.h' l='42' type='std::string Halide::Internal::CodeGen_GPU_Dev::api_unique_name()'/>
<doc f='halide/src/CodeGen_GPU_Dev.h' l='38'>/** This routine returns the GPU API name that is combined into
     *  runtime routine names to ensure each GPU API has a unique
     *  name.
     */</doc>
<ovr f='halide/src/CodeGen_D3D12Compute_Dev.cpp' l='54' c='_ZN6Halide8Internal12_GLOBAL__N_124CodeGen_D3D12Compute_Dev15api_unique_nameB5cxx11Ev'/>
<ovr f='halide/src/CodeGen_Metal_Dev.cpp' l='48' c='_ZN6Halide8Internal12_GLOBAL__N_117CodeGen_Metal_Dev15api_unique_nameB5cxx11Ev'/>
<ovr f='halide/src/CodeGen_OpenCL_Dev.cpp' l='53' c='_ZN6Halide8Internal12_GLOBAL__N_118CodeGen_OpenCL_Dev15api_unique_nameB5cxx11Ev'/>
<ovr f='halide/src/CodeGen_OpenGLCompute_Dev.cpp' l='645' c='_ZN6Halide8Internal12_GLOBAL__N_125CodeGen_OpenGLCompute_Dev15api_unique_nameB5cxx11Ev'/>
<ovr f='halide/src/CodeGen_PTX_Dev.cpp' l='64' c='_ZN6Halide8Internal12_GLOBAL__N_115CodeGen_PTX_Dev15api_unique_nameB5cxx11Ev'/>
<use f='halide/src/OffloadGPULoops.cpp' l='234' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116InjectGpuOffload5visitEPKNS0_3ForE'/>
<use f='halide/src/OffloadGPULoops.cpp' l='283' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116InjectGpuOffload6injectERKNS0_4StmtE'/>
