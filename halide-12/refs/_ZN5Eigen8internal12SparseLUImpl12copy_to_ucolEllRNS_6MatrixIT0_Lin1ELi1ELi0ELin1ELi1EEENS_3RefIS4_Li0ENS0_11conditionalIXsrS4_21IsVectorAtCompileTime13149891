<dec f='halide/build-apps/eigen/Eigen/src/SparseLU/SparseLUImpl.h' l='54' type='Eigen::Index Eigen::internal::SparseLUImpl::copy_to_ucol(const Eigen::Index jcol, const Eigen::Index nseg, Eigen::internal::SparseLUImpl::IndexVector &amp; segrep, Eigen::internal::SparseLUImpl::BlockIndexVector repfnz, Eigen::internal::SparseLUImpl::IndexVector &amp; perm_r, Eigen::internal::SparseLUImpl::BlockScalarVector dense, Eigen::internal::SparseLUImpl::GlobalLU_t &amp; glu)'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h' l='49' ll='102' type='Eigen::Index Eigen::internal::SparseLUImpl::copy_to_ucol(const Eigen::Index jcol, const Eigen::Index nseg, Eigen::internal::SparseLUImpl::IndexVector &amp; segrep, Eigen::internal::SparseLUImpl::BlockIndexVector repfnz, Eigen::internal::SparseLUImpl::IndexVector &amp; perm_r, Eigen::internal::SparseLUImpl::BlockScalarVector dense, Eigen::internal::SparseLUImpl::GlobalLU_t &amp; glu)'/>
<doc f='halide/build-apps/eigen/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h' l='35'>/**
 * \brief Performs numeric block updates (sup-col) in topological order
 * 
 * \param jcol current column to update
 * \param nseg Number of segments in the U part
 * \param segrep segment representative ...
 * \param repfnz First nonzero column in each row  ...
 * \param perm_r Row permutation 
 * \param dense Store the full representation of the column
 * \param glu Global LU data. 
 * \return 0 - successful return 
 *         &gt; 0 - number of bytes allocated when run out of space
 * 
 */</doc>
