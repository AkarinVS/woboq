<def f='halide/build/_deps/pybind11-src/include/pybind11/detail/class.h' l='122' ll='150' type='int pybind11::detail::pybind11_meta_setattro(PyObject * obj, PyObject * name, PyObject * value)'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/detail/class.h' l='261' u='r' c='_ZN8pybind116detail22make_default_metaclassEv'/>
<doc f='halide/build/_deps/pybind11-src/include/pybind11/detail/class.h' l='118'>/** Types with static properties need to handle `Type.static_prop = x` in a specific way.
    By default, Python replaces the `static_property` itself, but for wrapped C++ types
    we need to call `static_property.__set__()` in order to propagate the new value to
    the underlying C++ data structure. */</doc>
