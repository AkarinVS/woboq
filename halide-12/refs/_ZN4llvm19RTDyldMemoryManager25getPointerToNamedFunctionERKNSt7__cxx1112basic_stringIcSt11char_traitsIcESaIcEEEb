<dec f='halide/llvm-install/include/llvm/ExecutionEngine/RTDyldMemoryManager.h' l='137' type='void * llvm::RTDyldMemoryManager::getPointerToNamedFunction(const std::string &amp; Name, bool AbortOnFailure = true)'/>
<doc f='halide/llvm-install/include/llvm/ExecutionEngine/RTDyldMemoryManager.h' l='128'>/// This method returns the address of the specified function. As such it is
  /// only useful for resolving library symbols, not code generated symbols.
  ///
  /// If \p AbortOnFailure is false and no function with the given name is
  /// found, this function returns a null pointer. Otherwise, it prints a
  /// message to stderr and aborts.
  ///
  /// This function is deprecated for memory managers to be used with
  /// MCJIT or RuntimeDyld.  Use getSymbolAddress instead.</doc>
