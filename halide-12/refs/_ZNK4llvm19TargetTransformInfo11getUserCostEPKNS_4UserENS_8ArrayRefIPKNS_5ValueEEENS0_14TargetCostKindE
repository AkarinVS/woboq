<dec f='halide/llvm-install/include/llvm/Analysis/TargetTransformInfo.h' l='332' type='int llvm::TargetTransformInfo::getUserCost(const llvm::User * U, ArrayRef&lt;const llvm::Value *&gt; Operands, llvm::TargetTransformInfo::TargetCostKind CostKind) const'/>
<use f='halide/llvm-install/include/llvm/Analysis/TargetTransformInfo.h' l='339' u='c' c='_ZNK4llvm19TargetTransformInfo11getUserCostEPKNS_4UserENS0_14TargetCostKindE'/>
<doc f='halide/llvm-install/include/llvm/Analysis/TargetTransformInfo.h' l='319'>/// Estimate the cost of a given IR user when lowered.
  ///
  /// This can estimate the cost of either a ConstantExpr or Instruction when
  /// lowered.
  ///
  /// \p Operands is a list of operands which can be a result of transformations
  /// of the current operands. The number of the operands on the list must equal
  /// to the number of the current operands the IR user has. Their order on the
  /// list must be the same as the order of the current operands the IR user
  /// has.
  ///
  /// The returned cost is defined in terms of \c TargetCostConstants, see its
  /// comments for a detailed explanation of the cost values.</doc>
