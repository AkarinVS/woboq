<dec f='halide/llvm-install/include/llvm/Analysis/TargetTransformInfo.h' l='1194' type='llvm::InstructionCost llvm::TargetTransformInfo::getExtendedAddReductionCost(bool IsMLA, bool IsUnsigned, llvm::Type * ResTy, llvm::VectorType * Ty, TTI::TargetCostKind CostKind = TTI::TCK_RecipThroughput) const'/>
<doc f='halide/llvm-install/include/llvm/Analysis/TargetTransformInfo.h' l='1188'>/// Calculate the cost of an extended reduction pattern, similar to
  /// getArithmeticReductionCost of an Add reduction with an extension and
  /// optional multiply. This is the cost of as:
  /// ResTy vecreduce.add(ext(Ty A)), or if IsMLA flag is set then:
  /// ResTy vecreduce.add(mul(ext(Ty A), ext(Ty B)). The reduction happens
  /// on a VectorType with ResTy elements and Ty lanes.</doc>
