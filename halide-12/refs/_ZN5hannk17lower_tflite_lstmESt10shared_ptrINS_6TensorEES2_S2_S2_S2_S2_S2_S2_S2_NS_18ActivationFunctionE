<dec f='halide/apps/hannk/interpreter/lower.h' l='10' type='hannk::OpPtr hannk::lower_tflite_lstm(hannk::TensorPtr data_input, hannk::TensorPtr prev_activ_input, hannk::TensorPtr weights_input, hannk::TensorPtr biases_input, hannk::TensorPtr prev_state_input, hannk::TensorPtr activ_output, hannk::TensorPtr state_output, hannk::TensorPtr concat_temp, hannk::TensorPtr activ_temp, hannk::ActivationFunction activation = ActivationFunction::None)'/>
<use f='halide/apps/hannk/delegate/hannk_delegate.cpp' l='819' u='c' c='_ZN5hannk12_GLOBAL__N_119HannkDelegateKernel9BuildLstmEP13TfLiteContextP10TfLiteNode'/>
<doc f='halide/apps/hannk/interpreter/lower.h' l='9'>// Implement an LSTM from its constituent parts.</doc>
<def f='halide/apps/hannk/interpreter/lower.cpp' l='11' ll='74' type='hannk::OpPtr hannk::lower_tflite_lstm(hannk::TensorPtr data_input, hannk::TensorPtr prev_activ_input, hannk::TensorPtr weights_input, hannk::TensorPtr biases_input, hannk::TensorPtr prev_state_input, hannk::TensorPtr activ_output, hannk::TensorPtr state_output, hannk::TensorPtr concat_temp, hannk::TensorPtr activ_temp, hannk::ActivationFunction activation = ActivationFunction::None)'/>
<doc f='halide/apps/hannk/interpreter/lower.cpp' l='7'>// Implement an LSTM from its constituent parts. This is extremely specific
// to TFlite&apos;s LSTM op, which according to Benoit Jacob, is deprecated.
// TODO: We could potentially lower this to individual elementwise ops instead,
// and remove the &apos;LstmElementwiseOp&apos; op.</doc>
<use f='halide/apps/hannk/tflite/tflite_parser.cpp' l='400' u='c' c='_ZN5hannk12_GLOBAL__N_16Parser10parse_lstmEPKN6tflite8OperatorE'/>
