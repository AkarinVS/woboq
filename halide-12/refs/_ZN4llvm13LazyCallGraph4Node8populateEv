<def f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='368' ll='373' type='llvm::LazyCallGraph::EdgeSequence &amp; llvm::LazyCallGraph::Node::populate()'/>
<doc f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='356'>/// Populate the edges of this node if necessary.
    ///
    /// The first time this is called it will populate the edges for this node
    /// in the graph. It does this by scanning the underlying function, so once
    /// this is done, any changes to that function must be explicitly reflected
    /// in updates to the graph.
    ///
    /// \returns the populated \c EdgeSequence to simplify walking it.
    ///
    /// This will not update or re-scan anything if called repeatedly. Instead,
    /// the edge sequence is cached and returned immediately on subsequent
    /// calls.</doc>
