<def f='halide/llvm-install/include/llvm/IR/ValueHandle.h' l='414' type='void llvm::CallbackVH::deleted()'/>
<ovr f='halide/llvm-install/include/llvm/IR/ValueMap.h' l='260' c='_ZN4llvm18ValueMapCallbackVH7deletedEv'/>
<doc f='halide/llvm-install/include/llvm/IR/ValueHandle.h' l='403'>/// Callback for Value destruction.
  ///
  /// Called when this-&gt;getValPtr() is destroyed, inside ~Value(), so you
  /// may call any non-virtual Value method on getValPtr(), but no subclass
  /// methods.  If WeakTrackingVH were implemented as a CallbackVH, it would use
  /// this
  /// method to call setValPtr(NULL).  AssertingVH would use this method to
  /// cause an assertion failure.
  ///
  /// All implementations must remove the reference from this object to the
  /// Value that&apos;s being destroyed.</doc>
