<def f='halide/build-apps/abseil-cpp/absl/types/bad_any_cast.h' l='59' ll='63'/>
<use f='halide/build-apps/abseil-cpp/absl/types/bad_any_cast.cc' l='35' c='_ZN4absl14lts_2020_02_2512any_internal15ThrowBadAnyCastEv'/>
<size>8</size>
<doc f='halide/build-apps/abseil-cpp/absl/types/bad_any_cast.h' l='43'>// -----------------------------------------------------------------------------
// bad_any_cast
// -----------------------------------------------------------------------------
//
// An `absl::bad_any_cast` type is an exception type that is thrown when
// failing to successfully cast the return value of an `absl::any` object.
//
// Example:
//
//   auto a = absl::any(65);
//   absl::any_cast&lt;int&gt;(a);         // 65
//   try {
//     absl::any_cast&lt;char&gt;(a);
//   } catch(const absl::bad_any_cast&amp; e) {
//     std::cout &lt;&lt; &quot;Bad any cast: &quot; &lt;&lt; e.what() &lt;&lt; &apos;\n&apos;;
//   }</doc>
<fun r='_ZN4absl14lts_2020_02_2512bad_any_castD1Ev'/>
<fun r='_ZNK4absl14lts_2020_02_2512bad_any_cast4whatEv'/>
<fun r='_ZN4absl14lts_2020_02_2512bad_any_castD1Ev'/>
<fun r='_ZNK4absl14lts_2020_02_2512bad_any_cast4whatEv'/>
