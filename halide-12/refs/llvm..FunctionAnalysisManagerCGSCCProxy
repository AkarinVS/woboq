<inh f='halide/llvm-install/include/llvm/IR/PassManager.h' l='391' c='llvm::AnalysisInfoMixin'/>
<def f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='392' ll='421'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='393'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='418'/>
<size>1</size>
<doc f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='384'>/// A proxy from a \c FunctionAnalysisManager to an \c SCC.
///
/// When a module pass runs and triggers invalidation, both the CGSCC and
/// Function analysis manager proxies on the module get an invalidation event.
/// We don&apos;t want to fully duplicate responsibility for most of the
/// invalidation logic. Instead, this layer is only responsible for SCC-local
/// invalidation events. We work with the module&apos;s FunctionAnalysisManager to
/// invalidate function analyses.</doc>
<fun r='_ZN4llvm33FunctionAnalysisManagerCGSCCProxy3runERNS_13LazyCallGraph3SCCERNS_15AnalysisManagerIS2_JRS1_EEES5_'/>
<smbr r='llvm::FunctionAnalysisManagerCGSCCProxy::Key' t='llvm::AnalysisKey'/>
