<def f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='1494' ll='1501' type='static pybind11::memoryview pybind11::memoryview::from_memory(void * mem, pybind11::ssize_t size, bool readonly = false)'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='1504' u='c' c='_ZN8pybind1110memoryview11from_memoryEPKvl'/>
<doc f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='1481'>/** \rst
        Creates ``memoryview`` from static memory.

        This method is meant for providing a ``memoryview`` for C/C++ buffer not
        managed by Python. The caller is responsible for managing the lifetime
        of ``mem``, which MUST outlive the memoryview constructed here.

        This method is not available in Python 2.

        See also: Python C API documentation for `PyMemoryView_FromBuffer`_.

        .. _PyMemoryView_FromMemory: https://docs.python.org/c-api/memoryview.html#c.PyMemoryView_FromMemory
     \endrst */</doc>
