<def f='halide/llvm-install/include/llvm/IR/Instructions.h' l='2072' ll='2078' type='bool llvm::ShuffleVectorInst::changesLength() const'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='2108' u='c' c='_ZNK4llvm17ShuffleVectorInst14isSingleSourceEv'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='2129' u='c' c='_ZNK4llvm17ShuffleVectorInst10isIdentityEv'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='2170' u='c' c='_ZNK4llvm17ShuffleVectorInst8isSelectEv'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='2190' u='c' c='_ZNK4llvm17ShuffleVectorInst9isReverseEv'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='2212' u='c' c='_ZNK4llvm17ShuffleVectorInst14isZeroEltSplatEv'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='2261' u='c' c='_ZNK4llvm17ShuffleVectorInst11isTransposeEv'/>
<doc f='halide/llvm-install/include/llvm/IR/Instructions.h' l='2068'>/// Return true if this shuffle returns a vector with a different number of
  /// elements than its source vectors.
  /// Examples: shufflevector &lt;4 x n&gt; A, &lt;4 x n&gt; B, &lt;1,2,3&gt;
  ///           shufflevector &lt;4 x n&gt; A, &lt;4 x n&gt; B, &lt;1,2,3,4,5&gt;</doc>
