<def f='halide/build/_deps/pybind11-src/include/pybind11/detail/internals.h' l='315' ll='318' type='type_map&lt;pybind11::detail::type_info *&gt; &amp; pybind11::detail::registered_local_types_cpp()'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/cast.h' l='174' u='c' c='_ZN8pybind116detail19get_local_type_infoERKSt10type_index'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/detail/class.h' l='214' u='c' c='pybind11::detail::pybind11_meta_dealloc'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1113' u='c' c='_ZN8pybind116detail12generic_type10initializeERKNS0_11type_recordE'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1299' u='c' c='_ZN8pybind116class_C1ENS_6handleEPKcDpRKTL0__'/>
<doc f='halide/build/_deps/pybind11-src/include/pybind11/detail/internals.h' l='314'>/// Works like `internals.registered_types_cpp`, but for module-local registered types:</doc>
