<dec f='halide/build-apps/flatbuffers/include/flatbuffers/idl.h' l='801' type='bool flatbuffers::Parser::Parse(const char * _source, const char ** include_paths = nullptr, const char * source_filename = nullptr)'/>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/idl.h' l='790'>// Parse the string containing either schema or JSON data, which will
  // populate the SymbolTable&apos;s or the FlatBufferBuilder above.
  // include_paths is used to resolve any include statements, and typically
  // should at least include the project path (where you loaded source_ from).
  // include_paths must be nullptr terminated if specified.
  // If include_paths is nullptr, it will attempt to load from the current
  // directory.
  // If the source was loaded from a file and isn&apos;t an include file,
  // supply its name in source_filename.
  // All paths specified in this call must be in posix format, if you accept
  // paths from user input, please call PosixPath on them first.</doc>
<use f='halide/build-apps/flatbuffers/src/idl_parser.cpp' l='1466' u='c' c='_ZN11flatbuffers6Parser21ParseNestedFlatbufferERNS_5ValueEPNS_8FieldDefEmPKNS_9StructDefE'/>
<def f='halide/build-apps/flatbuffers/src/idl_parser.cpp' l='2806' ll='2818' type='bool flatbuffers::Parser::Parse(const char * source, const char ** include_paths = nullptr, const char * source_filename = nullptr)'/>
