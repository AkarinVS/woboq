<def f='halide/llvm-install/include/llvm/IR/Instructions.h' l='649' ll='663' type='static llvm::AtomicOrdering llvm::AtomicCmpXchgInst::getStrongestFailureOrdering(llvm::AtomicOrdering SuccessOrdering)'/>
<doc f='halide/llvm-install/include/llvm/IR/Instructions.h' l='642'>/// Returns the strongest permitted ordering on failure, given the
  /// desired ordering on success.
  ///
  /// If the comparison in a cmpxchg operation fails, there is no atomic store
  /// so release semantics cannot be provided. So this function drops explicit
  /// Release requests from the AtomicOrdering. A SequentiallyConsistent
  /// operation would remain SequentiallyConsistent.</doc>
