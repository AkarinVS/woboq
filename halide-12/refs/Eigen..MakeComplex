<def f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFFT.h' l='26' ll='30'/>
<def f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFFT.h' l='32' ll='36'/>
<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFFT.h' l='32'/>
<def f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFFT.h' l='38' ll='42'/>
<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFFT.h' l='38'/>
<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFFT.h' l='221' c='_ZN5Eigen15TensorEvaluatorIKNS_11TensorFFTOpIT_T0_XT2_EXT3_EEET1_E9evalToBufENS_13StorageMemoryINS_8internal11conditionalIXooeqT2_LNS_13FFTResultTypeE8281170'/>
<size>1</size>
<doc f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorFFT.h' l='15'>/** \class TensorFFT
  * \ingroup CXX11_Tensor_Module
  *
  * \brief Tensor FFT class.
  *
  * TODO:
  * Vectorize the Cooley Tukey and the Bluestein algorithm
  * Add support for multithreaded evaluation
  * Improve the performance on GPU
  */</doc>
<fun r='_ZNK5Eigen11MakeComplexclERKTL0__'/>
<fun r='_ZNK5Eigen11MakeComplexILb1EEclERKT_'/>
<fun r='_ZNK5Eigen11MakeComplexILb0EEclERKSt7complexIT_E'/>
