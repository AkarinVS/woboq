<def f='llvm/llvm/include/llvm/CodeGen/WinEHFuncInfo.h' l='46' ll='58'/>
<use f='llvm/llvm/include/llvm/CodeGen/WinEHFuncInfo.h' l='97'/>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/WinException.cpp' l='635' c='_ZN4llvm12WinException22emitSEHActionsForRangeERKNS_13WinEHFuncInfoEPKNS_8MCSymbolES6_i'/>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/WinException.cpp' l='1051' c='_ZN4llvm12WinException22emitExceptHandlerTableEPKNS_15MachineFunctionE'/>
<size>24</size>
<doc f='llvm/llvm/include/llvm/CodeGen/WinEHFuncInfo.h' l='45'>/// Similar to CxxUnwindMapEntry, but supports SEH filters.</doc>
<mbr r='llvm::SEHUnwindMapEntry::ToState' o='0' t='int'/>
<mbr r='llvm::SEHUnwindMapEntry::IsFinally' o='32' t='bool'/>
<mbr r='llvm::SEHUnwindMapEntry::Filter' o='64' t='const llvm::Function *'/>
<mbr r='llvm::SEHUnwindMapEntry::Handler' o='128' t='llvm::MBBOrBasicBlock'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/FunctionLoweringInfo.cpp' l='324' c='_ZN4llvm20FunctionLoweringInfo3setERKNS_8FunctionERNS_15MachineFunctionEPNS_12SelectionDAGE'/>
<size>24</size>
<use f='llvm/llvm/lib/CodeGen/WinEHPrepare.cpp' l='338' c='_ZL12addSEHExceptRN4llvm13WinEHFuncInfoEiPKNS_8FunctionEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/WinEHPrepare.cpp' l='349' c='_ZL13addSEHFinallyRN4llvm13WinEHFuncInfoEiPKNS_10BasicBlockE'/>
<size>24</size>
