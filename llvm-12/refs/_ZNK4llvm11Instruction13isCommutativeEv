<dec f='llvm/llvm/include/llvm/IR/Instruction.h' l='542' type='bool llvm::Instruction::isCommutative() const'/>
<doc f='llvm/llvm/include/llvm/IR/Instruction.h' l='535'>/// Return true if the instruction is commutative:
  ///
  ///   Commutative operators satisfy: (x op y) === (y op x)
  ///
  /// In LLVM, these are the commutative operators, plus SetEQ and SetNE, when
  /// applied to any type.
  ///</doc>
<use f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='622' u='c' c='_ZN4llvm12IRSimilarity21IRSimilarityCandidate16compareStructureERKS1_S3_'/>
<use f='llvm/llvm/lib/Analysis/IVDescriptors.cpp' l='295' u='c' c='_ZN4llvm20RecurrenceDescriptor15AddReductionVarEPNS_7PHINodeENS_9RecurKindEPNS_4LoopEbRS0_PNS_12DemandedBitsEPNS_15AssumptionCacheEPNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='445' u='c' c='_ZL21ThreadBinOpOverSelectN4llvm11Instruction9BinaryOpsEPNS_5ValueES3_RKNS_13SimplifyQueryEj'/>
<use f='llvm/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp' l='909' u='c' c='_ZN12_GLOBAL__N_110VectorInfo22computePolynomialBinOpERN4llvm14BinaryOperatorERNS_10PolynomialE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp' l='516' u='c' c='_ZN4llvm8FastISel14selectBinaryOpEPKNS_4UserEj'/>
<def f='llvm/llvm/lib/IR/Instruction.cpp' l='689' ll='694' type='bool llvm::Instruction::isCommutative() const'/>
<use f='llvm/llvm/lib/IR/Instructions.cpp' l='2594' u='c' c='_ZN4llvm14BinaryOperator12swapOperandsEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.cpp' l='441' u='c' c='_ZN12_GLOBAL__N_129HexagonVectorLoopCarriedReuse16findValueToReuseEv'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='4554' u='c' c='_ZN4llvm16InstCombinerImpl21OptimizeOverflowCheckENS_11Instruction9BinaryOpsEbPNS_5ValueES4_RS1_RS4_RPNS_8ConstantE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineNegator.cpp' l='125' u='c' c='_ZN4llvm7Negator24getSortedOperandsOfBinOpEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='102' u='c' c='_ZL23foldSelectBinOpIdentityRN4llvm10SelectInstERKNS_17TargetLibraryInfoERNS_16InstCombinerImplE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='352' u='c' c='_ZN4llvm16InstCombinerImpl14foldSelectOpOpERNS_10SelectInstEPNS_11InstructionES4_'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='377' u='c' c='_ZN4llvm16InstCombinerImpl32SimplifyAssociativeOrCommutativeERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='439' u='c' c='_ZN4llvm16InstCombinerImpl32SimplifyAssociativeOrCommutativeERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='1601' u='c' c='_ZN4llvm16InstCombinerImpl15foldVectorBinopERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='1708' u='c' c='_ZN4llvm16InstCombinerImpl15foldVectorBinopERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/EarlyCSE.cpp' l='196' u='c' c='_ZL16getHashValueImplN12_GLOBAL__N_111SimpleValueE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/EarlyCSE.cpp' l='314' u='c' c='_ZL11isEqualImplN12_GLOBAL__N_111SimpleValueES0_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='295' u='c' c='_ZN4llvm3GVN10ValueTable10createExprEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp' l='1394' u='c' c='_ZN12_GLOBAL__N_110LoopReroll14DAGRootTracker8validateERNS0_16ReductionTrackerE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/NewGVN.cpp' l='1126' u='c' c='_ZNK12_GLOBAL__N_16NewGVN16createExpressionEPN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Reassociate.cpp' l='2192' u='c' c='_ZN4llvm15ReassociatePass12OptimizeInstEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SpeculateAroundPHIs.cpp' l='273' u='c' c='_ZL39isSafeAndProfitableToSpeculateAroundPHIRN4llvm7PHINodeERNS_13SmallDenseMapIPS0_iLj16ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_iEEEERNS_2254643'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SpeculateAroundPHIs.cpp' l='688' u='c' c='_ZL13speculatePHIsN4llvm8ArrayRefIPNS_7PHINodeEEERNS_15SmallPtrSetImplIPNS_11InstructionEEERNS_14SmallSetVectorIPNS_10BasicBlockELj16EEERNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp' l='365' u='c' c='_ZL32canTransformAccumulatorRecursionPN4llvm11InstructionEPNS_8CallInstE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='244' u='c' c='_ZL13isCommutativePN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='3022' u='c' c='_ZN4llvm13slpvectorizer7BoUpSLP13buildTree_recENS_8ArrayRefIPNS_5ValueEEEjRKNS1_8EdgeInfoE'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='3120' u='c' c='_ZN5polly11ScopBuilder30collectCandidateReductionLoadsEPNS_12MemoryAccessERN4llvm15SmallVectorImplIS2_EE'/>
