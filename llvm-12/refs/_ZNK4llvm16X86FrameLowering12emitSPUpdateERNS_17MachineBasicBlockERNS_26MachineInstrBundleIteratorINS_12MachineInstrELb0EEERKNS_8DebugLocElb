<dec f='llvm/llvm/lib/Target/X86/X86FrameLowering.h' l='140' type='void llvm::X86FrameLowering::emitSPUpdate(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator &amp; MBBI, const llvm::DebugLoc &amp; DL, int64_t NumBytes, bool InEpilogue) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86FrameLowering.h' l='138'>/// Emit a series of instructions to increment / decrement the stack
  /// pointer by a constant value.</doc>
<use f='llvm/llvm/lib/Target/X86/X86ExpandPseudo.cpp' l='218' u='c' c='_ZN12_GLOBAL__N_115X86ExpandPseudo8ExpandMIERN4llvm17MachineBasicBlockENS1_26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEE'/>
<use f='llvm/llvm/lib/Target/X86/X86ExpandPseudo.cpp' l='304' u='c' c='_ZN12_GLOBAL__N_115X86ExpandPseudo8ExpandMIERN4llvm17MachineBasicBlockENS1_26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEE'/>
<use f='llvm/llvm/lib/Target/X86/X86ExpandPseudo.cpp' l='328' u='c' c='_ZN12_GLOBAL__N_115X86ExpandPseudo8ExpandMIERN4llvm17MachineBasicBlockENS1_26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEE'/>
<def f='llvm/llvm/lib/Target/X86/X86FrameLowering.cpp' l='205' ll='313' type='void llvm::X86FrameLowering::emitSPUpdate(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator &amp; MBBI, const llvm::DebugLoc &amp; DL, int64_t NumBytes, bool InEpilogue) const'/>
<use f='llvm/llvm/lib/Target/X86/X86FrameLowering.cpp' l='1346' u='c' c='_ZNK4llvm16X86FrameLowering12emitPrologueERNS_15MachineFunctionERNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/X86/X86FrameLowering.cpp' l='1620' u='c' c='_ZNK4llvm16X86FrameLowering12emitPrologueERNS_15MachineFunctionERNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/X86/X86FrameLowering.cpp' l='2042' u='c' c='_ZNK4llvm16X86FrameLowering12emitEpilogueERNS_15MachineFunctionERNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/X86/X86FrameLowering.cpp' l='2091' u='c' c='_ZNK4llvm16X86FrameLowering12emitEpilogueERNS_15MachineFunctionERNS_17MachineBasicBlockE'/>
<doc f='llvm/llvm/lib/Target/X86/X86FrameLowering.cpp' l='203'>/// emitSPUpdate - Emit a series of instructions to increment / decrement the
/// stack pointer by a constant value.</doc>
