<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2555' type='clang::Parser::TPResult clang::Parser::TryParseSimpleDeclaration(bool AllowForRangeDecl)'/>
<doc f='llvm/clang/include/clang/Parse/Parser.h' l='2548'>// &quot;Tentative parsing&quot; functions, used for disambiguation. If a parsing error
  // is encountered they will return TPResult::Error.
  // Returning TPResult::True/False indicates that the ambiguity was
  // resolved and tentative parsing may stop. TPResult::Ambiguous indicates
  // that more tentative parsing is necessary for disambiguation.
  // They all consume tokens, so backtracking should be used after calling them.</doc>
<use f='llvm/clang/lib/Parse/ParseTentative.cpp' l='137' u='c' c='_ZN5clang6Parser22isCXXSimpleDeclarationEb'/>
<def f='llvm/clang/lib/Parse/ParseTentative.cpp' l='226' ll='250' type='Parser::TPResult clang::Parser::TryParseSimpleDeclaration(bool AllowForRangeDecl)'/>
<doc f='llvm/clang/lib/Parse/ParseTentative.cpp' l='218'>/// simple-declaration:
///   decl-specifier-seq init-declarator-list[opt] &apos;;&apos;
///
/// (if AllowForRangeDecl specified)
/// for ( for-range-declaration : for-range-initializer ) statement
/// for-range-declaration:
///    attribute-specifier-seqopt type-specifier-seq declarator
///</doc>
