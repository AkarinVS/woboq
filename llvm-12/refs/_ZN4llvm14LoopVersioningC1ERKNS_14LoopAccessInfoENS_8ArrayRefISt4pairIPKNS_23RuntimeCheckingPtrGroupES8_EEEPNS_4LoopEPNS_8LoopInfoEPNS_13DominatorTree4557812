<dec f='llvm/llvm/include/llvm/Transforms/Utils/LoopVersioning.h' l='46' type='void llvm::LoopVersioning::LoopVersioning(const llvm::LoopAccessInfo &amp; LAI, ArrayRef&lt;llvm::RuntimePointerCheck&gt; Checks, llvm::Loop * L, llvm::LoopInfo * LI, llvm::DominatorTree * DT, llvm::ScalarEvolution * SE)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/LoopVersioning.h' l='42'>/// Expects LoopAccessInfo, Loop, LoopInfo, DominatorTree as input.
  /// It uses runtime check provided by the user. If \p UseLAIChecks is true,
  /// we will retain the default checks made by LAI. Otherwise, construct an
  /// object having no checks and we expect the user to add them.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopDistribute.cpp' l='818' u='c' c='_ZN12_GLOBAL__N_121LoopDistributeForLoop11processLoopERSt8functionIFRKN4llvm14LoopAccessInfoERNS2_4LoopEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp' l='566' u='c' c='_ZN12_GLOBAL__N_122LoadEliminationForLoop11processLoopEv'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp' l='625' u='c' c='_ZN12_GLOBAL__N_118LoopVersioningLICM9runOnLoopEPN4llvm4LoopEPNS1_8LoopInfoEPNS1_13DominatorTreeE'/>
<def f='llvm/llvm/lib/Transforms/Utils/LoopVersioning.cpp' l='39' ll='48' type='void llvm::LoopVersioning::LoopVersioning(const llvm::LoopAccessInfo &amp; LAI, ArrayRef&lt;llvm::RuntimePointerCheck&gt; Checks, llvm::Loop * L, llvm::LoopInfo * LI, llvm::DominatorTree * DT, llvm::ScalarEvolution * SE)'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopVersioning.cpp' l='280' u='c' c='_ZN12_GLOBAL__N_17runImplEPN4llvm8LoopInfoENS0_12function_refIFRKNS0_14LoopAccessInfoERNS0_4LoopEEEEPNS0_13DominatorTreeEPNS0_15ScalarEvolutionE'/>
