<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='3924' type='void llvm::CallBrInst::CallBrInst(llvm::FunctionType * Ty, llvm::Value * Func, llvm::BasicBlock * DefaultDest, ArrayRef&lt;llvm::BasicBlock *&gt; IndirectDests, ArrayRef&lt;llvm::Value *&gt; Args, ArrayRef&lt;llvm::OperandBundleDef&gt; Bundles, int NumOperands, const llvm::Twine &amp; NameStr, llvm::Instruction * InsertBefore)'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='3965' u='c' c='_ZN4llvm10CallBrInst6CreateEPNS_12FunctionTypeEPNS_5ValueEPNS_10BasicBlockENS_8ArrayRefIS6_EENS7_IS4_EERKNS_5TwineEPNS_11InstructionE'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='3981' u='c' c='_ZN4llvm10CallBrInst6CreateEPNS_12FunctionTypeEPNS_5ValueEPNS_10BasicBlockENS_8ArrayRefIS6_EENS7_IS4_EENS7_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE'/>
<def f='llvm/llvm/include/llvm/IR/Instructions.h' l='4127' ll='4136' type='void llvm::CallBrInst::CallBrInst(llvm::FunctionType * Ty, llvm::Value * Func, llvm::BasicBlock * DefaultDest, ArrayRef&lt;llvm::BasicBlock *&gt; IndirectDests, ArrayRef&lt;llvm::Value *&gt; Args, ArrayRef&lt;llvm::OperandBundleDef&gt; Bundles, int NumOperands, const llvm::Twine &amp; NameStr, llvm::Instruction * InsertBefore)'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='3921'>/// Construct a CallBrInst given a range of arguments.
  ///
  /// Construct a CallBrInst from a range of arguments</doc>
