<dec f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='113' type='void __sanitizer::ThreadRegistry::RunCallbackForEachThreadLocked(__sanitizer::ThreadRegistry::ThreadCallback cb, void * arg)'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='111'>// Invokes callback with a specified arg for each thread context.
  // Should be guarded by ThreadRegistryLock.</doc>
<use f='llvm/compiler-rt/lib/asan/asan_stats.cpp' l='86' u='c' c='__asan::GetAccumulatedStats'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='258' u='c' c='__lsan::ProcessThreadRegistry'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='659' u='c' c='__lsan::ReportUnsuspendedThreads'/>
<use f='llvm/compiler-rt/lib/memprof/memprof_stats.cpp' l='85' u='c' c='__memprof::GetAccumulatedStats'/>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='171' ll='180' type='void __sanitizer::ThreadRegistry::RunCallbackForEachThreadLocked(__sanitizer::ThreadRegistry::ThreadCallback cb, void * arg)'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='430' u='c' c='__tsan::AcquireGlobal'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='486' u='c' c='__tsan::AfterSleep'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_thread.cpp' l='217' u='c' c='__tsan::ThreadFinalize'/>
