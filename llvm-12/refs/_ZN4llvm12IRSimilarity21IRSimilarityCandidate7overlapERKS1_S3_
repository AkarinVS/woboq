<dec f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='560' type='static bool llvm::IRSimilarity::IRSimilarityCandidate::overlap(const llvm::IRSimilarity::IRSimilarityCandidate &amp; A, const llvm::IRSimilarity::IRSimilarityCandidate &amp; B)'/>
<def f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='639' ll='650' type='static bool llvm::IRSimilarity::IRSimilarityCandidate::overlap(const llvm::IRSimilarity::IRSimilarityCandidate &amp; A, const llvm::IRSimilarity::IRSimilarityCandidate &amp; B)'/>
<doc f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='552'>/// Compare the start and end indices of the two IRSimilarityCandidates for
  /// whether they overlap. If the start instruction of one
  /// IRSimilarityCandidate is less than the end instruction of the other, and
  /// the start instruction of one is greater than the start instruction of the
  /// other, they overlap.
  ///
  /// \returns true if the IRSimilarityCandidates do not have overlapping
  /// instructions.</doc>
