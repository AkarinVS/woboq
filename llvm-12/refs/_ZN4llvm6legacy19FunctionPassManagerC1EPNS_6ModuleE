<dec f='llvm/llvm/include/llvm/IR/LegacyPassManager.h' l='71' type='void llvm::legacy::FunctionPassManager::FunctionPassManager(llvm::Module * M)'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='932' u='c' c='_ZN12_GLOBAL__N_118EmitAssemblyHelper12EmitAssemblyEN5clang13BackendActionESt10unique_ptrIN4llvm17raw_pwrite_streamESt14default_deleteIS5_EE'/>
<doc f='llvm/llvm/include/llvm/IR/LegacyPassManager.h' l='69'>/// FunctionPassManager ctor - This initializes the pass manager.  It needs,
  /// but does not take ownership of, the specified Module.</doc>
<use f='llvm/llvm/lib/Analysis/Lint.cpp' l='770' u='c' c='_ZN4llvm12lintFunctionERKNS_8FunctionE'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='4130' u='c' c='LLVMCreateFunctionPassManagerForModule'/>
<def f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1327' ll='1334' type='void llvm::legacy::FunctionPassManager::FunctionPassManager(llvm::Module * m)'/>
<doc f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1323'>//===----------------------------------------------------------------------===//
// FunctionPassManager implementation

/// Create new Function pass manager</doc>
<use f='llvm/llvm/lib/Transforms/Coroutines/CoroCleanup.cpp' l='31' u='c' c='_ZL11simplifyCFGRN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/CoroSplit.cpp' l='1072' u='c' c='_ZL16postSplitCleanupRN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/PlaceSafepoints.cpp' l='508' u='c' c='_ZN12_GLOBAL__N_115PlaceSafepoints13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/tools/bugpoint/bugpoint.cpp' l='108' u='c' c='_ZN12_GLOBAL__N_111AddToDriverC1ERN4llvm9BugDriverE'/>
<use f='llvm/llvm/tools/opt/opt.cpp' l='817' u='c' c='main'/>
<use f='llvm/polly/lib/CodeGen/CodegenCleanup.cpp' l='47' u='c' c='_ZN12_GLOBAL__N_114CodegenCleanup16doInitializationERN4llvm6ModuleE'/>
