<dec f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='807' type='bool llvm::TreePatternNode::isIsomorphicTo(const llvm::TreePatternNode * N, const llvm::MultipleUseVarSet &amp; DepVars) const'/>
<def f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1894' ll='1919' type='bool llvm::TreePatternNode::isIsomorphicTo(const llvm::TreePatternNode * N, const llvm::MultipleUseVarSet &amp; DepVars) const'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1916' u='c' c='_ZNK4llvm15TreePatternNode14isIsomorphicToEPKS0_RKNS_9StringSetINS_15MallocAllocatorEEE'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='4448' u='c' c='_ZL20CombineChildVariantsSt10shared_ptrIN4llvm15TreePatternNodeEERKSt6vectorIS3_IS2_SaIS2_EESaIS5_EERS5_RNS0_18CodeGenDAGPatternsERKNS0_9StringSetINS012661371'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='4710' u='c' c='_ZN4llvm18CodeGenDAGPatterns16GenerateVariantsEv'/>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1887'>/// isIsomorphicTo - Return true if this node is recursively
/// isomorphic to the specified node.  For this comparison, the node&apos;s
/// entire state is considered. The assigned name is ignored, since
/// nodes with differing names are considered isomorphic. However, if
/// the assigned name is present in the dependent variable set, then
/// the assigned name is considered significant and the node is
/// isomorphic if the names match.</doc>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='803'>/// isIsomorphicTo - Return true if this node is recursively isomorphic to
  /// the specified node.  For this comparison, all of the state of the node
  /// is considered, except for the assigned name.  Nodes with differing names
  /// that are otherwise identical are considered isomorphic.</doc>
