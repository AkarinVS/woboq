<def f='llvm/llvm/include/llvm/Analysis/TargetLibraryInfo.h' l='268' ll='277' type='bool llvm::TargetLibraryInfo::areInlineCompatible(const llvm::TargetLibraryInfo &amp; CalleeTLI, bool AllowCallerSuperset) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/TargetLibraryInfo.h' l='264'>/// Determine whether a callee with the given TLI can be inlined into
  /// caller with this TLI, based on &apos;nobuiltin&apos; attributes. When requested,
  /// allow inlining into a caller with a superset of the callee&apos;s nobuiltin
  /// attributes, which is conservatively correct.</doc>
<use f='llvm/llvm/lib/Analysis/InlineCost.cpp' l='2434' u='c' c='_ZL33functionsHaveCompatibleAttributesPN4llvm8FunctionES1_RNS_19TargetTransformInfoERNS_12function_refIFRKNS_17TargetLibraryInfoERS0_EEE'/>
