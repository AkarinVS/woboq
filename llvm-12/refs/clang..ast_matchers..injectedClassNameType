<dec f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='6840' type='const AstTypeMatcher&lt;clang::InjectedClassNameType&gt;'/>
<doc f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='6830'>/// Matches injected class name types.
///
/// Example matches S s, but not S&lt;T&gt; s.
///     (matcher = parmVarDecl(hasType(injectedClassNameType())))
/// \code
///   template &lt;typename T&gt; struct S {
///     void f(S s);
///     void g(S&lt;T&gt; s);
///   };
/// \endcode</doc>
<def f='llvm/clang/lib/ASTMatchers/ASTMatchersInternal.cpp' l='1038' type='const AstTypeMatcher&lt;clang::InjectedClassNameType&gt;'/>
<use f='llvm/clang/lib/ASTMatchers/Dynamic/Registry.cpp' l='358' u='r' c='_ZN5clang12ast_matchers7dynamic12_GLOBAL__N_112RegistryMapsC1Ev'/>
<use f='llvm/clang/unittests/ASTMatchers/ASTMatchersTraversalTest.cpp' l='190' u='m' c='_ZN5clang12ast_matchers33TypeMatcher_MatchesDeclTypes_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/ASTMatchers/ASTMatchersTraversalTest.cpp' l='194' u='m' c='_ZN5clang12ast_matchers33TypeMatcher_MatchesDeclTypes_Test8TestBodyEv'/>
