<dec f='llvm/llvm/include/llvm-c/LLJIT.h' l='106' type='LLVMErrorRef LLVMOrcCreateLLJIT(LLVMOrcLLJITRef * Result, LLVMOrcLLJITBuilderRef Builder)'/>
<use f='llvm/llvm/examples/OrcV2Examples/OrcV2CBindingsAddObjectFile/OrcV2CBindingsAddObjectFile.c' l='72' u='c' c='main'/>
<doc f='llvm/llvm/include/llvm-c/LLJIT.h' l='92'>/**
 * Create an LLJIT instance from an LLJITBuilder.
 *
 * This operation takes ownership of the Builder argument: clients should not
 * dispose of the builder after calling this function (even if the function
 * returns an error). If a null Builder argument is provided then a
 * default-constructed LLJITBuilder will be used.
 *
 * On success the resulting LLJIT instance is uniquely owned by the client and
 * automatically manages the memory of all JIT&apos;d code and all modules that are
 * transferred to it (e.g. via LLVMOrcLLJITAddLLVMIRModule). Disposing of the
 * LLJIT instance will free all memory managed by the JIT, including JIT&apos;d code
 * and not-yet compiled modules.
 */</doc>
<use f='llvm/llvm/examples/OrcV2Examples/OrcV2CBindingsBasicUsage/OrcV2CBindingsBasicUsage.c' l='86' u='c' c='main'/>
<use f='llvm/llvm/examples/OrcV2Examples/OrcV2CBindingsReflectProcessSymbols/OrcV2CBindingsReflectProcessSymbols.c' l='131' u='c' c='main'/>
<use f='llvm/llvm/examples/OrcV2Examples/OrcV2CBindingsRemovableCode/OrcV2CBindingsRemovableCode.c' l='86' u='c' c='main'/>
<def f='llvm/llvm/lib/ExecutionEngine/Orc/OrcV2CBindings.cpp' l='424' ll='441' type='LLVMErrorRef LLVMOrcCreateLLJIT(LLVMOrcLLJITRef * Result, LLVMOrcLLJITBuilderRef Builder)'/>
