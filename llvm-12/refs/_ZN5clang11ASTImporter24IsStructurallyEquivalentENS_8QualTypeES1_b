<dec f='llvm/clang/include/clang/AST/ASTImporter.h' l='605' type='bool clang::ASTImporter::IsStructurallyEquivalent(clang::QualType From, clang::QualType To, bool Complain = true)'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='2466' u='c' c='_ZN5clang15ASTNodeImporter20VisitTypedefNameDeclEPNS_15TypedefNameDeclEb'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='3587' u='c' c='_ZN5clang15ASTNodeImporter14VisitFieldDeclEPNS_9FieldDeclE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='3668' u='c' c='_ZN5clang15ASTNodeImporter22VisitIndirectFieldDeclEPNS_17IndirectFieldDeclE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='3785' u='c' c='_ZN5clang15ASTNodeImporter15VisitFriendDeclEPNS_10FriendDeclE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='3865' u='c' c='_ZN5clang15ASTNodeImporter17VisitObjCIvarDeclEPNS_12ObjCIvarDeclE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='3938' u='c' c='_ZN5clang15ASTNodeImporter12VisitVarDeclEPNS_7VarDeclE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='4151' u='c' c='_ZN5clang15ASTNodeImporter19VisitObjCMethodDeclEPNS_14ObjCMethodDeclE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='4179' u='c' c='_ZN5clang15ASTNodeImporter19VisitObjCMethodDeclEPNS_14ObjCMethodDeclE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='5064' u='c' c='_ZN5clang15ASTNodeImporter21VisitObjCPropertyDeclEPNS_16ObjCPropertyDeclE'/>
<def f='llvm/clang/lib/AST/ASTImporter.cpp' l='9317' ll='9334' type='bool clang::ASTImporter::IsStructurallyEquivalent(clang::QualType From, clang::QualType To, bool Complain = true)'/>
<doc f='llvm/clang/include/clang/AST/ASTImporter.h' l='603'>/// Determine whether the given types are structurally
    /// equivalent.</doc>
