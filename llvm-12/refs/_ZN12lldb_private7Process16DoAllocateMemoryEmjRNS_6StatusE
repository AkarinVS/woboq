<def f='llvm/lldb/include/lldb/Target/Process.h' l='1638' ll='1644' type='lldb::addr_t lldb_private::Process::DoAllocateMemory(size_t size, uint32_t permissions, lldb_private::Status &amp; error)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='1625'>/// Actually allocate memory in the process.
  ///
  /// This function will allocate memory in the process&apos;s address space.  This
  /// can&apos;t rely on the generic function calling mechanism, since that
  /// requires this function.
  ///
  /// \param[in] size
  ///     The size of the allocation requested.
  ///
  /// \return
  ///     The address of the allocated buffer in the process, or
  ///     LLDB_INVALID_ADDRESS if the allocation failed.</doc>
<ovr f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='2962' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote16DoAllocateMemoryEmjRNS_6StatusE'/>
<use f='llvm/lldb/source/Target/Memory.cpp' l='352' u='c' c='_ZN12lldb_private20AllocatedMemoryCache12AllocatePageEjjjRNS_6StatusE'/>
