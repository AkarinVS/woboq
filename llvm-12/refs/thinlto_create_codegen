<dec f='llvm/llvm/include/llvm-c/lto.h' l='661' type='thinlto_code_gen_t thinlto_create_codegen()'/>
<doc f='llvm/llvm/include/llvm-c/lto.h' l='649'>/**
 * Instantiates a ThinLTO code generator.
 * Returns NULL on error (check lto_get_error_message() for details).
 *
 *
 * The ThinLTOCodeGenerator is not intended to be reuse for multiple
 * compilation: the model is that the client adds modules to the generator and
 * ask to perform the ThinLTO optimizations / codegen, and finally destroys the
 * codegenerator.
 *
 * \since LTO_API_VERSION=18
 */</doc>
<def f='llvm/llvm/tools/lto/lto.cpp' l='494' ll='521' type='thinlto_code_gen_t thinlto_create_codegen()'/>
<doc f='llvm/llvm/tools/lto/lto.cpp' l='492'>// ThinLTO API below</doc>
