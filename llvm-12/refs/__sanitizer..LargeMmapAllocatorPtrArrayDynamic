<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_allocator_secondary.h' l='32' ll='58'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_allocator_secondary.h' l='63'/>
<size>40</size>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_allocator_secondary.h' l='28'>// Much less restricted LargeMmapAllocator chunks list (comparing to
// PtrArrayStatic). Backed by mmaped memory region and can hold up to 1M chunks.
// ReservedAddressRange was used instead of just MAP_NORESERVE to achieve the
// same functionality in Fuchsia case, which does not support MAP_NORESERVE.</doc>
<fun r='__sanitizer::LargeMmapAllocatorPtrArrayDynamic::Init'/>
<fun r='__sanitizer::LargeMmapAllocatorPtrArrayDynamic::EnsureSpace'/>
<smbr r='__sanitizer::LargeMmapAllocatorPtrArrayDynamic::kMaxNumChunks' t='const int'/>
<smbr r='__sanitizer::LargeMmapAllocatorPtrArrayDynamic::kChunksBlockCount' t='const int'/>
<mbr r='__sanitizer::LargeMmapAllocatorPtrArrayDynamic::address_range_' o='0' t='__sanitizer::ReservedAddressRange'/>
<mbr r='__sanitizer::LargeMmapAllocatorPtrArrayDynamic::n_reserved_' o='256' t='__sanitizer::uptr'/>
