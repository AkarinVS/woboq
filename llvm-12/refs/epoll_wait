<dec f='include/sys/epoll.h' l='123' type='int epoll_wait(int __epfd, struct epoll_event * __events, int __maxevents, int __timeout)'/>
<use f='llvm/clang/lib/DirectoryWatcher/linux/DirectoryWatcher-linux.cpp' l='218' u='a' c='_ZN12_GLOBAL__N_121DirectoryWatcherLinux18InotifyPollingLoopEv'/>
<doc f='include/sys/epoll.h' l='113'>/* Wait for events on an epoll instance &quot;epfd&quot;. Returns the number of
   triggered events returned in &quot;events&quot; buffer. Or -1 in case of
   error with the &quot;errno&quot; variable set to the specific error code. The
   &quot;events&quot; parameter is a buffer that will contain triggered
   events. The &quot;maxevents&quot; is the maximum number of events to be
   returned ( usually size of &quot;events&quot; ). The &quot;timeout&quot; parameter
   specifies the maximum wait time in milliseconds (-1 == infinite).

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<use f='llvm/compiler-rt/lib/dfsan/dfsan_custom.cpp' l='750' u='c' c='__dfsw_epoll_wait'/>
<def f='llvm/compiler-rt/lib/msan/msan_interceptors.cpp' l='840' macro='1' type='int epoll_wait(int epfd, void * events, int maxevents, int timeout)'/>
<use f='llvm/compiler-rt/lib/msan/msan_interceptors.cpp' l='849' u='a' c='__msan::InitializeInterceptors'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='1866' macro='1' type='int epoll_wait(int epfd, void * ev, int cnt, int timeout)'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='1891' u='a' c='__tsan::InitializeInterceptors'/>
