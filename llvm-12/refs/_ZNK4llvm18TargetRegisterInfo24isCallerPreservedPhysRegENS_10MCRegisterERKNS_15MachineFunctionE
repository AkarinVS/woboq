<def f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='529' ll='532' type='bool llvm::TargetRegisterInfo::isCallerPreservedPhysReg(llvm::MCRegister PhysReg, const llvm::MachineFunction &amp; MF) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='524'>/// Physical registers that may be modified within a function but are
  /// guaranteed to be restored before any uses. This is useful for targets that
  /// have call sequences where a GOT register may be updated by the caller
  /// prior to a call and is guaranteed to be restored (also by the caller)
  /// after the call.</doc>
<use f='llvm/llvm/lib/CodeGen/MachineCSE.cpp' l='269' u='c' c='_ZL31isCallerPreservedOrConstPhysRegN4llvm10MCRegisterERKNS_15MachineFunctionERKNS_18TargetRegisterInfoE'/>
<use f='llvm/llvm/lib/CodeGen/MachineLICM.cpp' l='1003' u='c' c='_ZL16isInvariantStoreRKN4llvm12MachineInstrEPKNS_18TargetRegisterInfoEPKNS_19MachineRegisterInfoE'/>
<use f='llvm/llvm/lib/CodeGen/MachineLICM.cpp' l='1033' u='c' c='_ZL27isCopyFeedingInvariantStoreRKN4llvm12MachineInstrEPKNS_19MachineRegisterInfoEPKNS_18TargetRegisterInfoE'/>
<use f='llvm/llvm/lib/CodeGen/MachineLoopInfo.cpp' l='175' u='c' c='_ZNK4llvm11MachineLoop15isLoopInvariantERNS_12MachineInstrE'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp' l='388' c='_ZNK4llvm15PPCRegisterInfo24isCallerPreservedPhysRegENS_10MCRegisterERKNS_15MachineFunctionE'/>
