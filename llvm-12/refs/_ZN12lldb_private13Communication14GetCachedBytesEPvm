<dec f='llvm/lldb/include/lldb/Core/Communication.h' l='359' type='size_t lldb_private::Communication::GetCachedBytes(void * dst, size_t dst_len)'/>
<doc f='llvm/lldb/include/lldb/Core/Communication.h' l='344'>/// Get any available bytes from our data cache. If this call empties the
  /// data cache, the \b eBroadcastBitReadThreadGotBytes event will be reset
  /// to signify no more bytes are available.
  ///
  /// \param[in] dst
  ///     A destination buffer that must be at least \a dst_len bytes
  ///     long.
  ///
  /// \param[in] dst_len
  ///     The number of bytes to attempt to read from the cache,
  ///     and also the max number of bytes that can be placed into
  ///     \a dst.
  ///
  /// \return
  ///     The number of bytes extracted from the data cache.</doc>
<use f='llvm/lldb/source/Core/Communication.cpp' l='136' u='c' c='_ZN12lldb_private13Communication4ReadEPvmRKNS_7TimeoutISt5ratioILl1ELl1000000EEEERN4lldb16ConnectionStatusEPNS_6StatusE'/>
<use f='llvm/lldb/source/Core/Communication.cpp' l='156' u='c' c='_ZN12lldb_private13Communication4ReadEPvmRKNS_7TimeoutISt5ratioILl1ELl1000000EEEERN4lldb16ConnectionStatusEPNS_6StatusE'/>
<def f='llvm/lldb/source/Core/Communication.cpp' l='252' ll='268' type='size_t lldb_private::Communication::GetCachedBytes(void * dst, size_t dst_len)'/>
