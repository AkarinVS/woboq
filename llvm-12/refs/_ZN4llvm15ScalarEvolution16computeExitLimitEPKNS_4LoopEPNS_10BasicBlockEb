<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1616' type='llvm::ScalarEvolution::ExitLimit llvm::ScalarEvolution::computeExitLimit(const llvm::Loop * L, llvm::BasicBlock * ExitingBlock, bool AllowPredicates = false)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1612'>/// Compute the number of times the backedge of the specified loop will
  /// execute if it exits via the specified block. If AllowPredicates is set,
  /// this call will try to use a minimal set of SCEV predicates in order to
  /// return an exact answer.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7394' u='c' c='_ZN4llvm15ScalarEvolution25computeBackedgeTakenCountEPKNS_4LoopEb'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7445' ll='7483' type='ScalarEvolution::ExitLimit llvm::ScalarEvolution::computeExitLimit(const llvm::Loop * L, llvm::BasicBlock * ExitingBlock, bool AllowPredicates = false)'/>
