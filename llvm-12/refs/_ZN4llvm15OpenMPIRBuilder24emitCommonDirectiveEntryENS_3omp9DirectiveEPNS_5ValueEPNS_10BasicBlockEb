<dec f='llvm/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h' l='642' type='llvm::OpenMPIRBuilder::InsertPointTy llvm::OpenMPIRBuilder::emitCommonDirectiveEntry(omp::Directive OMPD, llvm::Value * EntryCall, llvm::BasicBlock * ExitBB, bool Conditional = false)'/>
<doc f='llvm/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h' l='630'>/// Common interface for generating entry calls for OMP Directives.
  /// if the directive has a region/body, It will set the insertion
  /// point to the body
  ///
  /// \param OMPD Directive to generate entry blocks for
  /// \param EntryCall Call to the entry OMP Runtime Function
  /// \param ExitBB block where the region ends.
  /// \param Conditional indicate if the entry call result will be used
  ///        to evaluate a conditional of whether a thread will execute
  ///        body code or not.
  ///
  /// \return The insertion position in exit block</doc>
<use f='llvm/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp' l='1521' u='c' c='_ZN4llvm15OpenMPIRBuilder20EmitOMPInlinedRegionENS_3omp9DirectiveEPNS_11InstructionES4_NS_12function_refIFvNS_13IRBuilderBase11InsertPointES7_RNS_10Ba6252308'/>
<def f='llvm/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp' l='1571' ll='1600' type='OpenMPIRBuilder::InsertPointTy llvm::OpenMPIRBuilder::emitCommonDirectiveEntry(llvm::omp::Directive OMPD, llvm::Value * EntryCall, llvm::BasicBlock * ExitBB, bool Conditional = false)'/>
