<dec f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='1298' type='void llvm::CodeGenDAGPatterns::FindPatternInputsAndOutputs(llvm::TreePattern &amp; I, llvm::TreePatternNodePtr Pat, std::map&lt;std::string, TreePatternNodePtr&gt; &amp; InstInputs, MapVector&lt;std::string, llvm::TreePatternNodePtr, std::map&lt;std::string, unsigned int&gt; &gt; &amp; InstResults, std::vector&lt;Record *&gt; &amp; InstImpResults)'/>
<def f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='3334' ll='3436' type='void llvm::CodeGenDAGPatterns::FindPatternInputsAndOutputs(llvm::TreePattern &amp; I, llvm::TreePatternNodePtr Pat, std::map&lt;std::string, TreePatternNodePtr&gt; &amp; InstInputs, MapVector&lt;std::string, llvm::TreePatternNodePtr, std::map&lt;std::string, unsigned int&gt; &gt; &amp; InstResults, std::vector&lt;Record *&gt; &amp; InstImpResults)'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='3378' u='c' c='_ZN4llvm18CodeGenDAGPatterns27FindPatternInputsAndOutputsERNS_11TreePatternESt10shared_ptrINS_15TreePatternNodeEERSt3mapINSt7__cxx1112basic_stringIcSt12880361'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='3434' u='c' c='_ZN4llvm18CodeGenDAGPatterns27FindPatternInputsAndOutputsERNS_11TreePatternESt10shared_ptrINS_15TreePatternNodeEERSt3mapINSt7__cxx1112basic_stringIcSt12880361'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='3685' u='c' c='_ZN4llvm18CodeGenDAGPatterns23parseInstructionPatternERNS_18CodeGenInstructionEPNS_8ListInitERSt3mapIPNS_6RecordENS_14DAGInstructionENS_14LessRecordBy12820534'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='4266' u='c' c='_ZN4llvm18CodeGenDAGPatterns13ParsePatternsEv'/>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='3331'>/// FindPatternInputsAndOutputs - Scan the specified TreePatternNode (which is
/// part of &quot;I&quot;, the instruction), computing the set of inputs and outputs of
/// the pattern.  Report errors if we see anything naughty.</doc>
