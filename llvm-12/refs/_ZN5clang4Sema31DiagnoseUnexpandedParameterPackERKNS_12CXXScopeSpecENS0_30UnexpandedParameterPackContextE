<dec f='llvm/clang/include/clang/Sema/Sema.h' l='8037' type='bool clang::Sema::DiagnoseUnexpandedParameterPack(const clang::CXXScopeSpec &amp; SS, clang::Sema::UnexpandedParameterPackContext UPPC)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='8030'>/// If the given nested-name-specifier contains an unexpanded
  /// parameter pack, diagnose the error.
  ///
  /// \param SS The nested-name-specifier that is being checked for
  /// unexpanded parameter packs.
  ///
  /// \returns true if an error occurred, false otherwise.</doc>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='5717' u='c' c='_ZN5clang4Sema16HandleDeclaratorEPNS_5ScopeERNS_10DeclaratorEN4llvm15MutableArrayRefIPNS_21TemplateParameterListEEE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='11539' u='c' c='_ZN5clang4Sema21ActOnUsingDeclarationEPNS_5ScopeENS_15AccessSpecifierENS_14SourceLocationES4_RNS_12CXXScopeSpecERNS_13UnqualifiedIdES4_RKNS_20ParsedAttributesViewE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='16462' u='c' c='_ZN5clang4Sema23ActOnFriendFunctionDeclEPNS_5ScopeERNS_10DeclaratorEN4llvm15MutableArrayRefIPNS_21TemplateParameterListEEE'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='8516' u='c' c='_ZN5clang4Sema28CheckMicrosoftIfExistsSymbolEPNS_5ScopeENS_14SourceLocationEbRNS_12CXXScopeSpecERNS_13UnqualifiedIdE'/>
<def f='llvm/clang/lib/Sema/SemaTemplateVariadic.cpp' l='434' ll='449' type='bool clang::Sema::DiagnoseUnexpandedParameterPack(const clang::CXXScopeSpec &amp; SS, clang::Sema::UnexpandedParameterPackContext UPPC)'/>
