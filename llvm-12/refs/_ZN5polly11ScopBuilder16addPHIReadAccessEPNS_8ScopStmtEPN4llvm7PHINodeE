<dec f='llvm/polly/include/polly/ScopBuilder.h' l='642' type='void polly::ScopBuilder::addPHIReadAccess(polly::ScopStmt * PHIStmt, llvm::PHINode * PHI)'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='1116' u='c' c='_ZN5polly11ScopBuilder16buildPHIAccessesEPNS_8ScopStmtEPN4llvm7PHINodeEPNS3_6RegionEb'/>
<def f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='2634' ll='2638' type='void polly::ScopBuilder::addPHIReadAccess(polly::ScopStmt * PHIStmt, llvm::PHINode * PHI)'/>
<doc f='llvm/polly/include/polly/ScopBuilder.h' l='630'>/// Create a MemoryAccess for reading the value of a phi.
  ///
  /// The modeling assumes that all incoming blocks write their incoming value
  /// to the same location. Thus, this access will read the incoming block&apos;s
  /// value as instructed by this @p PHI.
  ///
  /// @param PHIStmt Statement @p PHI resides in.
  /// @param PHI     PHINode under consideration; the READ access will be added
  ///                here.
  ///
  /// @see ensurePHIWrite()
  /// @see MemoryKind</doc>
