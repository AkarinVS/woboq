<use f='llvm/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h' l='476' c='_ZN4llvm23MemoryDependenceResults27getNonLocalPointerDepFromBBEPNS_11InstructionERKNS_12PHITransAddrERKNS_14MemoryLocationEbPNS_10BasicBlockERNS_15Sma8294299'/>
<def f='llvm/llvm/include/llvm/Analysis/PHITransAddr.h' l='35' ll='122'/>
<use f='llvm/llvm/include/llvm/Analysis/MemorySSA.h' l='1235' c='_ZN4llvm20upward_defs_iterator17fillInCurrentPairEv'/>
<size>80</size>
<doc f='llvm/llvm/include/llvm/Analysis/PHITransAddr.h' l='25'>/// PHITransAddr - An address value which tracks and handles phi translation.
/// As we walk &quot;up&quot; the CFG through predecessors, we need to ensure that the
/// address we&apos;re tracking is kept up to date.  For example, if we&apos;re analyzing
/// an address of &quot;&amp;A[i]&quot; and walk through the definition of &apos;i&apos; which is a PHI
/// node, we *must* phi translate i to get &quot;&amp;A[j]&quot; or else we will analyze an
/// incorrect pointer in the predecessor block.
///
/// This is designed to be a relatively small object that lives on the stack and
/// is copyable.
///</doc>
<mbr r='llvm::PHITransAddr::Addr' o='0' t='llvm::Value *'/>
<mbr r='llvm::PHITransAddr::DL' o='64' t='const llvm::DataLayout &amp;'/>
<mbr r='llvm::PHITransAddr::TLI' o='128' t='const llvm::TargetLibraryInfo *'/>
<mbr r='llvm::PHITransAddr::AC' o='192' t='llvm::AssumptionCache *'/>
<mbr r='llvm::PHITransAddr::InstInputs' o='256' t='SmallVector&lt;llvm::Instruction *, 4&gt;'/>
<fun r='_ZN4llvm12PHITransAddrC1EPNS_5ValueERKNS_10DataLayoutEPNS_15AssumptionCacheE'/>
<fun r='_ZNK4llvm12PHITransAddr7getAddrEv'/>
<fun r='_ZNK4llvm12PHITransAddr28NeedsPHITranslationFromBlockEPNS_10BasicBlockE'/>
<fun r='_ZNK4llvm12PHITransAddr28IsPotentiallyPHITranslatableEv'/>
<fun r='_ZN4llvm12PHITransAddr17PHITranslateValueEPNS_10BasicBlockES2_PKNS_13DominatorTreeEb'/>
<fun r='_ZN4llvm12PHITransAddr25PHITranslateWithInsertionEPNS_10BasicBlockES2_RKNS_13DominatorTreeERNS_15SmallVectorImplIPNS_11InstructionEEE'/>
<fun r='_ZNK4llvm12PHITransAddr4dumpEv'/>
<fun r='_ZNK4llvm12PHITransAddr6VerifyEv'/>
<fun r='_ZN4llvm12PHITransAddr19PHITranslateSubExprEPNS_5ValueEPNS_10BasicBlockES4_PKNS_13DominatorTreeE'/>
<fun r='_ZN4llvm12PHITransAddr26InsertPHITranslatedSubExprEPNS_5ValueEPNS_10BasicBlockES4_RKNS_13DominatorTreeERNS_15SmallVectorImplIPNS_11InstructionEEE'/>
<fun r='_ZN4llvm12PHITransAddr10AddAsInputEPNS_5ValueE'/>
<use f='llvm/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp' l='889' c='_ZN4llvm23MemoryDependenceResults28getNonLocalPointerDependencyEPNS_11InstructionERNS_15SmallVectorImplINS_17NonLocalDepResultEEE'/>
<use f='llvm/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp' l='1041' c='_ZN4llvm23MemoryDependenceResults27getNonLocalPointerDepFromBBEPNS_11InstructionERKNS_12PHITransAddrERKNS_14MemoryLocationEbPNS_10BasicBlockERNS_15Sma8294299'/>
<use f='llvm/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp' l='1194' c='_ZN4llvm23MemoryDependenceResults27getNonLocalPointerDepFromBBEPNS_11InstructionERKNS_12PHITransAddrERKNS_14MemoryLocationEbPNS_10BasicBlockERNS_15Sma8294299'/>
<use f='llvm/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp' l='1311' c='_ZN4llvm23MemoryDependenceResults27getNonLocalPointerDepFromBBEPNS_11InstructionERKNS_12PHITransAddrERKNS_14MemoryLocationEbPNS_10BasicBlockERNS_15Sma8294299'/>
<use f='llvm/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp' l='1352' c='_ZN4llvm23MemoryDependenceResults27getNonLocalPointerDepFromBBEPNS_11InstructionERKNS_12PHITransAddrERKNS_14MemoryLocationEbPNS_10BasicBlockERNS_15Sma8294299'/>
<size>80</size>
<use f='llvm/llvm/lib/Analysis/PHITransAddr.cpp' l='370' c='_ZN4llvm12PHITransAddr26InsertPHITranslatedSubExprEPNS_5ValueEPNS_10BasicBlockES4_RKNS_13DominatorTreeERNS_15SmallVectorImplIPNS_11InstructionEEE'/>
<size>80</size>
<fun r='_ZNK4llvm12PHITransAddr6VerifyEv'/>
<fun r='_ZNK4llvm12PHITransAddr28IsPotentiallyPHITranslatableEv'/>
<fun r='_ZN4llvm12PHITransAddr19PHITranslateSubExprEPNS_5ValueEPNS_10BasicBlockES4_PKNS_13DominatorTreeE'/>
<fun r='_ZN4llvm12PHITransAddr17PHITranslateValueEPNS_10BasicBlockES2_PKNS_13DominatorTreeEb'/>
<fun r='_ZN4llvm12PHITransAddr25PHITranslateWithInsertionEPNS_10BasicBlockES2_RKNS_13DominatorTreeERNS_15SmallVectorImplIPNS_11InstructionEEE'/>
<fun r='_ZN4llvm12PHITransAddr26InsertPHITranslatedSubExprEPNS_5ValueEPNS_10BasicBlockES4_RKNS_13DominatorTreeERNS_15SmallVectorImplIPNS_11InstructionEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp' l='730' c='_ZL26memoryIsNotModifiedBetweenPN4llvm11InstructionES1_RT_RKNS_10DataLayoutEPNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp' l='746' c='_ZL26memoryIsNotModifiedBetweenPN4llvm11InstructionES1_RT_RKNS_10DataLayoutEPNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp' l='753' c='_ZL26memoryIsNotModifiedBetweenPN4llvm11InstructionES1_RT_RKNS_10DataLayoutEPNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp' l='780' c='_ZL26memoryIsNotModifiedBetweenPN4llvm11InstructionES1_RT_RKNS_10DataLayoutEPNS_13DominatorTreeE'/>
<size>80</size>
<use f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='1298' c='_ZN4llvm3GVN14PerformLoadPREEPNS_8LoadInstERNS_11SmallVectorINS_3gvn21AvailableValueInBlockELj64EEERNS3_IPNS_10BasicBlockELj64EEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='1309' c='_ZN4llvm3GVN14PerformLoadPREEPNS_8LoadInstERNS_11SmallVectorINS_3gvn21AvailableValueInBlockELj64EEERNS3_IPNS_10BasicBlockELj64EEE'/>
<size>80</size>
