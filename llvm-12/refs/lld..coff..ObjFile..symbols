<use f='llvm/lld/COFF/InputFiles.h' l='139' u='w' c='_ZN3lld4coff7ObjFileC1EN4llvm15MemoryBufferRefEOSt6vectorIPNS0_6SymbolESaIS6_EE'/>
<use f='llvm/lld/COFF/InputFiles.h' l='149' u='r' c='_ZN3lld4coff7ObjFile10getSymbolsEv'/>
<use f='llvm/lld/COFF/InputFiles.h' l='151' u='a' c='_ZN3lld4coff7ObjFile17getMutableSymbolsEv'/>
<use f='llvm/lld/COFF/InputFiles.h' l='158' u='m' c='_ZN3lld4coff7ObjFile9getSymbolEj'/>
<use f='llvm/lld/COFF/InputFiles.h' l='167' u='m' c='_ZN3lld4coff7ObjFile19addRangeThunkSymbolEPNS0_6SymbolE'/>
<use f='llvm/lld/COFF/InputFiles.h' l='168' u='m' c='_ZN3lld4coff7ObjFile19addRangeThunkSymbolEPNS0_6SymbolE'/>
<dec f='llvm/lld/COFF/InputFiles.h' l='300' type='std::vector&lt;Symbol *&gt;'/>
<offset>2560</offset>
<doc f='llvm/lld/COFF/InputFiles.h' l='296'>// This vector contains a list of all symbols defined or referenced by this
  // file. They are indexed such that you can get a Symbol by symbol
  // index. Nonexistent indices (which are occupied by auxiliary
  // symbols in the real symbol table) are filled with null pointers.</doc>
<use f='llvm/lld/COFF/InputFiles.cpp' l='407' u='m' c='_ZN3lld4coff7ObjFile17initializeSymbolsEv'/>
<use f='llvm/lld/COFF/InputFiles.cpp' l='421' u='m' c='_ZN3lld4coff7ObjFile17initializeSymbolsEv'/>
<use f='llvm/lld/COFF/InputFiles.cpp' l='423' u='m' c='_ZN3lld4coff7ObjFile17initializeSymbolsEv'/>
<use f='llvm/lld/COFF/InputFiles.cpp' l='425' u='m' c='_ZN3lld4coff7ObjFile17initializeSymbolsEv'/>
<use f='llvm/lld/COFF/InputFiles.cpp' l='428' u='m' c='_ZN3lld4coff7ObjFile17initializeSymbolsEv'/>
<use f='llvm/lld/COFF/InputFiles.cpp' l='459' u='m' c='_ZN3lld4coff7ObjFile17initializeSymbolsEv'/>
<use f='llvm/lld/COFF/InputFiles.cpp' l='465' u='m' c='_ZN3lld4coff7ObjFile17initializeSymbolsEv'/>
