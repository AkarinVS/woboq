<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h' l='383' type='void clang::ento::ExprEngine::processCallExit(clang::ento::ExplodedNode * Pred)'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h' l='381'>/// Generate the sequence of nodes that simulate the call exit and the post
  /// visit for CallExpr.</doc>
<use f='llvm/clang/lib/StaticAnalyzer/Core/CoreEngine.cpp' l='174' u='c' c='_ZN5clang4ento10CoreEngine16dispatchWorkItemEPNS0_12ExplodedNodeENS_12ProgramPointERKNS0_12WorkListUnitE'/>
<def f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='205' ll='365' type='void clang::ento::ExprEngine::processCallExit(clang::ento::ExplodedNode * CEBNode)'/>
<doc f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='197'>/// The call exit is simulated with a sequence of nodes, which occur between
/// CallExitBegin and CallExitEnd. The following operations occur between the
/// two program points:
/// 1. CallExitBegin (triggers the start of call exit sequence)
/// 2. Bind the return value
/// 3. Run Remove dead bindings to clean up the dead symbols from the callee.
/// 4. CallExitEnd (switch to the caller context)
/// 5. PostStmt&lt;CallExpr&gt;</doc>
