<dec f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderMacOSXDYLD.h' l='147' type='bool DynamicLoaderMacOSXDYLD::InitializeFromAllImageInfos()'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderMacOSXDYLD.cpp' l='276' u='c' c='_ZN23DynamicLoaderMacOSXDYLD48ReadDYLDInfoFromMemoryAndSetNotificationCallbackEm'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderMacOSXDYLD.cpp' l='337' u='c' c='_ZN23DynamicLoaderMacOSXDYLD19NotifyBreakpointHitEPvPN12lldb_private24StoppointCallbackContextEmm'/>
<def f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderMacOSXDYLD.cpp' l='696' ll='750' type='bool DynamicLoaderMacOSXDYLD::InitializeFromAllImageInfos()'/>
<doc f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderMacOSXDYLD.cpp' l='692'>// If we have found where the &quot;_dyld_all_image_infos&quot; lives in memory, read the
// current info from it, and then update all image load addresses (or lack
// thereof).  Only do this if this is the first time we&apos;re reading the dyld
// infos.  Return true if we actually read anything, and false otherwise.</doc>
<doc f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderMacOSXDYLD.h' l='133'>// There is a little tricky bit where you might initially attach while dyld is
  // updating
  // the all_image_infos, and you can&apos;t read the infos, so you have to continue
  // and pick it
  // up when you hit the update breakpoint.  At that point, you need to run this
  // initialize
  // function, but when you do it that way you DON&apos;T need to do the extra work
  // you would at
  // the breakpoint.
  // So this function will only do actual work if the image infos haven&apos;t been
  // read yet.
  // If it does do any work, then it will return true, and false otherwise.
  // That way you can
  // call it in the breakpoint action, and if it returns true you&apos;re done.</doc>
