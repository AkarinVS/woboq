<def f='llvm/polly/include/polly/Support/GICHelper.h' l='86' ll='89' type='isl::val polly::valFromAPInt(isl_ctx * Ctx, const llvm::APInt Int, bool IsSigned)'/>
<doc f='llvm/polly/include/polly/Support/GICHelper.h' l='57'>/// Translate an llvm::APInt to an isl::val.
///
/// Translate the bitsequence without sign information as provided by APInt into
/// a signed isl::val type. Depending on the value of @p IsSigned @p Int is
/// interpreted as unsigned value or as signed value in two&apos;s complement
/// representation.
///
/// Input IsSigned                 Output
///
///     0        0           -&gt;    0
///     1        0           -&gt;    1
///    00        0           -&gt;    0
///    01        0           -&gt;    1
///    10        0           -&gt;    2
///    11        0           -&gt;    3
///
///     0        1           -&gt;    0
///     1        1           -&gt;   -1
///    00        1           -&gt;    0
///    01        1           -&gt;    1
///    10        1           -&gt;   -2
///    11        1           -&gt;   -1
///
/// @param Ctx      The isl_ctx to create the isl::val in.
/// @param Int      The integer value to translate.
/// @param IsSigned If the APInt should be interpreted as signed or unsigned
///                 value.
///
/// @return The isl::val corresponding to @p Int.</doc>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='179' u='c' c='_ZL19addRangeBoundsToSetN3isl12noexceptions3setERKN4llvm13ConstantRangeEiNS0_3dimE'/>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='181' u='c' c='_ZL19addRangeBoundsToSetN3isl12noexceptions3setERKN4llvm13ConstantRangeEiNS0_3dimE'/>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='193' u='c' c='_ZL19addRangeBoundsToSetN3isl12noexceptions3setERKN4llvm13ConstantRangeEiNS0_3dimE'/>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='196' u='c' c='_ZL19addRangeBoundsToSetN3isl12noexceptions3setERKN4llvm13ConstantRangeEiNS0_3dimE'/>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='441' u='c' c='_ZN5polly12MemoryAccess22wrapConstantDimensionsEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='91' u='c' c='_ZN12_GLOBAL__N_122Isl_APIntToIslVal_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='97' u='c' c='_ZN12_GLOBAL__N_122Isl_APIntToIslVal_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='103' u='c' c='_ZN12_GLOBAL__N_122Isl_APIntToIslVal_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='109' u='c' c='_ZN12_GLOBAL__N_122Isl_APIntToIslVal_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='115' u='c' c='_ZN12_GLOBAL__N_122Isl_APIntToIslVal_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='122' u='c' c='_ZN12_GLOBAL__N_122Isl_APIntToIslVal_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='128' u='c' c='_ZN12_GLOBAL__N_122Isl_APIntToIslVal_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='134' u='c' c='_ZN12_GLOBAL__N_122Isl_APIntToIslVal_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='140' u='c' c='_ZN12_GLOBAL__N_122Isl_APIntToIslVal_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='146' u='c' c='_ZN12_GLOBAL__N_122Isl_APIntToIslVal_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='154' u='c' c='_ZN12_GLOBAL__N_122Isl_APIntToIslVal_Test8TestBodyEv'/>
