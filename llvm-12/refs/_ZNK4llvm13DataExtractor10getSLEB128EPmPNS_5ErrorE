<dec f='llvm/llvm/include/llvm/Support/DataExtractor.h' l='611' type='int64_t llvm::DataExtractor::getSLEB128(uint64_t * OffsetPtr, llvm::Error * Err = nullptr) const'/>
<use f='llvm/llvm/include/llvm/Support/DataExtractor.h' l='616' u='c' c='_ZNK4llvm13DataExtractor10getSLEB128ERNS0_6CursorE'/>
<doc f='llvm/llvm/include/llvm/Support/DataExtractor.h' l='589'>/// Extract a signed LEB128 value from \a *offset_ptr.
  ///
  /// Extracts an signed LEB128 number from this object&apos;s data
  /// starting at the offset pointed to by \a offset_ptr. The offset
  /// pointed to by \a offset_ptr will be updated with the offset of
  /// the byte following the last extracted byte.
  ///
  /// @param[in,out] OffsetPtr
  ///     A pointer to an offset within the data that will be advanced
  ///     by the appropriate number of bytes if the value is extracted
  ///     correctly. If the offset is out of bounds or there are not
  ///     enough bytes to extract this value, the offset will be left
  ///     unmodified.
  ///
  /// @param[in,out] Err
  ///     A pointer to an Error object. Upon return the Error object is set to
  ///     indicate the result (success/failure) of the function. If the Error
  ///     object is already set when calling this function, no extraction is
  ///     performed.
  ///
  /// @return
  ///     The extracted signed integer value.</doc>
<use f='llvm/llvm/lib/DebugInfo/DWARF/DWARFAbbreviationDeclaration.cpp' l='68' u='c' c='_ZN4llvm28DWARFAbbreviationDeclaration7extractENS_13DataExtractorEPm'/>
<use f='llvm/llvm/lib/DebugInfo/DWARF/DWARFDataExtractor.cpp' l='94' u='c' c='_ZNK4llvm18DWARFDataExtractor17getEncodedPointerEPmhm'/>
<use f='llvm/llvm/lib/DebugInfo/DWARF/DWARFDebugFrame.cpp' l='447' u='c' c='_ZN4llvm15DWARFDebugFrame5parseENS_18DWARFDataExtractorE'/>
<use f='llvm/llvm/lib/DebugInfo/DWARF/DWARFExpression.cpp' l='167' u='c' c='_ZN4llvm15DWARFExpression9Operation7extractENS_13DataExtractorEhmNS_8OptionalINS_5dwarf11DwarfFormatEEE'/>
<use f='llvm/llvm/lib/DebugInfo/DWARF/DWARFFormValue.cpp' l='180' u='c' c='_ZN4llvm14DWARFFormValue9skipValueENS_5dwarf4FormENS_13DataExtractorEPmNS1_10FormParamsE'/>
<use f='llvm/llvm/lib/DebugInfo/DWARF/DWARFFormValue.cpp' l='313' u='c' c='_ZN4llvm14DWARFFormValue12extractValueERKNS_18DWARFDataExtractorEPmNS_5dwarf10FormParamsEPKNS_12DWARFContextEPKNS_9DWARFUnitE'/>
<use f='llvm/llvm/lib/DebugInfo/GSYM/LineTable.cpp' l='60' u='c' c='_ZL5parseRN4llvm13DataExtractorEmRKSt8functionIFbRKNS_4gsym9LineEntryEEE'/>
<use f='llvm/llvm/lib/DebugInfo/GSYM/LineTable.cpp' l='64' u='c' c='_ZL5parseRN4llvm13DataExtractorEmRKSt8functionIFbRKNS_4gsym9LineEntryEEE'/>
<use f='llvm/llvm/lib/DebugInfo/GSYM/LineTable.cpp' l='103' u='c' c='_ZL5parseRN4llvm13DataExtractorEmRKSt8functionIFbRKNS_4gsym9LineEntryEEE'/>
<def f='llvm/llvm/lib/Support/DataExtractor.cpp' l='225' ll='227' type='int64_t llvm::DataExtractor::getSLEB128(uint64_t * offset_ptr, llvm::Error * Err = nullptr) const'/>
<use f='llvm/llvm/tools/obj2yaml/dwarf2yaml.cpp' l='443' u='c' c='_Z14dumpDebugLinesRN4llvm12DWARFContextERNS_9DWARFYAML4DataE'/>
<use f='llvm/llvm/unittests/DebugInfo/GSYM/GSYMTest.cpp' l='725' u='c' c='_ZL20TestFileWriterHelperN4llvm7support10endiannessE'/>
<use f='llvm/llvm/unittests/DebugInfo/GSYM/GSYMTest.cpp' l='725' u='c' c='_ZL20TestFileWriterHelperN4llvm7support10endiannessE'/>
<use f='llvm/llvm/unittests/DebugInfo/GSYM/GSYMTest.cpp' l='726' u='c' c='_ZL20TestFileWriterHelperN4llvm7support10endiannessE'/>
<use f='llvm/llvm/unittests/DebugInfo/GSYM/GSYMTest.cpp' l='726' u='c' c='_ZL20TestFileWriterHelperN4llvm7support10endiannessE'/>
<use f='llvm/llvm/unittests/Support/DataExtractorTest.cpp' l='117' u='c' c='_ZN12_GLOBAL__N_129DataExtractorTest_LEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/DataExtractorTest.cpp' l='125' u='c' c='_ZN12_GLOBAL__N_129DataExtractorTest_LEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/DataExtractorTest.cpp' l='136' u='c' c='_ZN12_GLOBAL__N_135DataExtractorTest_LEB128_error_Test8TestBodyEv'/>
