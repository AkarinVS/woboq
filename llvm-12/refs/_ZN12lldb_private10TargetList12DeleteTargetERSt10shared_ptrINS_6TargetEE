<dec f='llvm/lldb/include/lldb/Target/TargetList.h' l='110' type='bool lldb_private::TargetList::DeleteTarget(lldb::TargetSP &amp; target_sp)'/>
<doc f='llvm/lldb/include/lldb/Target/TargetList.h' l='96'>/// Delete a Target object from the list.
  ///
  /// When clients are done with the Target objects, this function
  /// should be called to release the memory associated with a target
  /// object.
  ///
  /// \param[in] target_sp
  ///     The shared pointer to a target.
  ///
  /// \return
  ///     Returns \b true if the target was successfully removed from
  ///     from this target list, \b false otherwise. The client will
  ///     be left with the last remaining shared pointer to the target
  ///     in \a target_sp which can then be properly released.</doc>
<use f='llvm/lldb/source/API/SBDebugger.cpp' l='887' u='c' c='_ZN4lldb10SBDebugger12DeleteTargetERNS_8SBTargetE'/>
<use f='llvm/lldb/source/Commands/CommandObjectTarget.cpp' l='329' u='c' c='_ZN25CommandObjectTargetCreate9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Commands/CommandObjectTarget.cpp' l='631' u='c' c='_ZN25CommandObjectTargetDelete9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<def f='llvm/lldb/source/Target/TargetList.cpp' l='405' ll='413' type='bool lldb_private::TargetList::DeleteTarget(lldb::TargetSP &amp; target_sp)'/>
<use f='llvm/lldb/source/Target/TraceSessionFileParser.cpp' l='159' u='c' c='_ZN12lldb_private22TraceSessionFileParser22ParseCommonSessionFileERKNS0_20JSONTraceSessionBaseE'/>
