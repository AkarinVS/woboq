<dec f='llvm/lldb/include/lldb/Host/Host.h' l='222' type='static lldb_private::Status lldb_private::Host::RunShellCommand(llvm::StringRef shell, llvm::StringRef command, const lldb_private::FileSpec &amp; working_dir, int * status_ptr, int * signo_ptr, std::string * command_output, const Timeout&lt;std::micro&gt; &amp; timeout, bool run_in_shell = true, bool hide_stderr = false)'/>
<doc f='llvm/lldb/include/lldb/Host/Host.h' l='213'>/// Run a shell command.
  /// \arg shell  Pass an empty string if you want to use the default shell
  /// interpreter \arg command \arg working_dir  Pass empty FileSpec to use the
  /// current working directory \arg status_ptr   Pass NULL if you don&apos;t want
  /// the process exit status \arg signo_ptr    Pass NULL if you don&apos;t want the
  /// signal that caused
  ///                   the process to exit
  /// \arg command_output  Pass NULL if you don&apos;t want the command output
  /// \arg hide_stderr  If this is \b false, redirect stderr to stdout</doc>
<def f='llvm/lldb/source/Host/common/Host.cpp' l='480' ll='489' type='static lldb_private::Status lldb_private::Host::RunShellCommand(llvm::StringRef shell_path, llvm::StringRef command, const lldb_private::FileSpec &amp; working_dir, int * status_ptr, int * signo_ptr, std::string * command_output_ptr, const Timeout&lt;std::micro&gt; &amp; timeout, bool run_in_shell = true, bool hide_stderr = false)'/>
<use f='llvm/lldb/source/Target/Platform.cpp' l='1345' u='c' c='_ZN12lldb_private8Platform15RunShellCommandEN4llvm9StringRefES2_RKNS_8FileSpecEPiS6_PNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_7Timeout8212946'/>
<use f='llvm/lldb/source/Target/RemoteAwarePlatform.cpp' l='186' u='c' c='_ZN12lldb_private19RemoteAwarePlatform15RunShellCommandEN4llvm9StringRefES2_RKNS_8FileSpecEPiS6_PNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEER8178611'/>
