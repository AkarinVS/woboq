<dec f='llvm/lldb/source/Plugins/Process/Linux/NativeRegisterContextLinux.h' l='26' type='static std::unique_ptr&lt;NativeRegisterContextLinux&gt; lldb_private::process_linux::NativeRegisterContextLinux::CreateHostNativeRegisterContextLinux(const lldb_private::ArchSpec &amp; target_arch, lldb_private::NativeThreadProtocol &amp; native_thread)'/>
<doc f='llvm/lldb/source/Plugins/Process/Linux/NativeRegisterContextLinux.h' l='21'>// This function is implemented in the NativeRegisterContextLinux_* subclasses
  // to create a new instance of the host specific NativeRegisterContextLinux.
  // The implementations can&apos;t collide as only one NativeRegisterContextLinux_*
  // variant should be compiled into the final executable.</doc>
<def f='llvm/lldb/source/Plugins/Process/Linux/NativeRegisterContextLinux_x86_64.cpp' l='251' ll='256' type='static std::unique_ptr&lt;NativeRegisterContextLinux&gt; lldb_private::process_linux::NativeRegisterContextLinux::CreateHostNativeRegisterContextLinux(const lldb_private::ArchSpec &amp; target_arch, lldb_private::NativeThreadProtocol &amp; native_thread)'/>
<use f='llvm/lldb/source/Plugins/Process/Linux/NativeThreadLinux.cpp' l='92' u='c' c='_ZN12lldb_private13process_linux17NativeThreadLinuxC1ERNS0_18NativeProcessLinuxEm'/>
