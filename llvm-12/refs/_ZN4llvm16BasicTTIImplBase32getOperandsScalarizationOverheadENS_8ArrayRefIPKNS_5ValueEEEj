<def f='llvm/llvm/include/llvm/CodeGen/BasicTTIImpl.h' l='615' ll='642' type='unsigned int llvm::BasicTTIImplBase::getOperandsScalarizationOverhead(ArrayRef&lt;const llvm::Value *&gt; Args, unsigned int VF)'/>
<use f='llvm/llvm/include/llvm/CodeGen/BasicTTIImpl.h' l='652' u='c' c='_ZN4llvm16BasicTTIImplBase24getScalarizationOverheadEPNS_10VectorTypeENS_8ArrayRefIPKNS_5ValueEEE'/>
<use f='llvm/llvm/include/llvm/CodeGen/BasicTTIImpl.h' l='1372' u='c' c='_ZN4llvm16BasicTTIImplBase21getIntrinsicInstrCostERKNS_23IntrinsicCostAttributesENS_19TargetTransformInfo14TargetCostKindE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/BasicTTIImpl.h' l='612'>/// Estimate the overhead of scalarizing an instruction&apos;s unique
  /// non-constant operands. The types of the arguments are ordinarily
  /// scalar, in which case the costs are multiplied with VF.</doc>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp' l='763' u='c' c='_ZN4llvm10GCNTTIImpl21getIntrinsicInstrCostERKNS_23IntrinsicCostAttributesENS_19TargetTransformInfo14TargetCostKindE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonTargetTransformInfo.cpp' l='119' u='c' c='_ZN4llvm14HexagonTTIImpl32getOperandsScalarizationOverheadENS_8ArrayRefIPKNS_5ValueEEEj'/>
