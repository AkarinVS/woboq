<use f='llvm/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h' l='337'/>
<inh f='llvm/llvm/include/llvm/IR/PassManager.h' l='374' c='llvm::PassInfoMixin'/>
<def f='llvm/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h' l='399' ll='434'/>
<use f='llvm/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h' l='400'/>
<use f='llvm/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h' l='442' c='_ZN4llvm31createFunctionToLoopPassAdaptorET_bbb'/>
<use f='llvm/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h' l='449' c='_ZN4llvm31createFunctionToLoopPassAdaptorET_bbb'/>
<use f='llvm/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h' l='458' c='_ZN4llvm31createFunctionToLoopPassAdaptorET_bbb'/>
<use f='llvm/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h' l='468' c='_ZN4llvm31createFunctionToLoopPassAdaptorET_bbb'/>
<use f='llvm/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h' l='476' c='_ZN4llvm31createFunctionToLoopPassAdaptorET_bbb'/>
<use f='llvm/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h' l='488' c='_ZN4llvm31createFunctionToLoopPassAdaptorET_bbb'/>
<size>48</size>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h' l='383'>/// Adaptor that maps from a function to its loops.
///
/// Designed to allow composition of a LoopPass(Manager) and a
/// FunctionPassManager. Note that if this pass is constructed with a \c
/// FunctionAnalysisManager it will run the \c LoopAnalysisManagerFunctionProxy
/// analysis prior to running the loop passes over the function to enable a \c
/// LoopAnalysisManager to be used within this run safely.
///
/// The adaptor comes with two modes: the loop mode and the loop-nest mode, and
/// the worklist updater lived inside will be in the same mode as the adaptor
/// (refer to the documentation of \c LPMUpdater for more detailed explanation).
/// Specifically, in loop mode, all loops in the funciton will be pushed into
/// the worklist and processed by \p Pass, while only top-level loops are
/// processed in loop-nest mode. Please refer to the various specializations of
/// \fn createLoopFunctionToLoopPassAdaptor to see when loop mode and loop-nest
/// mode are used.</doc>
<fun r='_ZN4llvm25FunctionToLoopPassAdaptorC1ESt10unique_ptrINS_6detail11PassConceptINS_4LoopENS_15AnalysisManagerIS4_JRNS_27LoopStandardAnalysisResultsEEEEJS6836190'/>
<fun r='_ZN4llvm25FunctionToLoopPassAdaptor3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<fun r='_ZN4llvm25FunctionToLoopPassAdaptor10isRequiredEv'/>
<fun r='_ZNK4llvm25FunctionToLoopPassAdaptor14isLoopNestModeEv'/>
<mbr r='llvm::FunctionToLoopPassAdaptor::Pass' o='0' t='std::unique_ptr&lt;PassConceptT&gt;'/>
<mbr r='llvm::FunctionToLoopPassAdaptor::LoopCanonicalizationFPM' o='64' t='llvm::FunctionPassManager'/>
<mbr r='llvm::FunctionToLoopPassAdaptor::UseMemorySSA' o='320' t='bool'/>
<mbr r='llvm::FunctionToLoopPassAdaptor::UseBlockFrequencyInfo' o='328' t='bool'/>
<mbr r='llvm::FunctionToLoopPassAdaptor::LoopNestMode' o='336' t='const bool'/>
