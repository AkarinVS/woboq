<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1111' ll='1113' type='bool llvm::TargetInstrInfo::isAssociativeAndCommutative(const llvm::MachineInstr &amp; Inst) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1110'>/// Return true when \P Inst is both associative and commutative.</doc>
<use f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='743' u='c' c='_ZNK4llvm15TargetInstrInfo22hasReassociableSiblingERKNS_12MachineInstrERb'/>
<use f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='754' u='c' c='_ZNK4llvm15TargetInstrInfo24isReassociationCandidateERKNS_12MachineInstrERb'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='4219' c='_ZNK4llvm16AArch64InstrInfo27isAssociativeAndCommutativeERKNS_12MachineInstrE'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='252' c='_ZNK4llvm12PPCInstrInfo27isAssociativeAndCommutativeERKNS_12MachineInstrE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='8063' c='_ZNK4llvm12X86InstrInfo27isAssociativeAndCommutativeERKNS_12MachineInstrE'/>
