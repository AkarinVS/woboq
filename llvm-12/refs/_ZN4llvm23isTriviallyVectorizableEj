<dec f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='320' type='bool llvm::isTriviallyVectorizable(Intrinsic::ID ID)'/>
<doc f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='316'>/// Identify if the intrinsic is trivially vectorizable.
/// This method returns true if the intrinsic&apos;s argument types are all scalars
/// for the scalar form of the intrinsic and all vectors (or scalars handled by
/// hasVectorInstrinsicScalarOpd) for the vector form of the intrinsic.</doc>
<def f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='44' ll='96' type='bool llvm::isTriviallyVectorizable(Intrinsic::ID ID)'/>
<use f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='126' u='c' c='_ZN4llvm27getVectorIntrinsicIDForCallEPKNS_8CallInstEPKNS_17TargetLibraryInfoE'/>
<doc f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='40'>/// Return true if all of the intrinsic&apos;s arguments and return type are scalars
/// for the scalar form of the intrinsic, and vectors for the vector form of the
/// intrinsic (except operands that are marked as always being scalar by
/// hasVectorInstrinsicScalarOpd).</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalarizer.cpp' l='507' u='c' c='_ZL22isTriviallyScalariablej'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='3194' u='c' c='_ZN4llvm13slpvectorizer7BoUpSLP13buildTree_recENS_8ArrayRefIPNS_5ValueEEEjRKNS1_8EdgeInfoE'/>
