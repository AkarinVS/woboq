<def f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h' l='125' ll='136' type='static unsigned int llvm::InstCombiner::getComplexity(llvm::Value * V)'/>
<doc f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h' l='108'>/// Assign a complexity or rank value to LLVM Values. This is used to reduce
  /// the amount of pattern matching needed for compares and commutative
  /// instructions. For example, if we have:
  ///   icmp ugt X, Constant
  /// or
  ///   xor (add X, Constant), cast Z
  ///
  /// We do not have to consider the commuted variants of these patterns because
  /// canonicalization based on complexity guarantees the above ordering.
  ///
  /// This routine maps IR values to various complexity ranks:
  ///   0 -&gt; undef
  ///   1 -&gt; Constants
  ///   2 -&gt; Other non-instructions
  ///   3 -&gt; Arguments
  ///   4 -&gt; Cast and (f)neg/not instructions
  ///   5 -&gt; Other instructions</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='5538' u='c' c='_ZN4llvm16InstCombinerImpl13visitICmpInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='5539' u='c' c='_ZN4llvm16InstCombinerImpl13visitICmpInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='6127' u='c' c='_ZN4llvm16InstCombinerImpl13visitFCmpInstERNS_8FCmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='6127' u='c' c='_ZN4llvm16InstCombinerImpl13visitFCmpInstERNS_8FCmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineNegator.cpp' l='125' u='c' c='_ZN4llvm7Negator24getSortedOperandsOfBinOpEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineNegator.cpp' l='126' u='c' c='_ZN4llvm7Negator24getSortedOperandsOfBinOpEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='377' u='c' c='_ZN4llvm16InstCombinerImpl32SimplifyAssociativeOrCommutativeERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='378' u='c' c='_ZN4llvm16InstCombinerImpl32SimplifyAssociativeOrCommutativeERNS_14BinaryOperatorE'/>
