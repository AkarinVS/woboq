<dec f='llvm/lldb/include/lldb/Utility/UUID.h' l='102' type='static llvm::StringRef lldb_private::UUID::DecodeUUIDBytesFromString(llvm::StringRef str, llvm::SmallVectorImpl&lt;uint8_t&gt; &amp; uuid_bytes)'/>
<doc f='llvm/lldb/include/lldb/Utility/UUID.h' l='89'>/// Decode as many UUID bytes as possible from the C string \a cstr.
  ///
  /// \param[in] str
  ///     An llvm::StringRef that points at a UUID string value (no leading
  ///     spaces). The string must contain only hex characters and optionally
  ///     can contain the &apos;-&apos; sepearators.
  ///
  /// \param[in] uuid_bytes
  ///     A buffer of bytes that will contain a full or partially decoded UUID.
  ///
  /// \return
  ///     The original string, with all decoded bytes removed.</doc>
<use f='llvm/lldb/source/Interpreter/OptionValueUUID.cpp' l='73' u='c' c='_ZN12lldb_private15OptionValueUUID12AutoCompleteERNS_18CommandInterpreterERNS_17CompletionRequestE'/>
<def f='llvm/lldb/source/Utility/UUID.cpp' l='72' ll='94' type='static llvm::StringRef lldb_private::UUID::DecodeUUIDBytesFromString(llvm::StringRef p, llvm::SmallVectorImpl&lt;uint8_t&gt; &amp; uuid_bytes)'/>
<use f='llvm/lldb/source/Utility/UUID.cpp' l='103' u='c' c='_ZN12lldb_private4UUID16SetFromStringRefEN4llvm9StringRefE'/>
