<dec f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='350' type='unsigned int llvm::IRSimilarity::IRInstructionMapper::mapToLegalUnsigned(BasicBlock::iterator &amp; It, std::vector&lt;unsigned int&gt; &amp; IntegerMappingForBB, std::vector&lt;IRInstructionData *&gt; &amp; InstrListForBB)'/>
<use f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='166' u='c' c='_ZN4llvm12IRSimilarity19IRInstructionMapper20convertToUnsignedVecERNS_10BasicBlockERSt6vectorIPNS0_17IRInstructionDataESaIS6_EERS4_IjSaIjEE'/>
<def f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='188' ll='230' type='unsigned int llvm::IRSimilarity::IRInstructionMapper::mapToLegalUnsigned(BasicBlock::iterator &amp; It, std::vector&lt;unsigned int&gt; &amp; IntegerMappingForBB, std::vector&lt;IRInstructionData *&gt; &amp; InstrListForBB)'/>
<doc f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='186'>// TODO: This is the same as the MachineOutliner, and should be consolidated
// into the same interface.</doc>
<doc f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='343'>/// Maps an Instruction to a legal integer.
  ///
  /// \param [in] It - The Instruction to be mapped to an integer.
  /// \param [in,out] IntegerMappingForBB - Vector of unsigned integers to
  /// append to.
  /// \param [in,out] InstrListForBB - Vector of InstructionData to append to.
  /// \returns The integer \p It was mapped to.</doc>
