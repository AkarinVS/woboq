<dec f='llvm/llvm/lib/Target/RISCV/MCTargetDesc/RISCVAsmBackend.h' l='64' type='bool llvm::RISCVAsmBackend::shouldInsertFixupForCodeAlign(llvm::MCAssembler &amp; Asm, const llvm::MCAsmLayout &amp; Layout, llvm::MCAlignFragment &amp; AF)'/>
<doc f='llvm/llvm/lib/Target/RISCV/MCTargetDesc/RISCVAsmBackend.h' l='63'>// Insert target specific fixup type for alignment directive in code section.</doc>
<inh f='llvm/llvm/include/llvm/MC/MCAsmBackend.h' l='107' c='_ZN4llvm12MCAsmBackend29shouldInsertFixupForCodeAlignERNS_11MCAssemblerERKNS_11MCAsmLayoutERNS_15MCAlignFragmentE'/>
<def f='llvm/llvm/lib/Target/RISCV/MCTargetDesc/RISCVAsmBackend.cpp' l='436' ll='462' type='bool llvm::RISCVAsmBackend::shouldInsertFixupForCodeAlign(llvm::MCAssembler &amp; Asm, const llvm::MCAsmLayout &amp; Layout, llvm::MCAlignFragment &amp; AF)'/>
<doc f='llvm/llvm/lib/Target/RISCV/MCTargetDesc/RISCVAsmBackend.cpp' l='431'>// We need to insert R_RISCV_ALIGN relocation type to indicate the
// position of Nops and the total bytes of the Nops have been inserted
// when linker relaxation enabled.
// The function insert fixup_riscv_align fixup which eventually will
// transfer to R_RISCV_ALIGN relocation type.</doc>
