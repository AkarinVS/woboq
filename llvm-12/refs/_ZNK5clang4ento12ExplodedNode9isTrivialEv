<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExplodedGraph.h' l='270' type='bool clang::ento::ExplodedNode::isTrivial() const'/>
<use f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExplodedGraph.h' l='521' u='c' c='_ZN4llvm11GraphTraitsIPN5clang4ento13ExplodedGraphEE20predecessorOfTrivialEPNS2_12ExplodedNodeE'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExplodedGraph.h' l='265'>/// The node is trivial if it has only one successor, only one predecessor,
  /// it&apos;s predecessor has only one successor,
  /// and its program state is the same as the program state of the previous
  /// node.
  /// Trivial nodes may be skipped while printing exploded graph.</doc>
<def f='llvm/clang/lib/StaticAnalyzer/Core/ExplodedGraph.cpp' l='285' ll='289' type='bool clang::ento::ExplodedNode::isTrivial() const'/>
