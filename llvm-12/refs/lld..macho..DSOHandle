<inh f='llvm/lld/MachO/Symbols.h' l='35' c='lld::macho::Symbol'/>
<def f='llvm/lld/MachO/Symbols.h' l='235' ll='253'/>
<use f='llvm/lld/MachO/Symbols.h' l='261'/>
<use f='llvm/lld/MachO/Symbols.h' l='261'/>
<size>48</size>
<doc f='llvm/lld/MachO/Symbols.h' l='224'>// The Itanium C++ ABI requires dylibs to pass a pointer to __cxa_atexit which
// does e.g. cleanup of static global variables. The ABI document says that the
// pointer can point to any address in one of the dylib&apos;s segments, but in
// practice ld64 seems to set it to point to the header, so that&apos;s what&apos;s
// implemented here.
//
// The ARM C++ ABI uses __dso_handle similarly, but I (int3) have not yet
// tested this on an ARM platform.
//
// DSOHandle effectively functions like a Defined symbol, but it doesn&apos;t belong
// to an InputSection.</doc>
<fun r='_ZN3lld5macho9DSOHandleC1EPKNS0_17MachHeaderSectionE'/>
<mbr r='lld::macho::DSOHandle::header' o='320' t='const lld::macho::MachHeaderSection *'/>
<fun r='_ZNK3lld5macho9DSOHandle5getVAEv'/>
<fun r='_ZNK3lld5macho9DSOHandle13getFileOffsetEv'/>
<fun r='_ZNK3lld5macho9DSOHandle9isWeakDefEv'/>
<fun r='_ZNK3lld5macho9DSOHandle5isTlvEv'/>
<smbr r='lld::macho::DSOHandle::name' t='const llvm::StringRef'/>
<fun r='_ZN3lld5macho9DSOHandle7classofEPKNS0_6SymbolE'/>
<use f='llvm/lld/MachO/SymbolTable.cpp' l='161' c='_ZN3lld5macho11SymbolTable12addDSOHandleEPKNS0_17MachHeaderSectionE'/>
<size>48</size>
<use f='llvm/lld/MachO/SyntheticSections.cpp' l='383' c='_ZN3lld5macho24addNonLazyBindingEntriesEPKNS0_6SymbolEN4llvm12PointerUnionIJPKNS0_12InputSectionEPKNS0_13OutputSectionEEEEml'/>
<size>48</size>
