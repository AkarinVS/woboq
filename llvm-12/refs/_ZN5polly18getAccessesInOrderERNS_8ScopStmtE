<dec f='llvm/polly/include/polly/Simplify.h' l='138' type='llvm::SmallVector&lt;MemoryAccess *, 32&gt; polly::getAccessesInOrder(polly::ScopStmt &amp; Stmt)'/>
<doc f='llvm/polly/include/polly/Simplify.h' l='124'>/// Return a vector that contains MemoryAccesses in the order in
/// which they are executed.
///
/// The order is:
/// - Implicit reads (BlockGenerator::generateScalarLoads)
/// - Explicit reads and writes (BlockGenerator::generateArrayLoad,
///   BlockGenerator::generateArrayStore)
///   - In block statements, the accesses are in order in which their
///     instructions are executed.
///   - In region statements, that order of execution is not predictable at
///     compile-time.
/// - Implicit writes (BlockGenerator::generateScalarStores)
///   The order in which implicit writes are executed relative to each other is
///   undefined.</doc>
<use f='llvm/polly/lib/Transform/ScheduleOptimizer.cpp' l='699' u='c' c='_ZL23containsOnlyMatrMultAccN3isl12noexceptions3mapERN5polly12MatMulInfoTyE'/>
<use f='llvm/polly/lib/Transform/ScheduleOptimizer.cpp' l='776' u='c' c='_ZL16containsMatrMultN3isl12noexceptions3mapEPKN5polly11DependencesERNS2_12MatMulInfoTyE'/>
<use f='llvm/polly/lib/Transform/Simplify.cpp' l='164' u='c' c='_ZN5polly15SimplifyVisitor16removeOverwritesEv'/>
<use f='llvm/polly/lib/Transform/Simplify.cpp' l='246' u='c' c='_ZN5polly15SimplifyVisitor14coalesceWritesEv'/>
<use f='llvm/polly/lib/Transform/Simplify.cpp' l='414' u='c' c='_ZN5polly15SimplifyVisitor21removeRedundantWritesEv'/>
<def f='llvm/polly/lib/Transform/Simplify.cpp' l='732' ll='749' type='SmallVector&lt;polly::MemoryAccess *, 32&gt; polly::getAccessesInOrder(polly::ScopStmt &amp; Stmt)'/>
