<dec f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='679' type='void llvm::IRSimilarity::IRSimilarityIdentifier::populateMapper(ArrayRef&lt;std::unique_ptr&lt;Module&gt; &gt; &amp; Modules, std::vector&lt;IRInstructionData *&gt; &amp; InstrList, std::vector&lt;unsigned int&gt; &amp; IntegerMapping)'/>
<def f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='685' ll='693' type='void llvm::IRSimilarity::IRSimilarityIdentifier::populateMapper(ArrayRef&lt;std::unique_ptr&lt;Module&gt; &gt; &amp; Modules, std::vector&lt;IRInstructionData *&gt; &amp; InstrList, std::vector&lt;unsigned int&gt; &amp; IntegerMapping)'/>
<use f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='866' u='c' c='_ZN4llvm12IRSimilarity22IRSimilarityIdentifier14findSimilarityENS_8ArrayRefISt10unique_ptrINS_6ModuleESt14default_deleteIS4_EEEE'/>
<doc f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='673'>/// Map the instructions in the modules vector to unsigned integers, using
  /// mapping already present in the mapper if possible.
  ///
  /// \param [in] Modules - The list of modules to use to populate the mapper
  /// \param [in,out] InstrList - The vector to append IRInstructionData to.
  /// \param [in,out] IntegerMapping - The vector to append integers to.</doc>
