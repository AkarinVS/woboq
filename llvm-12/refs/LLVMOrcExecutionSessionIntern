<dec f='llvm/llvm/include/llvm-c/Orc.h' l='305' type='LLVMOrcSymbolStringPoolEntryRef LLVMOrcExecutionSessionIntern(LLVMOrcExecutionSessionRef ES, const char * Name)'/>
<doc f='llvm/llvm/include/llvm-c/Orc.h' l='292'>/**
 * Intern a string in the ExecutionSession&apos;s SymbolStringPool and return a
 * reference to it. This increments the ref-count of the pool entry, and the
 * returned value should be released once the client is done with it by
 * calling LLVMOrReleaseSymbolStringPoolEntry.
 *
 * Since strings are uniqued within the SymbolStringPool
 * LLVMOrcSymbolStringPoolEntryRefs can be compared by value to test string
 * equality.
 *
 * Note that this function does not perform linker-mangling on the string.
 */</doc>
<def f='llvm/llvm/lib/ExecutionEngine/Orc/OrcV2CBindings.cpp' l='182' ll='186' type='LLVMOrcSymbolStringPoolEntryRef LLVMOrcExecutionSessionIntern(LLVMOrcExecutionSessionRef ES, const char * Name)'/>
