<dec f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.h' l='143' type='bool llvm::R600InstrInfo::fitsReadPortLimitations(const std::vector&lt;MachineInstr *&gt; &amp; MIs, const DenseMap&lt;unsigned int, unsigned int&gt; &amp; PV, std::vector&lt;BankSwizzle&gt; &amp; BS, bool isLastAluTrans) const'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.h' l='134'>/// Given the order VEC_012 &lt; VEC_021 &lt; VEC_120 &lt; VEC_102 &lt; VEC_201 &lt; VEC_210
  /// returns true and the first (in lexical order) BankSwizzle affectation
  /// starting from the one already provided in the Instruction Group MIs that
  /// fits Read Port limitations in BS if available. Otherwise returns false
  /// and undefined content in BS.
  /// isLastAluTrans should be set if the last Alu of MIs will be executed on
  /// Trans ALU. In this case, ValidTSwizzle returns the BankSwizzle value to
  /// apply to the last instruction.
  /// PV holds GPR to PV registers in the Instruction Group MIs.</doc>
<def f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp' l='511' ll='557' type='bool llvm::R600InstrInfo::fitsReadPortLimitations(const std::vector&lt;MachineInstr *&gt; &amp; IG, const DenseMap&lt;unsigned int, unsigned int&gt; &amp; PV, std::vector&lt;BankSwizzle&gt; &amp; ValidSwizzle, bool isLastAluTrans) const'/>
<use f='llvm/llvm/lib/Target/AMDGPU/R600Packetizer.cpp' l='262' u='c' c='_ZN12_GLOBAL__N_118R600PacketizerList25isBundlableWithCurrentPMIERN4llvm12MachineInstrERKNS1_8DenseMapIjjNS1_12DenseMapInfoIjEENS1_6detail12DenseMapPa12601239'/>
