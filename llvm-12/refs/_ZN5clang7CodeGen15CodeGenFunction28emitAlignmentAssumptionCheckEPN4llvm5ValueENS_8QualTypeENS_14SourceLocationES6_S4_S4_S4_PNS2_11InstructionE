<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='3089' type='void clang::CodeGen::CodeGenFunction::emitAlignmentAssumptionCheck(llvm::Value * Ptr, clang::QualType Ty, clang::SourceLocation Loc, clang::SourceLocation AssumptionLoc, llvm::Value * Alignment, llvm::Value * OffsetValue, llvm::Value * TheCheck, llvm::Instruction * Assumption)'/>
<use f='llvm/clang/lib/CodeGen/CodeGenFunction.cpp' l='2326' u='c' c='_ZN5clang7CodeGen15CodeGenFunction23emitAlignmentAssumptionEPN4llvm5ValueENS_8QualTypeENS_14SourceLocationES6_S4_S4_'/>
<def f='llvm/clang/lib/CodeGen/CodeGenFunction.cpp' l='2589' ll='2636' type='void clang::CodeGen::CodeGenFunction::emitAlignmentAssumptionCheck(llvm::Value * Ptr, clang::QualType Ty, clang::SourceLocation Loc, clang::SourceLocation SecondaryLoc, llvm::Value * Alignment, llvm::Value * OffsetValue, llvm::Value * TheCheck, llvm::Instruction * Assumption)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenFunction.cpp' l='2583'>// Loc - where the diagnostic will point, where in the source code this
//  alignment has failed.
// SecondaryLoc - if present (will be present if sufficiently different from
//  Loc), the diagnostic will additionally point a &quot;Note:&quot; to this location.
//  It should be the location where the __attribute__((assume_aligned))
//  was written e.g.</doc>
