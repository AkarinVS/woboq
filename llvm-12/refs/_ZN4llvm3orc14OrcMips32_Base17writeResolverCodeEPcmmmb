<dec f='llvm/llvm/include/llvm/ExecutionEngine/Orc/OrcABISupport.h' l='259' type='static void llvm::orc::OrcMips32_Base::writeResolverCode(char * ResolverBlockWorkingMem, llvm::JITTargetAddress ResolverBlockTargetAddress, llvm::JITTargetAddress ReentryFnAddr, llvm::JITTargetAddress ReentryCtxAddr, bool isBigEndian)'/>
<use f='llvm/llvm/include/llvm/ExecutionEngine/Orc/OrcABISupport.h' l='279' u='c' c='_ZN4llvm3orc11OrcMips32Le17writeResolverCodeEPcmmm'/>
<use f='llvm/llvm/include/llvm/ExecutionEngine/Orc/OrcABISupport.h' l='290' u='c' c='_ZN4llvm3orc11OrcMips32Be17writeResolverCodeEPcmmm'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/Orc/OrcABISupport.h' l='252'>/// Write the resolver code into the given memory. The user is
  /// responsible for allocating the memory and setting permissions.
  ///
  /// ReentryFnAddr should be the address of a function whose signature matches
  /// void* (*)(void *TrampolineAddr, void *ReentryCtxAddr). The ReentryCtxAddr
  /// argument of writeResolverCode will be passed as the second argument to
  /// the function at ReentryFnAddr.</doc>
<def f='llvm/llvm/lib/ExecutionEngine/Orc/OrcABISupport.cpp' l='509' ll='613' type='static void llvm::orc::OrcMips32_Base::writeResolverCode(char * ResolverWorkingMem, llvm::JITTargetAddress ResolverTargetAddress, llvm::JITTargetAddress ReentryFnAddr, llvm::JITTargetAddress ReentryCtxAddr, bool isBigEndian)'/>
