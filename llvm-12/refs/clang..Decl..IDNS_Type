<dec f='llvm/clang/include/clang/AST/DeclBase.h' l='133' type='4'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='830' u='r' c='_ZN5clang4Decl24isTagIdentifierNamespaceEj'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='1115' u='r' c='_ZN5clang4Decl21setObjectOfFriendDeclEb'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='1121' u='r' c='_ZN5clang4Decl21setObjectOfFriendDeclEb'/>
<use f='llvm/clang/include/clang/AST/Decl.h' l='4564' u='r' c='_ZN5clang12Redeclarable15setPreviousDeclEPT_'/>
<doc f='llvm/clang/include/clang/AST/DeclBase.h' l='130'>/// Types, declared with &apos;struct foo&apos;, typedefs, etc.
    /// This is what elaborated-type-specifiers look for in C++,
    /// but note that it&apos;s ill-formed to find a non-tag.</doc>
<use f='llvm/clang/lib/AST/DeclBase.cpp' l='768' u='r' c='_ZN5clang4Decl29getIdentifierNamespaceForKindENS0_4KindE'/>
<use f='llvm/clang/lib/AST/DeclBase.cpp' l='774' u='r' c='_ZN5clang4Decl29getIdentifierNamespaceForKindENS0_4KindE'/>
<use f='llvm/clang/lib/AST/DeclBase.cpp' l='777' u='r' c='_ZN5clang4Decl29getIdentifierNamespaceForKindENS0_4KindE'/>
<use f='llvm/clang/lib/AST/DeclBase.cpp' l='800' u='r' c='_ZN5clang4Decl29getIdentifierNamespaceForKindENS0_4KindE'/>
<use f='llvm/clang/lib/AST/DeclBase.cpp' l='812' u='r' c='_ZN5clang4Decl29getIdentifierNamespaceForKindENS0_4KindE'/>
<use f='llvm/clang/lib/Frontend/ASTUnit.cpp' l='2025' u='r' c='_ZL20CalculateHiddenNamesRKN5clang21CodeCompletionContextEPNS_20CodeCompletionResultEjRNS_10ASTContextERN4llvm9StringSetINS7_20BumpPtrAllocatorImplINS361447'/>
<use f='llvm/clang/lib/Sema/SemaLookup.cpp' l='238' u='r' c='_ZL7getIDNSN5clang4Sema14LookupNameKindEbb'/>
<use f='llvm/clang/lib/Sema/SemaLookup.cpp' l='263' u='r' c='_ZL7getIDNSN5clang4Sema14LookupNameKindEbb'/>
<use f='llvm/clang/lib/Sema/SemaLookup.cpp' l='292' u='r' c='_ZL7getIDNSN5clang4Sema14LookupNameKindEbb'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='3701' u='r' c='_ZN5clang13ASTDeclReader18attachPreviousDeclERNS_9ASTReaderEPNS_4DeclES4_S4_'/>
