<use f='llvm/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h' l='164' u='w' c='_ZN4llvm18CodeGenPassBuilder9AddIRPassC1ERNS_11PassManagerINS_6ModuleENS_15AnalysisManagerIS3_JEEEJEEEbb'/>
<use f='llvm/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h' l='174' u='m' c='_ZN4llvm18CodeGenPassBuilder9AddIRPassclEOTL0__'/>
<use f='llvm/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h' l='174' u='m' c='_ZN4llvm18CodeGenPassBuilder9AddIRPassclEOTL0__'/>
<use f='llvm/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h' l='175' u='w' c='_ZN4llvm18CodeGenPassBuilder9AddIRPassclEOTL0__'/>
<dec f='llvm/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h' l='199' type='Optional&lt;bool&gt;'/>
<doc f='llvm/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h' l='192'>// The codegen IR pipeline are mostly function passes with the exceptions of
    // a few loop and module passes. `AddingFunctionPasses` make sures that
    // we could only add module passes at the beginning of the pipeline. Once
    // we begin adding function passes, we could no longer add module passes.
    // This special-casing introduces less adaptor passes. If we have the need
    // of adding module passes after function passes, we could change the
    // implementation to accommodate that.</doc>
