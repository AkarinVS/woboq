<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='3191' type='void clang::CodeGen::CodeGenFunction::startOutlinedSEHHelper(clang::CodeGen::CodeGenFunction &amp; ParentCGF, bool IsFilter, const clang::Stmt * OutlinedStmt)'/>
<def f='llvm/clang/lib/CodeGen/CGException.cpp' l='1903' ll='1959' type='void clang::CodeGen::CodeGenFunction::startOutlinedSEHHelper(clang::CodeGen::CodeGenFunction &amp; ParentCGF, bool IsFilter, const clang::Stmt * OutlinedStmt)'/>
<use f='llvm/clang/lib/CodeGen/CGException.cpp' l='1968' u='c' c='_ZN5clang7CodeGen15CodeGenFunction25GenerateSEHFilterFunctionERS1_RKNS_13SEHExceptStmtE'/>
<use f='llvm/clang/lib/CodeGen/CGException.cpp' l='1985' u='c' c='_ZN5clang7CodeGen15CodeGenFunction26GenerateSEHFinallyFunctionERS1_RKNS_14SEHFinallyStmtE'/>
<doc f='llvm/clang/lib/CodeGen/CGException.cpp' l='1900'>/// Arrange a function prototype that can be called by Windows exception
/// handling personalities. On Win64, the prototype looks like:
/// RetTy func(void *EHPtrs, void *ParentFP);</doc>
<use f='llvm/clang/lib/CodeGen/CGObjCRuntime.cpp' l='201' u='c' c='_ZN5clang7CodeGen13CGObjCRuntime16EmitTryCatchStmtERNS0_15CodeGenFunctionERKNS_13ObjCAtTryStmtEN4llvm14FunctionCalleeES8_S8_'/>
