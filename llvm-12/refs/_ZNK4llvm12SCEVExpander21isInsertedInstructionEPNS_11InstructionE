<def f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='356' ll='358' type='bool llvm::SCEVExpander::isInsertedInstruction(llvm::Instruction * I) const'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='353'>/// Return true if the specified instruction was inserted by the code
  /// rewriter.  If so, the client should not modify the instruction. Note that
  /// this also includes instructions re-used during expansion.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp' l='5177' u='c' c='_ZNK12_GLOBAL__N_111LSRInstance29AdjustInsertPositionForExpandEN4llvm14ilist_iteratorINS1_12ilist_detail12node_optionsINS1_11InstructionELb0ELb0EvEELb3500636'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='111' u='c' c='_ZN4llvm12SCEVExpander20findInsertPointAfterEPNS_11InstructionES2_'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1923' u='c' c='_ZN4llvm12SCEVExpander6expandEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp' l='1920' u='c' c='_ZN7WidenIV12createWideIVERN4llvm12SCEVExpanderE'/>
