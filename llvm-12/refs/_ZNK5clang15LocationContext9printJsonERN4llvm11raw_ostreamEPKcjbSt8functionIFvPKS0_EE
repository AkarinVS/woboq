<dec f='llvm/clang/include/clang/Analysis/AnalysisDeclContext.h' l='279' type='void clang::LocationContext::printJson(llvm::raw_ostream &amp; Out, const char * NL = &quot;\n&quot;, unsigned int Space = 0, bool IsDot = false, std::function&lt;void (const LocationContext *)&gt; printMoreInfoPerContext = [](const clang::LocationContext *) {
}) const'/>
<doc f='llvm/clang/include/clang/Analysis/AnalysisDeclContext.h' l='268'>/// Prints out the call stack in \c json format.
  ///
  /// \param Out   The out stream.
  /// \param NL    The newline.
  /// \param Space The space count for indentation.
  /// \param IsDot Whether the output format is \c dot.
  /// \param printMoreInfoPerContext
  /// A callback to print more information for each context, for example:
  /// \code
  ///   [&amp;](const LocationContext *LC) { LC-&gt;dump(); }
  /// \endcode</doc>
<def f='llvm/clang/lib/Analysis/AnalysisDeclContext.cpp' l='479' ll='529' type='void clang::LocationContext::printJson(llvm::raw_ostream &amp; Out, const char * NL = &quot;\n&quot;, unsigned int Space = 0, bool IsDot = false, std::function&lt;void (const LocationContext *)&gt; printMoreInfoPerContext = [](const clang::LocationContext *) {
}) const'/>
<use f='llvm/clang/lib/Analysis/AnalysisDeclContext.cpp' l='531' u='c' c='_ZNK5clang15LocationContext4dumpEv'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/Environment.cpp' l='246' u='c' c='_ZNK5clang4ento11Environment9printJsonERN4llvm11raw_ostreamERKNS_10ASTContextEPKNS_15LocationContextEPKcjb'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp' l='609' u='c' c='_ZNK5clang4ento10ExprEngine9printJsonERN4llvm11raw_ostreamENS2_18IntrusiveRefCntPtrIKNS0_12ProgramStateEEEPKNS_15LocationContextEPKcjb'/>
