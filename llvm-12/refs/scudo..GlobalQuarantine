<def f='llvm/compiler-rt/lib/scudo/standalone/quarantine.h' l='174' ll='301'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/combined.h' l='136'/>
<doc f='llvm/compiler-rt/lib/scudo/standalone/quarantine.h' l='170'>// The callback interface is:
// void Callback::recycle(Node *Ptr);
// void *Callback::allocate(uptr Size);
// void Callback::deallocate(void *Ptr);</doc>
<fun r='_ZN5scudo16GlobalQuarantine21initLinkerInitializedEmm'/>
<fun r='_ZN5scudo16GlobalQuarantine4initEmm'/>
<fun r='_ZNK5scudo16GlobalQuarantine10getMaxSizeEv'/>
<fun r='_ZNK5scudo16GlobalQuarantine12getCacheSizeEv'/>
<fun r='_ZN5scudo16GlobalQuarantine3putEPNS_15QuarantineCacheIT_EES2_PT0_m'/>
<fun r='_ZN5scudo16GlobalQuarantine5drainEPNS_15QuarantineCacheIT_EES2_'/>
<fun r='_ZN5scudo16GlobalQuarantine15drainAndRecycleEPNS_15QuarantineCacheIT_EES2_'/>
<fun r='_ZNK5scudo16GlobalQuarantine8getStatsEPNS_12ScopedStringE'/>
<fun r='_ZN5scudo16GlobalQuarantine7disableEv'/>
<fun r='_ZN5scudo16GlobalQuarantine6enableEv'/>
<mbr r='scudo::GlobalQuarantine::CacheMutex' t='scudo::HybridMutex'/>
<mbr r='scudo::GlobalQuarantine::Cache' t='scudo::GlobalQuarantine::CacheT'/>
<mbr r='scudo::GlobalQuarantine::RecycleMutex' t='scudo::HybridMutex'/>
<mbr r='scudo::GlobalQuarantine::MinSize' t='scudo::atomic_uptr'/>
<mbr r='scudo::GlobalQuarantine::MaxSize' t='scudo::atomic_uptr'/>
<mbr r='scudo::GlobalQuarantine::MaxCacheSize' t='scudo::atomic_uptr'/>
<fun r='_ZN5scudo16GlobalQuarantine7recycleEmT_'/>
<fun r='_ZN5scudo16GlobalQuarantine9doRecycleEPNS_15QuarantineCacheIT_EES2_'/>
