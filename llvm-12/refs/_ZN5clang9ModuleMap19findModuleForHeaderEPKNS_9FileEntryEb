<dec f='llvm/clang/include/clang/Lex/ModuleMap.h' l='436' type='clang::ModuleMap::KnownHeader clang::ModuleMap::findModuleForHeader(const clang::FileEntry * File, bool AllowTextual = false)'/>
<doc f='llvm/clang/include/clang/Lex/ModuleMap.h' l='422'>/// Retrieve the module that owns the given header file, if any. Note that
  /// this does not implicitly load module maps, except for builtin headers,
  /// and does not consult the external source. (Those checks are the
  /// responsibility of \ref HeaderSearch.)
  ///
  /// \param File The header file that is likely to be included.
  ///
  /// \param AllowTextual If \c true and \p File is a textual header, return
  /// its owning module. Otherwise, no KnownHeader will be returned if the
  /// file is only known as a textual header.
  ///
  /// \returns The module KnownHeader, which provides the module that owns the
  /// given header file.  The KnownHeader is default constructed to indicate
  /// that no module owns this header file.</doc>
<use f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='1419' u='c' c='_ZNK5clang12HeaderSearch19findModuleForHeaderEPKNS_9FileEntryEb'/>
<def f='llvm/clang/lib/Lex/ModuleMap.cpp' l='571' ll='594' type='ModuleMap::KnownHeader clang::ModuleMap::findModuleForHeader(const clang::FileEntry * File, bool AllowTextual = false)'/>
<use f='llvm/clang/lib/Lex/PPDirectives.cpp' l='643' u='c' c='_ZN5clang12Preprocessor20getModuleForLocationENS_14SourceLocationE'/>
