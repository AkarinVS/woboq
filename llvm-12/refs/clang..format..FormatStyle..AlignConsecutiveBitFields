<dec f='llvm/clang/include/clang/Format/Format.h' l='306' type='clang::format::FormatStyle::AlignConsecutiveStyle'/>
<use f='llvm/clang/include/clang/Format/Format.h' l='3032' u='r' c='_ZNK5clang6format11FormatStyleeqERKS1_'/>
<use f='llvm/clang/include/clang/Format/Format.h' l='3032' u='r' c='_ZNK5clang6format11FormatStyleeqERKS1_'/>
<offset>128</offset>
<doc f='llvm/clang/include/clang/Format/Format.h' l='239'>/// Style of aligning consecutive bit field.
  ///
  /// ``Consecutive`` will align the bitfield separators of consecutive lines.
  /// This will result in formattings like:
  /// \code
  ///   int aaaa : 1;
  ///   int b    : 12;
  ///   int ccc  : 8;
  /// \endcode
  ///
  /// Possible values:
  ///
  /// * ``ACS_None`` (in configuration: ``None``)
  ///    Do not align bit fields on consecutive lines.
  ///
  /// * ``ACS_Consecutive`` (in configuration: ``Consecutive``)
  ///    Align bit fields on consecutive lines. This will result in
  ///    formattings like:
  ///    \code
  ///      int aaaa : 1;
  ///      int b    : 12;
  ///      int ccc  : 8;
  ///
  ///      int d : 2;
  ///      /* A comment. */
  ///      int ee : 3;
  ///    \endcode
  ///
  /// * ``ACS_AcrossEmptyLines`` (in configuration: ``AcrossEmptyLines``)
  ///    Same as ACS_Consecutive, but also spans over empty lines, e.g.
  ///    \code
  ///      int aaaa : 1;
  ///      int b    : 12;
  ///      int ccc  : 8;
  ///
  ///      int d    : 2;
  ///      /* A comment. */
  ///      int ee : 3;
  ///    \endcode
  ///
  /// * ``ACS_AcrossComments`` (in configuration: ``AcrossComments``)
  ///    Same as ACS_Consecutive, but also spans over lines only containing
  ///    comments, e.g.
  ///    \code
  ///      int aaaa : 1;
  ///      int b    : 12;
  ///      int ccc  : 8;
  ///
  ///      int d  : 2;
  ///      /* A comment. */
  ///      int ee : 3;
  ///    \endcode
  ///
  /// * ``ACS_AcrossEmptyLinesAndComments``
  ///   (in configuration: ``AcrossEmptyLinesAndComments``)
  ///
  ///    Same as ACS_Consecutive, but also spans over lines only containing
  ///    comments and empty lines, e.g.
  ///    \code
  ///      int aaaa : 1;
  ///      int b    : 12;
  ///      int ccc  : 8;
  ///
  ///      int d    : 2;
  ///      /* A comment. */
  ///      int ee   : 3;
  ///    \endcode</doc>
<use f='llvm/clang/lib/Format/Format.cpp' l='477' u='a' c='_ZN4llvm4yaml13MappingTraitsIN5clang6format11FormatStyleEE7mappingERNS0_2IOERS4_'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='890' u='w' c='_ZN5clang6format12getLLVMStyleENS0_11FormatStyle12LanguageKindE'/>
<use f='llvm/clang/lib/Format/WhitespaceManager.cpp' l='667' u='r' c='_ZN5clang6format17WhitespaceManager25alignConsecutiveBitFieldsEv'/>
<use f='llvm/clang/lib/Format/WhitespaceManager.cpp' l='683' u='r' c='_ZN5clang6format17WhitespaceManager25alignConsecutiveBitFieldsEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13160' u='w' c='_ZN5clang6format12_GLOBAL__N_168FormatTest_AlignConsecutiveBitFieldsAcrossEmptyLinesAndComments_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13854' u='w' c='_ZN5clang6format12_GLOBAL__N_141FormatTest_AlignConsecutiveBitFields_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15548' u='w' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15549' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15549' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15552' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15552' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15554' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15554' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15556' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15556' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15559' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15559' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15561' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15561' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
