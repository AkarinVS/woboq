<use f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='871' u='c' c='_ZNK4llvm7CmpInst18getStrictPredicateEv'/>
<dec f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='879' type='static llvm::CmpInst::Predicate llvm::CmpInst::getStrictPredicate(llvm::CmpInst::Predicate pred)'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='874'>/// This is a static version that you can use without an instruction
  /// available.
  /// @returns the strict version of comparison provided in \p pred.
  /// If \p pred is not a strict comparison predicate, returns \p pred.
  /// Returns the strict version of non-strict comparisons.</doc>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='3790' ll='3811' type='static CmpInst::Predicate llvm::CmpInst::getStrictPredicate(llvm::CmpInst::Predicate pred)'/>
<use f='llvm/llvm/lib/IR/Instructions.cpp' l='3842' u='c' c='_ZN4llvm7CmpInst29getFlippedStrictnessPredicateENS0_9PredicateE'/>
