<dec f='llvm/llvm/include/llvm/CodeGen/MachinePipeliner.h' l='282' type='unsigned int llvm::SwingSchedulerDAG::calculateResMII()'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='486' u='c' c='_ZN4llvm17SwingSchedulerDAG8scheduleEv'/>
<def f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='1096' ll='1165' type='unsigned int llvm::SwingSchedulerDAG::calculateResMII()'/>
<doc f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='1090'>/// Calculate the resource constrained minimum initiation interval for the
/// specified loop. We use the DFA to model the resources needed for
/// each instruction, and we ignore dependences. A different DFA is created
/// for each cycle that is required. When adding a new instruction, we attempt
/// to add it to each existing DFA, until a legal space is found. If the
/// instruction cannot be reserved in an existing DFA, we create a new one.</doc>
