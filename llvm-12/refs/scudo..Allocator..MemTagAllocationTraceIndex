<use f='llvm/compiler-rt/lib/scudo/standalone/combined.h' l='889' u='r' c='_ZN5scudo9Allocator12getErrorInfoEP16scudo_error_infomPKcS4_S4_S4_mm'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/combined.h' l='914' u='r' c='_ZN5scudo9Allocator12getErrorInfoEP16scudo_error_infomPKcS4_S4_S4_mm'/>
<dec f='llvm/compiler-rt/lib/scudo/standalone/combined.h' l='962' type='const scudo::sptr'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/combined.h' l='1103' u='r' c='_ZN5scudo9Allocator25storeAllocationStackMaybeENS_7OptionsEPv'/>
<doc f='llvm/compiler-rt/lib/scudo/standalone/combined.h' l='950'>// These are indexes into an &quot;array&quot; of 32-bit values that store information
  // inline with a chunk that is relevant to diagnosing memory tag faults, where
  // 0 corresponds to the address of the user memory. This means that negative
  // indexes may be used to store information about allocations, while positive
  // indexes may only be used to store information about deallocations, because
  // the user memory is in use until it has been deallocated. The smallest index
  // that may be used is -2, which corresponds to 8 bytes before the user
  // memory, because the chunk header size is 8 bytes and in allocators that
  // support memory tagging the minimum alignment is at least the tag granule
  // size (16 on aarch64), and the largest index that may be used is 3 because
  // we are only guaranteed to have at least a granule&apos;s worth of space in the
  // user memory.</doc>
