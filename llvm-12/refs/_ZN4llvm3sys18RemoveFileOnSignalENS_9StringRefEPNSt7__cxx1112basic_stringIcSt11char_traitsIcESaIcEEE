<dec f='llvm/llvm/include/llvm/Support/Signals.h' l='32' type='bool llvm::sys::RemoveFileOnSignal(llvm::StringRef Filename, std::string * ErrMsg = nullptr)'/>
<use f='llvm/clang/lib/Frontend/CompilerInstance.cpp' l='802' u='c' c='_ZN5clang16CompilerInstance20createOutputFileImplEN4llvm9StringRefEbbbb'/>
<use f='llvm/clang/lib/Frontend/CompilerInstance.cpp' l='2068' u='c' c='_ZN5clang16CompilerInstance22createModuleFromSourceENS_14SourceLocationEN4llvm9StringRefES3_'/>
<doc f='llvm/llvm/include/llvm/Support/Signals.h' l='29'>/// This function registers signal handlers to ensure that if a signal gets
  /// delivered that the named file is removed.
  /// Remove a file if a fatal signal occurs.</doc>
<use f='llvm/clang/tools/driver/cc1as_main.cpp' l='318' u='c' c='_ZL15getOutputStreamN4llvm9StringRefERN5clang17DiagnosticsEngineEb'/>
<use f='llvm/llvm/lib/Support/LockFileManager.cpp' l='143' u='c' c='_ZN12_GLOBAL__N_128RemoveUniqueLockFileOnSignalC1EN4llvm9StringRefE'/>
<use f='llvm/llvm/lib/Support/Path.cpp' l='1287' u='c' c='_ZN4llvm3sys2fs8TempFile6createERKNS_5TwineEj'/>
<def f='llvm/llvm/lib/Support/Unix/Signals.inc' l='440' ll='448' type='bool llvm::sys::RemoveFileOnSignal(llvm::StringRef Filename, std::string * ErrMsg = nullptr)'/>
<doc f='llvm/llvm/lib/Support/Unix/Signals.inc' l='439'>// The public API</doc>
<use f='llvm/llvm/lib/Support/ToolOutputFile.cpp' l='24' u='c' c='_ZN4llvm14ToolOutputFile16CleanupInstallerC1ENS_9StringRefE'/>
<use f='llvm/llvm/unittests/Support/CrashRecoveryTest.cpp' l='83' u='c' c='_ZN39CrashRecoveryTest_DumpStackCleanup_Test8TestBodyEv'/>
