<dec f='llvm/polly/include/polly/CodeGen/LoopGeneratorsKMP.h' l='77' type='std::tuple&lt;Value *, Function *&gt; polly::ParallelLoopGeneratorKMP::createSubFn(llvm::Value * Stride, llvm::AllocaInst * Struct, SetVector&lt;llvm::Value *&gt; UsedValues, polly::ValueMapT &amp; VMap)'/>
<inh f='llvm/polly/include/polly/CodeGen/LoopGenerators.h' l='214' c='_ZN5polly21ParallelLoopGenerator11createSubFnEPN4llvm5ValueEPNS1_10AllocaInstENS1_9SetVectorIS3_St6vectorIS3_SaIS3_EENS1_8DenseSetIS3_NS1_12DenseMapIn9538730'/>
<def f='llvm/polly/lib/CodeGen/LoopGeneratorsKMP.cpp' l='130' ll='310' type='std::tuple&lt;Value *, Function *&gt; polly::ParallelLoopGeneratorKMP::createSubFn(llvm::Value * SequentialLoopStride, llvm::AllocaInst * StructData, SetVector&lt;llvm::Value *&gt; Data, polly::ValueMapT &amp; Map)'/>
<doc f='llvm/polly/lib/CodeGen/LoopGeneratorsKMP.cpp' l='105'>// Create a subfunction of the following (preliminary) structure:
//
//        PrevBB
//           |
//           v
//        HeaderBB
//       /   |    _____
//      /    v   v     |
//     / PreHeaderBB   |
//    |      |         |
//    |      v         |
//    |  CheckNextBB   |
//     \     |   \_____/
//      \    |
//       v   v
//       ExitBB
//
// HeaderBB will hold allocations, loading of variables and kmp-init calls.
// CheckNextBB will check for more work (dynamic / static chunked) or will be
// empty (static non chunked).
// If there is more work to do: go to PreHeaderBB, otherwise go to ExitBB.
// PreHeaderBB loads the new boundaries (&amp; will lead to the loop body later on).
// Just like CheckNextBB: PreHeaderBB is (preliminary) empty in the static non
// chunked scheduling case. ExitBB marks the end of the parallel execution.
// The possibly empty BasicBlocks will automatically be removed.</doc>
