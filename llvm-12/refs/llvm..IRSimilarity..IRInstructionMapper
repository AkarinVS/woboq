<def f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='278' ll='426'/>
<use f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='735'/>
<use f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='705' c='_ZL30createCandidatesFromSuffixTreeN4llvm12IRSimilarity19IRInstructionMapperERSt6vectorIPNS0_17IRInstructionDataESaIS4_EERS2_IjSaIjEERNS_10SuffixTree1809351'/>
<size>72</size>
<doc f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='237'>/// Helper struct for converting the Instructions in a Module into a vector of
/// unsigned integers. This vector of unsigned integers can be thought of as a
/// &quot;numeric string&quot;. This numeric string can then be queried by, for example,
/// data structures that find repeated substrings.
///
/// This hashing is done per BasicBlock in the module. To hash Instructions
/// based off of their operations, each Instruction is wrapped in an
/// IRInstructionData struct. The unsigned integer for an IRInstructionData
/// depends on:
/// - The hash provided by the IRInstructionData.
/// - Which member of InstrType the IRInstructionData is classified as.
// See InstrType for more details on the possible classifications, and how they
// manifest in the numeric string.
///
/// The numeric string for an individual BasicBlock is terminated by an unique
/// unsigned integer. This prevents data structures which rely on repetition
/// from matching across BasicBlocks. (For example, the SuffixTree.)
/// As a concrete example, if we have the following two BasicBlocks:
/// \code
/// bb0:
/// %add1 = add i32 %a, %b
/// %add2 = add i32 %c, %d
/// %add3 = add i64 %e, %f
/// bb1:
/// %sub = sub i32 %c, %d
/// \endcode
/// We may hash the Instructions like this (via IRInstructionData):
/// \code
/// bb0:
/// %add1 = add i32 %a, %b ; Hash: 1
/// %add2 = add i32 %c, %d; Hash: 1
/// %add3 = add i64 %e, %f; Hash: 2
/// bb1:
/// %sub = sub i32 %c, %d; Hash: 3
/// %add4 = add i32 %c, %d ; Hash: 1
/// \endcode
/// And produce a &quot;numeric string representation&quot; like so:
/// 1, 1, 2, unique_integer_1, 3, 1, unique_integer_2
///
/// TODO: This is very similar to the MachineOutliner, and should be
/// consolidated into the same interface.</doc>
<mbr r='llvm::IRSimilarity::IRInstructionMapper::IllegalInstrNumber' o='0' t='unsigned int'/>
<mbr r='llvm::IRSimilarity::IRInstructionMapper::LegalInstrNumber' o='32' t='unsigned int'/>
<mbr r='llvm::IRSimilarity::IRInstructionMapper::InstructionIntegerMap' o='64' t='DenseMap&lt;llvm::IRSimilarity::IRInstructionData *, unsigned int, llvm::IRSimilarity::IRInstructionDataTraits&gt;'/>
<mbr r='llvm::IRSimilarity::IRInstructionMapper::AddedIllegalLastTime' o='256' t='bool'/>
<mbr r='llvm::IRSimilarity::IRInstructionMapper::CanCombineWithPrevInstr' o='264' t='bool'/>
<mbr r='llvm::IRSimilarity::IRInstructionMapper::HaveLegalRange' o='272' t='bool'/>
<mbr r='llvm::IRSimilarity::IRInstructionMapper::InstDataAllocator' o='320' t='SpecificBumpPtrAllocator&lt;llvm::IRSimilarity::IRInstructionData&gt; *'/>
<mbr r='llvm::IRSimilarity::IRInstructionMapper::IDLAllocator' o='384' t='SpecificBumpPtrAllocator&lt;llvm::IRSimilarity::IRInstructionDataList&gt; *'/>
<fun r='_ZN4llvm12IRSimilarity19IRInstructionMapper25allocateIRInstructionDataERNS_11InstructionEbRNS0_21IRInstructionDataListE'/>
<fun r='_ZN4llvm12IRSimilarity19IRInstructionMapper29allocateIRInstructionDataListEv'/>
<mbr r='llvm::IRSimilarity::IRInstructionMapper::IDL' o='448' t='llvm::IRSimilarity::IRInstructionDataList *'/>
<fun r='_ZN4llvm12IRSimilarity19IRInstructionMapper20convertToUnsignedVecERNS_10BasicBlockERSt6vectorIPNS0_17IRInstructionDataESaIS6_EERS4_IjSaIjEE'/>
<fun r='_ZN4llvm12IRSimilarity19IRInstructionMapper18mapToLegalUnsignedERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb0ELb0EvEELb0EL14991152'/>
<fun r='_ZN4llvm12IRSimilarity19IRInstructionMapper20mapToIllegalUnsignedERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb0ELb0EvEELb010489967'/>
<fun r='_ZN4llvm12IRSimilarity19IRInstructionMapperC1EPNS_24SpecificBumpPtrAllocatorINS0_17IRInstructionDataEEEPNS2_INS0_21IRInstructionDataListEEE'/>
<mbr r='llvm::IRSimilarity::IRInstructionMapper::InstClassifier' o='512' t='llvm::IRSimilarity::IRInstructionMapper::InstructionClassification'/>
<fun r='_ZN4llvm12IRSimilarity19IRInstructionMapper20convertToUnsignedVecERNS_10BasicBlockERSt6vectorIPNS0_17IRInstructionDataESaIS6_EERS4_IjSaIjEE'/>
<fun r='_ZN4llvm12IRSimilarity19IRInstructionMapper18mapToLegalUnsignedERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb0ELb0EvEELb0EL14991152'/>
<fun r='_ZN4llvm12IRSimilarity19IRInstructionMapper25allocateIRInstructionDataERNS_11InstructionEbRNS0_21IRInstructionDataListE'/>
<fun r='_ZN4llvm12IRSimilarity19IRInstructionMapper29allocateIRInstructionDataListEv'/>
<fun r='_ZN4llvm12IRSimilarity19IRInstructionMapper20mapToIllegalUnsignedERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb0ELb0EvEELb010489967'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='33' c='_Z10getVectorsRN4llvm6ModuleERNS_12IRSimilarity19IRInstructionMapperERSt6vectorIPNS2_17IRInstructionDataESaIS7_EERS5_IjSaIjEE'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='65' c='_ZN46IRInstructionMapper_OpcodeDifferentiation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='96' c='_ZN45IRInstructionMapper_OpcodeTypeSimilarity_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='124' c='_ZN44IRInstructionMapper_TypeDifferentiation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='149' c='_ZN49IRInstructionMapper_PredicateDifferentiation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='176' c='_ZN45IRInstructionMapper_PredicateIsomorphism_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='201' c='_ZN44IRInstructionMapper_PredicateSimilarity_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='227' c='_ZN46IRInstructionMapper_FPPredicateSimilarity_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='253' c='_ZN45IRInstructionMapper_FPPredicatDifference_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='279' c='_ZN43IRInstructionMapper_ZextTypeSimilarity_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='305' c='_ZN43IRInstructionMapper_SextTypeSimilarity_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='331' c='_ZN43IRInstructionMapper_ZextTypeDifference_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='357' c='_ZN43IRInstructionMapper_SextTypeDifference_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='383' c='_ZN40IRInstructionMapper_LoadSimilarType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='409' c='_ZN42IRInstructionMapper_LoadDifferentType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='435' c='_ZN43IRInstructionMapper_LoadDifferentAlign_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='461' c='_ZN46IRInstructionMapper_LoadDifferentVolatile_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='487' c='_ZN41IRInstructionMapper_LoadSameVolatile_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='513' c='_ZN44IRInstructionMapper_LoadDifferentAtomic_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='539' c='_ZN39IRInstructionMapper_LoadSameAtomic_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='565' c='_ZN41IRInstructionMapper_StoreSimilarType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='591' c='_ZN43IRInstructionMapper_StoreDifferentType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='617' c='_ZN44IRInstructionMapper_StoreDifferentAlign_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='643' c='_ZN47IRInstructionMapper_StoreDifferentVolatile_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='669' c='_ZN42IRInstructionMapper_StoreSameVolatile_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='695' c='_ZN40IRInstructionMapper_StoreSameAtomic_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='721' c='_ZN45IRInstructionMapper_StoreDifferentAtomic_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='761' c='_ZN38IRInstructionMapper_BranchIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='788' c='_ZN35IRInstructionMapper_PhiIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='811' c='_ZN38IRInstructionMapper_AllocaIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='839' c='_ZN53IRInstructionMapper_GetElementPtrSameEndOperands_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='868' c='_ZN58IRInstructionMapper_GetElementPtrDifferentEndOperands_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='896' c='_ZN55IRInstructionMapper_GetElementPtrDifferentBaseType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='924' c='_ZN55IRInstructionMapper_GetElementPtrDifferentInBounds_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='949' c='_ZN45IRInstructionMapper_CallsIllegalIndirect_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='976' c='_ZN46IRInstructionMapper_CallsSameTypeSameName_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1004' c='_ZN54IRInstructionMapper_CallsSameArgTypeDifferentName_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1032' c='_ZN59IRInstructionMapper_CallsDifferentArgTypeDifferentName_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1060' c='_ZN62IRInstructionMapper_CallsDifferentReturnTypeDifferentName_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1087' c='_ZN44IRInstructionMapper_CallsSameParameters_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1114' c='_ZN44IRInstructionMapper_CallsDifferentTails_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1141' c='_ZN57IRInstructionMapper_CallsDifferentCallingConventions_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1175' c='_ZN38IRInstructionMapper_InvokeIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1208' c='_ZN42IRInstructionMapper_CallBrInstIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1237' c='_ZN43IRInstructionMapper_DebugInfoInvisible_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1266' c='_ZN55IRInstructionMapper_ExceptionHandlingTypeIdIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1298' c='_ZN62IRInstructionMapper_ExceptionHandlingExceptionCodeIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1323' c='_ZN55IRInstructionMapper_ExceptionHandlingUnwindIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1348' c='_ZN65IRInstructionMapper_ExceptionHandlingExceptionPointerIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1379' c='_ZN40IRInstructionMapper_CatchpadIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1410' c='_ZN42IRInstructionMapper_CleanuppadIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1444' c='_ZN38IRInstructionMapper_MemSetIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1475' c='_ZN38IRInstructionMapper_MemCpyIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1506' c='_ZN39IRInstructionMapper_MemMoveIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1554' c='_ZN39IRInstructionMapper_VarArgsIllegal_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1587' c='_ZN46IRInstructionMapper_RepeatedIllegalLength_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1640' c='_ZN53IRSimilarityCandidate_CheckIdenticalInstructions_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1680' c='_ZN47IRSimilarityCandidate_PredicateIsomorphism_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1725' c='_ZN59IRSimilarityCandidate_CheckRegionsDifferentInstruction_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1758' c='_ZN53IRSimilarityCandidate_CheckRegionsDifferentTypes_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1801' c='_ZN45IRSimilarityCandidate_IdenticalWithDebug_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1837' c='_ZN45IRSimilarityCandidate_IllegalInCandidate_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1884' c='_ZN45IRSimilarityCandidate_DifferentStructure_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1917' c='_ZN56IRSimilarityCandidate_PredicateIsomorphismStructure_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1947' c='_ZN46IRSimilarityCandidate_PredicateDifference_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='1978' c='_ZN40IRSimilarityCandidate_SameStructure_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/IRSimilarityIdentifierTest.cpp' l='2011' c='_ZN53IRSimilarityCandidate_DifferentNameSameStructure_Test8TestBodyEv'/>
<size>72</size>
