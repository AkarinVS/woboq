<dec f='llvm/llvm/include/llvm/Object/MachO.h' l='136' type='const char * llvm::object::BindRebaseSegInfo::checkSegAndOffsets(int32_t SegIndex, uint64_t SegOffset, uint8_t PointerSize, uint32_t Count = 1, uint32_t Skip = 0)'/>
<use f='llvm/llvm/include/llvm/Object/MachO.h' l='423' u='c' c='_ZNK4llvm6object15MachOObjectFile27BindEntryCheckSegAndOffsetsEimhjj'/>
<use f='llvm/llvm/include/llvm/Object/MachO.h' l='438' u='c' c='_ZNK4llvm6object15MachOObjectFile29RebaseEntryCheckSegAndOffsetsEimhjj'/>
<doc f='llvm/llvm/include/llvm/Object/MachO.h' l='135'>// Used to check a Mach-O Bind or Rebase entry for errors when iterating.</doc>
<def f='llvm/llvm/lib/Object/MachOObjectFile.cpp' l='4044' ll='4073' type='const char * llvm::object::BindRebaseSegInfo::checkSegAndOffsets(int32_t SegIndex, uint64_t SegOffset, uint8_t PointerSize, uint32_t Count = 1, uint32_t Skip = 0)'/>
<doc f='llvm/llvm/lib/Object/MachOObjectFile.cpp' l='4037'>// For use with a SegIndex, SegOffset, and PointerSize triple in
// MachOBindEntry::moveNext() to validate a MachOBindEntry or MachORebaseEntry.
//
// Given a SegIndex, SegOffset, and PointerSize, verify a valid section exists
// that fully contains a pointer at that location. Multiple fixups in a bind
// (such as with the BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB opcode) can
// be tested via the Count and Skip parameters.</doc>
