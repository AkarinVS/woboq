<dec f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='113' type='unsigned int'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='158' u='w' c='_ZN4llvm8MCSymbolC1ENS0_10SymbolKindEPKNS_14StringMapEntryIbEEb'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='226' u='r' c='_ZN4llvm8MCSymbol18redefineIfPossibleEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='228' u='w' c='_ZN4llvm8MCSymbol18redefineIfPossibleEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='291' u='r' c='_ZNK4llvm8MCSymbol10isVariableEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='315' u='r' c='_ZNK4llvm8MCSymbol7isUnsetEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='328' u='w' c='_ZN4llvm8MCSymbol9setOffsetEm'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='345' u='w' c='_ZN4llvm8MCSymbol9setCommonEmjb'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='380' u='r' c='_ZNK4llvm8MCSymbol8isCommonEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='381' u='r' c='_ZNK4llvm8MCSymbol8isCommonEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='386' u='r' c='_ZNK4llvm8MCSymbol14isTargetCommonEv'/>
<offset>74</offset>
<doc f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='111'>/// This is actually a Contents enumerator, but is unsigned to avoid sign
  /// extension and achieve better bitpacking with MSVC.</doc>
<use f='llvm/llvm/lib/MC/MCSymbol.cpp' l='55' u='w' c='_ZN4llvm8MCSymbol16setVariableValueEPKNS_6MCExprE'/>
