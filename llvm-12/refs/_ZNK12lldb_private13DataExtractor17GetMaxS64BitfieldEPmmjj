<dec f='llvm/lldb/include/lldb/Utility/DataExtractor.h' l='574' type='int64_t lldb_private::DataExtractor::GetMaxS64Bitfield(lldb::offset_t * offset_ptr, size_t size, uint32_t bitfield_bit_size, uint32_t bitfield_bit_offset) const'/>
<doc f='llvm/lldb/include/lldb/Utility/DataExtractor.h' l='540'>/// Extract an signed integer of size \a size from \a *offset_ptr, then
  /// extract and sign-extend the bitfield from this value if \a
  /// bitfield_bit_size is non-zero.
  ///
  /// Extract a single signed integer value (sign-extending if required) and
  /// update the offset pointed to by \a offset_ptr. The size of the extracted
  /// integer is specified by the \a size argument. \a size must
  /// have a value greater than or equal to one and less than or equal to
  /// eight since the return value is 64 bits wide.
  ///
  /// \param[in,out] offset_ptr
  ///     A pointer to an offset within the data that will be advanced
  ///     by the appropriate number of bytes if the value is extracted
  ///     correctly. If the offset is out of bounds or there are not
  ///     enough bytes to extract this value, the offset will be left
  ///     unmodified.
  ///
  /// \param[in] size
  ///     The size in bytes of the integer to extract.
  ///
  /// \param[in] bitfield_bit_size
  ///     The size in bits of the bitfield value to extract, or zero
  ///     to just extract the entire integer value.
  ///
  /// \param[in] bitfield_bit_offset
  ///     The bit offset of the bitfield value in the extracted
  ///     integer.  For little-endian data, this is the offset of
  ///     the LSB of the bitfield from the LSB of the integer.
  ///     For big-endian data, this is the offset of the MSB of the
  ///     bitfield from the MSB of the integer.
  ///
  /// \return
  ///     The signed bitfield integer value that was extracted, or
  ///     zero on failure.</doc>
<use f='llvm/lldb/source/Core/DumpDataExtractor.cpp' l='373' u='c' c='_ZN12lldb_private17DumpDataExtractorERKNS_13DataExtractorEPNS_6StreamEmN4lldb6FormatEmmmmjjPNS_21ExecutionContextScopeE'/>
<use f='llvm/lldb/source/Core/DumpDataExtractor.cpp' l='397' u='c' c='_ZN12lldb_private17DumpDataExtractorERKNS_13DataExtractorEPNS_6StreamEmN4lldb6FormatEmmmmjjPNS_21ExecutionContextScopeE'/>
<use f='llvm/lldb/source/Plugins/TypeSystem/Clang/TypeSystemClang.cpp' l='8659' u='c' c='_ZL13DumpEnumValueRKN5clang8QualTypeEPN12lldb_private6StreamERKNS3_13DataExtractorEmmjj'/>
<def f='llvm/lldb/source/Utility/DataExtractor.cpp' l='604' ll='623' type='int64_t lldb_private::DataExtractor::GetMaxS64Bitfield(lldb::offset_t * offset_ptr, size_t size, uint32_t bitfield_bit_size, uint32_t bitfield_bit_offset) const'/>
<use f='llvm/lldb/unittests/Utility/DataExtractorTest.cpp' l='42' u='c' c='_ZN34DataExtractorTest_GetBitfield_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Utility/DataExtractorTest.cpp' l='45' u='c' c='_ZN34DataExtractorTest_GetBitfield_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Utility/DataExtractorTest.cpp' l='48' u='c' c='_ZN34DataExtractorTest_GetBitfield_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Utility/DataExtractorTest.cpp' l='51' u='c' c='_ZN34DataExtractorTest_GetBitfield_Test8TestBodyEv'/>
