<dec f='llvm/lldb/source/Plugins/TypeSystem/Clang/TypeSystemClang.h' l='723' type='lldb_private::CompilerType lldb_private::TypeSystemClang::CreateTypedef(lldb::opaque_compiler_type_t type, const char * name, const lldb_private::CompilerDeclContext &amp; decl_ctx, uint32_t opaque_payload)'/>
<doc f='llvm/lldb/source/Plugins/TypeSystem/Clang/TypeSystemClang.h' l='720'>/// Using the current type, create a new typedef to that type using
  /// &quot;typedef_name&quot; as the name and &quot;decl_ctx&quot; as the decl context.
  /// \param opaque_payload is an opaque TypePayloadClang.</doc>
<inh f='llvm/lldb/include/lldb/Symbol/TypeSystem.h' l='269' c='_ZN12lldb_private10TypeSystem13CreateTypedefEPvPKcRKNS_19CompilerDeclContextEj'/>
<def f='llvm/lldb/source/Plugins/TypeSystem/Clang/TypeSystemClang.cpp' l='4504' ll='4544' type='lldb_private::CompilerType lldb_private::TypeSystemClang::CreateTypedef(lldb::opaque_compiler_type_t type, const char * typedef_name, const lldb_private::CompilerDeclContext &amp; compiler_decl_ctx, uint32_t payload)'/>
