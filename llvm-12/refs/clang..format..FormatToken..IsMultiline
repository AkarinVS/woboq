<use f='llvm/clang/lib/Format/FormatToken.h' l='213' u='w' c='_ZN5clang6format11FormatTokenC1Ev'/>
<dec f='llvm/clang/lib/Format/FormatToken.h' l='244' type='unsigned int'/>
<offset>513</offset>
<doc f='llvm/clang/lib/Format/FormatToken.h' l='243'>/// Whether the token text contains newlines (escaped or not).</doc>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='516' u='r' c='_ZN5clang6format20ContinuationIndenter9mustBreakERKNS0_9LineStateE'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1822' u='r' c='_ZN5clang6format20ContinuationIndenter15handleEndOfLineERKNS0_11FormatTokenERNS0_9LineStateEbbb'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='2370' u='r' c='_ZN5clang6format20ContinuationIndenter21nextIsMultilineStringERKNS0_9LineStateE'/>
<use f='llvm/clang/lib/Format/FormatTokenLexer.cpp' l='77' u='r' c='_ZN5clang6format16FormatTokenLexer3lexEv'/>
<use f='llvm/clang/lib/Format/FormatTokenLexer.cpp' l='625' u='w' c='_ZN5clang6format16FormatTokenLexer42handleCSharpVerbatimAndInterpolatedStringsEv'/>
<use f='llvm/clang/lib/Format/FormatTokenLexer.cpp' l='692' u='w' c='_ZN5clang6format16FormatTokenLexer21handleTemplateStringsEv'/>
<use f='llvm/clang/lib/Format/FormatTokenLexer.cpp' l='734' u='r' c='_ZN5clang6format16FormatTokenLexer15tryMerge_TMacroEv'/>
<use f='llvm/clang/lib/Format/FormatTokenLexer.cpp' l='1017' u='w' c='_ZN5clang6format16FormatTokenLexer12getNextTokenEv'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='2482' u='r' c='_ZN5clang6format14TokenAnnotator30calculateFormattingInformationERNS0_13AnnotatedLineE'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='2541' u='r' c='_ZN5clang6format14TokenAnnotator30calculateFormattingInformationERNS0_13AnnotatedLineE'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='3647' u='r' c='_ZN5clang6format14TokenAnnotator15mustBreakBeforeERKNS0_13AnnotatedLineERKNS0_11FormatTokenE'/>
