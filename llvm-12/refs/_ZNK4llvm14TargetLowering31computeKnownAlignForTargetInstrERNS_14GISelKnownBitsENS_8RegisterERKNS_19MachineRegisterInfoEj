<dec f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3402' type='llvm::Align llvm::TargetLowering::computeKnownAlignForTargetInstr(llvm::GISelKnownBits &amp; Analysis, llvm::Register R, const llvm::MachineRegisterInfo &amp; MRI, unsigned int Depth = 0) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3398'>/// Determine the known alignment for the pointer value \p R. This is can
  /// typically be inferred from the number of low known 0 bits. However, for a
  /// pointer with a non-integral address space, the alignment value may be
  /// independent from the known low bits.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/GISelKnownBits.cpp' l='46' u='c' c='_ZN4llvm14GISelKnownBits21computeKnownAlignmentENS_8RegisterEj'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='2945' ll='2949' type='llvm::Align llvm::TargetLowering::computeKnownAlignForTargetInstr(llvm::GISelKnownBits &amp; Analysis, llvm::Register R, const llvm::MachineRegisterInfo &amp; MRI, unsigned int Depth = 0) const'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIISelLowering.cpp' l='11554' c='_ZNK4llvm16SITargetLowering31computeKnownAlignForTargetInstrERNS_14GISelKnownBitsENS_8RegisterERKNS_19MachineRegisterInfoEj'/>
