<def f='llvm/llvm/lib/Target/Mips/MipsSubtarget.h' l='373' type='bool llvm::MipsSubtarget::systemSupportsUnalignedAccess() const'/>
<doc f='llvm/llvm/lib/Target/Mips/MipsSubtarget.h' l='368'>/// Does the system support unaligned memory access.
  ///
  /// MIPS32r6/MIPS64r6 require full unaligned access support but does not
  /// specify which component of the system provides it. Hardware, software, and
  /// hybrid implementations are all valid.</doc>
<use f='llvm/llvm/lib/Target/Mips/MipsISelLowering.cpp' l='2671' u='c' c='_ZNK4llvm18MipsTargetLowering9lowerLOADENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsISelLowering.cpp' l='2798' u='c' c='_ZNK4llvm18MipsTargetLowering10lowerSTOREENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsInstructionSelector.cpp' l='466' u='c' c='_ZN12_GLOBAL__N_123MipsInstructionSelector6selectERN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsLegalizerInfo.cpp' l='109' u='c' c='_ZN4llvm17MipsLegalizerInfoC1ERKNS_13MipsSubtargetE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsLegalizerInfo.cpp' l='112' u='c' c='_ZN4llvm17MipsLegalizerInfoC1ERKNS_13MipsSubtargetE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsLegalizerInfo.cpp' l='140' u='c' c='_ZN4llvm17MipsLegalizerInfoC1ERKNS_13MipsSubtargetE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsPreLegalizerCombiner.cpp' l='56' u='c' c='_ZNK12_GLOBAL__N_128MipsPreLegalizerCombinerInfo7combineERN4llvm19GISelChangeObserverERNS1_12MachineInstrERNS1_16MachineIRBuilderE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsRegisterBankInfo.cpp' l='159' u='c' c='_ZL34isGprbTwoInstrUnalignedLoadOrStorePKN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsSEISelLowering.cpp' l='428' u='c' c='_ZNK4llvm20MipsSETargetLowering30allowsMisalignedMemoryAccessesENS_3EVTEjjNS_17MachineMemOperand5FlagsEPb'/>
