<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='3075' type='void clang::CodeGen::CodeGenFunction::EmitParmDecl(const clang::VarDecl &amp; D, clang::CodeGen::CodeGenFunction::ParamValue Arg, unsigned int ArgNo)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='3074'>/// EmitParmDecl - Emit a ParmVarDecl or an ImplicitParamDecl.</doc>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='2845' u='c' c='_ZN5clang7CodeGen15CodeGenFunction18EmitFunctionPrologERKNS0_14CGFunctionInfoEPN4llvm8FunctionERKNS0_15FunctionArgListE'/>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='2848' u='c' c='_ZN5clang7CodeGen15CodeGenFunction18EmitFunctionPrologERKNS0_14CGFunctionInfoEPN4llvm8FunctionERKNS0_15FunctionArgListE'/>
<use f='llvm/clang/lib/CodeGen/CGClass.cpp' l='2280' u='c' c='_ZN5clang7CodeGen15CodeGenFunction39EmitInlinedInheritingCXXConstructorCallEPKNS_18CXXConstructorDeclENS_11CXXCtorTypeEbbRNS0_11CallArgListE'/>
<def f='llvm/clang/lib/CodeGen/CGDecl.cpp' l='2417' ll='2588' type='void clang::CodeGen::CodeGenFunction::EmitParmDecl(const clang::VarDecl &amp; D, clang::CodeGen::CodeGenFunction::ParamValue Arg, unsigned int ArgNo)'/>
<doc f='llvm/clang/lib/CodeGen/CGDecl.cpp' l='2415'>/// Emit an alloca (or GlobalValue depending on target)
/// for the specified parameter and set up LocalDeclMap.</doc>
