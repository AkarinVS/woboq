<dec f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='4542' type='ISD::MemIndexType llvm::TargetLowering::getCanonicalIndexType(ISD::MemIndexType IndexType, llvm::EVT MemVT, llvm::SDValue Offsets) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='4541'>/// Give targets the chance to reduce the number of distinct addresing modes.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='1894' u='c' c='_ZN4llvm16DAGTypeLegalizer21PromoteIntOp_MSCATTEREPNS_19MaskedScatterSDNodeEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='7377' u='c' c='_ZN4llvm12SelectionDAG15getMaskedGatherENS_8SDVTListENS_3EVTERKNS_5SDLocENS_8ArrayRefINS_7SDValueEEEPNS_17MachineMemOperandENS_3ISD12MemIndexTypeENSB_11LoadExtTypeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='7424' u='c' c='_ZN4llvm12SelectionDAG16getMaskedScatterENS_8SDVTListENS_3EVTERKNS_5SDLocENS_8ArrayRefINS_7SDValueEEEPNS_17MachineMemOperandENS_3ISD12MemIndexTypeEb'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='7643' ll='7658' type='ISD::MemIndexType llvm::TargetLowering::getCanonicalIndexType(ISD::MemIndexType IndexType, llvm::EVT MemVT, llvm::SDValue Offsets) const'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='7641'>// Convert redundant addressing modes (e.g. scaling is redundant
// when accessing bytes).</doc>
