<def f='llvm/clang/include/clang/Serialization/ASTBitCodes.h' l='223' ll='238'/>
<use f='llvm/clang/include/clang/Serialization/ASTBitCodes.h' l='248'/>
<size>8</size>
<doc f='llvm/clang/include/clang/Serialization/ASTBitCodes.h' l='219'>/// Offset in the AST file. Use splitted 64-bit integer into low/high
    /// parts to keep structure alignment 32-bit (it is important because
    /// blobs in bitstream are 32-bit aligned). This structure is serialized
    /// &quot;as is&quot; to the AST file.</doc>
<mbr r='clang::serialization::UnderalignedInt64::BitOffsetLow' o='0' t='uint32_t'/>
<mbr r='clang::serialization::UnderalignedInt64::BitOffsetHigh' o='32' t='uint32_t'/>
<fun r='_ZN5clang13serialization17UnderalignedInt64C1Ev'/>
<fun r='_ZN5clang13serialization17UnderalignedInt64C1Em'/>
<fun r='_ZN5clang13serialization17UnderalignedInt6412setBitOffsetEm'/>
<fun r='_ZNK5clang13serialization17UnderalignedInt6412getBitOffsetEv'/>
<use f='llvm/clang/include/clang/Serialization/ModuleFile.h' l='475'/>
<size>8</size>
<use f='llvm/clang/include/clang/Serialization/ASTWriter.h' l='260'/>
<size>8</size>
<use f='llvm/clang/lib/Serialization/ASTReader.cpp' l='3110' c='_ZN5clang9ASTReader12ReadASTBlockERNS_13serialization10ModuleFileEj'/>
<size>8</size>
