<def f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='104' ll='115'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='118' c='_ZN5clang11transformer4editENS0_7ASTEditE'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='129' c='_ZN5clang11transformer8editListEN4llvm11SmallVectorINS0_7ASTEditELj1EEE'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='140' c='_ZN5clang11transformer7ifBoundENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_7ASTEditES7_'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='141' c='_ZN5clang11transformer7ifBoundENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_7ASTEditES7_'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='148' c='_ZN5clang11transformer7ifBoundENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_7ASTEditE'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='161' c='_ZN5clang11transformer6detail11injectEditsENS0_7ASTEditE'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='175' c='_ZN5clang11transformer8changeToESt8functionIFN4llvm8ExpectedINS_15CharSourceRangeEEERKNS_12ast_matchers11MatchFinder11MatchResultEEESt10shared_ptrINS04291248'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='177' c='_ZN5clang11transformer6changeESt8functionIFN4llvm8ExpectedINS_15CharSourceRangeEEERKNS_12ast_matchers11MatchFinder11MatchResultEEESt10shared_ptrINS0_14007161'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='187' c='_ZN5clang11transformer8changeToESt10shared_ptrINS0_16MatchComputationINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='191' c='_ZN5clang11transformer6changeESt10shared_ptrINS0_16MatchComputationINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='197' c='_ZN5clang11transformer12insertBeforeESt8functionIFN4llvm8ExpectedINS_15CharSourceRangeEEERKNS_12ast_matchers11MatchFinder11MatchResultEEESt10shared_pt13442136'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='203' c='_ZN5clang11transformer11insertAfterESt8functionIFN4llvm8ExpectedINS_15CharSourceRangeEEERKNS_12ast_matchers11MatchFinder11MatchResultEEESt10shared_ptr579046'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='208' c='_ZN5clang11transformer6removeESt8functionIFN4llvm8ExpectedINS_15CharSourceRangeEEERKNS_12ast_matchers11MatchFinder11MatchResultEEE'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='212' c='_ZN5clang11transformer10addIncludeESt8functionIFN4llvm8ExpectedINS_15CharSourceRangeEEERKNS_12ast_matchers11MatchFinder11MatchResultEEENS2_9StringRefENS0_13IncludeFormatE'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='219' c='_ZN5clang11transformer10addIncludeEN4llvm9StringRefENS0_13IncludeFormatE'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='237' c='_ZN5clang11transformer12withMetadataENS0_7ASTEditET_'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='237' c='_ZN5clang11transformer12withMetadataENS0_7ASTEditET_'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='297' c='_ZN5clang11transformer8makeRuleENS_12ast_matchers8internal15DynTypedMatcherEN4llvm11SmallVectorINS0_7ASTEditELj1EEESt10shared_ptrINS0_16MatchComputati7101656'/>
<use f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='305' c='_ZN5clang11transformer8makeRuleENS_12ast_matchers8internal15DynTypedMatcherENS0_7ASTEditESt10shared_ptrINS0_16MatchComputationINSt7__cxx1112basic_stri8523480'/>
<use f='llvm/clang/lib/Tooling/Transformer/RewriteRule.cpp' l='36' c='_ZL14translateEditsRKN5clang12ast_matchers11MatchFinder11MatchResultEN4llvm8ArrayRefINS_11transformer7ASTEditEEE'/>
<use f='llvm/clang/lib/Tooling/Transformer/RewriteRule.cpp' l='69' c='_ZN5clang11transformer8editListEN4llvm11SmallVectorINS0_7ASTEditELj1EEE'/>
<use f='llvm/clang/lib/Tooling/Transformer/RewriteRule.cpp' l='75' c='_ZN5clang11transformer4editENS0_7ASTEditE'/>
<use f='llvm/clang/lib/Tooling/Transformer/RewriteRule.cpp' l='117' c='_ZN5clang11transformer8changeToESt8functionIFN4llvm8ExpectedINS_15CharSourceRangeEEERKNS_12ast_matchers11MatchFinder11MatchResultEEESt10shared_ptrINS04291248'/>
<use f='llvm/clang/lib/Tooling/Transformer/RewriteRule.cpp' l='118' c='_ZN5clang11transformer8changeToESt8functionIFN4llvm8ExpectedINS_15CharSourceRangeEEERKNS_12ast_matchers11MatchFinder11MatchResultEEESt10shared_ptrINS04291248'/>
<use f='llvm/clang/lib/Tooling/Transformer/RewriteRule.cpp' l='146' c='_ZN5clang11transformer6removeESt8functionIFN4llvm8ExpectedINS_15CharSourceRangeEEERKNS_12ast_matchers11MatchFinder11MatchResultEEE'/>
<use f='llvm/clang/lib/Tooling/Transformer/RewriteRule.cpp' l='160' c='_ZN5clang11transformer10addIncludeESt8functionIFN4llvm8ExpectedINS_15CharSourceRangeEEERKNS_12ast_matchers11MatchFinder11MatchResultEEENS2_9StringRefENS0_13IncludeFormatE'/>
<use f='llvm/clang/lib/Tooling/Transformer/RewriteRule.cpp' l='162' c='_ZN5clang11transformer10addIncludeESt8functionIFN4llvm8ExpectedINS_15CharSourceRangeEEERKNS_12ast_matchers11MatchFinder11MatchResultEEENS2_9StringRefENS0_13IncludeFormatE'/>
<size>104</size>
<doc f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='68'>// Description of a source-code edit, expressed in terms of an AST node.
// Includes: an ID for the (bound) node, a selector for source related to the
// node, a replacement and, optionally, an explanation for the edit.
//
// * Target: the source code impacted by the rule. This identifies an AST node,
//   or part thereof (\c Part), whose source range indicates the extent of the
//   replacement applied by the replacement term.  By default, the extent is the
//   node matched by the pattern term (\c NodePart::Node). Target&apos;s are typed
//   (\c Kind), which guides the determination of the node extent.
//
// * Replacement: a function that produces a replacement string for the target,
//   based on the match result.
//
// * Note: (optional) a note specifically for this edit, potentially referencing
//   elements of the match.  This will be displayed to the user, where possible;
//   for example, in clang-tidy diagnostics.  Use of notes should be rare --
//   explanations of the entire rewrite should be set in the rule
//   (`RewriteRule::Explanation`) instead.  Notes serve the rare cases wherein
//   edit-specific diagnostics are required.
//
// `ASTEdit` should be built using the `change` convenience functions. For
// example,
// \code
//   changeTo(name(fun), cat(&quot;Frodo&quot;))
// \endcode
// Or, if we use Stencil for the TextGenerator:
// \code
//   using stencil::cat;
//   changeTo(statement(thenNode), cat(&quot;{&quot;, thenNode, &quot;}&quot;))
//   changeTo(callArgs(call), cat(x, &quot;,&quot;, y))
// \endcode
// Or, if you are changing the node corresponding to the rule&apos;s matcher, you can
// use the single-argument override of \c change:
// \code
//   changeTo(cat(&quot;different_expr&quot;))
// \endcode</doc>
<mbr r='clang::transformer::ASTEdit::Kind' o='0' t='clang::transformer::EditKind'/>
<mbr r='clang::transformer::ASTEdit::TargetRange' o='64' t='clang::transformer::RangeSelector'/>
<mbr r='clang::transformer::ASTEdit::Replacement' o='320' t='clang::transformer::TextGenerator'/>
<mbr r='clang::transformer::ASTEdit::Note' o='448' t='clang::transformer::TextGenerator'/>
<mbr r='clang::transformer::ASTEdit::Metadata' o='576' t='clang::transformer::AnyGenerator'/>
