<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExplodedGraph.h' l='440' type='std::unique_ptr&lt;ExplodedGraph&gt; clang::ento::ExplodedGraph::trim(ArrayRef&lt;const clang::ento::ExplodedGraph::NodeTy *&gt; Nodes, clang::ento::InterExplodedGraphMap * ForwardMap = nullptr, clang::ento::InterExplodedGraphMap * InverseMap = nullptr) const'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExplodedGraph.h' l='429'>/// Creates a trimmed version of the graph that only contains paths leading
  /// to the given nodes.
  ///
  /// \param Nodes The nodes which must appear in the final graph. Presumably
  ///              these are end-of-path nodes (i.e. they have no successors).
  /// \param[out] ForwardMap A optional map from nodes in this graph to nodes in
  ///                        the returned graph.
  /// \param[out] InverseMap An optional map from nodes in the returned graph to
  ///                        nodes in this graph.
  /// \returns The trimmed graph</doc>
<use f='llvm/clang/lib/StaticAnalyzer/Core/BugReporter.cpp' l='2548' u='c' c='_ZN12_GLOBAL__N_113BugPathGetterC1EPKN5clang4ento13ExplodedGraphERN4llvm8ArrayRefIPNS2_22PathSensitiveBugReportEEE'/>
<def f='llvm/clang/lib/StaticAnalyzer/Core/ExplodedGraph.cpp' l='441' ll='541' type='std::unique_ptr&lt;ExplodedGraph&gt; clang::ento::ExplodedGraph::trim(ArrayRef&lt;const clang::ento::ExplodedGraph::NodeTy *&gt; Sinks, clang::ento::InterExplodedGraphMap * ForwardMap = nullptr, clang::ento::InterExplodedGraphMap * InverseMap = nullptr) const'/>
