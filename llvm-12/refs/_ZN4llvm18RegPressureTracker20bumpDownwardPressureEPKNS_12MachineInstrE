<dec f='llvm/llvm/include/llvm/CodeGen/RegisterPressure.h' l='559' type='void llvm::RegPressureTracker::bumpDownwardPressure(const llvm::MachineInstr * MI)'/>
<def f='llvm/llvm/lib/CodeGen/RegisterPressure.cpp' l='1284' ll='1330' type='void llvm::RegPressureTracker::bumpDownwardPressure(const llvm::MachineInstr * MI)'/>
<use f='llvm/llvm/lib/CodeGen/RegisterPressure.cpp' l='1351' u='c' c='_ZN4llvm18RegPressureTracker27getMaxDownwardPressureDeltaEPKNS_12MachineInstrERNS_16RegPressureDeltaENS_8ArrayRefINS_14PressureChangeEEENS6_IjEE'/>
<use f='llvm/llvm/lib/CodeGen/RegisterPressure.cpp' l='1390' u='c' c='_ZN4llvm18RegPressureTracker19getDownwardPressureEPKNS_12MachineInstrERSt6vectorIjSaIjEES7_'/>
<doc f='llvm/llvm/lib/CodeGen/RegisterPressure.cpp' l='1278'>/// Record the downward impact of a single instruction on current register
/// pressure. Unlike the advance/recede pressure tracking interface, this does
/// not discover live in/outs.
///
/// This is intended for speculative queries. It leaves pressure inconsistent
/// with the current position, so must be restored by the caller.</doc>
