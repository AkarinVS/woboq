<dec f='llvm/lldb/include/lldb/Symbol/VariableList.h' l='57' type='size_t lldb_private::VariableList::AppendVariablesIfUnique(const lldb_private::RegularExpression &amp; regex, lldb_private::VariableList &amp; var_list, size_t &amp; total_matches)'/>
<doc f='llvm/lldb/include/lldb/Symbol/VariableList.h' l='52'>// Returns the actual number of unique variables that were added to the list.
  // &quot;total_matches&quot; will get updated with the actually number of matches that
  // were found regardless of whether they were unique or not to allow for
  // error conditions when nothing is found, versus conditions where any
  // variables that match &quot;regex&quot; were already in &quot;var_list&quot;.</doc>
<use f='llvm/lldb/source/Commands/CommandObjectFrame.cpp' l='536' u='c' c='_ZN26CommandObjectFrameVariable9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<def f='llvm/lldb/source/Symbol/VariableList.cpp' l='111' ll='126' type='size_t lldb_private::VariableList::AppendVariablesIfUnique(const lldb_private::RegularExpression &amp; regex, lldb_private::VariableList &amp; var_list, size_t &amp; total_matches)'/>
