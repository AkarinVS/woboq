<dec f='llvm/polly/lib/External/isl/isl_tab.h' l='305' type='int isl_tab_row_is_redundant(struct isl_tab * tab, int row)'/>
<def f='llvm/polly/lib/External/isl/isl_tab.c' l='742' ll='768' type='int isl_tab_row_is_redundant(struct isl_tab * tab, int row)'/>
<use f='llvm/polly/lib/External/isl/isl_tab.c' l='1187' u='c' c='isl_tab_pivot'/>
<use f='llvm/polly/lib/External/isl/isl_tab.c' l='1933' u='c' c='isl_tab_add_ineq'/>
<use f='llvm/polly/lib/External/isl/isl_tab.c' l='1944' u='c' c='isl_tab_add_ineq'/>
<use f='llvm/polly/lib/External/isl/isl_tab.c' l='4110' u='c' c='isl_tab_ineq_type'/>
<doc f='llvm/polly/lib/External/isl/isl_tab.c' l='736'>/* Return 1 if row &quot;row&quot; represents an obviously redundant inequality.
 * This means
 *	- it represents an inequality or a variable
 *	- that is the sum of a non-negative sample value and a positive
 *	  combination of zero or more non-negative constraints.
 */</doc>
<use f='llvm/polly/lib/External/isl/isl_tab_pip.c' l='1676' u='c' c='add_lexmin_ineq'/>
<use f='llvm/polly/lib/External/isl/isl_tab_pip.c' l='1685' u='c' c='add_lexmin_ineq'/>
