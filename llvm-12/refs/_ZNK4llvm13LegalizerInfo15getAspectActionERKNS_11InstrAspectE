<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='1299' type='std::pair&lt;LegalizeAction, LLT&gt; llvm::LegalizerInfo::getAspectAction(const llvm::InstrAspect &amp; Aspect) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='1292'>/// Determine what action should be taken to legalize the given generic
  /// instruction opcode, type-index and type. Requires computeTables to have
  /// been called.
  ///
  /// \returns a pair consisting of the kind of legalization that should be
  /// performed and the destination type.</doc>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerInfo.cpp' l='388' ll='397' type='std::pair&lt;LegalizeAction, LLT&gt; llvm::LegalizerInfo::getAspectAction(const llvm::InstrAspect &amp; Aspect) const'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerInfo.cpp' l='473' u='c' c='_ZNK4llvm13LegalizerInfo9getActionERKNS_13LegalityQueryE'/>
<doc f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerInfo.cpp' l='384'>// FIXME: inefficient implementation for now. Without ComputeValueVTs we&apos;re
// probably going to need specialized lookup structures for various types before
// we have any hope of doing well with something like &lt;13 x i3&gt;. Even the common
// cases should do better than what we have now.</doc>
