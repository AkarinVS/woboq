<dec f='llvm/clang/include/clang/Serialization/ASTReader.h' l='1225' type='clang::Stmt * clang::ASTReader::ReadStmtFromStream(clang::ASTReader::ModuleFile &amp; F)'/>
<doc f='llvm/clang/include/clang/Serialization/ASTReader.h' l='1224'>/// Reads a statement from the specified cursor.</doc>
<use f='llvm/clang/lib/Serialization/ASTReader.cpp' l='7495' u='c' c='_ZN5clang9ASTReader19GetExternalDeclStmtEm'/>
<use f='llvm/clang/lib/Serialization/ASTReaderStmt.cpp' l='2587' u='c' c='_ZN5clang9ASTReader8ReadStmtERNS_13serialization10ModuleFileE'/>
<def f='llvm/clang/lib/Serialization/ASTReaderStmt.cpp' l='2610' ll='3815' type='clang::Stmt * clang::ASTReader::ReadStmtFromStream(clang::ASTReader::ModuleFile &amp; F)'/>
<doc f='llvm/clang/lib/Serialization/ASTReaderStmt.cpp' l='2603'>// Within the bitstream, expressions are stored in Reverse Polish
// Notation, with each of the subexpressions preceding the
// expression they are stored in. Subexpressions are stored from last to first.
// To evaluate expressions, we continue reading expressions and placing them on
// the stack, with expressions having operands removing those operands from the
// stack. Evaluation terminates when we see a STMT_STOP record, and
// the single remaining expression on the stack is our result.</doc>
