<def f='llvm/llvm/lib/IR/SafepointIRVerifier.cpp' l='316' ll='322'/>
<use f='llvm/llvm/lib/IR/SafepointIRVerifier.cpp' l='328' c='_ZL11getBaseTypePKN4llvm5ValueE'/>
<use f='llvm/llvm/lib/IR/SafepointIRVerifier.cpp' l='813' c='_ZN12_GLOBAL__N_119InstructionVerifier17verifyInstructionEPKNS_12GCPtrTrackerERKN4llvm11InstructionERKNS4_8DenseSetIPKNS4_5ValueENS4_12DenseMapInfoISB_EEEE'/>
<use f='llvm/llvm/lib/IR/SafepointIRVerifier.cpp' l='813' c='_ZN12_GLOBAL__N_119InstructionVerifier17verifyInstructionEPKNS_12GCPtrTrackerERKN4llvm11InstructionERKNS4_8DenseSetIPKNS4_5ValueENS4_12DenseMapInfoISB_EEEE'/>
<doc f='llvm/llvm/lib/IR/SafepointIRVerifier.cpp' l='311'>/// A given derived pointer can have multiple base pointers through phi/selects.
/// This type indicates when the base pointer is exclusively constant
/// (ExclusivelySomeConstant), and if that constant is proven to be exclusively
/// null, we record that as ExclusivelyNull. In all other cases, the BaseType is
/// NonConstant.</doc>
