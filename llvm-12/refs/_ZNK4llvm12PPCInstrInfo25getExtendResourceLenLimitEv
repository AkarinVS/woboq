<inh f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1147' c='_ZNK4llvm15TargetInstrInfo25getExtendResourceLenLimitEv'/>
<def f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.h' l='385' type='int llvm::PPCInstrInfo::getExtendResourceLenLimit() const'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.h' l='377'>/// On PowerPC, we try to reassociate FMA chain which will increase
  /// instruction size. Set extension resource length limit to 1 for edge case.
  /// Resource Length is calculated by scaled resource usage in getCycles().
  /// Because of the division in getCycles(), it returns different cycles due to
  /// legacy scaled resource usage. So new resource length may be same with
  /// legacy or 1 bigger than legacy.
  /// We need to execlude the 1 bigger case even the resource length is not
  /// perserved for more FMA chain reassociations on PowerPC.</doc>
