<dec f='llvm/llvm/lib/Target/RISCV/RISCVISelLowering.h' l='307' type='llvm::SDValue llvm::RISCVTargetLowering::lowerSPLATVECTOR(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG) const'/>
<use f='llvm/llvm/lib/Target/RISCV/RISCVISelLowering.cpp' l='772' u='c' c='_ZNK4llvm19RISCVTargetLowering14LowerOperationENS_7SDValueERNS_12SelectionDAGE'/>
<def f='llvm/llvm/lib/Target/RISCV/RISCVISelLowering.cpp' l='1209' ll='1256' type='llvm::SDValue llvm::RISCVTargetLowering::lowerSPLATVECTOR(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG) const'/>
<doc f='llvm/llvm/lib/Target/RISCV/RISCVISelLowering.cpp' l='1205'>// Custom-lower a SPLAT_VECTOR where XLEN&lt;SEW, as the SEW element type is
// illegal (currently only vXi64 RV32).
// FIXME: We could also catch non-constant sign-extended i32 values and lower
// them to SPLAT_VECTOR_I64</doc>
