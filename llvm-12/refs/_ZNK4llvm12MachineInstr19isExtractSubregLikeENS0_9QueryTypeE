<def f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='936' ll='938' type='bool llvm::MachineInstr::isExtractSubregLike(llvm::MachineInstr::QueryType Type = IgnoreBundle) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='925'>/// Return true if this instruction behaves
  /// the same way as the generic EXTRACT_SUBREG instructions.
  /// E.g., on ARM,
  /// rX, rY VMOVRRD dZ
  /// is equivalent to two EXTRACT_SUBREG:
  /// rX = EXTRACT_SUBREG dZ, ssub_0
  /// rY = EXTRACT_SUBREG dZ, ssub_1
  ///
  /// Note that for the optimizers to be able to take advantage of
  /// this property, TargetInstrInfo::getExtractSubregLikeInputs has to be
  /// override accordingly.</doc>
<use f='llvm/llvm/lib/CodeGen/PeepholeOptimizer.cpp' l='254' u='c' c='_ZN12_GLOBAL__N_117PeepholeOptimizer19isUncoalescableCopyERKN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/PeepholeOptimizer.cpp' l='1093' u='c' c='_ZL15getCopyRewriterRN4llvm12MachineInstrERKNS_15TargetInstrInfoE'/>
<use f='llvm/llvm/lib/CodeGen/PeepholeOptimizer.cpp' l='2069' u='c' c='_ZN12_GLOBAL__N_112ValueTracker17getNextSourceImplEv'/>
