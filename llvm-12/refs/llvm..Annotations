<def f='llvm/llvm/include/llvm/Testing/Support/Annotations.h' l='46' ll='85'/>
<use f='llvm/clang/unittests/AST/SourceLocationTest.cpp' l='897' c='_ZN12_GLOBAL__N_130Decl_MemberPointerStarLoc_Test8TestBodyEv'/>
<size>96</size>
<doc f='llvm/llvm/include/llvm/Testing/Support/Annotations.h' l='19'>/// Annotations lets you mark points and ranges inside source code, for tests:
///
///    Annotations Example(R&quot;cpp(
///       int complete() { x.pri^ }         // ^ indicates a point
///       void err() { [[&quot;hello&quot; == 42]]; } // [[this is a range]]
///       $definition^class Foo{};          // points can be named: &quot;definition&quot;
///       $fail[[static_assert(false, &quot;&quot;)]] // ranges can be named too: &quot;fail&quot;
///    )cpp&quot;);
///
///    StringRef Code = Example.code();             // annotations stripped.
///    std::vector&lt;size_t&gt; PP = Example.points();   // all unnamed points
///    size_t P = Example.point();                  // there must be exactly one
///    llvm::Range R = Example.range(&quot;fail&quot;);       // find named ranges
///
/// Points/ranges are coordinated into `code()` which is stripped of
/// annotations.
///
/// Ranges may be nested (and points can be inside ranges), but there&apos;s no way
/// to define general overlapping ranges.
///
/// FIXME: the choice of the marking syntax makes it impossible to represent
///        some of the C++ and Objective C constructs (including common ones
///        like C++ attributes). We can fix this by:
///          1. introducing an escaping mechanism for the special characters,
///          2. making characters for marking points and ranges configurable,
///          3. changing the syntax to something less commonly used,
///          4. ...</doc>
<fun r='_ZN4llvm11AnnotationsC1ENS_9StringRefE'/>
<fun r='_ZNK4llvm11Annotations4codeEv'/>
<fun r='_ZNK4llvm11Annotations5pointENS_9StringRefE'/>
<fun r='_ZNK4llvm11Annotations6pointsENS_9StringRefE'/>
<fun r='_ZNK4llvm11Annotations5rangeENS_9StringRefE'/>
<fun r='_ZNK4llvm11Annotations6rangesENS_9StringRefE'/>
<mbr r='llvm::Annotations::Code' o='0' t='std::string'/>
<mbr r='llvm::Annotations::Points' o='256' t='llvm::StringMap&lt;llvm::SmallVector&lt;size_t, 1&gt; &gt;'/>
<mbr r='llvm::Annotations::Ranges' o='512' t='llvm::StringMap&lt;llvm::SmallVector&lt;Range, 1&gt; &gt;'/>
<use f='llvm/clang/unittests/Sema/CodeCompleteTest.cpp' l='112' c='_ZN12_GLOBAL__N_121runCodeCompleteOnCodeEN4llvm9StringRefE'/>
<use f='llvm/clang/unittests/Sema/CodeCompleteTest.cpp' l='119' c='_ZN12_GLOBAL__N_121collectPreferredTypesEN4llvm9StringRefEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<size>96</size>
<use f='llvm/clang/unittests/Tooling/SourceCodeTest.cpp' l='91'/>
<use f='llvm/clang/unittests/Tooling/SourceCodeTest.cpp' l='110' c='_ZN12_GLOBAL__N_120AnnotatedCodeVisitor16runOverAnnotatedEN4llvm9StringRefESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EE'/>
<use f='llvm/clang/unittests/Tooling/SourceCodeTest.cpp' l='437' c='_ZN12_GLOBAL__N_161SourceCodeTest_EditRangeWithMacroExpansionsShouldSucceed_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/SourceCodeTest.cpp' l='454' c='_ZN12_GLOBAL__N_156SourceCodeTest_EditWholeMacroExpansionShouldSucceed_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/SourceCodeTest.cpp' l='483' c='_ZN12_GLOBAL__N_150SourceCodeTest_EditWholeMacroArgShouldSucceed_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/SourceCodeTest.cpp' l='498' c='_ZN12_GLOBAL__N_152SourceCodeTest_EditPartialMacroArgShouldSucceed_Test8TestBodyEv'/>
<size>96</size>
<use f='llvm/clang/unittests/Tooling/Syntax/BuildTreeTest.cpp' l='45' c='_ZN12_GLOBAL__N_119BuildSyntaxTreeTest26treeDumpEqualOnAnnotationsEN4llvm9StringRefENS1_8ArrayRefIS2_EE'/>
<size>96</size>
<use f='llvm/clang/unittests/Tooling/Syntax/MutationsTest.cpp' l='24'/>
<use f='llvm/clang/unittests/Tooling/Syntax/MutationsTest.cpp' l='28' c='_ZN12_GLOBAL__N_112MutationTest19CheckTransformationESt8functionIFvRKN4llvm11AnnotationsEPN5clang6syntax15TranslationUnitEEENSt7__cxx1112basic_stringI16728740'/>
<use f='llvm/clang/unittests/Tooling/Syntax/MutationsTest.cpp' l='46'/>
<size>96</size>
<use f='llvm/clang/unittests/Tooling/Syntax/TokensTest.cpp' l='162' c='_ZN12_GLOBAL__N_118TokenCollectorTest8tokenizeEN4llvm9StringRefE'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TokensTest.cpp' l='352' c='_ZN12_GLOBAL__N_133TokenCollectorTest_Locations_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TokensTest.cpp' l='549' c='_ZN12_GLOBAL__N_139TokenCollectorTest_LateBoundTokens_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TokensTest.cpp' l='849' c='_ZN12_GLOBAL__N_138TokenBufferTest_TokensToFileRange_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TokensTest.cpp' l='870' c='_ZN12_GLOBAL__N_136TokenBufferTest_MacroExpansions_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TokensTest.cpp' l='894' c='_ZN12_GLOBAL__N_129TokenBufferTest_Touching_Test8TestBodyEv'/>
<size>96</size>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='24' c='_ZN12_GLOBAL__N_132AnnotationsTest_CleanedCode_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='30' c='_ZN12_GLOBAL__N_127AnnotationsTest_Points_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='31' c='_ZN12_GLOBAL__N_127AnnotationsTest_Points_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='32' c='_ZN12_GLOBAL__N_127AnnotationsTest_Points_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='35' c='_ZN12_GLOBAL__N_127AnnotationsTest_Points_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='39' c='_ZN12_GLOBAL__N_127AnnotationsTest_Points_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='42' c='_ZN12_GLOBAL__N_127AnnotationsTest_Points_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='47' c='_ZN12_GLOBAL__N_127AnnotationsTest_Ranges_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='48' c='_ZN12_GLOBAL__N_127AnnotationsTest_Ranges_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='49' c='_ZN12_GLOBAL__N_127AnnotationsTest_Ranges_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='52' c='_ZN12_GLOBAL__N_127AnnotationsTest_Ranges_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='53' c='_ZN12_GLOBAL__N_127AnnotationsTest_Ranges_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='54' c='_ZN12_GLOBAL__N_127AnnotationsTest_Ranges_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='57' c='_ZN12_GLOBAL__N_127AnnotationsTest_Ranges_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='61' c='_ZN12_GLOBAL__N_127AnnotationsTest_Ranges_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='65' c='_ZN12_GLOBAL__N_127AnnotationsTest_Nested_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='73' c='_ZN12_GLOBAL__N_126AnnotationsTest_Named_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='74' c='_ZN12_GLOBAL__N_126AnnotationsTest_Named_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='77' c='_ZN12_GLOBAL__N_126AnnotationsTest_Named_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='78' c='_ZN12_GLOBAL__N_126AnnotationsTest_Named_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/AnnotationsTest.cpp' l='81' c='_ZN12_GLOBAL__N_126AnnotationsTest_Named_Test8TestBodyEv'/>
<size>96</size>
