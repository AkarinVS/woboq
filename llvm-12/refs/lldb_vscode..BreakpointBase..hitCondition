<dec f='llvm/lldb/tools/lldb-vscode/BreakpointBase.h' l='25' type='std::string'/>
<use f='llvm/lldb/tools/lldb-vscode/BreakpointBase.cpp' l='16' u='w' c='_ZN11lldb_vscode14BreakpointBaseC1ERKN4llvm4json6ObjectE'/>
<use f='llvm/lldb/tools/lldb-vscode/BreakpointBase.cpp' l='23' u='r' c='_ZN11lldb_vscode14BreakpointBase15SetHitConditionEv'/>
<use f='llvm/lldb/tools/lldb-vscode/BreakpointBase.cpp' l='32' u='r' c='_ZN11lldb_vscode14BreakpointBase16UpdateBreakpointERKS0_'/>
<use f='llvm/lldb/tools/lldb-vscode/BreakpointBase.cpp' l='32' u='r' c='_ZN11lldb_vscode14BreakpointBase16UpdateBreakpointERKS0_'/>
<use f='llvm/lldb/tools/lldb-vscode/BreakpointBase.cpp' l='33' u='w' c='_ZN11lldb_vscode14BreakpointBase16UpdateBreakpointERKS0_'/>
<use f='llvm/lldb/tools/lldb-vscode/BreakpointBase.cpp' l='33' u='r' c='_ZN11lldb_vscode14BreakpointBase16UpdateBreakpointERKS0_'/>
<offset>256</offset>
<doc f='llvm/lldb/tools/lldb-vscode/BreakpointBase.h' l='23'>// An optional expression that controls how many hits of the breakpoint are
  // ignored. The backend is expected to interpret the expression as needed</doc>
<use f='llvm/lldb/tools/lldb-vscode/FunctionBreakpoint.cpp' l='26' u='m' c='_ZN11lldb_vscode18FunctionBreakpoint13SetBreakpointEv'/>
<use f='llvm/lldb/tools/lldb-vscode/SourceBreakpoint.cpp' l='25' u='m' c='_ZN11lldb_vscode16SourceBreakpoint13SetBreakpointEN4llvm9StringRefE'/>
