<dec f='llvm/llvm/include/llvm/Support/FileSystem.h' l='392' type='std::error_code llvm::sys::fs::rename(const llvm::Twine &amp; from, const llvm::Twine &amp; to)'/>
<doc f='llvm/llvm/include/llvm/Support/FileSystem.h' l='384'>/// Rename \a from to \a to.
///
/// Files are renamed as if by POSIX rename(), except that on Windows there may
/// be a short interval of time during which the destination file does not
/// exist.
///
/// @param from The path to rename from.
/// @param to The path to rename to. This is created.</doc>
<use f='llvm/clang/lib/Frontend/CompilerInstance.cpp' l='668' u='c' c='_ZN5clang16CompilerInstance16clearOutputFilesEb'/>
<use f='llvm/clang/lib/Rewrite/Rewriter.cpp' l='442' u='c' c='_ZN12_GLOBAL__N_119AtomicallyMovedFileD1Ev'/>
<use f='llvm/lld/COFF/Driver.cpp' l='829' u='c' c='_ZN3lld4coffL19createImportLibraryEb'/>
<use f='llvm/lldb/source/Target/ModuleCache.cpp' l='200' u='c' c='_ZN12lldb_private11ModuleCache3PutERKNS_8FileSpecEPKcRKNS_10ModuleSpecES3_S3_'/>
<use f='llvm/llvm/lib/Support/FileUtilities.cpp' l='322' u='c' c='_ZN4llvm19writeFileAtomicallyENS_9StringRefES0_St8functionIFNS_5ErrorERNS_11raw_ostreamEEE'/>
<def f='llvm/llvm/lib/Support/Unix/Path.inc' l='554' ll='565' type='std::error_code llvm::sys::fs::rename(const llvm::Twine &amp; from, const llvm::Twine &amp; to)'/>
<use f='llvm/llvm/lib/Support/Path.cpp' l='1232' u='c' c='_ZN4llvm3sys2fs8TempFile4keepERKNS_5TwineE'/>
<use f='llvm/llvm/tools/llvm-objcopy/ELF/ELFObjcopy.cpp' l='250' u='c' c='_ZN4llvm7objcopy3elfL16linkToBuildIdDirERKNS0_10CopyConfigENS_9StringRefES5_NS_8ArrayRefIhEE'/>
<use f='llvm/llvm/unittests/Support/ReplaceFileTest.cpp' l='93' u='c' c='_ZN12_GLOBAL__N_145rename_FileOpenedForReadingCanBeReplaced_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/ReplaceFileTest.cpp' l='109' u='c' c='_ZN12_GLOBAL__N_145rename_FileOpenedForReadingCanBeReplaced_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/ReplaceFileTest.cpp' l='155' u='c' c='_ZN12_GLOBAL__N_124rename_ExistingTemp_Test8TestBodyEv'/>
