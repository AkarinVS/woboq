<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CombinerHelper.h' l='537' type='Optional&lt;std::pair&lt;MachineInstr *, int64_t&gt; &gt; llvm::CombinerHelper::findLoadOffsetsForLoadOrCombine(SmallDenseMap&lt;int64_t, int64_t, 8&gt; &amp; MemOffset2Idx, const SmallVector&lt;llvm::Register, 8&gt; &amp; RegsToVisit, const unsigned int MemSizeInBits)'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp' l='3315' ll='3447' type='Optional&lt;std::pair&lt;MachineInstr *, int64_t&gt; &gt; llvm::CombinerHelper::findLoadOffsetsForLoadOrCombine(SmallDenseMap&lt;int64_t, int64_t, 8&gt; &amp; MemOffset2Idx, const SmallVector&lt;llvm::Register, 8&gt; &amp; RegsToVisit, const unsigned int MemSizeInBits)'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp' l='3496' u='c' c='_ZN4llvm14CombinerHelper18matchLoadOrCombineERNS_12MachineInstrERSt8functionIFvRNS_16MachineIRBuilderEEE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CombinerHelper.h' l='527'>/// Helper function for matchLoadOrCombine.
  ///
  /// Checks if every register in \p RegsToVisit is defined by a load
  /// instruction + some arithmetic.
  ///
  /// \param [out] MemOffset2Idx - Maps the byte positions each load ends up
  /// at to the index of the load.
  /// \param [in] MemSizeInBits - The number of bits each load should produce.
  ///
  /// \returns The lowest-index load found and the lowest index on success.</doc>
