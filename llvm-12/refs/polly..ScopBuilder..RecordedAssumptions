<dec f='llvm/polly/include/polly/ScopBuilder.h' l='74' type='polly::RecordedAssumptionsTy'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='352' u='a' c='_ZN5polly11ScopBuilder8getPwAffEPN4llvm10BasicBlockERNS1_8DenseMapIS3_N3isl12noexceptions3setENS1_12DenseMapInfoIS3_EENS1_6detail12DenseMapPairIS3_S7_EEEEPKNS1_4SCEVEb'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='803' u='a' c='_ZN5polly11ScopBuilder27addLoopBoundsToHeaderDomainEPN4llvm4LoopERNS1_8DenseMapIPNS1_10BasicBlockEN3isl12noexceptions3setENS1_12DenseMapInfoIS6_EENS1_14321484'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='1026' u='a' c='_ZN5polly11ScopBuilder27propagateInvalidStmtDomainsEPN4llvm6RegionERNS1_8DenseMapIPNS1_10BasicBlockEN3isl12noexceptions3setENS1_12DenseMapInfoIS6_EENS7345316'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='1494' u='a' c='_ZN5polly11ScopBuilder22addRecordedAssumptionsEv'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='2521' u='a' c='_ZN5polly11ScopBuilder19assumeNoOutOfBoundsEv'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='3238' u='a' c='_ZN5polly11ScopBuilder20buildAccessRelationsERNS_8ScopStmtE'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='3250' u='a' c='_ZN5polly11ScopBuilder20buildAccessRelationsERNS_8ScopStmtE'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='3806' u='m' c='_ZN5polly11ScopBuilderC1EPN4llvm6RegionERNS1_15AssumptionCacheERNS1_9AAResultsERKNS1_10DataLayoutERNS1_13DominatorTreeERNS1_8LoopInfoERNS_13ScopDetect5687132'/>
<offset>4928</offset>
<doc f='llvm/polly/include/polly/ScopBuilder.h' l='64'>/// Collection to hold taken assumptions.
  ///
  /// There are two reasons why we want to record assumptions first before we
  /// add them to the assumed/invalid context:
  ///   1) If the SCoP is not profitable or otherwise invalid without the
  ///      assumed/invalid context we do not have to compute it.
  ///   2) Information about the context are gathered rather late in the SCoP
  ///      construction (basically after we know all parameters), thus the user
  ///      might see overly complicated assumptions to be taken while they will
  ///      only be simplified later on.</doc>
