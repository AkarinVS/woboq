<dec f='llvm/llvm/include/llvm/IR/DerivedTypes.h' l='88' type='llvm::APInt llvm::IntegerType::getMask() const'/>
<doc f='llvm/llvm/include/llvm/IR/DerivedTypes.h' l='85'>/// For example, this is 0xFF for an 8 bit integer, 0xFFFF for i16, etc.
  /// @returns a bit mask with ones set for all the bits of this type.
  /// Get a bit mask for this type.</doc>
<def f='llvm/llvm/lib/IR/Type.cpp' l='293' ll='295' type='llvm::APInt llvm::IntegerType::getMask() const'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2180' u='c' c='_ZL13insertIntegerRKN4llvm10DataLayoutERNS_9IRBuilderINS_14ConstantFolderEN12_GLOBAL__N_125IRBuilderPrefixedInserterEEEPNS_5ValueESA_mRKNS_5TwineE'/>
