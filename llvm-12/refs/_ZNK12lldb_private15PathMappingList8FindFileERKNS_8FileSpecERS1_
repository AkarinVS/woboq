<dec f='llvm/lldb/include/lldb/Target/PathMappingList.h' l='104' type='bool lldb_private::PathMappingList::FindFile(const lldb_private::FileSpec &amp; orig_spec, lldb_private::FileSpec &amp; new_spec) const'/>
<doc f='llvm/lldb/include/lldb/Target/PathMappingList.h' l='86'>/// Finds a source file given a file spec using the path remappings.
  ///
  /// Tries to resolve \a orig_spec by checking the path remappings.
  /// It makes sure the file exists by checking with the file system,
  /// so this call can be expensive if the remappings are on a network
  /// or are even on the local file system, so use this function
  /// sparingly (not in a tight debug info parsing loop).
  ///
  /// \param[in] orig_spec
  ///     The original source file path to try and remap.
  ///
  /// \param[out] new_spec
  ///     The newly remapped filespec that is guaranteed to exist.
  ///
  /// \return
  ///     /b true if \a orig_spec was successfully located and
  ///     \a new_spec is filled in with an existing file spec,
  ///     \b false otherwise.</doc>
<use f='llvm/lldb/source/Core/Module.cpp' l='1598' u='c' c='_ZNK12lldb_private6Module14FindSourceFileERKNS_8FileSpecERS1_'/>
<use f='llvm/lldb/source/Core/SourceManager.cpp' l='448' u='c' c='_ZN12lldb_private13SourceManager4File17CommonInitializerERKNS_8FileSpecEPNS_6TargetE'/>
<use f='llvm/lldb/source/Symbol/LineEntry.cpp' l='258' u='c' c='_ZN12lldb_private9LineEntry17ApplyFileMappingsESt10shared_ptrINS_6TargetEE'/>
<def f='llvm/lldb/source/Target/PathMappingList.cpp' l='200' ll='243' type='bool lldb_private::PathMappingList::FindFile(const lldb_private::FileSpec &amp; orig_spec, lldb_private::FileSpec &amp; new_spec) const'/>
