<dec f='llvm/llvm/include/llvm/IR/Constants.h' l='797' type='static llvm::Constant * llvm::ConstantDataVector::getFP(llvm::Type * ElementType, ArrayRef&lt;uint16_t&gt; Elts)'/>
<doc f='llvm/llvm/include/llvm/IR/Constants.h' l='791'>/// getFP() constructors - Return a constant of vector type with a float
  /// element type taken from argument `ElementType&apos;, and count taken from
  /// argument `Elts&apos;.  The amount of bits of the contained type must match the
  /// number of bits of the type contained in the passed in ArrayRef.
  /// (i.e. half or bfloat for 16bits, float for 32bits, double for 64bits) Note
  /// that this can return a ConstantAggregateZero object.</doc>
<use f='llvm/llvm/lib/Bitcode/Reader/BitcodeReader.cpp' l='2559' u='c' c='_ZN12_GLOBAL__N_113BitcodeReader14parseConstantsEv'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitcodeReader.cpp' l='2565' u='c' c='_ZN12_GLOBAL__N_113BitcodeReader14parseConstantsEv'/>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='3059' ll='3066' type='static llvm::Constant * llvm::ConstantDataVector::getFP(llvm::Type * ElementType, ArrayRef&lt;uint16_t&gt; Elts)'/>
<use f='llvm/llvm/lib/IR/Constants.cpp' l='3108' u='c' c='_ZN4llvm18ConstantDataVector8getSplatEjPNS_8ConstantE'/>
<use f='llvm/llvm/lib/IR/Constants.cpp' l='3113' u='c' c='_ZN4llvm18ConstantDataVector8getSplatEjPNS_8ConstantE'/>
<doc f='llvm/llvm/lib/IR/Constants.cpp' l='3053'>/// getFP() constructors - Return a constant of vector type with a float
/// element type taken from argument `ElementType&apos;, and count taken from
/// argument `Elts&apos;.  The amount of bits of the contained type must match the
/// number of bits of the type contained in the passed in ArrayRef.
/// (i.e. half or bfloat for 16bits, float for 32bits, double for 64bits) Note
/// that this can return a ConstantAggregateZero object.</doc>
