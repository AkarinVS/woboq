<def f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h' l='705' ll='724' type='int llvm::ARM_AM::getFP32Imm(const llvm::APInt &amp; Imm)'/>
<use f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h' l='727' u='c' c='_ZN4llvm6ARM_AM10getFP32ImmERKNS_7APFloatE'/>
<doc f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h' l='702'>/// getFP32Imm - Return an 8-bit floating-point version of the 32-bit
  /// floating-point value. If the value cannot be represented as an 8-bit
  /// floating-point value, then return -1.</doc>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='7471' u='c' c='_ZNK4llvm17ARMTargetLowering17LowerBUILD_VECTORENS_7SDValueERNS_12SelectionDAGEPKNS_12ARMSubtargetE'/>
<use f='llvm/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp' l='1120' u='c' c='_ZNK12_GLOBAL__N_110ARMOperand7isFPImmEv'/>
<use f='llvm/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp' l='2613' u='c' c='_ZNK12_GLOBAL__N_110ARMOperand16addFPImmOperandsERN4llvm6MCInstEj'/>
