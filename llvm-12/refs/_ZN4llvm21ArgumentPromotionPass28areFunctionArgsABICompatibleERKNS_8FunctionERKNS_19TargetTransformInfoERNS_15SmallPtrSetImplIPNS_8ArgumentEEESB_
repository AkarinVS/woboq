<dec f='llvm/llvm/include/llvm/Transforms/IPO/ArgumentPromotion.h' l='33' type='static bool llvm::ArgumentPromotionPass::areFunctionArgsABICompatible(const llvm::Function &amp; F, const llvm::TargetTransformInfo &amp; TTI, SmallPtrSetImpl&lt;llvm::Argument *&gt; &amp; ArgsToPromote, SmallPtrSetImpl&lt;llvm::Argument *&gt; &amp; ByValArgsToTransform)'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/ArgumentPromotion.h' l='30'>/// Check if callers and the callee \p F agree how promoted arguments would be
  /// passed. The ones that they do not agree on are eliminated from the sets but
  /// the return value has to be observed as well.</doc>
<def f='llvm/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp' l='846' ll='861' type='static bool llvm::ArgumentPromotionPass::areFunctionArgsABICompatible(const llvm::Function &amp; F, const llvm::TargetTransformInfo &amp; TTI, SmallPtrSetImpl&lt;llvm::Argument *&gt; &amp; ArgsToPromote, SmallPtrSetImpl&lt;llvm::Argument *&gt; &amp; ByValArgsToTransform)'/>
<use f='llvm/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp' l='1015' u='c' c='_ZL16promoteArgumentsPN4llvm8FunctionENS_12function_refIFRNS_9AAResultsERS0_EEEjNS_8OptionalINS2_IFvRNS_8CallBaseESA_EEEEERKNS_19TargetTransformInfoE'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='5349' u='c' c='_ZN12_GLOBAL__N_125AAPrivatizablePtrArgument10updateImplERN4llvm10AttributorE'/>
