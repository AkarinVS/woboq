<dec f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.h' l='437' type='llvm::Function * clang::CodeGen::CGOpenMPRuntimeGPU::createParallelDataSharingWrapper(llvm::Function * OutlinedParallelFn, const clang::OMPExecutableDirective &amp; D)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.h' l='433'>/// Emit function which wraps the outline parallel region
  /// and controls the parameters which are passed to this function.
  /// The wrapper ensures that the outlined function is called
  /// with the correct arguments when data is shared.</doc>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='1584' u='c' c='_ZN5clang7CodeGen18CGOpenMPRuntimeGPU28emitParallelOutlinedFunctionERKNS_22OMPExecutableDirectiveEPKNS_7VarDeclEN4llvm3omp9DirectiveERKNS0_15RegionCodeGenTyE'/>
<def f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='4187' ll='4303' type='llvm::Function * clang::CodeGen::CGOpenMPRuntimeGPU::createParallelDataSharingWrapper(llvm::Function * OutlinedParallelFn, const clang::OMPExecutableDirective &amp; D)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='4183'>/// Emit function which wraps the outline parallel region
/// and controls the arguments which are passed to this function.
/// The wrapper ensures that the outlined function is called
/// with the correct arguments when data is shared.</doc>
