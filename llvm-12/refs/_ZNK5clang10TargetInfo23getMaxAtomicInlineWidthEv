<def f='llvm/clang/include/clang/Basic/TargetInfo.h' l='685' type='unsigned int clang::TargetInfo::getMaxAtomicInlineWidth() const'/>
<use f='llvm/clang/include/clang/Basic/TargetInfo.h' l='694' u='c' c='_ZNK5clang10TargetInfo16hasBuiltinAtomicEmm'/>
<doc f='llvm/clang/include/clang/Basic/TargetInfo.h' l='683'>/// Return the maximum width lock-free atomic operation which can be
  /// inlined given the supported features of the given target.</doc>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='11110' u='c' c='_ZNK5clang10ASTContext28AtomicUsesUnsupportedLibcallEPKNS_10AtomicExprE'/>
<use f='llvm/clang/lib/AST/ExprConstant.cpp' l='11976' u='c' c='_ZN12_GLOBAL__N_116IntExprEvaluator20VisitBuiltinCallExprEPKN5clang8CallExprEj'/>
<use f='llvm/clang/lib/Basic/Targets/NVPTX.cpp' l='151' u='c' c='_ZN5clang7targets15NVPTXTargetInfoC1ERKN4llvm6TripleERKNS_13TargetOptionsEj'/>
<use f='llvm/clang/lib/CodeGen/CGAtomic.cpp' l='811' u='c' c='_ZN5clang7CodeGen15CodeGenFunction14EmitAtomicExprEPNS_10AtomicExprE'/>
<use f='llvm/clang/lib/Frontend/InitPreprocessor.cpp' l='991' u='c' c='_ZL26InitializePredefinedMacrosRKN5clang10TargetInfoERKNS_11LangOptionsERKNS_15FrontendOptionsERKNS_19PreprocessorOptionsERNS_12MacroBuilderE'/>
