<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='3572' type='void llvm::IndirectBrInst::IndirectBrInst(llvm::Value * Address, unsigned int NumDests, llvm::Instruction * InsertBefore)'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='3624' u='c' c='_ZN4llvm14IndirectBrInst6CreateEPNS_5ValueEjPNS_11InstructionE'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='3568'>/// Create a new indirectbr instruction, specifying an
  /// Address to jump to.  The number of expected destinations can be specified
  /// here to make memory allocation more efficient.  This constructor can also
  /// autoinsert before another instruction.</doc>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='4221' ll='4226' type='void llvm::IndirectBrInst::IndirectBrInst(llvm::Value * Address, unsigned int NumCases, llvm::Instruction * InsertBefore)'/>
