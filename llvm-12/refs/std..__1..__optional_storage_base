<def f='llvm/build/include/c++/v1/optional' l='286' ll='353'/>
<def f='llvm/build/include/c++/v1/optional' l='358' ll='446'/>
<use f='llvm/build/include/c++/v1/optional' l='449'/>
<use f='llvm/build/include/c++/v1/optional' l='451'/>
<use f='llvm/build/include/c++/v1/optional' l='455'/>
<use f='llvm/build/include/c++/v1/optional' l='457'/>
<doc f='llvm/build/include/c++/v1/optional' l='355'>// optional&lt;T&amp;&gt; is currently required ill-formed, however it may to be in the
// future. For this reason it has already been implemented to ensure we can
// make the change in an ABI compatible manner.</doc>
<fun r='_ZNKSt3__123__optional_storage_base9has_valueEv'/>
<fun r='_ZNRSt3__123__optional_storage_base5__getEv'/>
<fun r='_ZNKRSt3__123__optional_storage_base5__getEv'/>
<fun r='_ZNOSt3__123__optional_storage_base5__getEv'/>
<fun r='_ZNKOSt3__123__optional_storage_base5__getEv'/>
<fun r='_ZNSt3__123__optional_storage_base11__constructEDpOTL0__'/>
<fun r='_ZNSt3__123__optional_storage_base16__construct_fromEOTL0__'/>
<fun r='_ZNSt3__123__optional_storage_base13__assign_fromEOTL0__'/>
<mbr r='std::__1::__optional_storage_base::__value_' t='std::__1::__optional_storage_base&lt;type-parameter-0-0, true&gt;::__raw_type *'/>
<fun r='_ZNSt3__123__optional_storage_baseIT_Lb1EE20__can_bind_referenceEv'/>
<fun r='_ZNSt3__123__optional_storage_baseIT_Lb1EEC1Ev'/>
<fun r='_ZNSt3__123__optional_storage_baseIT_Lb1EEC1ENS_10in_place_tEOTL0__'/>
<fun r='_ZNSt3__123__optional_storage_baseIT_Lb1EE5resetEv'/>
<fun r='_ZNKSt3__123__optional_storage_baseIT_Lb1EE9has_valueEv'/>
<fun r='_ZNKRSt3__123__optional_storage_baseIT_Lb1EE5__getEv'/>
<fun r='_ZNKOSt3__123__optional_storage_baseIT_Lb1EE5__getEv'/>
<fun r='_ZNSt3__123__optional_storage_baseIT_Lb1EE11__constructEOTL0__'/>
<fun r='_ZNSt3__123__optional_storage_baseIT_Lb1EE16__construct_fromEOTL0__'/>
<fun r='_ZNSt3__123__optional_storage_baseIT_Lb1EE13__assign_fromEOTL0__'/>
