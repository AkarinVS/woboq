<dec f='llvm/clang/include/clang/Basic/Diagnostic.h' l='756' type='void clang::DiagnosticsEngine::setSeverity(diag::kind Diag, diag::Severity Map, clang::SourceLocation Loc)'/>
<doc f='llvm/clang/include/clang/Basic/Diagnostic.h' l='748'>/// This allows the client to specify that certain warnings are
  /// ignored.
  ///
  /// Notes can never be mapped, errors can only be mapped to fatal, and
  /// WARNINGs and EXTENSIONs can be mapped arbitrarily.
  ///
  /// \param Loc The source location that this change of diagnostic state should
  /// take affect. It can be null if we are setting the latest state.</doc>
<use f='llvm/clang/lib/ARCMigrate/ARCMT.cpp' l='320' u='c' c='_ZN5clang5arcmt20checkForManualIssuesERNS_18CompilerInvocationERKNS_17FrontendInputFileESt10shared_ptrINS_22PCHContainerOperationsEEPNS_18DiagnosticCo10726287'/>
<def f='llvm/clang/lib/Basic/Diagnostic.cpp' l='355' ll='394' type='void clang::DiagnosticsEngine::setSeverity(diag::kind Diag, diag::Severity Map, clang::SourceLocation L)'/>
<use f='llvm/clang/lib/Basic/Diagnostic.cpp' l='406' u='c' c='_ZN5clang17DiagnosticsEngine19setSeverityForGroupENS_4diag6FlavorEN4llvm9StringRefENS1_8SeverityENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Basic/Diagnostic.cpp' l='482' u='c' c='_ZN5clang17DiagnosticsEngine17setSeverityForAllENS_4diag6FlavorENS1_8SeverityENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Parse/ParsePragma.cpp' l='2365' u='c' c='_ZN12_GLOBAL__N_121PragmaNoOpenMPHandler12HandlePragmaERN5clang12PreprocessorENS1_16PragmaIntroducerERNS1_5TokenE'/>
<use f='llvm/clang/lib/Sema/SemaOpenMP.cpp' l='14147' u='c' c='_ZN12_GLOBAL__N_130DiagsUninitializedSeveretyRAIIC1ERN5clang17DiagnosticsEngineENS1_14SourceLocationEb'/>
