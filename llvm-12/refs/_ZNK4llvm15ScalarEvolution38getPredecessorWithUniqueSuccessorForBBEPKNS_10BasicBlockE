<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1758' type='std::pair&lt;const BasicBlock *, const BasicBlock *&gt; llvm::ScalarEvolution::getPredecessorWithUniqueSuccessorForBB(const llvm::BasicBlock * BB) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1754'>/// Return a predecessor of BB (which may not be an immediate predecessor)
  /// which has exactly one successor from which BB is reachable, or null if
  /// no such block is found.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9183' ll='9199' type='std::pair&lt;const BasicBlock *, const BasicBlock *&gt; llvm::ScalarEvolution::getPredecessorWithUniqueSuccessorForBB(const llvm::BasicBlock * BB) const'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='10048' u='c' c='_ZN4llvm15ScalarEvolution30isBasicBlockEntryGuardedByCondEPKNS_10BasicBlockENS_7CmpInst9PredicateEPKNS_4SCEVES8_'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='13300' u='c' c='_ZN4llvm15ScalarEvolution15applyLoopGuardsEPKNS_4SCEVEPKNS_4LoopE'/>
