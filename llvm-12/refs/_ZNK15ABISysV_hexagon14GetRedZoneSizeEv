<dec f='llvm/lldb/source/Plugins/ABI/Hexagon/ABISysV_hexagon.h' l='20' type='size_t ABISysV_hexagon::GetRedZoneSize() const'/>
<inh f='llvm/lldb/include/lldb/Target/ABI.h' l='42' c='_ZNK12lldb_private3ABI14GetRedZoneSizeEv'/>
<def f='llvm/lldb/source/Plugins/ABI/Hexagon/ABISysV_hexagon.cpp' l='997' type='size_t ABISysV_hexagon::GetRedZoneSize() const'/>
<doc f='llvm/lldb/source/Plugins/ABI/Hexagon/ABISysV_hexagon.cpp' l='984'>/*
    http://en.wikipedia.org/wiki/Red_zone_%28computing%29

    In computing, a red zone is a fixed size area in memory beyond the stack
   pointer that has not been
    &quot;allocated&quot;. This region of memory is not to be modified by
   interrupt/exception/signal handlers.
    This allows the space to be used for temporary data without the extra
   overhead of modifying the
    stack pointer. The x86-64 ABI mandates a 128 byte red zone.[1] The OpenRISC
   toolchain assumes a
    128 byte red zone though it is not documented.
*/</doc>
