<dec f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunication.h' l='173' type='lldb_private::process_gdb_remote::GDBRemoteCommunication::PacketResult lldb_private::process_gdb_remote::GDBRemoteCommunication::PopPacketFromQueue(StringExtractorGDBRemote &amp; response, Timeout&lt;std::micro&gt; timeout)'/>
<doc f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunication.h' l='172'>// Pop a packet from the queue in a thread safe manner</doc>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunication.cpp' l='230' u='c' c='_ZN12lldb_private18process_gdb_remote22GDBRemoteCommunication10ReadPacketER24StringExtractorGDBRemoteNS_7TimeoutISt5ratioILl1ELl1000000EEEEb'/>
<def f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunication.cpp' l='239' ll='263' type='GDBRemoteCommunication::PacketResult lldb_private::process_gdb_remote::GDBRemoteCommunication::PopPacketFromQueue(StringExtractorGDBRemote &amp; response, Timeout&lt;std::micro&gt; timeout)'/>
<doc f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunication.cpp' l='235'>// This function is called when a packet is requested.
// A whole packet is popped from the packet queue and returned to the caller.
// Packets are placed into this queue from the communication read thread. See
// GDBRemoteCommunication::AppendBytesToCache.</doc>
