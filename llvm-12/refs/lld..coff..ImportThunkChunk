<inh f='llvm/lld/COFF/Chunks.h' l='144' c='lld::coff::NonSectionChunk'/>
<def f='llvm/lld/COFF/Chunks.h' l='473' ll='481'/>
<ovr f='llvm/lld/COFF/Chunks.h' l='483' c='lld::coff::ImportThunkChunkX64'/>
<use f='llvm/lld/COFF/Chunks.h' l='483'/>
<ovr f='llvm/lld/COFF/Chunks.h' l='490' c='lld::coff::ImportThunkChunkX86'/>
<use f='llvm/lld/COFF/Chunks.h' l='490'/>
<use f='llvm/lld/COFF/Chunks.h' l='492' c='_ZN3lld4coff19ImportThunkChunkX86C1EPNS0_7DefinedE'/>
<ovr f='llvm/lld/COFF/Chunks.h' l='498' c='lld::coff::ImportThunkChunkARM'/>
<use f='llvm/lld/COFF/Chunks.h' l='498'/>
<use f='llvm/lld/COFF/Chunks.h' l='500' c='_ZN3lld4coff19ImportThunkChunkARMC1EPNS0_7DefinedE'/>
<ovr f='llvm/lld/COFF/Chunks.h' l='508' c='lld::coff::ImportThunkChunkARM64'/>
<use f='llvm/lld/COFF/Chunks.h' l='508'/>
<use f='llvm/lld/COFF/Chunks.h' l='510' c='_ZN3lld4coff21ImportThunkChunkARM64C1EPNS0_7DefinedE'/>
<use f='llvm/lld/COFF/Chunks.h' l='676' c='_ZNK3lld4coff5Chunk14isHotPatchableEv'/>
<size>24</size>
<doc f='llvm/lld/COFF/Chunks.h' l='470'>// Windows-specific.
// A chunk for DLL import jump table entry. In a final output, its
// contents will be a JMP instruction to some __imp_ symbol.</doc>
<fun r='_ZN3lld4coff16ImportThunkChunkC1EPNS0_7DefinedE'/>
<fun r='_ZN3lld4coff16ImportThunkChunk7classofEPKNS0_5ChunkE'/>
<mbr r='lld::coff::ImportThunkChunk::impSymbol' o='128' t='lld::coff::Defined *'/>
<use f='llvm/lld/COFF/Chunks.cpp' l='701' c='_ZN3lld4coff19ImportThunkChunkX64C1EPNS0_7DefinedE'/>
<size>24</size>
