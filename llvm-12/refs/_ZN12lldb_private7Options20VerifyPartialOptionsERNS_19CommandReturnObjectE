<dec f='llvm/lldb/include/lldb/Interpreter/Options.h' l='83' type='bool lldb_private::Options::VerifyPartialOptions(lldb_private::CommandReturnObject &amp; result)'/>
<doc f='llvm/lldb/include/lldb/Interpreter/Options.h' l='80'>// Verify that the options given are in the options table and can be used
  // together, but there may be some required options that are missing (used to
  // verify options that get folded into command aliases).</doc>
<use f='llvm/lldb/source/Interpreter/CommandAlias.cpp' l='54' u='c' c='_ZL23ProcessAliasOptionsArgsRSt10shared_ptrIN12lldb_private13CommandObjectEEN4llvm9StringRefERS_ISt6vectorISt5tupleIJNSt7__cxx1112basic_stringIcSt11ch9249466'/>
<def f='llvm/lldb/source/Interpreter/Options.cpp' l='623' ll='641' type='bool lldb_private::Options::VerifyPartialOptions(lldb_private::CommandReturnObject &amp; result)'/>
<doc f='llvm/lldb/source/Interpreter/Options.cpp' l='617'>// This function is called when we have been given a potentially incomplete set
// of options, such as when an alias has been defined (more options might be
// added at at the time the alias is invoked).  We need to verify that the
// options in the set m_seen_options are all part of a set that may be used
// together, but m_seen_options may be missing some of the &quot;required&quot; options.</doc>
