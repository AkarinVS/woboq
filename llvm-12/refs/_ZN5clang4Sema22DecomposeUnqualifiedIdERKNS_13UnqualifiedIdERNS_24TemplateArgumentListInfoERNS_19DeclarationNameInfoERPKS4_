<dec f='llvm/clang/include/clang/Sema/Sema.h' l='5054' type='void clang::Sema::DecomposeUnqualifiedId(const clang::UnqualifiedId &amp; Id, clang::TemplateArgumentListInfo &amp; Buffer, clang::DeclarationNameInfo &amp; NameInfo, const clang::TemplateArgumentListInfo *&amp; TemplateArgs)'/>
<def f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2081' ll='2102' type='void clang::Sema::DecomposeUnqualifiedId(const clang::UnqualifiedId &amp; Id, clang::TemplateArgumentListInfo &amp; Buffer, clang::DeclarationNameInfo &amp; NameInfo, const clang::TemplateArgumentListInfo *&amp; TemplateArgs)'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2436' u='c' c='_ZN5clang4Sema17ActOnIdExpressionEPNS_5ScopeERNS_12CXXScopeSpecENS_14SourceLocationERNS_13UnqualifiedIdEbbPNS_27CorrectionCandidateCallbackEbPNS_5TokenE'/>
<doc f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2072'>/// Decomposes the given name into a DeclarationNameInfo, its location, and
/// possibly a list of template arguments.
///
/// If this produces template arguments, it is permitted to call
/// DecomposeTemplateName.
///
/// This actually loses a lot of source location information for
/// non-standard name kinds; we should consider preserving that in
/// some way.</doc>
<use f='llvm/clang/lib/Sema/SemaExprMember.cpp' l='1704' u='c' c='_ZN5clang4Sema21ActOnMemberAccessExprEPNS_5ScopeEPNS_4ExprENS_14SourceLocationENS_3tok9TokenKindERNS_12CXXScopeSpecES5_RNS_13UnqualifiedIdEPNS_4DeclE'/>
