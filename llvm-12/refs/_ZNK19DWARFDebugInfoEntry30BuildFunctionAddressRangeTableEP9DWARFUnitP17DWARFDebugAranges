<dec f='llvm/lldb/source/Plugins/SymbolFile/DWARF/DWARFDebugInfoEntry.h' l='45' type='void DWARFDebugInfoEntry::BuildFunctionAddressRangeTable(DWARFUnit * cu, DWARFDebugAranges * debug_aranges) const'/>
<def f='llvm/lldb/source/Plugins/SymbolFile/DWARF/DWARFDebugInfoEntry.cpp' l='689' ll='708' type='void DWARFDebugInfoEntry::BuildFunctionAddressRangeTable(DWARFUnit * cu, DWARFDebugAranges * debug_aranges) const'/>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/DWARFDebugInfoEntry.cpp' l='704' u='c' c='_ZNK19DWARFDebugInfoEntry30BuildFunctionAddressRangeTableEP9DWARFUnitP17DWARFDebugAranges'/>
<doc f='llvm/lldb/source/Plugins/SymbolFile/DWARF/DWARFDebugInfoEntry.cpp' l='686'>/// This function is builds a table very similar to the standard .debug_aranges
/// table, except that the actual DIE offset for the function is placed in the
/// table instead of the compile unit offset.</doc>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/DWARFUnit.cpp' l='770' u='c' c='_ZN9DWARFUnit18GetFunctionArangesEv'/>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/DWARFUnit.cpp' l='775' u='c' c='_ZN9DWARFUnit18GetFunctionArangesEv'/>
