<dec f='llvm/llvm/include/llvm/Transforms/IPO.h' l='288' type='llvm::ModulePass * llvm::createWriteThinLTOBitcodePass(llvm::raw_ostream &amp; Str, llvm::raw_ostream * ThinLinkOS = nullptr)'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='957' u='c' c='_ZN12_GLOBAL__N_118EmitAssemblyHelper12EmitAssemblyEN5clang13BackendActionESt10unique_ptrIN4llvm17raw_pwrite_streamESt14default_deleteIS5_EE'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO.h' l='287'>/// Write ThinLTO-ready bitcode to Str.</doc>
<def f='llvm/llvm/lib/Transforms/IPO/ThinLTOBitcodeWriter.cpp' l='534' ll='537' type='llvm::ModulePass * llvm::createWriteThinLTOBitcodePass(llvm::raw_ostream &amp; Str, llvm::raw_ostream * ThinLinkOS = nullptr)'/>
<use f='llvm/llvm/tools/opt/opt.cpp' l='985' u='c' c='main'/>
