<dec f='llvm/clang/include/clang/AST/ExprCXX.h' l='2219' type='static clang::CXXNewExpr * clang::CXXNewExpr::Create(const clang::ASTContext &amp; Ctx, bool IsGlobalNew, clang::FunctionDecl * OperatorNew, clang::FunctionDecl * OperatorDelete, bool ShouldPassAlignment, bool UsualArrayDeleteWantsSize, ArrayRef&lt;clang::Expr *&gt; PlacementArgs, clang::SourceRange TypeIdParens, Optional&lt;clang::Expr *&gt; ArraySize, clang::CXXNewExpr::InitializationStyle InitializationStyle, clang::Expr * Initializer, clang::QualType Ty, clang::TypeSourceInfo * AllocatedTypeInfo, clang::SourceRange Range, clang::SourceRange DirectInitRange)'/>
<doc f='llvm/clang/include/clang/AST/ExprCXX.h' l='2217'>/// Create a c++ new expression.</doc>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='7390' u='c' c='_ZN5clang15ASTNodeImporter15VisitCXXNewExprEPNS_10CXXNewExprE'/>
<def f='llvm/clang/lib/AST/ExprCXX.cpp' l='242' ll='264' type='static clang::CXXNewExpr * clang::CXXNewExpr::Create(const clang::ASTContext &amp; Ctx, bool IsGlobalNew, clang::FunctionDecl * OperatorNew, clang::FunctionDecl * OperatorDelete, bool ShouldPassAlignment, bool UsualArrayDeleteWantsSize, ArrayRef&lt;clang::Expr *&gt; PlacementArgs, clang::SourceRange TypeIdParens, Optional&lt;clang::Expr *&gt; ArraySize, clang::CXXNewExpr::InitializationStyle InitializationStyle, clang::Expr * Initializer, clang::QualType Ty, clang::TypeSourceInfo * AllocatedTypeInfo, clang::SourceRange Range, clang::SourceRange DirectInitRange)'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='2347' u='c' c='_ZN5clang4Sema11BuildCXXNewENS_11SourceRangeEbNS_14SourceLocationEN4llvm15MutableArrayRefIPNS_4ExprEEES2_S1_NS_8QualTypeEPNS_14TypeSourceInfoENS3_8OptionalIS6_EES1_S6_'/>
