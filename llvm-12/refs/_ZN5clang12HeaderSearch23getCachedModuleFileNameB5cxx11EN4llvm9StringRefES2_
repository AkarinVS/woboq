<dec f='llvm/clang/include/clang/Lex/HeaderSearch.h' l='543' type='std::string clang::HeaderSearch::getCachedModuleFileName(llvm::StringRef ModuleName, llvm::StringRef ModuleMapPath)'/>
<doc f='llvm/clang/include/clang/Lex/HeaderSearch.h' l='533'>/// Retrieve the name of the (to-be-)cached module file that should
  /// be used to load a module with the given name.
  ///
  /// \param ModuleName The module whose module file name will be returned.
  ///
  /// \param ModuleMapPath A path that when combined with \c ModuleName
  /// uniquely identifies this module. See Module::ModuleMap.
  ///
  /// \returns The name of the module file that corresponds to this module,
  /// or an empty string if this module does not correspond to any module file.</doc>
<use f='llvm/clang/lib/Frontend/FrontendActions.cpp' l='214' u='c' c='_ZN5clang33GenerateModuleFromModuleMapAction16CreateOutputFileERNS_16CompilerInstanceEN4llvm9StringRefE'/>
<use f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='142' u='c' c='_ZN5clang12HeaderSearch23getCachedModuleFileNameB5cxx11EPNS_6ModuleE'/>
<def f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='185' ll='189' type='std::string clang::HeaderSearch::getCachedModuleFileName(llvm::StringRef ModuleName, llvm::StringRef ModuleMapPath)'/>
