<dec f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.h' l='125' type='bool lldb_private::ClangExpressionDeclMap::AddPersistentVariable(const clang::NamedDecl * decl, lldb_private::ConstString name, lldb_private::TypeFromParser type, bool is_result, bool is_lvalue)'/>
<def f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.cpp' l='194' ll='322' type='bool lldb_private::ClangExpressionDeclMap::AddPersistentVariable(const clang::NamedDecl * decl, lldb_private::ConstString name, lldb_private::TypeFromParser parser_type, bool is_result, bool is_lvalue)'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.h' l='110'>/// [Used by IRForTarget] Add a variable to the list of persistent
  ///     variables for the process.
  ///
  /// \param[in] decl
  ///     The Clang declaration for the persistent variable, used for
  ///     lookup during parsing.
  ///
  /// \param[in] name
  ///     The name of the persistent variable, usually $something.
  ///
  /// \param[in] type
  ///     The type of the variable, in the Clang parser&apos;s context.
  ///
  /// \return
  ///     True on success; false otherwise.</doc>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='398' u='c' c='_ZN11IRForTarget20CreateResultVariableERN4llvm8FunctionE'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='1095' u='c' c='_ZN11IRForTarget22RewritePersistentAllocEPN4llvm11InstructionE'/>
