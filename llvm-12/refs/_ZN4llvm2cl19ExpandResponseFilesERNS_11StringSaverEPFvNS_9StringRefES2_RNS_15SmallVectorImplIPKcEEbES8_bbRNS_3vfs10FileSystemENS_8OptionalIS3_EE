<dec f='llvm/llvm/include/llvm/Support/CommandLine.h' l='2094' type='bool llvm::cl::ExpandResponseFiles(llvm::StringSaver &amp; Saver, llvm::cl::TokenizerCallback Tokenizer, SmallVectorImpl&lt;const char *&gt; &amp; Argv, bool MarkEOLs = false, bool RelativeNames = false, llvm::vfs::FileSystem &amp; FS = * llvm::vfs::getRealFileSystem(), llvm::Optional&lt;llvm::StringRef&gt; CurrentDir = llvm::None)'/>
<doc f='llvm/llvm/include/llvm/Support/CommandLine.h' l='2075'>/// Expand response files on a command line recursively using the given
/// StringSaver and tokenization strategy.  Argv should contain the command line
/// before expansion and will be modified in place. If requested, Argv will
/// also be populated with nullptrs indicating where each response file line
/// ends, which is useful for the &quot;/link&quot; argument that needs to consume all
/// remaining arguments only until the next end of line, when in a response
/// file.
///
/// \param [in] Saver Delegates back to the caller for saving parsed strings.
/// \param [in] Tokenizer Tokenization strategy. Typically Unix or Windows.
/// \param [in,out] Argv Command line into which to expand response files.
/// \param [in] MarkEOLs Mark end of lines and the end of the response file
/// with nullptrs in the Argv vector.
/// \param [in] RelativeNames true if names of nested response files must be
/// resolved relative to including file.
/// \param [in] FS File system used for all file access when running the tool.
/// \param [in] CurrentDir Path used to resolve relative rsp files. If set to
/// None, process&apos; cwd is used instead.
/// \return true if all @files were expanded successfully or there were none.</doc>
<use f='llvm/clang/lib/Tooling/ExpandResponseFilesCompilationDatabase.cpp' l='63' u='c' c='_ZNK5clang7tooling12_GLOBAL__N_127ExpandResponseFilesDatabase6expandESt6vectorINS0_14CompileCommandESaIS4_EE'/>
<use f='llvm/clang/tools/driver/driver.cpp' l='325' u='c' c='_ZL14ExecuteCC1ToolRN4llvm15SmallVectorImplIPKcEE'/>
<use f='llvm/clang/tools/driver/driver.cpp' l='395' u='c' c='main'/>
<use f='llvm/lld/COFF/DriverUtils.cpp' l='831' u='c' c='_ZN3lld4coff9ArgParser5parseEN4llvm8ArrayRefIPKcEE'/>
<use f='llvm/lld/ELF/DriverUtils.cpp' l='128' u='c' c='_ZN3lld3elf11ELFOptTable5parseEN4llvm8ArrayRefIPKcEE'/>
<use f='llvm/lld/MachO/DriverUtils.cpp' l='79' u='c' c='_ZN3lld5macho13MachOOptTable5parseEN4llvm8ArrayRefIPKcEE'/>
<use f='llvm/lld/MinGW/Driver.cpp' l='103' u='c' c='_ZN12_GLOBAL__N_113MinGWOptTable5parseEN4llvm8ArrayRefIPKcEE'/>
<use f='llvm/lld/tools/lld/lld.cpp' l='97' u='c' c='_ZL10isPETargetRSt6vectorIPKcSaIS1_EE'/>
<use f='llvm/lld/wasm/Driver.cpp' l='193' u='c' c='_ZN3lld4wasm12_GLOBAL__N_112WasmOptTable5parseEN4llvm8ArrayRefIPKcEE'/>
<def f='llvm/llvm/lib/Support/CommandLine.cpp' l='1139' ll='1248' type='bool llvm::cl::ExpandResponseFiles(llvm::StringSaver &amp; Saver, llvm::cl::TokenizerCallback Tokenizer, SmallVectorImpl&lt;const char *&gt; &amp; Argv, bool MarkEOLs = false, bool RelativeNames = false, llvm::vfs::FileSystem &amp; FS = * llvm::vfs::getRealFileSystem(), llvm::Optional&lt;llvm::StringRef&gt; CurrentDir = llvm::None)'/>
<use f='llvm/llvm/lib/Support/CommandLine.cpp' l='1263' u='c' c='_ZN4llvm2cl19expandResponseFilesEiPKPKcS2_RNS_11StringSaverERNS_15SmallVectorImplIS2_EE'/>
<use f='llvm/llvm/lib/Support/CommandLine.cpp' l='1282' u='c' c='_ZN4llvm2cl14readConfigFileENS_9StringRefERNS_11StringSaverERNS_15SmallVectorImplIPKcEE'/>
<use f='llvm/llvm/lib/Support/CommandLine.cpp' l='1332' u='c' c='_ZN12_GLOBAL__N_117CommandLineParser23ParseCommandLineOptionsEiPKPKcN4llvm9StringRefEPNS5_11raw_ostreamEb'/>
<doc f='llvm/llvm/lib/Support/CommandLine.cpp' l='1137'>/// Expand response files on a command line recursively using the given
/// StringSaver and tokenization strategy.</doc>
<use f='llvm/llvm/lib/ToolDrivers/llvm-lib/LibDriver.cpp' l='269' u='c' c='_ZN4llvm13libDriverMainENS_8ArrayRefIPKcEE'/>
<use f='llvm/llvm/tools/llvm-ar/llvm-ar.cpp' l='1173' u='c' c='_ZL7ar_mainiPPc'/>
<use f='llvm/llvm/tools/llvm-objcopy/llvm-objcopy.cpp' l='349' u='c' c='main'/>
<use f='llvm/llvm/unittests/Support/CommandLineTest.cpp' l='829' u='c' c='_ZN12_GLOBAL__N_134CommandLineTest_ResponseFiles_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/CommandLineTest.cpp' l='893' u='c' c='_ZN12_GLOBAL__N_143CommandLineTest_RecursiveResponseFiles_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/CommandLineTest.cpp' l='931' u='c' c='_ZN12_GLOBAL__N_145CommandLineTest_ResponseFilesAtArguments_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/CommandLineTest.cpp' l='966' u='c' c='_ZN12_GLOBAL__N_145CommandLineTest_ResponseFileRelativePath_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/CommandLineTest.cpp' l='986' u='c' c='_ZN12_GLOBAL__N_137CommandLineTest_ResponseFileEOLs_Test8TestBodyEv'/>
