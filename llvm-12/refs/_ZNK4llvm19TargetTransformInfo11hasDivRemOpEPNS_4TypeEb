<dec f='llvm/llvm/include/llvm/Analysis/TargetTransformInfo.h' l='674' type='bool llvm::TargetTransformInfo::hasDivRemOp(llvm::Type * DataType, bool IsSigned) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/TargetTransformInfo.h' l='669'>/// Return true if the target has a unified operation to calculate division
  /// and remainder. If so, the additional implicit multiplication and
  /// subtraction required to calculate a remainder from division are free. This
  /// can enable more aggressive transformations for division and remainder than
  /// would typically be allowed using throughput or size cost models.</doc>
<def f='llvm/llvm/lib/Analysis/TargetTransformInfo.cpp' l='458' ll='460' type='bool llvm::TargetTransformInfo::hasDivRemOp(llvm::Type * DataType, bool IsSigned) const'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DivRemPairs.cpp' l='196' u='c' c='_ZL14optimizeDivRemRN4llvm8FunctionERKNS_19TargetTransformInfoERKNS_13DominatorTreeE'/>
