<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CombinerHelper.h' l='436' type='bool llvm::CombinerHelper::matchRedundantAnd(llvm::MachineInstr &amp; MI, llvm::Register &amp; Replacement)'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp' l='2902' ll='2955' type='bool llvm::CombinerHelper::matchRedundantAnd(llvm::MachineInstr &amp; MI, llvm::Register &amp; Replacement)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CombinerHelper.h' l='430'>/// \return true if \p MI is a G_AND instruction whose operands are x and y
  /// where x &amp; y == x or x &amp; y == y. (E.g., one of operands is all-ones value.)
  ///
  /// \param [in] MI - The G_AND instruction.
  /// \param [out] Replacement - A register the G_AND should be replaced with on
  /// success.</doc>
<use f='llvm/build/lib/Target/AArch64/AArch64GenPostLegalizeGICombiner.inc' l='328' u='c' c='_ZNK12_GLOBAL__N_137AArch64GenPostLegalizerCombinerHelper13tryCombineAllERN4llvm19GISelChangeObserverERNS1_12MachineInstrERNS1_16MachineIRBuilderERNS1_14CombinerHelperE'/>
<use f='llvm/build/lib/Target/AArch64/AArch64GenPreLegalizeGICombiner.inc' l='921' u='c' c='_ZNK12_GLOBAL__N_136AArch64GenPreLegalizerCombinerHelper13tryCombineAllERN4llvm19GISelChangeObserverERNS1_12MachineInstrERNS1_16MachineIRBuilderE'/>
<use f='llvm/build/lib/Target/AMDGPU/AMDGPUGenPostLegalizeGICombiner.inc' l='958' u='c' c='_ZNK12_GLOBAL__N_136AMDGPUGenPostLegalizerCombinerHelper13tryCombineAllERN4llvm19GISelChangeObserverERNS1_12MachineInstrERNS1_16MachineIRBuilderE'/>
<use f='llvm/build/lib/Target/AMDGPU/AMDGPUGenPreLegalizeGICombiner.inc' l='913' u='c' c='_ZNK12_GLOBAL__N_135AMDGPUGenPreLegalizerCombinerHelper13tryCombineAllERN4llvm19GISelChangeObserverERNS1_12MachineInstrERNS1_16MachineIRBuilderERNS1_14CombinerHelperE'/>
