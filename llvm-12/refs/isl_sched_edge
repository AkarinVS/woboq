<def f='llvm/polly/lib/External/isl/isl_scheduler.c' l='191' ll='206'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='210' c='is_type'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='217' c='set_type'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='224' c='clear_type'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='231' c='is_validity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='238' c='set_validity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='245' c='is_proximity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='252' c='is_local'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='259' c='set_local'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='266' c='clear_local'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='273' c='is_coincidence'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='280' c='is_condition'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='287' c='is_conditional_validity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='299' c='is_multi_edge_type'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='379'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='457' c='edge_has_src_and_dst'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='458' c='edge_has_src_and_dst'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='467' c='graph_edge_table_add'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='488' c='graph_edge_tables_add'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='530' c='graph_find_edge_entry'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='545' c='graph_find_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='548' c='graph_find_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='568' c='graph_has_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='569' c='graph_has_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='589' c='graph_find_matching_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='590' c='graph_find_matching_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='593' c='graph_find_matching_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='616' c='graph_remove_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='694' c='graph_alloc'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='694' c='graph_alloc'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1307' c='merge_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1308' c='merge_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1486' c='extract_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1886' c='inter_coefficients'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2110' c='add_intra_validity_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2147' c='add_inter_validity_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2224' c='add_intra_proximity_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2303' c='add_inter_proximity_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2341' c='force_zero'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2362' c='add_all_validity_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2375' c='add_all_validity_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2408' c='add_all_proximity_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2508' c='is_any_validity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2527' c='edge_multiplicity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2545' c='parametric_intra_edge_multiplicity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2589' c='count_map_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2646' c='count_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3391' c='update_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3470' c='is_condition_false'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3735' c='copy_edges'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3741' c='copy_edges'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3822' c='extract_sub_graph'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3875' c='compute_sub_schedule'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3896' c='edge_scc_exactly'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3901' c='edge_dst_scc_at_most'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3906' c='edge_src_scc_at_least'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4853' c='add_intra'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4873' c='add_inter'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5127' c='collect_validity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5137' c='collect_validity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5630' c='is_violated'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6039' c='is_non_empty_proximity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6067' c='find_proximity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6309' c='add_non_conditional_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6336' c='add_conditional_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6375' c='collect_edge_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6426' c='collect_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6779' c='has_bounded_distances'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6854' c='ok_to_merge_proximity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7110' c='any_no_merge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7115' c='any_no_merge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7181' c='edge_cluster_exactly'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7323' c='compute_weights'/>
<size>64</size>
<doc f='llvm/polly/lib/External/isl/isl_scheduler.c' l='152'>/* An edge in the dependence graph.  An edge may be used to
 * ensure validity of the generated schedule, to minimize the dependence
 * distance or both
 *
 * map is the dependence relation, with i -&gt; j in the map if j depends on i
 * tagged_condition and tagged_validity contain the union of all tagged
 *	condition or conditional validity dependence relations that
 *	specialize the dependence relation &quot;map&quot;; that is,
 *	if (i -&gt; a) -&gt; (j -&gt; b) is an element of &quot;tagged_condition&quot;
 *	or &quot;tagged_validity&quot;, then i -&gt; j is an element of &quot;map&quot;.
 *	If these fields are NULL, then they represent the empty relation.
 * src is the source node
 * dst is the sink node
 *
 * types is a bit vector containing the types of this edge.
 * validity is set if the edge is used to ensure correctness
 * coincidence is used to enforce zero dependence distances
 * proximity is set if the edge is used to minimize dependence distances
 * condition is set if the edge represents a condition
 *	for a conditional validity schedule constraint
 * local can only be set for condition edges and indicates that
 *	the dependence distance over the edge should be zero
 * conditional_validity is set if the edge is used to conditionally
 *	ensure correctness
 *
 * For validity edges, start and end mark the sequence of inequality
 * constraints in the LP problem that encode the validity constraint
 * corresponding to this edge.
 *
 * During clustering, an edge may be marked &quot;no_merge&quot; if it should
 * not be used to merge clusters.
 * The weight is also only used during clustering and it is
 * an indication of how many schedule dimensions on either side
 * of the schedule constraints can be aligned.
 * If the weight is negative, then this means that this edge was postponed
 * by has_bounded_distances or any_no_merge.  The original weight can
 * be retrieved by adding 1 + graph-&gt;max_weight, with &quot;graph&quot;
 * the graph containing this edge.
 */</doc>
