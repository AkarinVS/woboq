<dec f='llvm/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h' l='80' type='void llvm::ThinLTOCodeGenerator::run()'/>
<def f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='926' ll='1168' type='void llvm::ThinLTOCodeGenerator::run()'/>
<doc f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='925'>// Main entry point for the ThinLTO processing</doc>
<doc f='llvm/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h' l='73'>/**
   * Process all the modules that were added to the code generator in parallel.
   *
   * Client can access the resulting object files using getProducedBinaries(),
   * unless setGeneratedObjectsDirectory() has been called, in which case
   * results are available through getProducedBinaryFiles().
   */</doc>
<use f='llvm/llvm/tools/llvm-lto/llvm-lto.cpp' l='816' u='c' c='_ZN7thinlto17ThinLTOProcessing7codegenEv'/>
<use f='llvm/llvm/tools/llvm-lto/llvm-lto.cpp' l='860' u='c' c='_ZN7thinlto17ThinLTOProcessing6runAllEv'/>
<use f='llvm/llvm/tools/llvm-lto/llvm-lto.cpp' l='864' u='c' c='_ZN7thinlto17ThinLTOProcessing6runAllEv'/>
<use f='llvm/llvm/tools/lto/lto.cpp' l='530' u='c' c='thinlto_codegen_process'/>
