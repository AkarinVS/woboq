<dec f='llvm/lldb/include/lldb/Target/RegisterContextUnwind.h' l='178' type='bool lldb_private::RegisterContextUnwind::ForceSwitchToFallbackUnwindPlan()'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='1316' u='c' c='_ZN12lldb_private21RegisterContextUnwind24SavedLocationForRegisterEjRNS_10UnwindLLDB16RegisterLocationE'/>
<def f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='1712' ll='1757' type='bool lldb_private::RegisterContextUnwind::ForceSwitchToFallbackUnwindPlan()'/>
<doc f='llvm/lldb/include/lldb/Target/RegisterContextUnwind.h' l='171'>/// Switch to the fallback unwind plan unconditionally without any safety
  /// checks that it is providing better results than the normal unwind plan.
  ///
  /// The only time it is valid to call this method is if the full unwindplan is
  /// found to be fundamentally incorrect/impossible.
  ///
  /// Returns true if it was able to install the fallback unwind plan.</doc>
