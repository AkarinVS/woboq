<dec f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='450' type='bool llvm::BlockFrequencyInfoImplBase::addToDist(llvm::BlockFrequencyInfoImplBase::Distribution &amp; Dist, const llvm::BlockFrequencyInfoImplBase::LoopData * OuterLoop, const llvm::BlockFrequencyInfoImplBase::BlockNode &amp; Pred, const llvm::BlockFrequencyInfoImplBase::BlockNode &amp; Succ, uint64_t Weight)'/>
<use f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='1385' u='c' c='_ZN4llvm22BlockFrequencyInfoImpl25propagateMassToSuccessorsEPNS_26BlockFrequencyInfoImplBase8LoopDataERKNS1_9BlockNodeE'/>
<doc f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='443'>/// Add an edge to the distribution.
  ///
  /// Adds an edge to Succ to Dist.  If \c LoopHead.isValid(), then whether the
  /// edge is local/exit/backedge is in the context of LoopHead.  Otherwise,
  /// every edge should be a local edge (since all the loops are packaged up).
  ///
  /// \return \c true unless aborted due to an irreducible backedge.</doc>
<def f='llvm/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp' l='296' ll='356' type='bool llvm::BlockFrequencyInfoImplBase::addToDist(llvm::BlockFrequencyInfoImplBase::Distribution &amp; Dist, const llvm::BlockFrequencyInfoImplBase::LoopData * OuterLoop, const llvm::BlockFrequencyInfoImplBase::BlockNode &amp; Pred, const llvm::BlockFrequencyInfoImplBase::BlockNode &amp; Succ, uint64_t Weight)'/>
<use f='llvm/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp' l='362' u='c' c='_ZN4llvm26BlockFrequencyInfoImplBase23addLoopSuccessorsToDistEPKNS0_8LoopDataERS1_RNS0_12DistributionE'/>
