<dec f='include/sys/epoll.h' l='132' type='int epoll_pwait(int __epfd, struct epoll_event * __events, int __maxevents, int __timeout, const __sigset_t * __ss)'/>
<doc f='include/sys/epoll.h' l='127'>/* Same as epoll_wait, but the thread&apos;s signal mask is temporarily
   and atomically replaced with the one provided as parameter.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<def f='llvm/compiler-rt/lib/msan/msan_interceptors.cpp' l='855' macro='1' type='int epoll_pwait(int epfd, void * events, int maxevents, int timeout, void * sigmask)'/>
<use f='llvm/compiler-rt/lib/msan/msan_interceptors.cpp' l='864' u='a' c='__msan::InitializeInterceptors'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='1876' macro='1' type='int epoll_pwait(int epfd, void * ev, int cnt, int timeout, void * sigmask)'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='1892' u='a' c='__tsan::InitializeInterceptors'/>
