<dec f='llvm/lldb/include/lldb/Target/Target.h' l='1158' type='llvm::Expected&lt;lldb_private::Address&gt; lldb_private::Target::GetEntryPointAddress()'/>
<doc f='llvm/lldb/include/lldb/Target/Target.h' l='1142'>/// This method will return the address of the starting function for
  /// this binary, e.g. main() or its equivalent.  This can be used as
  /// an address of a function that is not called once a binary has
  /// started running - e.g. as a return address for inferior function
  /// calls that are unambiguous completion of the function call, not
  /// called during the course of the inferior function code running.
  ///
  /// If no entry point can be found, an invalid address is returned.
  ///
  /// \param [out] err
  ///     This object will be set to failure if no entry address could
  ///     be found, and may contain a helpful error message.
  //
  /// \return
  ///     Returns the entry address for this program, or an error
  ///     if none can be found.</doc>
<def f='llvm/lldb/source/Target/Target.cpp' l='2462' ll='2496' type='llvm::Expected&lt;lldb_private::Address&gt; lldb_private::Target::GetEntryPointAddress()'/>
<use f='llvm/lldb/source/Target/ThreadPlanCallFunction.cpp' l='67' u='c' c='_ZN12lldb_private22ThreadPlanCallFunction16ConstructorSetupERNS_6ThreadERPNS_3ABIERmS6_'/>
