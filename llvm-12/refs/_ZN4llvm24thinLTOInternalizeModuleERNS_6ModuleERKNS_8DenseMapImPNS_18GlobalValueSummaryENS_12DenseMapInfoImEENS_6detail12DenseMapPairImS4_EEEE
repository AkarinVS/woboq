<dec f='llvm/llvm/include/llvm/Transforms/IPO/FunctionImport.h' l='224' type='void llvm::thinLTOInternalizeModule(llvm::Module &amp; TheModule, const llvm::GVSummaryMapTy &amp; DefinedGlobals)'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/FunctionImport.h' l='222'>/// Internalize \p TheModule based on the information recorded in the summaries
/// during global summary-based analysis.</doc>
<use f='llvm/llvm/lib/LTO/LTOBackend.cpp' l='645' u='c' c='_ZN4llvm3lto11thinBackendERKNS0_6ConfigEjSt8functionIFSt10unique_ptrINS0_18NativeObjectStreamESt14default_deleteIS6_EEjEERNS_6ModuleERKNS_18ModuleSumm11476089'/>
<use f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='450' u='c' c='_ZN12_GLOBAL__N_120ProcessThinLTOModuleERN4llvm6ModuleERNS0_18ModuleSummaryIndexERNS0_9StringMapIPNS0_3lto9InputFileENS0_15MallocAllocatorEEERNS0_13Ta4806892'/>
<use f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='871' u='c' c='_ZN4llvm20ThinLTOCodeGenerator11internalizeERNS_6ModuleERNS_18ModuleSummaryIndexERKNS_3lto9InputFileE'/>
<def f='llvm/llvm/lib/Transforms/IPO/FunctionImport.cpp' l='1069' ll='1105' type='void llvm::thinLTOInternalizeModule(llvm::Module &amp; TheModule, const llvm::GVSummaryMapTy &amp; DefinedGlobals)'/>
<doc f='llvm/llvm/lib/Transforms/IPO/FunctionImport.cpp' l='1068'>/// Run internalization on \p TheModule based on symmary analysis.</doc>
