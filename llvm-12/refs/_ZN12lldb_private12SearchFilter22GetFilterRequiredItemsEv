<dec f='llvm/lldb/include/lldb/Core/SearchFilter.h' l='189' type='uint32_t lldb_private::SearchFilter::GetFilterRequiredItems()'/>
<doc f='llvm/lldb/include/lldb/Core/SearchFilter.h' l='179'>/// This determines which items are REQUIRED for the filter to pass. For
  /// instance, if you are filtering by Compilation Unit, obviously symbols
  /// that have no compilation unit can&apos;t pass  So return eSymbolContextCU and
  /// search callbacks can then short cut the search to avoid looking at
  /// things that obviously won&apos;t pass.
  ///
  /// \return
  ///    The required elements for the search, which is an or&apos;ed together
  ///    set of lldb:SearchContextItem enum&apos;s.
  ///</doc>
<use f='llvm/lldb/source/Breakpoint/BreakpointResolverName.cpp' l='261' u='c' c='_ZN12lldb_private22BreakpointResolverName14SearchCallbackERNS_12SearchFilterERNS_13SymbolContextEPNS_7AddressE'/>
<def f='llvm/lldb/source/Core/SearchFilter.cpp' l='156' ll='158' type='uint32_t lldb_private::SearchFilter::GetFilterRequiredItems()'/>
<ovr f='llvm/lldb/source/Core/SearchFilter.cpp' l='445' c='_ZN12lldb_private20SearchFilterByModule22GetFilterRequiredItemsEv'/>
<ovr f='llvm/lldb/source/Core/SearchFilter.cpp' l='575' c='_ZN12lldb_private24SearchFilterByModuleList22GetFilterRequiredItemsEv'/>
