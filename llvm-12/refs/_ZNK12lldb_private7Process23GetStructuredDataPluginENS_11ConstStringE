<dec f='llvm/lldb/include/lldb/Target/Process.h' l='2456' type='lldb::StructuredDataPluginSP lldb_private::Process::GetStructuredDataPlugin(lldb_private::ConstString type_name) const'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='2445'>/// Returns the StructuredDataPlugin associated with a given type name, if
  /// there is one.
  ///
  /// There will only be a plugin for a given StructuredDataType if the
  /// debugged process monitor claims that the feature is supported. This is
  /// one way to tell whether a feature is available.
  ///
  /// \return
  ///     The plugin if one is available for the specified feature;
  ///     otherwise, returns an empty shared pointer.</doc>
<use f='llvm/lldb/source/Plugins/StructuredData/DarwinLog/StructuredDataDarwinLog.cpp' l='811' u='c' c='_ZN19sddarwinlog_private13EnableCommand9DoExecuteERN12lldb_private4ArgsERNS1_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Plugins/StructuredData/DarwinLog/StructuredDataDarwinLog.cpp' l='885' u='c' c='_ZN19sddarwinlog_private13StatusCommand9DoExecuteERN12lldb_private4ArgsERNS1_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Plugins/StructuredData/DarwinLog/StructuredDataDarwinLog.cpp' l='1520' u='c' c='_ZN12lldb_private23StructuredDataDarwinLog26InitCompletionHookCallbackEPvPNS_24StoppointCallbackContextEmm'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='4189' ll='4196' type='lldb::StructuredDataPluginSP lldb_private::Process::GetStructuredDataPlugin(lldb_private::ConstString type_name) const'/>
