<dec f='llvm/polly/lib/External/ppcg/util.h' l='20' type='isl_multi_pw_aff * ppcg_size_from_extent(isl_set * set)'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='219' u='c' c='extract_array_info'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='1060' u='c' c='extract_grid_size'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='2031' u='c' c='build_array_bounds'/>
<use f='llvm/polly/lib/External/ppcg/print.c' l='408' u='c' c='ppcg_print_declaration'/>
<def f='llvm/polly/lib/External/ppcg/util.c' l='73' ll='105' type='isl_multi_pw_aff * ppcg_size_from_extent(isl_set * set)'/>
<doc f='llvm/polly/lib/External/ppcg/util.c' l='68'>/* Compute the size of a bounding box around the origin and &quot;set&quot;,
 * where &quot;set&quot; is assumed to contain only non-negative elements.
 * In particular, compute the maximal value of &quot;set&quot; in each direction
 * and add one.
 */</doc>
