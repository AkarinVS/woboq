<def f='llvm/llvm/include/llvm/Analysis/IntervalPartition.h' l='77' ll='80' type='llvm::Interval * llvm::IntervalPartition::getBlockInterval(llvm::BasicBlock * BB)'/>
<doc f='llvm/llvm/include/llvm/Analysis/IntervalPartition.h' l='74'>// TODO: isIrreducible - look for triangle graph.

  // getBlockInterval - Return the interval that a basic block exists in.</doc>
<use f='llvm/llvm/include/llvm/Analysis/IntervalIterator.h' l='65' u='c' c='_ZN4llvm18getSourceGraphNodeEPNS_17IntervalPartitionEPNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/IntervalPartition.cpp' l='70' u='c' c='_ZN4llvm17IntervalPartition18updatePredecessorsEPNS_8IntervalE'/>
