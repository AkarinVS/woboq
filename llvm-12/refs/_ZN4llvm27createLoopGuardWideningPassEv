<dec f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='100' type='llvm::Pass * llvm::createLoopGuardWideningPass()'/>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='93'>//===----------------------------------------------------------------------===//
//
// LoopGuardWidening - Analogous to the GuardWidening pass, but restricted to a
// single loop at a time for use within a LoopPassManager.  Desired effect is
// to widen guards into preheader or a single guard within loop if that&apos;s not
// possible.
//</doc>
<use f='llvm/llvm/include/llvm/LinkAllPasses.h' l='116' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<def f='llvm/llvm/lib/Transforms/Scalar/GuardWidening.cpp' l='879' ll='881' type='llvm::Pass * llvm::createLoopGuardWideningPass()'/>
