<def f='llvm/llvm/include/llvm/IR/Instructions.h' l='2211' ll='2213' type='bool llvm::ShuffleVectorInst::isZeroEltSplat() const'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='2205'>/// Return true if all elements of this shuffle are the same value as the
  /// first element of exactly one source vector without changing the length
  /// of that vector.
  /// Example: shufflevector &lt;4 x n&gt; A, &lt;4 x n&gt; B, &lt;undef,0,undef,0&gt;
  /// TODO: Optionally allow length-changing shuffles.
  /// TODO: Optionally allow splats from other elements.</doc>
<use f='llvm/llvm/include/llvm/Analysis/TargetTransformInfoImpl.h' l='1034' u='c' c='_ZN4llvm31TargetTransformInfoImplCRTPBase11getUserCostEPKNS_4UserENS_8ArrayRefIPKNS_5ValueEEENS_19TargetTransformInfo14TargetCostKindE'/>
<use f='llvm/llvm/lib/Analysis/TargetTransformInfo.cpp' l='711' u='c' c='_ZN4llvm19TargetTransformInfo14getOperandInfoEPKNS_5ValueERNS0_22OperandValuePropertiesE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='10998' u='c' c='_ZNK4llvm21AArch64TargetLowering18shouldSinkOperandsEPNS_11InstructionERNS_15SmallVectorImplIPNS_3UseEEE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp' l='1130' u='c' c='_ZL19foldInsEltIntoSplatRN4llvm17InsertElementInstE'/>
