<dec f='llvm/polly/lib/External/isl/include/isl/aff.h' l='1368' macro='1' type='isl_stat isl_aff_list_foreach_scc(isl_aff_list * list, isl_bool (*)(struct isl_aff *, struct isl_aff *, void *) follows, void * follows_user, isl_stat (*)(isl_aff_list *, void *) fn, void * fn_user)'/>
<def f='llvm/polly/lib/External/isl/isl_list_templ.c' l='542' macro='1' type='isl_stat isl_aff_list_foreach_scc(isl_aff_list * list, isl_bool (*)(isl_aff *, isl_aff *, void *) follows, void * follows_user, isl_stat (*)(isl_aff_list *, void *) fn, void * fn_user)'/>
<doc f='llvm/polly/lib/External/isl/isl_list_templ.c' l='530'>/* Call &quot;fn&quot; on each of the strongly connected components (SCCs) of
 * the graph with as vertices the elements of &quot;list&quot; and
 * a directed edge from node b to node a iff follows(a, b)
 * returns 1.  follows should return -1 on error.
 *
 * If SCC a contains a node i that follows a node j in another SCC b
 * (i.e., follows(i, j, user) returns 1), then fn will be called on SCC a
 * after being called on SCC b.
 *
 * We simply call isl_tarjan_graph_init, extract the SCCs from the result and
 * call fn on each of them.
 */</doc>
