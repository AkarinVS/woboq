<dec f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='721' type='bool __sanitizer::ReadFileToBuffer(const char * file_name, char ** buff, __sanitizer::uptr * buff_size, __sanitizer::uptr * read_len, __sanitizer::uptr max_len = 1 &lt;&lt; 26, __sanitizer::error_t * errno_p = nullptr)'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='713'>// Opens the file &apos;file_name&quot; and reads up to &apos;max_len&apos; bytes.
// This function is less I/O efficient than ReadFileToVector as it may reread
// file multiple times to avoid mmap during read attempts. It&apos;s used to read
// procmap, so short reads with mmap in between can produce inconsistent result.
// The resulting buffer is mmaped and stored in &apos;*buff&apos;.
// The size of the mmaped region is stored in &apos;*buff_size&apos;.
// The total number of read bytes is stored in &apos;*read_len&apos;.
// Returns true if file was successfully opened and read.</doc>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_file.cpp' l='104' ll='146' type='bool __sanitizer::ReadFileToBuffer(const char * file_name, char ** buff, __sanitizer::uptr * buff_size, __sanitizer::uptr * read_len, __sanitizer::uptr max_len = 1 &lt;&lt; 26, __sanitizer::error_t * errno_p = nullptr)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_flag_parser.cpp' l='156' u='c' c='__sanitizer::FlagParser::ParseFile'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='529' u='c' c='__sanitizer::GetEnv'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='564' u='c' c='__sanitizer::ReadNullSepFileToArray'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='1133' u='c' c='__sanitizer::ReadLongProcessName'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_procmaps_common.cpp' l='152' u='c' c='__sanitizer::GetMemoryProfile'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_procmaps_linux.cpp' l='20' u='c' c='__sanitizer::ReadProcMaps'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_suppressions.cpp' l='81' u='c' c='__sanitizer::SuppressionContext::ParseFromFile'/>
