<def f='llvm/clang/include/clang/AST/Type.h' l='3782' ll='3787'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='3882'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='3991' c='_ZNK5clang17FunctionProtoType18numTrailingObjectsEN4llvm25trailing_objects_internal19TrailingObjectsBase13OverloadTokenINS_12FunctionType26FunctionTypeExtraBitfieldsEEE'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='4157' c='_ZNK5clang17FunctionProtoType16getNumExceptionsEv'/>
<size>8</size>
<doc f='llvm/clang/include/clang/AST/Type.h' l='3778'>/// A simple holder for various uncommon bits which do not fit in
  /// FunctionTypeBitfields. Aligned to alignof(void *) to maintain the
  /// alignment of subsequent objects in TrailingObjects. You must update
  /// hasExtraBitfields in FunctionProtoType after adding extra data here.</doc>
<mbr r='clang::FunctionType::FunctionTypeExtraBitfields::NumExceptionType' o='0' t='unsigned int'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='4305' c='_ZNK5clang10ASTContext23getFunctionTypeInternalENS_8QualTypeEN4llvm8ArrayRefIS1_EERKNS_17FunctionProtoType12ExtProtoInfoEb'/>
<size>8</size>
<use f='llvm/clang/lib/AST/Type.cpp' l='3160' c='_ZN5clang17FunctionProtoTypeC1ENS_8QualTypeEN4llvm8ArrayRefIS1_EES1_RKNS0_12ExtProtoInfoE'/>
<size>8</size>
