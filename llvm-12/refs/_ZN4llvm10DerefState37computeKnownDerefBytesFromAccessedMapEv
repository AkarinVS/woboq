<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2873' ll='2882' type='void llvm::DerefState::computeKnownDerefBytesFromAccessedMap()'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2915' u='c' c='_ZN4llvm10DerefState26takeKnownDerefBytesMaximumEm'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2929' u='c' c='_ZN4llvm10DerefState16addAccessedBytesElm'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2854'>/// Helper function to calculate dereferenceable bytes from current known
  /// bytes and accessed bytes.
  ///
  /// int f(int *A){
  ///    *A = 0;
  ///    *(A+2) = 2;
  ///    *(A+1) = 1;
  ///    *(A+10) = 10;
  /// }
  /// ```
  /// In that case, AccessedBytesMap is `{0:4, 4:4, 8:4, 40:4}`.
  /// AccessedBytesMap is std::map so it is iterated in accending order on
  /// key(Offset). So KnownBytes will be updated like this:
  ///
  /// |Access | KnownBytes
  /// |(0, 4)| 0 -&gt; 4
  /// |(4, 4)| 4 -&gt; 8
  /// |(8, 4)| 8 -&gt; 12
  /// |(40, 4) | 12 (break)</doc>
