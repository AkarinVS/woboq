<def f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='328' ll='334'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='337' c='_ZN4llvm17SCEVWrapPredicate10clearFlagsENS0_18IncrementWrapFlagsES1_'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='338' c='_ZN4llvm17SCEVWrapPredicate10clearFlagsENS0_18IncrementWrapFlagsES1_'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='339' c='_ZN4llvm17SCEVWrapPredicate10clearFlagsENS0_18IncrementWrapFlagsES1_'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='343' c='_ZN4llvm17SCEVWrapPredicate10clearFlagsENS0_18IncrementWrapFlagsES1_'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='346' c='_ZN4llvm17SCEVWrapPredicate9maskFlagsENS0_18IncrementWrapFlagsEi'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='347' c='_ZN4llvm17SCEVWrapPredicate9maskFlagsENS0_18IncrementWrapFlagsEi'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='351' c='_ZN4llvm17SCEVWrapPredicate9maskFlagsENS0_18IncrementWrapFlagsEi'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='354' c='_ZN4llvm17SCEVWrapPredicate8setFlagsENS0_18IncrementWrapFlagsES1_'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='355' c='_ZN4llvm17SCEVWrapPredicate8setFlagsENS0_18IncrementWrapFlagsES1_'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='356' c='_ZN4llvm17SCEVWrapPredicate8setFlagsENS0_18IncrementWrapFlagsES1_'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='361' c='_ZN4llvm17SCEVWrapPredicate8setFlagsENS0_18IncrementWrapFlagsES1_'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='366' c='_ZN4llvm17SCEVWrapPredicate15getImpliedFlagsEPKNS_14SCEVAddRecExprERNS_15ScalarEvolutionE'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='371'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='376' c='_ZN4llvm17SCEVWrapPredicateC1ENS_19FoldingSetNodeIDRefEPKNS_14SCEVAddRecExprENS0_18IncrementWrapFlagsE'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='379' c='_ZNK4llvm17SCEVWrapPredicate8getFlagsEv'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1155' c='_ZN4llvm15ScalarEvolution16getWrapPredicateEPKNS_14SCEVAddRecExprENS_17SCEVWrapPredicate18IncrementWrapFlagsE'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='2144' c='_ZN4llvm25PredicatedScalarEvolution13setNoOverflowEPNS_5ValueENS_17SCEVWrapPredicate18IncrementWrapFlagsE'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='2148' c='_ZN4llvm25PredicatedScalarEvolution13hasNoOverflowEPNS_5ValueENS_17SCEVWrapPredicate18IncrementWrapFlagsE'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='2182'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='306'>/// Similar to SCEV::NoWrapFlags, but with slightly different semantics
  /// for FlagNUSW. The increment is considered to be signed, and a + b
  /// (where b is the increment) is considered to wrap if:
  ///    zext(a + b) != zext(a) + sext(b)
  ///
  /// If Signed is a function that takes an n-bit tuple and maps to the
  /// integer domain as the tuples value interpreted as twos complement,
  /// and Unsigned a function that takes an n-bit tuple and maps to the
  /// integer domain as as the base two value of input tuple, then a + b
  /// has IncrementNUSW iff:
  ///
  /// 0 &lt;= Unsigned(a) + Signed(b) &lt; 2^n
  ///
  /// The IncrementNSSW flag has identical semantics with SCEV::FlagNSW.
  ///
  /// Note that the IncrementNUSW flag is not commutative: if base + inc
  /// has IncrementNUSW, then inc + base doesn&apos;t neccessarily have this
  /// property. The reason for this is that this is used for sign/zero
  /// extending affine AddRec SCEV expressions when a SCEVWrapPredicate is
  /// assumed. A {base,+,inc} expression is already non-commutative with
  /// regards to base and inc, since it is interpreted as:
  ///     (((base + inc) + inc) + inc) ...</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='4896' c='_ZN4llvm15ScalarEvolution32createAddRecFromPHIWithCastsImplEPKNS_11SCEVUnknownE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='12716' c='_ZN4llvm15ScalarEvolution16getWrapPredicateEPKNS_14SCEVAddRecExprENS_17SCEVWrapPredicate18IncrementWrapFlagsE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='12810' c='_ZN12_GLOBAL__N_121SCEVPredicateRewriter21addOverflowAssumptionEPKN4llvm14SCEVAddRecExprENS1_17SCEVWrapPredicate18IncrementWrapFlagsE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='12902' c='_ZN4llvm17SCEVWrapPredicateC1ENS_19FoldingSetNodeIDRefEPKNS_14SCEVAddRecExprENS0_18IncrementWrapFlagsE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='12915' c='_ZNK4llvm17SCEVWrapPredicate12isAlwaysTrueEv'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='12932' c='_ZN4llvm17SCEVWrapPredicate15getImpliedFlagsEPKNS_14SCEVAddRecExprERNS_15ScalarEvolutionE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='12935' c='_ZN4llvm17SCEVWrapPredicate15getImpliedFlagsEPKNS_14SCEVAddRecExprERNS_15ScalarEvolutionE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='13063' c='_ZN4llvm25PredicatedScalarEvolution13setNoOverflowEPNS_5ValueENS_17SCEVWrapPredicate18IncrementWrapFlagsE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='13079' c='_ZN4llvm25PredicatedScalarEvolution13hasNoOverflowEPNS_5ValueENS_17SCEVWrapPredicate18IncrementWrapFlagsE'/>
