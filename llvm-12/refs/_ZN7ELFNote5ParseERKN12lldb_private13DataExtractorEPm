<dec f='llvm/lldb/source/Plugins/ObjectFile/ELF/ObjectFileELF.h' l='45' type='bool ELFNote::Parse(const lldb_private::DataExtractor &amp; data, lldb::offset_t * offset)'/>
<def f='llvm/lldb/source/Plugins/ObjectFile/ELF/ObjectFileELF.cpp' l='215' ll='244' type='bool ELFNote::Parse(const lldb_private::DataExtractor &amp; data, lldb::offset_t * offset)'/>
<use f='llvm/lldb/source/Plugins/ObjectFile/ELF/ObjectFileELF.cpp' l='1025' u='c' c='_ZN13ObjectFileELF27RefineModuleDetailsFromNoteERN12lldb_private13DataExtractorERNS0_8ArchSpecERNS0_4UUIDE'/>
<doc f='llvm/lldb/source/Plugins/ObjectFile/ELF/ObjectFileELF.h' l='33'>/// Parse an ELFNote entry from the given DataExtractor starting at position
  /// \p offset.
  ///
  /// \param[in] data
  ///    The DataExtractor to read from.
  ///
  /// \param[in,out] offset
  ///    Pointer to an offset in the data.  On return the offset will be
  ///    advanced by the number of bytes read.
  ///
  /// \return
  ///    True if the ELFRel entry was successfully read and false otherwise.</doc>
<use f='llvm/lldb/source/Plugins/Process/elf-core/ProcessElfCore.cpp' l='509' u='c' c='_ZN14ProcessElfCore12parseSegmentERKN12lldb_private13DataExtractorE'/>
