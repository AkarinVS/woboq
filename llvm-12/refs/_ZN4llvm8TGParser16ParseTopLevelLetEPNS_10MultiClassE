<dec f='llvm/llvm/lib/TableGen/TGParser.h' l='226' type='bool llvm::TGParser::ParseTopLevelLet(llvm::MultiClass * CurMultiClass)'/>
<def f='llvm/llvm/lib/TableGen/TGParser.cpp' l='3312' ll='3352' type='bool llvm::TGParser::ParseTopLevelLet(llvm::MultiClass * CurMultiClass)'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='3605' u='c' c='_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE'/>
<doc f='llvm/llvm/lib/TableGen/TGParser.cpp' l='3306'>/// ParseTopLevelLet - Parse a &apos;let&apos; at top level.  This can be a couple of
/// different related productions. This works inside multiclasses too.
///
///   Object ::= LET LetList IN &apos;{&apos; ObjectList &apos;}&apos;
///   Object ::= LET LetList IN Object
///</doc>
