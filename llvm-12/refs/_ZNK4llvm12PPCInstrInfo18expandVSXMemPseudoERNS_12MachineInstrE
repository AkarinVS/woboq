<dec f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.h' l='574' type='bool llvm::PPCInstrInfo::expandVSXMemPseudo(llvm::MachineInstr &amp; MI) const'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.h' l='573'>// Expand VSX Memory Pseudo instruction to either a VSX or a FP instruction.</doc>
<def f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='2903' ll='2963' type='bool llvm::PPCInstrInfo::expandVSXMemPseudo(llvm::MachineInstr &amp; MI) const'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='3019' u='c' c='_ZNK4llvm12PPCInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='3030' u='c' c='_ZNK4llvm12PPCInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='3038' u='c' c='_ZNK4llvm12PPCInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='2897'>// Expand VSX Memory Pseudo instruction to either a VSX or a FP instruction.
// The VSX versions have the advantage of a full 64-register target whereas
// the FP ones have the advantage of lower latency and higher throughput. So
// what we are after is using the faster instructions in low register pressure
// situations and using the larger register file in high register pressure
// situations.</doc>
