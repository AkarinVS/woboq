<dec f='llvm/lldb/include/lldb/Target/Process.h' l='2684' type='void lldb_private::Process::MapSupportedStructuredDataPlugins(const StructuredData::Array &amp; supported_type_names)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='2668'>/// Loads any plugins associated with asynchronous structured data and maps
  /// the relevant supported type name to the plugin.
  ///
  /// Processes can receive asynchronous structured data from the process
  /// monitor.  This method will load and map any structured data plugins that
  /// support the given set of supported type names. Later, if any of these
  /// features are enabled, the process monitor is free to generate
  /// asynchronous structured data.  The data must come in as a single \b
  /// StructuredData::Dictionary.  That dictionary must have a string field
  /// named &apos;type&apos;, with a value that equals the relevant type name string
  /// (one of the values in \b supported_type_names).
  ///
  /// \param[in] supported_type_names
  ///     An array of zero or more type names.  Each must be unique.
  ///     For each entry in the list, a StructuredDataPlugin will be
  ///     searched for that supports the structured data type name.</doc>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='1103' u='c' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote17DidLaunchOrAttachERNS_8ArchSpecE'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='5842' ll='5918' type='void lldb_private::Process::MapSupportedStructuredDataPlugins(const StructuredData::Array &amp; supported_type_names)'/>
