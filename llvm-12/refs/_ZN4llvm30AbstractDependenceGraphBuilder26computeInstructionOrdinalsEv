<use f='llvm/llvm/include/llvm/Analysis/DependenceGraphBuilder.h' l='60' u='c' c='_ZN4llvm30AbstractDependenceGraphBuilder8populateEv'/>
<dec f='llvm/llvm/include/llvm/Analysis/DependenceGraphBuilder.h' l='74' type='void llvm::AbstractDependenceGraphBuilder::computeInstructionOrdinals()'/>
<doc f='llvm/llvm/include/llvm/Analysis/DependenceGraphBuilder.h' l='70'>/// Compute ordinal numbers for each instruction and store them in a map for
  /// future look up. These ordinals are used to compute node ordinals which are
  /// in turn used to order nodes that are part of a cycle.
  /// Instruction ordinals are assigned based on lexical program order.</doc>
<def f='llvm/llvm/lib/Analysis/DependenceGraphBuilder.cpp' l='40' ll='47' type='void llvm::AbstractDependenceGraphBuilder::computeInstructionOrdinals()'/>
<doc f='llvm/llvm/lib/Analysis/DependenceGraphBuilder.cpp' l='36'>//===--------------------------------------------------------------------===//
// AbstractDependenceGraphBuilder implementation
//===--------------------------------------------------------------------===//</doc>
