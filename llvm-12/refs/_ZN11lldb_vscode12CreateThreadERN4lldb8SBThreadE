<dec f='llvm/lldb/tools/lldb-vscode/JSONUtils.h' l='377' type='llvm::json::Value lldb_vscode::CreateThread(lldb::SBThread &amp; thread)'/>
<doc f='llvm/lldb/tools/lldb-vscode/JSONUtils.h' l='361'>/// Create a &quot;Thread&quot; object for a LLDB thread object.
///
/// This function will fill in the following keys in the returned
/// object:
///   &quot;id&quot; - the thread ID as an integer
///   &quot;name&quot; - the thread name as a string which combines the LLDB
///            thread index ID along with the string name of the thread
///            from the OS if it has a name.
///
/// \param[in] thread
///     The LLDB thread to use when populating out the &quot;Thread&quot;
///     object.
///
/// \return
///     A &quot;Thread&quot; JSON object with that follows the formal JSON
///     definition outlined by Microsoft.</doc>
<def f='llvm/lldb/tools/lldb-vscode/JSONUtils.cpp' l='768' ll='783' type='llvm::json::Value lldb_vscode::CreateThread(lldb::SBThread &amp; thread)'/>
<doc f='llvm/lldb/tools/lldb-vscode/JSONUtils.cpp' l='753'>// &quot;Thread&quot;: {
//   &quot;type&quot;: &quot;object&quot;,
//   &quot;description&quot;: &quot;A Thread&quot;,
//   &quot;properties&quot;: {
//     &quot;id&quot;: {
//       &quot;type&quot;: &quot;integer&quot;,
//       &quot;description&quot;: &quot;Unique identifier for the thread.&quot;
//     },
//     &quot;name&quot;: {
//       &quot;type&quot;: &quot;string&quot;,
//       &quot;description&quot;: &quot;A name of the thread.&quot;
//     }
//   },
//   &quot;required&quot;: [ &quot;id&quot;, &quot;name&quot; ]
// }</doc>
<use f='llvm/lldb/tools/lldb-vscode/lldb-vscode.cpp' l='2562' u='c' c='_ZN12_GLOBAL__N_115request_threadsERKN4llvm4json6ObjectE'/>
