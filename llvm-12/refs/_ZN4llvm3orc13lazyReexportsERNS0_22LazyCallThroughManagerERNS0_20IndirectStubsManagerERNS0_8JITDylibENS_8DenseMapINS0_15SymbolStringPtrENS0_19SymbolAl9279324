<def f='llvm/llvm/include/llvm/ExecutionEngine/Orc/LazyReexports.h' l='166' ll='173' type='std::unique_ptr&lt;LazyReexportsMaterializationUnit&gt; llvm::orc::lazyReexports(llvm::orc::LazyCallThroughManager &amp; LCTManager, llvm::orc::IndirectStubsManager &amp; ISManager, llvm::orc::JITDylib &amp; SourceJD, llvm::orc::SymbolAliasMap CallableAliases, llvm::orc::ImplSymbolMap * SrcJDLoc = nullptr)'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/Orc/LazyReexports.h' l='163'>/// Define lazy-reexports based on the given SymbolAliasMap. Each lazy re-export
/// is a callable symbol that will look up and dispatch to the given aliasee on
/// first call. All subsequent calls will go directly to the aliasee.</doc>
<use f='llvm/llvm/examples/OrcV2Examples/LLJITWithLazyReexports/LLJITWithLazyReexports.cpp' l='142' u='c' c='main'/>
<use f='llvm/llvm/examples/OrcV2Examples/LLJITWithTargetProcessControl/LLJITWithTargetProcessControl.cpp' l='174' u='c' c='main'/>
<use f='llvm/llvm/lib/ExecutionEngine/Orc/CompileOnDemandLayer.cpp' l='176' u='c' c='_ZN4llvm3orc20CompileOnDemandLayer4emitESt10unique_ptrINS0_29MaterializationResponsibilityESt14default_deleteIS3_EENS0_16ThreadSafeModuleE'/>
<use f='llvm/llvm/lib/ExecutionEngine/Orc/LazyReexports.cpp' l='168' u='c' c='_ZN4llvm3orc32LazyReexportsMaterializationUnit11materializeESt10unique_ptrINS0_29MaterializationResponsibilityESt14default_deleteIS3_EE'/>
