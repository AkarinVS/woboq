<def f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='561' type='const llvm::MemoryDepChecker &amp; llvm::LoopAccessInfo::getDepChecker() const'/>
<use f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='763' u='c' c='_ZNK4llvm16MemoryDepChecker10Dependence9getSourceERKNS_14LoopAccessInfoE'/>
<use f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='768' u='c' c='_ZNK4llvm16MemoryDepChecker10Dependence14getDestinationERKNS_14LoopAccessInfoE'/>
<use f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='886' u='c' c='_ZNK4llvm21InterleavedAccessInfo19areDependencesValidEv'/>
<use f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='945' u='c' c='_ZN4llvm21InterleavedAccessInfo18collectDependencesEv'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='559'>/// the Memory Dependence Checker which can determine the
  /// loop-independent and loop-carried dependences between memory accesses.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopDistribute.cpp' l='691' u='c' c='_ZN12_GLOBAL__N_121LoopDistributeForLoop11processLoopERSt8functionIFRKN4llvm14LoopAccessInfoERNS2_4LoopEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopDistribute.cpp' l='716' u='c' c='_ZN12_GLOBAL__N_121LoopDistributeForLoop11processLoopERSt8functionIFRKN4llvm14LoopAccessInfoERNS2_4LoopEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp' l='180' u='c' c='_ZN12_GLOBAL__N_122LoadEliminationForLoop26findStoreToLoadDependencesERKN4llvm14LoopAccessInfoE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp' l='369' u='c' c='_ZN12_GLOBAL__N_122LoadEliminationForLoop35findPointersWrittenOnForwardingPathERKN4llvm15SmallVectorImplINS_30StoreToLoadForwardingCandidateEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp' l='479' u='c' c='_ZN12_GLOBAL__N_122LoadEliminationForLoop11processLoopEv'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopVersioning.cpp' l='221' u='c' c='_ZN4llvm14LoopVersioning23annotateLoopWithNoAliasEv'/>
<use f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='329' u='c' c='_ZNK4llvm25LoopVectorizationLegality23isSafeForAnyVectorWidthEv'/>
<use f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='335' u='c' c='_ZNK4llvm25LoopVectorizationLegality27getMaxSafeVectorWidthInBitsEv'/>
