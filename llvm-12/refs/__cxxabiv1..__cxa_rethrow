<dec f='llvm/build/projects/libcxx/include/c++build/cxxabi.h' l='66' type='void __cxxabiv1::__cxa_rethrow()'/>
<doc f='llvm/build/projects/libcxx/include/c++build/cxxabi.h' l='65'>// 2.5.4 Rethrowing Exceptions</doc>
<dec f='llvm/libcxxabi/include/cxxabi.h' l='66' type='void __cxxabiv1::__cxa_rethrow()'/>
<doc f='llvm/libcxxabi/include/cxxabi.h' l='65'>// 2.5.4 Rethrowing Exceptions</doc>
<def f='llvm/libcxxabi/src/cxa_exception.cpp' l='583' ll='619' type='void __cxxabiv1::__cxa_rethrow()'/>
<doc f='llvm/libcxxabi/src/cxa_exception.cpp' l='572'>/*  This routine can rethrow native or foreign exceptions.
If the exception is native:
* marks the exception object on top of the caughtExceptions stack
  (in an implementation-defined way) as being rethrown.
* If the caughtExceptions stack is empty, it calls terminate()
  (see [C++FDIS] [except.throw], 15.1.8).
* It then calls _Unwind_RaiseException which should not return
   (terminate if it does).
  Note:  exception_header may be masquerading as a __cxa_dependent_exception
         and that&apos;s ok.
*/</doc>
