<dec f='llvm/clang/include/clang/Sema/Sema.h' l='5096' type='clang::DeclRefExpr * clang::Sema::BuildDeclRefExpr(clang::ValueDecl * D, clang::QualType Ty, clang::ExprValueKind VK, const clang::DeclarationNameInfo &amp; NameInfo, clang::NestedNameSpecifierLoc NNS, clang::NamedDecl * FoundD = nullptr, clang::SourceLocation TemplateKWLoc = clang::SourceLocation(), const clang::TemplateArgumentListInfo * TemplateArgs = nullptr)'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='1951' u='c' c='_ZN5clang4Sema16BuildDeclRefExprEPNS_9ValueDeclENS_8QualTypeENS_13ExprValueKindERKNS_19DeclarationNameInfoEPKNS_12CXXScopeSpecEPNS_9NamedDeclENS_14Sou11200164'/>
<def f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2014' ll='2070' type='clang::DeclRefExpr * clang::Sema::BuildDeclRefExpr(clang::ValueDecl * D, clang::QualType Ty, clang::ExprValueKind VK, const clang::DeclarationNameInfo &amp; NameInfo, clang::NestedNameSpecifierLoc NNS, clang::NamedDecl * FoundD = nullptr, clang::SourceLocation TemplateKWLoc = clang::SourceLocation(), const clang::TemplateArgumentListInfo * TemplateArgs = nullptr)'/>
<doc f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2012'>/// BuildDeclRefExpr - Build an expression that references a
/// declaration that does not require a closure capture.</doc>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='15101' u='c' c='_ZN5clang4Sema30FixOverloadedFunctionReferenceEPNS_4ExprENS_14DeclAccessPairEPNS_12FunctionDeclE'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='15122' u='c' c='_ZN5clang4Sema30FixOverloadedFunctionReferenceEPNS_4ExprENS_14DeclAccessPairEPNS_12FunctionDeclE'/>
