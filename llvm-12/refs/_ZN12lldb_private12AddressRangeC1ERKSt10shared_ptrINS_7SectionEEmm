<dec f='llvm/lldb/include/lldb/Core/AddressRange.h' l='47' type='void lldb_private::AddressRange::AddressRange(const lldb::SectionSP &amp; section, lldb::addr_t offset, lldb::addr_t byte_size)'/>
<doc f='llvm/lldb/include/lldb/Core/AddressRange.h' l='33'>/// Construct with a section pointer, offset, and byte_size.
  ///
  /// Initialize the address with the supplied \a section, \a offset and \a
  /// byte_size.
  ///
  /// \param[in] section
  ///     A section pointer to a valid lldb::Section, or NULL if the
  ///     address doesn&apos;t have a section or will get resolved later.
  ///
  /// \param[in] offset
  ///     The offset in bytes into \a section.
  ///
  /// \param[in] byte_size
  ///     The size in bytes of the address range.</doc>
<def f='llvm/lldb/source/Core/AddressRange.cpp' l='36' ll='38' type='void lldb_private::AddressRange::AddressRange(const lldb::SectionSP &amp; section, lldb::addr_t offset, lldb::addr_t byte_size)'/>
<use f='llvm/lldb/source/Plugins/ObjectFile/ELF/ObjectFileELF.cpp' l='2272' u='c' c='_ZN13ObjectFileELF12ParseSymbolsEPN12lldb_private6SymtabEmPNS0_11SectionListEmRKNS0_13DataExtractorES7_'/>
<use f='llvm/lldb/source/Plugins/SymbolFile/Breakpad/SymbolFileBreakpad.cpp' l='350' u='c' c='_ZN12lldb_private8breakpad18SymbolFileBreakpad10AddSymbolsERNS_6SymtabE'/>
<use f='llvm/lldb/source/Symbol/LineEntry.cpp' l='27' u='c' c='_ZN12lldb_private9LineEntryC1ERKSt10shared_ptrINS_7SectionEEmmRKNS_8FileSpecEjtbbbbb'/>
<use f='llvm/lldb/source/Symbol/Symbol.cpp' l='47' u='c' c='_ZN12lldb_private6SymbolC1EjN4llvm9StringRefEN4lldb10SymbolTypeEbbbbRKSt10shared_ptrINS_7SectionEEmmbbj'/>
