<dec f='llvm/compiler-rt/lib/xray/xray_flags.h' l='32' type='const char * __xray::useCompilerDefinedFlags()'/>
<use f='llvm/compiler-rt/lib/xray/xray_fdr_logging.cpp' l='643' u='c' c='__xray::fdrLoggingInit'/>
<def f='llvm/compiler-rt/lib/xray/xray_flags.cpp' l='44' ll='55' type='const char * __xray::useCompilerDefinedFlags()'/>
<use f='llvm/compiler-rt/lib/xray/xray_flags.cpp' l='67' u='c' c='__xray::initializeFlags'/>
<doc f='llvm/compiler-rt/lib/xray/xray_flags.cpp' l='39'>// This function, as defined with the help of a macro meant to be introduced at
// build time of the XRay runtime, passes in a statically defined list of
// options that control XRay. This means users/deployments can tweak the
// defaults that override the hard-coded defaults in the xray_flags.inc at
// compile-time using the XRAY_DEFAULT_OPTIONS macro.</doc>
