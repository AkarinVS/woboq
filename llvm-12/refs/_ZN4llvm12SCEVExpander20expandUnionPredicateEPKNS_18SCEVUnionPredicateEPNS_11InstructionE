<dec f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='296' type='llvm::Value * llvm::SCEVExpander::expandUnionPredicate(const llvm::SCEVUnionPredicate * Pred, llvm::Instruction * Loc)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='294'>/// A specialized variant of expandCodeForPredicate, handling the case when
  /// we are expanding code for a SCEVUnionPredicate.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='2419' u='c' c='_ZN4llvm12SCEVExpander22expandCodeForPredicateEPKNS_13SCEVPredicateEPNS_11InstructionE'/>
<def f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='2564' ll='2577' type='llvm::Value * llvm::SCEVExpander::expandUnionPredicate(const llvm::SCEVUnionPredicate * Union, llvm::Instruction * IP)'/>
