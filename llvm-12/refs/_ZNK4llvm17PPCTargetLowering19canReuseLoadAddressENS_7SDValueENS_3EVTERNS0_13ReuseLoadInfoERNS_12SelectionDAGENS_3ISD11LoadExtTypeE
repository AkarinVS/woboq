<dec f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.h' l='1079' type='bool llvm::PPCTargetLowering::canReuseLoadAddress(llvm::SDValue Op, llvm::EVT MemVT, llvm::PPCTargetLowering::ReuseLoadInfo &amp; RLI, llvm::SelectionDAG &amp; DAG, ISD::LoadExtType ET = ISD::NON_EXTLOAD) const'/>
<def f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='7729' ll='7781' type='bool llvm::PPCTargetLowering::canReuseLoadAddress(llvm::SDValue Op, llvm::EVT MemVT, llvm::PPCTargetLowering::ReuseLoadInfo &amp; RLI, llvm::SelectionDAG &amp; DAG, ISD::LoadExtType ET = ISD::NON_EXTLOAD) const'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='8062' u='c' c='_ZNK4llvm17PPCTargetLowering14LowerINT_TO_FPENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='8067' u='c' c='_ZNK4llvm17PPCTargetLowering14LowerINT_TO_FPENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='8077' u='c' c='_ZNK4llvm17PPCTargetLowering14LowerINT_TO_FPENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='8153' u='c' c='_ZNK4llvm17PPCTargetLowering14LowerINT_TO_FPENS_7SDValueERNS_12SelectionDAGE'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='7721'>// We&apos;re trying to insert a regular store, S, and then a load, L. If the
// incoming value, O, is a load, we might just be able to have our load use the
// address used by O. However, we don&apos;t know if anything else will store to
// that address before we can load from it. To prevent this situation, we need
// to insert our load, L, into the chain as a peer of O. To do this, we give L
// the same chain operand as O, we create a token factor from the chain results
// of O and L, and we replace all uses of O&apos;s chain result with that token
// factor (see spliceIntoChain below for this last part).</doc>
