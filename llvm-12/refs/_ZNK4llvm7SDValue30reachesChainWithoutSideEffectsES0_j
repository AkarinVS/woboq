<dec f='llvm/llvm/include/llvm/CodeGen/SelectionDAGNodes.h' l='222' type='bool llvm::SDValue::reachesChainWithoutSideEffects(llvm::SDValue Dest, unsigned int Depth = 2) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/SelectionDAGNodes.h' l='217'>/// Return true if this operand (which must be a chain) reaches the
  /// specified operand without crossing any side-effecting instructions.
  /// In practice, this looks through token factors and non-volatile loads.
  /// In order to remain efficient, this only
  /// looks a couple of nodes in, it does not do an exhaustive search.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='17594' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner10visitSTOREEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp' l='1339' u='c' c='_ZN12_GLOBAL__N_120SelectionDAGLegalize35ExpandExtractFromVectorThroughStackEN4llvm7SDValueE'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='9397' ll='9433' type='bool llvm::SDValue::reachesChainWithoutSideEffects(llvm::SDValue Dest, unsigned int Depth = 2) const'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='9423' u='c' c='_ZNK4llvm7SDValue30reachesChainWithoutSideEffectsES0_j'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='9430' u='c' c='_ZNK4llvm7SDValue30reachesChainWithoutSideEffectsES0_j'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='9387'>/// reachesChainWithoutSideEffects - Return true if this operand (which must
/// be a chain) reaches the specified operand without crossing any
/// side-effecting instructions on any chain path.  In practice, this looks
/// through token factors and non-volatile loads.  In order to remain efficient,
/// this only looks a couple of nodes in, it does not do an exhaustive search.
///
/// Note that we only need to examine chains when we&apos;re searching for
/// side-effects; SelectionDAG requires that all side-effects are represented
/// by chains, even if another operand would force a specific ordering. This
/// constraint is necessary to allow transformations like splitting loads.</doc>
<use f='llvm/llvm/lib/Target/XCore/XCoreISelLowering.cpp' l='1800' u='c' c='_ZNK4llvm19XCoreTargetLowering17PerformDAGCombineEPNS_6SDNodeERNS_14TargetLowering15DAGCombinerInfoE'/>
