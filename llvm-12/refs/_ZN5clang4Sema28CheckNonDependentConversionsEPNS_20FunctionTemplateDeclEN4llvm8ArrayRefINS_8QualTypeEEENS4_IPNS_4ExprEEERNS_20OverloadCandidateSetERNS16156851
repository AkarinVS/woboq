<dec f='llvm/clang/include/clang/Sema/Sema.h' l='3632' type='bool clang::Sema::CheckNonDependentConversions(clang::FunctionTemplateDecl * FunctionTemplate, ArrayRef&lt;clang::QualType&gt; ParamTypes, ArrayRef&lt;clang::Expr *&gt; Args, clang::OverloadCandidateSet &amp; CandidateSet, clang::ConversionSequenceList &amp; Conversions, bool SuppressUserConversions, clang::CXXRecordDecl * ActingContext = nullptr, clang::QualType ObjectType = clang::QualType(), Expr::Classification ObjectClassification = {}, clang::OverloadCandidateParamOrder PO = {})'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='7030' u='c' c='_ZN5clang4Sema26AddMethodTemplateCandidateEPNS_20FunctionTemplateDeclENS_14DeclAccessPairEPNS_13CXXRecordDeclEPNS_24TemplateArgumentListInfoENS_8QualT725749'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='7113' u='c' c='_ZN5clang4Sema28AddTemplateOverloadCandidateEPNS_20FunctionTemplateDeclENS_14DeclAccessPairEPNS_24TemplateArgumentListInfoEN4llvm8ArrayRefIPNS_4ExprEE10996572'/>
<def f='llvm/clang/lib/Sema/SemaOverload.cpp' l='7154' ll='7210' type='bool clang::Sema::CheckNonDependentConversions(clang::FunctionTemplateDecl * FunctionTemplate, ArrayRef&lt;clang::QualType&gt; ParamTypes, ArrayRef&lt;clang::Expr *&gt; Args, clang::OverloadCandidateSet &amp; CandidateSet, clang::ConversionSequenceList &amp; Conversions, bool SuppressUserConversions, clang::CXXRecordDecl * ActingContext = nullptr, clang::QualType ObjectType = clang::QualType(), Expr::Classification ObjectClassification = {}, clang::OverloadCandidateParamOrder PO = {})'/>
<doc f='llvm/clang/lib/Sema/SemaOverload.cpp' l='7151'>/// Check that implicit conversion sequences can be formed for each argument
/// whose corresponding parameter has a non-dependent type, per DR1391&apos;s
/// [temp.deduct.call]p10.</doc>
