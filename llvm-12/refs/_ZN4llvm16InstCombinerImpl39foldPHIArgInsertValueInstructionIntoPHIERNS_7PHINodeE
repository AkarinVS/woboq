<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='619' type='llvm::Instruction * llvm::InstCombinerImpl::foldPHIArgInsertValueInstructionIntoPHI(llvm::PHINode &amp; PN)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='304' ll='340' type='llvm::Instruction * llvm::InstCombinerImpl::foldPHIArgInsertValueInstructionIntoPHI(llvm::PHINode &amp; PN)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='837' u='c' c='_ZN4llvm16InstCombinerImpl19foldPHIArgOpIntoPHIERNS_7PHINodeE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='302'>/// If we have something like phi [insertvalue(a,b,0), insertvalue(c,d,0)],
/// turn this into a phi[a,c] and phi[b,d] and a single insertvalue.</doc>
