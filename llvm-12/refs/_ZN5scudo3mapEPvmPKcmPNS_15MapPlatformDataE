<dec f='llvm/compiler-rt/lib/scudo/standalone/common.h' l='158' type='void * scudo::map(void * Addr, scudo::uptr Size, const char * Name, scudo::uptr Flags = 0, scudo::MapPlatformData * Data = nullptr)'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/vector.h' l='88' u='c' c='_ZN5scudo12VectorNoCtor10reallocateEm'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/secondary.h' l='357' u='c' c='_ZN5scudo12MapAllocator8allocateEmmPmNS_16FillContentsModeE'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/secondary.h' l='391' u='c' c='_ZN5scudo12MapAllocator8allocateEmmPmNS_16FillContentsModeE'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/release.h' l='82' u='c' c='_ZN5scudo18PackedCounterArrayC1Emmm'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/primary32.h' l='273' u='c' c='_ZN5scudo20SizeClassAllocator3218allocateRegionSlowEv'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/primary64.h' l='61' u='c' c='_ZN5scudo20SizeClassAllocator6421initLinkerInitializedEi'/>
<doc f='llvm/compiler-rt/lib/scudo/standalone/common.h' l='150'>// Our platform memory mapping use is restricted to 3 scenarios:
// - reserve memory at a random address (MAP_NOACCESS);
// - commit memory in a previously reserved space;
// - commit memory at a random address.
// As such, only a subset of parameters combinations is valid, which is checked
// by the function implementation. The Data parameter allows to pass opaque
// platform specific data to the function.
// Returns nullptr on error or dies if MAP_ALLOWNOMEM is not specified.</doc>
<def f='llvm/compiler-rt/lib/scudo/standalone/linux.cpp' l='44' ll='77' type='void * scudo::map(void * Addr, scudo::uptr Size, const char * Name, scudo::uptr Flags = 0, scudo::MapPlatformData * Data = nullptr)'/>
