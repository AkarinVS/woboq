<dec f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='270' type='unsigned int llvm::ConstantRange::getMinSignedBits() const'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='268'>/// Compute the maximal number of bits needed to represent every value
  /// in this signed range.</doc>
<def f='llvm/llvm/lib/IR/ConstantRange.cpp' l='423' ll='429' type='unsigned int llvm::ConstantRange::getMinSignedBits() const'/>
<use f='llvm/llvm/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp' l='601' u='c' c='_ZL16narrowSDivOrSRemPN4llvm14BinaryOperatorEPNS_13LazyValueInfoE'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='703' u='c' c='_ZN12_GLOBAL__N_139ConstantRangeTest_getMinSignedBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='710' u='c' c='_ZN12_GLOBAL__N_154ConstantRangeTest_losslessSignedTruncationSignext_Test8TestBodyEv'/>
