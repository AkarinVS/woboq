<def f='llvm/llvm/include/llvm/ADT/APInt.h' l='612' ll='617' type='static llvm::APInt llvm::APInt::getBitsSet(unsigned int numBits, unsigned int loBit, unsigned int hiBit)'/>
<doc f='llvm/llvm/include/llvm/ADT/APInt.h' l='599'>/// Get a value with a block of bits set.
  ///
  /// Constructs an APInt value that has a contiguous range of bits set. The
  /// bits from loBit (inclusive) to hiBit (exclusive) will be set. All other
  /// bits will be zero. For example, with parameters(32, 0, 16) you would get
  /// 0x0000FFFF. Please call getBitsSetWithWrap if \p loBit may be greater than
  /// \p hiBit.
  ///
  /// \param numBits the intended bit width of the result
  /// \param loBit the index of the lowest bit set.
  /// \param hiBit the index of the highest bit set.
  ///
  /// \returns An APInt value with the requested bits set.</doc>
<use f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='2205' u='c' c='_ZN5clang7CodeGen15CodeGenFunction30EmitStoreThroughBitfieldLValueENS0_6RValueENS0_6LValueEPPN4llvm5ValueE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/RegisterBankInfo.cpp' l='567' u='c' c='_ZNK4llvm16RegisterBankInfo12ValueMapping6verifyEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='10824' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner16visitZERO_EXTENDEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='16084' u='c' c='_ZL31ShrinkLoadReplaceStoreWithStoreRKSt4pairIjjEN4llvm7SDValueEPNS3_11StoreSDNodeEPN12_GLOBAL__N_111DAGCombinerE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='16216' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner22ReduceLoadOpStoreWidthEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp' l='2616' u='c' c='_ZL25tryBitfieldInsertOpFromOrPN4llvm6SDNodeERKNS_5APIntEPNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp' l='4067' u='c' c='_ZNK4llvm20AMDGPUTargetLowering17PerformDAGCombineEPNS_6SDNodeERNS_14TargetLowering15DAGCombinerInfoE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIISelLowering.cpp' l='10613' u='c' c='_ZNK4llvm16SITargetLowering26performCvtF32UByteNCombineEPNS_6SDNodeERNS_14TargetLowering15DAGCombinerInfoE'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='6223' u='c' c='_ZL16insert1BitVectorN4llvm7SDValueERNS_12SelectionDAGERKNS_12X86SubtargetE'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='38979' u='c' c='_ZNK4llvm17X86TargetLowering33SimplifyDemandedBitsForTargetNodeENS_7SDValueERKNS_5APIntES4_RNS_9KnownBitsERNS_14TargetLowering17TargetLoweringOptEj'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='47369' u='c' c='_ZL30combineToExtendBoolVectorInRegPN4llvm6SDNodeERNS_12SelectionDAGERNS_14TargetLowering15DAGCombinerInfoERKNS_12X86SubtargetE'/>
<use f='llvm/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp' l='236' u='c' c='_ZL19simplifyX86immShiftRKN4llvm13IntrinsicInstERNS_9IRBuilderINS_12TargetFolderENS_25IRBuilderCallbackInserterEEE'/>
<use f='llvm/llvm/lib/Target/X86/X86TargetTransformInfo.cpp' l='3141' u='c' c='_ZN4llvm10X86TTIImpl24getScalarizationOverheadEPNS_10VectorTypeERKNS_5APIntEbb'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp' l='1288' u='c' c='_ZL34tryToMergePartialOverlappingStoresPN4llvm9StoreInstES1_llRKNS_10DataLayoutERT_PNS_13DominatorTreeE'/>
<use f='llvm/llvm/unittests/ADT/APIntTest.cpp' l='1832' u='c' c='_ZN12_GLOBAL__N_123APIntTest_byteSwap_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/APIntTest.cpp' l='1833' u='c' c='_ZN12_GLOBAL__N_123APIntTest_byteSwap_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/APIntTest.cpp' l='2075' u='c' c='_ZN12_GLOBAL__N_125APIntTest_getBitsSet_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/APIntTest.cpp' l='2083' u='c' c='_ZN12_GLOBAL__N_125APIntTest_getBitsSet_Test8TestBodyEv'/>
