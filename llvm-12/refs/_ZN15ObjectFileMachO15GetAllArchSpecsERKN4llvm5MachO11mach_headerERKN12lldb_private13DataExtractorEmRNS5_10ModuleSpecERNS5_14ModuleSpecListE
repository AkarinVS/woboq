<dec f='llvm/lldb/source/Plugins/ObjectFile/Mach-O/ObjectFileMachO.h' l='162' type='static void ObjectFileMachO::GetAllArchSpecs(const llvm::MachO::mach_header &amp; header, const lldb_private::DataExtractor &amp; data, lldb::offset_t lc_offset, lldb_private::ModuleSpec &amp; base_spec, lldb_private::ModuleSpecList &amp; all_specs)'/>
<doc f='llvm/lldb/source/Plugins/ObjectFile/Mach-O/ObjectFileMachO.h' l='155'>/// Enumerate all ArchSpecs supported by this Mach-O file.
  ///
  /// On macOS one Mach-O slice can contain multiple load commands:
  /// One load command for being loaded into a macOS process and one
  /// load command for being loaded into a macCatalyst process. In
  /// contrast to ObjectContainerUniversalMachO, this is the same
  /// binary that can be loaded into different contexts.</doc>
<use f='llvm/lldb/source/Plugins/ObjectFile/Mach-O/ObjectFileMachO.cpp' l='843' u='c' c='_ZN15ObjectFileMachO23GetModuleSpecificationsERKN12lldb_private8FileSpecERSt10shared_ptrINS0_10DataBufferEEmmmRNS0_14ModuleSpecListE'/>
<use f='llvm/lldb/source/Plugins/ObjectFile/Mach-O/ObjectFileMachO.cpp' l='1029' u='c' c='_ZN15ObjectFileMachO11ParseHeaderEv'/>
<use f='llvm/lldb/source/Plugins/ObjectFile/Mach-O/ObjectFileMachO.cpp' l='4814' u='c' c='_ZN15ObjectFileMachO4DumpEPN12lldb_private6StreamE'/>
<def f='llvm/lldb/source/Plugins/ObjectFile/Mach-O/ObjectFileMachO.cpp' l='4945' ll='5089' type='static void ObjectFileMachO::GetAllArchSpecs(const llvm::MachO::mach_header &amp; header, const lldb_private::DataExtractor &amp; data, lldb::offset_t lc_offset, lldb_private::ModuleSpec &amp; base_spec, lldb_private::ModuleSpecList &amp; all_specs)'/>
<use f='llvm/lldb/source/Plugins/ObjectFile/Mach-O/ObjectFileMachO.cpp' l='5096' u='c' c='_ZN15ObjectFileMachO15GetArchitectureESt10shared_ptrIN12lldb_private6ModuleEERKN4llvm5MachO11mach_headerERKNS1_13DataExtractorEm'/>
