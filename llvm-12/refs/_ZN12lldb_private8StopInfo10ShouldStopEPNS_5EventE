<def f='llvm/lldb/include/lldb/Target/StopInfo.h' l='158' type='bool lldb_private::StopInfo::ShouldStop(lldb_private::Event * event_ptr)'/>
<doc f='llvm/lldb/include/lldb/Target/StopInfo.h' l='151'>// Stop the thread by default. Subclasses can override this to allow the
  // thread to continue if desired.  The ShouldStop method should not do
  // anything that might run code.  If you need to run code when deciding
  // whether to stop at this StopInfo, that must be done in the PerformAction.
  // The PerformAction will always get called before the ShouldStop.  This is
  // done by the ProcessEventData::DoOnRemoval, though the ThreadPlanBase needs
  // to consult this later on.</doc>
<use f='llvm/lldb/source/Target/Process.cpp' l='3942' u='c' c='_ZN12lldb_private7Process16ProcessEventData10ShouldStopEPNS_5EventERb'/>
<ovr f='llvm/lldb/source/Target/StopInfo.cpp' l='250' c='_ZN12lldb_private18StopInfoBreakpoint10ShouldStopEPNS_5EventE'/>
<ovr f='llvm/lldb/source/Target/StopInfo.cpp' l='676' c='_ZN12lldb_private18StopInfoWatchpoint10ShouldStopEPNS_5EventE'/>
<ovr f='llvm/lldb/source/Target/StopInfo.cpp' l='924' c='_ZN12lldb_private18StopInfoUnixSignal10ShouldStopEPNS_5EventE'/>
<ovr f='llvm/lldb/source/Target/StopInfo.cpp' l='1049' c='_ZN12lldb_private18StopInfoThreadPlan10ShouldStopEPNS_5EventE'/>
<use f='llvm/lldb/source/Target/StopInfo.cpp' l='1053' u='c' c='_ZN12lldb_private18StopInfoThreadPlan10ShouldStopEPNS_5EventE'/>
<ovr f='llvm/lldb/source/Target/StopInfo.cpp' l='1071' c='_ZN12lldb_private12StopInfoExec10ShouldStopEPNS_5EventE'/>
<use f='llvm/lldb/source/Target/ThreadPlanBase.cpp' l='147' u='c' c='_ZN12lldb_private14ThreadPlanBase10ShouldStopEPNS_5EventE'/>
<ovr f='llvm/lldb/unittests/Process/ProcessEventDataTest.cpp' l='90' c='_ZN12_GLOBAL__N_113DummyStopInfo10ShouldStopEPN12lldb_private5EventE'/>
