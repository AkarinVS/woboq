<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangFunctionCaller.h' l='59'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangFunctionCaller.h' l='82'/>
<inh f='llvm/clang/include/clang/Sema/SemaConsumer.h' l='25' c='clang::SemaConsumer'/>
<def f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ASTStructExtractor.h' l='33' ll='127'/>
<size>88</size>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ASTStructExtractor.h' l='19'>/// \class ASTStructExtractor ASTStructExtractor.h
/// &quot;lldb/Expression/ASTStructExtractor.h&quot; Extracts and describes the argument
/// structure for a wrapped function.
///
/// This pass integrates with ClangFunctionCaller, which calls functions with
/// custom sets of arguments.  To avoid having to implement the full calling
/// convention for the target&apos;s architecture, ClangFunctionCaller writes a
/// simple wrapper function that takes a pointer to an argument structure that
/// contains room for the address of the function to be called, the values of
/// all its arguments, and room for the function&apos;s return value.
///
/// The definition of this struct is itself in the body of the wrapper
/// function, so Clang does the structure layout itself.  ASTStructExtractor
/// reads through the AST for the wrapper function and finds the struct.</doc>
<fun r='_ZN12lldb_private18ASTStructExtractorC1EPN5clang11ASTConsumerEPKcRNS_19ClangFunctionCallerE'/>
<fun r='_ZN12lldb_private18ASTStructExtractorD1Ev'/>
<fun r='_ZN12lldb_private18ASTStructExtractor10InitializeERN5clang10ASTContextE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor18HandleTopLevelDeclEN5clang12DeclGroupRefE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor21HandleTranslationUnitERN5clang10ASTContextE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor23HandleTagDeclDefinitionEPN5clang7TagDeclE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor27CompleteTentativeDefinitionEPN5clang7VarDeclE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor12HandleVTableEPN5clang13CXXRecordDeclE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor10PrintStatsEv'/>
<fun r='_ZN12lldb_private18ASTStructExtractor14InitializeSemaERN5clang4SemaE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor10ForgetSemaEv'/>
<fun r='_ZN12lldb_private18ASTStructExtractor23ExtractFromFunctionDeclEPN5clang12FunctionDeclE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor23ExtractFromTopLevelDeclEPN5clang4DeclE'/>
<mbr r='lldb_private::ASTStructExtractor::m_ast_context' o='128' t='clang::ASTContext *'/>
<mbr r='lldb_private::ASTStructExtractor::m_passthrough' o='192' t='clang::ASTConsumer *'/>
<mbr r='lldb_private::ASTStructExtractor::m_passthrough_sema' o='256' t='clang::SemaConsumer *'/>
<mbr r='lldb_private::ASTStructExtractor::m_sema' o='320' t='clang::Sema *'/>
<mbr r='lldb_private::ASTStructExtractor::m_function' o='384' t='lldb_private::ClangFunctionCaller &amp;'/>
<mbr r='lldb_private::ASTStructExtractor::m_struct_name' o='448' t='std::string'/>
<fun r='_ZN12lldb_private18ASTStructExtractorC1EPN5clang11ASTConsumerEPKcRNS_19ClangFunctionCallerE'/>
<fun r='_ZN12lldb_private18ASTStructExtractorD1Ev'/>
<fun r='_ZN12lldb_private18ASTStructExtractor10InitializeERN5clang10ASTContextE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor23ExtractFromFunctionDeclEPN5clang12FunctionDeclE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor23ExtractFromTopLevelDeclEPN5clang4DeclE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor18HandleTopLevelDeclEN5clang12DeclGroupRefE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor21HandleTranslationUnitERN5clang10ASTContextE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor23HandleTagDeclDefinitionEPN5clang7TagDeclE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor27CompleteTentativeDefinitionEPN5clang7VarDeclE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor12HandleVTableEPN5clang13CXXRecordDeclE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor10PrintStatsEv'/>
<fun r='_ZN12lldb_private18ASTStructExtractor14InitializeSemaERN5clang4SemaE'/>
<fun r='_ZN12lldb_private18ASTStructExtractor10ForgetSemaEv'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangUserExpression.h' l='85'/>
<size>88</size>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangFunctionCaller.cpp' l='212' c='_ZN12lldb_private19ClangFunctionCaller25ClangFunctionCallerHelper14ASTTransformerEPN5clang11ASTConsumerE'/>
<size>88</size>
