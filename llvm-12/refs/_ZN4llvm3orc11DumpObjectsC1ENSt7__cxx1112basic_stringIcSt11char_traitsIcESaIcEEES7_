<dec f='llvm/llvm/include/llvm/ExecutionEngine/Orc/DebugUtils.h' l='115' type='void llvm::orc::DumpObjects::DumpObjects(std::string DumpDir = &quot;&quot;, std::string IdentifierOverride = &quot;&quot;)'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/Orc/DebugUtils.h' l='102'>/// Construct a DumpObjects transform that will dump objects to disk.
  ///
  /// @param DumpDir specifies the path to write dumped objects to. DumpDir may
  /// be empty, in which case files will be dumped to the working directory. If
  /// DumpDir is non-empty then any trailing separators will be discarded.
  ///
  /// @param IdentifierOverride specifies a file name stem to use when dumping
  /// objects. If empty, each MemoryBuffer&apos;s identifier will be used (with a .o
  /// suffix added if not already present). If an identifier override is
  /// supplied it will be used instead (since all buffers will use the same
  /// identifier, the resulting files will be named &lt;ident&gt;.o, &lt;ident&gt;.2.o,
  /// &lt;ident&gt;.3.o, and so on). IdentifierOverride should not contain an
  /// extension, as a .o suffix will be added by DumpObjects.</doc>
<use f='llvm/llvm/examples/OrcV2Examples/LLJITDumpObjects/LLJITDumpObjects.cpp' l='57' u='c' c='main'/>
<def f='llvm/llvm/lib/ExecutionEngine/Orc/DebugUtils.cpp' l='301' ll='309' type='void llvm::orc::DumpObjects::DumpObjects(std::string DumpDir = &quot;&quot;, std::string IdentifierOverride = &quot;&quot;)'/>
