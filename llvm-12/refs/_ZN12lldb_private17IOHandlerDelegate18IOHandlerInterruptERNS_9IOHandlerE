<def f='llvm/lldb/include/lldb/Core/IOHandler.h' l='290' type='bool lldb_private::IOHandlerDelegate::IOHandlerInterrupt(lldb_private::IOHandler &amp; io_handler)'/>
<doc f='llvm/lldb/include/lldb/Core/IOHandler.h' l='286'>// Intercept the IOHandler::Interrupt() calls and do something.
  //
  // Return true if the interrupt was handled, false if the IOHandler should
  // continue to try handle the interrupt itself.</doc>
<use f='llvm/lldb/source/Core/IOHandler.cpp' l='596' u='c' c='_ZN12lldb_private17IOHandlerEditline9InterruptEv'/>
<ovr f='llvm/lldb/source/Expression/REPL.cpp' l='104' c='_ZN12lldb_private4REPL18IOHandlerInterruptERNS_9IOHandlerE'/>
<ovr f='llvm/lldb/source/Interpreter/CommandInterpreter.cpp' l='2895' c='_ZN12lldb_private18CommandInterpreter18IOHandlerInterruptERNS_9IOHandlerE'/>
