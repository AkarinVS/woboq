<dec f='llvm/lldb/tools/lldb-vscode/JSONUtils.h' l='441' type='llvm::json::Value lldb_vscode::CreateVariable(lldb::SBValue v, int64_t variablesReference, int64_t varID, bool format_hex)'/>
<doc f='llvm/lldb/tools/lldb-vscode/JSONUtils.h' l='402'>/// Create a &quot;Variable&quot; object for a LLDB thread object.
///
/// This function will fill in the following keys in the returned
/// object:
///   &quot;name&quot; - the name of the variable
///   &quot;value&quot; - the value of the variable as a string
///   &quot;type&quot; - the typename of the variable as a string
///   &quot;id&quot; - a unique identifier for a value in case there are multiple
///          variables with the same name. Other parts of the VSCode
///          protocol refer to values by name so this can help
///          disambiguate such cases if a IDE passes this &quot;id&quot; value
///          back down.
///   &quot;variablesReference&quot; - Zero if the variable has no children,
///          non-zero integer otherwise which can be used to expand
///          the variable.
///   &quot;evaluateName&quot; - The name of the variable to use in expressions
///                    as a string.
///
/// \param[in] v
///     The LLDB value to use when populating out the &quot;Variable&quot;
///     object.
///
/// \param[in] variablesReference
///     The variable reference. Zero if this value isn&apos;t structured
///     and has no children, non-zero if it does have children and
///     might be asked to expand itself.
///
/// \param[in] varID
///     A unique variable identifier to help in properly identifying
///     variables with the same name. This is an extension to the
///     VS protocol.
///
/// \param[in] format_hex
///     It set to true the variable will be formatted as hex in
///     the &quot;value&quot; key value pair for the value of the variable.
///
/// \return
///     A &quot;Variable&quot; JSON object with that follows the formal JSON
///     definition outlined by Microsoft.</doc>
<def f='llvm/lldb/tools/lldb-vscode/JSONUtils.cpp' l='968' ll='990' type='llvm::json::Value lldb_vscode::CreateVariable(lldb::SBValue v, int64_t variablesReference, int64_t varID, bool format_hex)'/>
<doc f='llvm/lldb/tools/lldb-vscode/JSONUtils.cpp' l='906'>// &quot;Variable&quot;: {
//   &quot;type&quot;: &quot;object&quot;,
//   &quot;description&quot;: &quot;A Variable is a name/value pair. Optionally a variable
//                   can have a &apos;type&apos; that is shown if space permits or when
//                   hovering over the variable&apos;s name. An optional &apos;kind&apos; is
//                   used to render additional properties of the variable,
//                   e.g. different icons can be used to indicate that a
//                   variable is public or private. If the value is
//                   structured (has children), a handle is provided to
//                   retrieve the children with the VariablesRequest. If
//                   the number of named or indexed children is large, the
//                   numbers should be returned via the optional
//                   &apos;namedVariables&apos; and &apos;indexedVariables&apos; attributes. The
//                   client can use this optional information to present the
//                   children in a paged UI and fetch them in chunks.&quot;,
//   &quot;properties&quot;: {
//     &quot;name&quot;: {
//       &quot;type&quot;: &quot;string&quot;,
//       &quot;description&quot;: &quot;The variable&apos;s name.&quot;
//     },
//     &quot;value&quot;: {
//       &quot;type&quot;: &quot;string&quot;,
//       &quot;description&quot;: &quot;The variable&apos;s value. This can be a multi-line text,
//                       e.g. for a function the body of a function.&quot;
//     },
//     &quot;type&quot;: {
//       &quot;type&quot;: &quot;string&quot;,
//       &quot;description&quot;: &quot;The type of the variable&apos;s value. Typically shown in
//                       the UI when hovering over the value.&quot;
//     },
//     &quot;presentationHint&quot;: {
//       &quot;$ref&quot;: &quot;#/definitions/VariablePresentationHint&quot;,
//       &quot;description&quot;: &quot;Properties of a variable that can be used to determine
//                       how to render the variable in the UI.&quot;
//     },
//     &quot;evaluateName&quot;: {
//       &quot;type&quot;: &quot;string&quot;,
//       &quot;description&quot;: &quot;Optional evaluatable name of this variable which can
//                       be passed to the &apos;EvaluateRequest&apos; to fetch the
//                       variable&apos;s value.&quot;
//     },
//     &quot;variablesReference&quot;: {
//       &quot;type&quot;: &quot;integer&quot;,
//       &quot;description&quot;: &quot;If variablesReference is &gt; 0, the variable is
//                       structured and its children can be retrieved by
//                       passing variablesReference to the VariablesRequest.&quot;
//     },
//     &quot;namedVariables&quot;: {
//       &quot;type&quot;: &quot;integer&quot;,
//       &quot;description&quot;: &quot;The number of named child variables. The client can
//                       use this optional information to present the children
//                       in a paged UI and fetch them in chunks.&quot;
//     },
//     &quot;indexedVariables&quot;: {
//       &quot;type&quot;: &quot;integer&quot;,
//       &quot;description&quot;: &quot;The number of indexed child variables. The client
//                       can use this optional information to present the
//                       children in a paged UI and fetch them in chunks.&quot;
//     }
//   },
//   &quot;required&quot;: [ &quot;name&quot;, &quot;value&quot;, &quot;variablesReference&quot; ]
// }</doc>
<use f='llvm/lldb/tools/lldb-vscode/lldb-vscode.cpp' l='2878' u='c' c='_ZN12_GLOBAL__N_117request_variablesERKN4llvm4json6ObjectE'/>
<use f='llvm/lldb/tools/lldb-vscode/lldb-vscode.cpp' l='2896' u='c' c='_ZN12_GLOBAL__N_117request_variablesERKN4llvm4json6ObjectE'/>
<use f='llvm/lldb/tools/lldb-vscode/lldb-vscode.cpp' l='2899' u='c' c='_ZN12_GLOBAL__N_117request_variablesERKN4llvm4json6ObjectE'/>
