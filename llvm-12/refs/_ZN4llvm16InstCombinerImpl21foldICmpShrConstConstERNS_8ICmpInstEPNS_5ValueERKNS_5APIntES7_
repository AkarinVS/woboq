<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='690' type='llvm::Instruction * llvm::InstCombinerImpl::foldICmpShrConstConst(llvm::ICmpInst &amp; I, llvm::Value * ShAmt, const llvm::APInt &amp; C1, const llvm::APInt &amp; C2)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='1115' ll='1170' type='llvm::Instruction * llvm::InstCombinerImpl::foldICmpShrConstConst(llvm::ICmpInst &amp; I, llvm::Value * A, const llvm::APInt &amp; AP1, const llvm::APInt &amp; AP2)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='2178' u='c' c='_ZN4llvm16InstCombinerImpl19foldICmpShrConstantERNS_8ICmpInstEPNS_14BinaryOperatorERKNS_5APIntE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='1112'>/// Handle &quot;(icmp eq/ne (ashr/lshr AP2, A), AP1)&quot; -&gt;
/// (icmp eq/ne A, Log2(AP2/AP1)) -&gt;
/// (icmp eq/ne A, Log2(AP2) - Log2(AP1)).</doc>
