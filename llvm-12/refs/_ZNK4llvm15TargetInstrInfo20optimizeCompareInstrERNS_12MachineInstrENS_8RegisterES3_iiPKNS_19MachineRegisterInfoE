<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1511' ll='1515' type='bool llvm::TargetInstrInfo::optimizeCompareInstr(llvm::MachineInstr &amp; CmpInstr, llvm::Register SrcReg, llvm::Register SrcReg2, int Mask, int Value, const llvm::MachineRegisterInfo * MRI) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1508'>/// See if the comparison instruction can be converted
  /// into something more efficient. E.g., on ARM most instructions can set the
  /// flags register, obviating the need for a separate CMP.</doc>
<use f='llvm/llvm/lib/CodeGen/PeepholeOptimizer.cpp' l='621' u='c' c='_ZN12_GLOBAL__N_117PeepholeOptimizer16optimizeCmpInstrERN4llvm12MachineInstrE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='1431' c='_ZNK4llvm16AArch64InstrInfo20optimizeCompareInstrERNS_12MachineInstrENS_8RegisterES3_iiPKNS_19MachineRegisterInfoE'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='2979' c='_ZNK4llvm16ARMBaseInstrInfo20optimizeCompareInstrERNS_12MachineInstrENS_8RegisterES3_iiPKNS_19MachineRegisterInfoE'/>
<ovr f='llvm/llvm/lib/Target/Lanai/LanaiInstrInfo.cpp' l='283' c='_ZNK4llvm14LanaiInstrInfo20optimizeCompareInstrERNS_12MachineInstrENS_8RegisterES3_iiPKNS_19MachineRegisterInfoE'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='2352' c='_ZNK4llvm12PPCInstrInfo20optimizeCompareInstrERNS_12MachineInstrENS_8RegisterES3_iiPKNS_19MachineRegisterInfoE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='4136' c='_ZNK4llvm12X86InstrInfo20optimizeCompareInstrERNS_12MachineInstrENS_8RegisterES3_iiPKNS_19MachineRegisterInfoE'/>
