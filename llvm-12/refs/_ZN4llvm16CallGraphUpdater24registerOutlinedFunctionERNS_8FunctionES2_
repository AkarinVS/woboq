<dec f='llvm/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h' l='90' type='void llvm::CallGraphUpdater::registerOutlinedFunction(llvm::Function &amp; OriginalFn, llvm::Function &amp; NewFn)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h' l='87'>/// If a new function was created by outlining, this method can be called
  /// to update the call graph for the new function. Note that the old one
  /// still needs to be re-analyzed or manually updated.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/OpenMPOpt.cpp' l='852' u='c' c='_ZN12_GLOBAL__N_19OpenMPOpt20mergeParallelRegionsEv'/>
<def f='llvm/llvm/lib/Transforms/Utils/CallGraphUpdater.cpp' l='99' ll='105' type='void llvm::CallGraphUpdater::registerOutlinedFunction(llvm::Function &amp; OriginalFn, llvm::Function &amp; NewFn)'/>
