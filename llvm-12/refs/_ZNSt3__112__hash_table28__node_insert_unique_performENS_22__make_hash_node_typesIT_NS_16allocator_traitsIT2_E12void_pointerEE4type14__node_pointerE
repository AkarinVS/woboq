<dec f='llvm/build/include/c++/v1/__hash_table' l='1057' type='void std::__1::__hash_table::__node_insert_unique_perform(std::__1::__hash_table::__node_pointer __ptr)'/>
<def f='llvm/build/include/c++/v1/__hash_table' l='1878' ll='1904' type='void std::__1::__hash_table::__node_insert_unique_perform(std::__1::__hash_table::__node_pointer __nd)'/>
<use f='llvm/build/include/c++/v1/__hash_table' l='1918' u='c' c='_ZNSt3__112__hash_table20__node_insert_uniqueENS_22__make_hash_node_typesIT_NS_16allocator_traitsIT2_E12void_pointerEE4type14__node_pointerE'/>
<use f='llvm/build/include/c++/v1/__hash_table' l='2248' u='c' c='_ZNSt3__112__hash_table26__node_handle_merge_uniqueERTL0__'/>
<doc f='llvm/build/include/c++/v1/__hash_table' l='1874'>// Insert the node __nd into the container by pushing it into the right bucket,
// and updating size(). Assumes that __nd-&gt;__hash is up-to-date, and that
// rehashing has already occurred and that no element with the same key exists
// in the map.</doc>
