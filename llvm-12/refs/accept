<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='2843' macro='1' type='int accept(int fd, void * addr, unsigned int * addrlen)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='2859' u='a' c='_ZL28InitializeCommonInterceptorsv'/>
<dec f='include/sys/socket.h' l='232' type='int accept(int __fd, struct sockaddr *__restrict __addr, socklen_t *__restrict __addr_len)'/>
<doc f='include/sys/socket.h' l='224'>/* Await a connection on socket FD.
   When a connection arrives, open a new socket to communicate with it,
   set *ADDR (which is *ADDR_LEN bytes long) to the address of the connecting
   peer and *ADDR_LEN to the address&apos;s actual length, and return the
   new socket&apos;s descriptor, or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<use f='llvm/lldb/source/Host/common/Socket.cpp' l='478' u='a' c='_ZN12lldb_private6Socket12AcceptSocketEiP8sockaddrPjbRNS_6StatusE'/>
<use f='llvm/lldb/tools/lldb-vscode/lldb-vscode.cpp' l='128' u='a' c='_ZN12_GLOBAL__N_116AcceptConnectionEi'/>
<use f='llvm/llvm/tools/llvm-jitlink/llvm-jitlink-executor/llvm-jitlink-executor.cpp' l='76' u='c' c='_Z12openListenerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi'/>
