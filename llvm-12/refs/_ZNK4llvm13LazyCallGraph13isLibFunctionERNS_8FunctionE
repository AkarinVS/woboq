<def f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='998' type='bool llvm::LazyCallGraph::isLibFunction(llvm::Function &amp; F) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='992'>/// Test whether a function is a known and defined library function tracked by
  /// the call graph.
  ///
  /// Because these functions are known to LLVM they are specially modeled in
  /// the call graph and even when all IR-level references have been removed
  /// remain active and reachable.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/Inliner.cpp' l='873' u='c' c='_ZN4llvm11InlinerPass3runERNS_13LazyCallGraph3SCCERNS_15AnalysisManagerIS2_JRS1_EEES5_RNS_17CGSCCUpdateResultE'/>
