<dec f='llvm/llvm/include/llvm/Analysis/Loads.h' l='165' type='bool llvm::canReplacePointersIfEqual(llvm::Value * A, llvm::Value * B, const llvm::DataLayout &amp; DL, llvm::Instruction * CtxI)'/>
<doc f='llvm/llvm/include/llvm/Analysis/Loads.h' l='159'>/// Returns true if a pointer value \p A can be replace with another pointer
/// value \B if they are deemed equal through some means (e.g. information from
/// conditions).
/// NOTE: the current implementations is incomplete and unsound. It does not
/// reject all invalid cases yet, but will be made stricter in the future. In
/// particular this means returning true means unknown if replacement is safe.</doc>
<def f='llvm/llvm/lib/Analysis/Loads.cpp' l='546' ll='564' type='bool llvm::canReplacePointersIfEqual(llvm::Value * A, llvm::Value * B, const llvm::DataLayout &amp; DL, llvm::Instruction * CtxI)'/>
<use f='llvm/llvm/unittests/Analysis/LoadsTest.cpp' l='92' u='c' c='_ZN40LoadsTest_CanReplacePointersIfEqual_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LoadsTest.cpp' l='99' u='c' c='_ZN40LoadsTest_CanReplacePointersIfEqual_Test8TestBodyEv'/>
