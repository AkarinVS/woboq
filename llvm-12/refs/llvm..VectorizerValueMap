<def f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='119' ll='235'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='251' c='_ZN4llvm16VPTransformStateC1ENS_12ElementCountEjPNS_4LoopEPNS_8LoopInfoEPNS_13DominatorTreeERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultIn16745765'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='368'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='866'/>
<size>112</size>
<doc f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='102'>/// This is a helper struct for maintaining vectorization state. It&apos;s used for
/// mapping values from the original loop to their corresponding values in
/// the new loop. Two mappings are maintained: one for vectorized values and
/// one for scalarized values. Vectorized values are represented with UF
/// vector values in the new loop, and scalarized values are represented with
/// UF x VF scalar values in the new loop. UF and VF are the unroll and
/// vectorization factors, respectively.
///
/// Entries can be added to either map with setVectorValue and setScalarValue,
/// which assert that an entry was not already added before. If an entry is to
/// replace an existing one, call resetVectorValue and resetScalarValue. This is
/// currently needed to modify the mapped values during &quot;fix-up&quot; operations that
/// occur once the first phase of widening is complete. These operations include
/// type truncation and the second phase of recurrence widening.
///
/// Entries from either map can be retrieved using the getVectorValue and
/// getScalarValue functions, which assert that the desired value exists.</doc>
<mbr r='llvm::VectorizerValueMap::UF' o='0' t='unsigned int'/>
<mbr r='llvm::VectorizerValueMap::VF' o='32' t='llvm::ElementCount'/>
<mbr r='llvm::VectorizerValueMap::VectorMapStorage' o='128' t='std::map&lt;Value *, VectorParts&gt;'/>
<mbr r='llvm::VectorizerValueMap::ScalarMapStorage' o='512' t='std::map&lt;Value *, ScalarParts&gt;'/>
<fun r='_ZN4llvm18VectorizerValueMapC1EjNS_12ElementCountE'/>
<fun r='_ZNK4llvm18VectorizerValueMap17hasAnyVectorValueEPNS_5ValueE'/>
<fun r='_ZNK4llvm18VectorizerValueMap14hasVectorValueEPNS_5ValueEj'/>
<fun r='_ZNK4llvm18VectorizerValueMap17hasAnyScalarValueEPNS_5ValueE'/>
<fun r='_ZNK4llvm18VectorizerValueMap14hasScalarValueEPNS_5ValueERKNS_11VPIterationE'/>
<fun r='_ZN4llvm18VectorizerValueMap14getVectorValueEPNS_5ValueEj'/>
<fun r='_ZN4llvm18VectorizerValueMap14getScalarValueEPNS_5ValueERKNS_11VPIterationE'/>
<fun r='_ZN4llvm18VectorizerValueMap14setVectorValueEPNS_5ValueEjS2_'/>
<fun r='_ZN4llvm18VectorizerValueMap14setScalarValueEPNS_5ValueERKNS_11VPIterationES2_'/>
<fun r='_ZN4llvm18VectorizerValueMap16resetVectorValueEPNS_5ValueEjS2_'/>
<fun r='_ZN4llvm18VectorizerValueMap16resetScalarValueEPNS_5ValueERKNS_11VPIterationES2_'/>
