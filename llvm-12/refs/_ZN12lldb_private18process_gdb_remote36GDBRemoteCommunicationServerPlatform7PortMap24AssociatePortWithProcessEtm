<dec f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerPlatform.h' l='58' type='bool lldb_private::process_gdb_remote::GDBRemoteCommunicationServerPlatform::PortMap::AssociatePortWithProcess(uint16_t port, lldb::pid_t pid)'/>
<def f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerPlatform.cpp' l='72' ll='80' type='bool lldb_private::process_gdb_remote::GDBRemoteCommunicationServerPlatform::PortMap::AssociatePortWithProcess(uint16_t port, lldb::pid_t pid)'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerPlatform.cpp' l='223' u='c' c='_ZN12lldb_private18process_gdb_remote36GDBRemoteCommunicationServerPlatform15LaunchGDBServerERKNS_4ArgsENSt7__cxx1112basic_stringIcSt11char_traitsIcES6237106'/>
<doc f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerPlatform.h' l='54'>// Tie a port to a process ID. Returns false if the port is not in the port
    // map. If the port is already in use it will be moved to the given pid.
    // FIXME: This is and GetNextAvailablePort make create a race condition if
    // the portmap is shared between processes.</doc>
<use f='llvm/lldb/unittests/Process/gdb-remote/PortMapTest.cpp' l='42' u='c' c='_ZN29PortMapTest_Constructors_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Process/gdb-remote/PortMapTest.cpp' l='54' u='c' c='_ZN25PortMapTest_FreePort_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Process/gdb-remote/PortMapTest.cpp' l='74' u='c' c='_ZN35PortMapTest_FreePortForProcess_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Process/gdb-remote/PortMapTest.cpp' l='75' u='c' c='_ZN35PortMapTest_FreePortForProcess_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Process/gdb-remote/PortMapTest.cpp' l='85' u='c' c='_ZN35PortMapTest_FreePortForProcess_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Process/gdb-remote/PortMapTest.cpp' l='101' u='c' c='_ZN26PortMapTest_AllowPort_Test8TestBodyEv'/>
