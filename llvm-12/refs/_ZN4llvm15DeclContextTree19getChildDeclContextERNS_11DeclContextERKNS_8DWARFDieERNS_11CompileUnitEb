<dec f='llvm/llvm/include/llvm/DWARFLinker/DWARFLinkerDeclContext.h' l='134' type='PointerIntPair&lt;llvm::DeclContext *, 1&gt; llvm::DeclContextTree::getChildDeclContext(llvm::DeclContext &amp; Context, const llvm::DWARFDie &amp; DIE, llvm::CompileUnit &amp; Unit, bool InClangModule)'/>
<use f='llvm/llvm/lib/DWARFLinker/DWARFLinker.cpp' l='366' u='c' c='_ZN4llvmL18analyzeContextInfoERKNS_8DWARFDieEjRNS_11CompileUnitEPNS_11DeclContextERNS_15DeclContextTreeEmPSt3mapINSt7__cxx1112basic_stringIcSt11char_t13318222'/>
<doc f='llvm/llvm/include/llvm/DWARFLinker/DWARFLinkerDeclContext.h' l='123'>/// Get the child of \a Context described by \a DIE in \a Unit. The
  /// required strings will be interned in \a StringPool.
  /// \returns The child DeclContext along with one bit that is set if
  /// this context is invalid.
  ///
  /// An invalid context means it shouldn&apos;t be considered for uniquing, but its
  /// not returning null, because some children of that context might be
  /// uniquing candidates.
  ///
  /// FIXME: The invalid bit along the return value is to emulate some
  /// dsymutil-classic functionality.</doc>
<def f='llvm/llvm/lib/DWARFLinker/DWARFLinkerDeclContext.cpp' l='43' ll='189' type='PointerIntPair&lt;llvm::DeclContext *, 1&gt; llvm::DeclContextTree::getChildDeclContext(llvm::DeclContext &amp; Context, const llvm::DWARFDie &amp; DIE, llvm::CompileUnit &amp; U, bool InClangModule)'/>
