<dec f='llvm/lldb/include/lldb/Core/Module.h' l='322' type='void lldb_private::Module::FindFunctions(const lldb_private::RegularExpression &amp; regex, bool symbols_ok, bool inlines_ok, lldb_private::SymbolContextList &amp; sc_list)'/>
<doc f='llvm/lldb/include/lldb/Core/Module.h' l='310'>/// Find functions by name.
  ///
  /// If the function is an inlined function, it will have a block,
  /// representing the inlined function, and the function will be the
  /// containing function.  If it is not inlined, then the block will be NULL.
  ///
  /// \param[in] regex
  ///     A regular expression to use when matching the name.
  ///
  /// \param[out] sc_list
  ///     A symbol context list that gets filled in with all of the
  ///     matches.</doc>
<use f='llvm/lldb/source/Breakpoint/BreakpointResolverName.cpp' l='285' u='c' c='_ZN12lldb_private22BreakpointResolverName14SearchCallbackERNS_12SearchFilterERNS_13SymbolContextEPNS_7AddressE'/>
<use f='llvm/lldb/source/Commands/CommandCompletions.cpp' l='218' u='c' c='_ZN12_GLOBAL__N_115SymbolCompleter14SearchCallbackERN12lldb_private12SearchFilterERNS1_13SymbolContextEPNS1_7AddressE'/>
<use f='llvm/lldb/source/Commands/CommandObjectTarget.cpp' l='1609' u='c' c='_ZL22LookupFunctionInModuleRN12lldb_private18CommandInterpreterERNS_6StreamEPNS_6ModuleEPKcbbbb'/>
<use f='llvm/lldb/source/Core/AddressResolverName.cpp' l='104' u='c' c='_ZN12lldb_private19AddressResolverName14SearchCallbackERNS_12SearchFilterERNS_13SymbolContextEPNS_7AddressE'/>
<def f='llvm/lldb/source/Core/Module.cpp' l='844' ll='912' type='void lldb_private::Module::FindFunctions(const lldb_private::RegularExpression &amp; regex, bool include_symbols, bool include_inlines, lldb_private::SymbolContextList &amp; sc_list)'/>
<use f='llvm/lldb/source/Core/ModuleList.cpp' l='431' u='c' c='_ZN12lldb_private10ModuleList13FindFunctionsERKNS_17RegularExpressionEbbRNS_17SymbolContextListE'/>
