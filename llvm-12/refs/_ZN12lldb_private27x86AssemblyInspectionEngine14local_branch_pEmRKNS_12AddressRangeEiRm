<dec f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.h' l='122' type='bool lldb_private::x86AssemblyInspectionEngine::local_branch_p(const lldb::addr_t current_func_text_offset, const lldb_private::AddressRange &amp; func_range, const int instruction_length, lldb::addr_t &amp; target_insn_offset)'/>
<def f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='814' ll='835' type='bool lldb_private::x86AssemblyInspectionEngine::local_branch_p(const lldb::addr_t current_func_text_offset, const lldb_private::AddressRange &amp; func_range, const int instruction_length, lldb::addr_t &amp; target_insn_offset)'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='848' u='c' c='_ZN12lldb_private27x86AssemblyInspectionEngine18non_local_branch_pEmRKNS_12AddressRangeEi'/>
<doc f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='810'>// Returns true if this instruction is a intra-function branch or jump -
// a branch/jump within the bounds of this same function.
// Cannot predict where a jump through a register value (&quot;jmpq *%rax&quot;)
// will go, so it will return false on that instruction.</doc>
