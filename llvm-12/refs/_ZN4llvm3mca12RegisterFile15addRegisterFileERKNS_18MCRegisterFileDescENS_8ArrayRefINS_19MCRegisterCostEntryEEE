<dec f='llvm/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h' l='162' type='void llvm::mca::RegisterFile::addRegisterFile(const llvm::MCRegisterFileDesc &amp; RF, ArrayRef&lt;llvm::MCRegisterCostEntry&gt; Entries)'/>
<doc f='llvm/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h' l='148'>// This method creates a new register file descriptor.
  // The new register file owns all of the registers declared by register
  // classes in the &apos;RegisterClasses&apos; set.
  //
  // Processor models allow the definition of RegisterFile(s) via tablegen. For
  // example, this is a tablegen definition for a x86 register file for
  // XMM[0-15] and YMM[0-15], that allows up to 60 renames (each rename costs 1
  // physical register).
  //
  //    def FPRegisterFile : RegisterFile&lt;60, [VR128RegClass, VR256RegClass]&gt;
  //
  // Here FPRegisterFile contains all the registers defined by register class
  // VR128RegClass and VR256RegClass. FPRegisterFile implements 60
  // registers which can be used for register renaming purpose.</doc>
<use f='llvm/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp' l='57' u='c' c='_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj'/>
<def f='llvm/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp' l='66' ll='115' type='void llvm::mca::RegisterFile::addRegisterFile(const llvm::MCRegisterFileDesc &amp; RF, ArrayRef&lt;llvm::MCRegisterCostEntry&gt; Entries)'/>
