<dec f='llvm/lldb/include/lldb/Target/Platform.h' l='920' type='void lldb_private::Platform::CalculateTrapHandlerSymbolNames()'/>
<doc f='llvm/lldb/include/lldb/Target/Platform.h' l='909'>/// Ask the Platform subclass to fill in the list of trap handler names
  ///
  /// For most Unix user process environments, this will be a single function
  /// name, _sigtramp.  More specialized environments may have additional
  /// handler names.  The unwinder code needs to know when a trap handler is
  /// on the stack because the unwind rules for the frame that caused the trap
  /// are different.
  ///
  /// The base class Platform ivar m_trap_handlers should be updated by the
  /// Platform subclass when this method is called.  If there are no
  /// predefined trap handlers, this method may be a no-op.</doc>
<ovr f='llvm/lldb/source/Plugins/Platform/POSIX/PlatformPOSIX.cpp' l='528' c='_ZN13PlatformPOSIX31CalculateTrapHandlerSymbolNamesEv'/>
<ovr f='llvm/lldb/source/Plugins/Platform/Windows/PlatformWindows.h' l='63' c='_ZN12lldb_private15PlatformWindows31CalculateTrapHandlerSymbolNamesEv'/>
<ovr f='llvm/lldb/source/Plugins/Platform/gdb-server/PlatformRemoteGDBServer.cpp' l='723' c='_ZN12lldb_private19platform_gdb_server23PlatformRemoteGDBServer31CalculateTrapHandlerSymbolNamesEv'/>
<use f='llvm/lldb/source/Target/Platform.cpp' l='1513' u='c' c='_ZN12lldb_private8Platform25GetTrapHandlerSymbolNamesEv'/>
<ovr f='llvm/lldb/unittests/Target/RemoteAwarePlatformTest.cpp' l='33' c='_ZN25RemoteAwarePlatformTester31CalculateTrapHandlerSymbolNamesEv'/>
<ovr f='llvm/lldb/unittests/Target/RemoteAwarePlatformTest.cpp' l='50' c='_ZN20TargetPlatformTester31CalculateTrapHandlerSymbolNamesEv'/>
