<dec f='llvm/lldb/include/lldb/API/SBProcess.h' l='136' type='lldb::pid_t lldb::SBProcess::GetProcessID()'/>
<use f='llvm/build/tools/lldb/bindings/python/LLDBWrapPython.cpp' l='44874' u='c' c='_ZL28_wrap_SBProcess_GetProcessIDP7_objectS0_'/>
<doc f='llvm/lldb/include/lldb/API/SBProcess.h' l='124'>/// Gets the process ID
  ///
  /// Returns the process identifier for the process as it is known
  /// on the system on which the process is running. For unix systems
  /// this is typically the same as if you called &quot;getpid()&quot; in the
  /// process.
  ///
  /// \return
  ///     Returns LLDB_INVALID_PROCESS_ID if this object does not
  ///     contain a valid process object, or if the process has not
  ///     been launched. Returns a valid process ID if the process is
  ///     valid.</doc>
<def f='llvm/lldb/source/API/SBProcess.cpp' l='559' ll='568' type='lldb::pid_t lldb::SBProcess::GetProcessID()'/>
<use f='llvm/lldb/source/API/SBProcess.cpp' l='560' u='a' c='_ZN4lldb9SBProcess12GetProcessIDEv'/>
<use f='llvm/lldb/source/API/SBProcess.cpp' l='560' u='a' c='_ZN4lldb9SBProcess12GetProcessIDEv'/>
<use f='llvm/lldb/source/API/SBProcess.cpp' l='1366' u='a' c='_ZN12lldb_private5repro15RegisterMethodsERNS0_8RegistryE'/>
<use f='llvm/lldb/tools/lldb-vscode/lldb-vscode.cpp' l='321' u='c' c='_ZN12_GLOBAL__N_116SendProcessEventENS_12LaunchMethodE'/>
<use f='llvm/lldb/tools/lldb-vscode/lldb-vscode.cpp' l='597' u='c' c='_ZN12_GLOBAL__N_114request_attachERKN4llvm4json6ObjectE'/>
