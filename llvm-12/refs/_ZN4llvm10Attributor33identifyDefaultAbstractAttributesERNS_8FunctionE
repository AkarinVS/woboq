<dec f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='1256' type='void llvm::Attributor::identifyDefaultAbstractAttributes(llvm::Function &amp; F)'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='1274' u='c' c='_ZN4llvm10Attributor24markLiveInternalFunctionERKNS_8FunctionE'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='1246'>/// Determine opportunities to derive &apos;default&apos; attributes in \p F and create
  /// abstract attribute objects for them.
  ///
  /// \param F The function that is checked for attribute opportunities.
  ///
  /// Note that abstract attribute instances are generally created even if the
  /// IR already contains the information they would deduce. The most important
  /// reason for this is the single interface, the one of the abstract attribute
  /// instance, which can be queried without the need to look at the IR in
  /// various places.</doc>
<def f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='1946' ll='2169' type='void llvm::Attributor::identifyDefaultAbstractAttributes(llvm::Function &amp; F)'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='2339' u='c' c='_ZL24runAttributorOnFunctionsRN4llvm16InformationCacheERNS_9SetVectorIPNS_8FunctionESt6vectorIS4_SaIS4_EENS_8DenseSetIS4_NS_12DenseMapInfoIS4_EEEEEERN2270559'/>
