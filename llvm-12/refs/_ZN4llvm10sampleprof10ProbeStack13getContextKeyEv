<dec f='llvm/llvm/tools/llvm-profgen/PerfReader.h' l='429' type='std::shared_ptr&lt;ProbeBasedCtxKey&gt; llvm::sampleprof::ProbeStack::getContextKey()'/>
<def f='llvm/llvm/tools/llvm-profgen/PerfReader.cpp' l='102' ll='112' type='std::shared_ptr&lt;ProbeBasedCtxKey&gt; llvm::sampleprof::ProbeStack::getContextKey()'/>
<doc f='llvm/llvm/tools/llvm-profgen/PerfReader.h' l='418'>// Use pseudo probe based context key to get the sample counter
  // A context stands for a call path from &apos;main&apos; to an uninlined
  // callee with all inline frames recovered on that path. The probes
  // belonging to that call path is the probes either originated from
  // the callee or from any functions inlined into the callee. Since
  // pseudo probes are organized in a tri-tree style after decoded,
  // the tree path from the tri-tree root (which is the uninlined
  // callee) to the probe node forms an inline context.
  // Here we use a list of probe(pointer) as the context key to speed up
  // aggregation and the final context string will be generate in
  // ProfileGenerator</doc>
