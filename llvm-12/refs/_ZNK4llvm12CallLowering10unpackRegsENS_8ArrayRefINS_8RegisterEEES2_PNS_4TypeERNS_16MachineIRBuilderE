<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CallLowering.h' l='261' type='void llvm::CallLowering::unpackRegs(ArrayRef&lt;llvm::Register&gt; DstRegs, llvm::Register SrcReg, llvm::Type * PackedTy, llvm::MachineIRBuilder &amp; MIRBuilder) const'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/CallLowering.cpp' l='210' ll='224' type='void llvm::CallLowering::unpackRegs(ArrayRef&lt;llvm::Register&gt; DstRegs, llvm::Register SrcReg, llvm::Type * PackedTy, llvm::MachineIRBuilder &amp; MIRBuilder) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CallLowering.h' l='256'>/// Generate instructions for unpacking \p SrcReg into the \p DstRegs
  /// corresponding to the aggregate type \p PackedTy.
  ///
  /// \param DstRegs should contain one virtual register for each base type in
  ///        \p PackedTy, as returned by computeValueLLTs.</doc>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUCallLowering.cpp' l='726' u='c' c='_ZNK4llvm18AMDGPUCallLowering26lowerFormalArgumentsKernelERNS_16MachineIRBuilderERKNS_8FunctionENS_8ArrayRefINS6_INS_8RegisterEEEEE'/>
