<dec f='llvm/llvm/lib/CodeGen/AllocationOrder.h' l='40' type='const int'/>
<use f='llvm/llvm/lib/CodeGen/AllocationOrder.h' l='65' u='r' c='_ZN4llvm15AllocationOrder8IteratorppEv'/>
<use f='llvm/llvm/lib/CodeGen/AllocationOrder.h' l='67' u='r' c='_ZN4llvm15AllocationOrder8IteratorppEv'/>
<use f='llvm/llvm/lib/CodeGen/AllocationOrder.h' l='93' u='w' c='_ZN4llvm15AllocationOrderC1EONS_11SmallVectorItLj16EEENS_8ArrayRefItEEb'/>
<use f='llvm/llvm/lib/CodeGen/AllocationOrder.h' l='99' u='r' c='_ZNK4llvm15AllocationOrder3endEv'/>
<use f='llvm/llvm/lib/CodeGen/AllocationOrder.h' l='106' u='r' c='_ZNK4llvm15AllocationOrder16getOrderLimitEndEj'/>
<offset>576</offset>
<doc f='llvm/llvm/lib/CodeGen/AllocationOrder.h' l='33'>// How far into the Order we can iterate. This is 0 if the AllocationOrder is
  // constructed with HardHints = true, Order.size() otherwise. While
  // technically a size_t, it will participate in comparisons with the
  // Iterator&apos;s Pos, which must be signed, so it&apos;s typed here as signed, too, to
  // avoid warnings and under the assumption that the size of Order is
  // relatively small.
  // IterationLimit defines an invalid iterator position.</doc>
