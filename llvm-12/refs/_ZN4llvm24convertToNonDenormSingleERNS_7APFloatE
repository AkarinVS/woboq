<dec f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.h' l='1323' type='bool llvm::convertToNonDenormSingle(llvm::APFloat &amp; ArgAPFloat)'/>
<use f='llvm/build/lib/Target/PowerPC/PPCGenDAGISel.inc' l='66151' u='c' c='_ZNK12_GLOBAL__N_115PPCDAGToDAGISel18CheckNodePredicateEPN4llvm6SDNodeEj'/>
<use f='llvm/build/lib/Target/PowerPC/PPCGenDAGISel.inc' l='66655' u='c' c='_ZN12_GLOBAL__N_115PPCDAGToDAGISel14RunSDNodeXFormEN4llvm7SDValueEj'/>
<def f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='8561' ll='8570' type='bool llvm::convertToNonDenormSingle(llvm::APFloat &amp; ArgAPFloat)'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='8580' u='c' c='_ZN4llvm24convertToNonDenormSingleERNS_5APIntE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='15836' u='c' c='_ZNK4llvm17PPCTargetLowering12isFPImmLegalERKNS_7APFloatENS_3EVTEb'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='8558'>// Convert the argument APFloat to a single precision APFloat if there is no
// loss in information during the conversion to single precision APFloat and the
// resulting number is not a denormal number. Return true if successful.</doc>
