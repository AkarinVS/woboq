<dec f='llvm/llvm/include/llvm/ADT/SmallVector.h' l='361' type='void llvm::SmallVectorTemplateBase::moveElementsForGrow(T * NewElts)'/>
<use f='llvm/llvm/include/llvm/ADT/SmallVector.h' l='397' u='c' c='_ZN4llvm23SmallVectorTemplateBase18growAndEmplaceBackEDpOTL0__'/>
<use f='llvm/llvm/include/llvm/ADT/SmallVector.h' l='427' u='c' c='_ZN4llvm23SmallVectorTemplateBase4growEm'/>
<def f='llvm/llvm/include/llvm/ADT/SmallVector.h' l='432' ll='440' type='void llvm::SmallVectorTemplateBase::moveElementsForGrow(T * NewElts)'/>
<doc f='llvm/llvm/include/llvm/ADT/SmallVector.h' l='359'>/// Move existing elements over to the new allocation \p NewElts, the middle
  /// section of \a grow().</doc>
<doc f='llvm/llvm/include/llvm/ADT/SmallVector.h' l='431'>// Define this out-of-line to dissuade the C++ compiler from inlining it.</doc>
