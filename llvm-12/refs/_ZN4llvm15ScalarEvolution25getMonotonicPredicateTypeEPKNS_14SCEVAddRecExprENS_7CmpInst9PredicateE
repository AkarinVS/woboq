<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='966' type='Optional&lt;llvm::ScalarEvolution::MonotonicPredicateType&gt; llvm::ScalarEvolution::getMonotonicPredicateType(const llvm::SCEVAddRecExpr * LHS, ICmpInst::Predicate Pred)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='961'>/// If, for all loop invariant X, the predicate &quot;LHS `Pred` X&quot; is
  /// monotonically increasing or decreasing, returns
  /// Some(MonotonicallyIncreasing) and Some(MonotonicallyDecreasing)
  /// respectively. If we could not prove either of these facts, returns None.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9540' ll='9559' type='Optional&lt;ScalarEvolution::MonotonicPredicateType&gt; llvm::ScalarEvolution::getMonotonicPredicateType(const llvm::SCEVAddRecExpr * LHS, ICmpInst::Predicate Pred)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9623' u='c' c='_ZN4llvm15ScalarEvolution25getLoopInvariantPredicateENS_7CmpInst9PredicateEPKNS_4SCEVES5_PKNS_4LoopE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='457' u='c' c='_ZL26isSafeToTruncateWideIVTypeRKN4llvm10DataLayoutERNS_15ScalarEvolutionEN12_GLOBAL__N_18LoopICmpEPNS_4TypeE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopPeel.cpp' l='236' u='c' c='_ZL24countToEliminateComparesRN4llvm4LoopEjRNS_15ScalarEvolutionE'/>
