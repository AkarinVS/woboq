<dec f='llvm/clang/include/clang/Tooling/Syntax/Tree.h' l='318' type='std::vector&lt;Node *&gt; clang::syntax::List::getElementsAsNodes()'/>
<doc f='llvm/clang/include/clang/Tooling/Syntax/Tree.h' l='315'>/// Returns the elements of the list. Missing elements are represented
  /// as null pointers in the same way as in the return value of
  /// `getElementsAsNodesAndDelimiters()`.</doc>
<use f='llvm/clang/lib/Tooling/Syntax/Nodes.cpp' l='111' u='c' c='_ZN5clang6syntax19NestedNameSpecifier13getSpecifiersEv'/>
<use f='llvm/clang/lib/Tooling/Syntax/Nodes.cpp' l='133' u='c' c='_ZN5clang6syntax13CallArguments12getArgumentsEv'/>
<use f='llvm/clang/lib/Tooling/Syntax/Nodes.cpp' l='155' u='c' c='_ZN5clang6syntax24ParameterDeclarationList24getParameterDeclarationsEv'/>
<use f='llvm/clang/lib/Tooling/Syntax/Nodes.cpp' l='178' u='c' c='_ZN5clang6syntax14DeclaratorList14getDeclaratorsEv'/>
<def f='llvm/clang/lib/Tooling/Syntax/Tree.cpp' l='386' ll='426' type='std::vector&lt;syntax::Node *&gt; clang::syntax::List::getElementsAsNodes()'/>
<doc f='llvm/clang/lib/Tooling/Syntax/Tree.cpp' l='384'>// Almost the same implementation of `getElementsAsNodesAndDelimiters` but
// ignoring delimiters</doc>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='246' u='c' c='_ZN12_GLOBAL__N_139ListTest_List_Separated_WellFormed_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='246' u='c' c='_ZN12_GLOBAL__N_139ListTest_List_Separated_WellFormed_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='266' u='c' c='_ZN12_GLOBAL__N_143ListTest_List_Separated_MissingElement_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='266' u='c' c='_ZN12_GLOBAL__N_143ListTest_List_Separated_MissingElement_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='286' u='c' c='_ZN12_GLOBAL__N_145ListTest_List_Separated_MissingDelimiter_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='286' u='c' c='_ZN12_GLOBAL__N_145ListTest_List_Separated_MissingDelimiter_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='306' u='c' c='_ZN12_GLOBAL__N_147ListTest_List_Separated_MissingLastElement_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='306' u='c' c='_ZN12_GLOBAL__N_147ListTest_List_Separated_MissingLastElement_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='331' u='c' c='_ZN12_GLOBAL__N_140ListTest_List_Terminated_WellFormed_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='331' u='c' c='_ZN12_GLOBAL__N_140ListTest_List_Terminated_WellFormed_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='355' u='c' c='_ZN12_GLOBAL__N_144ListTest_List_Terminated_MissingElement_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='355' u='c' c='_ZN12_GLOBAL__N_144ListTest_List_Terminated_MissingElement_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='379' u='c' c='_ZN12_GLOBAL__N_146ListTest_List_Terminated_MissingDelimiter_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='379' u='c' c='_ZN12_GLOBAL__N_146ListTest_List_Terminated_MissingDelimiter_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='403' u='c' c='_ZN12_GLOBAL__N_150ListTest_List_Terminated_MissingLastDelimiter_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTest.cpp' l='403' u='c' c='_ZN12_GLOBAL__N_150ListTest_List_Terminated_MissingLastDelimiter_Test8TestBodyEv'/>
