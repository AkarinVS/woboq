<def f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='1093' ll='1103' type='llvm::InvokeInst * llvm::IRBuilderBase::CreateInvoke(llvm::FunctionType * Ty, llvm::Value * Callee, llvm::BasicBlock * NormalDest, llvm::BasicBlock * UnwindDest, ArrayRef&lt;llvm::Value *&gt; Args, ArrayRef&lt;llvm::OperandBundleDef&gt; OpBundles, const llvm::Twine &amp; Name = &quot;&quot;)'/>
<use f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='1119' u='c' c='_ZN4llvm13IRBuilderBase12CreateInvokeENS_14FunctionCalleeEPNS_10BasicBlockES3_NS_8ArrayRefIPNS_5ValueEEENS4_INS_17OperandBundleDefTIS6_EEEERKNS_5TwineE'/>
<doc f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='1092'>/// Create an invoke instruction.</doc>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='5105' u='c' c='_ZN5clang7CodeGen15CodeGenFunction8EmitCallERKNS0_14CGFunctionInfoERKNS0_8CGCalleeENS0_15ReturnValueSlotERKNS0_11CallArgListEPPN4llvm8CallBaseENS_14SourceLocationE'/>
