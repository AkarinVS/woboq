<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='620' type='llvm::Instruction * llvm::InstCombinerImpl::foldPHIArgExtractValueInstructionIntoPHI(llvm::PHINode &amp; PN)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='344' ll='377' type='llvm::Instruction * llvm::InstCombinerImpl::foldPHIArgExtractValueInstructionIntoPHI(llvm::PHINode &amp; PN)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='839' u='c' c='_ZN4llvm16InstCombinerImpl19foldPHIArgOpIntoPHIERNS_7PHINodeE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='342'>/// If we have something like phi [extractvalue(a,0), extractvalue(b,0)],
/// turn this into a phi[a,b] and a single extractvalue.</doc>
