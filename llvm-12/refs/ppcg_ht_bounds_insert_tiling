<dec f='llvm/polly/lib/External/ppcg/hybrid.h' l='24' type='isl_schedule_node * ppcg_ht_bounds_insert_tiling(ppcg_ht_bounds * bounds, isl_multi_val * sizes, isl_schedule_node * node, struct ppcg_options * options)'/>
<use f='llvm/polly/lib/External/ppcg/gpu_hybrid.c' l='135' u='c' c='gpu_hybrid_tile'/>
<def f='llvm/polly/lib/External/ppcg/hybrid.c' l='2082' ll='2151' type='isl_schedule_node * ppcg_ht_bounds_insert_tiling(ppcg_ht_bounds * bounds, isl_multi_val * sizes, isl_schedule_node * node, struct ppcg_options * options)'/>
<doc f='llvm/polly/lib/External/ppcg/hybrid.c' l='2044'>/* Given valid bounds on the relative dependence distances for
 * the pair of nested nodes that &quot;node&quot; point to, as well as sufficiently
 * wide tile sizes &quot;sizes&quot;, insert the corresponding time and space tiling
 * at &quot;node&quot;, along with a pair of phase nodes that can be used
 * to make further changes.
 * The space of &quot;sizes&quot; should be the product of the spaces
 * of the schedules of the pair of parent and child nodes.
 * &quot;options&quot; determines whether full tiles should be separated
 * from partial tiles.
 *
 * In particular, given an input of the form
 *
 *	P - C - ...
 *
 * the output has the form
 *
 *	        /- F0 - M0 - CT0 - P - C - ...
 *	PT - seq
 *	        \- F1 - M1 - CT1 - P - C - ...
 *
 * PT is the global time tiling.  Within each of these tiles,
 * two phases are executed in order.  Within each phase, the schedule
 * space is further subdivided into tiles through CT0 and CT1.
 * The first dimension of each of these iterates over the hexagons
 * within a phase and these are independent by construction.
 * The F0 and F1 filters filter the statement instances that belong
 * to the corresponding phase.  The M0 and M1 marks contain a pointer
 * to a ppcg_ht_phase object that can be used to perform further changes.
 *
 * After checking that input satisfies the requirements,
 * a data structure is constructed that represents the tiling and
 * two additional data structures are constructed for the two phases
 * of the tiling.  These are then used to define the filters F0 and F1 and
 * combined to construct the time tiling PT.
 * Then the time tiling node PT is inserted, followed by
 * the sequence with the two filters, the CT space tiling nodes and
 * the phase markers M.
 */</doc>
