<dec f='llvm/lldb/include/lldb/Core/Module.h' l='608' type='lldb_private::ObjectFile * lldb_private::Module::GetMemoryObjectFile(const lldb::ProcessSP &amp; process_sp, lldb::addr_t header_addr, lldb_private::Status &amp; error, size_t size_to_read = 512)'/>
<doc f='llvm/lldb/include/lldb/Core/Module.h' l='597'>/// Load an object file from memory.
  ///
  /// If available, the size of the object file in memory may be passed to
  /// avoid additional round trips to process memory. If the size is not
  /// provided, a default value is used. This value should be large enough to
  /// enable the ObjectFile plugins to read the header of the object file
  /// without going back to the process.
  ///
  /// \return
  ///     The object file loaded from memory or nullptr, if the operation
  ///     failed (see the `error` for more information in that case).</doc>
<def f='llvm/lldb/source/Core/Module.cpp' l='300' ll='345' type='lldb_private::ObjectFile * lldb_private::Module::GetMemoryObjectFile(const lldb::ProcessSP &amp; process_sp, lldb::addr_t header_addr, lldb_private::Status &amp; error, size_t size_to_read = 512)'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='2347' u='c' c='_ZN12lldb_private7Process20ReadModuleFromMemoryERKNS_8FileSpecEmm'/>
