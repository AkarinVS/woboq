<dec f='llvm/llvm/include/llvm/Transforms/Scalar/LoopRotation.h' l='25' type='void llvm::LoopRotatePass::LoopRotatePass(bool EnableHeaderDuplication = true, bool PrepareForLTO = false)'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='393' u='c' c='_ZN4llvm11PassBuilderC1EbPNS_13TargetMachineENS_21PipelineTuningOptionsENS_8OptionalINS_10PGOOptionsEEEPNS_28PassInstrumentationCallbacksE'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='561' u='c' c='_ZN4llvm11PassBuilder37buildO1FunctionSimplificationPipelineENS0_17OptimizationLevelENS_18ThinOrFullLTOPhaseE'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='725' u='c' c='_ZN4llvm11PassBuilder35buildFunctionSimplificationPipelineENS0_17OptimizationLevelENS_18ThinOrFullLTOPhaseE'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='886' u='c' c='_ZN4llvm11PassBuilder17addPGOInstrPassesERNS_11PassManagerINS_6ModuleENS_15AnalysisManagerIS2_JEEEJEEENS0_17OptimizationLevelEbbNSt7__cxx1112basic_str12117479'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='1234' u='c' c='_ZN4llvm11PassBuilder31buildModuleOptimizationPipelineENS0_17OptimizationLevelEb'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='393' u='c' c='_ZN4llvm11PassBuilder15parseModulePassERNS_11PassManagerINS_6ModuleENS_15AnalysisManagerIS2_JEEEJEEERKNS0_15PipelineElementE'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='393' u='c' c='_ZN4llvm11PassBuilder14parseCGSCCPassERNS_11PassManagerINS_13LazyCallGraph3SCCENS_15AnalysisManagerIS3_JRS2_EEEJS5_RNS_17CGSCCUpdateResultEEEERKNS0_15PipelineElementE'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='393' u='c' c='_ZN4llvm11PassBuilder17parseFunctionPassERNS_11PassManagerINS_8FunctionENS_15AnalysisManagerIS2_JEEEJEEERKNS0_15PipelineElementE'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='393' u='c' c='_ZN4llvm11PassBuilder13parseLoopPassERNS_11PassManagerINS_4LoopENS_15AnalysisManagerIS2_JRNS_27LoopStandardAnalysisResultsEEEEJS5_RNS_10LPMUpdaterEEEE12510868'/>
<def f='llvm/llvm/lib/Transforms/Scalar/LoopRotation.cpp' l='42' ll='44' type='void llvm::LoopRotatePass::LoopRotatePass(bool EnableHeaderDuplication = true, bool PrepareForLTO = false)'/>
