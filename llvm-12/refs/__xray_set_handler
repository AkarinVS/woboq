<dec f='llvm/compiler-rt/include/xray/xray_interface.h' l='52' type='int __xray_set_handler(void (*)(int32_t, XRayEntryType) entry)'/>
<use f='llvm/compiler-rt/lib/xray/xray_basic_logging.cpp' l='430' u='c' c='__xray::basicLoggingInit'/>
<doc f='llvm/compiler-rt/include/xray/xray_interface.h' l='32'>/// Provide a function to invoke for when instrumentation points are hit. This
/// is a user-visible control surface that overrides the default implementation.
/// The function provided should take the following arguments:
///
///   - function id: an identifier that indicates the id of a function; this id
///                  is generated by xray; the mapping between the function id
///                  and the actual function pointer is available through
///                  __xray_table.
///   - entry type: identifies what kind of instrumentation point was
///                 encountered (function entry, function exit, etc.). See the
///                 enum XRayEntryType for more details.
///
/// The user handler must handle correctly spurious calls after this handler is
/// removed or replaced with another handler, because it would be too costly for
/// XRay runtime to avoid spurious calls.
/// To prevent circular calling, the handler function itself and all its
/// direct&amp;indirect callees must not be instrumented with XRay, which can be
/// achieved by marking them all with: __attribute__((xray_never_instrument))
///
/// Returns 1 on success, 0 on error.</doc>
<use f='llvm/compiler-rt/lib/xray/xray_fdr_logging.cpp' l='712' u='c' c='__xray::fdrLoggingInit'/>
<def f='llvm/compiler-rt/lib/xray/xray_interface.cpp' l='401' ll='412' type='int __xray_set_handler(void (*)(int32_t, XRayEntryType) entry)'/>
<use f='llvm/compiler-rt/lib/xray/xray_interface.cpp' l='439' u='c' c='__xray_remove_handler'/>
<doc f='llvm/compiler-rt/lib/xray/xray_interface.cpp' l='398'>// The following functions are declared `extern &quot;C&quot; {...}` in the header, hence
// they&apos;re defined in the global namespace.</doc>
<use f='llvm/compiler-rt/lib/xray/xray_log_interface.cpp' l='92' u='c' c='__xray_log_select_mode'/>
<use f='llvm/compiler-rt/lib/xray/xray_log_interface.cpp' l='120' u='c' c='__xray_set_log_impl'/>
<use f='llvm/compiler-rt/lib/xray/xray_profiling.cpp' l='474' u='c' c='__xray::profilingLoggingInit'/>
