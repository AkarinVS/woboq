<use f='llvm/llvm/include/llvm/Support/JSON.h' l='304' u='c' c='_ZN4llvm4json5ValueC1EOS1_'/>
<use f='llvm/llvm/include/llvm/Support/JSON.h' l='372' u='c' c='_ZN4llvm4json5ValueaSEOS1_'/>
<dec f='llvm/llvm/include/llvm/Support/JSON.h' l='454' type='void llvm::json::Value::moveFrom(const llvm::json::Value &amp;&amp; M)'/>
<use f='llvm/llvm/include/llvm/Support/JSON.h' l='557' u='c' c='_ZN4llvm4json6ObjectC1ESt16initializer_listINS1_2KVEE'/>
<doc f='llvm/llvm/include/llvm/Support/JSON.h' l='451'>// We allow moving from *const* Values, by marking all members as mutable!
  // This hack is needed to support initializer-list syntax efficiently.
  // (std::initializer_list&lt;T&gt; is a container of const T).</doc>
<use f='llvm/llvm/lib/Support/JSON.cpp' l='98' u='c' c='_ZN4llvm4json5ArrayC1ESt16initializer_listINS0_5ValueEE'/>
<def f='llvm/llvm/lib/Support/JSON.cpp' l='129' ll='154' type='void llvm::json::Value::moveFrom(const llvm::json::Value &amp;&amp; M)'/>
