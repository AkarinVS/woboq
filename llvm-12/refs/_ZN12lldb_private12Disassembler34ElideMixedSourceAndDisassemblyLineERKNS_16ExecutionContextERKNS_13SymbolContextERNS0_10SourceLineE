<dec f='llvm/lldb/include/lldb/Core/Disassembler.h' l='504' type='static bool lldb_private::Disassembler::ElideMixedSourceAndDisassemblyLine(const lldb_private::ExecutionContext &amp; exe_ctx, const lldb_private::SymbolContext &amp; sc, lldb_private::Disassembler::SourceLine &amp; line)'/>
<use f='llvm/lldb/include/lldb/Core/Disassembler.h' l='514' u='c' c='_ZN12lldb_private12Disassembler34ElideMixedSourceAndDisassemblyLineERKNS_16ExecutionContextERKNS_13SymbolContextERNS_9LineEntryE'/>
<doc f='llvm/lldb/include/lldb/Core/Disassembler.h' l='495'>// Given a source line, determine if we should print it when we&apos;re doing
  // mixed source &amp; assembly output. We&apos;re currently using the
  // target.process.thread.step-avoid-regexp setting (which is used for
  // stepping over inlined STL functions by default) to determine what source
  // lines to avoid showing.
  //
  // Returns true if this source line should be elided (if the source line
  // should not be displayed).</doc>
<def f='llvm/lldb/source/Core/Disassembler.cpp' l='237' ll='277' type='static bool lldb_private::Disassembler::ElideMixedSourceAndDisassemblyLine(const lldb_private::ExecutionContext &amp; exe_ctx, const lldb_private::SymbolContext &amp; sc, lldb_private::Disassembler::SourceLine &amp; line)'/>
<use f='llvm/lldb/source/Core/Disassembler.cpp' l='357' u='c' c='_ZN12lldb_private12Disassembler17PrintInstructionsERNS_8DebuggerERKNS_8ArchSpecERKNS_16ExecutionContextEbjjRNS_6StreamE'/>
<use f='llvm/lldb/source/Core/Disassembler.cpp' l='365' u='c' c='_ZN12lldb_private12Disassembler17PrintInstructionsERNS_8DebuggerERKNS_8ArchSpecERKNS_16ExecutionContextEbjjRNS_6StreamE'/>
<use f='llvm/lldb/source/Core/Disassembler.cpp' l='449' u='c' c='_ZN12lldb_private12Disassembler17PrintInstructionsERNS_8DebuggerERKNS_8ArchSpecERKNS_16ExecutionContextEbjjRNS_6StreamE'/>
