<use f='llvm/llvm/lib/Target/AMDGPU/SIRegisterInfo.h' l='147' u='c' c='_ZNK4llvm14SIRegisterInfo11isSGPRClassEPKNS_19TargetRegisterClassE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIRegisterInfo.h' l='159' u='c' c='_ZNK4llvm14SIRegisterInfo11isAGPRClassEPKNS_19TargetRegisterClassE'/>
<dec f='llvm/llvm/lib/Target/AMDGPU/SIRegisterInfo.h' l='163' type='bool llvm::SIRegisterInfo::hasVGPRs(const llvm::TargetRegisterClass * RC) const'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIRegisterInfo.h' l='170' u='c' c='_ZNK4llvm14SIRegisterInfo18hasVectorRegistersEPKNS_19TargetRegisterClassE'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/SIRegisterInfo.h' l='162'>/// \returns true if this class contains VGPR registers.</doc>
<use f='llvm/llvm/lib/Target/AMDGPU/GCNRegBankReassign.cpp' l='314' u='c' c='_ZNK12_GLOBAL__N_118GCNRegBankReassign14getPhysRegBankEN4llvm8RegisterEj'/>
<use f='llvm/llvm/lib/Target/AMDGPU/GCNRegBankReassign.cpp' l='348' u='c' c='_ZN12_GLOBAL__N_118GCNRegBankReassign14getRegBankMaskEN4llvm8RegisterEji'/>
<use f='llvm/llvm/lib/Target/AMDGPU/GCNRegBankReassign.cpp' l='412' u='c' c='_ZN12_GLOBAL__N_118GCNRegBankReassign11analyzeInstERKN4llvm12MachineInstrENS1_8RegisterEji'/>
<use f='llvm/llvm/lib/Target/AMDGPU/GCNRegBankReassign.cpp' l='497' u='c' c='_ZNK12_GLOBAL__N_118GCNRegBankReassign14isReassignableEN4llvm8RegisterE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='878' u='c' c='_ZNK4llvm11SIInstrInfo11copyPhysRegERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEERKNS_8DebugLocENS_10MCRegisterES9_b'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='880' u='c' c='_ZNK4llvm11SIInstrInfo11copyPhysRegERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEERKNS_8DebugLocENS_10MCRegisterES9_b'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='1725' u='c' c='_ZNK4llvm11SIInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='2447' u='c' c='_ZNK4llvm11SIInstrInfo15canInsertSelectERKNS_17MachineBasicBlockENS_8ArrayRefINS_14MachineOperandEEENS_8RegisterES7_S7_RiS8_S8_'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='3749' u='c' c='_ZNK4llvm11SIInstrInfo17verifyInstructionERKNS_12MachineInstrERNS_9StringRefE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='5130' u='c' c='_ZNK4llvm11SIInstrInfo16legalizeOperandsERNS_12MachineInstrEPNS_20MachineDominatorTreeE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='6521' u='c' c='_ZNK4llvm11SIInstrInfo26getDestEquivalentVGPRClassERKNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIPeepholeSDWA.cpp' l='1173' u='c' c='_ZNK12_GLOBAL__N_114SIPeepholeSDWA22legalizeScalarOperandsERN4llvm12MachineInstrERKNS1_12GCNSubtargetE'/>
<def f='llvm/llvm/lib/Target/AMDGPU/SIRegisterInfo.cpp' l='1879' ll='1891' type='bool llvm::SIRegisterInfo::hasVGPRs(const llvm::TargetRegisterClass * RC) const'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIRegisterInfo.cpp' l='2036' u='c' c='_ZNK4llvm14SIRegisterInfo6isVGPRERKNS_19MachineRegisterInfoENS_8RegisterE'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/SIRegisterInfo.cpp' l='1877'>// TODO: It might be helpful to have some target specific flags in
// TargetRegisterClass to mark which classes are VGPRs to make this trivial.</doc>
