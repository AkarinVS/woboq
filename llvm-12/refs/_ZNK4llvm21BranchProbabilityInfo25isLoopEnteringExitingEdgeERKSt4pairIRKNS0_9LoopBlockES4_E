<dec f='llvm/llvm/include/llvm/Analysis/BranchProbabilityInfo.h' l='357' type='bool llvm::BranchProbabilityInfo::isLoopEnteringExitingEdge(const llvm::BranchProbabilityInfo::LoopEdge &amp; Edge) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/BranchProbabilityInfo.h' l='355'>/// Returns true if \p Edge is either enters to or exits from some loop, false
  /// in all other cases.</doc>
<def f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='266' ll='269' type='bool llvm::BranchProbabilityInfo::isLoopEnteringExitingEdge(const llvm::BranchProbabilityInfo::LoopEdge &amp; Edge) const'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='703' u='c' c='_ZN4llvm21BranchProbabilityInfo29propagateEstimatedBlockWeightERKNS0_9LoopBlockEPNS_13DominatorTreeEPNS_17PostDominatorTreeEjRNS_15SmallVectorImplIPNS1926'/>
