<dec f='llvm/polly/lib/External/isl/include/isl/val.h' l='86' type='isl_val * isl_val_mul(isl_val * v1, isl_val * v2)'/>
<use f='llvm/polly/lib/External/isl/include/isl/isl-noexceptions.h' l='19314' u='c' c='_ZNK3isl12noexceptions3val3mulES1_'/>
<use f='llvm/polly/lib/External/isl/isl_ast_build_expr.c' l='93' u='c' c='is_non_neg_after_stealing'/>
<use f='llvm/polly/lib/External/isl/isl_ast_build_expr.c' l='143' u='c' c='steal_from_cst'/>
<use f='llvm/polly/lib/External/isl/isl_ast_build_expr.c' l='146' u='c' c='steal_from_cst'/>
<use f='llvm/polly/lib/External/isl/isl_ast_build_expr.c' l='925' u='c' c='try_extract_mod'/>
<use f='llvm/polly/lib/External/isl/isl_polynomial.c' l='3245' u='c' c='isl_poly_eval'/>
<use f='llvm/polly/lib/External/isl/isl_stride.c' l='160' u='c' c='set_stride'/>
<use f='llvm/polly/lib/External/isl/isl_stride.c' l='163' u='c' c='set_stride'/>
<use f='llvm/polly/lib/External/isl/isl_stride.c' l='164' u='c' c='set_stride'/>
<use f='llvm/polly/lib/External/isl/isl_test.c' l='781' u='a'/>
<def f='llvm/polly/lib/External/isl/isl_val.c' l='781' ll='835' type='isl_val * isl_val_mul(isl_val * v1, isl_val * v2)'/>
<use f='llvm/polly/lib/External/isl/isl_val.c' l='845' u='c' c='isl_val_scale_val'/>
<doc f='llvm/polly/lib/External/isl/isl_val.c' l='779'>/* Return the product of &quot;v1&quot; and &quot;v2&quot;.
 */</doc>
<use f='llvm/polly/lib/External/ppcg/gpu_array_tile.c' l='68' u='c' c='gpu_array_tile_size'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='430' u='c' c='hex_lower_left'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='479' u='c' c='hex_lower_right'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='508' u='c' c='hex_upper_left'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='537' u='c' c='hex_upper_right'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='906' u='c' c='ppcg_ht_bounds_construct_tiling'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='907' u='c' c='ppcg_ht_bounds_construct_tiling'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='1951' u='c' c='wide_enough'/>
