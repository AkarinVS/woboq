<dec f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='506' type='const llvm::Instruction * llvm::MustBeExecutedContextExplorer::getMustBeExecutedPrevInstruction(llvm::MustBeExecutedIterator &amp; It, const llvm::Instruction * PP)'/>
<doc f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='499'>/// Return the previous instr. that is guaranteed to be executed before \p PP.
  ///
  /// \param It              The iterator that is used to traverse the must be
  ///                        executed context.
  /// \param PP              The program point for which the previous instr.
  ///                        that is guaranteed to execute is determined.</doc>
<def f='llvm/llvm/lib/Analysis/MustExecute.cpp' l='765' ll='804' type='const llvm::Instruction * llvm::MustBeExecutedContextExplorer::getMustBeExecutedPrevInstruction(llvm::MustBeExecutedIterator &amp; It, const llvm::Instruction * PP)'/>
<use f='llvm/llvm/lib/Analysis/MustExecute.cpp' l='835' u='c' c='_ZN4llvm22MustBeExecutedIterator7advanceEv'/>
