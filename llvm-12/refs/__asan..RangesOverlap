<def f='llvm/compiler-rt/lib/asan/asan_interceptors_memintrinsics.h' l='131' ll='134' type='bool __asan::RangesOverlap(const char * offset1, __sanitizer::uptr length1, const char * offset2, __sanitizer::uptr length2)'/>
<doc f='llvm/compiler-rt/lib/asan/asan_interceptors_memintrinsics.h' l='128'>// Behavior of functions like &quot;memcpy&quot; or &quot;strcpy&quot; is undefined
// if memory intervals overlap. We report error in this case.
// Macro is used to avoid creation of new frames.</doc>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='810' macro='1' u='c' c='__interceptor_memcpy'/>
<use f='llvm/compiler-rt/lib/asan/asan_interceptors.cpp' l='380' macro='1' u='c' c='__interceptor_strcat'/>
<use f='llvm/compiler-rt/lib/asan/asan_interceptors.cpp' l='399' macro='1' u='c' c='__interceptor_strncat'/>
<use f='llvm/compiler-rt/lib/asan/asan_interceptors.cpp' l='421' macro='1' u='c' c='__interceptor_strcpy'/>
<use f='llvm/compiler-rt/lib/asan/asan_interceptors.cpp' l='466' macro='1' u='c' c='__interceptor_strncpy'/>
<use f='llvm/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp' l='22' macro='1' u='c' c='__asan_memcpy'/>
