<dec f='llvm/polly/lib/External/isl/include/isl/map.h' l='406' type='isl_map * isl_map_subtract(isl_map * map1, isl_map * map2)'/>
<use f='llvm/polly/lib/External/isl/include/isl/isl-noexceptions.h' l='8980' u='c' c='_ZNK3isl12noexceptions3map8subtractES1_'/>
<use f='llvm/polly/lib/External/isl/isl_flow.c' l='893' u='c' c='all_intermediate_sources'/>
<use f='llvm/polly/lib/External/isl/isl_flow.c' l='1044' u='c' c='handle_coscheduled'/>
<use f='llvm/polly/lib/External/isl/isl_input.c' l='2047' u='c' c='read_conjuncts'/>
<use f='llvm/polly/lib/External/isl/isl_input.c' l='2055' u='c' c='read_conjuncts'/>
<use f='llvm/polly/lib/External/isl/isl_input.c' l='2115' u='c' c='read_formula'/>
<def f='llvm/polly/lib/External/isl/isl_map_subtract.c' l='533' ll='586' type='isl_map * isl_map_subtract(isl_map * map1, isl_map * map2)'/>
<use f='llvm/polly/lib/External/isl/isl_map_subtract.c' l='591' u='c' c='isl_set_subtract'/>
<use f='llvm/polly/lib/External/isl/isl_map_subtract.c' l='613' u='c' c='isl_map_subtract_domain'/>
<use f='llvm/polly/lib/External/isl/isl_map_subtract.c' l='638' u='c' c='isl_map_subtract_range'/>
<use f='llvm/polly/lib/External/isl/isl_map_subtract.c' l='938' u='c' c='isl_map_complement'/>
<doc f='llvm/polly/lib/External/isl/isl_map_subtract.c' l='525'>/* Return the set difference between map1 and map2.
 * (U_i A_i) \ (U_j B_j) is computed as U_i (A_i \ (U_j B_j))
 *
 * If &quot;map1&quot; and &quot;map2&quot; are obviously equal to each other,
 * then return an empty map in the same space.
 *
 * If &quot;map1&quot; and &quot;map2&quot; are disjoint, then simply return &quot;map1&quot;.
 */</doc>
<use f='llvm/polly/lib/External/isl/isl_transitive_closure.c' l='2415' u='c' c='can_be_split_off'/>
<use f='llvm/polly/lib/External/isl/isl_union_map.c' l='1026' u='a' c='isl_union_map_subtract'/>
