<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.h' l='84' u='r' c='_ZN8gwp_asan20GuardedPoolAllocator12shouldSampleEv'/>
<dec f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.h' l='209' type='uint32_t'/>
<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.cpp' l='88' u='w' c='_ZN8gwp_asan20GuardedPoolAllocator4initERKNS_7options7OptionsE'/>
<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.cpp' l='90' u='w' c='_ZN8gwp_asan20GuardedPoolAllocator4initERKNS_7options7OptionsE'/>
<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.cpp' l='94' u='r' c='_ZN8gwp_asan20GuardedPoolAllocator4initERKNS_7options7OptionsE'/>
<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.cpp' l='146' u='r' c='_ZN8gwp_asan20GuardedPoolAllocator8allocateEm'/>
<offset>1088</offset>
<doc f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.h' l='203'>// The adjusted sample rate for allocation sampling. Default *must* be
  // nonzero, as dynamic initialisation may call malloc (e.g. from libstdc++)
  // before GPA::init() is called. This would cause an error in shouldSample(),
  // where we would calculate modulo zero. This value is set UINT32_MAX, as when
  // GWP-ASan is disabled, we wish to never spend wasted cycles recalculating
  // the sample rate.</doc>
