<dec f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='320' type='void clang::transformer::addInclude(clang::transformer::RewriteRule &amp; Rule, llvm::StringRef Header, clang::transformer::IncludeFormat Format = IncludeFormat::Quoted)'/>
<def f='llvm/clang/lib/Tooling/Transformer/RewriteRule.cpp' l='328' ll='332' type='void clang::transformer::addInclude(clang::transformer::RewriteRule &amp; Rule, llvm::StringRef Header, clang::transformer::IncludeFormat Format = IncludeFormat::Quoted)'/>
<doc f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='310'>/// For every case in Rule, adds an include directive for the given header. The
/// common use is assumed to be a rule with only one case. For example, to
/// replace a function call and add headers corresponding to the new code, one
/// could write:
/// \code
///   auto R = makeRule(callExpr(callee(functionDecl(hasName(&quot;foo&quot;)))),
///            changeTo(cat(&quot;bar()&quot;)));
///   addInclude(R, &quot;path/to/bar_header.h&quot;);
///   addInclude(R, &quot;vector&quot;, IncludeFormat::Angled);
/// \endcode</doc>
<use f='llvm/clang/unittests/Tooling/TransformerTest.cpp' l='257' u='c' c='_ZN12_GLOBAL__N_144TransformerTest_AddIncludeQuotedForRule_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/TransformerTest.cpp' l='275' u='c' c='_ZN12_GLOBAL__N_144TransformerTest_AddIncludeAngledForRule_Test8TestBodyEv'/>
