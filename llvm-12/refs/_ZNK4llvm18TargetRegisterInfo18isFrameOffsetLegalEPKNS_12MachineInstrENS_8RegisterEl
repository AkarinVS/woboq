<def f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='932' ll='935' type='bool llvm::TargetRegisterInfo::isFrameOffsetLegal(const llvm::MachineInstr * MI, llvm::Register BaseReg, int64_t Offset) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='930'>/// Determine whether a given base register plus offset immediate is
  /// encodable to resolve a frame index.</doc>
<use f='llvm/llvm/lib/CodeGen/LocalStackSlotAllocation.cpp' l='280' u='c' c='_ZL22lookupCandidateBaseRegjlllRKN4llvm12MachineInstrEPKNS_18TargetRegisterInfoE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp' l='524' c='_ZNK4llvm19AArch64RegisterInfo18isFrameOffsetLegalEPKNS_12MachineInstrENS_8RegisterEl'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIRegisterInfo.cpp' l='522' c='_ZNK4llvm14SIRegisterInfo18isFrameOffsetLegalEPKNS_12MachineInstrENS_8RegisterEl'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp' l='700' c='_ZNK4llvm19ARMBaseRegisterInfo18isFrameOffsetLegalEPKNS_12MachineInstrENS_8RegisterEl'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp' l='1427' c='_ZNK4llvm15PPCRegisterInfo18isFrameOffsetLegalEPKNS_12MachineInstrENS_8RegisterEl'/>
