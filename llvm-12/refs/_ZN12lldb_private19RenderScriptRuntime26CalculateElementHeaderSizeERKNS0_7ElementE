<dec f='llvm/lldb/source/Plugins/LanguageRuntime/RenderScript/RenderScriptRuntime/RenderScriptRuntime.h' l='545' type='size_t lldb_private::RenderScriptRuntime::CalculateElementHeaderSize(const lldb_private::RenderScriptRuntime::Element &amp; elem)'/>
<def f='llvm/lldb/source/Plugins/LanguageRuntime/RenderScript/RenderScriptRuntime/RenderScriptRuntime.cpp' l='2613' ll='2624' type='size_t lldb_private::RenderScriptRuntime::CalculateElementHeaderSize(const lldb_private::RenderScriptRuntime::Element &amp; elem)'/>
<use f='llvm/lldb/source/Plugins/LanguageRuntime/RenderScript/RenderScriptRuntime/RenderScriptRuntime.cpp' l='2621' u='c' c='_ZN12lldb_private19RenderScriptRuntime26CalculateElementHeaderSizeERKNS0_7ElementE'/>
<use f='llvm/lldb/source/Plugins/LanguageRuntime/RenderScript/RenderScriptRuntime/RenderScriptRuntime.cpp' l='2689' u='c' c='_ZN12lldb_private19RenderScriptRuntime14SaveAllocationERNS_6StreamEjPKcPNS_10StackFrameE'/>
<doc f='llvm/lldb/source/Plugins/LanguageRuntime/RenderScript/RenderScriptRuntime/RenderScriptRuntime.cpp' l='2608'>// Given an Element object this function returns the total size needed in the
// file header to store the element&apos;s details. Taking into account the size of
// the element header struct, plus the offsets to all the element&apos;s children.
// Function is recursive so that the size of all ancestors is taken into
// account.</doc>
