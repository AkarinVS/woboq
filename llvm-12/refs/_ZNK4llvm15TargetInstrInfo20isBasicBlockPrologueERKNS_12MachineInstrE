<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1845' ll='1847' type='bool llvm::TargetInstrInfo::isBasicBlockPrologue(const llvm::MachineInstr &amp; MI) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1842'>/// True if the instruction is bound to the top of its basic block and no
  /// other instructions shall be inserted before it. This can be implemented
  /// to prevent register allocator to insert spills before such instructions.</doc>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='203' u='c' c='_ZN4llvm17MachineBasicBlock17SkipPHIsAndLabelsENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEE'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='218' u='c' c='_ZN4llvm17MachineBasicBlock22SkipPHIsLabelsAndDebugENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEE'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocFast.cpp' l='463' u='c' c='_ZNK12_GLOBAL__N_112RegAllocFast25getMBBBeginInsertionPointERN4llvm17MachineBasicBlockERNS1_8SmallSetINS1_8RegisterELj2ESt4lessIS5_EEE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIFixSGPRCopies.cpp' l='383' u='c' c='_ZL19getFirstNonProloguePN4llvm17MachineBasicBlockEPKNS_15TargetInstrInfoE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIFixSGPRCopies.cpp' l='537' u='c' c='_ZL22hoistAndMergeSGPRInitsjRKN4llvm19MachineRegisterInfoEPKNS_18TargetRegisterInfoERNS_20MachineDominatorTreeEPKNS_15TargetInstrInfoE'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='6943' c='_ZNK4llvm11SIInstrInfo20isBasicBlockPrologueERKNS_12MachineInstrE'/>
