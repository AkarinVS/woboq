<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1118' ll='1126' type='bool llvm::TargetLoweringBase::isOperationLegalOrPromote(unsigned int Op, llvm::EVT VT, bool LegalOnly = false) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1114'>/// Return true if the specified operation is legal on this target or can be
  /// made legal using promotion. This is used to help guide high-level lowering
  /// decisions. LegalOnly is an optional convenience for code paths traversed
  /// pre and post legalisation.</doc>
<use f='llvm/llvm/include/llvm/CodeGen/BasicTTIImpl.h' l='691' u='c' c='_ZN4llvm16BasicTTIImplBase22getArithmeticInstrCostEjPNS_4TypeENS_19TargetTransformInfo14TargetCostKindENS3_16OperandValueKindES5_NS3_22OperandValuePro3748381'/>
<use f='llvm/llvm/include/llvm/CodeGen/BasicTTIImpl.h' l='810' u='c' c='_ZN4llvm16BasicTTIImplBase16getCastInstrCostEjPNS_4TypeES2_NS_19TargetTransformInfo15CastContextHintENS3_14TargetCostKindEPKNS_11InstructionE'/>
<use f='llvm/llvm/include/llvm/CodeGen/BasicTTIImpl.h' l='1770' u='c' c='_ZN4llvm16BasicTTIImplBase30getTypeBasedIntrinsicInstrCostERKNS_23IntrinsicCostAttributesENS_19TargetTransformInfo14TargetCostKindE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp' l='528' u='c' c='_ZN4llvm10GCNTTIImpl22getArithmeticInstrCostEjPNS_4TypeENS_19TargetTransformInfo14TargetCostKindENS3_16OperandValueKindES5_NS3_22OperandValuePropertie9548614'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='9846' u='c' c='_ZL23lowerBuildVectorToBitOpPN4llvm17BuildVectorSDNodeERKNS_12X86SubtargetERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='43681' u='c' c='_ZL21PromoteMaskArithmeticPN4llvm6SDNodeENS_3EVTERNS_12SelectionDAGEj'/>
