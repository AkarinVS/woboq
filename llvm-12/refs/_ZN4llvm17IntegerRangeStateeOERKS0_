<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2136' ll='2141' type='llvm::IntegerRangeState llvm::IntegerRangeState::operator^=(const llvm::IntegerRangeState &amp; R)'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2133'>/// &quot;Clamp&quot; this state with \p R. The result is subtype dependent but it is
  /// intended that only information assumed in both states will be assumed in
  /// this one afterwards.</doc>
