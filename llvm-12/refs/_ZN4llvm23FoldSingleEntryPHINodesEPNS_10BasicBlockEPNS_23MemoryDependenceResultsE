<dec f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='77' type='bool llvm::FoldSingleEntryPHINodes(llvm::BasicBlock * BB, llvm::MemoryDependenceResults * MemDep = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='73'>/// We know that BB has one predecessor. If there are any single-entry PHI nodes
/// in it, fold them away. This handles the case when all entries to the PHI
/// nodes in a block are guaranteed equal, such as when the block has exactly
/// one predecessor.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp' l='1289' u='c' c='_ZL27normalizeForInvokeSafepointPN4llvm10BasicBlockES1_RNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp' l='2737' u='c' c='_ZN4llvm23RewriteStatepointsForGC13runOnFunctionERNS_8FunctionERNS_13DominatorTreeERNS_19TargetTransformInfoERKNS_17TargetLibraryInfoE'/>
<def f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='139' ll='156' type='bool llvm::FoldSingleEntryPHINodes(llvm::BasicBlock * BB, llvm::MemoryDependenceResults * MemDep = nullptr)'/>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='226' u='c' c='_ZN4llvm25MergeBlockIntoPredecessorEPNS_10BasicBlockEPNS_14DomTreeUpdaterEPNS_8LoopInfoEPNS_16MemorySSAUpdaterEPNS_23MemoryDependenceResultsEb'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp' l='372' u='c' c='_ZN12_GLOBAL__N_110LoopRotate10rotateLoopEPN4llvm4LoopEb'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='2427' u='c' c='_ZL19FoldCondBranchOnPHIPN4llvm10BranchInstEPNS_14DomTreeUpdaterERKNS_10DataLayoutEPNS_15AssumptionCacheE'/>
