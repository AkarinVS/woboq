<dec f='llvm/lldb/include/lldb/Utility/DataExtractor.h' l='938' type='uint32_t lldb_private::DataExtractor::Skip_LEB128(lldb::offset_t * offset_ptr) const'/>
<doc f='llvm/lldb/include/lldb/Utility/DataExtractor.h' l='922'>/// Skip an LEB128 number at \a *offset_ptr.
  ///
  /// Skips a LEB128 number (signed or unsigned) from this object&apos;s data
  /// starting at the offset pointed to by \a offset_ptr. The offset pointed
  /// to by \a offset_ptr will be updated with the offset of the byte
  /// following the last extracted byte.
  ///
  /// \param[in,out] offset_ptr
  ///     A pointer to an offset within the data that will be advanced
  ///     by the appropriate number of bytes if the value is extracted
  ///     correctly. If the offset is out of bounds or there are not
  ///     enough bytes to extract this value, the offset will be left
  ///     unmodified.
  ///
  /// \return
  ///     The number of bytes consumed during the extraction.</doc>
<use f='llvm/lldb/source/Expression/DWARFExpression.cpp' l='381' u='c' c='_ZL17GetOpcodeDataSizeRKN12lldb_private13DataExtractorEmh'/>
<use f='llvm/lldb/source/Expression/DWARFExpression.cpp' l='387' u='c' c='_ZL17GetOpcodeDataSizeRKN12lldb_private13DataExtractorEmh'/>
<use f='llvm/lldb/source/Expression/DWARFExpression.cpp' l='388' u='c' c='_ZL17GetOpcodeDataSizeRKN12lldb_private13DataExtractorEmh'/>
<use f='llvm/lldb/source/Expression/DWARFExpression.cpp' l='394' u='c' c='_ZL17GetOpcodeDataSizeRKN12lldb_private13DataExtractorEmh'/>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/DWARFDebugInfoEntry.cpp' l='167' u='c' c='_ZN19DWARFDebugInfoEntry7ExtractERKN12lldb_private18DWARFDataExtractorEPK9DWARFUnitPm'/>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/DWARFFormValue.cpp' l='317' u='c' c='_ZN14DWARFFormValue9SkipValueEtRKN12lldb_private18DWARFDataExtractorEPmPK9DWARFUnit'/>
<def f='llvm/lldb/source/Utility/DataExtractor.cpp' l='879' ll='894' type='uint32_t lldb_private::DataExtractor::Skip_LEB128(lldb::offset_t * offset_ptr) const'/>
<doc f='llvm/lldb/source/Utility/DataExtractor.cpp' l='873'>// Skips a ULEB128 number (signed or unsigned) from this object&apos;s data starting
// at the offset pointed to by &quot;offset_ptr&quot;. The offset pointed to by
// &quot;offset_ptr&quot; will be updated with the offset of the byte following the last
// extracted byte.
//
// Returns the number of bytes consumed during the extraction.</doc>
