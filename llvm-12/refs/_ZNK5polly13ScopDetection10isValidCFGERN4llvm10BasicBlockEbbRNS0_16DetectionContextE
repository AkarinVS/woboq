<dec f='llvm/polly/include/polly/ScopDetection.h' l='463' type='bool polly::ScopDetection::isValidCFG(llvm::BasicBlock &amp; BB, bool IsLoopBranch, bool AllowUnreachable, polly::ScopDetection::DetectionContext &amp; Context) const'/>
<doc f='llvm/polly/include/polly/ScopDetection.h' l='449'>/// Check if the control flow in a basic block is valid.
  ///
  /// This function checks if a certain basic block is terminated by a
  /// Terminator instruction we can handle or, if this is not the case,
  /// registers this basic block as the start of a non-affine region.
  ///
  /// This function optionally allows unreachable statements.
  ///
  /// @param BB               The BB to check the control flow.
  /// @param IsLoopBranch     Flag to indicate the branch is a loop exit/latch.
  //  @param AllowUnreachable Allow unreachable statements.
  /// @param Context          The context of scop detection.
  ///
  /// @return True if the BB contains only valid control flow.</doc>
<def f='llvm/polly/lib/Analysis/ScopDetection.cpp' l='636' ll='666' type='bool polly::ScopDetection::isValidCFG(llvm::BasicBlock &amp; BB, bool IsLoopBranch, bool AllowUnreachable, polly::ScopDetection::DetectionContext &amp; Context) const'/>
<use f='llvm/polly/lib/Analysis/ScopDetection.cpp' l='1271' u='c' c='_ZNK5polly13ScopDetection18canUseISLTripCountEPN4llvm4LoopERNS0_16DetectionContextE'/>
<use f='llvm/polly/lib/Analysis/ScopDetection.cpp' l='1553' u='c' c='_ZNK5polly13ScopDetection14allBlocksValidERNS0_16DetectionContextE'/>
