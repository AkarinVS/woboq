<dec f='llvm/polly/include/polly/FlattenAlgo.h' l='34' type='isl::union_map polly::flattenSchedule(isl::union_map Schedule)'/>
<use f='llvm/polly/lib/Transform/FlattenAlgo.cpp' l='202' u='c' c='_ZN12_GLOBAL__N_118tryFlattenSequenceEN3isl12noexceptions9union_mapE'/>
<use f='llvm/polly/lib/Transform/FlattenAlgo.cpp' l='264' u='c' c='_ZN12_GLOBAL__N_114tryFlattenLoopEN3isl12noexceptions9union_mapE'/>
<def f='llvm/polly/lib/Transform/FlattenAlgo.cpp' l='308' ll='345' type='isl::union_map polly::flattenSchedule(isl::union_map Schedule)'/>
<doc f='llvm/polly/include/polly/FlattenAlgo.h' l='20'>/// Recursively flatten a schedule.
///
/// Reduce the number of scatter dimensions as much as possible without changing
/// the relative order of instances in a schedule. Ideally, this results in a
/// single scatter dimension, but it may not always be possible to combine
/// dimensions, eg. if a dimension is unbounded. In worst case, the original
/// schedule is returned.
///
/// Schedules with fewer dimensions may be easier to understand for humans, but
/// it should make no difference to the computer.
///
/// @param Schedule The input schedule.
///
/// @return The flattened schedule.</doc>
<use f='llvm/polly/lib/Transform/FlattenSchedule.cpp' l='69' u='c' c='_ZN12_GLOBAL__N_115FlattenSchedule9runOnScopERN5polly4ScopE'/>
<use f='llvm/polly/unittests/Flatten/FlattenTest.cpp' l='33' u='c' c='_ZN12_GLOBAL__N_112checkFlattenEPKcS1_'/>
