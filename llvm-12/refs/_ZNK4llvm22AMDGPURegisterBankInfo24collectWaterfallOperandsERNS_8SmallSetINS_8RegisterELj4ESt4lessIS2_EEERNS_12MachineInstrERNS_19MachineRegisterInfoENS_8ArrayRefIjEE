<dec f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.h' l='50' type='bool llvm::AMDGPURegisterBankInfo::collectWaterfallOperands(SmallSet&lt;llvm::Register, 4&gt; &amp; SGPROperandRegs, llvm::MachineInstr &amp; MI, llvm::MachineRegisterInfo &amp; MRI, ArrayRef&lt;unsigned int&gt; OpIndices) const'/>
<def f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='1059' ll='1072' type='bool llvm::AMDGPURegisterBankInfo::collectWaterfallOperands(SmallSet&lt;llvm::Register, 4&gt; &amp; SGPROperandRegs, llvm::MachineInstr &amp; MI, llvm::MachineRegisterInfo &amp; MRI, ArrayRef&lt;unsigned int&gt; OpIndices) const'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='1081' u='c' c='_ZNK4llvm22AMDGPURegisterBankInfo22executeInWaterfallLoopERNS_16MachineIRBuilderERNS_12MachineInstrERNS_19MachineRegisterInfoENS_8ArrayRefIjEE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='2767' u='c' c='_ZNK4llvm22AMDGPURegisterBankInfo16applyMappingImplERKNS_16RegisterBankInfo14OperandsMapperE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='2893' u='c' c='_ZNK4llvm22AMDGPURegisterBankInfo16applyMappingImplERKNS_16RegisterBankInfo14OperandsMapperE'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='1055'>// Return any unique registers used by \p MI at \p OpIndices that need to be
// handled in a waterfall loop. Returns these registers in \p
// SGPROperandRegs. Returns true if there are any operands to handle and a
// waterfall loop is necessary.</doc>
