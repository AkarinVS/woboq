<dec f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.h' l='167' type='bool llvm::GCNTTIImpl::isInlineAsmSourceOfDivergence(const llvm::CallInst * CI, ArrayRef&lt;unsigned int&gt; Indices = {}) const'/>
<def f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp' l='872' ll='913' type='bool llvm::GCNTTIImpl::isInlineAsmSourceOfDivergence(const llvm::CallInst * CI, ArrayRef&lt;unsigned int&gt; Indices = {}) const'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp' l='949' u='c' c='_ZNK4llvm10GCNTTIImpl20isSourceOfDivergenceEPKNS_5ValueE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp' l='977' u='c' c='_ZNK4llvm10GCNTTIImpl15isAlwaysUniformEPKNS_5ValueE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp' l='1005' u='c' c='_ZNK4llvm10GCNTTIImpl15isAlwaysUniformEPKNS_5ValueE'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp' l='868'>/// Analyze if the results of inline asm are divergent. If \p Indices is empty,
/// this is analyzing the collective result of all output registers. Otherwise,
/// this is only querying a specific result index if this returns multiple
/// registers in a struct.</doc>
