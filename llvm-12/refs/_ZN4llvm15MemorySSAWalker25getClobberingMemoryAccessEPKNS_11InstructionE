<def f='llvm/llvm/include/llvm/Analysis/MemorySSA.h' l='1020' ll='1024' type='llvm::MemoryAccess * llvm::MemorySSAWalker::getClobberingMemoryAccess(const llvm::Instruction * I)'/>
<doc f='llvm/llvm/include/llvm/Analysis/MemorySSA.h' l='998'>/// Given a memory Mod/Ref/ModRef&apos;ing instruction, calling this
  /// will give you the nearest dominating MemoryAccess that Mod&apos;s the location
  /// the instruction accesses (by skipping any def which AA can prove does not
  /// alias the location(s) accessed by the instruction given).
  ///
  /// Note that this will return a single access, and it must dominate the
  /// Instruction, so if an operand of a MemoryPhi node Mod&apos;s the instruction,
  /// this will return the MemoryPhi, not the operand. This means that
  /// given:
  /// if (a) {
  ///   1 = MemoryDef(liveOnEntry)
  ///   store %a
  /// } else {
  ///   2 = MemoryDef(liveOnEntry)
  ///   store %b
  /// }
  /// 3 = MemoryPhi(2, 1)
  /// MemoryUse(3)
  /// load %a
  ///
  /// calling this API on load(%a) will return the MemoryPhi, not the MemoryDef
  /// in the if (a) branch.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/EarlyCSE.cpp' l='998' u='c' c='_ZN12_GLOBAL__N_18EarlyCSE19isSameMemGenerationEjjPN4llvm11InstructionES3_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='1326' u='c' c='_ZN4llvm18canSinkOrHoistInstERNS_11InstructionEPNS_9AAResultsEPNS_13DominatorTreeEPNS_4LoopEPNS_15AliasSetTrackerEPNS_16MemorySSAUpdaterEbPNS_21SinkAn4645702'/>
<use f='llvm/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp' l='743' u='c' c='_ZN4llvm13MemCpyOptPass12processStoreEPNS_9StoreInstERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb0ELb0EvEELb0ELb0EEE'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='555' u='c' c='_ZN37MemorySSATest_RemoveMemoryAccess_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='568' u='c' c='_ZN37MemorySSATest_RemoveMemoryAccess_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='572' u='c' c='_ZN37MemorySSATest_RemoveMemoryAccess_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='616' u='c' c='_ZN34MemorySSATest_TestTripleStore_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='642' u='c' c='_ZN35MemorySSATest_TestStoreAndLoad_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='644' u='c' c='_ZN35MemorySSATest_TestStoreAndLoad_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='675' u='c' c='_ZN39MemorySSATest_TestStoreDoubleQuery_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='682' u='c' c='_ZN39MemorySSATest_TestStoreDoubleQuery_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='746' u='c' c='_ZN45MemorySSATest_PartialWalkerCacheWithPhis_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='752' u='c' c='_ZN45MemorySSATest_PartialWalkerCacheWithPhis_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='758' u='c' c='_ZN45MemorySSATest_PartialWalkerCacheWithPhis_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='812' u='c' c='_ZN30MemorySSATest_WalkerReopt_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='815' u='c' c='_ZN30MemorySSATest_WalkerReopt_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='862' u='c' c='_ZN37MemorySSATest_MoveAboveMemoryDef_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='862' u='c' c='_ZN37MemorySSATest_MoveAboveMemoryDef_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='864' u='c' c='_ZN37MemorySSATest_MoveAboveMemoryDef_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='864' u='c' c='_ZN37MemorySSATest_MoveAboveMemoryDef_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1075' u='c' c='_ZN37MemorySSATest_TestStoreMustAlias_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1078' u='c' c='_ZN37MemorySSATest_TestStoreMustAlias_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1182' u='c' c='_ZN36MemorySSATest_TestStoreMayAlias_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1369' u='c' c='_ZN49MemorySSATest_TestOptimizedDefsAreProperUses_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1369' u='c' c='_ZN49MemorySSATest_TestOptimizedDefsAreProperUses_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1371' u='c' c='_ZN49MemorySSATest_TestOptimizedDefsAreProperUses_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1371' u='c' c='_ZN49MemorySSATest_TestOptimizedDefsAreProperUses_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1375' u='c' c='_ZN49MemorySSATest_TestOptimizedDefsAreProperUses_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1375' u='c' c='_ZN49MemorySSATest_TestOptimizedDefsAreProperUses_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1455' u='c' c='_ZN52MemorySSATest_TestAddedEdgeToBlockWithPhiNotOpt_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1465' u='c' c='_ZN52MemorySSATest_TestAddedEdgeToBlockWithPhiNotOpt_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1517' u='c' c='_ZN49MemorySSATest_TestAddedEdgeToBlockWithPhiOpt_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1529' u='c' c='_ZN49MemorySSATest_TestAddedEdgeToBlockWithPhiOpt_Test8TestBodyEv'/>
