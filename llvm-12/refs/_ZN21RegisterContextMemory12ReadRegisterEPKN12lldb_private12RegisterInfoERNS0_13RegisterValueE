<dec f='llvm/lldb/source/Plugins/Process/Utility/RegisterContextMemory.h' l='48' type='bool RegisterContextMemory::ReadRegister(const lldb_private::RegisterInfo * reg_info, lldb_private::RegisterValue &amp; reg_value)'/>
<doc f='llvm/lldb/source/Plugins/Process/Utility/RegisterContextMemory.h' l='42'>// If all of the thread register are in a contiguous buffer in
  // memory, then the default ReadRegister/WriteRegister and
  // ReadAllRegisterValues/WriteAllRegisterValues will work. If thread
  // registers are not contiguous, clients will want to subclass this
  // class and modify the read/write functions as needed.</doc>
<inh f='llvm/lldb/include/lldb/Target/RegisterContext.h' l='44' c='_ZN12lldb_private15RegisterContext12ReadRegisterEPKNS_12RegisterInfoERNS_13RegisterValueE'/>
<def f='llvm/lldb/source/Plugins/Process/Utility/RegisterContextMemory.cpp' l='76' ll='88' type='bool RegisterContextMemory::ReadRegister(const lldb_private::RegisterInfo * reg_info, lldb_private::RegisterValue &amp; reg_value)'/>
