<dec f='llvm/llvm/include/llvm/Option/OptTable.h' l='236' type='llvm::opt::InputArgList llvm::opt::OptTable::parseArgs(int Argc, char *const * Argv, llvm::opt::OptSpecifier Unknown, llvm::StringSaver &amp; Saver, function_ref&lt;void (llvm::StringRef)&gt; ErrorFn) const'/>
<doc f='llvm/llvm/include/llvm/Option/OptTable.h' l='228'>/// A convenience helper which handles optional initial options populated from
  /// an environment variable, expands response files recursively and parses
  /// options.
  ///
  /// \param ErrorFn - Called on a formatted error message for missing arguments
  /// or unknown options.
  /// \return An InputArgList; on error this will contain all the options which
  /// could be parsed.</doc>
<use f='llvm/lldb/tools/lldb-server/lldb-gdbserver.cpp' l='405' u='c' c='_Z14main_gdbserveriPPc'/>
<def f='llvm/llvm/lib/Option/OptTable.cpp' l='497' ll='522' type='llvm::opt::InputArgList llvm::opt::OptTable::parseArgs(int Argc, char *const * Argv, llvm::opt::OptSpecifier Unknown, llvm::StringSaver &amp; Saver, function_ref&lt;void (llvm::StringRef)&gt; ErrorFn) const'/>
<use f='llvm/llvm/tools/llvm-symbolizer/llvm-symbolizer.cpp' l='219' u='c' c='_ZL12parseOptionsiPPcbRN4llvm11StringSaverERN12_GLOBAL__N_118SymbolizerOptTableE'/>
