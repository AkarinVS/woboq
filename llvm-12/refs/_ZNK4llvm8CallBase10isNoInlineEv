<def f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='1745' type='bool llvm::CallBase::isNoInline() const'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='1744'>/// Return true if the call should not be inlined.</doc>
<use f='llvm/llvm/lib/Analysis/CodeMetrics.cpp' l='134' u='c' c='_ZN4llvm11CodeMetrics17analyzeBasicBlockEPKNS_10BasicBlockERKNS_19TargetTransformInfoERKNS_15SmallPtrSetImplIPKNS_5ValueEEEb'/>
<use f='llvm/llvm/lib/Analysis/InlineCost.cpp' l='2569' u='c' c='_ZN4llvm33getAttributeBasedInliningDecisionERNS_8CallBaseEPNS_8FunctionERNS_19TargetTransformInfoENS_12function_refIFRKNS_17TargetLibraryInfoERS2_EEE'/>
<use f='llvm/llvm/lib/CodeGen/SafeStack.cpp' l='729' u='c' c='_ZN12_GLOBAL__N_19SafeStack26ShouldInlinePointerAddressERN4llvm8CallInstE'/>
