<dec f='llvm/llvm/include/llvm/CodeGen/ISDOpcodes.h' l='1364' type='llvm::ISD::CondCode llvm::ISD::GlobalISel::getSetCCInverse(llvm::ISD::CondCode Operation, bool isIntegerLike)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/ISDOpcodes.h' l='1358'>/// Return the operation corresponding to !(X op Y), where &apos;op&apos; is a valid
/// SetCC operation. The U bit of the condition code has different meanings
/// between floating point and integer comparisons and LLT&apos;s don&apos;t provide
/// this distinction. As such we need to be told whether the comparison is
/// floating point or integer-like. Pointers should use integer-like
/// comparisons.</doc>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='476' ll='479' type='ISD::CondCode llvm::ISD::GlobalISel::getSetCCInverse(ISD::CondCode Op, bool isIntegerLike)'/>
