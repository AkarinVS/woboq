<def f='llvm/clang/include/clang/AST/Decl.h' l='1334' ll='1336' type='clang::VarDecl::InitializationStyle clang::VarDecl::getInitStyle() const'/>
<use f='llvm/clang/include/clang/AST/Decl.h' l='1340' u='c' c='_ZNK5clang7VarDecl12isDirectInitEv'/>
<doc f='llvm/clang/include/clang/AST/Decl.h' l='1324'>/// The style of initialization for this declaration.
  ///
  /// C-style initialization is &quot;int x = 1;&quot;. Call-style initialization is
  /// a C++98 direct-initializer, e.g. &quot;int x(1);&quot;. The Init expression will be
  /// the expression inside the parens or a &quot;ClassType(a,b,c)&quot; class constructor
  /// expression for class types. List-style initialization is C++11 syntax,
  /// e.g. &quot;int x{1};&quot;. Clients can distinguish between different forms of
  /// initialization by checking this value. In particular, &quot;int x = {1};&quot; is
  /// C-style, &quot;int x({1})&quot; is call-style, and &quot;int x{1};&quot; is list-style; the
  /// Init expression in all three cases is an InitListExpr.</doc>
<use f='llvm/clang/lib/AST/DeclPrinter.cpp' l='883' u='c' c='_ZN12_GLOBAL__N_111DeclPrinter12VisitVarDeclEPN5clang7VarDeclE'/>
<use f='llvm/clang/lib/AST/DeclPrinter.cpp' l='890' u='c' c='_ZN12_GLOBAL__N_111DeclPrinter12VisitVarDeclEPN5clang7VarDeclE'/>
<use f='llvm/clang/lib/AST/DeclPrinter.cpp' l='892' u='c' c='_ZN12_GLOBAL__N_111DeclPrinter12VisitVarDeclEPN5clang7VarDeclE'/>
<use f='llvm/clang/lib/AST/DeclPrinter.cpp' l='899' u='c' c='_ZN12_GLOBAL__N_111DeclPrinter12VisitVarDeclEPN5clang7VarDeclE'/>
<use f='llvm/clang/lib/AST/JSONNodeDumper.cpp' l='780' u='c' c='_ZN5clang14JSONNodeDumper12VisitVarDeclEPKNS_7VarDeclE'/>
<use f='llvm/clang/lib/AST/StmtPrinter.cpp' l='2017' u='c' c='_ZN12_GLOBAL__N_111StmtPrinter15VisitLambdaExprEPN5clang10LambdaExprE'/>
<use f='llvm/clang/lib/AST/StmtPrinter.cpp' l='2021' u='c' c='_ZN12_GLOBAL__N_111StmtPrinter15VisitLambdaExprEPN5clang10LambdaExprE'/>
<use f='llvm/clang/lib/AST/TextNodeDumper.cpp' l='1692' u='c' c='_ZN5clang14TextNodeDumper12VisitVarDeclEPKNS_7VarDeclE'/>
<use f='llvm/clang/lib/Sema/JumpDiagnostics.cpp' l='198' u='c' c='_ZL23GetDiagForGotoScopeDeclRN5clang4SemaEPKNS_4DeclE'/>
<use f='llvm/clang/lib/Sema/TreeTransform.h' l='12401' u='c' c='_ZN5clang13TreeTransform19TransformLambdaExprEPNS_10LambdaExprE'/>
<use f='llvm/clang/lib/Sema/TreeTransform.h' l='12413' u='c' c='_ZN5clang13TreeTransform19TransformLambdaExprEPNS_10LambdaExprE'/>
<use f='llvm/clang/lib/Sema/TreeTransform.h' l='12582' u='c' c='_ZN5clang13TreeTransform19TransformLambdaExprEPNS_10LambdaExprE'/>
<use f='llvm/clang/lib/Sema/SemaOpenMP.cpp' l='6980' u='c' c='_ZN12_GLOBAL__N_127OpenMPIterationSpaceChecker15checkAndSetInitEPN5clang4StmtEb'/>
<use f='llvm/clang/lib/Sema/SemaOpenMP.cpp' l='15574' u='c' c='_ZL27actOnOMPReductionKindClauseRN5clang4SemaEPN12_GLOBAL__N_110DSAStackTyEN4llvm3omp6ClauseENS5_8ArrayRefIPNS_4ExprEEENS_14SourceLocationESC_SC_SC_RN9174305'/>
<use f='llvm/clang/lib/Sema/SemaOpenMP.cpp' l='15580' u='c' c='_ZL27actOnOMPReductionKindClauseRN5clang4SemaEPN12_GLOBAL__N_110DSAStackTyEN4llvm3omp6ClauseENS5_8ArrayRefIPNS_4ExprEEENS_14SourceLocationESC_SC_SC_RN9174305'/>
<use f='llvm/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp' l='5029' u='c' c='_ZN5clang4Sema26BuildVariableInstantiationEPNS_7VarDeclES2_RKNS_30MultiLevelTemplateArgumentListEPN4llvm11SmallVectorINS0_25LateInstantiatedAttributeE8251321'/>
<use f='llvm/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp' l='5155' u='c' c='_ZN5clang4Sema30InstantiateVariableInitializerEPNS_7VarDeclES2_RKNS_30MultiLevelTemplateArgumentListE'/>
<use f='llvm/clang/lib/Serialization/ASTWriterDecl.cpp' l='988' u='c' c='_ZN5clang13ASTDeclWriter12VisitVarDeclEPNS_7VarDeclE'/>
<use f='llvm/clang/lib/Serialization/ASTWriterDecl.cpp' l='1112' u='c' c='_ZN5clang13ASTDeclWriter16VisitParmVarDeclEPNS_11ParmVarDeclE'/>
