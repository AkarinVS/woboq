<def f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='490' ll='540'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='520' c='_ZNK4llvm15IntervalMapImpl7NodeRef7subtreeEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='521' c='_ZNK4llvm15IntervalMapImpl7NodeRef7subtreeEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='530' c='_ZNK4llvm15IntervalMapImpl7NodeRefeqERKS1_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='537' c='_ZNK4llvm15IntervalMapImpl7NodeRefneERKS1_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='700'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='703' c='_ZNK4llvm15IntervalMapImpl10BranchNode7subtreeEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='706' c='_ZN4llvm15IntervalMapImpl10BranchNode7subtreeEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='740' c='_ZNK4llvm15IntervalMapImpl10BranchNode10safeLookupET_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='749' c='_ZN4llvm15IntervalMapImpl10BranchNode6insertEjjNS0_7NodeRefET_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='781' c='_ZN4llvm15IntervalMapImpl4Path5EntryC1ENS0_7NodeRefEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='784' c='_ZNK4llvm15IntervalMapImpl4Path5Entry7subtreeEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='785' c='_ZNK4llvm15IntervalMapImpl4Path5Entry7subtreeEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='821' c='_ZNK4llvm15IntervalMapImpl4Path7subtreeEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='834' c='_ZN4llvm15IntervalMapImpl4Path4pushENS0_7NodeRefEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='872' c='_ZNK4llvm15IntervalMapImpl4Path14getLeftSiblingEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='889' c='_ZNK4llvm15IntervalMapImpl4Path15getRightSiblingEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='945'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1033' c='_ZN4llvm11IntervalMap10visitNodesEMNS_11IntervalMapIT_T0_XT1_ET2_EEFvNS_15IntervalMapImpl7NodeRefEjE'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1035' c='_ZN4llvm11IntervalMap10deleteNodeENS_15IntervalMapImpl7NodeRefEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1154' c='_ZNK4llvm11IntervalMap14treeSafeLookupET_T0_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1182' c='_ZN4llvm11IntervalMap10branchRootEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1186' c='_ZN4llvm11IntervalMap10branchRootEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1223' c='_ZN4llvm11IntervalMap9splitRootEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1227' c='_ZN4llvm11IntervalMap9splitRootEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1243' c='_ZN4llvm11IntervalMap10visitNodesEMNS_11IntervalMapIT_T0_XT1_ET2_EEFvNS_15IntervalMapImpl7NodeRefEjE'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1246' c='_ZN4llvm11IntervalMap10visitNodesEMNS_11IntervalMapIT_T0_XT1_ET2_EEFvNS_15IntervalMapImpl7NodeRefEjE'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1246' c='_ZN4llvm11IntervalMap10visitNodesEMNS_11IntervalMapIT_T0_XT1_ET2_EEFvNS_15IntervalMapImpl7NodeRefEjE'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1270' c='_ZN4llvm11IntervalMap10deleteNodeENS_15IntervalMapImpl7NodeRefEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1454' c='_ZN4llvm11IntervalMap14const_iterator12pathFillFindET_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1524' c='_ZN4llvm11IntervalMap8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefET_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1622' c='_ZN4llvm11IntervalMap8iterator15canCoalesceLeftET_T0_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1651' c='_ZN4llvm11IntervalMap8iterator16canCoalesceRightET_T0_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1732' c='_ZN4llvm11IntervalMap8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefET_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1812' c='_ZN4llvm11IntervalMap8iterator10treeInsertET_S2_T0_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1971' c='_ZN4llvm11IntervalMap8iterator8overflowEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1982' c='_ZN4llvm11IntervalMap8iterator8overflowEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='2016' c='_ZN4llvm11IntervalMap8iterator8overflowEj'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='469'>//===----------------------------------------------------------------------===//
//---                     IntervalMapImpl::NodeRef                         ---//
//===----------------------------------------------------------------------===//
//
// B+-tree nodes can be leaves or branches, so we need a polymorphic node
// pointer that can point to both kinds.
//
// All nodes are cache line aligned and the low 6 bits of a node pointer are
// always 0. These bits are used to store the number of elements in the
// referenced node. Besides saving space, placing node sizes in the parents
// allow tree balancing algorithms to run without faulting cache lines for nodes
// that may not need to be modified.
//
// A NodeRef doesn&apos;t know whether it references a leaf node or a branch node.
// It is the responsibility of the caller to use the correct types.
//
// Nodes are never supposed to be empty, and it is invalid to store a node size
// of 0 in a NodeRef. The valid range of sizes is 1-64.
//
//===----------------------------------------------------------------------===//</doc>
<mbr r='llvm::IntervalMapImpl::NodeRef::pip' o='0' t='PointerIntPair&lt;void *, Log2CacheLine, unsigned int, llvm::IntervalMapImpl::NodeRef::CacheAlignedPointerTraits&gt;'/>
<fun r='_ZN4llvm15IntervalMapImpl7NodeRefC1Ev'/>
<fun r='_ZNK4llvm15IntervalMapImpl7NodeRefcvbEv'/>
<fun r='_ZN4llvm15IntervalMapImpl7NodeRefC1EPT_j'/>
<fun r='_ZNK4llvm15IntervalMapImpl7NodeRef4sizeEv'/>
<fun r='_ZN4llvm15IntervalMapImpl7NodeRef7setSizeEj'/>
<fun r='_ZNK4llvm15IntervalMapImpl7NodeRef7subtreeEj'/>
<fun r='_ZNK4llvm15IntervalMapImpl7NodeRef3getEv'/>
<fun r='_ZNK4llvm15IntervalMapImpl7NodeRefeqERKS1_'/>
<fun r='_ZNK4llvm15IntervalMapImpl7NodeRefneERKS1_'/>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='25' c='_ZNK4llvm15IntervalMapImpl4Path14getLeftSiblingEj'/>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='28' c='_ZNK4llvm15IntervalMapImpl4Path14getLeftSiblingEj'/>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='37' c='_ZNK4llvm15IntervalMapImpl4Path14getLeftSiblingEj'/>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='40' c='_ZNK4llvm15IntervalMapImpl4Path14getLeftSiblingEj'/>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='65' c='_ZN4llvm15IntervalMapImpl4Path8moveLeftEj'/>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='75' c='_ZNK4llvm15IntervalMapImpl4Path15getRightSiblingEj'/>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='78' c='_ZNK4llvm15IntervalMapImpl4Path15getRightSiblingEj'/>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='87' c='_ZNK4llvm15IntervalMapImpl4Path15getRightSiblingEj'/>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='90' c='_ZNK4llvm15IntervalMapImpl4Path15getRightSiblingEj'/>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='110' c='_ZN4llvm15IntervalMapImpl4Path9moveRightEj'/>
<size>8</size>
