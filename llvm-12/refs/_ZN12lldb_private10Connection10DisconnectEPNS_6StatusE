<dec f='llvm/lldb/include/lldb/Utility/Connection.h' l='83' type='lldb::ConnectionStatus lldb_private::Connection::Disconnect(lldb_private::Status * error_ptr)'/>
<doc f='llvm/lldb/include/lldb/Utility/Connection.h' l='70'>/// Disconnect the communications connection if one is currently connected.
  ///
  /// \param[out] error_ptr
  ///     A pointer to an error object that should be given an
  ///     appropriate error value if this method returns false. This
  ///     value can be NULL if the error value should be ignored.
  ///
  /// \return
  ///     \b True if the disconnect succeeded, \b false otherwise. The
  ///     internal error object should be filled in with an
  ///     appropriate value based on the result of this function.
  ///
  /// \see Status&amp; Communication::GetError ();</doc>
<use f='llvm/lldb/source/Core/Communication.cpp' l='100' u='c' c='_ZN12lldb_private13Communication10DisconnectEPNS_6StatusE'/>
<ovr f='llvm/lldb/source/Host/posix/ConnectionFileDescriptorPosix.cpp' l='295' c='_ZN12lldb_private24ConnectionFileDescriptor10DisconnectEPNS_6StatusE'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerLLGS.cpp' l='3522' u='c' c='_ZN12lldb_private18process_gdb_remote32GDBRemoteCommunicationServerLLGS36MaybeCloseInferiorTerminalConnectionEv'/>
<ovr f='llvm/lldb/unittests/Process/gdb-remote/GDBRemoteTestUtils.h' l='38' c='_ZN12lldb_private18process_gdb_remote14MockConnection10DisconnectEPNS_6StatusE'/>
