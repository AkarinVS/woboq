<dec f='llvm/llvm/include/llvm/Analysis/DomTreeUpdater.h' l='304' type='bool llvm::DomTreeUpdater::isUpdateValid(DominatorTree::UpdateType Update) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/DomTreeUpdater.h' l='301'>/// Returns true if the update appears in the LLVM IR.
  /// It is used to check whether an update is valid in
  /// insertEdge/deleteEdge or is unnecessary in the batch update.</doc>
<def f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='25' ll='49' type='bool llvm::DomTreeUpdater::isUpdateValid(const DominatorTree::UpdateType Update) const'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='284' u='c' c='_ZN4llvm14DomTreeUpdater22applyUpdatesPermissiveENS_8ArrayRefINS_3cfg6UpdateIPNS_10BasicBlockEEEEE'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='348' u='c' c='_ZN4llvm14DomTreeUpdater17insertEdgeRelaxedEPNS_10BasicBlockES2_'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='394' u='c' c='_ZN4llvm14DomTreeUpdater17deleteEdgeRelaxedEPNS_10BasicBlockES2_'/>
