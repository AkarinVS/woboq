<dec f='llvm/polly/include/polly/CodeGen/LoopGenerators.h' l='140' type='llvm::Value * polly::ParallelLoopGenerator::createParallelLoop(llvm::Value * LB, llvm::Value * UB, llvm::Value * Stride, SetVector&lt;llvm::Value *&gt; &amp; Values, polly::ValueMapT &amp; VMap, BasicBlock::iterator * LoopBody)'/>
<use f='llvm/polly/lib/CodeGen/IslNodeBuilder.cpp' l='693' u='c' c='_ZN14IslNodeBuilder17createForParallelEP12isl_ast_node'/>
<doc f='llvm/polly/include/polly/CodeGen/LoopGenerators.h' l='123'>/// Create a parallel loop.
  ///
  /// This function is the main function to automatically generate a parallel
  /// loop with all its components.
  ///
  /// @param LB        The lower bound for the loop we parallelize.
  /// @param UB        The upper bound for the loop we parallelize.
  /// @param Stride    The stride of the loop we parallelize.
  /// @param Values    A set of LLVM-IR Values that should be available in
  ///                  the new loop body.
  /// @param VMap      A map to allow outside access to the new versions of
  ///                  the values in @p Values.
  /// @param LoopBody  A pointer to an iterator that is set to point to the
  ///                  body of the created loop. It should be used to insert
  ///                  instructions that form the actual loop body.
  ///
  /// @return The newly created induction variable for this loop.</doc>
<def f='llvm/polly/lib/CodeGen/LoopGenerators.cpp' l='175' ll='199' type='llvm::Value * polly::ParallelLoopGenerator::createParallelLoop(llvm::Value * LB, llvm::Value * UB, llvm::Value * Stride, SetVector&lt;llvm::Value *&gt; &amp; UsedValues, polly::ValueMapT &amp; Map, BasicBlock::iterator * LoopBody)'/>
