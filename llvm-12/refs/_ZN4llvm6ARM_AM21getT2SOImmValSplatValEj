<def f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h' l='276' ll='298' type='int llvm::ARM_AM::getT2SOImmValSplatVal(unsigned int V)'/>
<use f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h' l='322' u='c' c='_ZN4llvm6ARM_AM13getT2SOImmValEj'/>
<use f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h' l='346' u='c' c='_ZN4llvm6ARM_AM19isT2SOImmTwoPartValEj'/>
<use f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h' l='357' u='c' c='_ZN4llvm6ARM_AM19isT2SOImmTwoPartValEj'/>
<use f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h' l='359' u='c' c='_ZN4llvm6ARM_AM19isT2SOImmTwoPartValEj'/>
<use f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h' l='377' u='c' c='_ZN4llvm6ARM_AM22getT2SOImmTwoPartFirstEj'/>
<doc f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h' l='267'>/// getT2SOImmValSplat - Return the 12-bit encoded representation
  /// if the specified value can be obtained by splatting the low 8 bits
  /// into every other byte or every byte of a 32-bit value. i.e.,
  ///     00000000 00000000 00000000 abcdefgh    control = 0
  ///     00000000 abcdefgh 00000000 abcdefgh    control = 1
  ///     abcdefgh 00000000 abcdefgh 00000000    control = 2
  ///     abcdefgh abcdefgh abcdefgh abcdefgh    control = 3
  /// Return -1 if none of the above apply.
  /// See ARM Reference Manual A6.3.2.</doc>
