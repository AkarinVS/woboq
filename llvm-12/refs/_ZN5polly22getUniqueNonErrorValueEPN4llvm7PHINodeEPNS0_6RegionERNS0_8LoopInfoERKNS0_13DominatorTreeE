<dec f='llvm/polly/include/polly/Support/SCEVValidator.h' l='105' type='llvm::Value * polly::getUniqueNonErrorValue(llvm::PHINode * PHI, llvm::Region * R, llvm::LoopInfo &amp; LI, const llvm::DominatorTree &amp; DT)'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='450' u='c' c='_ZN5polly11ScopBuilder18buildConditionSetsEPN4llvm10BasicBlockEPNS1_5ValueEPNS1_11InstructionEPNS1_4LoopEP7isl_setRNS1_8DenseMapIS3_N3isl12noexception4960138'/>
<doc f='llvm/polly/include/polly/Support/SCEVValidator.h' l='100'>/// Return a unique non-error block incoming value for @p PHI if available.
///
/// @param R The region to run our code on.
/// @param LI The loopinfo tree
/// @param DT The dominator tree</doc>
<use f='llvm/polly/lib/Analysis/ScopDetection.cpp' l='575' u='c' c='_ZNK5polly13ScopDetection13isValidBranchERN4llvm10BasicBlockEPNS1_10BranchInstEPNS1_5ValueEbRNS0_16DetectionContextE'/>
<def f='llvm/polly/lib/Support/SCEVValidator.cpp' l='800' ll='813' type='llvm::Value * polly::getUniqueNonErrorValue(llvm::PHINode * PHI, llvm::Region * R, llvm::LoopInfo &amp; LI, const llvm::DominatorTree &amp; DT)'/>
