<dec f='llvm/llvm/include/llvm/IR/Constants.h' l='1095' type='static llvm::Constant * llvm::ConstantExpr::getBinOpAbsorber(unsigned int Opcode, llvm::Type * Ty)'/>
<doc f='llvm/llvm/include/llvm/IR/Constants.h' l='1091'>/// Return the absorbing element for the given binary
  /// operation, i.e. a constant C such that X op C = C and C op X = C for
  /// every X.  For example, this returns zero for integer multiplication.
  /// It returns null if the operator doesn&apos;t have an absorbing element.</doc>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='2798' ll='2811' type='static llvm::Constant * llvm::ConstantExpr::getBinOpAbsorber(unsigned int Opcode, llvm::Type * Ty)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Reassociate.cpp' l='1949' u='c' c='_ZN4llvm15ReassociatePass18OptimizeExpressionEPNS_14BinaryOperatorERNS_15SmallVectorImplINS_11reassociate10ValueEntryEEE'/>
