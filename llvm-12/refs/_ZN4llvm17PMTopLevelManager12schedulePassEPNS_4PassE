<dec f='llvm/llvm/include/llvm/IR/LegacyPassManagers.h' l='177' type='void llvm::PMTopLevelManager::schedulePass(llvm::Pass * P)'/>
<doc f='llvm/llvm/include/llvm/IR/LegacyPassManagers.h' l='174'>/// Schedule pass P for execution. Make sure that passes required by
  /// P are run before P is run. Update analysis info maintained by
  /// the manager. Remove dead passes. This is a recursive function.</doc>
<use f='llvm/llvm/lib/Analysis/CallGraphSCCPass.cpp' l='645' u='c' c='_ZN4llvm16CallGraphSCCPass17assignPassManagerERNS_7PMStackENS_15PassManagerTypeE'/>
<use f='llvm/llvm/lib/Analysis/LoopPass.cpp' l='360' u='c' c='_ZN4llvm8LoopPass17assignPassManagerERNS_7PMStackENS_15PassManagerTypeE'/>
<use f='llvm/llvm/lib/Analysis/RegionPass.cpp' l='260' u='c' c='_ZN4llvm10RegionPass17assignPassManagerERNS_7PMStackENS_15PassManagerTypeE'/>
<use f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='264' u='c' c='_ZN4llvm6legacy23FunctionPassManagerImpl3addEPNS_4PassE'/>
<use f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='486' u='c' c='_ZN4llvm6legacy15PassManagerImpl3addEPNS_4PassE'/>
<def f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='663' ll='762' type='void llvm::PMTopLevelManager::schedulePass(llvm::Pass * P)'/>
<use f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='719' u='c' c='_ZN4llvm17PMTopLevelManager12schedulePassEPNS_4PassE'/>
<use f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='723' u='c' c='_ZN4llvm17PMTopLevelManager12schedulePassEPNS_4PassE'/>
<doc f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='660'>/// Schedule pass P for execution. Make sure that passes required by
/// P are run before P is run. Update analysis info maintained by
/// the manager. Remove dead passes. This is a recursive function.</doc>
