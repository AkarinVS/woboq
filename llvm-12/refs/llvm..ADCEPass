<inh f='llvm/llvm/include/llvm/IR/PassManager.h' l='374' c='llvm::PassInfoMixin'/>
<def f='llvm/llvm/include/llvm/Transforms/Scalar/ADCE.h' l='31' ll='33'/>
<use f='llvm/llvm/include/llvm/Transforms/Scalar/ADCE.h' l='31'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='634' c='_ZN4llvm11PassBuilder37buildO1FunctionSimplificationPipelineENS0_17OptimizationLevelENS_18ThinOrFullLTOPhaseE'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='805' c='_ZN4llvm11PassBuilder35buildFunctionSimplificationPipelineENS0_17OptimizationLevelENS_18ThinOrFullLTOPhaseE'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='194' c='_ZN4llvm11PassBuilder15parseModulePassERNS_11PassManagerINS_6ModuleENS_15AnalysisManagerIS2_JEEEJEEERKNS0_15PipelineElementE'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='194' c='_ZN4llvm11PassBuilder14parseCGSCCPassERNS_11PassManagerINS_13LazyCallGraph3SCCENS_15AnalysisManagerIS3_JRS2_EEEJS5_RNS_17CGSCCUpdateResultEEEERKNS0_15PipelineElementE'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='194' c='_ZN4llvm11PassBuilder17parseFunctionPassERNS_11PassManagerINS_8FunctionENS_15AnalysisManagerIS2_JEEEJEEERKNS0_15PipelineElementE'/>
<size>1</size>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar/ADCE.h' l='25'>/// A DCE pass that assumes instructions are dead until proven otherwise.
///
/// This pass eliminates dead code by optimistically assuming that all
/// instructions are dead until proven otherwise. This allows it to eliminate
/// dead computations that other DCE passes do not catch, particularly involving
/// loop computations.</doc>
<fun r='_ZN4llvm8ADCEPass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
