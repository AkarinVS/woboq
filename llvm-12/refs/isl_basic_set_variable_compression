<dec f='llvm/polly/lib/External/isl/isl_morph.h' l='72' type='isl_morph * isl_basic_set_variable_compression(isl_basic_map * bset, enum isl_dim_type type)'/>
<use f='llvm/polly/lib/External/isl/isl_map.c' l='7612' u='c' c='base_compute_divs'/>
<def f='llvm/polly/lib/External/isl/isl_morph.c' l='472' ll='531' type='isl_morph * isl_basic_set_variable_compression(isl_basic_map * bset, enum isl_dim_type type)'/>
<use f='llvm/polly/lib/External/isl/isl_morph.c' l='543' u='c' c='isl_basic_set_variable_compression_with_id'/>
<use f='llvm/polly/lib/External/isl/isl_morph.c' l='774' u='c' c='isl_basic_set_full_compression'/>
<use f='llvm/polly/lib/External/isl/isl_morph.c' l='782' u='c' c='isl_basic_set_full_compression'/>
<doc f='llvm/polly/lib/External/isl/isl_morph.c' l='447'>/* Given a basic set, exploit the equalities in the basic set to construct
 * a morphism that maps the basic set to a lower-dimensional space.
 * Specifically, the morphism reduces the number of dimensions of type &quot;type&quot;.
 *
 * We first select the equalities of interest, that is those that involve
 * variables of type &quot;type&quot; and no later variables.
 * Denote those equalities as
 *
 *		-C(p) + M x = 0
 *
 * where C(p) depends on the parameters if type == isl_dim_set and
 * is a constant if type == isl_dim_param.
 *
 * Use isl_mat_final_variable_compression to construct a compression
 *
 *	x = T x&apos;
 *
 *	x&apos; = Q x
 *
 * If T is a zero-column matrix, then the set of equality constraints
 * do not admit a solution.  In this case, an empty morphism is returned.
 *
 * Both matrices are extended to map the full original space to the full
 * compressed space.
 */</doc>
