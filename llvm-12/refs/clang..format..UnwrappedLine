<def f='llvm/clang/lib/Format/UnwrappedLineParser.h' l='36' ll='64'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.h' l='69' c='_ZN5clang6format21UnwrappedLineConsumer20consumeUnwrappedLineERKNS0_13UnwrappedLineE'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.h' l='189'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.h' l='200'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.h' l='205'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.h' l='211'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.h' l='298'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.h' l='39' c='_ZN5clang6format13AnnotatedLineC1ERKNS0_13UnwrappedLineE'/>
<size>56</size>
<doc f='llvm/clang/lib/Format/UnwrappedLineParser.h' l='30'>/// An unwrapped line is a sequence of \c Token, that we would like to
/// put on a single line if there was no column limit.
///
/// This is used as a main interface between the \c UnwrappedLineParser and the
/// \c UnwrappedLineFormatter. The key property is that changing the formatting
/// within an unwrapped line does not affect any other unwrapped lines.</doc>
<fun r='_ZN5clang6format13UnwrappedLineC1Ev'/>
<mbr r='clang::format::UnwrappedLine::Tokens' o='0' t='std::list&lt;UnwrappedLineNode&gt;'/>
<mbr r='clang::format::UnwrappedLine::Level' o='192' t='unsigned int'/>
<mbr r='clang::format::UnwrappedLine::InPPDirective' o='224' t='bool'/>
<mbr r='clang::format::UnwrappedLine::MustBeDeclaration' o='232' t='bool'/>
<mbr r='clang::format::UnwrappedLine::MatchingOpeningBlockLineIndex' o='256' t='size_t'/>
<mbr r='clang::format::UnwrappedLine::MatchingClosingBlockLineIndex' o='320' t='size_t'/>
<smbr r='clang::format::UnwrappedLine::kInvalidIndex' t='const size_t'/>
<mbr r='clang::format::UnwrappedLine::FirstStartColumn' o='384' t='unsigned int'/>
<fun r='_ZN5clang6format13UnwrappedLineC1Ev'/>
<use f='llvm/clang/lib/Format/TokenAnalyzer.h' l='92' c='_ZN5clang6format13TokenAnalyzer20consumeUnwrappedLineERKNS0_13UnwrappedLineE'/>
<use f='llvm/clang/lib/Format/TokenAnalyzer.h' l='101'/>
<size>56</size>
<use f='llvm/clang/lib/Format/TokenAnalyzer.cpp' l='119' c='_ZN5clang6format13TokenAnalyzer20consumeUnwrappedLineERKNS0_13UnwrappedLineE'/>
<use f='llvm/clang/lib/Format/TokenAnalyzer.cpp' l='125' c='_ZN5clang6format13TokenAnalyzer9finishRunEv'/>
<size>56</size>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.cpp' l='41' c='_ZN5clang6format12_GLOBAL__N_122ScopedDeclarationStateC1ERNS0_13UnwrappedLineERSt6vectorIbSaIbEEb'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.cpp' l='56'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.cpp' l='81' c='_ZN5clang6format12_GLOBAL__N_116ScopedMacroStateC1ERNS0_13UnwrappedLineERPNS0_17FormatTokenSourceERPNS0_11FormatTokenE'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.cpp' l='127'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.cpp' l='149' c='_ZN5clang6format15ScopedLineStateC1ERNS0_19UnwrappedLineParserEb'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.cpp' l='168'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.cpp' l='169'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.cpp' l='230' c='_ZN5clang6format19UnwrappedLineParserC1ERKNS0_11FormatStyleERKNS0_18AdditionalKeywordsEjN4llvm8ArrayRefIPNS0_11FormatTokenEEERNS0_21UnwrappedLineConsumerE'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.cpp' l='245' c='_ZN5clang6format19UnwrappedLineParser5resetEv'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.cpp' l='651' c='_ZN5clang6formatL11isGoogScopeERKNS0_13UnwrappedLineE'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.cpp' l='669' c='_ZN5clang6formatL6isIIFEERKNS0_13UnwrappedLineERKNS0_18AdditionalKeywordsE'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.cpp' l='2897' c='_ZN5clang6formatL14printDebugInfoERKNS0_13UnwrappedLineEN4llvm9StringRefE'/>
<use f='llvm/clang/lib/Format/UnwrappedLineParser.cpp' l='2955' c='_ZN5clang6formatL27continuesLineCommentSectionERKNS0_11FormatTokenERKNS0_13UnwrappedLineERKN4llvm5RegexE'/>
<size>56</size>
<use f='llvm/clang/unittests/Format/TestLexer.h' l='96' c='_ZN5clang6format9TestLexer20consumeUnwrappedLineERKNS0_13UnwrappedLineE'/>
<use f='llvm/clang/unittests/Format/TestLexer.h' l='117'/>
<size>56</size>
