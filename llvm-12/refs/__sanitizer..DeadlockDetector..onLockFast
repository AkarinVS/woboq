<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_deadlock_detector.h' l='334' ll='340' type='bool __sanitizer::DeadlockDetector::onLockFast(DeadlockDetectorTLS&lt;BV&gt; * dtls, __sanitizer::uptr node, __sanitizer::u32 stk = 0)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_deadlock_detector1.cpp' l='160' u='c' c='__sanitizer::DD::MutexAfterLock'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_deadlock_detector.h' l='330'>// Tries to handle the lock event w/o writing to global state.
  // Returns true on success.
  // This operation is thread-safe as it only touches the dtls
  // (modulo racy nature of hasAllEdges).</doc>
