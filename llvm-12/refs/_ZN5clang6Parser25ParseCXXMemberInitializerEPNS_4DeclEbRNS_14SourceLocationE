<dec f='llvm/clang/include/clang/Parse/Parser.h' l='3016' type='clang::ExprResult clang::Parser::ParseCXXMemberInitializer(clang::Decl * D, bool IsFunction, clang::SourceLocation &amp; EqualLoc)'/>
<use f='llvm/clang/lib/Parse/ParseCXXInlineMethods.cpp' l='636' u='c' c='_ZN5clang6Parser27ParseLexedMemberInitializerERNS0_27LateParsedMemberInitializerE'/>
<use f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='2901' u='c' c='_ZN5clang6Parser30ParseCXXClassMemberDeclarationENS_15AccessSpecifierERNS_16ParsedAttributesERKNS0_18ParsedTemplateInfoEPNS_21ParsingDeclRAIIObjectE'/>
<def f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='3001' ll='3039' type='clang::ExprResult clang::Parser::ParseCXXMemberInitializer(clang::Decl * D, bool IsFunction, clang::SourceLocation &amp; EqualLoc)'/>
<doc f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='2981'>/// ParseCXXMemberInitializer - Parse the brace-or-equal-initializer.
/// Also detect and reject any attempted defaulted/deleted function definition.
/// The location of the &apos;=&apos;, if any, will be placed in EqualLoc.
///
/// This does not check for a pure-specifier; that&apos;s handled elsewhere.
///
///   brace-or-equal-initializer:
///     &apos;=&apos; initializer-expression
///     braced-init-list
///
///   initializer-clause:
///     assignment-expression
///     braced-init-list
///
///   defaulted/deleted function-definition:
///     &apos;=&apos; &apos;default&apos;
///     &apos;=&apos; &apos;delete&apos;
///
/// Prior to C++0x, the assignment-expression in an initializer-clause must
/// be a constant-expression.</doc>
