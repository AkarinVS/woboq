<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='73' type='bool llvm::ConstantFoldTerminator(llvm::BasicBlock * BB, bool DeleteDeadConditions = false, const llvm::TargetLibraryInfo * TLI = nullptr, llvm::DomTreeUpdater * DTU = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='62'>//===----------------------------------------------------------------------===//
//  Local constant propagation.
//

/// If a terminator instruction is predicated on a constant value, convert it
/// into an unconditional branch to the constant destination.
/// This is a nontrivial operation because the successors of this basic block
/// must have their PHI nodes updated.
/// Also calls RecursivelyDeleteTriviallyDeadInstructions() on any branch/switch
/// conditions and indirectbr addresses this might make dead if
/// DeleteDeadConditions is true.</doc>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='566' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/CodeGen/WinEHPrepare.cpp' l='1031' u='c' c='_ZN12_GLOBAL__N_112WinEHPrepare23cleanupPreparedFuncletsERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='1291' u='c' c='_ZN4llvm10Attributor9cleanupIREv'/>
<use f='llvm/llvm/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp' l='384' u='c' c='_ZL13processSwitchPN4llvm10SwitchInstEPNS_13LazyValueInfoEPNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='1123' u='c' c='_ZN4llvm17JumpThreadingPass12processBlockEPNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Utils/CloneFunction.cpp' l='674' u='c' c='_ZN4llvm25CloneAndPruneIntoFromInstEPNS_8FunctionEPKS0_PKNS_11InstructionERNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigISA_NS_3sys232165'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='128' ll='379' type='bool llvm::ConstantFoldTerminator(llvm::BasicBlock * BB, bool DeleteDeadConditions = false, const llvm::TargetLibraryInfo * TLI = nullptr, llvm::DomTreeUpdater * DTU = nullptr)'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='2342' u='c' c='_ZL15markAliveBlocksRN4llvm8FunctionERNS_15SmallPtrSetImplIPNS_10BasicBlockEEEPNS_14DomTreeUpdaterE'/>
<doc f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='117'>//===----------------------------------------------------------------------===//
//  Local constant propagation.
//

/// ConstantFoldTerminator - If a terminator instruction is predicated on a
/// constant value, convert it into an unconditional branch to the constant
/// destination.  This is a nontrivial operation because the successors of this
/// basic block must have their PHI nodes updated.
/// Also calls RecursivelyDeleteTriviallyDeadInstructions() on any branch/switch
/// conditions and indirectbr addresses this might make dead if
/// DeleteDeadConditions is true.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='6509' u='c' c='_ZN12_GLOBAL__N_114SimplifyCFGOpt16simplifyOnceImplEPN4llvm10BasicBlockE'/>
<use f='llvm/llvm/tools/bugpoint/CrashDebugger.cpp' l='396' u='c' c='_ZN12_GLOBAL__N_117simpleSimplifyCfgERN4llvm8FunctionERNS0_15SmallVectorImplIPNS0_10BasicBlockEEE'/>
<use f='llvm/llvm/unittests/Transforms/Utils/LocalTest.cpp' l='441' u='c' c='_ZN33Local_ConstantFoldTerminator_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/LocalTest.cpp' l='453' u='c' c='_ZN33Local_ConstantFoldTerminator_Test8TestBodyEv'/>
