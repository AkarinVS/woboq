<dec f='llvm/llvm/include/llvm/CodeGen/ModuloSchedule.h' l='346' type='llvm::Register llvm::PeelingModuloScheduleExpander::getEquivalentRegisterIn(llvm::Register Reg, llvm::MachineBasicBlock * BB)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/ModuloSchedule.h' l='344'>/// All prolog and epilog blocks are clones of the kernel, so any produced
  /// register in one block has an corollary in all other blocks.</doc>
<use f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='1609' u='c' c='_ZN4llvm29PeelingModuloScheduleExpander18filterInstructionsEPNS_17MachineBasicBlockEi'/>
<use f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='1808' u='c' c='_ZN4llvm29PeelingModuloScheduleExpander20peelPrologAndEpilogsEv'/>
<def f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='1885' ll='1891' type='llvm::Register llvm::PeelingModuloScheduleExpander::getEquivalentRegisterIn(llvm::Register Reg, llvm::MachineBasicBlock * BB)'/>
<use f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='1923' u='c' c='_ZN4llvm29PeelingModuloScheduleExpander13rewriteUsesOfEPNS_12MachineInstrE'/>
