<dec f='llvm/polly/include/polly/CodeGen/IslNodeBuilder.h' l='309' type='llvm::Value * IslNodeBuilder::preloadInvariantLoad(const polly::MemoryAccess &amp; MA, isl_set * Domain)'/>
<doc f='llvm/polly/include/polly/CodeGen/IslNodeBuilder.h' l='299'>/// Preload the memory load access @p MA.
  ///
  /// If @p MA is not always executed it will be conditionally loaded and
  /// merged with undef from the same type. Hence, if @p MA is executed only
  /// under condition C then the preload code will look like this:
  ///
  /// MA_preload = undef;
  /// if (C)
  ///   MA_preload = load MA;
  /// use MA_preload</doc>
<def f='llvm/polly/lib/CodeGen/IslNodeBuilder.cpp' l='1226' ll='1314' type='llvm::Value * IslNodeBuilder::preloadInvariantLoad(const polly::MemoryAccess &amp; MA, isl_set * Domain)'/>
<use f='llvm/polly/lib/CodeGen/IslNodeBuilder.cpp' l='1379' u='c' c='_ZN14IslNodeBuilder26preloadInvariantEquivClassERN5polly21InvariantEquivClassTyE'/>
