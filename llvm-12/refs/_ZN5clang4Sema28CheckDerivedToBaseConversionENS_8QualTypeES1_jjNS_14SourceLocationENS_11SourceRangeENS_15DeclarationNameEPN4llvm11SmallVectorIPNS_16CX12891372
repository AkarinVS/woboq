<dec f='llvm/clang/include/clang/Sema/Sema.h' l='7156' type='bool clang::Sema::CheckDerivedToBaseConversion(clang::QualType Derived, clang::QualType Base, unsigned int InaccessibleBaseID, unsigned int AmbiguousBaseConvID, clang::SourceLocation Loc, clang::SourceRange Range, clang::DeclarationName Name, clang::CXXCastPath * BasePath, bool IgnoreAccess = false)'/>
<def f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='2866' ll='2946' type='bool clang::Sema::CheckDerivedToBaseConversion(clang::QualType Derived, clang::QualType Base, unsigned int InaccessibleBaseID, unsigned int AmbiguousBaseConvID, clang::SourceLocation Loc, clang::SourceRange Range, clang::DeclarationName Name, clang::CXXCastPath * BasePath, bool IgnoreAccess = false)'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='2953' u='c' c='_ZN5clang4Sema28CheckDerivedToBaseConversionENS_8QualTypeES1_NS_14SourceLocationENS_11SourceRangeEPN4llvm11SmallVectorIPNS_16CXXBaseSpecifierELj4EEEb'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='5586' u='c' c='_ZN5clang4Sema36MarkVirtualBaseDestructorsReferencedENS_14SourceLocationEPNS_13CXXRecordDeclEPN4llvm15SmallPtrSetImplIPKNS_10RecordTypeEEE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='16999' u='c' c='_ZN5clang4Sema33CheckOverridingFunctionReturnTypeEPKNS_13CXXMethodDeclES3_'/>
<doc f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='2854'>/// CheckDerivedToBaseConversion - Check whether the Derived-to-Base
/// conversion (where Derived and Base are class types) is
/// well-formed, meaning that the conversion is unambiguous (and
/// that all of the base classes are accessible). Returns true
/// and emits a diagnostic if the code is ill-formed, returns false
/// otherwise. Loc is the location where this routine should point to
/// if there is an error, and Range is the source range to highlight
/// if there is an error.
///
/// If either InaccessibleBaseID or AmbiguousBaseConvID are 0, then the
/// diagnostic for the respective type of error will be suppressed, but the
/// check for ill-formed code will still be performed.</doc>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='3022' u='c' c='_ZN5clang4Sema22CheckPointerConversionEPNS_4ExprENS_8QualTypeERNS_8CastKindERN4llvm11SmallVectorIPNS_16CXXBaseSpecifierELj4EEEbb'/>
