<dec f='llvm/llvm/lib/FileCheck/FileCheckImpl.h' l='805' type='static Expected&lt;std::unique_ptr&lt;ExpressionAST&gt; &gt; llvm::Pattern::parseCallExpr(llvm::StringRef &amp; Expr, llvm::StringRef FuncName, Optional&lt;size_t&gt; LineNumber, llvm::FileCheckPatternContext * Context, const llvm::SourceMgr &amp; SM)'/>
<use f='llvm/llvm/lib/FileCheck/FileCheck.cpp' l='558' u='c' c='_ZN4llvm7Pattern19parseNumericOperandERNS_9StringRefENS0_14AllowedOperandEbNS_8OptionalImEEPNS_23FileCheckPatternContextERKNS_9SourceMgrE'/>
<def f='llvm/llvm/lib/FileCheck/FileCheck.cpp' l='672' ll='746' type='static Expected&lt;std::unique_ptr&lt;ExpressionAST&gt; &gt; llvm::Pattern::parseCallExpr(llvm::StringRef &amp; Expr, llvm::StringRef FuncName, Optional&lt;size_t&gt; LineNumber, llvm::FileCheckPatternContext * Context, const llvm::SourceMgr &amp; SM)'/>
<doc f='llvm/llvm/lib/FileCheck/FileCheckImpl.h' l='797'>/// Parses \p Expr for an argument list belonging to a call to function \p
  /// FuncName at line \p LineNumber, or before input is parsed if \p LineNumber
  /// is None. Parameter \p FuncLoc is the source location used for diagnostics.
  /// Parameter \p Context points to the class instance holding the live string
  /// and numeric variables. \returns the class representing that call in the
  /// AST of the expression or an error holding a diagnostic against \p SM
  /// otherwise.</doc>
