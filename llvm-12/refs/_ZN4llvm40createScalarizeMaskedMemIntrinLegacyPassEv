<dec f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='556' type='llvm::FunctionPass * llvm::createScalarizeMaskedMemIntrinLegacyPass()'/>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='551'>//===----------------------------------------------------------------------===//
//
// createScalarizeMaskedMemIntrinPass - Replace masked load, store, gather
// and scatter intrinsics with scalar code when target doesn&apos;t support them.
//</doc>
<use f='llvm/llvm/include/llvm/LinkAllPasses.h' l='227' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<use f='llvm/llvm/lib/CodeGen/TargetPassConfig.cpp' l='870' u='c' c='_ZN4llvm16TargetPassConfig11addIRPassesEv'/>
<def f='llvm/llvm/lib/Transforms/Scalar/ScalarizeMaskedMemIntrin.cpp' l='83' ll='85' type='llvm::FunctionPass * llvm::createScalarizeMaskedMemIntrinLegacyPass()'/>
