<use f='llvm/llvm/include/llvm/IR/ModuleSummaryIndex.h' l='822' u='w' c='_ZN4llvm16GlobalVarSummary9GVarFlagsC1EbbbNS_12GlobalObject15VCallVisibilityE'/>
<dec f='llvm/llvm/include/llvm/IR/ModuleSummaryIndex.h' l='830' type='unsigned int'/>
<use f='llvm/llvm/include/llvm/IR/ModuleSummaryIndex.h' l='860' u='w' c='_ZN4llvm16GlobalVarSummary11setReadOnlyEb'/>
<use f='llvm/llvm/include/llvm/IR/ModuleSummaryIndex.h' l='862' u='r' c='_ZNK4llvm16GlobalVarSummary13maybeReadOnlyEv'/>
<offset>0</offset>
<doc f='llvm/llvm/include/llvm/IR/ModuleSummaryIndex.h' l='825'>// If true indicates that this global variable might be accessed
    // purely by non-volatile load instructions. This in turn means
    // it can be internalized in source and destination modules during
    // thin LTO import because it neither modified nor its address
    // is taken.</doc>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='9424' u='w' c='_ZN4llvm8LLParser14parseGVarFlagsERNS_16GlobalVarSummary9GVarFlagsE'/>
<use f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp' l='1065' u='r' c='_ZL19getEncodedGVarFlagsN4llvm16GlobalVarSummary9GVarFlagsE'/>
<use f='llvm/llvm/lib/IR/AsmWriter.cpp' l='3108' u='r' c='_ZN12_GLOBAL__N_114AssemblyWriter21printGlobalVarSummaryEPKN4llvm16GlobalVarSummaryE'/>
