<dec f='include/stdlib.h' l='800' type='char * realpath(const char *__restrict __name, char *__restrict __resolved)'/>
<doc f='include/stdlib.h' l='795'>/* Return the canonical absolute name of file NAME.  If RESOLVED is
   null, the result is malloc&apos;d; otherwise, if the canonical name is
   PATH_MAX chars or more, returns null with `errno&apos; set to
   ENAMETOOLONG; if the name fits in fewer than PATH_MAX chars,
   returns the name in RESOLVED.  */</doc>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='3647' macro='1' type='char * realpath(const char * path, char * resolved_path)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='3665' u='a' c='_ZL28InitializeCommonInterceptorsv'/>
<def f='llvm/compiler-rt/lib/tsan/dd/dd_interceptors.cpp' l='226' macro='1' type='char * realpath(const char * path, char * resolved_path)'/>
<use f='llvm/compiler-rt/lib/tsan/dd/dd_interceptors.cpp' l='322' u='a' c='__dsan::InitializeInterceptors'/>
<doc f='llvm/compiler-rt/lib/tsan/dd/dd_interceptors.cpp' l='225'>// for symbolizer</doc>
<use f='llvm/libcxx/src/filesystem/operations.cpp' l='632' u='c' c='_ZNSt3__14__fs10filesystem11__canonicalERKNS1_4pathEPNS_10error_codeE'/>
<use f='llvm/lldb/source/Host/posix/FileSystemPosix.cpp' l='63' u='c' c='_ZN12lldb_private10FileSystem19ResolveSymbolicLinkERKNS_8FileSpecERS1_'/>
<use f='llvm/llvm/lib/Support/Unix/Path.inc' l='139' u='c' c='_ZN4llvm3sys2fsL8test_dirEPcPKcS4_'/>
<use f='llvm/llvm/lib/Support/Unix/Path.inc' l='265' u='c' c='_ZN4llvm3sys2fs17getMainExecutableB5cxx11EPKcPv'/>
<use f='llvm/llvm/lib/Support/Unix/Path.inc' l='1049' u='c' c='_ZN4llvm3sys2fs15openFileForReadERKNS_5TwineERiNS1_9OpenFlagsEPNS_15SmallVectorImplIcEE'/>
<use f='llvm/llvm/lib/Support/Unix/Path.inc' l='1208' u='c' c='_ZN4llvm3sys2fs9real_pathERKNS_5TwineERNS_15SmallVectorImplIcEEb'/>
