<use f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='742' u='c' c='_ZN4llvm21InterleavedAccessInfoD1Ev'/>
<def f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='755' ll='769' type='bool llvm::InterleavedAccessInfo::invalidateGroups()'/>
<doc f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='750'>/// Invalidate groups, e.g., in case all blocks in loop will be predicated
  /// contrary to original assumption. Although we currently prevent group
  /// formation for predicated accesses, we may be able to relax this limitation
  /// in the future once we handle more complicated blocks. Returns true if any
  /// groups were invalidated.</doc>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7636' u='c' c='_ZN4llvm24LoopVectorizationPlanner4planENS_12ElementCountEj'/>
