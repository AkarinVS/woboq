<dec f='llvm/llvm/tools/llvm-rc/ResourceScriptParser.h' l='114' type='Expected&lt;uint32_t&gt; llvm::rc::RCParser::parseFlags(ArrayRef&lt;llvm::StringRef&gt; FlagDesc, ArrayRef&lt;uint32_t&gt; FlagValues)'/>
<def f='llvm/llvm/tools/llvm-rc/ResourceScriptParser.cpp' l='321' ll='346' type='Expected&lt;uint32_t&gt; llvm::rc::RCParser::parseFlags(ArrayRef&lt;llvm::StringRef&gt; FlagDesc, ArrayRef&lt;uint32_t&gt; FlagValues)'/>
<use f='llvm/llvm/tools/llvm-rc/ResourceScriptParser.cpp' l='440' u='c' c='_ZN4llvm2rc8RCParser25parseAcceleratorsResourceEv'/>
<use f='llvm/llvm/tools/llvm-rc/ResourceScriptParser.cpp' l='666' u='c' c='_ZN4llvm2rc8RCParser18parseMenuItemsListEv'/>
<doc f='llvm/llvm/tools/llvm-rc/ResourceScriptParser.h' l='109'>// Read an unknown number of flags preceded by commas. Each correct flag
  // has an entry in FlagDesc array of length NumFlags. In case i-th
  // flag (0-based) has been read, the result is OR-ed with FlagValues[i].
  // As long as parser has a comma to read, it expects to be fed with
  // a correct flag afterwards.</doc>
