<dec f='llvm/llvm/utils/benchmark/src/commandlineflags.h' l='47' type='bool benchmark::ParseBoolFlag(const char * str, const char * flag, bool * value)'/>
<use f='llvm/llvm/utils/benchmark/src/benchmark.cc' l='573' u='c' c='_ZN9benchmark8internal21ParseCommandLineFlagsEPiPPc'/>
<use f='llvm/llvm/utils/benchmark/src/benchmark.cc' l='580' u='c' c='_ZN9benchmark8internal21ParseCommandLineFlagsEPiPPc'/>
<use f='llvm/llvm/utils/benchmark/src/benchmark.cc' l='590' u='c' c='_ZN9benchmark8internal21ParseCommandLineFlagsEPiPPc'/>
<doc f='llvm/llvm/utils/benchmark/src/commandlineflags.h' l='38'>// Parses a string for a bool flag, in the form of either
// &quot;--flag=value&quot; or &quot;--flag&quot;.
//
// In the former case, the value is taken as true if it passes IsTruthyValue().
//
// In the latter case, the value is taken as true.
//
// On success, stores the value of the flag in *value, and returns
// true.  On failure, returns false without changing *value.</doc>
<def f='llvm/llvm/utils/benchmark/src/commandlineflags.cc' l='161' ll='171' type='bool benchmark::ParseBoolFlag(const char * str, const char * flag, bool * value)'/>
