<dec f='llvm/polly/lib/External/isl/include/isl/schedule_node.h' l='233' type='isl_union_map * isl_schedule_node_get_subtree_schedule_union_map(isl_schedule_node * node)'/>
<use f='llvm/polly/lib/External/isl/include/isl/isl-noexceptions.h' l='14270' u='c' c='_ZNK3isl12noexceptions13schedule_node30get_subtree_schedule_union_mapEv'/>
<use f='llvm/polly/lib/External/isl/isl_schedule.c' l='472' u='c' c='isl_schedule_get_map'/>
<def f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='935' ll='956' type='isl_union_map * isl_schedule_node_get_subtree_schedule_union_map(isl_schedule_node * node)'/>
<doc f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='924'>/* Return the subtree schedule of &quot;node&quot;.
 *
 * Since isl_schedule_tree_get_subtree_schedule_union_map does not handle
 * trees that do not contain any schedule information, we first
 * move down to the first relevant descendant and handle leaves ourselves.
 *
 * If the subtree rooted at &quot;node&quot; contains any expansion nodes, then
 * the returned subtree schedule is formulated in terms of the expanded
 * domains.
 * The subtree is not allowed to contain any extension nodes.
 */</doc>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='1675' u='c' c='gpu_group_references'/>
