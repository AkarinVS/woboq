<dec f='llvm/clang/lib/CodeGen/CodeGenModule.h' l='1454' type='void clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition(const clang::VarDecl * D, bool IsTentative = false)'/>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='3122' u='c' c='_ZN5clang7CodeGen13CodeGenModule20EmitGlobalDefinitionENS_10GlobalDeclEPN4llvm11GlobalValueE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='3803' u='c' c='_ZN5clang7CodeGen13CodeGenModule21GetOrCreateLLVMGlobalEN4llvm9StringRefEPNS2_11PointerTypeEPKNS_7VarDeclENS0_15ForDefinition_tE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='4003' u='c' c='_ZN5clang7CodeGen13CodeGenModule23EmitTentativeDefinitionEPKNS_7VarDeclE'/>
<def f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='4153' ll='4432' type='void clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition(const clang::VarDecl * D, bool IsTentative = false)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='4152'>/// Pass IsTentative as true if you want to create a tentative definition.</doc>
