<dec f='llvm/lldb/source/Plugins/Process/Linux/NativeRegisterContextLinux.h' l='36' type='llvm::ArrayRef&lt;uint8_t&gt;'/>
<use f='llvm/lldb/source/Plugins/Process/Linux/NativeProcessLinux.cpp' l='1385' u='m' c='_ZN12lldb_private13process_linux18NativeProcessLinux7SyscallEN4llvm8ArrayRefImEE'/>
<use f='llvm/lldb/source/Plugins/Process/Linux/NativeProcessLinux.cpp' l='1407' u='m' c='_ZN12lldb_private13process_linux18NativeProcessLinux7SyscallEN4llvm8ArrayRefImEE'/>
<use f='llvm/lldb/source/Plugins/Process/Linux/NativeProcessLinux.cpp' l='1408' u='m' c='_ZN12lldb_private13process_linux18NativeProcessLinux7SyscallEN4llvm8ArrayRefImEE'/>
<offset>0</offset>
<doc f='llvm/lldb/source/Plugins/Process/Linux/NativeRegisterContextLinux.h' l='33'>/// The syscall instruction. If the architecture uses software
    /// single-stepping, the instruction should also be followed by a trap to
    /// ensure the process is stopped after the syscall.</doc>
