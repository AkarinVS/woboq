<def f='llvm/llvm/tools/llvm-exegesis/lib/Target.h' l='85' type='unsigned int llvm::exegesis::ExegesisTarget::getScratchMemoryRegister(const llvm::Triple &amp; ) const'/>
<doc f='llvm/llvm/tools/llvm-exegesis/lib/Target.h' l='82'>// Returns the register pointing to scratch memory, or 0 if this target
  // does not support memory operands. The benchmark function uses the
  // default calling convention.</doc>
<ovr f='llvm/llvm/tools/llvm-exegesis/lib/Mips/Target.cpp' l='133' c='_ZNK4llvm8exegesis12_GLOBAL__N_118ExegesisMipsTarget24getScratchMemoryRegisterERKNS_6TripleE'/>
<use f='llvm/llvm/tools/llvm-exegesis/lib/ParallelSnippetGenerator.cpp' l='164' u='c' c='_ZNK4llvm8exegesis24ParallelSnippetGenerator21generateCodeTemplatesENS0_19InstructionTemplateERKNS_9BitVectorE'/>
<ovr f='llvm/llvm/tools/llvm-exegesis/lib/PowerPC/Target.cpp' l='67' c='_ZNK4llvm8exegesis12_GLOBAL__N_121ExegesisPowerPCTarget24getScratchMemoryRegisterERKNS_6TripleE'/>
<use f='llvm/llvm/tools/llvm-exegesis/lib/SnippetGenerator.cpp' l='51' u='c' c='_ZNK4llvm8exegesis16SnippetGenerator22generateConfigurationsERKNS0_19InstructionTemplateERSt6vectorINS0_13BenchmarkCodeESaIS6_EERKNS_9BitVectorE'/>
<ovr f='llvm/llvm/tools/llvm-exegesis/lib/X86/Target.cpp' l='763' c='_ZNK4llvm8exegesis12_GLOBAL__N_117ExegesisX86Target24getScratchMemoryRegisterERKNS_6TripleE'/>
