<def f='llvm/lldb/include/lldb/Host/common/NativeProcessProtocol.h' l='344' ll='347' type='lldb_private::Status lldb_private::NativeProcessProtocol::StopTrace(lldb::user_id_t traceid, lldb::tid_t thread = 0)'/>
<doc f='llvm/lldb/include/lldb/Host/common/NativeProcessProtocol.h' l='330'>/// StopTracing API as the name suggests stops a tracing instance.
  ///
  /// \param[in] traceid
  ///     The user id of the trace intended to be stopped. Now a
  ///     user_id may map to multiple threads in which case this API
  ///     could be used to stop the tracing for a specific thread by
  ///     supplying its thread id.
  ///
  /// \param[in] thread
  ///     Thread is needed when the complete process is being traced
  ///     and the user wishes to stop tracing on a particular thread.
  ///
  /// \return
  ///     Status indicating what went wrong.</doc>
<ovr f='llvm/lldb/source/Plugins/Process/Linux/NativeProcessLinux.cpp' l='2107' c='_ZN12lldb_private13process_linux18NativeProcessLinux9StopTraceEmm'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerLLGS.cpp' l='1265' u='c' c='_ZN12lldb_private18process_gdb_remote32GDBRemoteCommunicationServerLLGS17Handle_jTraceStopER24StringExtractorGDBRemote'/>
