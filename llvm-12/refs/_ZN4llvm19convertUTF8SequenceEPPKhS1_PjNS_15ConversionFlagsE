<def f='llvm/llvm/include/llvm/Support/ConvertUTF.h' l='245' ll='255' type='llvm::ConversionResult llvm::convertUTF8Sequence(const llvm::UTF8 ** source, const llvm::UTF8 * sourceEnd, llvm::UTF32 * target, llvm::ConversionFlags flags)'/>
<doc f='llvm/llvm/include/llvm/Support/ConvertUTF.h' l='230'>/**
 * Convert the first UTF8 sequence in the given source buffer to a UTF32
 * code point.
 *
 * \param [in,out] source A pointer to the source buffer. If the conversion
 * succeeds, this pointer will be updated to point to the byte just past the
 * end of the converted sequence.
 * \param sourceEnd A pointer just past the end of the source buffer.
 * \param [out] target The converted code
 * \param flags Whether the conversion is strict or lenient.
 *
 * \returns conversionOK on success
 *
 * \sa ConvertUTF8toUTF32
 */</doc>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='1622' u='c' c='_ZN5clang5Lexer28tryConsumeIdentifierUTF8CharERPKc'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='3926' u='c' c='_ZN5clang5Lexer16LexTokenInternalERNS_5TokenEb'/>
<use f='llvm/clang/lib/Sema/SemaChecking.cpp' l='7831' u='c' c='_ZN12_GLOBAL__N_118CheckFormatHandler32HandleInvalidConversionSpecifierEjN5clang14SourceLocationEPKcjS4_j'/>
<use f='llvm/lldb/source/DataFormatters/StringPrinter.cpp' l='182' u='c' c='_ZL16GetPrintableImplPhS_RS_N12lldb_private10formatters13StringPrinter11EscapeStyleE'/>
