<dec f='llvm/polly/lib/External/isl/isl_seq.h' l='53' type='void isl_seq_substitute(isl_int * p, int pos, isl_int * subs, int p_len, int subs_len, isl_sioimath * v)'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='1448' u='c' c='plug_in_integral_divs'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='5594' u='c' c='isl_aff_substitute'/>
<use f='llvm/polly/lib/External/isl/isl_local_space.c' l='1146' u='c' c='isl_local_space_substitute_seq'/>
<def f='llvm/polly/lib/External/isl/isl_seq.c' l='328' ll='336' type='void isl_seq_substitute(isl_int * p, int pos, isl_int * subs, int p_len, int subs_len, isl_sioimath * v)'/>
<doc f='llvm/polly/lib/External/isl/isl_seq.c' l='308'>/* Given two affine expressions &quot;p&quot; of length p_len (including the
 * denominator and the constant term) and &quot;subs&quot; of length subs_len,
 * plug in &quot;subs&quot; for the variable at position &quot;pos&quot;.
 * The variables of &quot;subs&quot; and &quot;p&quot; are assumed to match up to subs_len,
 * but &quot;p&quot; may have additional variables.
 * &quot;v&quot; is an initialized isl_int that can be used internally.
 *
 * In particular, if &quot;p&quot; represents the expression
 *
 *	(a i + g)/m
 *
 * with i the variable at position &quot;pos&quot; and &quot;subs&quot; represents the expression
 *
 *	f/d
 *
 * then the result represents the expression
 *
 *	(a f + d g)/(m d)
 *
 */</doc>
