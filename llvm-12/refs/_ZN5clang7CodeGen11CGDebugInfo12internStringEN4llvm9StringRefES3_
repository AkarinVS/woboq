<def f='llvm/clang/lib/CodeGen/CGDebugInfo.h' l='727' ll='734' type='llvm::StringRef clang::CodeGen::CGDebugInfo::internString(llvm::StringRef A, llvm::StringRef B = llvm::StringRef())'/>
<doc f='llvm/clang/lib/CodeGen/CGDebugInfo.h' l='724'>/// Allocate a copy of \p A using the DebugInfoNames allocator
  /// and return a reference to it. If multiple arguments are given the strings
  /// are concatenated.</doc>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='271' u='c' c='_ZN5clang7CodeGen11CGDebugInfo15getFunctionNameEPKNS_12FunctionDeclE'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='295' u='c' c='_ZN5clang7CodeGen11CGDebugInfo17getObjCMethodNameEPKNS_14ObjCMethodDeclE'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='299' u='c' c='_ZN5clang7CodeGen11CGDebugInfo15getSelectorNameENS_8SelectorE'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='312' u='c' c='_ZN5clang7CodeGen11CGDebugInfo12getClassNameEPKNS_10RecordDeclE'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='349' u='c' c='_ZN5clang7CodeGen11CGDebugInfo12getClassNameEPKNS_10RecordDeclE'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='511' u='c' c='_ZN5clang7CodeGen11CGDebugInfo17getCurrentDirnameEv'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='2045' u='c' c='_ZN5clang7CodeGen11CGDebugInfo13getVTableNameEPKNS_13CXXRecordDeclE'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='2099' u='c' c='_ZN5clang7CodeGen11CGDebugInfo25getDynamicInitializerNameEPKNS_7VarDeclENS_15DynamicInitKindEPN4llvm8FunctionE'/>
