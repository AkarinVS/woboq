<dec f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='2628' type='llvm::CallInst * llvm::IRBuilderBase::CreateAlignmentAssumptionHelper(const llvm::DataLayout &amp; DL, llvm::Value * PtrValue, llvm::Value * AlignValue, llvm::Value * OffsetValue)'/>
<doc f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='2625'>/// Helper function that creates an assume intrinsic call that
  /// represents an alignment assumption on the provided pointer \p PtrValue
  /// with offset \p OffsetValue and alignment value \p AlignValue.</doc>
<def f='llvm/llvm/lib/IR/IRBuilder.cpp' l='1113' ll='1122' type='llvm::CallInst * llvm::IRBuilderBase::CreateAlignmentAssumptionHelper(const llvm::DataLayout &amp; DL, llvm::Value * PtrValue, llvm::Value * AlignValue, llvm::Value * OffsetValue)'/>
<use f='llvm/llvm/lib/IR/IRBuilder.cpp' l='1134' u='c' c='_ZN4llvm13IRBuilderBase25CreateAlignmentAssumptionERKNS_10DataLayoutEPNS_5ValueEjS5_'/>
<use f='llvm/llvm/lib/IR/IRBuilder.cpp' l='1143' u='c' c='_ZN4llvm13IRBuilderBase25CreateAlignmentAssumptionERKNS_10DataLayoutEPNS_5ValueES5_S5_'/>
