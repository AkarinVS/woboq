<dec f='llvm/clang/include/clang/AST/Expr.h' l='700' type='bool clang::Expr::EvaluateAsInitializer(clang::APValue &amp; Result, const clang::ASTContext &amp; Ctx, const clang::VarDecl * VD, SmallVectorImpl&lt;clang::PartialDiagnosticAt&gt; &amp; Notes, bool IsConstantInitializer) const'/>
<doc f='llvm/clang/include/clang/AST/Expr.h' l='696'>/// EvaluateAsInitializer - Evaluate an expression as if it were the
  /// initializer of the given declaration. Returns true if the initializer
  /// can be folded to a constant, and produces any relevant notes. In C++11,
  /// notes will be produced if the expression is not a constant expression.</doc>
<use f='llvm/clang/lib/AST/Decl.cpp' l='2411' u='c' c='_ZNK5clang7VarDecl17evaluateValueImplERN4llvm15SmallVectorImplISt4pairINS_14SourceLocationENS_17PartialDiagnosticEEEEb'/>
<def f='llvm/clang/lib/AST/ExprConstant.cpp' l='14867' ll='14916' type='bool clang::Expr::EvaluateAsInitializer(clang::APValue &amp; Value, const clang::ASTContext &amp; Ctx, const clang::VarDecl * VD, SmallVectorImpl&lt;clang::PartialDiagnosticAt&gt; &amp; Notes, bool IsConstantInitialization) const'/>
