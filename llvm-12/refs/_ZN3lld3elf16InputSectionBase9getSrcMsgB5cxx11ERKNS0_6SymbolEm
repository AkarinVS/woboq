<dec f='llvm/lld/ELF/InputSection.h' l='202' type='std::string lld::elf::InputSectionBase::getSrcMsg(const lld::elf::Symbol &amp; sym, uint64_t offset)'/>
<def f='llvm/lld/ELF/InputSection.cpp' l='330' ll='332' type='std::string lld::elf::InputSectionBase::getSrcMsg(const lld::elf::Symbol &amp; sym, uint64_t offset)'/>
<doc f='llvm/lld/ELF/InputSection.cpp' l='324'>// This function is intended to be used for constructing an error message.
// The returned message looks like this:
//
//   foo.c:42 (/home/alice/possibly/very/long/path/foo.c:42)
//
//  Returns an empty string if there&apos;s no way to get line info.</doc>
<use f='llvm/lld/ELF/Relocations.cpp' l='93' u='c' c='_ZL11getLocationB5cxx11RN3lld3elf16InputSectionBaseERKNS0_6SymbolEm'/>
<use f='llvm/lld/ELF/Relocations.cpp' l='897' u='c' c='_ZL21reportUndefinedSymbolRK13UndefinedDiagb'/>
<use f='llvm/lld/ELF/Symbols.cpp' l='637' u='c' c='_ZL15reportDuplicatePN3lld3elf6SymbolEPNS0_9InputFileEPNS0_16InputSectionBaseEm'/>
<use f='llvm/lld/ELF/Symbols.cpp' l='639' u='c' c='_ZL15reportDuplicatePN3lld3elf6SymbolEPNS0_9InputFileEPNS0_16InputSectionBaseEm'/>
