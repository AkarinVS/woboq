<dec f='llvm/lldb/include/lldb/Symbol/Function.h' l='443' type='void lldb_private::Function::Function(lldb_private::CompileUnit * comp_unit, lldb::user_id_t func_uid, lldb::user_id_t func_type_uid, const lldb_private::Mangled &amp; mangled, lldb_private::Type * func_type, const lldb_private::AddressRange &amp; range)'/>
<doc f='llvm/lldb/include/lldb/Symbol/Function.h' l='415'>/// Construct with a compile unit, function UID, function type UID, optional
  /// mangled name, function type, and a section offset based address range.
  ///
  /// \param[in] comp_unit
  ///     The compile unit to which this function belongs.
  ///
  /// \param[in] func_uid
  ///     The UID for this function. This value is provided by the
  ///     SymbolFile plug-in and can be any value that allows
  ///     the plug-in to quickly find and parse more detailed
  ///     information when and if more information is needed.
  ///
  /// \param[in] func_type_uid
  ///     The type UID for the function Type to allow for lazy type
  ///     parsing from the debug information.
  ///
  /// \param[in] mangled
  ///     The optional mangled name for this function. If empty, there
  ///     is no mangled information.
  ///
  /// \param[in] func_type
  ///     The optional function type. If NULL, the function type will
  ///     be parsed on demand when accessed using the
  ///     Function::GetType() function by asking the SymbolFile
  ///     plug-in to get the type for \a func_type_uid.
  ///
  /// \param[in] range
  ///     The section offset based address for this function.</doc>
<use f='llvm/lldb/source/Plugins/SymbolFile/Symtab/SymbolFileSymtab.cpp' l='187' u='c' c='_ZN16SymbolFileSymtab14ParseFunctionsERN12lldb_private11CompileUnitE'/>
<def f='llvm/lldb/source/Symbol/Function.cpp' l='231' ll='239' type='void lldb_private::Function::Function(lldb_private::CompileUnit * comp_unit, lldb::user_id_t func_uid, lldb::user_id_t type_uid, const lldb_private::Mangled &amp; mangled, lldb_private::Type * type, const lldb_private::AddressRange &amp; range)'/>
<doc f='llvm/lldb/source/Symbol/Function.cpp' l='228'>/// @}

//</doc>
