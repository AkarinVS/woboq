<dec f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='164' type='void llvm::ICFLoopSafetyInfo::insertInstructionTo(const llvm::Instruction * Inst, const llvm::BasicBlock * BB)'/>
<doc f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='161'>/// Inform the safety info that we are planning to insert a new instruction
  /// \p Inst into the basic block \p BB. It will make all cache updates to keep
  /// it correct after this insertion.</doc>
<def f='llvm/llvm/lib/Analysis/MustExecute.cpp' l='94' ll='98' type='void llvm::ICFLoopSafetyInfo::insertInstructionTo(const llvm::Instruction * Inst, const llvm::BasicBlock * BB)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='905' u='c' c='_ZN4llvm11hoistRegionEPNS_15DomTreeNodeBaseINS_10BasicBlockEEEPNS_9AAResultsEPNS_8LoopInfoEPNS_13DominatorTreeEPNS_18BlockFrequencyInfoEPNS_17TargetLi16094382'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='911' u='c' c='_ZN4llvm11hoistRegionEPNS_15DomTreeNodeBaseINS_10BasicBlockEEEPNS_9AAResultsEPNS_8LoopInfoEPNS_13DominatorTreeEPNS_18BlockFrequencyInfoEPNS_17TargetLi16094382'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='1506' u='c' c='_ZL21moveInstructionBeforeRN4llvm11InstructionES1_RNS_17ICFLoopSafetyInfoEPNS_16MemorySSAUpdaterEPNS_15ScalarEvolutionE'/>
