<inh f='llvm/clang/include/clang/AST/TypeLoc.h' l='486' c='clang::InheritingConcreteTypeLoc'/>
<def f='llvm/clang/include/clang/AST/TypeLoc.h' l='707' ll='715'/>
<use f='llvm/clang/include/clang/AST/TypeLoc.h' l='708'/>
<use f='llvm/clang/include/clang/AST/TypeLoc.h' l='718'/>
<use f='llvm/clang/include/clang/AST/TypeLoc.h' l='726'/>
<size>16</size>
<doc f='llvm/clang/include/clang/AST/TypeLoc.h' l='702'>/// Wrapper for source info for tag types.  Note that this only
/// records source info for the name itself; a type written &apos;struct foo&apos;
/// should be represented as an ElaboratedTypeLoc.  We currently
/// only do that when C++ is enabled because of the expense of
/// creating an ElaboratedType node for so many type references in C.</doc>
<fun r='_ZNK5clang10TagTypeLoc7getDeclEv'/>
<fun r='_ZNK5clang10TagTypeLoc12isDefinitionEv'/>
<use f='llvm/clang/lib/ARCMigrate/TransAutoreleasePool.cpp' l='270' c='_ZN12_GLOBAL__N_123AutoreleasePoolRewriter20NameReferenceChecker15VisitTagTypeLocEN5clang10TagTypeLocE'/>
<size>16</size>
<use f='llvm/clang/lib/Index/IndexTypeSourceInfo.cpp' l='108' c='_ZN12_GLOBAL__N_111TypeIndexer15VisitTagTypeLocEN5clang10TagTypeLocE'/>
<size>16</size>
<use f='llvm/clang/lib/Sema/SemaType.cpp' l='5968' c='_ZN12_GLOBAL__N_117TypeSpecLocFiller15VisitTagTypeLocEN5clang10TagTypeLocE'/>
<size>16</size>
<use f='llvm/clang/tools/libclang/CursorVisitor.h' l='261' c='_ZN5clang8cxcursor13CursorVisitor15VisitTagTypeLocENS_10TagTypeLocE'/>
<use f='llvm/clang/tools/libclang/CIndex.cpp' l='1589' c='_ZN5clang8cxcursor13CursorVisitor15VisitTagTypeLocENS_10TagTypeLocE'/>
<size>16</size>
