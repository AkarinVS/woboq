<use f='llvm/llvm/include/llvm/Analysis/ValueLattice.h' l='228' u='c' c='_ZN4llvm19ValueLatticeElement8getRangeENS_13ConstantRangeEb'/>
<use f='llvm/llvm/include/llvm/Analysis/ValueLattice.h' l='312' u='c' c='_ZN4llvm19ValueLatticeElement12markConstantEPNS_8ConstantEb'/>
<use f='llvm/llvm/include/llvm/Analysis/ValueLattice.h' l='325' u='c' c='_ZN4llvm19ValueLatticeElement15markNotConstantEPNS_8ConstantE'/>
<def f='llvm/llvm/include/llvm/Analysis/ValueLattice.h' l='348' ll='382' type='bool llvm::ValueLatticeElement::markConstantRange(llvm::ConstantRange NewR, llvm::ValueLatticeElement::MergeOptions Opts = llvm::ValueLatticeElement::MergeOptions())'/>
<use f='llvm/llvm/include/llvm/Analysis/ValueLattice.h' l='402' u='c' c='_ZN4llvm19ValueLatticeElement7mergeInERKS0_NS0_12MergeOptionsE'/>
<use f='llvm/llvm/include/llvm/Analysis/ValueLattice.h' l='444' u='c' c='_ZN4llvm19ValueLatticeElement7mergeInERKS0_NS0_12MergeOptionsE'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueLattice.h' l='342'>/// Mark the object as constant range with \p NewR. If the object is already a
  /// constant range, nothing changes if the existing range is equal to \p
  /// NewR and the tag. Otherwise \p NewR must be a superset of the existing
  /// range or the object must be undef. The tag is set to
  /// constant_range_including_undef if either the existing value or the new
  /// range may include undef.</doc>
<use f='llvm/llvm/unittests/Analysis/ValueLatticeTest.cpp' l='49' u='c' c='_ZN4llvm12_GLOBAL__N_139ValueLatticeTest_MarkConstantRange_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueLatticeTest.cpp' l='52' u='c' c='_ZN4llvm12_GLOBAL__N_139ValueLatticeTest_MarkConstantRange_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueLatticeTest.cpp' l='55' u='c' c='_ZN4llvm12_GLOBAL__N_139ValueLatticeTest_MarkConstantRange_Test8TestBodyEv'/>
