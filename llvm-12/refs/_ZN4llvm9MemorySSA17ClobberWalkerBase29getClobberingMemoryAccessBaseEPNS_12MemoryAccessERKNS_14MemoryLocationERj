<dec f='llvm/llvm/lib/Analysis/MemorySSA.cpp' l='1008' type='llvm::MemoryAccess * llvm::MemorySSA::ClobberWalkerBase::getClobberingMemoryAccessBase(llvm::MemoryAccess * , const llvm::MemoryLocation &amp; , unsigned int &amp; )'/>
<def f='llvm/llvm/lib/Analysis/MemorySSA.cpp' l='2403' ll='2442' type='llvm::MemoryAccess * llvm::MemorySSA::ClobberWalkerBase::getClobberingMemoryAccessBase(llvm::MemoryAccess * StartingAccess, const llvm::MemoryLocation &amp; Loc, unsigned int &amp; UpwardWalkLimit)'/>
<doc f='llvm/llvm/lib/Analysis/MemorySSA.cpp' l='2399'>/// Walk the use-def chains starting at \p StartingAccess and find
/// the MemoryAccess that actually clobbers Loc.
///
/// \returns our clobbering memory access</doc>
