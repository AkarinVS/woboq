<dec f='llvm/polly/lib/External/isl/isl_tab.h' l='322' type='struct isl_tab * isl_tab_detect_equalities(struct isl_tab * tab, struct isl_tab * tab_cone)'/>
<def f='llvm/polly/lib/External/isl/isl_affine_hull.c' l='624' ll='697' type='struct isl_tab * isl_tab_detect_equalities(struct isl_tab * tab, struct isl_tab * tab_cone)'/>
<doc f='llvm/polly/lib/External/isl/isl_affine_hull.c' l='614'>/* Given a tableau of a set and a tableau of the corresponding
 * recession cone, detect and add all equalities to the tableau.
 * If the tableau is bounded, then we can simply keep the
 * tableau in its state after the return from extend_affine_hull.
 * However, if the tableau is unbounded, then
 * isl_tab_set_initial_basis_with_cone will add some additional
 * constraints to the tableau that have to be removed again.
 * In this case, we therefore rollback to the state before
 * any constraints were added and then add the equalities back in.
 */</doc>
<use f='llvm/polly/lib/External/isl/isl_tab_pip.c' l='3413' u='c' c='context_gbr_detect_equalities'/>
