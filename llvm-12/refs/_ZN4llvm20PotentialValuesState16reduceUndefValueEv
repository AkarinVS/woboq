<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3624' type='void llvm::PotentialValuesState::reduceUndefValue()'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3647' u='c' c='_ZN4llvm20PotentialValuesState9unionWithERKNS_20PotentialValuesStateIT_T0_EE'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3654' u='c' c='_ZN4llvm20PotentialValuesState14unionWithUndefEv'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3674' u='c' c='_ZN4llvm20PotentialValuesState13intersectWithERKNS_20PotentialValuesStateIT_T0_EE'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3622'>/// If this state contains both undef and not undef, we can reduce
  /// undef to the not undef value.</doc>
