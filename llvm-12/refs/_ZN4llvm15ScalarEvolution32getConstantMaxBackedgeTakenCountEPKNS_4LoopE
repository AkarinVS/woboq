<def f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='792' ll='794' type='const llvm::SCEV * llvm::ScalarEvolution::getConstantMaxBackedgeTakenCount(const llvm::Loop * L)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='788'>/// When successful, this returns a SCEVConstant that is greater than or equal
  /// to (i.e. a &quot;conservative over-approximation&quot;) of the value returend by
  /// getBackedgeTakenCount.  If such a value cannot be computed, it returns the
  /// SCEVCouldNotCompute object.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='1612' u='c' c='_ZN4llvm15ScalarEvolution17getZeroExtendExprEPKNS_4SCEVEPNS_4TypeEj'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='1952' u='c' c='_ZN4llvm15ScalarEvolution17getSignExtendExprEPKNS_4SCEVEPNS_4TypeEj'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='4454' u='c' c='_ZN4llvm15ScalarEvolution29proveNoSignedWrapViaInductionEPKNS_14SCEVAddRecExprE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='4504' u='c' c='_ZN4llvm15ScalarEvolution31proveNoUnsignedWrapViaInductionEPKNS_14SCEVAddRecExprE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5796' u='c' c='_ZN4llvm15ScalarEvolution11getRangeRefEPKNS_4SCEVENS0_13RangeSignHintE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6836' u='c' c='_ZN4llvm15ScalarEvolution28getSmallConstantMaxTripCountEPKNS_4LoopE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='12109' u='c' c='_ZL13PrintLoopInfoRN4llvm11raw_ostreamEPNS_15ScalarEvolutionEPKNS_4LoopE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='12110' u='c' c='_ZL13PrintLoopInfoRN4llvm11raw_ostreamEPNS_15ScalarEvolutionEPKNS_4LoopE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopDeletion.cpp' l='235' u='c' c='_ZL16deleteLoopIfDeadPN4llvm4LoopERNS_13DominatorTreeERNS_15ScalarEvolutionERNS_8LoopInfoEPNS_9MemorySSAERNS_25OptimizationRemarkEmitterE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/PlaceSafepoints.cpp' l='245' u='c' c='_ZL23mustBeFiniteCountedLoopPN4llvm4LoopEPNS_15ScalarEvolutionEPNS_10BasicBlockE'/>
<use f='llvm/llvm/unittests/Analysis/ScalarEvolutionTest.cpp' l='1254' u='c' c='_ZN4llvm56ScalarEvolutionsTest_SCEVgetExitLimitForGuardedLoop_Test8TestBodyEv'/>
