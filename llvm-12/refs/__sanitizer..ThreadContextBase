<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='39' ll='84'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='54'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='86'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='103' c='__sanitizer::ThreadRegistry::GetThreadLocked'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='110'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='115'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='121' c='__sanitizer::ThreadRegistry::FindThreadContextLocked'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='123' c='__sanitizer::ThreadRegistry::FindThreadContextByOsIDLocked'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='149'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='150'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='151'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='153' c='__sanitizer::ThreadRegistry::QuarantinePush'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='154' c='__sanitizer::ThreadRegistry::QuarantinePop'/>
<ovr f='llvm/compiler-rt/lib/asan/asan_thread.h' l='38' c='__asan::AsanThreadContext'/>
<use f='llvm/compiler-rt/lib/asan/asan_thread.h' l='38'/>
<use f='llvm/compiler-rt/lib/asan/asan_thread.h' l='41' c='__asan::AsanThreadContext::AsanThreadContext'/>
<size>144</size>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='37'>// Generic thread context. Specific sanitizer tools may inherit from it.
// If thread is dead, context may optionally be reused for a new thread.</doc>
<fun r='__sanitizer::ThreadContextBase::ThreadContextBase'/>
<mbr r='__sanitizer::ThreadContextBase::tid' o='64' t='const __sanitizer::u32'/>
<mbr r='__sanitizer::ThreadContextBase::unique_id' o='128' t='__sanitizer::u64'/>
<mbr r='__sanitizer::ThreadContextBase::reuse_count' o='192' t='__sanitizer::u32'/>
<mbr r='__sanitizer::ThreadContextBase::os_id' o='256' t='__sanitizer::tid_t'/>
<mbr r='__sanitizer::ThreadContextBase::user_id' o='320' t='__sanitizer::uptr'/>
<mbr r='__sanitizer::ThreadContextBase::name' o='384' t='char [64]'/>
<mbr r='__sanitizer::ThreadContextBase::status' o='896' t='__sanitizer::ThreadStatus'/>
<mbr r='__sanitizer::ThreadContextBase::detached' o='928' t='bool'/>
<mbr r='__sanitizer::ThreadContextBase::thread_type' o='960' t='__sanitizer::ThreadType'/>
<mbr r='__sanitizer::ThreadContextBase::parent_tid' o='992' t='__sanitizer::u32'/>
<mbr r='__sanitizer::ThreadContextBase::next' o='1024' t='__sanitizer::ThreadContextBase *'/>
<mbr r='__sanitizer::ThreadContextBase::thread_destroyed' o='1088' t='__sanitizer::atomic_uint32_t'/>
<fun r='__sanitizer::ThreadContextBase::SetName'/>
<fun r='__sanitizer::ThreadContextBase::SetDead'/>
<fun r='__sanitizer::ThreadContextBase::SetJoined'/>
<fun r='__sanitizer::ThreadContextBase::SetFinished'/>
<fun r='__sanitizer::ThreadContextBase::SetStarted'/>
<fun r='__sanitizer::ThreadContextBase::SetCreated'/>
<fun r='__sanitizer::ThreadContextBase::Reset'/>
<fun r='__sanitizer::ThreadContextBase::SetDestroyed'/>
<fun r='__sanitizer::ThreadContextBase::GetDestroyed'/>
<fun r='__sanitizer::ThreadContextBase::OnDead'/>
<fun r='__sanitizer::ThreadContextBase::OnJoined'/>
<fun r='__sanitizer::ThreadContextBase::OnFinished'/>
<fun r='__sanitizer::ThreadContextBase::OnStarted'/>
<fun r='__sanitizer::ThreadContextBase::OnCreated'/>
<fun r='__sanitizer::ThreadContextBase::OnReset'/>
<fun r='__sanitizer::ThreadContextBase::OnDetached'/>
<fun r='__sanitizer::ThreadContextBase::~ThreadContextBase'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.h' l='146' c='__lsan::GetAdditionalThreadContextPtrs'/>
<use f='llvm/compiler-rt/lib/asan/asan_allocator.cpp' l='1187' c='__lsan::GetAdditionalThreadContextPtrs'/>
<size>144</size>
<use f='llvm/compiler-rt/lib/asan/asan_stats.cpp' l='74' c='__asan::MergeThreadStats'/>
<size>144</size>
<use f='llvm/compiler-rt/lib/asan/asan_thread.cpp' l='49' c='__asan::GetAsanThreadContext'/>
<use f='llvm/compiler-rt/lib/asan/asan_thread.cpp' l='401' c='__asan::ThreadStackContainsAddress'/>
<size>144</size>
<ovr f='llvm/compiler-rt/lib/lsan/lsan_thread.h' l='21' c='__lsan::ThreadContextLsanBase'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_thread.h' l='21'/>
<size>120</size>
<use f='llvm/compiler-rt/lib/lsan/lsan_allocator.cpp' l='313' c='__lsan::GetAdditionalThreadContextPtrs'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='632' c='__lsan::ReportIfNotSuspended'/>
<size>144</size>
<use f='llvm/compiler-rt/lib/lsan/lsan_thread.cpp' l='28' c='__lsan::CreateThreadContext'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_thread.cpp' l='43' c='__lsan::ThreadContextLsanBase::ThreadContextLsanBase'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_thread.cpp' l='74' c='__lsan::FindThreadByUid'/>
<size>120</size>
<ovr f='llvm/compiler-rt/lib/memprof/memprof_thread.h' l='37' c='__memprof::MemprofThreadContext'/>
<use f='llvm/compiler-rt/lib/memprof/memprof_thread.h' l='37'/>
<use f='llvm/compiler-rt/lib/memprof/memprof_thread.h' l='39' c='__memprof::MemprofThreadContext::MemprofThreadContext'/>
<size>144</size>
<use f='llvm/compiler-rt/lib/memprof/memprof_stats.cpp' l='74' c='__memprof::MergeThreadStats'/>
<size>144</size>
<use f='llvm/compiler-rt/lib/memprof/memprof_thread.cpp' l='46' c='__memprof::GetMemprofThreadContext'/>
<size>144</size>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='116' c='__sanitizer::ThreadRegistry::ThreadRegistry'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='139' c='__sanitizer::ThreadRegistry::CreateThread'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='175' c='__sanitizer::ThreadRegistry::RunCallbackForEachThreadLocked'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='185' c='__sanitizer::ThreadRegistry::FindThread'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='192' c='__sanitizer::ThreadRegistry::FindThreadContextLocked'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='196' c='__sanitizer::ThreadRegistry::FindThreadContextLocked'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='203' c='__sanitizer::FindThreadContextByOsIdCallback'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='209' c='__sanitizer::ThreadRegistry::FindThreadContextByOsIDLocked'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='217' c='__sanitizer::ThreadRegistry::SetThreadName'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='227' c='__sanitizer::ThreadRegistry::SetThreadNameByUserId'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='239' c='__sanitizer::ThreadRegistry::DetachThread'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='260' c='__sanitizer::ThreadRegistry::JoinThread'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='286' c='__sanitizer::ThreadRegistry::FinishThread'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='310' c='__sanitizer::ThreadRegistry::StartThread'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='316' c='__sanitizer::ThreadRegistry::QuarantinePush'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='332' c='__sanitizer::ThreadRegistry::QuarantinePop'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='335' c='__sanitizer::ThreadRegistry::QuarantinePop'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.cpp' l='343' c='__sanitizer::ThreadRegistry::SetThreadUserId'/>
<size>120</size>
<fun r='__sanitizer::ThreadContextBase::ThreadContextBase'/>
<fun r='__sanitizer::ThreadContextBase::~ThreadContextBase'/>
<fun r='__sanitizer::ThreadContextBase::SetName'/>
<fun r='__sanitizer::ThreadContextBase::SetDead'/>
<fun r='__sanitizer::ThreadContextBase::SetDestroyed'/>
<fun r='__sanitizer::ThreadContextBase::GetDestroyed'/>
<fun r='__sanitizer::ThreadContextBase::SetJoined'/>
<fun r='__sanitizer::ThreadContextBase::SetFinished'/>
<fun r='__sanitizer::ThreadContextBase::SetStarted'/>
<fun r='__sanitizer::ThreadContextBase::SetCreated'/>
<fun r='__sanitizer::ThreadContextBase::Reset'/>
<ovr f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='480' c='__tsan::ThreadContext'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='480'/>
<size>144</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_debugging.cpp' l='255' c='__tsan_get_alloc_stack'/>
<size>144</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.cpp' l='69' c='__tsan::CreateThreadContext'/>
<size>144</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='414' c='__tsan::UpdateClockCallback'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='471' c='__tsan::UpdateSleepClockCallback'/>
<size>144</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_report.cpp' l='213' c='__tsan::FindThreadByUidLockedCallback'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_report.cpp' l='231' c='__tsan::IsInStackOrTls'/>
<size>144</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_thread.cpp' l='25' c='__tsan::ThreadContext::ThreadContext'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_thread.cpp' l='164' c='__tsan::MaybeReportThreadLeak'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_thread.cpp' l='293'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_thread.cpp' l='296' c='__tsan::ConsumeThreadByUid'/>
<size>144</size>
