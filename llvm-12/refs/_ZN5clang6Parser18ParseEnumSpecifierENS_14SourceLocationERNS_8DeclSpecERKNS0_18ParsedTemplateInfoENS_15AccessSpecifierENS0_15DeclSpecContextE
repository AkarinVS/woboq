<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2366' type='void clang::Parser::ParseEnumSpecifier(clang::SourceLocation TagLoc, clang::DeclSpec &amp; DS, const clang::Parser::ParsedTemplateInfo &amp; TemplateInfo, clang::AccessSpecifier AS, clang::Parser::DeclSpecContext DSC)'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='2610' u='c' c='_ZN5clang6Parser16ParseImplicitIntERNS_8DeclSpecEPNS_12CXXScopeSpecERKNS0_18ParsedTemplateInfoENS_15AccessSpecifierENS0_15DeclSpecContextERNS0_25Parse1090808'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='3929' u='c' c='_ZN5clang6Parser26ParseDeclarationSpecifiersERNS_8DeclSpecERKNS0_18ParsedTemplateInfoENS_15AccessSpecifierENS0_15DeclSpecContextEPNS0_18LateParsedAttrListE'/>
<def f='llvm/clang/lib/Parse/ParseDecl.cpp' l='4345' ll='4718' type='void clang::Parser::ParseEnumSpecifier(clang::SourceLocation StartLoc, clang::DeclSpec &amp; DS, const clang::Parser::ParsedTemplateInfo &amp; TemplateInfo, clang::AccessSpecifier AS, clang::Parser::DeclSpecContext DSC)'/>
<doc f='llvm/clang/lib/Parse/ParseDecl.cpp' l='4315'>/// ParseEnumSpecifier
///       enum-specifier: [C99 6.7.2.2]
///         &apos;enum&apos; identifier[opt] &apos;{&apos; enumerator-list &apos;}&apos;
///[C99/C++]&apos;enum&apos; identifier[opt] &apos;{&apos; enumerator-list &apos;,&apos; &apos;}&apos;
/// [GNU]   &apos;enum&apos; attributes[opt] identifier[opt] &apos;{&apos; enumerator-list &apos;,&apos; [opt]
///                                                 &apos;}&apos; attributes[opt]
/// [MS]    &apos;enum&apos; __declspec[opt] identifier[opt] &apos;{&apos; enumerator-list &apos;,&apos; [opt]
///                                                 &apos;}&apos;
///         &apos;enum&apos; identifier
/// [GNU]   &apos;enum&apos; attributes[opt] identifier
///
/// [C++11] enum-head &apos;{&apos; enumerator-list[opt] &apos;}&apos;
/// [C++11] enum-head &apos;{&apos; enumerator-list &apos;,&apos;  &apos;}&apos;
///
///       enum-head: [C++11]
///         enum-key attribute-specifier-seq[opt] identifier[opt] enum-base[opt]
///         enum-key attribute-specifier-seq[opt] nested-name-specifier
///             identifier enum-base[opt]
///
///       enum-key: [C++11]
///         &apos;enum&apos;
///         &apos;enum&apos; &apos;class&apos;
///         &apos;enum&apos; &apos;struct&apos;
///
///       enum-base: [C++11]
///         &apos;:&apos; type-specifier-seq
///
/// [C++] elaborated-type-specifier:
/// [C++]   &apos;enum&apos; nested-name-specifier[opt] identifier
///</doc>
