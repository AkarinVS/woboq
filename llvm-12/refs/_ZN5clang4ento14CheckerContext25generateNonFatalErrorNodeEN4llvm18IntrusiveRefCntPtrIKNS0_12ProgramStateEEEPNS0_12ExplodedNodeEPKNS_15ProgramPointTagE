<def f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/CheckerContext.h' l='234' ll='239' type='clang::ento::ExplodedNode * clang::ento::CheckerContext::generateNonFatalErrorNode(clang::ento::ProgramStateRef State, clang::ento::ExplodedNode * Pred, const clang::ProgramPointTag * Tag = nullptr)'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/CheckerContext.h' l='225'>/// Generate a transition to a node that will be used to report
  /// an error. This node will not be a sink. That is, exploration will
  /// continue along this path.
  ///
  /// @param State The state of the generated node.
  /// @param Pred The transition will be generated from the specified Pred node
  ///             to the newly generated node.
  /// @param Tag The tag to uniquely identify the creation site. If null,
  ///        the default tag for the checker will be used.</doc>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp' l='616' u='c' c='_ZNK12_GLOBAL__N_120FuchsiaHandleChecker11reportLeaksEN4llvm8ArrayRefIPKN5clang4ento7SymExprEEERNS4_14CheckerContextEPNS4_12ExplodedNodeE'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp' l='969' u='c' c='_ZNK12_GLOBAL__N_113StreamChecker11reportLeaksERKN4llvm11SmallVectorIPKN5clang4ento7SymExprELj2EEERNS4_14CheckerContextEPNS4_12ExplodedNodeE'/>
