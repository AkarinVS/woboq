<dec f='llvm/lldb/include/lldb/Target/Process.h' l='786' type='bool lldb_private::Process::UnregisterNotificationCallbacks(const Process::Notifications &amp; callbacks)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='772'>/// Unregister for process and thread notifications.
///
/// Clients can unregister notification callbacks by passing a copy of the
/// original baton and callbacks in \a callbacks.
///
/// \param[in] callbacks
///     A structure that contains the notification baton and
///     callback functions.
///
/// \return
///     Returns \b true if the notification callbacks were
///     successfully removed from the process, \b false otherwise.
///
/// \see Process::Notifications</doc>
<def f='llvm/lldb/source/Target/Process.cpp' l='550' ll='561' type='bool lldb_private::Process::UnregisterNotificationCallbacks(const lldb_private::Process::Notifications &amp; callbacks)'/>
