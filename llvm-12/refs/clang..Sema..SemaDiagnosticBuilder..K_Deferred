<dec f='llvm/clang/include/clang/Sema/Sema.h' l='1643' type='3'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='1640'>/// Create a deferred diagnostic, which is emitted only if the function
      /// it&apos;s attached to is codegen&apos;ed.  Also emit a call stack as with
      /// K_ImmediateWithCallStack.</doc>
<use f='llvm/clang/lib/Sema/Sema.cpp' l='1701' u='r' c='_ZN5clang4Sema21SemaDiagnosticBuilderC1ENS1_4KindENS_14SourceLocationEjPNS_12FunctionDeclERS0_'/>
<use f='llvm/clang/lib/Sema/Sema.cpp' l='1710' c='_ZN5clang4Sema21SemaDiagnosticBuilderC1ENS1_4KindENS_14SourceLocationEjPNS_12FunctionDeclERS0_'/>
<use f='llvm/clang/lib/Sema/SemaCUDA.cpp' l='663' u='r' c='_ZN5clang4Sema20CUDADiagIfDeviceCodeENS_14SourceLocationEj'/>
<use f='llvm/clang/lib/Sema/SemaCUDA.cpp' l='692' u='r' c='_ZN5clang4Sema18CUDADiagIfHostCodeENS_14SourceLocationEj'/>
<use f='llvm/clang/lib/Sema/SemaCUDA.cpp' l='730' u='r' c='_ZN5clang4Sema13CheckCUDACallENS_14SourceLocationEPNS_12FunctionDeclE'/>
<use f='llvm/clang/lib/Sema/SemaCUDA.cpp' l='791' u='r' c='_ZN5clang4Sema22CUDACheckLambdaCaptureEPNS_13CXXMethodDeclERKNS_4sema7CaptureE'/>
<use f='llvm/clang/lib/Sema/SemaOpenMP.cpp' l='1921' u='r' c='_ZN5clang4Sema22diagIfOpenMPDeviceCodeENS_14SourceLocationEjPNS_12FunctionDeclE'/>
<use f='llvm/clang/lib/Sema/SemaOpenMP.cpp' l='1949' u='r' c='_ZN5clang4Sema20diagIfOpenMPHostCodeENS_14SourceLocationEjPNS_12FunctionDeclE'/>
<use f='llvm/clang/lib/Sema/SemaSYCL.cpp' l='30' u='r' c='_ZN5clang4Sema20SYCLDiagIfDeviceCodeENS_14SourceLocationEj'/>
