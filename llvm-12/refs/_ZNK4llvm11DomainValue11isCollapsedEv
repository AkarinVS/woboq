<def f='llvm/llvm/include/llvm/CodeGen/ExecutionDomainFix.h' l='72' type='bool llvm::DomainValue::isCollapsed() const'/>
<use f='llvm/llvm/lib/CodeGen/ExecutionDomainFix.cpp' l='42' u='c' c='_ZN4llvm18ExecutionDomainFix7releaseEPNS_11DomainValueE'/>
<use f='llvm/llvm/lib/CodeGen/ExecutionDomainFix.cpp' l='95' u='c' c='_ZN4llvm18ExecutionDomainFix5forceEij'/>
<use f='llvm/llvm/lib/CodeGen/ExecutionDomainFix.cpp' l='188' u='c' c='_ZN4llvm18ExecutionDomainFix15enterBasicBlockERKNS_13LoopTraversal16TraversedMBBInfoE'/>
<use f='llvm/llvm/lib/CodeGen/ExecutionDomainFix.cpp' l='191' u='c' c='_ZN4llvm18ExecutionDomainFix15enterBasicBlockERKNS_13LoopTraversal16TraversedMBBInfoE'/>
<use f='llvm/llvm/lib/CodeGen/ExecutionDomainFix.cpp' l='197' u='c' c='_ZN4llvm18ExecutionDomainFix15enterBasicBlockERKNS_13LoopTraversal16TraversedMBBInfoE'/>
<use f='llvm/llvm/lib/CodeGen/ExecutionDomainFix.cpp' l='303' u='c' c='_ZN4llvm18ExecutionDomainFix14visitSoftInstrEPNS_12MachineInstrEj'/>
<doc f='llvm/llvm/include/llvm/CodeGen/ExecutionDomainFix.h' l='70'>/// A collapsed DomainValue has no instructions to twiddle - it simply keeps
  /// track of the domains where the registers are already available.</doc>
