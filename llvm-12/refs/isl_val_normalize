<dec f='llvm/polly/lib/External/isl/isl_val_private.h' l='31' type='isl_val * isl_val_normalize(isl_val * v)'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='759' u='c' c='isl_aff_get_constant_val'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='789' u='c' c='isl_aff_get_coefficient_val'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='9820' u='c' c='eval'/>
<use f='llvm/polly/lib/External/isl/isl_ilp.c' l='516' u='c' c='convert_lp_result'/>
<use f='llvm/polly/lib/External/isl/isl_input.c' l='229' u='c' c='isl_stream_read_val'/>
<use f='llvm/polly/lib/External/isl/isl_lp.c' l='234' u='c' c='basic_set_opt_lp'/>
<use f='llvm/polly/lib/External/isl/isl_point.c' l='338' u='c' c='isl_point_get_coordinate_val'/>
<def f='llvm/polly/lib/External/isl/isl_val.c' l='384' ll='405' type='isl_val * isl_val_normalize(isl_val * v)'/>
<use f='llvm/polly/lib/External/isl/isl_val.c' l='450' u='c' c='isl_val_inv'/>
<use f='llvm/polly/lib/External/isl/isl_val.c' l='672' u='c' c='isl_val_add'/>
<use f='llvm/polly/lib/External/isl/isl_val.c' l='750' u='c' c='isl_val_sub'/>
<use f='llvm/polly/lib/External/isl/isl_val.c' l='827' u='c' c='isl_val_mul'/>
<use f='llvm/polly/lib/External/isl/isl_val.c' l='869' u='c' c='isl_val_mul_ui'/>
<use f='llvm/polly/lib/External/isl/isl_val.c' l='911' u='c' c='isl_val_div'/>
<use f='llvm/polly/lib/External/isl/isl_val.c' l='915' u='c' c='isl_val_div'/>
<use f='llvm/polly/lib/External/isl/isl_val.c' l='947' u='c' c='isl_val_div_ui'/>
<doc f='llvm/polly/lib/External/isl/isl_val.c' l='375'>/* Normalize &quot;v&quot;.
 *
 * In particular, make sure that the denominator of a rational value
 * is positive and the numerator and denominator do not have any
 * common divisors.
 *
 * This function should not be called by an external user
 * since it will only be given normalized values.
 */</doc>
