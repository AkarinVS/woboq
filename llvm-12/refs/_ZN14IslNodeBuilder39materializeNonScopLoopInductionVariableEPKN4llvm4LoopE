<dec f='llvm/polly/include/polly/CodeGen/IslNodeBuilder.h' l='429' type='llvm::Value * IslNodeBuilder::materializeNonScopLoopInductionVariable(const llvm::Loop * L)'/>
<doc f='llvm/polly/include/polly/CodeGen/IslNodeBuilder.h' l='421'>/// Materialize a canonical loop induction variable for `L`, which is a loop
  /// that is *not* present in the Scop.
  ///
  /// Note that this is materialized at the point where the `Builder` is
  /// currently pointing.
  /// We also populate the `OutsideLoopIterations` map with `L`s SCEV to keep
  /// track of the induction variable.
  /// See [Code generation of induction variables of loops outside Scops]</doc>
<use f='llvm/polly/lib/CodeGen/IslNodeBuilder.cpp' l='675' u='c' c='_ZN14IslNodeBuilder17createForParallelEP12isl_ast_node'/>
<def f='llvm/polly/lib/CodeGen/IslNodeBuilder.cpp' l='959' ll='968' type='llvm::Value * IslNodeBuilder::materializeNonScopLoopInductionVariable(const llvm::Loop * L)'/>
<use f='llvm/polly/lib/CodeGen/IslNodeBuilder.cpp' l='1545' u='c' c='_ZN14IslNodeBuilder13addParametersEP7isl_set'/>
