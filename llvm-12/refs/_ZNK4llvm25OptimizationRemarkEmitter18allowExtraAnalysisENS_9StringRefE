<def f='llvm/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h' l='90' ll='92' type='bool llvm::OptimizationRemarkEmitter::allowExtraAnalysis(llvm::StringRef PassName) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h' l='83'>/// Whether we allow for extra compile-time budget to perform more
  /// analysis to produce fewer false positives.
  ///
  /// This is useful when reporting missed optimizations.  In this case we can
  /// use the extra analysis (1) to filter trivial false positives or (2) to
  /// provide more context so that non-trivial false positives can be quickly
  /// detected by the user.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp' l='3190' u='c' c='_ZN4llvm12IRTranslator20runOnMachineFunctionERNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='1019' u='c' c='_ZN4llvm3GVN23AnalyzeLoadAvailabilityEPNS_8LoadInstENS_12MemDepResultEPNS_5ValueERNS_3gvn14AvailableValueE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp' l='1885' u='c' c='_ZN12_GLOBAL__N_121LowerMatrixIntrinsics15RemarkGenerator11emitRemarksEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='442' u='c' c='_ZN4llvm25LoopVectorizationLegality21canVectorizeOuterLoopEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='1079' u='c' c='_ZN4llvm25LoopVectorizationLegality19canVectorizeLoopCFGEPNS_4LoopEb'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='1127' u='c' c='_ZN4llvm25LoopVectorizationLegality23canVectorizeLoopNestCFGEPNS_4LoopEb'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='1153' u='c' c='_ZN4llvm25LoopVectorizationLegality12canVectorizeEb'/>
