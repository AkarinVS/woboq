<dec f='llvm/lldb/include/lldb/Utility/DataExtractor.h' l='500' type='int64_t lldb_private::DataExtractor::GetMaxS64(lldb::offset_t * offset_ptr, size_t byte_size) const'/>
<doc f='llvm/lldb/include/lldb/Utility/DataExtractor.h' l='479'>/// Extract an signed integer of size \a byte_size from \a *offset_ptr.
  ///
  /// Extract a single signed integer value (sign extending if required) and
  /// update the offset pointed to by \a offset_ptr. The size of the extracted
  /// integer is specified by the \a byte_size argument. \a byte_size must
  /// have a value greater than or equal to one and less than or equal to
  /// eight since the return value is 64 bits wide.
  ///
  /// \param[in,out] offset_ptr
  ///     A pointer to an offset within the data that will be advanced
  ///     by the appropriate number of bytes if the value is extracted
  ///     correctly. If the offset is out of bounds or there are not
  ///     enough bytes to extract this value, the offset will be left
  ///     unmodified.
  ///
  /// \param[in] byte_size
  ///     The size in byte of the integer to extract.
  ///
  /// \return
  ///     The sign extended signed integer value that was extracted,
  ///     or zero on failure.</doc>
<use f='llvm/lldb/source/API/SBData.cpp' l='256' u='c' c='_ZN4lldb6SBData13GetSignedInt8ERNS_7SBErrorEm'/>
<use f='llvm/lldb/source/API/SBData.cpp' l='272' u='c' c='_ZN4lldb6SBData14GetSignedInt16ERNS_7SBErrorEm'/>
<use f='llvm/lldb/source/API/SBData.cpp' l='288' u='c' c='_ZN4lldb6SBData14GetSignedInt32ERNS_7SBErrorEm'/>
<use f='llvm/lldb/source/API/SBData.cpp' l='304' u='c' c='_ZN4lldb6SBData14GetSignedInt64ERNS_7SBErrorEm'/>
<use f='llvm/lldb/source/Plugins/ObjectFile/ELF/ELFHeader.cpp' l='51' u='c' c='_ZL9GetMaxS64RKN12lldb_private13DataExtractorEPmPlj'/>
<use f='llvm/lldb/source/Symbol/CompilerType.cpp' l='824' u='c' c='_ZNK12lldb_private12CompilerType16GetValueAsScalarERKNS_13DataExtractorEmmRNS_6ScalarEPNS_21ExecutionContextScopeE'/>
<def f='llvm/lldb/source/Utility/DataExtractor.cpp' l='571' ll='574' type='int64_t lldb_private::DataExtractor::GetMaxS64(lldb::offset_t * offset_ptr, size_t byte_size) const'/>
<use f='llvm/lldb/source/Utility/DataExtractor.cpp' l='609' u='c' c='_ZNK12lldb_private13DataExtractor17GetMaxS64BitfieldEPmmjj'/>
<use f='llvm/lldb/unittests/Utility/DataExtractorTest.cpp' l='199' u='c' c='_ZN32DataExtractorTest_GetMaxS64_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Utility/DataExtractorTest.cpp' l='202' u='c' c='_ZN32DataExtractorTest_GetMaxS64_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Utility/DataExtractorTest.cpp' l='207' u='c' c='_ZN32DataExtractorTest_GetMaxS64_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Utility/DataExtractorTest.cpp' l='211' u='c' c='_ZN32DataExtractorTest_GetMaxS64_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Utility/DataExtractorTest.cpp' l='217' u='c' c='_ZN32DataExtractorTest_GetMaxS64_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Utility/DataExtractorTest.cpp' l='220' u='c' c='_ZN32DataExtractorTest_GetMaxS64_Test8TestBodyEv'/>
