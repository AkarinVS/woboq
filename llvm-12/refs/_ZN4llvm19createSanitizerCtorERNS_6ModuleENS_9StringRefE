<dec f='llvm/llvm/include/llvm/Transforms/Utils/ModuleUtils.h' l='47' type='llvm::Function * llvm::createSanitizerCtor(llvm::Module &amp; M, llvm::StringRef CtorName)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/ModuleUtils.h' l='45'>/// Creates sanitizer constructor function.
/// \return Returns pointer to constructor.</doc>
<use f='llvm/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp' l='2488' u='c' c='_ZN12_GLOBAL__N_122ModuleAddressSanitizer16instrumentModuleERN4llvm6ModuleE'/>
<def f='llvm/llvm/lib/Transforms/Utils/ModuleUtils.cpp' l='122' ll='129' type='llvm::Function * llvm::createSanitizerCtor(llvm::Module &amp; M, llvm::StringRef CtorName)'/>
<use f='llvm/llvm/lib/Transforms/Utils/ModuleUtils.cpp' l='140' u='c' c='_ZN4llvm35createSanitizerCtorAndInitFunctionsERNS_6ModuleENS_9StringRefES2_NS_8ArrayRefIPNS_4TypeEEENS3_IPNS_5ValueEEES2_'/>
