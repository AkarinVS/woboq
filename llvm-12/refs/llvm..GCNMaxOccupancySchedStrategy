<inh f='llvm/llvm/include/llvm/CodeGen/MachineScheduler.h' l='940' c='llvm::GenericScheduler'/>
<def f='llvm/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h' l='29' ll='63'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp' l='279' c='_ZL37createGCNMaxOccupancyMachineSchedulerPN4llvm19MachineSchedContextE'/>
<size>1216</size>
<doc f='llvm/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h' l='25'>/// This is a minimal scheduler strategy.  The main difference between this
/// and the GenericScheduler is that GCNSchedStrategy uses different
/// heuristics to determine excess/critical pressure sets.  Its goal is to
/// maximize kernel occupancy (i.e. maximum number of waves per simd).</doc>
<fun r='_ZN4llvm28GCNMaxOccupancySchedStrategy21pickNodeBidirectionalERb'/>
<fun r='_ZN4llvm28GCNMaxOccupancySchedStrategy17pickNodeFromQueueERNS_13SchedBoundaryERKNS_20GenericSchedulerBase10CandPolicyERKNS_18RegPressureTrackerERNS3_14SchedCandidateE'/>
<fun r='_ZN4llvm28GCNMaxOccupancySchedStrategy13initCandidateERNS_20GenericSchedulerBase14SchedCandidateEPNS_5SUnitEbRKNS_18RegPressureTrackerEPKNS_14SIRegisterInfoEjj'/>
<mbr r='llvm::GCNMaxOccupancySchedStrategy::Pressure' o='9088' t='std::vector&lt;unsigned int&gt;'/>
<mbr r='llvm::GCNMaxOccupancySchedStrategy::MaxPressure' o='9280' t='std::vector&lt;unsigned int&gt;'/>
<mbr r='llvm::GCNMaxOccupancySchedStrategy::SGPRExcessLimit' o='9472' t='unsigned int'/>
<mbr r='llvm::GCNMaxOccupancySchedStrategy::VGPRExcessLimit' o='9504' t='unsigned int'/>
<mbr r='llvm::GCNMaxOccupancySchedStrategy::SGPRCriticalLimit' o='9536' t='unsigned int'/>
<mbr r='llvm::GCNMaxOccupancySchedStrategy::VGPRCriticalLimit' o='9568' t='unsigned int'/>
<mbr r='llvm::GCNMaxOccupancySchedStrategy::TargetOccupancy' o='9600' t='unsigned int'/>
<mbr r='llvm::GCNMaxOccupancySchedStrategy::MF' o='9664' t='llvm::MachineFunction *'/>
<fun r='_ZN4llvm28GCNMaxOccupancySchedStrategyC1EPKNS_19MachineSchedContextE'/>
<fun r='_ZN4llvm28GCNMaxOccupancySchedStrategy8pickNodeERb'/>
<fun r='_ZN4llvm28GCNMaxOccupancySchedStrategy10initializeEPNS_13ScheduleDAGMIE'/>
<fun r='_ZN4llvm28GCNMaxOccupancySchedStrategy18setTargetOccupancyEj'/>
<use f='llvm/llvm/lib/Target/AMDGPU/GCNIterativeScheduler.cpp' l='491' c='_ZN4llvm21GCNIterativeScheduler26scheduleLegacyMaxOccupancyEb'/>
<size>1216</size>
<use f='llvm/llvm/lib/Target/AMDGPU/GCNSchedStrategy.cpp' l='331' c='_ZN4llvm20GCNScheduleDAGMILive8scheduleEv'/>
<use f='llvm/llvm/lib/Target/AMDGPU/GCNSchedStrategy.cpp' l='331' c='_ZN4llvm20GCNScheduleDAGMILive8scheduleEv'/>
<use f='llvm/llvm/lib/Target/AMDGPU/GCNSchedStrategy.cpp' l='513' c='_ZN4llvm20GCNScheduleDAGMILive16finalizeScheduleEv'/>
<use f='llvm/llvm/lib/Target/AMDGPU/GCNSchedStrategy.cpp' l='513' c='_ZN4llvm20GCNScheduleDAGMILive16finalizeScheduleEv'/>
<size>1216</size>
<fun r='_ZN4llvm28GCNMaxOccupancySchedStrategyC1EPKNS_19MachineSchedContextE'/>
<fun r='_ZN4llvm28GCNMaxOccupancySchedStrategy10initializeEPNS_13ScheduleDAGMIE'/>
<fun r='_ZN4llvm28GCNMaxOccupancySchedStrategy13initCandidateERNS_20GenericSchedulerBase14SchedCandidateEPNS_5SUnitEbRKNS_18RegPressureTrackerEPKNS_14SIRegisterInfoEjj'/>
<fun r='_ZN4llvm28GCNMaxOccupancySchedStrategy17pickNodeFromQueueERNS_13SchedBoundaryERKNS_20GenericSchedulerBase10CandPolicyERKNS_18RegPressureTrackerERNS3_14SchedCandidateE'/>
<fun r='_ZN4llvm28GCNMaxOccupancySchedStrategy21pickNodeBidirectionalERb'/>
<fun r='_ZN4llvm28GCNMaxOccupancySchedStrategy8pickNodeERb'/>
