<dec f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.h' l='114' type='void llvm::MipsSEInstrInfo::expandCvtFPInt(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator I, unsigned int CvtOpc, unsigned int MovOpc, bool IsI64) const'/>
<doc f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.h' l='104'>/// Expand pseudo Int-to-FP conversion instructions.
  ///
  /// For example, the following pseudo instruction
  ///  PseudoCVT_D32_W D2, A5
  /// gets expanded into these two instructions:
  ///  MTC1 F4, A5
  ///  CVT_D32_W D2, F4
  ///
  /// We do this expansion post-RA to avoid inserting a floating point copy
  /// instruction between MTC1 and CVT_D32_W.</doc>
<use f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp' l='448' u='c' c='_ZNK4llvm15MipsSEInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp' l='452' u='c' c='_ZNK4llvm15MipsSEInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp' l='455' u='c' c='_ZNK4llvm15MipsSEInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp' l='459' u='c' c='_ZNK4llvm15MipsSEInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp' l='462' u='c' c='_ZNK4llvm15MipsSEInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<def f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp' l='757' ll='779' type='void llvm::MipsSEInstrInfo::expandCvtFPInt(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator I, unsigned int CvtOpc, unsigned int MovOpc, bool IsI64) const'/>
