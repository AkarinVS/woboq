<def f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='770' ll='922'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1303'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1611' c='_ZN4llvm11IntervalMap8iterator15canCoalesceLeftET_T0_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1639' c='_ZN4llvm11IntervalMap8iterator16canCoalesceRightET_T0_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1665' c='_ZN4llvm11IntervalMap8iterator11setNodeStopEjT_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1736' c='_ZN4llvm11IntervalMap8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefET_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1781' c='_ZN4llvm11IntervalMap8iterator6insertET_S2_T0_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1804' c='_ZN4llvm11IntervalMap8iterator10treeInsertET_S2_T0_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1868' c='_ZN4llvm11IntervalMap8iterator5eraseEv'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1881' c='_ZN4llvm11IntervalMap8iterator9treeEraseEb'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1915' c='_ZN4llvm11IntervalMap8iterator9eraseNodeEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1963' c='_ZN4llvm11IntervalMap8iterator8overflowEj'/>
<size>80</size>
<doc f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='758'>//===----------------------------------------------------------------------===//
//---                         IntervalMapImpl::Path                        ---//
//===----------------------------------------------------------------------===//
//
// A Path is used by iterators to represent a position in a B+-tree, and the
// path to get there from the root.
//
// The Path class also contains the tree navigation code that doesn&apos;t have to
// be templatized.
//
//===----------------------------------------------------------------------===//</doc>
<mbr r='llvm::IntervalMapImpl::Path::path' o='0' t='SmallVector&lt;llvm::IntervalMapImpl::Path::Entry, 4&gt;'/>
<fun r='_ZNK4llvm15IntervalMapImpl4Path4nodeEj'/>
<fun r='_ZNK4llvm15IntervalMapImpl4Path4sizeEj'/>
<fun r='_ZNK4llvm15IntervalMapImpl4Path6offsetEj'/>
<fun r='_ZN4llvm15IntervalMapImpl4Path6offsetEj'/>
<fun r='_ZNK4llvm15IntervalMapImpl4Path4leafEv'/>
<fun r='_ZNK4llvm15IntervalMapImpl4Path8leafSizeEv'/>
<fun r='_ZNK4llvm15IntervalMapImpl4Path10leafOffsetEv'/>
<fun r='_ZN4llvm15IntervalMapImpl4Path10leafOffsetEv'/>
<fun r='_ZNK4llvm15IntervalMapImpl4Path5validEv'/>
<fun r='_ZNK4llvm15IntervalMapImpl4Path6heightEv'/>
<fun r='_ZNK4llvm15IntervalMapImpl4Path7subtreeEj'/>
<fun r='_ZN4llvm15IntervalMapImpl4Path5resetEj'/>
<fun r='_ZN4llvm15IntervalMapImpl4Path4pushENS0_7NodeRefEj'/>
<fun r='_ZN4llvm15IntervalMapImpl4Path3popEv'/>
<fun r='_ZN4llvm15IntervalMapImpl4Path7setSizeEjj'/>
<fun r='_ZN4llvm15IntervalMapImpl4Path7setRootEPvjj'/>
<fun r='_ZN4llvm15IntervalMapImpl4Path11replaceRootEPvjSt4pairIjjE'/>
<fun r='_ZNK4llvm15IntervalMapImpl4Path14getLeftSiblingEj'/>
<fun r='_ZN4llvm15IntervalMapImpl4Path8moveLeftEj'/>
<fun r='_ZN4llvm15IntervalMapImpl4Path8fillLeftEj'/>
<fun r='_ZNK4llvm15IntervalMapImpl4Path15getRightSiblingEj'/>
<fun r='_ZN4llvm15IntervalMapImpl4Path9moveRightEj'/>
<fun r='_ZNK4llvm15IntervalMapImpl4Path7atBeginEv'/>
<fun r='_ZNK4llvm15IntervalMapImpl4Path11atLastEntryEj'/>
<fun r='_ZN4llvm15IntervalMapImpl4Path17legalizeForInsertEj'/>
