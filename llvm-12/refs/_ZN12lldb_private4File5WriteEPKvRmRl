<dec f='llvm/lldb/include/lldb/Host/File.h' l='261' type='lldb_private::Status lldb_private::File::Write(const void * src, size_t &amp; num_bytes, off_t &amp; offset)'/>
<doc f='llvm/lldb/include/lldb/Host/File.h' l='238'>/// Write bytes to a file at the specified file offset.
  ///
  /// NOTE: This function is thread safe in that clients manager their
  /// own file position markers, though clients will need to implement their
  /// own locking externally to avoid multiple people writing to the file at
  /// the same time.
  ///
  /// \param[in] src
  ///     A buffer containing the bytes to write.
  ///
  /// \param[in,out] num_bytes
  ///     The number of bytes to write to the file at offset \a offset.
  ///     \a num_bytes gets modified with the number of bytes that
  ///     were read.
  ///
  /// \param[in,out] offset
  ///     The offset within the file at which to write \a num_bytes
  ///     bytes. This offset gets incremented by the number of bytes
  ///     that were written.
  ///
  /// \return
  ///     An error object that indicates success or the reason for
  ///     failure.</doc>
<def f='llvm/lldb/source/Host/common/File.cpp' l='146' ll='148' type='lldb_private::Status lldb_private::File::Write(const void * src, size_t &amp; num_bytes, off_t &amp; offset)'/>
<ovr f='llvm/lldb/source/Host/common/File.cpp' l='661' c='_ZN12lldb_private10NativeFile5WriteEPKvRmRl'/>
