<dec f='llvm/llvm/include/llvm/ADT/SCCIterator.h' l='131' type='bool llvm::scc_iterator::hasCycle() const'/>
<def f='llvm/llvm/include/llvm/ADT/SCCIterator.h' l='214' ll='225' type='bool llvm::scc_iterator::hasCycle() const'/>
<doc f='llvm/llvm/include/llvm/ADT/SCCIterator.h' l='127'>/// Test if the current SCC has a cycle.
  ///
  /// If the SCC has more than one node, this is trivially true.  If not, it may
  /// still contain a cycle if the node has an edge back to itself.</doc>
<use f='llvm/llvm/lib/IR/ModuleSummaryIndex.cpp' l='325' u='c' c='_ZN4llvm18ModuleSummaryIndex8dumpSCCsERNS_11raw_ostreamE'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='2259' u='c' c='_ZN12_GLOBAL__N_124mayContainUnboundedCycleERN4llvm8FunctionERNS0_10AttributorE'/>
<use f='llvm/llvm/tools/opt/PrintSCC.cpp' l='83' u='c' c='_ZN12_GLOBAL__N_16CFGSCC13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/tools/opt/PrintSCC.cpp' l='105' u='c' c='_ZN12_GLOBAL__N_112CallGraphSCC11runOnModuleERN4llvm6ModuleE'/>
