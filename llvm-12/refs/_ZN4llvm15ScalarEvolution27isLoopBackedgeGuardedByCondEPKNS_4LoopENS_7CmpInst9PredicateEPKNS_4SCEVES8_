<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='705' type='bool llvm::ScalarEvolution::isLoopBackedgeGuardedByCond(const llvm::Loop * L, ICmpInst::Predicate Pred, const llvm::SCEV * LHS, const llvm::SCEV * RHS)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='703'>/// Test whether the backedge of the loop is protected by a conditional
  /// between LHS and RHS.  This is used to eliminate casts.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='1701' u='c' c='_ZN4llvm15ScalarEvolution17getZeroExtendExprEPKNS_4SCEVEPNS_4TypeEj'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='4476' u='c' c='_ZN4llvm15ScalarEvolution29proveNoSignedWrapViaInductionEPKNS_14SCEVAddRecExprE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='4525' u='c' c='_ZN4llvm15ScalarEvolution31proveNoUnsignedWrapViaInductionEPKNS_14SCEVAddRecExprE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9504' u='c' c='_ZN4llvm15ScalarEvolution19isKnownViaInductionENS_7CmpInst9PredicateEPKNS_4SCEVES5_'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9537' u='c' c='_ZN4llvm15ScalarEvolution23isKnownOnEveryIterationENS_7CmpInst9PredicateEPKNS_14SCEVAddRecExprEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9646' u='c' c='_ZN4llvm15ScalarEvolution25getLoopInvariantPredicateENS_7CmpInst9PredicateEPKNS_4SCEVES5_PKNS_4LoopE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9697' u='c' c='_ZN4llvm15ScalarEvolution45getLoopInvariantExitCondDuringFirstIterationsENS_7CmpInst9PredicateEPKNS_4SCEVES5_PKNS_4LoopEPKNS_11InstructionES5_'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9863' ll='9971' type='bool llvm::ScalarEvolution::isLoopBackedgeGuardedByCond(const llvm::Loop * L, ICmpInst::Predicate Pred, const llvm::SCEV * LHS, const llvm::SCEV * RHS)'/>
<doc f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9860'>/// isLoopBackedgeGuardedByCond - Test whether the backedge of the loop is
/// protected by a conditional between LHS and RHS.  This is used to
/// to eliminate casts.</doc>
