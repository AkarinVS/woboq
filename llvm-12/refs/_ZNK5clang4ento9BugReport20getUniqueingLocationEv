<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporter.h' l='191' type='clang::ento::PathDiagnosticLocation clang::ento::BugReport::getUniqueingLocation() const'/>
<ovr f='llvm/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporter.h' l='274' c='_ZNK5clang4ento14BasicBugReport20getUniqueingLocationEv'/>
<ovr f='llvm/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporter.h' l='414' c='_ZNK5clang4ento22PathSensitiveBugReport20getUniqueingLocationEv'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporter.h' l='182'>/// Get the location on which the report should be uniqued. Two warnings are
  /// considered to be equivalent whenever they have the same bug types,
  /// descriptions, and uniqueing locations. Out of a class of equivalent
  /// warnings only one gets displayed to the user. For most warnings the
  /// uniqueing location coincides with their location, but sometimes
  /// it makes sense to use different locations. For example, a leak
  /// checker can place the warning at the location where the last reference
  /// to the leaking resource is dropped but at the same time unique the warning
  /// by where that resource is acquired (allocated).</doc>
