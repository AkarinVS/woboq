<dec f='llvm/lldb/include/lldb/Utility/DataExtractor.h' l='195' type='lldb::offset_t lldb_private::DataExtractor::PutToLog(lldb_private::Log * log, lldb::offset_t offset, lldb::offset_t length, uint64_t base_addr, uint32_t num_per_line, lldb_private::DataExtractor::Type type) const'/>
<doc f='llvm/lldb/include/lldb/Utility/DataExtractor.h' l='167'>/// Dumps the binary data as \a type objects to stream \a s (or to Log() if
  /// \a s is nullptr) starting \a offset bytes into the data and stopping
  /// after dumping \a length bytes. The offset into the data is displayed at
  /// the beginning of each line and can be offset by base address \a
  /// base_addr. \a num_per_line objects will be displayed on each line.
  ///
  /// \param[in] log
  ///     The log to dump the output to.
  ///
  /// \param[in] offset
  ///     The offset into the data at which to start dumping.
  ///
  /// \param[in] length
  ///     The number of bytes to dump.
  ///
  /// \param[in] base_addr
  ///     The base address that gets added to the offset displayed on
  ///     each line.
  ///
  /// \param[in] num_per_line
  ///     The number of \a type objects to display on each line.
  ///
  /// \param[in] type
  ///     The type of objects to use when dumping data from this
  ///     object. See DataExtractor::Type.
  ///
  /// \return
  ///     The offset at which dumping ended.</doc>
<use f='llvm/lldb/source/Expression/IRExecutionUnit.cpp' l='80' u='c' c='_ZN12lldb_private15IRExecutionUnit8WriteNowEPKhmRNS_6StatusE'/>
<use f='llvm/lldb/source/Expression/IRExecutionUnit.cpp' l='191' u='c' c='_ZN12lldb_private15IRExecutionUnit19DisassembleFunctionERNS_6StreamERSt10shared_ptrINS_7ProcessEE'/>
<use f='llvm/lldb/source/Expression/IRExecutionUnit.cpp' l='457' u='c' c='_ZN12lldb_private15IRExecutionUnit15GetRunnableInfoERNS_6StatusERmS3_'/>
<use f='llvm/lldb/source/Expression/IRExecutionUnit.cpp' l='466' u='c' c='_ZN12lldb_private15IRExecutionUnit15GetRunnableInfoERNS_6StatusERmS3_'/>
<def f='llvm/lldb/source/Utility/DataExtractor.cpp' l='905' ll='963' type='lldb::offset_t lldb_private::DataExtractor::PutToLog(lldb_private::Log * log, lldb::offset_t start_offset, lldb::offset_t length, uint64_t base_addr, uint32_t num_per_line, DataExtractor::Type type) const'/>
<doc f='llvm/lldb/source/Utility/DataExtractor.cpp' l='896'>// Dumps bytes from this object&apos;s data to the stream &quot;s&quot; starting
// &quot;start_offset&quot; bytes into this data, and ending with the byte before
// &quot;end_offset&quot;. &quot;base_addr&quot; will be added to the offset into the dumped data
// when showing the offset into the data in the output information.
// &quot;num_per_line&quot; objects of type &quot;type&quot; will be dumped with the option to
// override the format for each object with &quot;type_format&quot;. &quot;type_format&quot; is a
// printf style formatting string. If &quot;type_format&quot; is nullptr, then an
// appropriate format string will be used for the supplied &quot;type&quot;. If the
// stream &quot;s&quot; is nullptr, then the output will be send to Log().</doc>
