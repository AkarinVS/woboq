<def f='llvm/llvm/lib/Analysis/AliasAnalysis.cpp' l='68' type='cl::opt&lt;bool&gt;'/>
<use f='llvm/llvm/lib/Analysis/AliasAnalysis.cpp' l='854' u='m' c='_ZN4llvm20AAResultsWrapperPass13runOnFunctionERNS_8FunctionE'/>
<use f='llvm/llvm/lib/Analysis/AliasAnalysis.cpp' l='915' u='m' c='_ZN4llvm23createLegacyPMAAResultsERNS_4PassERNS_8FunctionERNS_13BasicAAResultE'/>
<doc f='llvm/llvm/lib/Analysis/AliasAnalysis.cpp' l='66'>/// Allow disabling BasicAA from the AA results. This is particularly useful
/// when testing to isolate a single AA implementation.</doc>
<dec f='llvm/llvm/tools/opt/NewPMDriver.cpp' l='128' type='cl::opt&lt;bool&gt;'/>
<use f='llvm/llvm/tools/opt/NewPMDriver.cpp' l='363' u='m' c='_ZN4llvm15runPassPipelineENS_9StringRefERNS_6ModuleEPNS_13TargetMachineEPNS_21TargetLibraryInfoImplEPNS_14ToolOutputFileES8_S8_S0_NS_8ArrayRefIS0_EENS12269778'/>
