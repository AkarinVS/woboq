<dec f='llvm/llvm/include/llvm/IR/Type.h' l='243' type='bool llvm::Type::canLosslesslyBitCastTo(llvm::Type * Ty) const'/>
<doc f='llvm/llvm/include/llvm/IR/Type.h' l='239'>/// Return true if this type could be converted with a lossless BitCast to
  /// type &apos;Ty&apos;. For example, i8* to i32*. BitCasts are valid for types of the
  /// same size only where no re-interpretation of the bits is done.
  /// Determine if this type could be losslessly bitcast to Ty</doc>
<def f='llvm/llvm/lib/IR/Type.cpp' l='63' ll='103' type='bool llvm::Type::canLosslesslyBitCastTo(llvm::Type * Ty) const'/>
<use f='llvm/llvm/lib/IR/Verifier.cpp' l='1878' u='c' c='_ZN12_GLOBAL__N_18Verifier19verifyFunctionAttrsEPN4llvm12FunctionTypeENS1_13AttributeListEPKNS1_5ValueEb'/>
<use f='llvm/llvm/lib/IR/Verifier.cpp' l='3144' u='c' c='_ZN12_GLOBAL__N_18Verifier13visitCallBaseERN4llvm8CallBaseE'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='917' u='c' c='_ZN12_GLOBAL__N_120AAReturnedValuesImpl8manifestERN4llvm10AttributorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='2143' u='c' c='_ZN4llvm16InstCombinerImpl13visitCallBaseERNS_8CallBaseE'/>
