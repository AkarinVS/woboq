<dec f='llvm/clang/include/clang/Sema/Sema.h' l='11535' type='clang::QualType clang::Sema::CXXCheckConditionalOperands(clang::ExprResult &amp; cond, clang::ExprResult &amp; lhs, clang::ExprResult &amp; rhs, clang::ExprValueKind &amp; VK, clang::ExprObjectKind &amp; OK, clang::SourceLocation questionLoc)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='11535'>// C++ 5.16</doc>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='8135' u='c' c='_ZN5clang4Sema24CheckConditionalOperandsERNS_12ActionResultIPNS_4ExprELb1EEES5_S5_RNS_13ExprValueKindERNS_14ExprObjectKindENS_14SourceLocationE'/>
<def f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='6068' ll='6378' type='clang::QualType clang::Sema::CXXCheckConditionalOperands(clang::ExprResult &amp; Cond, clang::ExprResult &amp; LHS, clang::ExprResult &amp; RHS, clang::ExprValueKind &amp; VK, clang::ExprObjectKind &amp; OK, clang::SourceLocation QuestionLoc)'/>
<doc f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='6054'>/// Check the operands of ?: under C++ semantics.
///
/// See C++ [expr.cond]. Note that LHS is never null, even for the GNU x ?: y
/// extension. In this case, LHS == Cond. (But they&apos;re not aliases.)
///
/// This function also implements GCC&apos;s vector extension for conditionals.
///  GCC&apos;s vector extension permits the use of a?b:c where the type of
///  a is that of a integer vector with the same number of elements and
///  size as the vectors of b and c. If one of either b or c is a scalar
///  it is implicitly converted to match the type of the vector.
///  Otherwise the expression is ill-formed. If both b and c are scalars,
///  then b and c are checked and converted to the type of a if possible.
///  Unlike the OpenCL ?: operator, the expression is evaluated as
///  (a[0] != 0 ? b[0] : c[0], .. , a[n] != 0 ? b[n] : c[n]).</doc>
