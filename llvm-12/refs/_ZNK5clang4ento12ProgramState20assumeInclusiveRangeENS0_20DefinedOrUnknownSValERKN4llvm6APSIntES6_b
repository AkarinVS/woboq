<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h' l='203' type='clang::ento::ProgramStateRef clang::ento::ProgramState::assumeInclusiveRange(clang::ento::DefinedOrUnknownSVal Val, const llvm::APSInt &amp; From, const llvm::APSInt &amp; To, bool assumption) const'/>
<def f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h' l='684' ll='694' type='clang::ento::ProgramStateRef clang::ento::ProgramState::assumeInclusiveRange(clang::ento::DefinedOrUnknownSVal Val, const llvm::APSInt &amp; From, const llvm::APSInt &amp; To, bool Assumption) const'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h' l='197'>/// Assumes that the value of \p Val is bounded with [\p From; \p To]
  /// (if \p assumption is &quot;true&quot;) or it is fully out of this range
  /// (if \p assumption is &quot;false&quot;).
  ///
  /// This returns a new state with the added constraint on \p cond.
  /// If no new state is feasible, NULL is returned.</doc>
