<dec f='llvm/llvm/include/llvm/Transforms/Utils/LoopUtils.h' l='467' type='void llvm::appendLoopsToWorklist(llvm::LoopInfo &amp; , SmallPriorityWorklist&lt;llvm::Loop *, 4&gt; &amp; )'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/LoopUtils.h' l='458'>/// Utility that implements appending of loops onto a worklist given LoopInfo.
/// Calls the templated utility taking a Range of loops, handing it the Loops
/// in LoopInfo, iterated in reverse. This is because the loops are stored in
/// RPO w.r.t. the control flow graph in LoopInfo. For the purpose of unrolling,
/// loop deletion, and LICM, we largely want to work forward across the CFG so
/// that we visit defs before uses and can propagate simplifications from one
/// loop nest into the next. Calls appendReversedLoopsToWorklist with the
/// already reversed loops in LI.
/// FIXME: Consider changing the order in LoopInfo.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp' l='1793' u='c' c='_ZN4llvm8IRCEPass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp' l='1833' u='c' c='_ZN12_GLOBAL__N_114IRCELegacyPass13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPassManager.cpp' l='230' u='c' c='_ZN4llvm25FunctionToLoopPassAdaptor3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp' l='449' u='c' c='_ZL21tryToUnrollAndJamLoopRN4llvm8FunctionERNS_13DominatorTreeERNS_8LoopInfoERNS_15ScalarEvolutionERKNS_19TargetTransformInfoERNS_15AssumptionCacheERN10081398'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp' l='1427' u='c' c='_ZN4llvm14LoopUnrollPass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<def f='llvm/llvm/lib/Transforms/Utils/LoopUtils.cpp' l='1548' ll='1551' type='void llvm::appendLoopsToWorklist(llvm::LoopInfo &amp; LI, SmallPriorityWorklist&lt;llvm::Loop *, 4&gt; &amp; Worklist)'/>
