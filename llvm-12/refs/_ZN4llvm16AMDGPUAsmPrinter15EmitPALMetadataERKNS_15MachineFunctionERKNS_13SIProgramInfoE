<dec f='llvm/llvm/lib/Target/AMDGPU/AMDGPUAsmPrinter.h' l='80' type='void llvm::AMDGPUAsmPrinter::EmitPALMetadata(const llvm::MachineFunction &amp; MF, const llvm::SIProgramInfo &amp; KernelInfo)'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUAsmPrinter.cpp' l='451' u='c' c='_ZN4llvm16AMDGPUAsmPrinter20runOnMachineFunctionERNS_15MachineFunctionE'/>
<def f='llvm/llvm/lib/Target/AMDGPU/AMDGPUAsmPrinter.cpp' l='1232' ll='1259' type='void llvm::AMDGPUAsmPrinter::EmitPALMetadata(const llvm::MachineFunction &amp; MF, const llvm::SIProgramInfo &amp; CurrentProgramInfo)'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/AMDGPUAsmPrinter.cpp' l='1227'>// This is the equivalent of EmitProgramInfoSI above, but for when the OS type
// is AMDPAL.  It stores each compute/SPI register setting and other PAL
// metadata items into the PALMD::Metadata, combining with any provided by the
// frontend as LLVM metadata. Once all functions are written, the PAL metadata
// is then written as a single block in the .note section.</doc>
