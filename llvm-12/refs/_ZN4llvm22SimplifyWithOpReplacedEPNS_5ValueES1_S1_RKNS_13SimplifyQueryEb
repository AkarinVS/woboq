<dec f='llvm/llvm/include/llvm/Analysis/InstructionSimplify.h' l='299' type='llvm::Value * llvm::SimplifyWithOpReplaced(llvm::Value * V, llvm::Value * Op, llvm::Value * RepOp, const llvm::SimplifyQuery &amp; Q, bool AllowRefinement)'/>
<doc f='llvm/llvm/include/llvm/Analysis/InstructionSimplify.h' l='295'>/// See if V simplifies when its operand Op is replaced with RepOp. If not,
/// return null.
/// AllowRefinement specifies whether the simplification can be a refinement,
/// or whether it needs to be strictly identical.</doc>
<def f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='4011' ll='4016' type='llvm::Value * llvm::SimplifyWithOpReplaced(llvm::Value * V, llvm::Value * Op, llvm::Value * RepOp, const llvm::SimplifyQuery &amp; Q, bool AllowRefinement)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='1117' u='c' c='_ZN4llvm16InstCombinerImpl26foldSelectValueEquivalenceERNS_10SelectInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='1139' u='c' c='_ZN4llvm16InstCombinerImpl26foldSelectValueEquivalenceERNS_10SelectInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='1170' u='c' c='_ZN4llvm16InstCombinerImpl26foldSelectValueEquivalenceERNS_10SelectInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='1172' u='c' c='_ZN4llvm16InstCombinerImpl26foldSelectValueEquivalenceERNS_10SelectInstERNS_8ICmpInstE'/>
