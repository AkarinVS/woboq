<def f='llvm/polly/lib/External/isl/isl_pw_union_opt.c' l='145' macro='1' type='isl_stat isl_pw_aff_union_opt_cmp_pair(struct isl_pw_aff_union_opt_cmp_data * data_i, int i, struct isl_pw_aff_union_opt_cmp_data * data_j, int j, isl_map *(*)(isl_aff *, isl_aff *) cmp)'/>
<use f='llvm/polly/lib/External/isl/isl_pw_union_opt.c' l='195' macro='1' u='c' c='isl_pw_aff_union_opt_cmp_two'/>
<use f='llvm/polly/lib/External/isl/isl_pw_union_opt.c' l='210' macro='1' u='c' c='isl_pw_aff_union_opt_cmp_two'/>
<doc f='llvm/polly/lib/External/isl/isl_pw_union_opt.c' l='139'>/* Given (potentially) updated cells &quot;i&quot; of data_i-&gt;pw and &quot;j&quot; of data_j-&gt;pw and
 * a function &quot;cmp&quot; that returns the set of elements where
 * &quot;el1&quot; is &quot;better&quot; than &quot;el2&quot;,
 * (further) update the specified cells such that only the &quot;better&quot; elements
 * remain on the (non-empty) intersection.
 */</doc>
