<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_deadlock_detector.h' l='154' ll='179' type='__sanitizer::uptr __sanitizer::DeadlockDetector::newNode(__sanitizer::uptr data)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_deadlock_detector1.cpp' l='99' u='c' c='__sanitizer::DD::MutexEnsureID'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_deadlock_detector.h' l='150'>// Allocate new deadlock detector node.
  // If we are out of available nodes first try to recycle some.
  // If there is nothing to recycle, flush the graph and increment the epoch.
  // Associate &apos;data&apos; (opaque user&apos;s object) with the new node.</doc>
