<dec f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='154' type='bool __sanitizer::MemoryRangeIsAvailable(__sanitizer::uptr range_start, __sanitizer::uptr range_end)'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='153'>// Used to check if we can map shadow memory to a fixed location.</doc>
<use f='llvm/compiler-rt/lib/asan/asan_shadow_setup.cpp' l='77' u='c' c='__asan::InitializeShadowMemory'/>
<use f='llvm/compiler-rt/lib/asan/asan_shadow_setup.cpp' l='99' u='c' c='__asan::InitializeShadowMemory'/>
<use f='llvm/compiler-rt/lib/asan/asan_shadow_setup.cpp' l='100' u='c' c='__asan::InitializeShadowMemory'/>
<use f='llvm/compiler-rt/lib/msan/msan_linux.cpp' l='47' u='c' c='__msan::CheckMemoryRangeAvailability'/>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_posix.cpp' l='227' ll='240' type='bool __sanitizer::MemoryRangeIsAvailable(__sanitizer::uptr range_start, __sanitizer::uptr range_end)'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_posix.cpp' l='223'>// FIXME: this is thread-unsafe, but should not cause problems most of the time.
// When the shadow is mapped only a single thread usually exists (plus maybe
// several worker threads on Mac, which aren&apos;t expected to map big chunks of
// memory).</doc>
