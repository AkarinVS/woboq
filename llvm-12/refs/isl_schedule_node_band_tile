<dec f='llvm/polly/lib/External/isl/include/isl/schedule_node.h' l='182' type='isl_schedule_node * isl_schedule_node_band_tile(isl_schedule_node * node, isl_multi_val * sizes)'/>
<def f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='1988' ll='2014' type='isl_schedule_node * isl_schedule_node_band_tile(isl_schedule_node * node, isl_multi_val * sizes)'/>
<doc f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='1965'>/* Tile &quot;node&quot; with tile sizes &quot;sizes&quot;.
 *
 * The current node is replaced by two nested nodes corresponding
 * to the tile dimensions and the point dimensions.
 *
 * Return a pointer to the outer (tile) node.
 *
 * If any of the descendants of &quot;node&quot; depend on the set of outer band nodes,
 * then we refuse to tile the node.
 *
 * If the scale tile loops option is set, then the tile loops
 * are scaled by the tile sizes.  If the shift point loops option is set,
 * then the point loops are shifted to start at zero.
 * In particular, these options affect the tile and point loop schedules
 * as follows
 *
 *	scale	shift	original	tile		point
 *
 *	0	0	i		floor(i/s)	i
 *	1	0	i		s * floor(i/s)	i
 *	0	1	i		floor(i/s)	i - s * floor(i/s)
 *	1	1	i		s * floor(i/s)	i - s * floor(i/s)
 */</doc>
<use f='llvm/polly/lib/External/isl/isl_test.c' l='10624' u='c' c='test_tile'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='2815' u='c' c='tile_band'/>
<use f='llvm/polly/lib/Transform/ScheduleOptimizer.cpp' l='418' u='c' c='_ZN21ScheduleTreeOptimizer16prevectSchedBandEN3isl12noexceptions13schedule_nodeEji'/>
<use f='llvm/polly/lib/Transform/ScheduleOptimizer.cpp' l='452' u='c' c='_ZN21ScheduleTreeOptimizer8tileNodeEN3isl12noexceptions13schedule_nodeEPKcN4llvm8ArrayRefIiEEi'/>
