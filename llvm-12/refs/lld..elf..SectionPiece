<def f='llvm/lld/ELF/InputSection.h' l='257' ll='265'/>
<use f='llvm/lld/ELF/InputSection.h' l='267'/>
<use f='llvm/lld/ELF/InputSection.h' l='287'/>
<use f='llvm/lld/ELF/InputSection.h' l='300' c='_ZN3lld3elf17MergeInputSection15getSectionPieceEm'/>
<use f='llvm/lld/ELF/InputSection.h' l='301' c='_ZNK3lld3elf17MergeInputSection15getSectionPieceEm'/>
<size>16</size>
<doc f='llvm/lld/ELF/InputSection.h' l='253'>// SectionPiece represents a piece of splittable section contents.
// We allocate a lot of these and binary search on them. This means that they
// have to be as compact as possible, which is why we don&apos;t store the size (can
// be found by looking at the next one).</doc>
<fun r='_ZN3lld3elf12SectionPieceC1Emjb'/>
<mbr r='lld::elf::SectionPiece::inputOff' o='0' t='uint32_t'/>
<mbr r='lld::elf::SectionPiece::live' o='32' t='uint32_t'/>
<mbr r='lld::elf::SectionPiece::hash' o='33' t='uint32_t'/>
<mbr r='lld::elf::SectionPiece::outputOff' o='64' t='uint64_t'/>
<use f='llvm/lld/ELF/InputSection.cpp' l='1415' c='_ZN3lld3elf17MergeInputSection15getSectionPieceEm'/>
<use f='llvm/lld/ELF/InputSection.cpp' l='1422' c='_ZN3lld3elf17MergeInputSection15getSectionPieceEm'/>
<use f='llvm/lld/ELF/InputSection.cpp' l='1432' c='_ZNK3lld3elf17MergeInputSection15getParentOffsetEm'/>
<size>16</size>
