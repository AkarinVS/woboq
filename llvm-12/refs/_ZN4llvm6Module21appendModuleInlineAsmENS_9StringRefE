<def f='llvm/llvm/include/llvm/IR/Module.h' l='304' ll='308' type='void llvm::Module::appendModuleInlineAsm(llvm::StringRef Asm)'/>
<doc f='llvm/llvm/include/llvm/IR/Module.h' l='302'>/// Append to the module-scope inline assembly blocks.
  /// A trailing newline is added if the input doesn&apos;t have one.</doc>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='5751' u='c' c='_ZN5clang7CodeGen13CodeGenModule16EmitTopLevelDeclEPNS_4DeclE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='419' u='c' c='_ZN4llvm8LLParser14parseModuleAsmEv'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='438' u='c' c='LLVMAppendModuleInlineAsm'/>
<use f='llvm/llvm/lib/Linker/IRMover.cpp' l='1481' u='c' c='_ZN12_GLOBAL__N_18IRLinker3runEv'/>
<use f='llvm/llvm/lib/Linker/IRMover.cpp' l='1492' u='c' c='_ZN12_GLOBAL__N_18IRLinker3runEv'/>
<use f='llvm/llvm/lib/Transforms/IPO/LowerTypeTests.cpp' l='2247' u='c' c='_ZN12_GLOBAL__N_120LowerTypeTestsModule5lowerEv'/>
