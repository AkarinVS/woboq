<dec f='llvm/polly/lib/External/isl/include/isl/schedule_node.h' l='271' type='isl_schedule_node * isl_schedule_node_order_before(isl_schedule_node * node, isl_union_set * filter)'/>
<use f='llvm/polly/lib/External/isl/include/isl/isl-noexceptions.h' l='14414' u='c' c='_ZNK3isl12noexceptions13schedule_node12order_beforeENS0_9union_setE'/>
<def f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='4617' ll='4621' type='isl_schedule_node * isl_schedule_node_order_before(isl_schedule_node * node, isl_union_set * filter)'/>
<doc f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='4610'>/* Split the domain elements that reach &quot;node&quot; into those that satisfy
 * &quot;filter&quot; and those that do not.  Arrange for the first subset to be
 * executed before the second subset.
 * Return a pointer to the tree corresponding to the second subset,
 * except when this subset is empty in which case the original pointer
 * is returned.
 */</doc>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='4286' u='c' c='isolate_permutable_subtrees'/>
