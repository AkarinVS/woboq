<def f='llvm/compiler-rt/lib/lsan/lsan_common.h' l='176' ll='179'/>
<size>1</size>
<doc f='llvm/compiler-rt/lib/lsan/lsan_common.h' l='174'>// Can be used to ignore memory allocated by an intercepted
// function.</doc>
<fun r='__lsan::ScopedInterceptorDisabler::ScopedInterceptorDisabler'/>
<fun r='__lsan::ScopedInterceptorDisabler::~ScopedInterceptorDisabler'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='3735' macro='1' c='__interceptor_strerror'/>
<use f='llvm/compiler-rt/lib/asan/asan_interceptors.cpp' l='221' c='__interceptor_pthread_create'/>
<use f='llvm/compiler-rt/lib/asan/asan_interceptors.cpp' l='568' c='__interceptor___cxa_atexit'/>
<size>1</size>
<use f='llvm/compiler-rt/lib/asan/asan_rtl.cpp' l='521' c='__asan::AsanInitInternal'/>
<size>1</size>
<use f='llvm/compiler-rt/lib/lsan/lsan_interceptors.cpp' l='398' c='__interceptor_strerror'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_interceptors.cpp' l='457' c='__interceptor_pthread_create'/>
<size>1</size>
