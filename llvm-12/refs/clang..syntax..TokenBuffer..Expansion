<def f='llvm/clang/include/clang/Tooling/Syntax/Tokens.h' l='269' ll='272'/>
<use f='llvm/clang/include/clang/Tooling/Syntax/Tokens.h' l='276' c='_ZNK5clang6syntax11TokenBuffer19expansionStartingAtEPKNS0_5TokenE'/>
<use f='llvm/clang/include/clang/Tooling/Syntax/Tokens.h' l='280' c='_ZNK5clang6syntax11TokenBuffer21expansionsOverlappingEN4llvm8ArrayRefINS0_5TokenEEE'/>
<use f='llvm/clang/include/clang/Tooling/Syntax/Tokens.h' l='360' c='_ZNK5clang6syntax11TokenBuffer13makeExpansionERKNS1_10MarkedFileERKNS1_7MappingE'/>
<size>32</size>
<doc f='llvm/clang/include/clang/Tooling/Syntax/Tokens.h' l='260'>/// An expansion produced by the preprocessor, includes macro expansions and
  /// preprocessor directives. Preprocessor always maps a non-empty range of
  /// spelled tokens to a (possibly empty) range of expanded tokens. Here is a
  /// few examples of expansions:
  ///    #pragma once      // Expands to an empty range.
  ///    #define FOO 1 2 3 // Expands an empty range.
  ///    FOO               // Expands to &quot;1 2 3&quot;.
  /// FIXME(ibiryukov): implement this, currently #include expansions are empty.
  ///    #include &lt;vector&gt; // Expands to tokens produced by the include.</doc>
<mbr r='clang::syntax::TokenBuffer::Expansion::Spelled' o='0' t='llvm::ArrayRef&lt;syntax::Token&gt;'/>
<mbr r='clang::syntax::TokenBuffer::Expansion::Expanded' o='128' t='llvm::ArrayRef&lt;syntax::Token&gt;'/>
<use f='llvm/clang/lib/Tooling/Syntax/Tokens.cpp' l='383' c='_ZNK5clang6syntax11TokenBuffer13makeExpansionERKNS1_10MarkedFileERKNS1_7MappingE'/>
<use f='llvm/clang/lib/Tooling/Syntax/Tokens.cpp' l='385' c='_ZNK5clang6syntax11TokenBuffer13makeExpansionERKNS1_10MarkedFileERKNS1_7MappingE'/>
<use f='llvm/clang/lib/Tooling/Syntax/Tokens.cpp' l='412' c='_ZNK5clang6syntax11TokenBuffer19expansionStartingAtEPKNS0_5TokenE'/>
<use f='llvm/clang/lib/Tooling/Syntax/Tokens.cpp' l='426' c='_ZNK5clang6syntax11TokenBuffer21expansionsOverlappingEN4llvm8ArrayRefINS0_5TokenEEE'/>
<use f='llvm/clang/lib/Tooling/Syntax/Tokens.cpp' l='438' c='_ZNK5clang6syntax11TokenBuffer21expansionsOverlappingEN4llvm8ArrayRefINS0_5TokenEEE'/>
<size>32</size>
<use f='llvm/clang/unittests/Tooling/Syntax/TokensTest.cpp' l='74' c='_ZN12_GLOBAL__N_111IsExpansionEN7testing7MatcherIN4llvm8ArrayRefIN5clang6syntax5TokenEEEEES8_'/>
<size>32</size>
