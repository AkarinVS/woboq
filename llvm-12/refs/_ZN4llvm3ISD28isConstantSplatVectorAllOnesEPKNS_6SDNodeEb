<dec f='llvm/llvm/include/llvm/CodeGen/SelectionDAGNodes.h' l='96' type='bool llvm::ISD::isConstantSplatVectorAllOnes(const llvm::SDNode * N, bool BuildVectorOnly = false)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/SelectionDAGNodes.h' l='93'>/// Return true if the specified node is a BUILD_VECTOR or SPLAT_VECTOR where
/// all of the elements are ~0 or undef. If \p BuildVectorOnly is set to
/// true, it only checks BUILD_VECTOR.</doc>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='167' ll='214' type='bool llvm::ISD::isConstantSplatVectorAllOnes(const llvm::SDNode * N, bool BuildVectorOnly = false)'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='259' u='c' c='_ZN4llvm3ISD20isBuildVectorAllOnesEPKNS_6SDNodeE'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='164'>// FIXME: AllOnes and AllZeros duplicate a lot of code. Could these be
// specializations of the more general isConstantSplatVector()?</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp' l='3205' u='c' c='_ZN4llvm16SelectionDAGISel16SelectCodeCommonEPNS_6SDNodeEPKhj'/>
