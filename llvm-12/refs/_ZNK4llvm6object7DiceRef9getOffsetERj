<dec f='llvm/llvm/include/llvm/Object/MachO.h' l='56' type='std::error_code llvm::object::DiceRef::getOffset(uint32_t &amp; Result) const'/>
<def f='llvm/llvm/include/llvm/Object/MachO.h' l='704' ll='710' type='std::error_code llvm::object::DiceRef::getOffset(uint32_t &amp; Result) const'/>
<doc f='llvm/llvm/include/llvm/Object/MachO.h' l='700'>// Since a Mach-O data in code reference, a DiceRef, can only be created when
// the OwningObject ObjectFile is a MachOObjectFile a static_cast&lt;&gt; is used for
// the methods that get the values of the fields of the reference.</doc>
<use f='llvm/llvm/tools/llvm-objdump/MachODump.cpp' l='1115' u='c' c='_ZL20PrintDataInCodeTablePN4llvm6object15MachOObjectFileEb'/>
<use f='llvm/llvm/tools/llvm-objdump/MachODump.cpp' l='7349' u='c' c='_ZL16DisassembleMachON4llvm9StringRefEPNS_6object15MachOObjectFileES0_S0_'/>
