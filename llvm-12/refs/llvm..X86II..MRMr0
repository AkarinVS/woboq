<dec f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h' l='632' type='21'/>
<use f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h' l='1126' c='_ZN4llvm5X86II18getMemoryOperandNoEm'/>
<doc f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h' l='626'>/// MRM[0-7][rm] - These forms are used to represent instructions that use
    /// a Mod/RM byte, and use the middle field to hold extended opcode
    /// information.  In the intel manual these are represented as /0, /1, ...
    ///

    // Instructions operate on a register Reg/Opcode operand not the r/m field.</doc>
<use f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp' l='1107' c='_ZNK12_GLOBAL__N_116X86MCCodeEmitter19emitVEXOpcodePrefixEiRKN4llvm6MCInstERNS1_11raw_ostreamE'/>
<use f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp' l='1300' c='_ZNK12_GLOBAL__N_116X86MCCodeEmitter13emitREXPrefixEiRKN4llvm6MCInstERKNS1_15MCSubtargetInfoERNS1_11raw_ostreamE'/>
<use f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp' l='1679' c='_ZNK12_GLOBAL__N_116X86MCCodeEmitter17encodeInstructionERKN4llvm6MCInstERNS1_11raw_ostreamERNS1_15SmallVectorImplINS1_7MCFixupEEERKNS1_15MCSubtargetInfoE'/>
<use f='llvm/llvm/tools/llvm-exegesis/lib/X86/Target.cpp' l='72' c='_ZN4llvm8exegesisL20isInvalidMemoryInstrERKNS0_11InstructionE'/>
