<dec f='llvm/polly/lib/External/ppcg/gpu_tree.h' l='28' type='isl_schedule_node * gpu_tree_move_left_to_sync(isl_schedule_node * node, struct ppcg_kernel * kernel)'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='3280' u='c' c='add_group_write_sync'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='3571' u='c' c='add_copies_group_shared'/>
<def f='llvm/polly/lib/External/ppcg/gpu_tree.c' l='591' ll='611' type='isl_schedule_node * gpu_tree_move_left_to_sync(isl_schedule_node * node, struct ppcg_kernel * kernel)'/>
<doc f='llvm/polly/lib/External/ppcg/gpu_tree.c' l='584'>/* Move left in the sequence on top of &quot;node&quot; to a synchronization node
 * for &quot;kernel&quot;.
 * If &quot;node&quot; itself contains a synchronization node preceding
 * the core computation of &quot;kernel&quot;, then return &quot;node&quot; itself.
 * Otherwise, if &quot;node&quot; does not have a preceding synchronization node,
 * then create one first.
 */</doc>
