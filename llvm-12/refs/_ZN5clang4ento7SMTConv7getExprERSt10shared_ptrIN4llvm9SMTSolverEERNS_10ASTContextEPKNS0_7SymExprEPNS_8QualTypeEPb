<def f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h' l='465' ll='474' type='static llvm::SMTExprRef clang::ento::SMTConv::getExpr(llvm::SMTSolverRef &amp; Solver, clang::ASTContext &amp; Ctx, clang::ento::SymbolRef Sym, clang::QualType * RetTy = nullptr, bool * hasComparison = nullptr)'/>
<use f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h' l='519' u='c' c='_ZN5clang4ento7SMTConv12getRangeExprERSt10shared_ptrIN4llvm9SMTSolverEERNS_10ASTContextEPKNS0_7SymExprERKNS3_6APSIntESE_b'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h' l='461'>// Generate an SMTSolverRef that represents the given symbolic expression.
  // Sets the hasComparison parameter if the expression has a comparison
  // operator. Sets the RetTy parameter to the final return type after
  // promotions and casts.</doc>
<use f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConstraintManager.h' l='51' u='c' c='_ZN5clang4ento20SMTConstraintManager9assumeSymEN4llvm18IntrusiveRefCntPtrIKNS0_12ProgramStateEEEPKNS0_7SymExprEb'/>
<use f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConstraintManager.h' l='87' u='c' c='_ZN5clang4ento20SMTConstraintManager9checkNullEN4llvm18IntrusiveRefCntPtrIKNS0_12ProgramStateEEEPKNS0_7SymExprE'/>
