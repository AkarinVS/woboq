<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='6415' macro='1' type='int sem_init(__sanitizer::__sanitizer_sem_t * s, int pshared, unsigned int value)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='6484' u='a' c='_ZL28InitializeCommonInterceptorsv'/>
<dec f='include/semaphore.h' l='35' type='int sem_init(sem_t * __sem, int __pshared, unsigned int __value)'/>
<use f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_x86_64/include/c++/v1/__threading_support' l='455' u='c' c='_ZNSt8__Fuzzer23__libcpp_semaphore_initEP5sem_ti'/>
<doc f='include/semaphore.h' l='33'>/* Initialize semaphore object SEM to VALUE.  If PSHARED then share it
   with other processes.  */</doc>
<use f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_i386/include/c++/v1/__threading_support' l='455' u='c' c='_ZNSt8__Fuzzer23__libcpp_semaphore_initEP5sem_ti'/>
<use f='llvm/build/include/c++/v1/__threading_support' l='455' u='c' c='_ZNSt3__123__libcpp_semaphore_initEP5sem_ti'/>
<use f='llvm/libcxx/include/__threading_support' l='455' u='c' c='_ZNSt3__123__libcpp_semaphore_initEP5sem_ti'/>
