<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='732' type='llvm::Value * llvm::InstCombinerImpl::Descale(llvm::Value * Val, llvm::APInt Scale, bool &amp; NoSignedWrap)'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='729'>/// Returns a value X such that Val = X * Scale, or null if none.
  ///
  /// If the multiplication is known not to overflow then NoSignedWrap is set.</doc>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='1300' ll='1538' type='llvm::Value * llvm::InstCombinerImpl::Descale(llvm::Value * Val, llvm::APInt Scale, bool &amp; NoSignedWrap)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='2313' u='c' c='_ZN4llvm16InstCombinerImpl22visitGetElementPtrInstERNS_17GetElementPtrInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='2355' u='c' c='_ZN4llvm16InstCombinerImpl22visitGetElementPtrInstERNS_17GetElementPtrInstE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='1298'>/// Return a value X such that Val = X * Scale, or null if none.
/// If the multiplication is known not to overflow, then NoSignedWrap is set.</doc>
