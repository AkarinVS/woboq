<dec f='llvm/llvm/include/llvm/MC/MCAssembler.h' l='236' type='uint64_t llvm::MCAssembler::computeFragmentSize(const llvm::MCAsmLayout &amp; Layout, const llvm::MCFragment &amp; F) const'/>
<doc f='llvm/llvm/include/llvm/MC/MCAssembler.h' l='234'>/// Compute the effective fragment size assuming it is laid out at the given
  /// \p SectionAddress and \p FragmentOffset.</doc>
<def f='llvm/llvm/lib/MC/MCAssembler.cpp' l='289' ll='393' type='uint64_t llvm::MCAssembler::computeFragmentSize(const llvm::MCAsmLayout &amp; Layout, const llvm::MCFragment &amp; F) const'/>
<use f='llvm/llvm/lib/MC/MCAssembler.cpp' l='412' u='c' c='_ZN4llvm11MCAsmLayout14layoutFragmentEPNS_10MCFragmentE'/>
<use f='llvm/llvm/lib/MC/MCAssembler.cpp' l='449' u='c' c='_ZN4llvm11MCAsmLayout14layoutFragmentEPNS_10MCFragmentE'/>
<use f='llvm/llvm/lib/MC/MCAssembler.cpp' l='511' u='c' c='_ZL13writeFragmentRN4llvm11raw_ostreamERKNS_11MCAssemblerERKNS_11MCAsmLayoutERKNS_10MCFragmentE'/>
<use f='llvm/llvm/lib/MC/MCAssembler.cpp' l='1088' u='c' c='_ZN4llvm11MCAssembler18relaxBoundaryAlignERNS_11MCAsmLayoutERNS_23MCBoundaryAlignFragmentE'/>
<use f='llvm/llvm/lib/MC/MCAssembler.cpp' l='1271' u='c' c='_ZN4llvm11MCAssembler12finishLayoutERNS_11MCAsmLayoutE'/>
<use f='llvm/llvm/lib/MC/MCFragment.cpp' l='197' u='c' c='_ZNK4llvm11MCAsmLayout21getSectionAddressSizeEPKNS_9MCSectionE'/>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonAsmBackend.cpp' l='721' u='c' c='_ZNK12_GLOBAL__N_117HexagonAsmBackend12finishLayoutERKN4llvm11MCAssemblerERNS1_11MCAsmLayoutE'/>
<use f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp' l='1008' u='c' c='_ZNK12_GLOBAL__N_113X86AsmBackend12finishLayoutERKN4llvm11MCAssemblerERNS1_11MCAsmLayoutE'/>
<use f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp' l='1071' u='c' c='_ZNK12_GLOBAL__N_113X86AsmBackend12finishLayoutERKN4llvm11MCAssemblerERNS1_11MCAsmLayoutE'/>
