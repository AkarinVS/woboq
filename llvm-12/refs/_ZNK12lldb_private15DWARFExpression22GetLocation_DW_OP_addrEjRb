<dec f='llvm/lldb/include/lldb/Expression/DWARFExpression.h' l='114' type='lldb::addr_t lldb_private::DWARFExpression::GetLocation_DW_OP_addr(uint32_t op_addr_idx, bool &amp; error) const'/>
<doc f='llvm/lldb/include/lldb/Expression/DWARFExpression.h' l='95'>/// If a location is not a location list, return true if the location
  /// contains a DW_OP_addr () opcode in the stream that matches \a file_addr.
  /// If file_addr is LLDB_INVALID_ADDRESS, the this function will return true
  /// if the variable there is any DW_OP_addr in a location that (yet still is
  /// NOT a location list). This helps us detect if a variable is a global or
  /// static variable since there is no other indication from DWARF debug
  /// info.
  ///
  /// \param[in] op_addr_idx
  ///     The DW_OP_addr index to retrieve in case there is more than
  ///     one DW_OP_addr opcode in the location byte stream.
  ///
  /// \param[out] error
  ///     If the location stream contains unknown DW_OP opcodes or the
  ///     data is missing, \a error will be set to \b true.
  ///
  /// \return
  ///     LLDB_INVALID_ADDRESS if the location doesn&apos;t contain a
  ///     DW_OP_addr for \a op_addr_idx, otherwise a valid file address</doc>
<def f='llvm/lldb/source/Expression/DWARFExpression.cpp' l='412' ll='449' type='lldb::addr_t lldb_private::DWARFExpression::GetLocation_DW_OP_addr(uint32_t op_addr_idx, bool &amp; error) const'/>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/SymbolFileDWARF.cpp' l='3283' u='c' c='_ZN15SymbolFileDWARF16ParseVariableDIEERKN12lldb_private13SymbolContextERK8DWARFDIEm'/>
