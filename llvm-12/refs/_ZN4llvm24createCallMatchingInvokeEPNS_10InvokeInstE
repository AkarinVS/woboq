<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='235' type='llvm::CallInst * llvm::createCallMatchingInvoke(llvm::InvokeInst * II)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='231'>/// Create a call that matches the invoke \p II in terms of arguments,
/// attributes, debug information, etc. The call is not placed in a block and it
/// will not have a name. The invoke instruction is not removed, nor are the
/// uses replaced by the new call.</doc>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='2096' ll='2119' type='llvm::CallInst * llvm::createCallMatchingInvoke(llvm::InvokeInst * II)'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='2123' u='c' c='_ZN4llvm12changeToCallEPNS_10InvokeInstEPNS_14DomTreeUpdaterE'/>
