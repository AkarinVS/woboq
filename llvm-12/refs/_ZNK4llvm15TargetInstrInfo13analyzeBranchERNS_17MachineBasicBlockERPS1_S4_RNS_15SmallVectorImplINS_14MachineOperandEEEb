<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='612' ll='617' type='bool llvm::TargetInstrInfo::analyzeBranch(llvm::MachineBasicBlock &amp; MBB, llvm::MachineBasicBlock *&amp; TBB, llvm::MachineBasicBlock *&amp; FBB, SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp; Cond, bool AllowModify = false) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='585'>/// Analyze the branching code at the end of MBB, returning
  /// true if it cannot be understood (e.g. it&apos;s a switch dispatch or isn&apos;t
  /// implemented for a target).  Upon success, this returns false and returns
  /// with the following information in various cases:
  ///
  /// 1. If this block ends with no branches (it just falls through to its succ)
  ///    just return false, leaving TBB/FBB null.
  /// 2. If this block ends with only an unconditional branch, it sets TBB to be
  ///    the destination block.
  /// 3. If this block ends with a conditional branch and it falls through to a
  ///    successor block, it sets TBB to be the branch destination block and a
  ///    list of operands that evaluate the condition. These operands can be
  ///    passed to other TargetInstrInfo methods to create new branches.
  /// 4. If this block ends with a conditional branch followed by an
  ///    unconditional branch, it returns the &apos;true&apos; destination in TBB, the
  ///    &apos;false&apos; destination in FBB, and a list of operands that evaluate the
  ///    condition.  These operands can be passed to other TargetInstrInfo
  ///    methods to create new branches.
  ///
  /// Note that removeBranch and insertBranch must be implemented to support
  /// cases where this method returns success.
  ///
  /// If AllowModify is true, then this routine is allowed to modify the basic
  /// block (e.g. delete instructions after the unconditional branch).
  ///
  /// The CFG information in MBB.Predecessors and MBB.Successors must be valid
  /// before calling this function.</doc>
<use f='llvm/llvm/lib/CodeGen/BasicBlockSections.cpp' l='183' u='c' c='_ZL14updateBranchesRN4llvm15MachineFunctionERKNS_11SmallVectorIPNS_17MachineBasicBlockELj4EEE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='460' u='c' c='_ZL7FixTailPN4llvm17MachineBasicBlockES1_PKNS_15TargetInstrInfoE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1096' u='c' c='_ZN4llvm12BranchFolder15TailMergeBlocksERNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1335' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1377' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1520' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1626' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1672' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1738' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1892' u='c' c='_ZN4llvm12BranchFolder22HoistCommonCodeInSuccsEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchRelaxation.cpp' l='334' u='c' c='_ZN12_GLOBAL__N_116BranchRelaxation22fixupConditionalBranchERN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/EarlyIfConversion.cpp' l='485' u='c' c='_ZN12_GLOBAL__N_19SSAIfConv12canConvertIfEPN4llvm17MachineBasicBlockEb'/>
<use f='llvm/llvm/lib/CodeGen/IfConversion.cpp' l='1031' u='c' c='_ZN12_GLOBAL__N_111IfConverter15AnalyzeBranchesERNS0_6BBInfoE'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='636' u='c' c='_ZN4llvm17MachineBasicBlock16updateTerminatorEPS0_'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='914' u='c' c='_ZN4llvm17MachineBasicBlock14getFallThroughEv'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='1252' u='c' c='_ZNK4llvm17MachineBasicBlock20canSplitCriticalEdgeEPKS0_'/>
<use f='llvm/llvm/lib/CodeGen/MachineBlockPlacement.cpp' l='2674' u='c' c='_ZN12_GLOBAL__N_121MachineBlockPlacement14buildCFGChainsEv'/>
<use f='llvm/llvm/lib/CodeGen/MachineBlockPlacement.cpp' l='2808' u='c' c='_ZN12_GLOBAL__N_121MachineBlockPlacement14buildCFGChainsEv'/>
<use f='llvm/llvm/lib/CodeGen/MachineBlockPlacement.cpp' l='2816' u='c' c='_ZN12_GLOBAL__N_121MachineBlockPlacement14buildCFGChainsEv'/>
<use f='llvm/llvm/lib/CodeGen/MachineBlockPlacement.cpp' l='2838' u='c' c='_ZN12_GLOBAL__N_121MachineBlockPlacement16optimizeBranchesEv'/>
<use f='llvm/llvm/lib/CodeGen/MachineLICM.cpp' l='889' u='c' c='_ZN12_GLOBAL__N_115MachineLICMBase15InitRegPressureEPN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/MachineLoopUtils.cpp' l='121' u='c' c='_ZN4llvm19PeelSingleBlockLoopENS_17LoopPeelDirectionEPNS_17MachineBasicBlockERNS_19MachineRegisterInfoEPKNS_15TargetInstrInfoE'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='344' u='c' c='_ZN4llvm16MachinePipeliner15canPipelineLoopERNS_11MachineLoopE'/>
<use f='llvm/llvm/lib/CodeGen/MachineVerifier.cpp' l='646' u='c' c='_ZN12_GLOBAL__N_115MachineVerifier28visitMachineBasicBlockBeforeEPKN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='257' u='c' c='_ZN4llvm22ModuloScheduleExpander14generateEpilogEjPNS_17MachineBasicBlockEPNS_8DenseMapIjjNS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjjEEEERNS_15Sm12866009'/>
<use f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='1875' u='c' c='_ZN4llvm29PeelingModuloScheduleExpander23CreateLCSSAExitingBlockEv'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='582' u='c' c='_ZN4llvm14TailDuplicator19shouldTailDuplicateEbRNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='708' u='c' c='_ZN4llvm14TailDuplicator24canCompletelyDuplicateBBERNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='734' u='c' c='_ZN4llvm14TailDuplicator17duplicateSimpleBBEPNS_17MachineBasicBlockERNS_15SmallVectorImplIS2_EERKNS_8DenseSetINS_8RegisterENS_12DenseMapInfoIS7_EEEERN11649687'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='798' u='c' c='_ZN4llvm14TailDuplicator16canTailDuplicateEPNS_17MachineBasicBlockES2_'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='918' u='c' c='_ZN4llvm14TailDuplicator13tailDuplicateEbPNS_17MachineBasicBlockES2_RNS_15SmallVectorImplIS2_EERNS3_IPNS_12MachineInstrEEEPS4_'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64A53Fix835769.cpp' l='144' u='c' c='_ZL18getBBFallenThroughPN4llvm17MachineBasicBlockEPKNS_15TargetInstrInfoE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ConditionOptimizer.cpp' l='350' u='c' c='_ZN12_GLOBAL__N_125AArch64ConditionOptimizer20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ConditionOptimizer.cpp' l='361' u='c' c='_ZN12_GLOBAL__N_125AArch64ConditionOptimizer20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp' l='502' u='c' c='_ZN12_GLOBAL__N_111SSACCmpConv10canConvertEPN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp' l='531' u='c' c='_ZN12_GLOBAL__N_111SSACCmpConv10canConvertEPN4llvm17MachineBasicBlockE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='238' c='_ZNK4llvm16AArch64InstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp' l='190' u='c' c='_ZNK12_GLOBAL__N_127AArch64SpeculationHardening23endsWithCondControlFlowERN4llvm17MachineBasicBlockERPS2_S5_RNS1_9AArch64CC8CondCodeE'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp' l='651' c='_ZNK4llvm13R600InstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='2255' c='_ZNK4llvm11SIInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='346' c='_ZNK4llvm16ARMBaseInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/AVR/AVRInstrInfo.cpp' l='263' c='_ZNK4llvm12AVRInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/BPF/BPFInstrInfo.cpp' l='164' c='_ZNK4llvm12BPFInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='391' c='_ZNK4llvm16HexagonInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/Lanai/LanaiInstrInfo.cpp' l='562' c='_ZNK4llvm14LanaiInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/MSP430/MSP430InstrInfo.cpp' l='163' c='_ZNK4llvm15MSP430InstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/Mips/MipsInstrInfo.cpp' l='95' c='_ZNK4llvm13MipsInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/NVPTX/NVPTXInstrInfo.cpp' l='95' c='_ZNK4llvm14NVPTXInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp' l='239' u='c' c='_ZN12_GLOBAL__N_119PPCBranchCoalescing17canCoalesceBranchERNS0_23CoalescingCandidateInfoE'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='1266' c='_ZNK4llvm12PPCInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/RISCV/RISCVInstrInfo.cpp' l='275' c='_ZNK4llvm14RISCVInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/Sparc/SparcInstrInfo.cpp' l='159' c='_ZNK4llvm14SparcInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='353' c='_ZNK4llvm16SystemZInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/WebAssembly/WebAssemblyInstrInfo.cpp' l='104' c='_ZNK4llvm20WebAssemblyInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='3145' c='_ZNK4llvm12X86InstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<ovr f='llvm/llvm/lib/Target/XCore/XCoreInstrInfo.cpp' l='189' c='_ZNK4llvm14XCoreInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
