<dec f='llvm/lldb/include/lldb/API/SBFrame.h' l='75' type='const char * lldb::SBFrame::GetFunctionName()'/>
<use f='llvm/build/tools/lldb/bindings/python/LLDBWrapPython.cpp' l='30527' u='c' c='_ZL37_wrap_SBFrame_GetFunctionName__SWIG_0P7_objectlPS0_'/>
<doc f='llvm/lldb/include/lldb/API/SBFrame.h' l='62'>/// Get the appropriate function name for this frame. Inlined functions in
  /// LLDB are represented by Blocks that have inlined function information, so
  /// just looking at the SBFunction or SBSymbol for a frame isn&apos;t enough.
  /// This function will return the appropriate function, symbol or inlined
  /// function name for the frame.
  ///
  /// This function returns:
  /// - the name of the inlined function (if there is one)
  /// - the name of the concrete function (if there is one)
  /// - the name of the symbol (if there is one)
  /// - NULL
  ///
  /// See also IsInlined().</doc>
<def f='llvm/lldb/source/API/SBFrame.cpp' l='1179' ll='1183' type='const char * lldb::SBFrame::GetFunctionName()'/>
<use f='llvm/lldb/source/API/SBFrame.cpp' l='1180' u='a' c='_ZN4lldb7SBFrame15GetFunctionNameEv'/>
<use f='llvm/lldb/source/API/SBFrame.cpp' l='1180' u='a' c='_ZN4lldb7SBFrame15GetFunctionNameEv'/>
<use f='llvm/lldb/source/API/SBFrame.cpp' l='1361' u='a' c='_ZN12lldb_private5repro15RegisterMethodsERNS0_8RegistryE'/>
<use f='llvm/lldb/tools/lldb-vscode/JSONUtils.cpp' l='629' u='c' c='_ZN11lldb_vscode12CreateSourceERN4lldb7SBFrameERl'/>
<use f='llvm/lldb/tools/lldb-vscode/JSONUtils.cpp' l='736' u='c' c='_ZN11lldb_vscode16CreateStackFrameERN4lldb7SBFrameE'/>
