<dec f='llvm/lldb/include/lldb/Symbol/Block.h' l='266' type='uint32_t lldb_private::Block::AppendVariables(bool can_create, bool get_parent_variables, bool stop_if_block_is_inlined_function, const std::function&lt;bool (Variable *)&gt; &amp; filter, lldb_private::VariableList * variable_list)'/>
<use f='llvm/lldb/source/API/SBBlock.cpp' l='122' u='c' c='_ZN4lldb7SBBlock15AppendVariablesEbbPN12lldb_private12VariableListE'/>
<doc f='llvm/lldb/include/lldb/Symbol/Block.h' l='240'>/// Appends the variables from this block, and optionally from all parent
  /// blocks, to \a variable_list.
  ///
  /// \param[in] can_create
  ///     If \b true, the variables can be parsed if they already
  ///     haven&apos;t been, else the current state of the block will be
  ///     returned. Passing \b true for this parameter can be used
  ///     to see the current state of what has been parsed up to this
  ///     point.
  ///
  /// \param[in] get_parent_variables
  ///     If \b true, all variables from all parent blocks will be
  ///     added to the variable list.
  ///
  /// \param[in] stop_if_block_is_inlined_function
  ///     If \b true, all variables from all parent blocks will be
  ///     added to the variable list until there are no parent blocks
  ///     or the parent block has inlined function info.
  ///
  /// \param[in,out] variable_list
  ///     All variables in this block, and optionally all parent
  ///     blocks will be added to this list.
  ///
  /// \return
  ///     The number of variable that were appended to \a
  ///     variable_list.</doc>
<use f='llvm/lldb/source/API/SBFrame.cpp' l='611' u='c' c='_ZN4lldb7SBFrame9FindValueEPKcNS_9ValueTypeENS_16DynamicValueTypeE'/>
<use f='llvm/lldb/source/Core/Address.cpp' l='710' u='c' c='_ZNK12lldb_private7Address4DumpEPNS_6StreamEPNS_21ExecutionContextScopeENS0_9DumpStyleES5_j'/>
<def f='llvm/lldb/source/Symbol/Block.cpp' l='432' ll='461' type='uint32_t lldb_private::Block::AppendVariables(bool can_create, bool get_parent_variables, bool stop_if_block_is_inlined_function, const std::function&lt;bool (Variable *)&gt; &amp; filter, lldb_private::VariableList * variable_list)'/>
<use f='llvm/lldb/source/Symbol/Block.cpp' l='456' u='c' c='_ZN12lldb_private5Block15AppendVariablesEbbbRKSt8functionIFbPNS_8VariableEEEPNS_12VariableListE'/>
<use f='llvm/lldb/source/Target/StackFrame.cpp' l='469' u='c' c='_ZN12lldb_private10StackFrame22GetInScopeVariableListEbb'/>
<use f='llvm/lldb/source/Target/StackFrame.cpp' l='1737' u='c' c='_ZN12lldb_private10StackFrame12FindVariableENS_11ConstStringE'/>
