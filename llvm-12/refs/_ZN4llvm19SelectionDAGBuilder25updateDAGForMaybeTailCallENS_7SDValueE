<dec f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h' l='803' type='void llvm::SelectionDAGBuilder::updateDAGForMaybeTailCall(llvm::SDValue MaybeTC)'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='5725' u='c' c='_ZN4llvm19SelectionDAGBuilder18visitIntrinsicCallERKNS_8CallInstEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='5746' u='c' c='_ZN4llvm19SelectionDAGBuilder18visitIntrinsicCallERKNS_8CallInstEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='5761' u='c' c='_ZN4llvm19SelectionDAGBuilder18visitIntrinsicCallERKNS_8CallInstEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='5781' u='c' c='_ZN4llvm19SelectionDAGBuilder18visitIntrinsicCallERKNS_8CallInstEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='5799' u='c' c='_ZN4llvm19SelectionDAGBuilder18visitIntrinsicCallERKNS_8CallInstEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='5817' u='c' c='_ZN4llvm19SelectionDAGBuilder18visitIntrinsicCallERKNS_8CallInstEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='5833' u='c' c='_ZN4llvm19SelectionDAGBuilder18visitIntrinsicCallERKNS_8CallInstEj'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='10264' ll='10270' type='void llvm::SelectionDAGBuilder::updateDAGForMaybeTailCall(llvm::SDValue MaybeTC)'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='10259'>/// During lowering new call nodes can be created (such as memset, etc.).
/// Those will become new roots of the current DAG, but complications arise
/// when they are tail calls. In such cases, the call lowering will update
/// the root, but the builder still needs to know that a tail call has been
/// lowered in order to avoid generating an additional return.</doc>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h' l='801'>/// Update the DAG and DAG builder with the relevant information after
  /// a new root node has been created which could be a tail call.</doc>
