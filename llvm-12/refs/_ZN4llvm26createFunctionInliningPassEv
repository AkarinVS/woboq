<dec f='llvm/llvm/include/llvm/Transforms/IPO.h' l='113' type='llvm::Pass * llvm::createFunctionInliningPass()'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO.h' l='104'>//===----------------------------------------------------------------------===//
/// createFunctionInliningPass - Return a new pass object that uses a heuristic
/// to inline direct function calls to small functions.
///
/// The Threshold can be passed directly, or asked to be computed from the
/// given optimization and size optimization arguments.
///
/// The -inline-threshold command line option takes precedence over the
/// threshold given here.</doc>
<use f='llvm/llvm/include/llvm/LinkAllPasses.h' l='110' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<use f='llvm/llvm/examples/OrcV2Examples/LLJITWithOptimizingIRTransform/LLJITWithOptimizingIRTransform.cpp' l='76' u='c' c='_ZN23MyOptimizationTransformC1Ev'/>
<use f='llvm/llvm/lib/LTO/LTOBackend.cpp' l='352' u='c' c='_ZL14runOldPMPassesRKN4llvm3lto6ConfigERNS_6ModuleEPNS_13TargetMachineEbPNS_18ModuleSummaryIndexEPKS8_'/>
<use f='llvm/llvm/lib/LTO/LTOCodeGenerator.cpp' l='581' u='c' c='_ZN4llvm16LTOCodeGenerator8optimizeEv'/>
<use f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='243' u='c' c='_ZN12_GLOBAL__N_114optimizeModuleERN4llvm6ModuleERNS0_13TargetMachineEjbPNS0_18ModuleSummaryIndexE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp' l='425' u='c' c='_ZN4llvm19AMDGPUTargetMachine17adjustPassManagerERNS_18PassManagerBuilderE'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='93' u='c' c='LLVMAddFunctionInliningPass'/>
<def f='llvm/llvm/lib/Transforms/IPO/InlineSimple.cpp' l='97' type='llvm::Pass * llvm::createFunctionInliningPass()'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='1286' u='c' c='LLVMPassManagerBuilderPopulateLTOPassManager'/>
<use f='llvm/llvm/tools/bugpoint/bugpoint.cpp' l='208' u='c' c='main'/>
<use f='llvm/llvm/tools/opt/opt.cpp' l='402' u='c' c='_ZL21AddStandardLinkPassesRN4llvm6legacy15PassManagerBaseE'/>
