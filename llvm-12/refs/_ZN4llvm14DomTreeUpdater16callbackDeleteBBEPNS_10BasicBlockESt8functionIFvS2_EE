<dec f='llvm/llvm/include/llvm/Analysis/DomTreeUpdater.h' l='213' type='void llvm::DomTreeUpdater::callbackDeleteBB(llvm::BasicBlock * DelBB, std::function&lt;void (BasicBlock *)&gt; Callback)'/>
<doc f='llvm/llvm/include/llvm/Analysis/DomTreeUpdater.h' l='205'>/// Delete DelBB. DelBB will be removed from its Parent and
  /// erased from available trees if it exists. Then the callback will
  /// be called. Finally, DelBB will be deleted.
  /// Under Eager UpdateStrategy, DelBB will be processed immediately.
  /// Under Lazy UpdateStrategy, DelBB will be queued until a flush event and
  /// all available trees are up-to-date. Assert if any instruction of DelBB is
  /// modified while awaiting deletion. Multiple callbacks can be queued for one
  /// DelBB under Lazy UpdateStrategy.</doc>
<def f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='189' ll='202' type='void llvm::DomTreeUpdater::callbackDeleteBB(llvm::BasicBlock * DelBB, std::function&lt;void (BasicBlock *)&gt; Callback)'/>
<use f='llvm/llvm/unittests/Analysis/DomTreeUpdaterTest.cpp' l='119' u='c' c='_ZN46DomTreeUpdater_EagerUpdateBasicOperations_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/DomTreeUpdaterTest.cpp' l='390' u='c' c='_ZN46DomTreeUpdater_LazyUpdateDTInheritedPreds_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/DomTreeUpdaterTest.cpp' l='413' u='c' c='_ZN46DomTreeUpdater_LazyUpdateDTInheritedPreds_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/DomTreeUpdaterTest.cpp' l='503' u='c' c='_ZN45DomTreeUpdater_LazyUpdateBasicOperations_Test8TestBodyEv'/>
