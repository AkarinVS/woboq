<dec f='llvm/polly/lib/External/isl/include/isl/schedule_node.h' l='267' type='isl_schedule_node * isl_schedule_node_delete(isl_schedule_node * node)'/>
<def f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='2745' ll='2793' type='isl_schedule_node * isl_schedule_node_delete(isl_schedule_node * node)'/>
<use f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='3376' u='c' c='gist_leave_expansion'/>
<use f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='3612' u='c' c='gist_leave'/>
<use f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='3613' u='c' c='gist_leave'/>
<doc f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='2737'>/* Remove a single node from the schedule tree, attaching the child
 * of &quot;node&quot; directly to its parent.
 * Return a pointer to this former child or to the leaf the position
 * of the original node if there was no child.
 * It is not allowed to remove the root of a schedule tree,
 * a set or sequence node, a child of a set or sequence node or
 * a band node with an anchored subtree.
 */</doc>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='3968' u='c' c='gpu_create_kernel'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='3971' u='c' c='gpu_create_kernel'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='2218' u='c' c='drop_phase_mark'/>
<use f='llvm/polly/lib/Transform/ScheduleOptimizer.cpp' l='822' u='c' c='_ZL25permuteBandNodeDimensionsN3isl12noexceptions13schedule_nodeEjj'/>
<use f='llvm/polly/lib/Transform/ScheduleOptimizer.cpp' l='1266' u='c' c='_ZL29getBandNodeWithOriginDimOrderN3isl12noexceptions13schedule_nodeE'/>
