<dec f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='254' type='bool llvm::SignBitMustBeZero(const llvm::Value * V, const llvm::TargetLibraryInfo * TLI)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='247'>/// Return true if we can prove that the specified FP value&apos;s sign bit is 0.
  ///
  ///      NaN --&gt; true/false (depending on the NaN&apos;s sign bit)
  ///       +0 --&gt; true
  ///       -0 --&gt; false
  ///   x &gt; +0 --&gt; true
  ///   x &lt; -0 --&gt; false</doc>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='5312' u='c' c='_ZL22simplifyUnaryIntrinsicPN4llvm8FunctionEPNS_5ValueERKNS_13SimplifyQueryE'/>
<def f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='3426' ll='3428' type='bool llvm::SignBitMustBeZero(const llvm::Value * V, const llvm::TargetLibraryInfo * TLI)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='1263' u='c' c='_ZN4llvm16InstCombinerImpl13visitCallInstERNS_8CallInstE'/>
