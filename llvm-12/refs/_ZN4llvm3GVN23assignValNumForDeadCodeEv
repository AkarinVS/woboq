<dec f='llvm/llvm/include/llvm/Transforms/Scalar/GVN.h' l='349' type='void llvm::GVN::assignValNumForDeadCode()'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='2332' u='c' c='_ZN4llvm3GVN7runImplERNS_8FunctionERNS_15AssumptionCacheERNS_13DominatorTreeERKNS_17TargetLibraryInfoERNS_9AAResultsEPNS_23MemoryDependenceResultsEPNS7303437'/>
<def f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='2872' ll='2879' type='void llvm::GVN::assignValNumForDeadCode()'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='2868'>// performPRE() will trigger assert if it comes across an instruction without
// associated val-num. As it normally has far more live instructions than dead
// instructions, it makes more sense just to &quot;fabricate&quot; a val-number for the
// dead code than checking if instruction involved is dead or not.</doc>
