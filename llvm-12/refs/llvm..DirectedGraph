<def f='llvm/llvm/include/llvm/ADT/DirectedGraph.h' l='172' ll='275'/>
<use f='llvm/llvm/include/llvm/ADT/DirectedGraph.h' l='179'/>
<use f='llvm/llvm/include/llvm/Analysis/DDG.h' l='28'/>
<ovr f='llvm/llvm/include/llvm/Analysis/DDG.h' l='316' c='llvm::DataDependenceGraph'/>
<def f='llvm/llvm/lib/Analysis/DDG.cpp' l='32'/>
<use f='llvm/llvm/lib/Analysis/DDG.cpp' l='32'/>
<size>96</size>
<doc f='llvm/llvm/include/llvm/ADT/DirectedGraph.h' l='167'>/// Directed graph
///
/// The graph is represented by a table of nodes.
/// Each node contains a (possibly empty) list of outgoing edges.
/// Each edge contains the target node it connects to.</doc>
<fun r='_ZN4llvm13DirectedGraphC1Ev'/>
<fun r='_ZN4llvm13DirectedGraphC1ERT_'/>
<fun r='_ZN4llvm13DirectedGraphC1ERKNS_13DirectedGraphIT_T0_EE'/>
<fun r='_ZN4llvm13DirectedGraphC1EONS_13DirectedGraphIT_T0_EE'/>
<fun r='_ZN4llvm13DirectedGraphaSERKNS_13DirectedGraphIT_T0_EE'/>
<fun r='_ZN4llvm13DirectedGraphaSEOKNS_13DirectedGraphIT_T0_EE'/>
<fun r='_ZNK4llvm13DirectedGraph5beginEv'/>
<fun r='_ZNK4llvm13DirectedGraph3endEv'/>
<fun r='_ZN4llvm13DirectedGraph5beginEv'/>
<fun r='_ZN4llvm13DirectedGraph3endEv'/>
<fun r='_ZNK4llvm13DirectedGraph5frontEv'/>
<fun r='_ZN4llvm13DirectedGraph5frontEv'/>
<fun r='_ZNK4llvm13DirectedGraph4backEv'/>
<fun r='_ZN4llvm13DirectedGraph4backEv'/>
<fun r='_ZNK4llvm13DirectedGraph4sizeEv'/>
<fun r='_ZNK4llvm13DirectedGraph8findNodeERKT_'/>
<fun r='_ZN4llvm13DirectedGraph8findNodeERKT_'/>
<fun r='_ZN4llvm13DirectedGraph7addNodeERT_'/>
<fun r='_ZNK4llvm13DirectedGraph23findIncomingEdgesToNodeERKT_RNS_15SmallVectorImplIPT0_EE'/>
<fun r='_ZN4llvm13DirectedGraph10removeNodeERT_'/>
<fun r='_ZN4llvm13DirectedGraph7connectERT_S2_RT0_'/>
<mbr r='llvm::DirectedGraph::Nodes' t='llvm::DirectedGraph::NodeListTy'/>
<use f='llvm/llvm/unittests/ADT/DirectedGraphTest.cpp' l='30'/>
<ovr f='llvm/llvm/unittests/ADT/DirectedGraphTest.cpp' l='43' c='llvm::DGTestGraph'/>
