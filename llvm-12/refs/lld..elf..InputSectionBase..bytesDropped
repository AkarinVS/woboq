<dec f='llvm/lld/ELF/InputSection.h' l='135' type='unsigned int'/>
<use f='llvm/lld/ELF/InputSection.h' l='141' u='w' c='_ZN3lld3elf16InputSectionBase9drop_backEm'/>
<use f='llvm/lld/ELF/InputSection.h' l='145' u='w' c='_ZN3lld3elf16InputSectionBase9push_backEm'/>
<use f='llvm/lld/ELF/InputSection.h' l='149' u='r' c='_ZN3lld3elf16InputSectionBase4trimEv'/>
<use f='llvm/lld/ELF/InputSection.h' l='150' u='r' c='_ZN3lld3elf16InputSectionBase4trimEv'/>
<use f='llvm/lld/ELF/InputSection.h' l='151' u='w' c='_ZN3lld3elf16InputSectionBase4trimEv'/>
<offset>640</offset>
<doc f='llvm/lld/ELF/InputSection.h' l='131'>// If basic block sections are enabled, many code sections could end up with
  // one or two jump instructions at the end that could be relaxed to a smaller
  // instruction. The members below help trimming the trailing jump instruction
  // and shrinking a section.</doc>
<use f='llvm/lld/ELF/InputSection.cpp' l='143' u='r' c='_ZNK3lld3elf16InputSectionBase7getSizeEv'/>
<use f='llvm/lld/ELF/Writer.cpp' l='1788' u='r' c='_ZL24fixSymbolsAfterShrinkingv'/>
<use f='llvm/lld/ELF/Writer.cpp' l='1792' u='r' c='_ZL24fixSymbolsAfterShrinkingv'/>
<use f='llvm/lld/ELF/Writer.cpp' l='1799' u='r' c='_ZL24fixSymbolsAfterShrinkingv'/>
<use f='llvm/lld/ELF/Writer.cpp' l='1809' u='r' c='_ZL24fixSymbolsAfterShrinkingv'/>
