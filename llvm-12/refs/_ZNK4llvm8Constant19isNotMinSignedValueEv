<dec f='llvm/llvm/include/llvm/IR/Constant.h' l='75' type='bool llvm::Constant::isNotMinSignedValue() const'/>
<doc f='llvm/llvm/include/llvm/IR/Constant.h' l='73'>/// Return true if the value is not the smallest signed value, or,
  /// for vectors, does not contain smallest signed value elements.</doc>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='203' ll='225' type='bool llvm::Constant::isNotMinSignedValue() const'/>
<use f='llvm/llvm/lib/IR/Constants.cpp' l='217' u='c' c='_ZNK4llvm8Constant19isNotMinSignedValueEv'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1718' u='c' c='_ZN4llvm16InstCombinerImpl8visitSubERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='1021' u='c' c='_ZN4llvm16InstCombinerImpl13visitCallInstERNS_8CallInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='1068' u='c' c='_ZN4llvm16InstCombinerImpl13visitCallInstERNS_8CallInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='3965' u='c' c='_ZN4llvm16InstCombinerImpl13foldICmpBinOpERNS_8ICmpInstERKNS_13SimplifyQueryE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='182' u='c' c='_ZN4llvm16InstCombinerImpl8visitMulERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineNegator.cpp' l='243' u='c' c='_ZN4llvm7Negator9visitImplEPNS_5ValueEj'/>
