<dec f='llvm/clang/include/clang/ASTMatchers/Dynamic/Registry.h' l='124' type='static clang::ast_matchers::dynamic::VariantMatcher clang::ast_matchers::dynamic::Registry::constructBoundMatcher(clang::ast_matchers::dynamic::MatcherCtor Ctor, clang::ast_matchers::dynamic::SourceRange NameRange, llvm::StringRef BindID, ArrayRef&lt;clang::ast_matchers::dynamic::ParserValue&gt; Args, clang::ast_matchers::dynamic::Diagnostics * Error)'/>
<use f='llvm/clang/lib/ASTMatchers/Dynamic/Parser.cpp' l='645' u='c' c='_ZN5clang12ast_matchers7dynamic6Parser12RegistrySema22actOnMatcherExpressionEPKNS1_8internal17MatcherDescriptorENS1_11SourceRangeEN4llvm9StringRefENS98483459'/>
<doc f='llvm/clang/include/clang/ASTMatchers/Dynamic/Registry.h' l='118'>/// Construct a matcher from the registry and bind it.
  ///
  /// Similar the \c constructMatcher() above, but it then tries to bind the
  /// matcher to the specified \c BindID.
  /// If the matcher is not bindable, it sets an error in \c Error and returns
  /// a null matcher.</doc>
<def f='llvm/clang/lib/ASTMatchers/Dynamic/Registry.cpp' l='700' ll='717' type='static clang::ast_matchers::dynamic::VariantMatcher clang::ast_matchers::dynamic::Registry::constructBoundMatcher(clang::ast_matchers::dynamic::MatcherCtor Ctor, clang::ast_matchers::dynamic::SourceRange NameRange, llvm::StringRef BindID, ArrayRef&lt;clang::ast_matchers::dynamic::ParserValue&gt; Args, clang::ast_matchers::dynamic::Diagnostics * Error)'/>
