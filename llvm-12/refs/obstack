<use f='include/stdio.h' l='826' c='obstack_printf'/>
<use f='include/stdio.h' l='829' c='obstack_vprintf'/>
<def f='include/obstack.h' l='153' ll='180'/>
<use f='include/obstack.h' l='184' c='_obstack_newchunk'/>
<use f='include/obstack.h' l='185' c='_obstack_begin'/>
<use f='include/obstack.h' l='187' c='_obstack_begin_1'/>
<use f='include/obstack.h' l='190' c='_obstack_memory_used'/>
<use f='include/obstack.h' l='197' c='obstack_free'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cpp' l='1277'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cpp' l='1278'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cpp' l='1278'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cpp' l='1279'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cpp' l='1279'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cpp' l='1280'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cpp' l='1280'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cpp' l='1281'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cpp' l='1281'/>
<size>44</size>
<doc f='include/obstack.h' l='153'>/* control current object in current chunk */</doc>
<mbr r='obstack::chunk_size' o='0' t='long'/>
<mbr r='obstack::chunk' o='32' t='struct _obstack_chunk *'/>
<mbr r='obstack::object_base' o='64' t='char *'/>
<mbr r='obstack::next_free' o='96' t='char *'/>
<mbr r='obstack::chunk_limit' o='128' t='char *'/>
<mbr r='obstack::temp' o='160' t='union (anonymous union at /usr/include/obstack.h:160:3)'/>
<mbr r='obstack::alignment_mask' o='192' t='int'/>
<mbr r='obstack::chunkfun' o='224' t='struct _obstack_chunk *(*)(void *, long)'/>
<mbr r='obstack::freefun' o='256' t='void (*)(void *, struct _obstack_chunk *)'/>
<mbr r='obstack::extra_arg' o='288' t='void *'/>
<mbr r='obstack::use_extra_arg' o='320' t='unsigned int'/>
<mbr r='obstack::maybe_empty_object' o='321' t='unsigned int'/>
<mbr r='obstack::alloc_failed' o='322' t='unsigned int'/>
