<dec f='llvm/polly/lib/External/isl/include/isl/schedule.h' l='155' type='isl_schedule * isl_schedule_map_schedule_node_bottom_up(isl_schedule * schedule, isl_schedule_node *(*)(isl_schedule_node *, void *) fn, void * user)'/>
<def f='llvm/polly/lib/External/isl/isl_schedule.c' l='272' ll='287' type='isl_schedule * isl_schedule_map_schedule_node_bottom_up(isl_schedule * schedule, isl_schedule_node *(*)(isl_schedule_node *, void *) fn, void * user)'/>
<use f='llvm/polly/lib/External/isl/isl_schedule.c' l='304' u='c' c='isl_schedule_reset_user'/>
<use f='llvm/polly/lib/External/isl/isl_schedule.c' l='325' u='c' c='isl_schedule_align_params'/>
<use f='llvm/polly/lib/External/isl/isl_schedule.c' l='352' u='c' c='isl_schedule_pullback_union_pw_multi_aff'/>
<doc f='llvm/polly/lib/External/isl/isl_schedule.c' l='265'>/* Traverse the node of &quot;sched&quot; in depth first postorder,
 * allowing the user to modify the visited node.
 * The traversal continues from the node returned by the callback function.
 * It is the responsibility of the user to ensure that this does not
 * lead to an infinite loop.  It is safest to always return a pointer
 * to the same position (same ancestors and child positions) as the input node.
 */</doc>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='4569' u='c' c='determine_properties_original_schedule'/>
