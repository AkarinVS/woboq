<dec f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.h' l='184' type='void llvm::SystemZInstrInfo::expandRXYPseudo(llvm::MachineInstr &amp; MI, unsigned int LowOpcode, unsigned int HighOpcode) const'/>
<def f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='175' ll='182' type='void llvm::SystemZInstrInfo::expandRXYPseudo(llvm::MachineInstr &amp; MI, unsigned int LowOpcode, unsigned int HighOpcode) const'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1352' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1356' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1368' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1372' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1376' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1388' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1392' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1396' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1480' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1484' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<doc f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='172'>// MI is an RXY-style pseudo instruction.  Replace it with LowOpcode
// if the first operand is a low GR32 and HighOpcode if the first operand
// is a high GR32.</doc>
