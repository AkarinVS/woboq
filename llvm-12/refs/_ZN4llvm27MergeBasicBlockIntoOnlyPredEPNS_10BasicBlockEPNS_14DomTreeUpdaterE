<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='155' type='void llvm::MergeBasicBlockIntoOnlyPred(llvm::BasicBlock * BB, llvm::DomTreeUpdater * DTU = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='148'>//===----------------------------------------------------------------------===//
//  Control Flow Graph Restructuring.
//

/// BB is a block with one predecessor and its predecessor is known to have one
/// successor (BB!). Eliminate the edge between them, moving the instructions in
/// the predecessor into BB. This deletes the predecessor block.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='1980' u='c' c='_ZN4llvm17JumpThreadingPass32maybeMergeBasicBlockIntoOnlyPredEPNS_10BasicBlockE'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='717' ll='794' type='void llvm::MergeBasicBlockIntoOnlyPred(llvm::BasicBlock * DestBB, llvm::DomTreeUpdater * DTU = nullptr)'/>
<doc f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='713'>//===----------------------------------------------------------------------===//
//  Control Flow Graph Restructuring.
//</doc>
<use f='llvm/llvm/unittests/Transforms/Utils/LocalTest.cpp' l='222' u='c' c='_ZN38Local_MergeBasicBlockIntoOnlyPred_Test8TestBodyEv'/>
