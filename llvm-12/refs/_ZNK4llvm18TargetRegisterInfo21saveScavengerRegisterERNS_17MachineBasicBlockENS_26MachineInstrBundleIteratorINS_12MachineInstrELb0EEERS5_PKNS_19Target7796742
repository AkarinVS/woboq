<def f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='950' ll='956' type='bool llvm::TargetRegisterInfo::saveScavengerRegister(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator I, MachineBasicBlock::iterator &amp; UseMI, const llvm::TargetRegisterClass * RC, llvm::Register Reg) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='946'>/// Spill the register so it can be used by the register scavenger.
  /// Return true if the register was spilled, false otherwise.
  /// If this function does not spill the register, the scavenger
  /// will instead spill it to the emergency spill slot.</doc>
<use f='llvm/llvm/lib/CodeGen/RegisterScavenging.cpp' l='489' u='c' c='_ZN4llvm12RegScavenger5spillENS_8RegisterERKNS_19TargetRegisterClassEiNS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEERS7_'/>
<ovr f='llvm/llvm/lib/Target/Mips/Mips16RegisterInfo.cpp' l='56' c='_ZNK4llvm18Mips16RegisterInfo21saveScavengerRegisterERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEERS5_PKNS_19Target9687411'/>
