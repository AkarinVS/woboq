<dec f='llvm/libcxxabi/src/cxa_exception.h' l='157' type='__cxxabiv1::__cxa_eh_globals * __cxxabiv1::__cxa_get_globals_fast()'/>
<use f='llvm/libcxxabi/src/cxa_default_handlers.cpp' l='31' u='c' c='_ZL28demangling_terminate_handlerv'/>
<use f='llvm/libcxxabi/src/cxa_exception.cpp' l='494' u='c' c='__cxxabiv1::__cxa_end_catch'/>
<use f='llvm/libcxxabi/src/cxa_exception.cpp' l='560' u='c' c='__cxxabiv1::__cxa_current_exception_type'/>
<use f='llvm/libcxxabi/src/cxa_exception.cpp' l='671' u='c' c='__cxxabiv1::__cxa_current_primary_exception'/>
<use f='llvm/libcxxabi/src/cxa_exception.cpp' l='747' u='c' c='__cxxabiv1::__cxa_uncaught_exceptions'/>
<use f='llvm/libcxxabi/src/cxa_exception_storage.cpp' l='77' u='c' c='__cxxabiv1::__cxa_get_globals'/>
<def f='llvm/libcxxabi/src/cxa_exception_storage.cpp' l='95' ll='101' type='__cxxabiv1::__cxa_eh_globals * __cxxabiv1::__cxa_get_globals_fast()'/>
<doc f='llvm/libcxxabi/src/cxa_exception_storage.cpp' l='91'>// Note that this implementation will reliably return NULL if not
    // preceded by a call to __cxa_get_globals().  This is an extension
    // to the Itanium ABI and is taken advantage of in several places in
    // libc++abi.</doc>
<use f='llvm/libcxxabi/src/cxa_handlers.cpp' l='79' u='c' c='_ZSt9terminatev'/>
<use f='llvm/libcxxabi/src/cxa_personality.cpp' l='1168' u='c' c='__cxxabiv1::__cxa_call_unexpected'/>
