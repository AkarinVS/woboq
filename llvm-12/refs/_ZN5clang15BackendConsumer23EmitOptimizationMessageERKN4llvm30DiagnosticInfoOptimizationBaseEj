<dec f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='413' type='void clang::BackendConsumer::EmitOptimizationMessage(const llvm::DiagnosticInfoOptimizationBase &amp; D, unsigned int DiagID)'/>
<def f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='677' ll='714' type='void clang::BackendConsumer::EmitOptimizationMessage(const llvm::DiagnosticInfoOptimizationBase &amp; D, unsigned int DiagID)'/>
<use f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='727' u='c' c='_ZN5clang15BackendConsumer25OptimizationRemarkHandlerERKN4llvm30DiagnosticInfoOptimizationBaseE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='734' u='c' c='_ZN5clang15BackendConsumer25OptimizationRemarkHandlerERKN4llvm30DiagnosticInfoOptimizationBaseE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='746' u='c' c='_ZN5clang15BackendConsumer25OptimizationRemarkHandlerERKN4llvm30DiagnosticInfoOptimizationBaseE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='760' u='c' c='_ZN5clang15BackendConsumer25OptimizationRemarkHandlerERKN4llvm35OptimizationRemarkAnalysisFPCommuteE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='773' u='c' c='_ZN5clang15BackendConsumer25OptimizationRemarkHandlerERKN4llvm34OptimizationRemarkAnalysisAliasingE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='779' u='c' c='_ZN5clang15BackendConsumer26OptimizationFailureHandlerERKN4llvm33DiagnosticInfoOptimizationFailureE'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='410'>/// Specialized handlers for optimization remarks.
    /// Note that these handlers only accept remarks and they always handle
    /// them.</doc>
