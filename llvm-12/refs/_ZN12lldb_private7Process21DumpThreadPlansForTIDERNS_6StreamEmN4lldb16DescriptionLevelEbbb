<dec f='llvm/lldb/include/lldb/Target/Process.h' l='2225' type='bool lldb_private::Process::DumpThreadPlansForTID(lldb_private::Stream &amp; strm, lldb::tid_t tid, lldb::DescriptionLevel desc_level, bool internal, bool condense_trivial, bool skip_unreported_plans)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='2202'>/// Dump the thread plans associated with thread with \a tid.
  ///
  /// \param[in,out] strm
  ///     The stream to which to dump the output
  ///
  /// \param[in] tid
  ///     The tid whose Plan Stack we are dumping
  ///
  /// \param[in] desc_level
  ///     How much detail to dump
  ///
  /// \param[in] internal
  ///     If \b true dump all plans, if false only user initiated plans
  ///
  /// \param[in] condense_trivial
  ///     If true, only dump a header if the plan stack is just the base plan.
  ///
  /// \param[in] skip_unreported_plans
  ///     If true, only dump a plan if it is currently backed by an
  ///     lldb_private::Thread *.
  ///
  /// \return
  ///     Returns \b true if TID was found, \b false otherwise</doc>
<use f='llvm/lldb/source/Commands/CommandObjectThread.cpp' l='1773' u='c' c='_ZN27CommandObjectThreadPlanList9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Commands/CommandObjectThread.cpp' l='1804' u='c' c='_ZN27CommandObjectThreadPlanList15HandleOneThreadEmRN12lldb_private19CommandReturnObjectE'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='1187' ll='1193' type='bool lldb_private::Process::DumpThreadPlansForTID(lldb_private::Stream &amp; strm, lldb::tid_t tid, lldb::DescriptionLevel desc_level, bool internal, bool condense_trivial, bool skip_unreported_plans)'/>
<use f='llvm/lldb/source/Target/Thread.cpp' l='785' u='c' c='_ZN12lldb_private6Thread10ShouldStopEPNS_5EventE'/>
<use f='llvm/lldb/source/Target/Thread.cpp' l='951' u='c' c='_ZN12lldb_private6Thread10ShouldStopEPNS_5EventE'/>
