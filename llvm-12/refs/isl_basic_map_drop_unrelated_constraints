<dec f='llvm/polly/lib/External/isl/isl_map_private.h' l='342' type='isl_basic_map * isl_basic_map_drop_unrelated_constraints(isl_basic_map * bmap, int * group)'/>
<use f='llvm/polly/lib/External/isl/isl_map.c' l='4408' u='c' c='drop_irrelevant_constraints'/>
<def f='llvm/polly/lib/External/isl/isl_map_simplify.c' l='2290' ll='2326' type='isl_basic_map * isl_basic_map_drop_unrelated_constraints(isl_basic_map * bmap, int * group)'/>
<use f='llvm/polly/lib/External/isl/isl_map_simplify.c' l='2369' u='c' c='drop_irrelevant_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_map_simplify.c' l='2413' u='c' c='drop_irrelevant_constraints_marked'/>
<doc f='llvm/polly/lib/External/isl/isl_map_simplify.c' l='2270'>/* Drop constraints from &quot;bmap&quot; that only involve variables that are
 * not related to any of the variables marked with a &quot;-1&quot; in &quot;group&quot;.
 *
 * We construct groups of variables that collect variables that
 * (indirectly) appear in some common constraint of &quot;bmap&quot;.
 * Each group is identified by the first variable in the group,
 * except for the special group of variables that was already identified
 * in the input as -1 (or are related to those variables).
 * If group[i] is equal to i (or -1), then the group of i is i (or -1),
 * otherwise the group of i is the group of group[i].
 *
 * We first initialize groups for the remaining variables.
 * Then we iterate over the constraints of &quot;bmap&quot; and update the
 * group of the variables in the constraint by the smallest group.
 * Finally, we resolve indirect references to groups by running over
 * the variables.
 *
 * After computing the groups, we drop constraints that do not involve
 * any variables in the -1 group.
 */</doc>
