<dec f='llvm/llvm/include/llvm/Support/TargetOpcodes.def' l='160' type='30'/>
<doc f='llvm/llvm/include/llvm/Support/TargetOpcodes.def' l='154'>/// Wraps a machine instruction which can fault, bundled with associated
/// information on how to handle such a fault.
/// For example loading instruction that may page fault, bundled with associated
/// information on how to handle such a page fault.  It is intended to support
/// &quot;zero cost&quot; null checks in managed languages by allowing LLVM to fold
/// comparisons into existing memory operations.</doc>
<use f='llvm/llvm/lib/CodeGen/BranchRelaxation.cpp' l='513' u='r' c='_ZN12_GLOBAL__N_116BranchRelaxation23relaxBranchInstructionsEv'/>
<use f='llvm/llvm/lib/CodeGen/ImplicitNullChecks.cpp' l='732' u='r' c='_ZN12_GLOBAL__N_118ImplicitNullChecks19insertFaultingInstrEPN4llvm12MachineInstrEPNS1_17MachineBasicBlockES5_'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp' l='1337' c='_ZN12_GLOBAL__N_117AArch64AsmPrinter15emitInstructionEPKN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/X86/X86MCInstLower.cpp' l='2532' c='_ZN4llvm13X86AsmPrinter15emitInstructionEPKNS_12MachineInstrE'/>
