<def f='llvm/lldb/include/lldb/Target/Process.h' l='758' type='void lldb_private::Process::WillPublicStop()'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='746'>/// Called when the process is about to broadcast a public stop.
  ///
  /// There are public and private stops. Private stops are when the process
  /// is doing things like stepping and the client doesn&apos;t need to know about
  /// starts and stop that implement a thread plan. Single stepping over a
  /// source line in code might end up being implemented by one or more
  /// process starts and stops. Public stops are when clients will be notified
  /// that the process is stopped. These events typically trigger UI updates
  /// (thread stack frames to be displayed, variables to be displayed, and
  /// more). This function can be overriden and allows process subclasses to
  /// do something before the eBroadcastBitStateChanged event is sent to
  /// public clients.</doc>
<ovr f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='2677' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote14WillPublicStopEv'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='3977' u='c' c='_ZN12lldb_private7Process16ProcessEventData11DoOnRemovalEPNS_5EventE'/>
