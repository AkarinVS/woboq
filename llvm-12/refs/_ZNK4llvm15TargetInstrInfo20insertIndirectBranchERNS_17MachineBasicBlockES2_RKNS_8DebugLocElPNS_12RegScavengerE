<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='577' ll='583' type='unsigned int llvm::TargetInstrInfo::insertIndirectBranch(llvm::MachineBasicBlock &amp; MBB, llvm::MachineBasicBlock &amp; NewDestBB, const llvm::DebugLoc &amp; DL, int64_t BrOffset = 0, llvm::RegScavenger * RS = nullptr) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='572'>/// Insert an unconditional indirect branch at the end of \p MBB to \p
  /// NewDestBB.  \p BrOffset indicates the offset of \p NewDestBB relative to
  /// the offset of the position to insert the new branch.
  ///
  /// \returns The number of bytes added to the block.</doc>
<use f='llvm/llvm/lib/CodeGen/BranchRelaxation.cpp' l='466' u='c' c='_ZN12_GLOBAL__N_116BranchRelaxation24fixupUnconditionalBranchERN4llvm12MachineInstrE'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='2078' c='_ZNK4llvm11SIInstrInfo20insertIndirectBranchERNS_17MachineBasicBlockES2_RKNS_8DebugLocElPNS_12RegScavengerE'/>
<ovr f='llvm/llvm/lib/Target/AVR/AVRInstrInfo.cpp' l='558' c='_ZNK4llvm12AVRInstrInfo20insertIndirectBranchERNS_17MachineBasicBlockES2_RKNS_8DebugLocElPNS_12RegScavengerE'/>
<ovr f='llvm/llvm/lib/Target/RISCV/RISCVInstrInfo.cpp' l='414' c='_ZNK4llvm14RISCVInstrInfo20insertIndirectBranchERNS_17MachineBasicBlockES2_RKNS_8DebugLocElPNS_12RegScavengerE'/>
