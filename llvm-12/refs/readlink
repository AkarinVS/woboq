<dec f='include/unistd.h' l='808' type='ssize_t readlink(const char *__restrict __path, char *__restrict __buf, size_t __len)'/>
<doc f='include/unistd.h' l='805'>/* Read the contents of the symbolic link PATH into no more than
   LEN bytes of BUF.  The contents are not null-terminated.
   Returns the number of characters read, or -1 for errors.  */</doc>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='7194' macro='1' type='SSIZE_T readlink(const char * path, char * buf, SIZE_T bufsiz)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='7204' u='a' c='_ZL28InitializeCommonInterceptorsv'/>
<use f='llvm/libcxx/src/filesystem/operations.cpp' l='1207' u='c' c='_ZNSt3__14__fs10filesystem14__read_symlinkERKNS1_4pathEPNS_10error_codeE'/>
<use f='llvm/lldb/source/Host/common/File.cpp' l='351' u='c' c='_ZNK12lldb_private10NativeFile11GetFileSpecERNS_8FileSpecE'/>
<use f='llvm/lldb/source/Host/linux/Host.cpp' l='170' u='c' c='_ZL17GetExePathAndArchiRN12lldb_private19ProcessInstanceInfoE'/>
<use f='llvm/lldb/source/Host/linux/HostInfoLinux.cpp' l='166' u='c' c='_ZN12lldb_private13HostInfoLinux18GetProgramFileSpecEv'/>
<use f='llvm/lldb/source/Host/posix/FileSystemPosix.cpp' l='46' u='c' c='_ZN12lldb_private10FileSystem8ReadlinkERKNS_8FileSpecERS1_'/>
<use f='llvm/llvm/lib/Support/Unix/Path.inc' l='251' u='c' c='_ZN4llvm3sys2fs17getMainExecutableB5cxx11EPKcPv'/>
<use f='llvm/llvm/lib/Support/Unix/Path.inc' l='1041' u='c' c='_ZN4llvm3sys2fs15openFileForReadERKNS_5TwineERiNS1_9OpenFlagsEPNS_15SmallVectorImplIcEE'/>
