<dec f='llvm/polly/include/polly/CodeGen/LoopGeneratorsGOMP.h' l='53' type='std::tuple&lt;Value *, Function *&gt; polly::ParallelLoopGeneratorGOMP::createSubFn(llvm::Value * Stride, llvm::AllocaInst * Struct, SetVector&lt;llvm::Value *&gt; UsedValues, polly::ValueMapT &amp; VMap)'/>
<inh f='llvm/polly/include/polly/CodeGen/LoopGenerators.h' l='214' c='_ZN5polly21ParallelLoopGenerator11createSubFnEPN4llvm5ValueEPNS1_10AllocaInstENS1_9SetVectorIS3_St6vectorIS3_SaIS3_EENS1_8DenseSetIS3_NS1_12DenseMapIn9538730'/>
<def f='llvm/polly/lib/CodeGen/LoopGeneratorsGOMP.cpp' l='90' ll='170' type='std::tuple&lt;Value *, Function *&gt; polly::ParallelLoopGeneratorGOMP::createSubFn(llvm::Value * Stride, llvm::AllocaInst * StructData, SetVector&lt;llvm::Value *&gt; Data, polly::ValueMapT &amp; Map)'/>
<doc f='llvm/polly/lib/CodeGen/LoopGeneratorsGOMP.cpp' l='70'>// Create a subfunction of the following (preliminary) structure:
//
//    PrevBB
//       |
//       v
//    HeaderBB
//       |   _____
//       v  v    |
//   CheckNextBB  PreHeaderBB
//       |\       |
//       | \______/
//       |
//       v
//     ExitBB
//
// HeaderBB will hold allocations and loading of variables.
// CheckNextBB will check for more work.
// If there is more work to do: go to PreHeaderBB, otherwise go to ExitBB.
// PreHeaderBB loads the new boundaries (&amp; will lead to the loop body later on).
// ExitBB marks the end of the parallel execution.</doc>
