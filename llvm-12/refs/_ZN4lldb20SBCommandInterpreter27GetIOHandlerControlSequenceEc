<dec f='llvm/lldb/include/lldb/API/SBCommandInterpreter.h' l='243' type='const char * lldb::SBCommandInterpreter::GetIOHandlerControlSequence(char ch)'/>
<use f='llvm/build/tools/lldb/bindings/python/LLDBWrapPython.cpp' l='13189' u='c' c='_ZL54_wrap_SBCommandInterpreter_GetIOHandlerControlSequenceP7_objectS0_'/>
<doc f='llvm/lldb/include/lldb/API/SBCommandInterpreter.h' l='228'>/// Get the string that needs to be written to the debugger stdin file
  /// handle when a control character is typed.
  ///
  /// Some GUI programs will intercept &quot;control + char&quot; sequences and want
  /// to have them do what normally would happen when using a real
  /// terminal, so this function allows GUI programs to emulate this
  /// functionality.
  ///
  /// \param[in] ch
  ///     The character that was typed along with the control key
  ///
  /// \return
  ///     The string that should be written into the file handle that is
  ///     feeding the input stream for the debugger, or nullptr if there is
  ///     no string for this control key.</doc>
<def f='llvm/lldb/source/API/SBCommandInterpreter.cpp' l='143' ll='152' type='const char * lldb::SBCommandInterpreter::GetIOHandlerControlSequence(char ch)'/>
<use f='llvm/lldb/source/API/SBCommandInterpreter.cpp' l='145' u='a' c='_ZN4lldb20SBCommandInterpreter27GetIOHandlerControlSequenceEc'/>
<use f='llvm/lldb/source/API/SBCommandInterpreter.cpp' l='145' u='a' c='_ZN4lldb20SBCommandInterpreter27GetIOHandlerControlSequenceEc'/>
<use f='llvm/lldb/source/API/SBCommandInterpreter.cpp' l='784' u='a' c='_ZN12lldb_private5repro15RegisterMethodsERNS0_8RegistryE'/>
