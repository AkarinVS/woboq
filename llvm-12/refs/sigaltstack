<dec f='include/signal.h' l='321' type='int sigaltstack(const stack_t *__restrict __ss, stack_t *__restrict __oss)'/>
<doc f='include/signal.h' l='319'>/* Alternate signal handler stack interface.
   This interface should always be preferred over `sigstack&apos;.  */</doc>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='9981' macro='1' type='int sigaltstack(void * ss, void * oss)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='9990' u='a' c='_ZL28InitializeCommonInterceptorsv'/>
<use f='llvm/compiler-rt/lib/asan/asan_posix.cpp' l='44' u='c' c='__asan::PlatformUnpoisonStacks'/>
<use f='llvm/compiler-rt/lib/dfsan/dfsan_custom.cpp' l='831' u='c' c='__dfsw_sigaltstack'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_posix_libcdep.cpp' l='172' u='c' c='__sanitizer::SetAlternateSignalStack'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_posix_libcdep.cpp' l='183' u='c' c='__sanitizer::SetAlternateSignalStack'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_posix_libcdep.cpp' l='191' u='c' c='__sanitizer::UnsetAlternateSignalStack'/>
<use f='llvm/llvm/lib/Support/Unix/Signals.inc' l='267' u='c' c='_ZL17CreateSigAltStackv'/>
<use f='llvm/llvm/lib/Support/Unix/Signals.inc' l='276' u='c' c='_ZL17CreateSigAltStackv'/>
