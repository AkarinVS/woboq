<dec f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='280' type='llvm::Value * llvm::SCEVExpander::expandCodeForPredicate(const llvm::SCEVPredicate * Pred, llvm::Instruction * Loc)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='277'>/// Generates a code sequence that evaluates this predicate.  The inserted
  /// instructions will be at position \p Loc.  The result will be of type i1
  /// and will have a value of 0 when the predicate is false and 1 otherwise.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/LoopVersioning.cpp' l='70' u='c' c='_ZN4llvm14LoopVersioning11versionLoopERKNS_15SmallVectorImplIPNS_11InstructionEEE'/>
<def f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='2414' ll='2428' type='llvm::Value * llvm::SCEVExpander::expandCodeForPredicate(const llvm::SCEVPredicate * Pred, llvm::Instruction * IP)'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='2571' u='c' c='_ZN4llvm12SCEVExpander20expandUnionPredicateEPKNS_18SCEVUnionPredicateEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='3137' u='c' c='_ZN4llvm19InnerLoopVectorizer14emitSCEVChecksEPNS_4LoopEPNS_10BasicBlockE'/>
