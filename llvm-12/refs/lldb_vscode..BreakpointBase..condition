<dec f='llvm/lldb/tools/lldb-vscode/BreakpointBase.h' l='22' type='std::string'/>
<use f='llvm/lldb/tools/lldb-vscode/BreakpointBase.cpp' l='15' u='w' c='_ZN11lldb_vscode14BreakpointBaseC1ERKN4llvm4json6ObjectE'/>
<use f='llvm/lldb/tools/lldb-vscode/BreakpointBase.cpp' l='19' u='m' c='_ZN11lldb_vscode14BreakpointBase12SetConditionEv'/>
<use f='llvm/lldb/tools/lldb-vscode/BreakpointBase.cpp' l='28' u='r' c='_ZN11lldb_vscode14BreakpointBase16UpdateBreakpointERKS0_'/>
<use f='llvm/lldb/tools/lldb-vscode/BreakpointBase.cpp' l='28' u='r' c='_ZN11lldb_vscode14BreakpointBase16UpdateBreakpointERKS0_'/>
<use f='llvm/lldb/tools/lldb-vscode/BreakpointBase.cpp' l='29' u='w' c='_ZN11lldb_vscode14BreakpointBase16UpdateBreakpointERKS0_'/>
<use f='llvm/lldb/tools/lldb-vscode/BreakpointBase.cpp' l='29' u='r' c='_ZN11lldb_vscode14BreakpointBase16UpdateBreakpointERKS0_'/>
<offset>0</offset>
<doc f='llvm/lldb/tools/lldb-vscode/BreakpointBase.h' l='21'>// An optional expression for conditional breakpoints.</doc>
<use f='llvm/lldb/tools/lldb-vscode/FunctionBreakpoint.cpp' l='24' u='m' c='_ZN11lldb_vscode18FunctionBreakpoint13SetBreakpointEv'/>
<use f='llvm/lldb/tools/lldb-vscode/SourceBreakpoint.cpp' l='23' u='m' c='_ZN11lldb_vscode16SourceBreakpoint13SetBreakpointEN4llvm9StringRefE'/>
