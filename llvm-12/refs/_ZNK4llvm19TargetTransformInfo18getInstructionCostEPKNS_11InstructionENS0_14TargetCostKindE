<def f='llvm/llvm/include/llvm/Analysis/TargetTransformInfo.h' l='235' ll='253' type='llvm::InstructionCost llvm::TargetTransformInfo::getInstructionCost(const llvm::Instruction * I, enum TargetCostKind kind) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/TargetTransformInfo.h' l='228'>/// Query the cost of a specified instruction.
  ///
  /// Clients should use this interface to query the cost of an existing
  /// instruction. The instruction must have a valid parent (basic block).
  ///
  /// Note, this method does not cache the cost calculation and it
  /// can be expensive in some cases.</doc>
<use f='llvm/llvm/lib/Analysis/CostModel.cpp' l='61' u='c' c='_ZNK12_GLOBAL__N_117CostModelAnalysis18getInstructionCostEPKN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Analysis/CostModel.cpp' l='106' u='c' c='_ZNK12_GLOBAL__N_117CostModelAnalysis5printERN4llvm11raw_ostreamEPKNS1_6ModuleE'/>
<use f='llvm/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp' l='1161' u='c' c='_ZN12_GLOBAL__N_126InterleavedLoadCombineImpl7combineERNSt7__cxx114listINS_10VectorInfoESaIS3_EEERN4llvm25OptimizationRemarkEmitterE'/>
<use f='llvm/llvm/lib/Transforms/IPO/HotColdSplitting.cpp' l='249' u='c' c='_ZL19getOutliningBenefitN4llvm8ArrayRefIPNS_10BasicBlockEEERNS_19TargetTransformInfoE'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='272' u='c' c='_ZN4llvm16OutlinableRegion10getBenefitERNS_19TargetTransformInfoE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/CallSiteSplitting.cpp' l='214' u='c' c='_ZL16canSplitCallSiteRN4llvm8CallBaseERNS_19TargetTransformInfoE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7460' u='c' c='_ZN4llvm26LoopVectorizationCostModel18getInstructionCostEPNS_11InstructionENS_12ElementCountERPNS_4TypeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='3830' u='c' c='_ZN4llvm13slpvectorizer7BoUpSLP12getEntryCostEPNS1_9TreeEntryE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='3834' u='c' c='_ZN4llvm13slpvectorizer7BoUpSLP12getEntryCostEPNS1_9TreeEntryE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='3840' u='c' c='_ZN4llvm13slpvectorizer7BoUpSLP12getEntryCostEPNS1_9TreeEntryE'/>
