<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='459' type='bool llvm::recognizeBSwapOrBitReverseIdiom(llvm::Instruction * I, bool MatchBSwaps, bool MatchBitReversals, SmallVectorImpl&lt;llvm::Instruction *&gt; &amp; InsertedInsts)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='444'>//===----------------------------------------------------------------------===//
//  Intrinsic pattern matching
//

/// Try to match a bswap or bitreverse idiom.
///
/// If an idiom is matched, an intrinsic call is inserted before \c I. Any added
/// instructions are returned in \c InsertedInsts. They will all have been added
/// to a basic block.
///
/// A bitreverse idiom normally requires around 2*BW nodes to be searched (where
/// BW is the bitwidth of the integer type). A bswap idiom requires anywhere up
/// to BW / 4 nodes to be searched, so is significantly faster.
///
/// This function returns true on a successful match or false otherwise.</doc>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='7689' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare14makeBitReverseERN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='2031' u='c' c='_ZN4llvm16InstCombinerImpl22matchBSwapOrBitReverseERNS_14BinaryOperatorEbb'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='3066' ll='3160' type='bool llvm::recognizeBSwapOrBitReverseIdiom(llvm::Instruction * I, bool MatchBSwaps, bool MatchBitReversals, SmallVectorImpl&lt;llvm::Instruction *&gt; &amp; InsertedInsts)'/>
