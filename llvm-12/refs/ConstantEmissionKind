<def f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='1459' ll='1464'/>
<use f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='1465' c='_ZL31checkVarTypeForConstantEmissionN5clang8QualTypeE'/>
<use f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='1488' c='_ZN5clang7CodeGen15CodeGenFunction17tryEmitAsConstantEPNS_11DeclRefExprE'/>
<doc f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='1452'>/// Can we constant-emit a load of a reference to a variable of the
/// given type?  This is different from predicates like
/// Decl::mightBeUsableInConstantExpressions because we do want it to apply
/// in situations that don&apos;t necessarily satisfy the language&apos;s rules
/// for this (e.g. C++&apos;s ODR-use rules).  For example, we want to able
/// to do this with const float variables even if those variables
/// aren&apos;t marked &apos;constexpr&apos;.</doc>
