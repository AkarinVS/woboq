<dec f='llvm/llvm/include/llvm/MC/MCRegisterInfo.h' l='474' type='unsigned int llvm::MCRegisterInfo::getSubRegIdxOffset(unsigned int Idx) const'/>
<doc f='llvm/llvm/include/llvm/MC/MCRegisterInfo.h' l='471'>/// Get the offset of the bit range covered by a sub-register index.
  /// If an Offset doesn&apos;t make sense (the index isn&apos;t continuous, or is used to
  /// access sub-registers at different offsets), return -1.</doc>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/DwarfExpression.cpp' l='125' u='c' c='_ZN4llvm15DwarfExpression13addMachineRegERKNS_18TargetRegisterInfoENS_8RegisterEj'/>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/DwarfExpression.cpp' l='148' u='c' c='_ZN4llvm15DwarfExpression13addMachineRegERKNS_18TargetRegisterInfoENS_8RegisterEj'/>
<use f='llvm/llvm/lib/CodeGen/StackMaps.cpp' l='253' u='c' c='_ZNK4llvm9StackMaps12parseOperandEPKNS_14MachineOperandES3_RNS_11SmallVectorINS0_8LocationELj8EEERNS4_INS0_10LiveOutRegELj8EEE'/>
<use f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='404' u='c' c='_ZNK4llvm15TargetInstrInfo17getStackSlotRangeEPKNS_19TargetRegisterClassEjRjS4_RKNS_15MachineFunctionE'/>
<def f='llvm/llvm/lib/MC/MCRegisterInfo.cpp' l='62' ll='66' type='unsigned int llvm::MCRegisterInfo::getSubRegIdxOffset(unsigned int Idx) const'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIRegisterInfo.h' l='297' u='c' c='_ZNK4llvm14SIRegisterInfo20getChannelFromSubRegEj'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIRegisterInfo.cpp' l='72' u='c' c='_ZN4llvm14SIRegisterInfoC1ERKNS_12GCNSubtargetE'/>
