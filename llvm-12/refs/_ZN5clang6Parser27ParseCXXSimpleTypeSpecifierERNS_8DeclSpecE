<dec f='llvm/clang/include/clang/Parse/Parser.h' l='1975' type='void clang::Parser::ParseCXXSimpleTypeSpecifier(clang::DeclSpec &amp; DS)'/>
<doc f='llvm/clang/include/clang/Parse/Parser.h' l='1972'>/// ParseCXXSimpleTypeSpecifier - [C++ 7.1.5.2] Simple type specifiers.
  /// This should only be called when the current token is known to be part of
  /// simple-type-specifier.</doc>
<use f='llvm/clang/lib/Parse/ParseExpr.cpp' l='1554' u='c' c='_ZN5clang6Parser19ParseCastExpressionENS0_13CastParseKindEbRbNS0_13TypeCastStateEbPb'/>
<def f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2156' ll='2280' type='void clang::Parser::ParseCXXSimpleTypeSpecifier(clang::DeclSpec &amp; DS)'/>
<doc f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2130'>/// ParseCXXSimpleTypeSpecifier - [C++ 7.1.5.2] Simple type specifiers.
/// This should only be called when the current token is known to be part of
/// simple-type-specifier.
///
///       simple-type-specifier:
///         &apos;::&apos;[opt] nested-name-specifier[opt] type-name
///         &apos;::&apos;[opt] nested-name-specifier &apos;template&apos; simple-template-id [TODO]
///         char
///         wchar_t
///         bool
///         short
///         int
///         long
///         signed
///         unsigned
///         float
///         double
///         void
/// [GNU]   typeof-specifier
/// [C++0x] auto               [TODO]
///
///       type-name:
///         class-name
///         enum-name
///         typedef-name
///</doc>
<use f='llvm/clang/lib/Parse/ParseObjc.cpp' l='2923' u='c' c='_ZN5clang6Parser26ParseObjCXXMessageReceiverERbRPv'/>
