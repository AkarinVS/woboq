<dec f='llvm/llvm/include/llvm/LTO/legacy/LTOCodeGenerator.h' l='156' type='std::unique_ptr&lt;MemoryBuffer&gt; llvm::LTOCodeGenerator::compile()'/>
<def f='llvm/llvm/lib/LTO/LTOCodeGenerator.cpp' l='336' ll='341' type='std::unique_ptr&lt;MemoryBuffer&gt; llvm::LTOCodeGenerator::compile()'/>
<doc f='llvm/llvm/include/llvm/LTO/legacy/LTOCodeGenerator.h' l='150'>/// As with compile_to_file(), this function compiles the merged module into
  /// single output file. Instead of returning the output file path to the
  /// caller (linker), it brings the output to a buffer, and returns the buffer
  /// to the caller. This function should delete the intermediate file once
  /// its content is brought to memory. Return NULL if the compilation was not
  /// successful.</doc>
<use f='llvm/llvm/tools/lto/lto.cpp' l='436' u='c' c='lto_codegen_compile'/>
