<inh f='llvm/llvm/include/llvm/MC/MCParser/MCAsmLexer.h' l='39' c='llvm::MCAsmLexer'/>
<def f='llvm/llvm/include/llvm/MC/MCParser/AsmLexer.h' l='25' ll='72'/>
<use f='llvm/llvm/include/llvm/MC/MCParser/AsmLexer.h' l='41' c='_ZN4llvm8AsmLexerC1ERKS0_'/>
<use f='llvm/llvm/include/llvm/MC/MCParser/AsmLexer.h' l='42' c='_ZN4llvm8AsmLexeraSERKS0_'/>
<use f='llvm/llvm/include/llvm/MC/MCParser/AsmLexer.h' l='42' c='_ZN4llvm8AsmLexeraSERKS0_'/>
<size>176</size>
<doc f='llvm/llvm/include/llvm/MC/MCParser/AsmLexer.h' l='24'>/// AsmLexer - Lexer class for assembly files.</doc>
<mbr r='llvm::AsmLexer::MAI' o='1088' t='const llvm::MCAsmInfo &amp;'/>
<mbr r='llvm::AsmLexer::CurPtr' o='1152' t='const char *'/>
<mbr r='llvm::AsmLexer::CurBuf' o='1216' t='llvm::StringRef'/>
<mbr r='llvm::AsmLexer::IsAtStartOfLine' o='1344' t='bool'/>
<mbr r='llvm::AsmLexer::IsAtStartOfStatement' o='1352' t='bool'/>
<mbr r='llvm::AsmLexer::IsPeeking' o='1360' t='bool'/>
<mbr r='llvm::AsmLexer::EndStatementAtEOF' o='1368' t='bool'/>
<fun r='_ZN4llvm8AsmLexer8LexTokenEv'/>
<fun r='_ZN4llvm8AsmLexerC1ERKNS_9MCAsmInfoE'/>
<fun r='_ZN4llvm8AsmLexerC1ERKS0_'/>
<fun r='_ZN4llvm8AsmLexeraSERKS0_'/>
<fun r='_ZN4llvm8AsmLexerD1Ev'/>
<fun r='_ZN4llvm8AsmLexer9setBufferENS_9StringRefEPKcb'/>
<fun r='_ZN4llvm8AsmLexer22LexUntilEndOfStatementEv'/>
<fun r='_ZN4llvm8AsmLexer10peekTokensENS_15MutableArrayRefINS_8AsmTokenEEEb'/>
<fun r='_ZNK4llvm8AsmLexer6getMAIEv'/>
<fun r='_ZN4llvm8AsmLexer18isAtStartOfCommentEPKc'/>
<fun r='_ZN4llvm8AsmLexer22isAtStatementSeparatorEPKc'/>
<fun r='_ZN4llvm8AsmLexer11getNextCharEv'/>
<fun r='_ZN4llvm8AsmLexer12peekNextCharEv'/>
<fun r='_ZN4llvm8AsmLexer11ReturnErrorEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<fun r='_ZN4llvm8AsmLexer13LexIdentifierEv'/>
<fun r='_ZN4llvm8AsmLexer8LexSlashEv'/>
<fun r='_ZN4llvm8AsmLexer14LexLineCommentEv'/>
<fun r='_ZN4llvm8AsmLexer8LexDigitEv'/>
<fun r='_ZN4llvm8AsmLexer14LexSingleQuoteEv'/>
<fun r='_ZN4llvm8AsmLexer8LexQuoteEv'/>
<fun r='_ZN4llvm8AsmLexer15LexFloatLiteralEv'/>
<fun r='_ZN4llvm8AsmLexer18LexHexFloatLiteralEb'/>
<fun r='_ZN4llvm8AsmLexer17LexUntilEndOfLineEv'/>
<fun r='_ZN4llvm8AsmLexerC1ERKNS_9MCAsmInfoE'/>
<fun r='_ZN4llvm8AsmLexerD1Ev'/>
<fun r='_ZN4llvm8AsmLexer9setBufferENS_9StringRefEPKcb'/>
<fun r='_ZN4llvm8AsmLexer11ReturnErrorEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<fun r='_ZN4llvm8AsmLexer11getNextCharEv'/>
<fun r='_ZN4llvm8AsmLexer12peekNextCharEv'/>
<fun r='_ZN4llvm8AsmLexer15LexFloatLiteralEv'/>
<fun r='_ZN4llvm8AsmLexer18LexHexFloatLiteralEb'/>
<fun r='_ZN4llvm8AsmLexer13LexIdentifierEv'/>
<fun r='_ZN4llvm8AsmLexer8LexSlashEv'/>
<fun r='_ZN4llvm8AsmLexer14LexLineCommentEv'/>
<fun r='_ZN4llvm8AsmLexer8LexDigitEv'/>
<fun r='_ZN4llvm8AsmLexer14LexSingleQuoteEv'/>
<fun r='_ZN4llvm8AsmLexer8LexQuoteEv'/>
<fun r='_ZN4llvm8AsmLexer22LexUntilEndOfStatementEv'/>
<fun r='_ZN4llvm8AsmLexer17LexUntilEndOfLineEv'/>
<fun r='_ZN4llvm8AsmLexer10peekTokensENS_15MutableArrayRefINS_8AsmTokenEEEb'/>
<fun r='_ZN4llvm8AsmLexer18isAtStartOfCommentEPKc'/>
<fun r='_ZN4llvm8AsmLexer22isAtStatementSeparatorEPKc'/>
<fun r='_ZN4llvm8AsmLexer8LexTokenEv'/>
<use f='llvm/llvm/lib/MC/MCParser/AsmParser.cpp' l='121'/>
<use f='llvm/llvm/lib/MC/MCParser/AsmParser.cpp' l='2577' c='_ZN12_GLOBAL__N_121AsmLexerSkipSpaceRAIIC1ERN4llvm8AsmLexerEb'/>
<use f='llvm/llvm/lib/MC/MCParser/AsmParser.cpp' l='2586'/>
<size>176</size>
<use f='llvm/llvm/lib/MC/MCParser/MasmParser.cpp' l='362'/>
<use f='llvm/llvm/lib/MC/MCParser/MasmParser.cpp' l='2875' c='_ZN12_GLOBAL__N_121AsmLexerSkipSpaceRAIIC1ERN4llvm8AsmLexerEb'/>
<use f='llvm/llvm/lib/MC/MCParser/MasmParser.cpp' l='2884'/>
<size>176</size>
<use f='llvm/llvm/tools/llvm-mc/llvm-mc.cpp' l='251' c='_ZL10AsLexInputRN4llvm9SourceMgrERNS_9MCAsmInfoERNS_11raw_ostreamE'/>
<size>176</size>
<use f='llvm/llvm/tools/llvm-ml/llvm-ml.cpp' l='109' c='_ZL10AsLexInputRN4llvm9SourceMgrERNS_9MCAsmInfoERNS_11raw_ostreamE'/>
<size>176</size>
