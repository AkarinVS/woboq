<def f='llvm/llvm/include/llvm/DebugInfo/GSYM/FunctionInfo.h' l='199' ll='209' type='bool llvm::gsym::operator&lt;(const llvm::gsym::FunctionInfo &amp; LHS, const llvm::gsym::FunctionInfo &amp; RHS)'/>
<doc f='llvm/llvm/include/llvm/DebugInfo/GSYM/FunctionInfo.h' l='194'>/// This sorting will order things consistently by address range first, but then
/// followed by inlining being valid and line tables. We might end up with a
/// FunctionInfo from debug info that will have the same range as one from the
/// symbol table, but we want to quickly be able to sort and use the best version
/// when creating the final GSYM file.</doc>
