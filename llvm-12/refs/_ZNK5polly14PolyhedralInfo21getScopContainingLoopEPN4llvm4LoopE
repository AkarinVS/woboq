<dec f='llvm/polly/include/polly/PolyhedralInfo.h' l='55' type='const polly::Scop * polly::PolyhedralInfo::getScopContainingLoop(llvm::Loop * L) const'/>
<use f='llvm/polly/lib/Analysis/PolyhedralInfo.cpp' l='75' u='c' c='_ZNK5polly14PolyhedralInfo13checkParallelEPN4llvm4LoopEPP10isl_pw_aff'/>
<def f='llvm/polly/lib/Analysis/PolyhedralInfo.cpp' l='101' ll='109' type='const polly::Scop * polly::PolyhedralInfo::getScopContainingLoop(llvm::Loop * L) const'/>
<doc f='llvm/polly/include/polly/PolyhedralInfo.h' l='49'>/// Return the SCoP containing the @p L loop.
  ///
  /// @param L The loop.
  ///
  /// @return  Returns the SCoP containing the given loop.
  ///          Returns null if the loop is not contained in any SCoP.</doc>
