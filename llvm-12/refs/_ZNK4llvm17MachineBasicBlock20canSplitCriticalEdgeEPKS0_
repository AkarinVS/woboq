<dec f='llvm/llvm/include/llvm/CodeGen/MachineBasicBlock.h' l='706' type='bool llvm::MachineBasicBlock::canSplitCriticalEdge(const llvm::MachineBasicBlock * Succ) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineBasicBlock.h' l='702'>/// Check if the edge between this block and the given successor \p
  /// Succ, can be split. If this returns true a subsequent call to
  /// SplitCriticalEdge is guaranteed to return a valid basic block if
  /// no changes occurred in the meantime.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp' l='944' u='c' c='_ZNK4llvm13RegBankSelect15EdgeInsertPoint14canMaterializeEv'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='991' u='c' c='_ZN4llvm17MachineBasicBlock17SplitCriticalEdgeEPS0_RNS_4PassEPSt6vectorINS_15SparseBitVectorILj128EEESaIS6_EE'/>
<def f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='1228' ll='1266' type='bool llvm::MachineBasicBlock::canSplitCriticalEdge(const llvm::MachineBasicBlock * Succ) const'/>
