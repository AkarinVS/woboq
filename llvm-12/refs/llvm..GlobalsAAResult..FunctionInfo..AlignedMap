<def f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='70' ll='74'/>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='72' c='_ZN4llvm15GlobalsAAResult12FunctionInfo10AlignedMapC1ERKS2_'/>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='78' c='_ZN4llvm15GlobalsAAResult12FunctionInfo23AlignedMapPointerTraits16getAsVoidPointerEPNS1_10AlignedMapE'/>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='79' c='_ZN4llvm15GlobalsAAResult12FunctionInfo23AlignedMapPointerTraits18getFromVoidPointerEPv'/>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='80' c='_ZN4llvm15GlobalsAAResult12FunctionInfo23AlignedMapPointerTraits18getFromVoidPointerEPv'/>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='83'/>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='115' c='_ZN4llvm15GlobalsAAResult12FunctionInfoC1ERKS1_'/>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='125' c='_ZN4llvm15GlobalsAAResult12FunctionInfoaSERKS1_'/>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='165' c='_ZNK4llvm15GlobalsAAResult12FunctionInfo22getModRefInfoForGlobalERKNS_11GlobalValueE'/>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='181' c='_ZN4llvm15GlobalsAAResult12FunctionInfo15addFunctionInfoERKS1_'/>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='187' c='_ZN4llvm15GlobalsAAResult12FunctionInfo22addModRefInfoForGlobalERKNS_11GlobalValueENS_10ModRefInfoE'/>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='189' c='_ZN4llvm15GlobalsAAResult12FunctionInfo22addModRefInfoForGlobalERKNS_11GlobalValueENS_10ModRefInfoE'/>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='199' c='_ZN4llvm15GlobalsAAResult12FunctionInfo24eraseModRefInfoForGlobalERKNS_11GlobalValueE'/>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='209'/>
<size>264</size>
<doc f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='67'>/// Build a wrapper struct that has 8-byte alignment. All heap allocations
  /// should provide this much alignment at least, but this makes it clear we
  /// specifically rely on this amount of alignment.</doc>
