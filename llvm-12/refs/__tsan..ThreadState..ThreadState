<dec f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='450' type='void __tsan::ThreadState::ThreadState(__tsan::Context * ctx, int tid, int unique_id, __sanitizer::u64 epoch, unsigned int reuse_count, __sanitizer::uptr stk_addr, __sanitizer::uptr stk_size, __sanitizer::uptr tls_addr, __sanitizer::uptr tls_size)'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.cpp' l='112' ll='135' type='void __tsan::ThreadState::ThreadState(__tsan::Context * ctx, int tid, int unique_id, __sanitizer::u64 epoch, unsigned int reuse_count, __sanitizer::uptr stk_addr, __sanitizer::uptr stk_size, __sanitizer::uptr tls_addr, __sanitizer::uptr tls_size)'/>
<doc f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.cpp' l='111'>// The objects are allocated in TLS, so one may rely on zero-initialization.</doc>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_thread.cpp' l='95' u='c' c='__tsan::ThreadContext::OnStarted'/>
