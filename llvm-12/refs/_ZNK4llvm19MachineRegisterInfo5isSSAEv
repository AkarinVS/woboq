<def f='llvm/llvm/include/llvm/CodeGen/MachineRegisterInfo.h' l='185' ll='188' type='bool llvm::MachineRegisterInfo::isSSA() const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineRegisterInfo.h' l='174'>//===--------------------------------------------------------------------===//
  // Function State
  //===--------------------------------------------------------------------===//

  // isSSA - Returns true when the machine function is in SSA form. Early
  // passes require the machine function to be in SSA form where every virtual
  // register has a single defining instruction.
  //
  // The TwoAddressInstructionPass and PHIElimination passes take the machine
  // function out of SSA form when they introduce multiple defs per virtual
  // register.</doc>
<use f='llvm/llvm/lib/CodeGen/IfConversion.cpp' l='460' u='c' c='_ZN12_GLOBAL__N_111IfConverter20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/CodeGen/LiveVariables.cpp' l='634' u='c' c='_ZN4llvm13LiveVariables20runOnMachineFunctionERNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/CodeGen/MachineLICM.cpp' l='348' u='c' c='_ZN12_GLOBAL__N_115MachineLICMBase20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/CodeGen/MachineVerifier.cpp' l='2187' u='c' c='_ZN12_GLOBAL__N_115MachineVerifier13checkLivenessEPKN4llvm14MachineOperandEj'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp' l='345' u='c' c='_ZN12_GLOBAL__N_115SIWholeQuadMode19markInstructionUsesERKN4llvm12MachineInstrEcRSt6vectorINS_8WorkItemESaIS6_EE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp' l='360' u='c' c='_ZN12_GLOBAL__N_115SIWholeQuadMode19markInstructionUsesERKN4llvm12MachineInstrEcRSt6vectorINS_8WorkItemESaIS6_EE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp' l='936' u='c' c='_ZN12_GLOBAL__N_115SIWholeQuadMode15lowerCopyInstrsEv'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='3213' u='c' c='_ZNK4llvm12PPCInstrInfo18getForwardingDefMIERNS_12MachineInstrERjRb'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='3311' u='c' c='_ZNK4llvm12PPCInstrInfo17fixupIsDeadOrKillEPNS_12MachineInstrES2_j'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='3322' u='c' c='_ZNK4llvm12PPCInstrInfo17fixupIsDeadOrKillEPNS_12MachineInstrES2_j'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='3426' u='c' c='_ZNK4llvm12PPCInstrInfo15foldFrameOffsetERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='3636' u='c' c='_ZNK4llvm12PPCInstrInfo22convertToImmediateFormERNS_12MachineInstrEPPS1_'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='4290' u='c' c='_ZNK4llvm12PPCInstrInfo27isUseMIElgibleForForwardingERNS_12MachineInstrERKNS_12ImmInstrInfoEj'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='4355' u='c' c='_ZNK4llvm12PPCInstrInfo25isRegElgibleForForwardingERKNS_14MachineOperandERKNS_12MachineInstrES6_bRb'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='4448' u='c' c='_ZNK4llvm12PPCInstrInfo12simplifyToLIERNS_12MachineInstrES2_jPPS1_'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='4685' u='c' c='_ZNK4llvm12PPCInstrInfo29transformToNewImmFormFedByAddERNS_12MachineInstrES2_j'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='4815' u='c' c='_ZNK4llvm12PPCInstrInfo26transformToImmFormFedByAddERNS_12MachineInstrERKNS_12ImmInstrInfoEjS2_b'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='4904' u='c' c='_ZNK4llvm12PPCInstrInfo25transformToImmFormFedByLIERNS_12MachineInstrERKNS_12ImmInstrInfoEjS2_'/>
