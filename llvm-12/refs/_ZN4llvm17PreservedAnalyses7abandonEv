<def f='llvm/llvm/include/llvm/IR/PassManager.h' l='209' type='void llvm::PreservedAnalyses::abandon()'/>
<doc f='llvm/llvm/include/llvm/IR/PassManager.h' l='202'>/// Mark an analysis as abandoned.
  ///
  /// An abandoned analysis is not preserved, even if it is nominally covered
  /// by some other set or was previously explicitly marked as preserved.
  ///
  /// Note that you can only abandon a specific analysis, not a *set* of
  /// analyses.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp' l='1046' u='c' c='_ZN4llvm30CorrelatedValuePropagationPass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<use f='llvm/llvm/unittests/IR/PassManagerTest.cpp' l='395' u='c' c='_ZN12_GLOBAL__N_134PreservedAnalysisTest_Abandon_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/PassManagerTest.cpp' l='399' u='c' c='_ZN12_GLOBAL__N_134PreservedAnalysisTest_Abandon_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/PassManagerTest.cpp' l='401' u='c' c='_ZN12_GLOBAL__N_134PreservedAnalysisTest_Abandon_Test8TestBodyEv'/>
