<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='738' ll='741' type='std::unique_ptr&lt;PipelinerLoopInfo&gt; llvm::TargetInstrInfo::analyzeLoopForPipelining(llvm::MachineBasicBlock * LoopBB) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='736'>/// Analyze loop L, which must be a single-basic-block loop, and if the
  /// conditions can be understood enough produce a PipelinerLoopInfo object.</doc>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='357' u='c' c='_ZN4llvm16MachinePipeliner15canPipelineLoopERNS_11MachineLoopE'/>
<use f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='109' u='c' c='_ZN4llvm22ModuloScheduleExpander21generatePipelinedLoopEv'/>
<use f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='1992' u='c' c='_ZN4llvm29PeelingModuloScheduleExpander6expandEv'/>
<ovr f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='761' c='_ZNK4llvm16HexagonInstrInfo24analyzeLoopForPipeliningEPNS_17MachineBasicBlockE'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='5404' c='_ZNK4llvm12PPCInstrInfo24analyzeLoopForPipeliningEPNS_17MachineBasicBlockE'/>
