<dec f='llvm/polly/lib/External/isl/isl_ast_build_expr.h' l='7' type='isl_ast_expr * isl_ast_build_expr_from_basic_set(isl_ast_build * build, isl_basic_set * bset)'/>
<def f='llvm/polly/lib/External/isl/isl_ast_build_expr.c' l='1525' ll='1569' type='isl_ast_expr * isl_ast_build_expr_from_basic_set(isl_ast_build * build, isl_basic_set * bset)'/>
<use f='llvm/polly/lib/External/isl/isl_ast_build_expr.c' l='1618' u='c' c='isl_ast_build_expr_from_set_internal'/>
<use f='llvm/polly/lib/External/isl/isl_ast_build_expr.c' l='1631' u='c' c='isl_ast_build_expr_from_set_internal'/>
<doc f='llvm/polly/lib/External/isl/isl_ast_build_expr.c' l='1505'>/* Construct an isl_ast_expr that evaluates the conditions defining &quot;bset&quot;.
 * The result is simplified in terms of build-&gt;domain.
 *
 * If &quot;bset&quot; is not bounded by any constraint, then we construct
 * the expression &quot;1&quot;, i.e., &quot;true&quot;.
 *
 * Otherwise, we sort the constraints, putting constraints that involve
 * integer divisions after those that do not, and construct an &quot;and&quot;
 * of the ast expressions of the individual constraints.
 *
 * Each constraint is added to the generated constraints of the build
 * after it has been converted to an AST expression so that it can be used
 * to simplify the following constraints.  This may change the truth value
 * of subsequent constraints that do not satisfy the earlier constraints,
 * but this does not affect the outcome of the conjunction as it is
 * only true if all the conjuncts are true (no matter in what order
 * they are evaluated).  In particular, the constraints that do not
 * involve integer divisions may serve to simplify some constraints
 * that do involve integer divisions.
 */</doc>
