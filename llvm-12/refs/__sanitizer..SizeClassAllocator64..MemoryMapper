<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_allocator_primary64.h' l='778' ll='822'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_allocator_primary64.h' l='850' c='__sanitizer::SizeClassAllocator64::MaybeReleaseToOS'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_allocator_primary64.h' l='852' c='__sanitizer::SizeClassAllocator64::MaybeReleaseToOS'/>
<fun r='__sanitizer::SizeClassAllocator64::MemoryMapper::MemoryMapper'/>
<fun r='__sanitizer::SizeClassAllocator64::MemoryMapper::GetReleasedRangesCount'/>
<fun r='__sanitizer::SizeClassAllocator64::MemoryMapper::GetReleasedBytes'/>
<fun r='__sanitizer::SizeClassAllocator64::MemoryMapper::MapPackedCounterArrayBuffer'/>
<fun r='__sanitizer::SizeClassAllocator64::MemoryMapper::UnmapPackedCounterArrayBuffer'/>
<fun r='__sanitizer::SizeClassAllocator64::MemoryMapper::ReleasePageRangeToOS'/>
<mbr r='__sanitizer::SizeClassAllocator64::MemoryMapper::allocator' t='const __sanitizer::SizeClassAllocator64::ThisT &amp;'/>
<mbr r='__sanitizer::SizeClassAllocator64::MemoryMapper::region_base' t='const __sanitizer::uptr'/>
<mbr r='__sanitizer::SizeClassAllocator64::MemoryMapper::released_ranges_count' t='__sanitizer::uptr'/>
<mbr r='__sanitizer::SizeClassAllocator64::MemoryMapper::released_bytes' t='__sanitizer::uptr'/>
