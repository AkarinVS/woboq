<dec f='llvm/llvm/include/llvm/CodeGen/MachineBasicBlock.h' l='626' type='bool llvm::MachineBasicBlock::canFallThrough()'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineBasicBlock.h' l='621'>/// Return true if the block can implicitly transfer control to the
  /// block after it by falling off the end of it.  This should return
  /// false if it can reach the block after it, but it uses an
  /// explicit branch to do so (e.g., a table jump).  True is a
  /// conservative answer.</doc>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='614' u='c' c='_ZL17ProfitableToMergePN4llvm17MachineBasicBlockES1_jRjRNS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEES6_S1_S1_RNS_8DenseMapIPKS0_iNS_12Dens1164237'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='618' u='c' c='_ZL17ProfitableToMergePN4llvm17MachineBasicBlockES1_jRjRNS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEES6_S1_S1_RNS_8DenseMapIPKS0_iNS_12Dens1164237'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1474' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1588' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1658' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1661' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1671' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1712' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<def f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='943' ll='945' type='bool llvm::MachineBasicBlock::canFallThrough()'/>
<use f='llvm/llvm/lib/CodeGen/MachineBlockPlacement.cpp' l='2674' u='c' c='_ZN12_GLOBAL__N_121MachineBlockPlacement14buildCFGChainsEv'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='556' u='c' c='_ZN4llvm14TailDuplicator19shouldTailDuplicateEbRNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='583' u='c' c='_ZN4llvm14TailDuplicator19shouldTailDuplicateEbRNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='823' u='c' c='_ZN4llvm14TailDuplicator13tailDuplicateEbPNS_17MachineBasicBlockES2_RNS_15SmallVectorImplIS2_EERNS3_IPNS_12MachineInstrEEEPS4_'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='855' u='c' c='_ZN4llvm14TailDuplicator13tailDuplicateEbPNS_17MachineBasicBlockES2_RNS_15SmallVectorImplIS2_EERNS3_IPNS_12MachineInstrEEEPS4_'/>
<use f='llvm/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp' l='361' u='c' c='_ZL11AlignBlocksPN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonCFGOptimizer.cpp' l='108' u='c' c='_ZN12_GLOBAL__N_119HexagonCFGOptimizer19isOnFallThroughPathEPN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonCFGOptimizer.cpp' l='111' u='c' c='_ZN12_GLOBAL__N_119HexagonCFGOptimizer19isOnFallThroughPathEPN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCEarlyReturn.cpp' l='141' u='c' c='_ZN12_GLOBAL__N_114PPCEarlyReturn12processBlockERN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCEarlyReturn.cpp' l='161' u='c' c='_ZN12_GLOBAL__N_114PPCEarlyReturn12processBlockERN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCExpandISEL.cpp' l='338' u='c' c='_ZN12_GLOBAL__N_113PPCExpandISEL21reorganizeBlockLayoutERN4llvm11SmallVectorIPNS1_12MachineInstrELj4EEEPNS1_17MachineBasicBlockE'/>
