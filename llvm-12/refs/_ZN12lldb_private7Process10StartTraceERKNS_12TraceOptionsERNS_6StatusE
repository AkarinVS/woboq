<def f='llvm/lldb/include/lldb/Target/Process.h' l='2466' ll='2470' type='lldb::user_id_t lldb_private::Process::StartTrace(const lldb_private::TraceOptions &amp; options, lldb_private::Status &amp; error)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='2458'>/// Starts tracing with the configuration provided in options. To enable
  /// tracing on the complete process the thread_id in the options should be
  /// set to LLDB_INVALID_THREAD_ID. The API returns a user_id which is needed
  /// by other API&apos;s that manipulate the trace instance. The handling of
  /// erroneous or unsupported configuration is left to the trace technology
  /// implementations in the server, as they could be returned as an error, or
  /// rounded to a valid configuration to start tracing. In the later case the
  /// GetTraceConfig should supply the actual used trace configuration.</doc>
<use f='llvm/lldb/source/API/SBProcess.cpp' l='329' u='c' c='_ZN4lldb9SBProcess10StartTraceERNS_14SBTraceOptionsERNS_7SBErrorE'/>
<ovr f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='1202' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote10StartTraceERKNS_12TraceOptionsERNS_6StatusE'/>
