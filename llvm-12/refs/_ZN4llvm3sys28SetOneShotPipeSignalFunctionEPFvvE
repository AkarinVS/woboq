<dec f='llvm/llvm/include/llvm/Support/Signals.h' l='106' type='void llvm::sys::SetOneShotPipeSignalFunction(void (*)() Handler)'/>
<doc f='llvm/llvm/include/llvm/Support/Signals.h' l='90'>/// Registers a function to be called in a &quot;one-shot&quot; manner when a pipe
  /// signal is delivered to the process (i.e., on a failed write to a pipe).
  /// After the pipe signal is handled once, the handler is unregistered.
  ///
  /// The LLVM signal handling code will not install any handler for the pipe
  /// signal unless one is provided with this API (see \ref
  /// DefaultOneShotPipeSignalHandler). This handler must be provided before
  /// any other LLVM signal handlers are installed: the \ref InitLLVM
  /// constructor has a flag that can simplify this setup.
  ///
  /// Note that the handler is not allowed to call any non-reentrant
  /// functions.  A null handler pointer disables the current installed
  /// function.  Note also that the handler may be executed on a
  /// different thread on some platforms.
  ///
  /// This is a no-op on Windows.</doc>
<use f='llvm/llvm/lib/Support/InitLLVM.cpp' l='32' u='c' c='_ZN4llvm8InitLLVMC1ERiRPPKcb'/>
<def f='llvm/llvm/lib/Support/Unix/Signals.inc' l='429' ll='432' type='void llvm::sys::SetOneShotPipeSignalFunction(void (*)() Handler)'/>
