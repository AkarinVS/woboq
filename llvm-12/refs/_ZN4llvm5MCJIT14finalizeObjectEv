<dec f='llvm/llvm/lib/ExecutionEngine/MCJIT/MCJIT.h' l='249' type='void llvm::MCJIT::finalizeObject()'/>
<inh f='llvm/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h' l='278' c='_ZN4llvm15ExecutionEngine14finalizeObjectEv'/>
<def f='llvm/llvm/lib/ExecutionEngine/MCJIT/MCJIT.cpp' l='258' ll='271' type='void llvm::MCJIT::finalizeObject()'/>
<doc f='llvm/llvm/lib/ExecutionEngine/MCJIT/MCJIT.cpp' l='257'>// FIXME: Rename this.</doc>
<doc f='llvm/llvm/lib/ExecutionEngine/MCJIT/MCJIT.h' l='240'>/// finalizeObject - ensure the module is fully processed and is usable.
  ///
  /// It is the user-level function for completing the process of making the
  /// object usable for execution. It should be called after sections within an
  /// object have been relocated using mapSectionAddress.  When this method is
  /// called the MCJIT execution engine will reapply relocations for a loaded
  /// object.
  /// Is it OK to finalize a set of modules, add modules and finalize again.
  // FIXME: Do we really need both of these?</doc>
