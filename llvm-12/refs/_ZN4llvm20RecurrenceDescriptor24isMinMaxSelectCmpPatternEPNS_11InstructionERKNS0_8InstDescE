<dec f='llvm/llvm/include/llvm/Analysis/IVDescriptors.h' l='131' type='static llvm::RecurrenceDescriptor::InstDesc llvm::RecurrenceDescriptor::isMinMaxSelectCmpPattern(llvm::Instruction * I, const llvm::RecurrenceDescriptor::InstDesc &amp; Prev)'/>
<doc f='llvm/llvm/include/llvm/Analysis/IVDescriptors.h' l='127'>/// Returns a struct describing if the instruction is a
  /// Select(ICmp(X, Y), X, Y) instruction pattern corresponding to a min(X, Y)
  /// or max(X, Y). \p Prev specifies the description of an already processed
  /// select instruction, so its corresponding cmp can be matched to it.</doc>
<use f='llvm/llvm/lib/Analysis/IVDescriptors.cpp' l='390' u='c' c='_ZN4llvm20RecurrenceDescriptor15AddReductionVarEPNS_7PHINodeENS_9RecurKindEPNS_4LoopEbRS0_PNS_12DemandedBitsEPNS_15AssumptionCacheEPNS_13DominatorTreeE'/>
<def f='llvm/llvm/lib/Analysis/IVDescriptors.cpp' l='469' ll='507' type='static RecurrenceDescriptor::InstDesc llvm::RecurrenceDescriptor::isMinMaxSelectCmpPattern(llvm::Instruction * I, const llvm::RecurrenceDescriptor::InstDesc &amp; Prev)'/>
<use f='llvm/llvm/lib/Analysis/IVDescriptors.cpp' l='593' u='c' c='_ZN4llvm20RecurrenceDescriptor17isRecurrenceInstrEPNS_11InstructionENS_9RecurKindERNS0_8InstDescEb'/>
