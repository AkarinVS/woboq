<dec f='llvm/llvm/include/llvm/IR/Constants.h' l='622' type='llvm::APInt llvm::ConstantDataSequential::getElementAsAPInt(unsigned int i) const'/>
<doc f='llvm/llvm/include/llvm/IR/Constants.h' l='620'>/// If this is a sequential container of integers (of any size), return the
  /// specified element as an APInt.</doc>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='1835' u='c' c='_ZL16computeKnownBitsPKN4llvm5ValueERKNS_5APIntERNS_9KnownBitsEjRKN12_GLOBAL__N_15QueryE'/>
<use f='llvm/llvm/lib/IR/Constants.cpp' l='120' u='c' c='_ZNK4llvm8Constant14isAllOnesValueEv'/>
<use f='llvm/llvm/lib/IR/Constants.cpp' l='146' u='c' c='_ZNK4llvm8Constant10isOneValueEv'/>
<use f='llvm/llvm/lib/IR/Constants.cpp' l='196' u='c' c='_ZNK4llvm8Constant16isMinSignedValueEv'/>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='3150' ll='3176' type='llvm::APInt llvm::ConstantDataSequential::getElementAsAPInt(unsigned int Elt) const'/>
<use f='llvm/llvm/lib/Target/X86/X86MCInstLower.cpp' l='2256' u='c' c='_ZL19addConstantCommentsPKN4llvm12MachineInstrERNS_10MCStreamerE'/>
