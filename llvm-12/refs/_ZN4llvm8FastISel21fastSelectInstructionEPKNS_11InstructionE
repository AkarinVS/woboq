<dec f='llvm/llvm/include/llvm/CodeGen/FastISel.h' l='330' type='bool llvm::FastISel::fastSelectInstruction(const llvm::Instruction * I)'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp' l='356' u='c' c='_ZN4llvm8FastISel19materializeConstantEPKNS_5ValueENS_3MVTE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp' l='1589' u='c' c='_ZN4llvm8FastISel17selectInstructionEPKNS_11InstructionE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/FastISel.h' l='326'>/// This method is called by target-independent code when the normal
  /// FastISel process fails to select an instruction. This gives targets a
  /// chance to emit code for anything that doesn&apos;t fit into FastISel&apos;s
  /// framework. It returns true if it was successful.</doc>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64FastISel.cpp' l='5152' c='_ZN12_GLOBAL__N_115AArch64FastISel21fastSelectInstructionEPKN4llvm11InstructionE'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMFastISel.cpp' l='2824' c='_ZN12_GLOBAL__N_111ARMFastISel21fastSelectInstructionEPKN4llvm11InstructionE'/>
<ovr f='llvm/llvm/lib/Target/Mips/MipsFastISel.cpp' l='2035' c='_ZN12_GLOBAL__N_112MipsFastISel21fastSelectInstructionEPKN4llvm11InstructionE'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCFastISel.cpp' l='1942' c='_ZN12_GLOBAL__N_111PPCFastISel21fastSelectInstructionEPKN4llvm11InstructionE'/>
<ovr f='llvm/llvm/lib/Target/WebAssembly/WebAssemblyFastISel.cpp' l='1377' c='_ZN12_GLOBAL__N_119WebAssemblyFastISel21fastSelectInstructionEPKN4llvm11InstructionE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86FastISel.cpp' l='3628' c='_ZN12_GLOBAL__N_111X86FastISel21fastSelectInstructionEPKN4llvm11InstructionE'/>
