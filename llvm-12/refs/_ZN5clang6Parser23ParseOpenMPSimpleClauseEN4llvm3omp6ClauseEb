<dec f='llvm/clang/include/clang/Parse/Parser.h' l='3197' type='clang::OMPClause * clang::Parser::ParseOpenMPSimpleClause(clang::OpenMPClauseKind Kind, bool ParseOnly)'/>
<doc f='llvm/clang/include/clang/Parse/Parser.h' l='3191'>/// Parses simple clause of a kind \a Kind.
  ///
  /// \param Kind Kind of current clause.
  /// \param ParseOnly true to skip the clause&apos;s semantic actions and return
  /// nullptr.
  ///</doc>
<use f='llvm/clang/lib/Parse/ParseOpenMP.cpp' l='2781' u='c' c='_ZN5clang6Parser17ParseOpenMPClauseEN4llvm3omp9DirectiveENS2_6ClauseEb'/>
<use f='llvm/clang/lib/Parse/ParseOpenMP.cpp' l='2844' u='c' c='_ZN5clang6Parser17ParseOpenMPClauseEN4llvm3omp9DirectiveENS2_6ClauseEb'/>
<def f='llvm/clang/lib/Parse/ParseOpenMP.cpp' l='2983' ll='2999' type='clang::OMPClause * clang::Parser::ParseOpenMPSimpleClause(clang::OpenMPClauseKind Kind, bool ParseOnly)'/>
<doc f='llvm/clang/lib/Parse/ParseOpenMP.cpp' l='2972'>/// Parsing of simple OpenMP clauses like &apos;default&apos; or &apos;proc_bind&apos;.
///
///    default-clause:
///         &apos;default&apos; &apos;(&apos; &apos;none&apos; | &apos;shared&apos; | &apos;firstprivate&apos; &apos;)&apos;
///
///    proc_bind-clause:
///         &apos;proc_bind&apos; &apos;(&apos; &apos;master&apos; | &apos;close&apos; | &apos;spread&apos; &apos;)&apos;
///
///    update-clause:
///         &apos;update&apos; &apos;(&apos; &apos;in&apos; | &apos;out&apos; | &apos;inout&apos; | &apos;mutexinoutset&apos; &apos;)&apos;
///</doc>
