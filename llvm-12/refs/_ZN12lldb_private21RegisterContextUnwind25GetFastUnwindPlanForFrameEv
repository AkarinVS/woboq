<dec f='llvm/lldb/include/lldb/Target/RegisterContextUnwind.h' l='192' type='lldb::UnwindPlanSP lldb_private::RegisterContextUnwind::GetFastUnwindPlanForFrame()'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='200' u='c' c='_ZN12lldb_private21RegisterContextUnwind21InitializeZerothFrameEv'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='526' u='c' c='_ZN12lldb_private21RegisterContextUnwind24InitializeNonZerothFrameEv'/>
<def f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='639' ll='679' type='lldb::UnwindPlanSP lldb_private::RegisterContextUnwind::GetFastUnwindPlanForFrame()'/>
<doc f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='628'>// Find a fast unwind plan for this frame, if possible.
//
// On entry to this method,
//
//   1. m_frame_type should already be set to eTrapHandlerFrame/eDebuggerFrame
//   if either of those are correct,
//   2. m_sym_ctx should already be filled in, and
//   3. m_current_pc should have the current pc value for this frame
//   4. m_current_offset_backed_up_one should have the current byte offset into
//   the function, maybe backed up by 1, -1 if unknown</doc>
