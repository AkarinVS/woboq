<def f='llvm/clang/include/clang/AST/RecursiveASTVisitor.h' l='2387' ll='2404' type='bool clang::RecursiveASTVisitor::TraverseInitListExpr(clang::InitListExpr * S, clang::RecursiveASTVisitor::DataRecursionQueue * Queue = nullptr)'/>
<doc f='llvm/clang/include/clang/AST/RecursiveASTVisitor.h' l='2379'>// If shouldVisitImplicitCode() returns false, this method traverses only the
// syntactic form of InitListExpr.
// If shouldVisitImplicitCode() return true, this method is called once for
// each pair of syntactic and semantic InitListExpr, and it traverses the
// subtrees defined by the two forms. This may cause some of the children to be
// visited twice, if they appear both in the syntactic and the semantic form.
//
// There is no guarantee about which form \p S takes when this method is called.</doc>
