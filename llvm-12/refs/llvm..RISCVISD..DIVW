<dec f='llvm/llvm/lib/Target/RISCV/RISCVISelLowering.h' l='49' type='346'/>
<doc f='llvm/llvm/lib/Target/RISCV/RISCVISelLowering.h' l='46'>// 32-bit operations from RV64M that can&apos;t be simply matched with a pattern
  // at instruction selection time. These have undefined behavior for division
  // by 0 or overflow (divw) like their target independent counterparts.</doc>
<use f='llvm/build/lib/Target/RISCV/RISCVGenDAGISel.inc' l='437948' u='r' c='_ZN4llvm17RISCVDAGToDAGISel10SelectCodeEPNS_6SDNodeE'/>
<use f='llvm/build/lib/Target/RISCV/RISCVGenDAGISel.inc' l='437948' u='r' c='_ZN4llvm17RISCVDAGToDAGISel10SelectCodeEPNS_6SDNodeE'/>
<use f='llvm/llvm/lib/Target/RISCV/RISCVISelLowering.cpp' l='1593' u='r' c='_ZL15getRISCVWOpcodej'/>
<use f='llvm/llvm/lib/Target/RISCV/RISCVISelLowering.cpp' l='2425' c='_ZNK4llvm19RISCVTargetLowering31ComputeNumSignBitsForTargetNodeENS_7SDValueERKNS_5APIntERKNS_12SelectionDAGEj'/>
<use f='llvm/llvm/lib/Target/RISCV/RISCVISelLowering.cpp' l='4083' c='_ZNK4llvm19RISCVTargetLowering17getTargetNodeNameEj'/>
