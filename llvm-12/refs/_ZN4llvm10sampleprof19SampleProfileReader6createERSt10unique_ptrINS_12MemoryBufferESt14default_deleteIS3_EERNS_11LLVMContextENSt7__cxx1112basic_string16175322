<dec f='llvm/llvm/include/llvm/ProfileData/SampleProfReader.h' l='425' type='static ErrorOr&lt;std::unique_ptr&lt;SampleProfileReader&gt; &gt; llvm::sampleprof::SampleProfileReader::create(std::unique_ptr&lt;MemoryBuffer&gt; &amp; B, llvm::LLVMContext &amp; C, const std::string RemapFilename = &quot;&quot;)'/>
<doc f='llvm/llvm/include/llvm/ProfileData/SampleProfReader.h' l='422'>/// Create a sample profile reader from the supplied memory buffer.
  /// Create a remapper underlying if RemapFilename is not empty.</doc>
<use f='llvm/llvm/lib/ProfileData/SampleProfReader.cpp' l='1512' u='c' c='_ZN4llvm10sampleprof19SampleProfileReader6createENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_11LLVMContextES7_'/>
<def f='llvm/llvm/lib/ProfileData/SampleProfReader.cpp' l='1573' ll='1607' type='static ErrorOr&lt;std::unique_ptr&lt;SampleProfileReader&gt; &gt; llvm::sampleprof::SampleProfileReader::create(std::unique_ptr&lt;MemoryBuffer&gt; &amp; B, llvm::LLVMContext &amp; C, const std::string RemapFilename = &quot;&quot;)'/>
<doc f='llvm/llvm/lib/ProfileData/SampleProfReader.cpp' l='1564'>/// Create a sample profile reader based on the format of the input data.
///
/// \param B The memory buffer to create the reader from (assumes ownership).
///
/// \param C The LLVM context to use to emit diagnostics.
///
/// \param RemapFilename The file used for profile remapping.
///
/// \returns an error code indicating the status of the created reader.</doc>
