<dec f='llvm/lldb/source/Plugins/SymbolVendor/wasm/SymbolVendorWasm.h' l='28' type='static lldb_private::SymbolVendor * lldb_private::wasm::SymbolVendorWasm::CreateInstance(const lldb::ModuleSP &amp; module_sp, lldb_private::Stream * feedback_strm)'/>
<use f='llvm/lldb/source/Plugins/SymbolVendor/wasm/SymbolVendorWasm.cpp' l='37' u='r' c='_ZN12lldb_private4wasm16SymbolVendorWasm10InitializeEv'/>
<use f='llvm/lldb/source/Plugins/SymbolVendor/wasm/SymbolVendorWasm.cpp' l='41' u='r' c='_ZN12lldb_private4wasm16SymbolVendorWasm9TerminateEv'/>
<def f='llvm/lldb/source/Plugins/SymbolVendor/wasm/SymbolVendorWasm.cpp' l='59' ll='141' type='static lldb_private::SymbolVendor * lldb_private::wasm::SymbolVendorWasm::CreateInstance(const lldb::ModuleSP &amp; module_sp, lldb_private::Stream * feedback_strm)'/>
<doc f='llvm/lldb/source/Plugins/SymbolVendor/wasm/SymbolVendorWasm.cpp' l='54'>// CreateInstance
//
// Platforms can register a callback to use when creating symbol vendors to
// allow for complex debug information file setups, and to also allow for
// finding separate debug information files.</doc>
