<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CallLowering.h' l='253' type='llvm::Register llvm::CallLowering::packRegs(ArrayRef&lt;llvm::Register&gt; SrcRegs, llvm::Type * PackedTy, llvm::MachineIRBuilder &amp; MIRBuilder) const'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/CallLowering.cpp' l='185' ll='208' type='llvm::Register llvm::CallLowering::packRegs(ArrayRef&lt;llvm::Register&gt; SrcRegs, llvm::Type * PackedTy, llvm::MachineIRBuilder &amp; MIRBuilder) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CallLowering.h' l='246'>/// Generate instructions for packing \p SrcRegs into one big register
  /// corresponding to the aggregate type \p PackedTy.
  ///
  /// \param SrcRegs should contain one virtual register for each base type in
  ///                \p PackedTy, as returned by computeValueLLTs.
  ///
  /// \return The packed register.</doc>
