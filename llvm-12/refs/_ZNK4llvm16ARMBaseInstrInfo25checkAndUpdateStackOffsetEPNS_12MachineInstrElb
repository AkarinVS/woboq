<dec f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.h' l='415' type='bool llvm::ARMBaseInstrInfo::checkAndUpdateStackOffset(llvm::MachineInstr * MI, int64_t Fixup, bool Updt) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.h' l='413'>/// Returns true if the machine instruction offset can handle the stack fixup
  /// and updates it if requested.</doc>
<def f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='5917' ll='6021' type='bool llvm::ARMBaseInstrInfo::checkAndUpdateStackOffset(llvm::MachineInstr * MI, int64_t Fixup, bool Updt) const'/>
<use f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='6242' u='c' c='_ZNK4llvm16ARMBaseInstrInfo16getOutliningTypeERNS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEEj'/>
<use f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='6264' u='c' c='_ZNK4llvm16ARMBaseInstrInfo16fixupPostOutlineERNS_17MachineBasicBlockE'/>
