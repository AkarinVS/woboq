<def f='llvm/compiler-rt/lib/xray/xray_fdr_controller.h' l='25' ll='368'/>
<use f='llvm/compiler-rt/lib/xray/xray_fdr_logging.cpp' l='65'/>
<use f='llvm/compiler-rt/lib/xray/xray_fdr_logging.cpp' l='66'/>
<use f='llvm/compiler-rt/lib/xray/xray_fdr_logging.cpp' l='68'/>
<use f='llvm/compiler-rt/lib/xray/xray_fdr_logging.cpp' l='484' c='__xray::setupTLD'/>
<use f='llvm/compiler-rt/lib/xray/xray_fdr_logging.cpp' l='486' c='__xray::setupTLD'/>
<mbr r='__xray::FDRController::BQ' t='__xray::BufferQueue *'/>
<mbr r='__xray::FDRController::B' t='BufferQueue::Buffer &amp;'/>
<mbr r='__xray::FDRController::W' t='__xray::FDRLogWriter &amp;'/>
<mbr r='__xray::FDRController::WallClockReader' t='int (*)(clockid_t, struct timespec *)'/>
<mbr r='__xray::FDRController::CycleThreshold' t='uint64_t'/>
<mbr r='__xray::FDRController::LastFunctionEntryTSC' t='uint64_t'/>
<mbr r='__xray::FDRController::LatestTSC' t='uint64_t'/>
<mbr r='__xray::FDRController::LatestCPU' t='uint16_t'/>
<mbr r='__xray::FDRController::TId' t='__sanitizer::tid_t'/>
<mbr r='__xray::FDRController::PId' t='pid_t'/>
<mbr r='__xray::FDRController::First' t='bool'/>
<mbr r='__xray::FDRController::UndoableFunctionEnters' t='uint32_t'/>
<mbr r='__xray::FDRController::UndoableTailExits' t='uint32_t'/>
<fun r='__xray::FDRController::finalized'/>
<fun r='__xray::FDRController::hasSpace'/>
<fun r='__xray::FDRController::mask'/>
<fun r='__xray::FDRController::getNewBuffer'/>
<fun r='__xray::FDRController::setupNewBuffer'/>
<fun r='__xray::FDRController::prepareBuffer'/>
<fun r='__xray::FDRController::returnBuffer'/>
<fun r='__xray::FDRController::recordPreamble'/>
<fun r='__xray::FDRController::rewindRecords'/>
<fun r='__xray::FDRController::FDRController{Version}'/>
<fun r='__xray::FDRController::functionEnter'/>
<fun r='__xray::FDRController::functionTailExit'/>
<fun r='__xray::FDRController::functionEnterArg'/>
<fun r='__xray::FDRController::functionExit'/>
<fun r='__xray::FDRController::customEvent'/>
<fun r='__xray::FDRController::typedEvent'/>
<fun r='__xray::FDRController::flush'/>
