<dec f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1524' type='bool llvm::IntervalMap::iterator::insertNode(unsigned int Level, IntervalMapImpl::NodeRef Node, KeyT Stop)'/>
<def f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1730' ll='1772' type='bool llvm::IntervalMap::iterator::insertNode(unsigned int Level, IntervalMapImpl::NodeRef Node, KeyT Stop)'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='2016' u='c' c='_ZN4llvm11IntervalMap8iterator8overflowEj'/>
<doc f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1724'>/// insertNode - insert a node before the current path at level.
/// Leave the current path pointing at the new node.
/// @param Level path index of the node to be inserted.
/// @param Node The node to be inserted.
/// @param Stop The last index in the new node.
/// @return True if the tree height was increased.</doc>
