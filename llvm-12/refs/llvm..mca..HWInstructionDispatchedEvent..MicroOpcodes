<use f='llvm/llvm/include/llvm/MCA/HWEventListener.h' l='77' u='w' c='_ZN4llvm3mca28HWInstructionDispatchedEventC1ERKNS0_7InstRefENS_8ArrayRefIjEEj'/>
<dec f='llvm/llvm/include/llvm/MCA/HWEventListener.h' l='90' type='unsigned int'/>
<offset>256</offset>
<doc f='llvm/llvm/include/llvm/MCA/HWEventListener.h' l='81'>// Number of micro opcodes dispatched.
  // This field is often set to the total number of micro-opcodes specified by
  // the instruction descriptor of IR.
  // The only exception is when IR declares a number of micro opcodes
  // which exceeds the processor DispatchWidth, and - by construction - it
  // requires multiple cycles to be fully dispatched. In that particular case,
  // the dispatch logic would generate more than one dispatch event (one per
  // cycle), and each event would declare how many micro opcodes are effectively
  // been dispatched to the schedulers.</doc>
<use f='llvm/llvm/tools/llvm-mca/Views/DispatchStatistics.cpp' l='31' u='r' c='_ZN4llvm3mca18DispatchStatistics7onEventERKNS0_18HWInstructionEventE'/>
<use f='llvm/llvm/tools/llvm-mca/Views/RetireControlUnitStatistics.cpp' l='34' u='r' c='_ZN4llvm3mca27RetireControlUnitStatistics7onEventERKNS0_18HWInstructionEventE'/>
