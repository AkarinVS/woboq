<dec f='llvm/polly/lib/External/ppcg/hybrid.h' l='34' type='isl_schedule_node * hybrid_tile_foreach_phase(isl_schedule_node * node, isl_schedule_node *(*)(isl_schedule_node *, void *) fn, void * user)'/>
<use f='llvm/polly/lib/External/ppcg/gpu_hybrid.c' l='137' u='c' c='gpu_hybrid_tile'/>
<def f='llvm/polly/lib/External/ppcg/hybrid.c' l='2165' ll='2196' type='isl_schedule_node * hybrid_tile_foreach_phase(isl_schedule_node * node, isl_schedule_node *(*)(isl_schedule_node *, void *) fn, void * user)'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='2241' u='c' c='hybrid_tile_drop_phase_marks'/>
<doc f='llvm/polly/lib/External/ppcg/hybrid.c' l='2153'>/* Given a branch &quot;node&quot; that contains a sequence node with two phases
 * of hybrid tiling as input, call &quot;fn&quot; on each of the two phase marker
 * nodes.
 *
 * That is, the input is as follows
 *
 *	         /- F0 - M0 - ...
 *	... - seq
 *	         \- F1 - M1 - ...
 *
 * and &quot;fn&quot; is called on M0 and on M1.
 */</doc>
