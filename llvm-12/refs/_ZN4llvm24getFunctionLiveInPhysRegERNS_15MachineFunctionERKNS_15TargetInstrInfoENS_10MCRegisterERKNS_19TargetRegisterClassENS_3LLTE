<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/Utils.h' l='227' type='llvm::Register llvm::getFunctionLiveInPhysReg(llvm::MachineFunction &amp; MF, const llvm::TargetInstrInfo &amp; TII, llvm::MCRegister PhysReg, const llvm::TargetRegisterClass &amp; RC, llvm::LLT RegTy = llvm::LLT())'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/Utils.h' l='221'>/// Return a virtual register corresponding to the incoming argument register \p
/// PhysReg. This register is expected to have class \p RC, and optional type \p
/// RegTy. This assumes all references to the register will use the same type.
///
/// If there is an existing live-in argument register, it will be returned.
/// This will also ensure there is a valid copy</doc>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/Utils.cpp' l='515' ll='547' type='llvm::Register llvm::getFunctionLiveInPhysReg(llvm::MachineFunction &amp; MF, const llvm::TargetInstrInfo &amp; TII, llvm::MCRegister PhysReg, const llvm::TargetRegisterClass &amp; RC, llvm::LLT RegTy = llvm::LLT())'/>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp' l='5003' u='c' c='_ZN12_GLOBAL__N_126AArch64InstructionSelector15selectIntrinsicERN4llvm12MachineInstrERNS1_19MachineRegisterInfoE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp' l='1197' u='c' c='_ZNK4llvm25AMDGPUInstructionSelector19selectReturnAddressERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp' l='2699' u='c' c='_ZNK4llvm19AMDGPULegalizerInfo14loadInputValueENS_8RegisterERNS_16MachineIRBuilderEPKNS_13ArgDescriptorEPKNS_19TargetRegisterClassENS_3LLTE'/>
