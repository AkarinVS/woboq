<dec f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.h' l='93' type='bool lldb_private::x86AssemblyInspectionEngine::nonvolatile_reg_p(int machine_regno)'/>
<def f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='262' ll='292' type='bool lldb_private::x86AssemblyInspectionEngine::nonvolatile_reg_p(int machine_regno)'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='1062' u='c' c='_ZN12lldb_private27x86AssemblyInspectionEngine36GetNonCallSiteUnwindPlanFromAssemblyEPhmRNS_12AddressRangeERNS_10UnwindPlanE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='1079' u='c' c='_ZN12lldb_private27x86AssemblyInspectionEngine36GetNonCallSiteUnwindPlanFromAssemblyEPhmRNS_12AddressRangeERNS_10UnwindPlanE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='1151' u='c' c='_ZN12lldb_private27x86AssemblyInspectionEngine36GetNonCallSiteUnwindPlanFromAssemblyEPhmRNS_12AddressRangeERNS_10UnwindPlanE'/>
<doc f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='257'>// This function expects an x86 native register number (i.e. the bits stripped
// out of the actual instruction), not an lldb register number.
//
// FIXME: This is ABI dependent, it shouldn&apos;t be hardcoded here.</doc>
