<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1636' type='const llvm::SCEV * llvm::ScalarEvolution::computeSymbolicMaxBackedgeTakenCount(const llvm::Loop * L)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1633'>/// Return a symbolic upper bound for the backedge taken count of the loop.
  /// This is more general than getConstantMaxBackedgeTakenCount as it returns
  /// an arbitrary expression as opposed to only constants.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7262' u='c' c='_ZN4llvm15ScalarEvolution17BackedgeTakenInfo14getSymbolicMaxEPKNS_4LoopEPS0_'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='13194' ll='13218' type='const llvm::SCEV * llvm::ScalarEvolution::computeSymbolicMaxBackedgeTakenCount(const llvm::Loop * L)'/>
