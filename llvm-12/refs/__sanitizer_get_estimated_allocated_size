<dec f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_allocator_interface.h' l='22' type='__sanitizer::uptr __sanitizer_get_estimated_allocated_size(__sanitizer::uptr size)'/>
<def f='llvm/compiler-rt/lib/asan/asan_allocator.cpp' l='1221' ll='1223' type='__sanitizer::uptr __sanitizer_get_estimated_allocated_size(__sanitizer::uptr size)'/>
<doc f='llvm/compiler-rt/lib/asan/asan_allocator.cpp' l='1219'>// ASan allocator doesn&apos;t reserve extra bytes, so normally we would
// just return &quot;size&quot;. We don&apos;t want to expose our redzone sizes, etc here.</doc>
<def f='llvm/compiler-rt/lib/hwasan/hwasan_allocator.cpp' l='404' type='__sanitizer::uptr __sanitizer_get_estimated_allocated_size(__sanitizer::uptr size)'/>
<def f='llvm/compiler-rt/lib/lsan/lsan_allocator.cpp' l='347' ll='348' macro='1' type='__sanitizer::uptr __sanitizer_get_estimated_allocated_size(__sanitizer::uptr size)'/>
<def f='llvm/compiler-rt/lib/memprof/memprof_allocator.cpp' l='890' type='__sanitizer::uptr __sanitizer_get_estimated_allocated_size(__sanitizer::uptr size)'/>
<def f='llvm/compiler-rt/lib/msan/msan_allocator.cpp' l='366' type='__sanitizer::uptr __sanitizer_get_estimated_allocated_size(__sanitizer::uptr size)'/>
<def f='llvm/compiler-rt/lib/scudo/scudo_allocator.cpp' l='793' ll='795' type='__sanitizer::uptr __sanitizer_get_estimated_allocated_size(__sanitizer::uptr Size)'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_mman.cpp' l='385' ll='387' type='__sanitizer::uptr __sanitizer_get_estimated_allocated_size(__sanitizer::uptr size)'/>
