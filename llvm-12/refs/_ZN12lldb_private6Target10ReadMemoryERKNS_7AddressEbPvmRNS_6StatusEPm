<dec f='llvm/lldb/include/lldb/Target/Target.h' l='1007' type='size_t lldb_private::Target::ReadMemory(const lldb_private::Address &amp; addr, bool prefer_file_cache, void * dst, size_t dst_len, lldb_private::Status &amp; error, lldb::addr_t * load_addr_ptr = nullptr)'/>
<doc f='llvm/lldb/include/lldb/Target/Target.h' l='997'>// Reading memory through the target allows us to skip going to the process
  // for reading memory if possible and it allows us to try and read from any
  // constant sections in our object files on disk. If you always want live
  // program memory, read straight from the process. If you possibly want to
  // read from const sections in object files, read from the target. This
  // version of ReadMemory will try and read memory from the process if the
  // process is alive. The order is:
  // 1 - if (prefer_file_cache == true) then read from object file cache
  // 2 - if there is a valid process, try and read from its memory
  // 3 - if (prefer_file_cache == false) then read from object file cache</doc>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='709' u='c' c='_ZN4lldb8SBTarget10ReadMemoryENS_9SBAddressEPvmRNS_7SBErrorE'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='2093' u='c' c='_ZN4lldb8SBTarget16ReadInstructionsENS_9SBAddressEjPKc'/>
<use f='llvm/lldb/source/Commands/CommandObjectMemory.cpp' l='672' u='c' c='_ZN23CommandObjectMemoryRead9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Core/Address.cpp' l='69' u='c' c='_ZL9ReadBytesPN12lldb_private21ExecutionContextScopeERKNS_7AddressEPvm'/>
<use f='llvm/lldb/source/Core/Disassembler.cpp' l='1055' u='c' c='_ZN12lldb_private12Disassembler17ParseInstructionsERNS_6TargetENS_7AddressENS0_5LimitEPNS_6StreamEb'/>
<use f='llvm/lldb/source/Core/Value.cpp' l='526' u='c' c='_ZN12lldb_private5Value14GetValueAsDataEPNS_16ExecutionContextERNS_13DataExtractorEPNS_6ModuleE'/>
<use f='llvm/lldb/source/Core/ValueObject.cpp' l='778' u='c' c='_ZN12lldb_private11ValueObject14GetPointeeDataERNS_13DataExtractorEjj'/>
<use f='llvm/lldb/source/Expression/IRMemoryMap.cpp' l='642' u='c' c='_ZN12lldb_private11IRMemoryMap10ReadMemoryEPhmmRNS_6StatusE'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/Darwin-Kernel/DynamicLoaderDarwinKernel.cpp' l='1104' u='c' c='_ZN25DynamicLoaderDarwinKernel21ReadKextSummaryHeaderEv'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/Darwin-Kernel/DynamicLoaderDarwinKernel.cpp' l='1377' u='c' c='_ZN25DynamicLoaderDarwinKernel17ReadKextSummariesERKN12lldb_private7AddressEjRSt6vectorINS_13KextImageInfoESaIS5_EE'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderDarwin.cpp' l='1089' u='c' c='_ZN12lldb_private19DynamicLoaderDarwin18GetThreadLocalDataESt10shared_ptrINS_6ModuleEES1_INS_6ThreadEEm'/>
<use f='llvm/lldb/source/Plugins/Instruction/MIPS/EmulateInstructionMIPS.cpp' l='1020' u='c' c='_ZN22EmulateInstructionMIPS14SetInstructionERKN12lldb_private6OpcodeERKNS0_7AddressEPNS0_6TargetE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/InstEmulation/UnwindAssemblyInstEmulation.cpp' l='42' u='c' c='_ZN27UnwindAssemblyInstEmulation36GetNonCallSiteUnwindPlanFromAssemblyERN12lldb_private12AddressRangeERNS0_6ThreadERNS0_10UnwindPlanE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/x86/UnwindAssembly-x86.cpp' l='57' u='c' c='_ZN18UnwindAssembly_x8636GetNonCallSiteUnwindPlanFromAssemblyERN12lldb_private12AddressRangeERNS0_6ThreadERNS0_10UnwindPlanE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/x86/UnwindAssembly-x86.cpp' l='159' u='c' c='_ZN18UnwindAssembly_x8629AugmentUnwindPlanFromCallSiteERN12lldb_private12AddressRangeERNS0_6ThreadERNS0_10UnwindPlanE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/x86/UnwindAssembly-x86.cpp' l='190' u='c' c='_ZN18UnwindAssembly_x8617GetFastUnwindPlanERN12lldb_private12AddressRangeERNS0_6ThreadERNS0_10UnwindPlanE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/x86/UnwindAssembly-x86.cpp' l='226' u='c' c='_ZN18UnwindAssembly_x8620FirstNonPrologueInsnERN12lldb_private12AddressRangeERKNS0_16ExecutionContextERNS0_7AddressE'/>
<def f='llvm/lldb/source/Target/Target.cpp' l='1720' ll='1810' type='size_t lldb_private::Target::ReadMemory(const lldb_private::Address &amp; addr, bool prefer_file_cache, void * dst, size_t dst_len, lldb_private::Status &amp; error, lldb::addr_t * load_addr_ptr = nullptr)'/>
<use f='llvm/lldb/source/Target/Target.cpp' l='1859' u='c' c='_ZN12lldb_private6Target21ReadCStringFromMemoryERKNS_7AddressEPcmRNS_6StatusE'/>
<use f='llvm/lldb/source/Target/Target.cpp' l='1895' u='c' c='_ZN12lldb_private6Target27ReadScalarIntegerFromMemoryERKNS_7AddressEbjbRNS_6ScalarERNS_6StatusE'/>
