<dec f='llvm/polly/include/polly/ScopInfo.h' l='131' type='1'/>
<use f='llvm/polly/include/polly/ScopInfo.h' l='269' u='r' c='_ZNK5polly13ScopArrayInfo21getNumberOfDimensionsEv'/>
<use f='llvm/polly/include/polly/ScopInfo.h' l='312' u='r' c='_ZNK5polly13ScopArrayInfo11isValueKindEv'/>
<use f='llvm/polly/include/polly/ScopInfo.h' l='977' u='r' c='_ZNK5polly12MemoryAccess19isOriginalValueKindEv'/>
<use f='llvm/polly/include/polly/ScopInfo.h' l='982' u='r' c='_ZNK5polly12MemoryAccess17isLatestValueKindEv'/>
<doc f='llvm/polly/include/polly/ScopInfo.h' l='94'>/// MemoryKind::Value: Models an llvm::Value
  ///
  /// Memory objects of type MemoryKind::Value are used to model the data flow
  /// induced by llvm::Values. For each llvm::Value that is used across
  /// BasicBlocks, one ScopArrayInfo object is created. A single memory WRITE
  /// stores the llvm::Value at its definition into the memory object and at
  /// each use of the llvm::Value (ignoring trivial intra-block uses) a
  /// corresponding READ is added. For instance, the use/def chain of a
  /// llvm::Value %V depicted below
  ///              ______________________
  ///              |DefBB:              |
  ///              |  %V = float op ... |
  ///              ----------------------
  ///               |                  |
  /// _________________               _________________
  /// |UseBB1:        |               |UseBB2:        |
  /// |  use float %V |               |  use float %V |
  /// -----------------               -----------------
  ///
  /// is modeled as if the following memory accesses occurred:
  ///
  ///                        __________________________
  ///                        |entry:                  |
  ///                        |  %V.s2a = alloca float |
  ///                        --------------------------
  ///                                     |
  ///                    ___________________________________
  ///                    |DefBB:                           |
  ///                    |  store %float %V, float* %V.s2a |
  ///                    -----------------------------------
  ///                           |                   |
  /// ____________________________________ ___________________________________
  /// |UseBB1:                           | |UseBB2:                          |
  /// |  %V.reload1 = load float* %V.s2a | |  %V.reload2 = load float* %V.s2a|
  /// |  use float %V.reload1            | |  use float %V.reload2           |
  /// ------------------------------------ -----------------------------------
  ///</doc>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='2549' u='r' c='_ZN5polly11ScopBuilder16ensureValueWriteEPN4llvm11InstructionE'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='2588' u='r' c='_ZN5polly11ScopBuilder15ensureValueReadEPN4llvm5ValueEPNS_8ScopStmtE'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='3228' u='r' c='_ZN5polly11ScopBuilder20buildAccessRelationsERNS_8ScopStmtE'/>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='1376' u='r' c='_ZN5polly8ScopStmt15ensureValueReadEPN4llvm5ValueE'/>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='1378' u='r' c='_ZN5polly8ScopStmt15ensureValueReadEPN4llvm5ValueE'/>
