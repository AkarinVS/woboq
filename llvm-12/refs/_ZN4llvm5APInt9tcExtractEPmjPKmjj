<dec f='llvm/llvm/include/llvm/ADT/APInt.h' l='1916' type='static void llvm::APInt::tcExtract(llvm::APInt::WordType * , unsigned int dstCount, const llvm::APInt::WordType * , unsigned int srcBits, unsigned int srcLSB)'/>
<doc f='llvm/llvm/include/llvm/ADT/APInt.h' l='1912'>/// Copy the bit vector of width srcBITS from SRC, starting at bit srcLSB, to
  /// DST, of dstCOUNT parts, such that the bit srcLSB becomes the least
  /// significant bit of DST.  All high bits above srcBITS in DST are
  /// zero-filled.</doc>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='2318' u='c' c='_ZNK4llvm6detail9IEEEFloat28convertToSignExtendedIntegerENS_15MutableArrayRefImEEjbNS_12RoundingModeEPb'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='2321' u='c' c='_ZNK4llvm6detail9IEEEFloat28convertToSignExtendedIntegerENS_15MutableArrayRefImEEjbNS_12RoundingModeEPb'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='2437' u='c' c='_ZN4llvm6detail9IEEEFloat24convertFromUnsignedPartsEPKmjNS_12RoundingModeE'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='2441' u='c' c='_ZN4llvm6detail9IEEEFloat24convertFromUnsignedPartsEPKmjNS_12RoundingModeE'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='2669' u='c' c='_ZN4llvm6detail9IEEEFloat28roundSignificandWithExponentEPKmjiNS_12RoundingModeE'/>
<def f='llvm/llvm/lib/Support/APInt.cpp' l='2418' ll='2446' type='static void llvm::APInt::tcExtract(llvm::APInt::WordType * dst, unsigned int dstCount, const llvm::APInt::WordType * src, unsigned int srcBits, unsigned int srcLSB)'/>
<doc f='llvm/llvm/lib/Support/APInt.cpp' l='2414'>/* Copy the bit vector of width srcBITS from SRC, starting at bit
   srcLSB, to DST, of dstCOUNT parts, such that the bit srcLSB becomes
   the least significant bit of DST.  All high bits above srcBITS in
   DST are zero-filled.  */</doc>
