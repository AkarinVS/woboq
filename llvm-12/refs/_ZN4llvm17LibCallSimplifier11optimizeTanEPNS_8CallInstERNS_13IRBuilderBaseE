<dec f='llvm/llvm/include/llvm/Transforms/Utils/SimplifyLibCalls.h' l='199' type='llvm::Value * llvm::LibCallSimplifier::optimizeTan(llvm::CallInst * CI, llvm::IRBuilderBase &amp; B)'/>
<def f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='2094' ll='2121' type='llvm::Value * llvm::LibCallSimplifier::optimizeTan(llvm::CallInst * CI, llvm::IRBuilderBase &amp; B)'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='2986' u='c' c='_ZN4llvm17LibCallSimplifier28optimizeFloatingPointLibCallEPNS_8CallInstENS_7LibFuncERNS_13IRBuilderBaseE'/>
<doc f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='2093'>// TODO: Generalize to handle any trig function and its inverse.</doc>
