<dec f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='506' type='llvm::Value * polly::BlockGenerator::generateLocationAccessed(polly::ScopStmt &amp; Stmt, llvm::Loop * L, llvm::Value * Pointer, polly::ValueMapT &amp; BBMap, llvm::LoopToScevMapT &amp; LTS, isl_id_to_ast_expr * NewAccesses, isl_id * Id, llvm::Type * ExpectedType)'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='260' u='c' c='_ZN5polly14BlockGenerator24generateLocationAccessedERNS_8ScopStmtENS_10MemAccInstERN4llvm8DenseMapINS4_11AssertingVHINS4_5ValueEEES8_NS4_12DenseMapInf6537780'/>
<def f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='266' ll='292' type='llvm::Value * polly::BlockGenerator::generateLocationAccessed(polly::ScopStmt &amp; Stmt, llvm::Loop * L, llvm::Value * Pointer, polly::ValueMapT &amp; BBMap, llvm::LoopToScevMapT &amp; LTS, isl_id_to_ast_expr * NewAccesses, isl_id * Id, llvm::Type * ExpectedType)'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='299' u='c' c='_ZN5polly14BlockGenerator18getImplicitAddressERNS_12MemoryAccessEPN4llvm4LoopERNS3_8DenseMapIPKS4_PKNS3_4SCEVENS3_12DenseMapInfoIS8_EENS3_6detail12Den12904504'/>
<doc f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='491'>/// Generate the operand address.
  ///
  /// @param Stmt         The statement to generate code for.
  /// @param L            The innermost loop that surrounds the statement.
  /// @param Pointer      If the access expression is not changed (ie. not found
  ///                     in @p LTS), use this Pointer from the original code
  ///                     instead.
  /// @param BBMap        A mapping from old values to their new values.
  /// @param LTS          A mapping from loops virtual canonical induction
  ///                     variable to their new values.
  /// @param NewAccesses  Ahead-of-time generated access expressions.
  /// @param Id           Identifier of the MemoryAccess to generate.
  /// @param ExpectedType The type the returned value should have.
  ///
  /// @return The generated address.</doc>
