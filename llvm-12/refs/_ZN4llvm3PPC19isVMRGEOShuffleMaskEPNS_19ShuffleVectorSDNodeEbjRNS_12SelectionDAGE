<dec f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.h' l='605' type='bool llvm::PPC::isVMRGEOShuffleMask(llvm::ShuffleVectorSDNode * N, bool CheckEven, unsigned int ShuffleKind, llvm::SelectionDAG &amp; DAG)'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.h' l='603'>/// isVMRGEOShuffleMask - Return true if this is a shuffle mask suitable for
    /// a VMRGEW or VMRGOW instruction</doc>
<use f='llvm/build/lib/Target/PowerPC/PPCGenDAGISel.inc' l='66296' u='c' c='_ZNK12_GLOBAL__N_115PPCDAGToDAGISel18CheckNodePredicateEPN4llvm6SDNodeEj'/>
<use f='llvm/build/lib/Target/PowerPC/PPCGenDAGISel.inc' l='66304' u='c' c='_ZNK12_GLOBAL__N_115PPCDAGToDAGISel18CheckNodePredicateEPN4llvm6SDNodeEj'/>
<use f='llvm/build/lib/Target/PowerPC/PPCGenDAGISel.inc' l='66464' u='c' c='_ZNK12_GLOBAL__N_115PPCDAGToDAGISel18CheckNodePredicateEPN4llvm6SDNodeEj'/>
<use f='llvm/build/lib/Target/PowerPC/PPCGenDAGISel.inc' l='66472' u='c' c='_ZNK12_GLOBAL__N_115PPCDAGToDAGISel18CheckNodePredicateEPN4llvm6SDNodeEj'/>
<use f='llvm/build/lib/Target/PowerPC/PPCGenDAGISel.inc' l='66480' u='c' c='_ZNK12_GLOBAL__N_115PPCDAGToDAGISel18CheckNodePredicateEPN4llvm6SDNodeEj'/>
<use f='llvm/build/lib/Target/PowerPC/PPCGenDAGISel.inc' l='66488' u='c' c='_ZNK12_GLOBAL__N_115PPCDAGToDAGISel18CheckNodePredicateEPN4llvm6SDNodeEj'/>
<def f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='1919' ll='1940' type='bool llvm::PPC::isVMRGEOShuffleMask(llvm::ShuffleVectorSDNode * N, bool CheckEven, unsigned int ShuffleKind, llvm::SelectionDAG &amp; DAG)'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='9437' u='c' c='_ZNK4llvm17PPCTargetLowering19LowerVECTOR_SHUFFLEENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='9438' u='c' c='_ZNK4llvm17PPCTargetLowering19LowerVECTOR_SHUFFLEENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='9458' u='c' c='_ZNK4llvm17PPCTargetLowering19LowerVECTOR_SHUFFLEENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='9459' u='c' c='_ZNK4llvm17PPCTargetLowering19LowerVECTOR_SHUFFLEENS_7SDValueERNS_12SelectionDAGE'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='1905'>/**
 * Determine if the specified shuffle mask is suitable for the vmrgew or
 * vmrgow instructions.
 *
 * \param[in] N The shuffle vector SD Node to analyze
 * \param[in] CheckEven Check for an even merge (true) or an odd merge (false)
 * \param[in] ShuffleKind Identify the type of merge:
 *   - 0 = big-endian merge with two different inputs;
 *   - 1 = either-endian merge with two identical inputs;
 *   - 2 = little-endian merge with two different inputs (inputs are swapped for
 *     little-endian merges).
 * \param[in] DAG The current SelectionDAG
 * \return true iff this shuffle mask
 */</doc>
