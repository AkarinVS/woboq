<dec f='llvm/llvm/include/llvm/IR/AutoUpgrade.h' l='38' type='void llvm::UpgradeIntrinsicCall(llvm::CallInst * CI, llvm::Function * NewFn)'/>
<doc f='llvm/llvm/include/llvm/IR/AutoUpgrade.h' l='36'>/// This is the complement to the above, replacing a specific call to an
  /// intrinsic function with a call to the specified new function.</doc>
<use f='llvm/llvm/lib/Bitcode/Reader/BitcodeReader.cpp' l='5449' u='c' c='_ZN12_GLOBAL__N_113BitcodeReader11materializeEPN4llvm11GlobalValueE'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitcodeReader.cpp' l='5547' u='c' c='_ZN12_GLOBAL__N_113BitcodeReader17materializeModuleEv'/>
<def f='llvm/llvm/lib/IR/AutoUpgrade.cpp' l='1792' ll='3927' type='void llvm::UpgradeIntrinsicCall(llvm::CallInst * CI, llvm::Function * NewFn)'/>
<use f='llvm/llvm/lib/IR/AutoUpgrade.cpp' l='3940' u='c' c='_ZN4llvm23UpgradeCallsToIntrinsicEPNS_8FunctionE'/>
<doc f='llvm/llvm/lib/IR/AutoUpgrade.cpp' l='1790'>/// Upgrade a call to an old intrinsic. All argument and return casting must be
/// provided to seamlessly integrate with existing context.</doc>
