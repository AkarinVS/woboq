<dec f='llvm/llvm/include/llvm/Analysis/GuardUtils.h' l='49' type='bool llvm::parseWidenableBranch(llvm::User * U, llvm::Use *&amp; Cond, llvm::Use *&amp; WC, llvm::BasicBlock *&amp; IfTrueBB, llvm::BasicBlock *&amp; IfFalseBB)'/>
<doc f='llvm/llvm/include/llvm/Analysis/GuardUtils.h' l='47'>/// Analgous to the above, but return the Uses so that that they can be
/// modified. Unlike previous version, Condition is optional and may be null.</doc>
<use f='llvm/llvm/lib/Analysis/GuardUtils.cpp' l='49' u='c' c='_ZN4llvm20parseWidenableBranchEPKNS_4UserERPNS_5ValueES5_RPNS_10BasicBlockES8_'/>
<def f='llvm/llvm/lib/Analysis/GuardUtils.cpp' l='60' ll='106' type='bool llvm::parseWidenableBranch(llvm::User * U, llvm::Use *&amp; C, llvm::Use *&amp; WC, llvm::BasicBlock *&amp; IfTrueBB, llvm::BasicBlock *&amp; IfFalseBB)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='1087' u='c' c='_ZN12_GLOBAL__N_115LoopPredication18predicateLoopExitsEPN4llvm4LoopERNS1_12SCEVExpanderE'/>
<use f='llvm/llvm/lib/Transforms/Utils/GuardUtils.cpp' l='92' u='c' c='_ZN4llvm20widenWidenableBranchEPNS_10BranchInstEPNS_5ValueE'/>
<use f='llvm/llvm/lib/Transforms/Utils/GuardUtils.cpp' l='113' u='c' c='_ZN4llvm22setWidenableBranchCondEPNS_10BranchInstEPNS_5ValueE'/>
