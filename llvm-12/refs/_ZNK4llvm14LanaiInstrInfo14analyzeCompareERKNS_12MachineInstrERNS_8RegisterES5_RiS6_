<dec f='llvm/llvm/lib/Target/Lanai/LanaiInstrInfo.h' l='98' type='bool llvm::LanaiInstrInfo::analyzeCompare(const llvm::MachineInstr &amp; MI, llvm::Register &amp; SrcReg, llvm::Register &amp; SrcReg2, int &amp; CmpMask, int &amp; CmpValue) const'/>
<doc f='llvm/llvm/lib/Target/Lanai/LanaiInstrInfo.h' l='95'>// For a comparison instruction, return the source registers in SrcReg and
  // SrcReg2 if having two register operands, and the value it compares against
  // in CmpValue. Return true if the comparison instruction can be analyzed.</doc>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1503' c='_ZNK4llvm15TargetInstrInfo14analyzeCompareERKNS_12MachineInstrERNS_8RegisterES5_RiS6_'/>
<def f='llvm/llvm/lib/Target/Lanai/LanaiInstrInfo.cpp' l='177' ll='199' type='bool llvm::LanaiInstrInfo::analyzeCompare(const llvm::MachineInstr &amp; MI, llvm::Register &amp; SrcReg, llvm::Register &amp; SrcReg2, int &amp; CmpMask, int &amp; CmpValue) const'/>
