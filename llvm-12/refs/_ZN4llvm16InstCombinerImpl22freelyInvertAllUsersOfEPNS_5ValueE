<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='327' type='void llvm::InstCombinerImpl::freelyInvertAllUsersOf(llvm::Value * V)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='3138' u='c' c='_ZN4llvm16InstCombinerImpl29sinkNotIntoOtherHandOfAndOrOrERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='5332' u='c' c='_ZN4llvm16InstCombinerImpl25canonicalizeICmpPredicateERNS_7CmpInstE'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='875' ll='895' type='void llvm::InstCombinerImpl::freelyInvertAllUsersOf(llvm::Value * I)'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='873'>/// Freely adapt every user of V as-if V was changed to !V.
/// WARNING: only if canFreelyInvertAllUsersOf() said this can be done.</doc>
