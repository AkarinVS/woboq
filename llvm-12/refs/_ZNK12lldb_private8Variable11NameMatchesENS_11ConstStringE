<dec f='llvm/lldb/include/lldb/Symbol/Variable.h' l='58' type='bool lldb_private::Variable::NameMatches(lldb_private::ConstString name) const'/>
<doc f='llvm/lldb/include/lldb/Symbol/Variable.h' l='53'>/// Since a variable can have a basename &quot;i&quot; and also a mangled named
  /// &quot;_ZN12_GLOBAL__N_11iE&quot; and a demangled mangled name &quot;(anonymous
  /// namespace)::i&quot;, this function will allow a generic match function that can
  /// be called by commands and expression parsers to make sure we match
  /// anything we come across.</doc>
<def f='llvm/lldb/source/Symbol/Variable.cpp' l='80' ll='87' type='bool lldb_private::Variable::NameMatches(lldb_private::ConstString name) const'/>
<use f='llvm/lldb/source/Symbol/VariableList.cpp' l='77' u='c' c='_ZN12lldb_private12VariableList12FindVariableENS_11ConstStringEb'/>
<use f='llvm/lldb/source/Symbol/VariableList.cpp' l='93' u='c' c='_ZN12lldb_private12VariableList12FindVariableENS_11ConstStringEN4lldb9ValueTypeEb'/>
