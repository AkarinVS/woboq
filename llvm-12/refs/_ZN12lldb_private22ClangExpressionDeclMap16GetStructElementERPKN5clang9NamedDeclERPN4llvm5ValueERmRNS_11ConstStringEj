<dec f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.h' l='206' type='bool lldb_private::ClangExpressionDeclMap::GetStructElement(const clang::NamedDecl *&amp; decl, llvm::Value *&amp; value, lldb::offset_t &amp; offset, lldb_private::ConstString &amp; name, uint32_t index)'/>
<def f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.cpp' l='443' ll='477' type='bool lldb_private::ClangExpressionDeclMap::GetStructElement(const clang::NamedDecl *&amp; decl, llvm::Value *&amp; value, lldb::offset_t &amp; offset, lldb_private::ConstString &amp; name, uint32_t index)'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.h' l='177'>/// [Used by IRForTarget] Get specific information about one field of the
  /// laid-out struct after DoStructLayout() has been called.
  ///
  /// \param[out] decl
  ///     The parsed Decl for the field, as generated by ClangASTSource
  ///     on ClangExpressionDeclMap&apos;s behalf.  In the case of the result
  ///     value, this will have the name $__lldb_result even if the
  ///     result value ends up having the name $1.  This is an
  ///     implementation detail of IRForTarget.
  ///
  /// \param[out] value
  ///     The IR value for the field (usually a GlobalVariable).  In
  ///     the case of the result value, this will have the correct
  ///     name ($1, for instance).  This is an implementation detail
  ///     of IRForTarget.
  ///
  /// \param[out] offset
  ///     The offset of the field from the beginning of the struct.
  ///     As long as the struct is aligned according to its required
  ///     alignment, this offset will align the field correctly.
  ///
  /// \param[out] name
  ///     The name of the field as used in materialization.
  ///
  /// \param[in] index
  ///     The index of the field about which information is requested.
  ///
  /// \return
  ///     True if the information could be retrieved; false otherwise.</doc>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='1762' u='c' c='_ZN11IRForTarget16ReplaceVariablesERN4llvm8FunctionE'/>
