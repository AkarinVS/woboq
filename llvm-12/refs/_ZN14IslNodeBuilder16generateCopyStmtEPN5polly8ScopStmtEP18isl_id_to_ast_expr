<dec f='llvm/polly/include/polly/CodeGen/IslNodeBuilder.h' l='418' type='void IslNodeBuilder::generateCopyStmt(polly::ScopStmt * Stmt, isl_id_to_ast_expr * NewAccesses)'/>
<doc f='llvm/polly/include/polly/CodeGen/IslNodeBuilder.h' l='407'>/// Create code for a copy statement.
  ///
  /// A copy statement is expected to have one read memory access and one write
  /// memory access (in this very order). Data is loaded from the location
  /// described by the read memory access and written to the location described
  /// by the write memory access. @p NewAccesses contains for each access
  /// the isl ast expression that describes the location accessed.
  ///
  /// @param Stmt The copy statement that contains the accesses.
  /// @param NewAccesses The hash table that contains remappings from memory
  ///                    ids to new access expressions.</doc>
<def f='llvm/polly/lib/CodeGen/IslNodeBuilder.cpp' l='941' ll='957' type='void IslNodeBuilder::generateCopyStmt(polly::ScopStmt * Stmt, isl_id_to_ast_expr * NewAccesses)'/>
<use f='llvm/polly/lib/CodeGen/IslNodeBuilder.cpp' l='985' u='c' c='_ZN14IslNodeBuilder10createUserEP12isl_ast_node'/>
