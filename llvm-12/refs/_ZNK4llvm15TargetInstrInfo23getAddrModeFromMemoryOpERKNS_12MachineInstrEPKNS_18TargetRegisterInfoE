<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1328' ll='1332' type='Optional&lt;llvm::ExtAddrMode&gt; llvm::TargetInstrInfo::getAddrModeFromMemoryOp(const llvm::MachineInstr &amp; MemI, const llvm::TargetRegisterInfo * TRI) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1324'>/// Target dependent implementation to get the values constituting the address
  /// MachineInstr that is accessing memory. These values are returned as a
  /// struct ExtAddrMode which contains all relevant information to make up the
  /// address.</doc>
<use f='llvm/llvm/lib/CodeGen/ImplicitNullChecks.cpp' l='377' u='c' c='_ZN12_GLOBAL__N_118ImplicitNullChecks18isSuitableMemoryOpERKN4llvm12MachineInstrEjNS1_8ArrayRefIPS2_EE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='2278' c='_ZNK4llvm16AArch64InstrInfo23getAddrModeFromMemoryOpERKNS_12MachineInstrEPKNS_18TargetRegisterInfoE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='3668' c='_ZNK4llvm12X86InstrInfo23getAddrModeFromMemoryOpERKNS_12MachineInstrEPKNS_18TargetRegisterInfoE'/>
