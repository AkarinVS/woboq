<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_stackdepot.h' l='50' ll='68'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_stackdepot.h' l='66' c='__sanitizer::StackDepotReverseMap::StackDepotReverseMap'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_stackdepot.h' l='67' c='__sanitizer::StackDepotReverseMap::operator='/>
<size>24</size>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_stackdepot.h' l='46'>// Instantiating this class creates a snapshot of StackDepot which can be
// efficiently queried with StackDepotGet(). You can use it concurrently with
// StackDepot, but the snapshot is only guaranteed to contain those stack traces
// which were stored before it was instantiated.</doc>
<fun r='__sanitizer::StackDepotReverseMap::StackDepotReverseMap'/>
<fun r='__sanitizer::StackDepotReverseMap::Get'/>
<mbr r='__sanitizer::StackDepotReverseMap::map_' o='0' t='InternalMmapVector&lt;__sanitizer::StackDepotReverseMap::IdDescPair&gt;'/>
<fun r='__sanitizer::StackDepotReverseMap::StackDepotReverseMap'/>
<fun r='__sanitizer::StackDepotReverseMap::operator='/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='480' c='__lsan::GetCallerPC'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='491'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='538' c='__lsan::ProcessPC'/>
<size>24</size>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_stackdepotbase.h' l='59'/>
