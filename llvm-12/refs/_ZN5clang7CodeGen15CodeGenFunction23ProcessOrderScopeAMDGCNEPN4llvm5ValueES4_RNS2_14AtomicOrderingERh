<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='4131' type='bool clang::CodeGen::CodeGenFunction::ProcessOrderScopeAMDGCN(llvm::Value * Order, llvm::Value * Scope, llvm::AtomicOrdering &amp; AO, llvm::SyncScope::ID &amp; SSID)'/>
<def f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='15155' ll='15186' type='bool clang::CodeGen::CodeGenFunction::ProcessOrderScopeAMDGCN(llvm::Value * Order, llvm::Value * Scope, llvm::AtomicOrdering &amp; AO, llvm::SyncScope::ID &amp; SSID)'/>
<use f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='15434' u='c' c='_ZN5clang7CodeGen15CodeGenFunction21EmitAMDGPUBuiltinExprEjPKNS_8CallExprE'/>
<use f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='15463' u='c' c='_ZN5clang7CodeGen15CodeGenFunction21EmitAMDGPUBuiltinExprEjPKNS_8CallExprE'/>
<doc f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='15149'>// For processing memory ordering and memory scope arguments of various
// amdgcn builtins.
// \p Order takes a C++11 comptabile memory-ordering specifier and converts
// it into LLVM&apos;s memory ordering specifier using atomic C ABI, and writes
// to \p AO. \p Scope takes a const char * and converts it into AMDGCN
// specific SyncScopeID and writes it to \p SSID.</doc>
