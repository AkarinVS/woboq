<def f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='1187' ll='1189' type='llvm::LazyCallGraph::SCC * llvm::LazyCallGraph::createSCC(Ts &amp;&amp;... Args)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='1184'>/// Allocates an SCC and constructs it using the graph allocator.
  ///
  /// The arguments are forwarded to the constructor.</doc>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='918' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC23switchInternalEdgeToRefERNS0_4NodeES3_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1673' u='c' c='_ZN4llvm13LazyCallGraph16addSplitFunctionERNS_8FunctionES2_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1698' u='c' c='_ZN4llvm13LazyCallGraph16addSplitFunctionERNS_8FunctionES2_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1772' u='c' c='_ZN4llvm13LazyCallGraph29addSplitRefRecursiveFunctionsERNS_8FunctionENS_8ArrayRefIPS1_EE'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1938' u='c' c='_ZN4llvm13LazyCallGraph9buildSCCsERNS0_6RefSCCENS_14iterator_rangeISt16reverse_iteratorIPPNS0_4NodeEEEE'/>
