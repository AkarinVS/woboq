<def f='llvm/lldb/include/lldb/Target/Process.h' l='1078' ll='1084' type='lldb_private::Status lldb_private::Process::DoHalt(bool &amp; caused_stop)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='1063'>/// Halts a running process.
  ///
  /// DoHalt must produce one and only one stop StateChanged event if it
  /// actually stops the process.  If the stop happens through some natural
  /// event (for instance a SIGSTOP), then forwarding that event will do.
  /// Otherwise, you must generate the event manually. This function is called
  /// from the context of the private state thread.
  ///
  /// \param[out] caused_stop
  ///     If true, then this Halt caused the stop, otherwise, the
  ///     process was already stopped.
  ///
  /// \return
  ///     Returns \b true if the process successfully halts, \b false
  ///     otherwise.</doc>
<ovr f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='2399' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote6DoHaltERb'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='3681' u='c' c='_ZN12lldb_private7Process11HaltPrivateEv'/>
