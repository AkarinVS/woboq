<dec f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='451' type='HexagonII::SubInstructionGroup llvm::HexagonInstrInfo::getDuplexCandidateGroup(const llvm::MachineInstr &amp; MI) const'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='2172' u='c' c='_ZNK4llvm16HexagonInstrInfo12isDuplexPairERKNS_12MachineInstrES3_'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='2173' u='c' c='_ZNK4llvm16HexagonInstrInfo12isDuplexPairERKNS_12MachineInstrES3_'/>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='3816' ll='4194' type='HexagonII::SubInstructionGroup llvm::HexagonInstrInfo::getDuplexCandidateGroup(const llvm::MachineInstr &amp; MI) const'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='4351' u='c' c='_ZNK4llvm16HexagonInstrInfo18changeDuplexOpcodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_12MachineInstrELb1ELb1EvEELb0ELb0EEEb'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='3814'>// See if instruction could potentially be a duplex candidate.
// If so, return its group. Zero otherwise.</doc>
