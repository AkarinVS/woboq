<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='767' u='c' c='_ZN4llvm16InformationCacheC1ERKNS_6ModuleERNS_14AnalysisGetterERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096ELm128EEEPNS_9SetVectorIPN13877892'/>
<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='805' ll='834' type='void llvm::InformationCache::initializeModuleSlice(SetVector&lt;llvm::Function *&gt; &amp; SCC)'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='799'>/// Initialize the ModuleSlice member based on \p SCC. ModuleSlices contains
  /// (a subset of) all functions that we can look at during this SCC traversal.
  /// This includes functions (transitively) called from the SCC and the
  /// (transitive) callers of SCC functions. We also can look at a function if
  /// there is a &quot;reference edge&quot;, i.a., if the function somehow uses (!=calls)
  /// a function in the SCC or a caller of a function in the SCC.</doc>
