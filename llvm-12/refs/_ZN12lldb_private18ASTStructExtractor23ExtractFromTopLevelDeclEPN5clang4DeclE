<dec f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ASTStructExtractor.h' l='112' type='void lldb_private::ASTStructExtractor::ExtractFromTopLevelDecl(clang::Decl * D)'/>
<def f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ASTStructExtractor.cpp' l='111' ll='130' type='void lldb_private::ASTStructExtractor::ExtractFromTopLevelDecl(clang::Decl * D)'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ASTStructExtractor.cpp' l='119' u='c' c='_ZN12lldb_private18ASTStructExtractor23ExtractFromTopLevelDeclEPN5clang4DeclE'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ASTStructExtractor.cpp' l='138' u='c' c='_ZN12lldb_private18ASTStructExtractor18HandleTopLevelDeclEN5clang12DeclGroupRefE'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ASTStructExtractor.h' l='106'>/// Hunt the given Decl for FunctionDecls named the same as the wrapper
  /// function name, recursing as necessary through LinkageSpecDecls, and
  /// calling ExtractFromFunctionDecl on anything that was found
  ///
  /// \param[in] D
  ///     The Decl to hunt.</doc>
