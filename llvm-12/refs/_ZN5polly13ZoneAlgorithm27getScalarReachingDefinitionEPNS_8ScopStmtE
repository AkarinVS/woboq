<dec f='llvm/polly/include/polly/ZoneAlgo.h' l='280' type='isl::map polly::ZoneAlgorithm::getScalarReachingDefinition(polly::ScopStmt * Stmt)'/>
<use f='llvm/polly/lib/Transform/DeLICM.cpp' l='638' u='c' c='_ZN12_GLOBAL__N_110DeLICMImpl16computeValueUsesEPKN5polly13ScopArrayInfoE'/>
<doc f='llvm/polly/include/polly/ZoneAlgo.h' l='272'>/// Get the reaching definition of a scalar defined in @p Stmt.
  ///
  /// Note that this does not depend on the llvm::Instruction, only on the
  /// statement it is defined in. Therefore the same computation can be reused.
  ///
  /// @param Stmt The statement in which a scalar is defined.
  ///
  /// @return { Scatter[] -&gt; DomainDef[] }</doc>
<use f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='488' u='c' c='_ZN5polly13ZoneAlgorithm29computeUseToDefFlowDependencyEPNS_8ScopStmtES2_'/>
<def f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='705' ll='715' type='isl::map polly::ZoneAlgorithm::getScalarReachingDefinition(polly::ScopStmt * Stmt)'/>
<use f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='721' u='c' c='_ZN5polly13ZoneAlgorithm27getScalarReachingDefinitionEN3isl12noexceptions3setE'/>
