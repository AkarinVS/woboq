<dec f='llvm/llvm/include/llvm/Transforms/Scalar/GVN.h' l='343' type='llvm::BasicBlock * llvm::GVN::splitCriticalEdges(llvm::BasicBlock * Pred, llvm::BasicBlock * Succ)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='1273' u='c' c='_ZN4llvm3GVN14PerformLoadPREEPNS_8LoadInstERNS_11SmallVectorINS_3gvn21AvailableValueInBlockELj64EEERNS3_IPNS_10BasicBlockELj64EEE'/>
<def f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='2670' ll='2682' type='llvm::BasicBlock * llvm::GVN::splitCriticalEdges(llvm::BasicBlock * Pred, llvm::BasicBlock * Succ)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='2813' u='c' c='_ZN4llvm3GVN12addDeadBlockEPNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='2862' u='c' c='_ZN4llvm3GVN21processFoldableCondBrEPNS_10BranchInstE'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='2668'>/// Split the critical edge connecting the given two blocks, and return
/// the block inserted to the critical edge.</doc>
