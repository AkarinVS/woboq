<def f='llvm/llvm/include/llvm/Passes/PassBuilder.h' l='616' ll='619' type='void llvm::PassBuilder::registerPipelineEarlySimplificationEPCallback(const std::function&lt;void (ModulePassManager &amp;, OptimizationLevel)&gt; &amp; C)'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='1211' u='c' c='_ZN12_GLOBAL__N_118EmitAssemblyHelper30EmitAssemblyWithNewPassManagerEN5clang13BackendActionESt10unique_ptrIN4llvm17raw_pwrite_streamESt14default_deleteIS5_EE'/>
<doc f='llvm/llvm/include/llvm/Passes/PassBuilder.h' l='612'>/// Register a callback for a default optimizer pipeline extension point.
  ///
  /// This extension point allows adding optimization right after passes that do
  /// basic simplification of the input IR.</doc>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp' l='560' u='c' c='_ZN4llvm19AMDGPUTargetMachine28registerPassBuilderCallbacksERNS_11PassBuilderEb'/>
<use f='llvm/llvm/lib/Target/BPF/BPFTargetMachine.cpp' l='137' u='c' c='_ZN4llvm16BPFTargetMachine28registerPassBuilderCallbacksERNS_11PassBuilderEb'/>
<use f='llvm/llvm/tools/opt/NewPMDriver.cpp' l='212' u='c' c='_ZL19registerEPCallbacksRN4llvm11PassBuilderE'/>
