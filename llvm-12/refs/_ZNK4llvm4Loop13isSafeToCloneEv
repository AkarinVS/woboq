<dec f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='806' type='bool llvm::Loop::isSafeToClone() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='805'>/// Return true if the loop body is safe to clone in practice.</doc>
<def f='llvm/llvm/lib/Analysis/LoopInfo.cpp' l='478' ll='494' type='bool llvm::Loop::isSafeToClone() const'/>
<doc f='llvm/llvm/lib/Analysis/LoopInfo.cpp' l='477'>// Routines that reform the loop CFG and split edges often fail on indirectbr.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnswitch.cpp' l='793' u='c' c='_ZN12_GLOBAL__N_112LoopUnswitch18processCurrentLoopEv'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnroll.cpp' l='302' u='c' c='_ZN4llvm10UnrollLoopEPNS_4LoopENS_17UnrollLoopOptionsEPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheEPKNS_19TargetTrans5476875'/>
