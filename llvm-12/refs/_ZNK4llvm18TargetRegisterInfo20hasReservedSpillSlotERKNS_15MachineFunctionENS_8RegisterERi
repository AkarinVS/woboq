<def f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='880' ll='883' type='bool llvm::TargetRegisterInfo::hasReservedSpillSlot(const llvm::MachineFunction &amp; MF, llvm::Register Reg, int &amp; FrameIdx) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='874'>/// Return true if target has reserved a spill slot in the stack frame of
  /// the given function for the specified register. e.g. On x86, if the frame
  /// register is required, the first fixed stack object is reserved as its
  /// spill slot. This tells PEI not to create a new stack frame
  /// object for the given register. It should be called only after
  /// determineCalleeSaves().</doc>
<use f='llvm/llvm/lib/CodeGen/PrologEpilogInserter.cpp' l='426' u='c' c='_ZL27assignCalleeSavedSpillSlotsRN4llvm15MachineFunctionERKNS_9BitVectorERjS5_'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp' l='1066' c='_ZNK4llvm15PPCRegisterInfo20hasReservedSpillSlotERKNS_15MachineFunctionENS_8RegisterERi'/>
<ovr f='llvm/llvm/lib/Target/RISCV/RISCVRegisterInfo.cpp' l='139' c='_ZNK4llvm17RISCVRegisterInfo20hasReservedSpillSlotERKNS_15MachineFunctionENS_8RegisterERi'/>
