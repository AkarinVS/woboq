<inh f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='641' c='llvm::VPRecipeBase'/>
<inh f='llvm/llvm/lib/Transforms/Vectorize/VPlanValue.h' l='187' c='llvm::VPUser'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='1273' ll='1295'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8529' c='_ZN4llvm15VPRecipeBuilder21createReplicateRegionEPNS_11InstructionEPNS_12VPRecipeBaseERSt10unique_ptrINS_5VPlanESt14default_deleteIS6_EE'/>
<size>88</size>
<doc f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='1268'>/// VPPredInstPHIRecipe is a recipe for generating the phi nodes needed when
/// control converges back from a Branch-on-Mask. The phi nodes are needed in
/// order to merge values that are set under such a branch and feed their uses.
/// The phi nodes can be scalar or vector depending on the users of the value.
/// This recipe works in concert with VPBranchOnMaskRecipe.</doc>
<fun r='_ZN4llvm19VPPredInstPHIRecipeC1EPNS_7VPValueE'/>
<fun r='_ZN4llvm19VPPredInstPHIRecipeD1Ev'/>
<fun r='_ZN4llvm19VPPredInstPHIRecipe7classofEPKNS_5VPDefE'/>
<fun r='_ZN4llvm19VPPredInstPHIRecipe7executeERNS_16VPTransformStateE'/>
<fun r='_ZNK4llvm19VPPredInstPHIRecipe5printERNS_11raw_ostreamERKNS_5TwineERNS_13VPSlotTrackerE'/>
<fun r='_ZN4llvm19VPPredInstPHIRecipe7executeERNS_16VPTransformStateE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.cpp' l='119' c='_ZN4llvm12VPRecipeBase8toVPUserEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.cpp' l='213' c='_ZN4llvm12VPBasicBlock14getFirstNonPhiEv'/>
<size>88</size>
<fun r='_ZNK4llvm19VPPredInstPHIRecipe5printERNS_11raw_ostreamERKNS_5TwineERNS_13VPSlotTrackerE'/>
