<def f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/CheckerContext.h' l='257' ll='259' type='const clang::ento::NoteTag * clang::ento::CheckerContext::getNoteTag(NoteTag::Callback &amp;&amp; Cb, bool IsPrunable = false)'/>
<use f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/CheckerContext.h' l='271' u='c' c='_ZN5clang4ento14CheckerContext10getNoteTagEOSt8functionIFNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS0_22PathSensitiveBugReportEEEb'/>
<use f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/CheckerContext.h' l='286' u='c' c='_ZN5clang4ento14CheckerContext10getNoteTagEOSt8functionIFNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEEb'/>
<use f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/CheckerContext.h' l='298' u='c' c='_ZN5clang4ento14CheckerContext10getNoteTagEN4llvm9StringRefEb'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/CheckerContext.h' l='247'>/// Produce a program point tag that displays an additional path note
  /// to the user. This is a lightweight alternative to the
  /// BugReporterVisitor mechanism: instead of visiting the bug report
  /// node-by-node to restore the sequence of events that led to discovering
  /// a bug, you can add notes as you add your transitions.
  ///
  /// @param Cb Callback with &apos;BugReporterContext &amp;, BugReport &amp;&apos; parameters.
  /// @param IsPrunable Whether the note is prunable. It allows BugReporter
  ///        to omit the note from the report if it would make the displayed
  ///        bug path significantly shorter.</doc>
