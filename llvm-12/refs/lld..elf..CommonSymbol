<use f='llvm/lld/ELF/Symbols.h' l='234' c='_ZN3lld3elf6Symbol13resolveCommonERKNS0_12CommonSymbolE'/>
<inh f='llvm/lld/ELF/Symbols.h' l='58' c='lld::elf::Symbol'/>
<def f='llvm/lld/ELF/Symbols.h' l='331' ll='342'/>
<use f='llvm/lld/ELF/Symbols.h' l='477'/>
<use f='llvm/lld/ELF/Symbols.h' l='477'/>
<use f='llvm/lld/ELF/Symbols.h' l='499' c='_ZN3lld3elfL13assertSymbolsEv'/>
<use f='llvm/lld/ELF/Symbols.h' l='511' c='_ZNK3lld3elf6Symbol13getSymbolSizeEv'/>
<size>64</size>
<doc f='llvm/lld/ELF/Symbols.h' l='310'>// Represents a common symbol.
//
// On Unix, it is traditionally allowed to write variable definitions
// without initialization expressions (such as &quot;int foo;&quot;) to header
// files. Such definition is called &quot;tentative definition&quot;.
//
// Using tentative definition is usually considered a bad practice
// because you should write only declarations (such as &quot;extern int
// foo;&quot;) to header files. Nevertheless, the linker and the compiler
// have to do something to support bad code by allowing duplicate
// definitions for this particular case.
//
// Common symbols represent variable definitions without initializations.
// The compiler creates common symbols when it sees variable definitions
// without initialization (you can suppress this behavior and let the
// compiler create a regular defined symbol by -fno-common).
//
// The linker allows common symbols to be replaced by regular defined
// symbols. If there are remaining common symbols after name resolution is
// complete, they are converted to regular defined symbols in a .bss
// section. (Therefore, the later passes don&apos;t see any CommonSymbols.)</doc>
<fun r='_ZN3lld3elf12CommonSymbolC1EPNS0_9InputFileENS0_10StringRefZEhhhmm'/>
<fun r='_ZN3lld3elf12CommonSymbol7classofEPKNS0_6SymbolE'/>
<mbr r='lld::elf::CommonSymbol::alignment' o='416' t='uint32_t'/>
<mbr r='lld::elf::CommonSymbol::size' o='448' t='uint64_t'/>
<use f='llvm/lld/ELF/Driver.cpp' l='1704' c='_ZL20replaceCommonSymbolsv'/>
<size>64</size>
<use f='llvm/lld/ELF/InputFiles.cpp' l='1164' c='_ZN3lld3elf7ObjFile17initializeSymbolsEv'/>
<use f='llvm/lld/ELF/InputFiles.cpp' l='1720' c='_ZL19createBitcodeSymbolRKSt6vectorIbSaIbEERKN4llvm3lto9InputFile6SymbolERN3lld3elf11BitcodeFileE'/>
<size>64</size>
<use f='llvm/lld/ELF/Symbols.cpp' l='430' c='_ZN3lld3elf6Symbol7resolveERKS1_'/>
<use f='llvm/lld/ELF/Symbols.cpp' l='652' c='_ZN3lld3elf6Symbol13resolveCommonERKNS0_12CommonSymbolE'/>
<use f='llvm/lld/ELF/Symbols.cpp' l='665' c='_ZN3lld3elf6Symbol13resolveCommonERKNS0_12CommonSymbolE'/>
<use f='llvm/lld/ELF/Symbols.cpp' l='666' c='_ZN3lld3elf6Symbol13resolveCommonERKNS0_12CommonSymbolE'/>
<use f='llvm/lld/ELF/Symbols.cpp' l='673' c='_ZN3lld3elf6Symbol13resolveCommonERKNS0_12CommonSymbolE'/>
<use f='llvm/lld/ELF/Symbols.cpp' l='673' c='_ZN3lld3elf6Symbol13resolveCommonERKNS0_12CommonSymbolE'/>
<use f='llvm/lld/ELF/Symbols.cpp' l='742' c='_ZN3lld3elf6Symbol13resolveSharedERKNS0_12SharedSymbolE'/>
<use f='llvm/lld/ELF/Symbols.cpp' l='743' c='_ZN3lld3elf6Symbol13resolveSharedERKNS0_12SharedSymbolE'/>
<size>64</size>
