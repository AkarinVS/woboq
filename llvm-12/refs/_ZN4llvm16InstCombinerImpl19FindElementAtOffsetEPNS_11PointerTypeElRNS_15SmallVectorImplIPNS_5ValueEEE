<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='193' type='llvm::Type * llvm::InstCombinerImpl::FindElementAtOffset(llvm::PointerType * PtrTy, int64_t Offset, SmallVectorImpl&lt;llvm::Value *&gt; &amp; NewIndices)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='1229' ll='1286' type='llvm::Type * llvm::InstCombinerImpl::FindElementAtOffset(llvm::PointerType * PtrTy, int64_t Offset, SmallVectorImpl&lt;llvm::Value *&gt; &amp; NewIndices)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='2463' u='c' c='_ZN4llvm16InstCombinerImpl22visitGetElementPtrInstERNS_17GetElementPtrInstE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='1225'>/// Given a pointer type and a constant offset, determine whether or not there
/// is a sequence of GEP indices into the pointed type that will land us at the
/// specified offset. If so, fill them into NewIndices and return the resultant
/// element type, otherwise return null.</doc>
