<dec f='llvm/clang/include/clang/Parse/Parser.h' l='1615' type='clang::ExprResult clang::Parser::ParseAsmStringLiteral(bool ForAsmLabel)'/>
<use f='llvm/clang/lib/Parse/ParseStmtAsm.cpp' l='738' u='c' c='_ZN5clang6Parser17ParseAsmStatementERb'/>
<use f='llvm/clang/lib/Parse/ParseStmtAsm.cpp' l='811' u='c' c='_ZN5clang6Parser17ParseAsmStatementERb'/>
<use f='llvm/clang/lib/Parse/ParseStmtAsm.cpp' l='908' u='c' c='_ZN5clang6Parser19ParseAsmOperandsOptERN4llvm15SmallVectorImplIPNS_14IdentifierInfoEEERNS2_IPNS_4ExprEEESA_'/>
<def f='llvm/clang/lib/Parse/Parser.cpp' l='1522' ll='1545' type='clang::ExprResult clang::Parser::ParseAsmStringLiteral(bool ForAsmLabel)'/>
<use f='llvm/clang/lib/Parse/Parser.cpp' l='1572' u='c' c='_ZN5clang6Parser14ParseSimpleAsmEbPNS_14SourceLocationE'/>
<doc f='llvm/clang/lib/Parse/Parser.cpp' l='1513'>/// ParseAsmStringLiteral - This is just a normal string-literal, but is not
/// allowed to be a wide string, and is not subject to character translation.
/// Unlike GCC, we also diagnose an empty string literal when parsing for an
/// asm label as opposed to an asm statement, because such a construct does not
/// behave well.
///
/// [GNU] asm-string-literal:
///         string-literal
///</doc>
