<dec f='llvm/lldb/source/Plugins/LanguageRuntime/RenderScript/RenderScriptRuntime/RenderScriptRuntime.h' l='73' type='Searcher::CallbackReturn lldb_private::lldb_renderscript::RSBreakpointResolver::SearchCallback(lldb_private::SearchFilter &amp; filter, lldb_private::SymbolContext &amp; context, lldb_private::Address * addr)'/>
<inh f='llvm/lldb/include/lldb/Core/SearchFilter.h' l='54' c='_ZN12lldb_private8Searcher14SearchCallbackERNS_12SearchFilterERNS_13SymbolContextEPNS_7AddressE'/>
<def f='llvm/lldb/source/Plugins/LanguageRuntime/RenderScript/RenderScriptRuntime/RenderScriptRuntime.cpp' l='793' ll='823' type='Searcher::CallbackReturn lldb_private::lldb_renderscript::RSBreakpointResolver::SearchCallback(lldb_private::SearchFilter &amp; filter, lldb_private::SymbolContext &amp; context, lldb_private::Address * )'/>
<doc f='llvm/lldb/source/Plugins/LanguageRuntime/RenderScript/RenderScriptRuntime/RenderScriptRuntime.cpp' l='789'>// Callback with a module to search for matching symbols. We first check that
// the module contains RS kernels. Then look for a symbol which matches our
// kernel name. The breakpoint address is finally set using the address of this
// symbol.</doc>
