<dec f='llvm/lldb/include/lldb/Symbol/Block.h' l='354' type='bool lldb_private::Block::GetRangeAtIndex(uint32_t range_idx, lldb_private::AddressRange &amp; range)'/>
<use f='llvm/lldb/source/API/SBBlock.cpp' l='207' u='c' c='_ZN4lldb7SBBlock20GetRangeStartAddressEj'/>
<use f='llvm/lldb/source/API/SBBlock.cpp' l='221' u='c' c='_ZN4lldb7SBBlock18GetRangeEndAddressEj'/>
<doc f='llvm/lldb/include/lldb/Symbol/Block.h' l='352'>// Since blocks might have multiple discontiguous address ranges, we need to
  // be able to get at any of the address ranges in a block.</doc>
<use f='llvm/lldb/source/Plugins/SymbolFile/PDB/SymbolFilePDB.cpp' l='999' u='c' c='_ZN13SymbolFilePDB23ParseVariableForPDBDataERKN12lldb_private13SymbolContextERKN4llvm3pdb13PDBSymbolDataE'/>
<def f='llvm/lldb/source/Symbol/Block.cpp' l='292' ll='304' type='bool lldb_private::Block::GetRangeAtIndex(uint32_t range_idx, lldb_private::AddressRange &amp; range)'/>
<use f='llvm/lldb/source/Symbol/SymbolContext.cpp' l='394' u='c' c='_ZNK12lldb_private13SymbolContext15GetAddressRangeEjjbRNS_12AddressRangeE'/>
<use f='llvm/lldb/source/Symbol/SymbolContext.cpp' l='396' u='c' c='_ZNK12lldb_private13SymbolContext15GetAddressRangeEjjbRNS_12AddressRangeE'/>
<use f='llvm/lldb/source/Target/ThreadPlanStepOut.cpp' l='463' u='c' c='_ZN12lldb_private17ThreadPlanStepOut20QueueInlinedStepPlanEb'/>
<use f='llvm/lldb/source/Target/ThreadPlanStepOut.cpp' l='488' u='c' c='_ZN12lldb_private17ThreadPlanStepOut20QueueInlinedStepPlanEb'/>
