<dec f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_stoptheworld.h' l='61' type='void __sanitizer::StopTheWorld(__sanitizer::StopTheWorldCallback callback, void * argument)'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_stoptheworld.h' l='56'>// Suspend all threads in the current process and run the callback on the list
// of suspended threads. This function will resume the threads before returning.
// The callback should not call any libc functions. The callback must not call
// exit() nor _exit() and instead return to the caller.
// This function should NOT be called from multiple threads simultaneously.</doc>
<use f='llvm/compiler-rt/lib/asan/asan_memory_profile.cpp' l='126' u='c' c='__sanitizer_print_memory_profile'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common_linux.cpp' l='128' u='c' c='__lsan::LockStuffAndStopTheWorldCallback'/>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp' l='394' ll='470' type='void __sanitizer::StopTheWorld(__sanitizer::StopTheWorldCallback callback, void * argument)'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_platform_linux.cpp' l='154' u='c' c='__tsan::FlushShadowMemory'/>
