<dec f='llvm/build/include/c++/v1/deque' l='1554' type='std::__1::deque::iterator std::__1::deque::__move_backward_and_check(std::__1::deque::iterator __f, std::__1::deque::iterator __l, std::__1::deque::iterator __r, std::__1::deque::const_pointer &amp; __vt)'/>
<use f='llvm/build/include/c++/v1/deque' l='2188' u='c' c='_ZNSt3__15deque6insertENS_12__deque_baseIT_T0_E14const_iteratorERKS2_'/>
<use f='llvm/build/include/c++/v1/deque' l='2246' u='c' c='_ZNSt3__15deque6insertENS_12__deque_baseIT_T0_E14const_iteratorENS4_9size_typeERKS2_'/>
<def f='llvm/build/include/c++/v1/deque' l='2765' ll='2792' type='typename deque&lt;_Tp, _Allocator&gt;::iterator std::__1::deque::__move_backward_and_check(std::__1::deque::iterator __f, std::__1::deque::iterator __l, std::__1::deque::iterator __r, std::__1::deque::const_pointer &amp; __vt)'/>
<doc f='llvm/build/include/c++/v1/deque' l='2763'>// move assign [__f, __l) to [__r - (__l-__f), __r) backwards.
// If __vt points into [__f, __l), then add (__r - __l) to __vt.</doc>
