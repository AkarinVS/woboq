<def f='llvm/polly/lib/External/isl/isl_union_single.c' l='92' macro='1' type='struct isl_hash_table_entry * isl_union_pw_aff_find_part_entry(isl_union_pw_aff * u, isl_space * space, int reserve)'/>
<use f='llvm/polly/lib/External/isl/isl_union_templ.c' l='146' macro='1' u='c' c='isl_union_pw_aff_extract_pw_aff'/>
<use f='llvm/polly/lib/External/isl/isl_union_templ.c' l='192' macro='1' u='c' c='isl_union_pw_aff_add_part_generic'/>
<use f='llvm/polly/lib/External/isl/isl_union_templ.c' l='564' macro='1' u='c' c='isl_union_pw_aff_match_bin_entry'/>
<use f='llvm/polly/lib/External/isl/isl_union_templ.c' l='1194' macro='1' u='c' c='isl_union_pw_aff_plain_is_equal_el'/>
<doc f='llvm/polly/lib/External/isl/isl_union_single.c' l='83'>/* Return the entry, if any, in &quot;u&quot; that lives in &quot;space&quot;.
 * If &quot;reserve&quot; is set, then an entry is created if it does not exist yet.
 * Return NULL on error and isl_hash_table_entry_none if no entry was found.
 * Note that when &quot;reserve&quot; is set, the function will never return
 * isl_hash_table_entry_none.
 *
 * First look for the entry (if any) with the same domain space.
 * If it exists, then check if the range space also matches.
 */</doc>
