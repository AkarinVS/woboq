<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h' l='137' u='c' c='_ZN4llvm28LegalizationArtifactCombiner14tryCombineZExtERNS_12MachineInstrERNS_15SmallVectorImplIPS1_EERNS3_INS_8RegisterEEERNS_20GISelObserverWrapperE'/>
<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h' l='896' ll='946' type='void llvm::LegalizationArtifactCombiner::markDefDead(llvm::MachineInstr &amp; MI, llvm::MachineInstr &amp; DefMI, SmallVectorImpl&lt;llvm::MachineInstr *&gt; &amp; DeadInsts, unsigned int DefIdx = 0)'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h' l='957' u='c' c='_ZN4llvm28LegalizationArtifactCombiner18markInstAndDefDeadERNS_12MachineInstrES2_RNS_15SmallVectorImplIPS1_EEj'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h' l='891'>/// Mark a def of one of MI&apos;s original operands, DefMI, as dead if changing MI
  /// (either by killing it or changing operands) results in DefMI being dead
  /// too. In-between COPYs or artifact-casts are also collected if they are
  /// dead.
  /// MI is not marked dead.</doc>
