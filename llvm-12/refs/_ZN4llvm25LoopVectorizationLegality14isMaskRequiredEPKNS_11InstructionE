<def f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='342' type='bool llvm::LoopVectorizationLegality::isMaskRequired(const llvm::Instruction * I)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='340'>/// Returns true if vector representation of the instruction \p I
  /// requires mask.</doc>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1528' u='c' c='_ZN4llvm26LoopVectorizationCostModel16isPredicatedInstEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5168' u='c' c='_ZN4llvm26LoopVectorizationCostModel23isScalarWithPredicationEPNS_11InstructionENS_12ElementCountE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5214' u='c' c='_ZN4llvm26LoopVectorizationCostModel29interleavedAccessCanBeWidenedEPNS_11InstructionENS_12ElementCountE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6730' u='c' c='_ZN4llvm26LoopVectorizationCostModel23getConsecutiveMemOpCostEPNS_11InstructionENS_12ElementCountE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6781' u='c' c='_ZN4llvm26LoopVectorizationCostModel20getGatherScatterCostEPNS_11InstructionENS_12ElementCountE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6813' u='c' c='_ZN4llvm26LoopVectorizationCostModel22getInterleaveGroupCostEPNS_11InstructionENS_12ElementCountE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7382' u='c' c='_ZN4llvm26LoopVectorizationCostModel18getInstructionCostEPNS_11InstructionENS_12ElementCountERPNS_4TypeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8291' u='c' c='_ZN4llvm15VPRecipeBuilder16tryToWidenMemoryEPNS_11InstructionERNS_7VFRangeERSt10unique_ptrINS_5VPlanESt14default_deleteIS6_EE'/>
