<dec f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='470' type='const internal::VariadicDynCastAllOfMatcher&lt;Decl, ClassTemplatePartialSpecializationDecl&gt;'/>
<doc f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='453'>/// Matches C++ class template partial specializations.
///
/// Given
/// \code
///   template&lt;class T1, class T2, int I&gt;
///   class A {};
///
///   template&lt;class T, int I&gt;
///   class A&lt;T, T*, I&gt; {};
///
///   template&lt;&gt;
///   class A&lt;int, int, 1&gt; {};
/// \endcode
/// classTemplatePartialSpecializationDecl()
///   matches the specialization \c A&lt;T,T*,I&gt; but not \c A&lt;int,int,1&gt;</doc>
<def f='llvm/clang/lib/ASTMatchers/ASTMatchersInternal.cpp' l='750' ll='752' type='const internal::VariadicDynCastAllOfMatcher&lt;Decl, ClassTemplatePartialSpecializationDecl&gt;'/>
<use f='llvm/clang/lib/ASTMatchers/Dynamic/Registry.cpp' l='160' u='r' c='_ZN5clang12ast_matchers7dynamic12_GLOBAL__N_112RegistryMapsC1Ev'/>
<use f='llvm/clang/unittests/AST/ASTImporterTest.cpp' l='3392' u='m' c='_ZN5clang12ast_matchers95ASTImporterOptionSpecificTestBase_ClassTemplatePartialSpecializationsShouldNotBeDuplicated_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/AST/ASTImporterTest.cpp' l='3395' u='m' c='_ZN5clang12ast_matchers95ASTImporterOptionSpecificTestBase_ClassTemplatePartialSpecializationsShouldNotBeDuplicated_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/AST/ASTImporterTest.cpp' l='3400' u='m' c='_ZN5clang12ast_matchers95ASTImporterOptionSpecificTestBase_ClassTemplatePartialSpecializationsShouldNotBeDuplicated_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/AST/ASTImporterTest.cpp' l='3454' u='m' c='_ZN5clang12ast_matchers87ASTImporterOptionSpecificTestBase_ClassTemplateFullAndPartialSpecsShouldNotBeMixed_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/AST/ASTImporterTest.cpp' l='3458' u='m' c='_ZN5clang12ast_matchers87ASTImporterOptionSpecificTestBase_ClassTemplateFullAndPartialSpecsShouldNotBeMixed_Test8TestBodyEv'/>
