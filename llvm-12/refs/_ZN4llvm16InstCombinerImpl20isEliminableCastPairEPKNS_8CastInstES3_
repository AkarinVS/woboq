<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='339' type='Instruction::CastOps llvm::InstCombinerImpl::isEliminableCastPair(const llvm::CastInst * CI1, const llvm::CastInst * CI2)'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='329'>/// Determine if a pair of casts can be replaced by a single cast.
  ///
  /// \param CI1 The first of a pair of casts.
  /// \param CI2 The second of a pair of casts.
  ///
  /// \return 0 if the cast pair cannot be eliminated, otherwise returns an
  /// Instruction::CastOps value for a cast that can replace the pair, casting
  /// CI1-&gt;getSrcTy() to CI2-&gt;getDstTy().
  ///
  /// \see CastInst::isEliminableCastPair</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1477' u='c' c='_ZN4llvm16InstCombinerImpl18shouldOptimizeCastEPNS_8CastInstE'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='249' ll='275' type='Instruction::CastOps llvm::InstCombinerImpl::isEliminableCastPair(const llvm::CastInst * CI1, const llvm::CastInst * CI2)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='283' u='c' c='_ZN4llvm16InstCombinerImpl20commonCastTransformsERNS_8CastInstE'/>
