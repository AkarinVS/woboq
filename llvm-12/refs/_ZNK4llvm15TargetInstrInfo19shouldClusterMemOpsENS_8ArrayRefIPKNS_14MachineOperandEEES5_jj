<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1362' ll='1366' type='bool llvm::TargetInstrInfo::shouldClusterMemOps(ArrayRef&lt;const llvm::MachineOperand *&gt; BaseOps1, ArrayRef&lt;const llvm::MachineOperand *&gt; BaseOps2, unsigned int NumLoads, unsigned int NumBytes) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1350'>/// Returns true if the two given memory operations should be scheduled
  /// adjacent. Note that you have to add:
  ///   DAG-&gt;addMutation(createLoadClusterDAGMutation(DAG-&gt;TII, DAG-&gt;TRI));
  /// or
  ///   DAG-&gt;addMutation(createStoreClusterDAGMutation(DAG-&gt;TII, DAG-&gt;TRI));
  /// to TargetPassConfig::createMachineScheduler() to have an effect.
  ///
  /// \p BaseOps1 and \p BaseOps2 are memory operands of two memory operations.
  /// \p NumLoads is the number of loads that will be in the cluster if this
  /// hook returns true.
  /// \p NumBytes is the number of bytes that will be loaded from all the
  /// clustered loads if this hook returns true.</doc>
<use f='llvm/llvm/lib/CodeGen/MachineScheduler.cpp' l='1627' u='c' c='_ZN12_GLOBAL__N_124BaseMemOpClusterMutation24clusterNeighboringMemOpsEN4llvm8ArrayRefINS0_9MemOpInfoEEEbPNS1_17ScheduleDAGInstrsE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='2757' c='_ZNK4llvm16AArch64InstrInfo19shouldClusterMemOpsENS_8ArrayRefIPKNS_14MachineOperandEEES5_jj'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='441' c='_ZNK4llvm11SIInstrInfo19shouldClusterMemOpsENS_8ArrayRefIPKNS_14MachineOperandEEES5_jj'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='2782' c='_ZNK4llvm12PPCInstrInfo19shouldClusterMemOpsENS_8ArrayRefIPKNS_14MachineOperandEEES5_jj'/>
