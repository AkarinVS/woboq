<dec f='llvm/clang/include/clang/Basic/CodeGenOptions.h' l='314' type='clang::SanitizerSet'/>
<offset>10560</offset>
<doc f='llvm/clang/include/clang/Basic/CodeGenOptions.h' l='312'>/// Set of sanitizer checks that are non-fatal (i.e. execution should be
  /// continued when possible).</doc>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='285' u='m' c='_ZL25addAddressSanitizerPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='309' u='m' c='_ZL27addHWAddressSanitizerPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='327' u='m' c='_ZL32addGeneralOptsForMemorySanitizerRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseEb'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='1266' u='m' c='_ZN12_GLOBAL__N_118EmitAssemblyHelper30EmitAssemblyWithNewPassManagerEN5clang13BackendActionESt10unique_ptrIN4llvm17raw_pwrite_streamESt14default_deleteIS5_EE'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='1286' u='m' c='_ZN12_GLOBAL__N_118EmitAssemblyHelper30EmitAssemblyWithNewPassManagerEN5clang13BackendActionESt10unique_ptrIN4llvm17raw_pwrite_streamESt14default_deleteIS5_EE'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='1309' u='m' c='_ZN12_GLOBAL__N_118EmitAssemblyHelper30EmitAssemblyWithNewPassManagerEN5clang13BackendActionESt10unique_ptrIN4llvm17raw_pwrite_streamESt14default_deleteIS5_EE'/>
<use f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='3205' u='m' c='_ZN5clang7CodeGen15CodeGenFunction9EmitCheckEN4llvm8ArrayRefISt4pairIPNS2_5ValueENS_13SanitizerMaskEEEENS0_16SanitizerHandlerENS3_IPNS2_8ConstantEEENS3_IS6_EE'/>
<use f='llvm/clang/lib/Frontend/CompilerInvocation.cpp' l='1319' u='a' c='_ZN5clang18CompilerInvocation16ParseCodeGenArgsERNS_14CodeGenOptionsERN4llvm3opt7ArgListENS_9InputKindERNS_17DiagnosticsEngineERKNS3_6TripleERKNSt7__c13589808'/>
