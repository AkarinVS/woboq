<dec f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.h' l='112' type='void __tsan::SyncClock::Unshare(__tsan::ClockCache * c)'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='208' u='c' c='__tsan::ThreadClock::releaseStoreAcquire'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='261' u='c' c='__tsan::ThreadClock::release'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='330' u='c' c='__tsan::ThreadClock::ReleaseStore'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='382' u='c' c='__tsan::ThreadClock::UpdateCurrentThread'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='462' u='c' c='__tsan::SyncClock::Resize'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='526' ll='555' type='void __tsan::SyncClock::Unshare(__tsan::ClockCache * c)'/>
<doc f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='523'>// Unshares the current clock if it&apos;s shared.
// Shared clocks are immutable, so they need to be unshared before any updates.
// Note: this does not apply to dirty entries as they are not shared.</doc>
