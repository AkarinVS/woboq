<dec f='llvm/llvm/lib/Transforms/Vectorize/VPRecipeBuilder.h' l='104' type='llvm::VPRecipeBase * llvm::VPRecipeBuilder::tryToCreateWidenRecipe(llvm::Instruction * Instr, llvm::VFRange &amp; Range, llvm::VPlanPtr &amp; Plan)'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8542' ll='8589' type='llvm::VPRecipeBase * llvm::VPRecipeBuilder::tryToCreateWidenRecipe(llvm::Instruction * Instr, llvm::VFRange &amp; Range, llvm::VPlanPtr &amp; Plan)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8717' u='c' c='_ZN4llvm24LoopVectorizationPlanner23buildVPlanWithVPRecipesERNS_7VFRangeERNS_15SmallPtrSetImplIPNS_11InstructionEEERKNS_8DenseMapIS5_S5_NS_12DenseMapI16584774'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/VPRecipeBuilder.h' l='102'>/// Check if a recipe can be create for \p I withing the given VF \p Range.
  /// If a recipe can be created, return it. Otherwise return nullptr.</doc>
