<dec f='llvm/llvm/include/llvm/Analysis/BasicAliasAnalysis.h' l='226' type='llvm::AliasResult llvm::BasicAAResult::aliasGEP(const llvm::GEPOperator * V1, llvm::LocationSize V1Size, const llvm::AAMDNodes &amp; V1AAInfo, const llvm::Value * V2, llvm::LocationSize V2Size, const llvm::AAMDNodes &amp; V2AAInfo, const llvm::Value * UnderlyingV1, const llvm::Value * UnderlyingV2, llvm::AAQueryInfo &amp; AAQI)'/>
<def f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1083' ll='1305' type='llvm::AliasResult llvm::BasicAAResult::aliasGEP(const llvm::GEPOperator * GEP1, llvm::LocationSize V1Size, const llvm::AAMDNodes &amp; V1AAInfo, const llvm::Value * V2, llvm::LocationSize V2Size, const llvm::AAMDNodes &amp; V2AAInfo, const llvm::Value * UnderlyingV1, const llvm::Value * UnderlyingV2, llvm::AAQueryInfo &amp; AAQI)'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1650' u='c' c='_ZN4llvm13BasicAAResult19aliasCheckRecursiveEPKNS_5ValueENS_12LocationSizeERKNS_9AAMDNodesES3_S4_S7_RNS_11AAQueryInfoES3_S3_'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1655' u='c' c='_ZN4llvm13BasicAAResult19aliasCheckRecursiveEPKNS_5ValueENS_12LocationSizeERKNS_9AAMDNodesES3_S4_S7_RNS_11AAQueryInfoES3_S3_'/>
<doc f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1077'>/// Provides a bunch of ad-hoc rules to disambiguate a GEP instruction against
/// another pointer.
///
/// We know that V1 is a GEP, but we don&apos;t know anything about V2.
/// UnderlyingV1 is getUnderlyingObject(GEP1), UnderlyingV2 is the same for
/// V2.</doc>
