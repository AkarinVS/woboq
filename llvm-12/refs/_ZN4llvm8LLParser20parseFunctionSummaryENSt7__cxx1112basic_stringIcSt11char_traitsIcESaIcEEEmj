<dec f='llvm/llvm/lib/AsmParser/LLParser.h' l='344' type='bool llvm::LLParser::parseFunctionSummary(std::string Name, GlobalValue::GUID , unsigned int ID)'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='8485' u='c' c='_ZN4llvm8LLParser12parseGVEntryEj'/>
<def f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='8513' ll='8584' type='bool llvm::LLParser::parseFunctionSummary(std::string Name, GlobalValue::GUID GUID, unsigned int ID)'/>
<doc f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='8508'>/// FunctionSummary
///   ::= &apos;function&apos; &apos;:&apos; &apos;(&apos; &apos;module&apos; &apos;:&apos; ModuleReference &apos;,&apos; GVFlags
///         &apos;,&apos; &apos;insts&apos; &apos;:&apos; UInt32 [&apos;,&apos; OptionalFFlags]? [&apos;,&apos; OptionalCalls]?
///         [&apos;,&apos; OptionalTypeIdInfo]? [&apos;,&apos; OptionalParamAccesses]?
///         [&apos;,&apos; OptionalRefs]? &apos;)&apos;</doc>
