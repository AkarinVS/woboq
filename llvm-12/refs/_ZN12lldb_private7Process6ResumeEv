<dec f='llvm/lldb/include/lldb/Target/Process.h' l='816' type='lldb_private::Status lldb_private::Process::Resume()'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='788'>//==================================================================
  // Built in Process Control functions
  //==================================================================
  /// Resumes all of a process&apos;s threads as configured using the Thread run
  /// control functions.
  ///
  /// Threads for a process should be updated with one of the run control
  /// actions (resume, step, or suspend) that they should take when the
  /// process is resumed. If no run control action is given to a thread it
  /// will be resumed by default.
  ///
  /// This function is not meant to be overridden by Process subclasses. This
  /// function will take care of disabling any breakpoints that threads may be
  /// stopped at, single stepping, and re-enabling breakpoints, and enabling
  /// the basic flow control that the plug-in instances need not worry about.
  ///
  /// N.B. This function also sets the Write side of the Run Lock, which is
  /// unset when the corresponding stop event is pulled off the Public Event
  /// Queue.  If you need to resume the process without setting the Run Lock,
  /// use PrivateResume (though you should only do that from inside the
  /// Process class.
  ///
  /// \return
  ///     Returns an error object.
  ///
  /// \see Thread:Resume()
  /// \see Thread:Step()
  /// \see Thread:Suspend()</doc>
<use f='llvm/lldb/source/API/SBProcess.cpp' l='615' u='c' c='_ZN4lldb9SBProcess8ContinueEv'/>
<use f='llvm/lldb/source/API/SBThread.cpp' l='511' u='c' c='_ZN4lldb8SBThread13ResumeNewPlanERN12lldb_private16ExecutionContextEPNS1_10ThreadPlanE'/>
<use f='llvm/lldb/source/Commands/CommandObjectProcess.cpp' l='568' u='c' c='_ZN28CommandObjectProcessContinue9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Commands/CommandObjectThread.cpp' l='568' u='c' c='_ZN39CommandObjectThreadStepWithTypeAndScope9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Commands/CommandObjectThread.cpp' l='754' u='c' c='_ZN27CommandObjectThreadContinue9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Commands/CommandObjectThread.cpp' l='1083' u='c' c='_ZN24CommandObjectThreadUntil9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Core/IOHandlerCursesGUI.cpp' l='3132' u='c' c='_ZN19ApplicationDelegate18MenuDelegateActionERN6curses4MenuE'/>
<use f='llvm/lldb/source/Core/IOHandlerCursesGUI.cpp' l='3960' u='c' c='_ZN24SourceFileWindowDelegate24WindowDelegateHandleCharERN6curses6WindowEi'/>
<use f='llvm/lldb/source/Core/IOHandlerCursesGUI.cpp' l='3976' u='c' c='_ZN24SourceFileWindowDelegate24WindowDelegateHandleCharERN6curses6WindowEi'/>
<use f='llvm/lldb/source/Core/IOHandlerCursesGUI.cpp' l='4000' u='c' c='_ZN24SourceFileWindowDelegate24WindowDelegateHandleCharERN6curses6WindowEi'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='2542' u='c' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote9DoDestroyEv'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='1279' ll='1294' type='lldb_private::Status lldb_private::Process::Resume()'/>
<use f='llvm/lldb/source/Target/Thread.cpp' l='1931' u='c' c='_ZN12lldb_private6Thread6StepInEbNS_8LazyBoolES1_'/>
<use f='llvm/lldb/source/Target/Thread.cpp' l='1964' u='c' c='_ZN12lldb_private6Thread8StepOverEbNS_8LazyBoolE'/>
<use f='llvm/lldb/source/Target/Thread.cpp' l='1988' u='c' c='_ZN12lldb_private6Thread7StepOutEv'/>
