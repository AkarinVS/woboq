<dec f='llvm/compiler-rt/lib/gwp_asan/optional/backtrace.h' l='44' type='options::Backtrace_t gwp_asan::backtrace::getBacktraceFunction()'/>
<def f='llvm/compiler-rt/lib/gwp_asan/optional/backtrace_linux_libc.cpp' l='62' type='options::Backtrace_t gwp_asan::backtrace::getBacktraceFunction()'/>
<doc f='llvm/compiler-rt/lib/gwp_asan/optional/backtrace.h' l='42'>// Returns platform-specific provided implementations of Backtrace_t for use
// inside the GWP-ASan core allocator.</doc>
<def f='llvm/compiler-rt/lib/gwp_asan/optional/backtrace_sanitizer_common.cpp' l='88' ll='93' type='options::Backtrace_t gwp_asan::backtrace::getBacktraceFunction()'/>
<doc f='llvm/compiler-rt/lib/gwp_asan/optional/backtrace_sanitizer_common.cpp' l='82'>// This function is thread-compatible. It must be synchronised in respect to any
// other calls to getBacktraceFunction(), calls to getPrintBacktraceFunction(),
// and calls to either of the functions that they return. Furthermore, this may
// require synchronisation with any calls to sanitizer_common that use flags.
// Generally, this function will be called during the initialisation of the
// allocator, which is done in a thread-compatible manner.</doc>
<use f='llvm/compiler-rt/lib/scudo/scudo_allocator.cpp' l='678' u='c' c='__scudo::initScudo'/>
