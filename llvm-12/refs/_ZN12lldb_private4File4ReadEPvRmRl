<dec f='llvm/lldb/include/lldb/Host/File.h' l='236' type='lldb_private::Status lldb_private::File::Read(void * dst, size_t &amp; num_bytes, off_t &amp; offset)'/>
<doc f='llvm/lldb/include/lldb/Host/File.h' l='215'>/// Read bytes from a file from the specified file offset.
  ///
  /// NOTE: This function is thread safe in that clients manager their
  /// own file position markers and reads on other threads won&apos;t mess up the
  /// current read.
  ///
  /// \param[in] dst
  ///     A buffer where to put the bytes that are read.
  ///
  /// \param[in,out] num_bytes
  ///     The number of bytes to read form the current file position
  ///     which gets modified with the number of bytes that were read.
  ///
  /// \param[in,out] offset
  ///     The offset within the file from which to read \a num_bytes
  ///     bytes. This offset gets incremented by the number of bytes
  ///     that were read.
  ///
  /// \return
  ///     An error object that indicates success or the reason for
  ///     failure.</doc>
<def f='llvm/lldb/source/Host/common/File.cpp' l='142' ll='144' type='lldb_private::Status lldb_private::File::Read(void * dst, size_t &amp; num_bytes, off_t &amp; offset)'/>
<ovr f='llvm/lldb/source/Host/common/File.cpp' l='601' c='_ZN12lldb_private10NativeFile4ReadEPvRmRl'/>
