<dec f='llvm/polly/lib/External/isl/isl_tarjan.h' l='36' type='struct isl_tarjan_graph * isl_tarjan_graph_init(isl_ctx * ctx, int len, isl_bool (*)(int, int, void *) follows, void * user)'/>
<use f='llvm/polly/lib/External/isl/isl_list_templ.c' l='561' u='c' c='isl_aff_list_foreach_scc'/>
<use f='llvm/polly/lib/External/isl/isl_list_templ.c' l='561' u='c' c='isl_pw_aff_list_foreach_scc'/>
<use f='llvm/polly/lib/External/isl/isl_list_templ.c' l='561' u='c' c='isl_pw_multi_aff_list_foreach_scc'/>
<use f='llvm/polly/lib/External/isl/isl_list_templ.c' l='561' u='c' c='isl_union_pw_aff_list_foreach_scc'/>
<use f='llvm/polly/lib/External/isl/isl_list_templ.c' l='561' u='c' c='isl_union_pw_multi_aff_list_foreach_scc'/>
<use f='llvm/polly/lib/External/isl/isl_ast_codegen.c' l='4778' u='c' c='generate_components'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1662' u='c' c='detect_ccs'/>
<def f='llvm/polly/lib/External/isl/isl_tarjan.c' l='119' ll='136' type='struct isl_tarjan_graph * isl_tarjan_graph_init(isl_ctx * ctx, int len, isl_bool (*)(int, int, void *) follows, void * user)'/>
<doc f='llvm/polly/lib/External/isl/isl_tarjan.c' l='110'>/* Decompose the graph with &quot;len&quot; nodes and edges defined by &quot;follows&quot;
 * into strongly connected components (SCCs).
 * follows(i, j, user) should return 1 if &quot;i&quot; follows &quot;j&quot; and 0 otherwise.
 * It should return -1 on error.
 *
 * If SCC a contains a node i that follows a node j in another SCC b
 * (i.e., follows(i, j, user) returns 1), then SCC a will appear after SCC b
 * in the result.
 */</doc>
<use f='llvm/polly/lib/External/isl/isl_transitive_closure.c' l='1897' u='c' c='construct_power_components'/>
<use f='llvm/polly/lib/External/isl/isl_transitive_closure.c' l='2789' u='c' c='union_components'/>
