<dec f='llvm/clang/lib/Format/UnwrappedLineFormatter.h' l='48' type='void clang::format::UnwrappedLineFormatter::formatFirstToken(const clang::format::AnnotatedLine &amp; Line, const clang::format::AnnotatedLine * PreviousLine, const SmallVectorImpl&lt;clang::format::AnnotatedLine *&gt; &amp; Lines, unsigned int Indent, unsigned int NewlineIndent)'/>
<doc f='llvm/clang/lib/Format/UnwrappedLineFormatter.h' l='46'>/// Add a new line and the required indent before the first Token
  /// of the \c UnwrappedLine if there was no structural parsing error.</doc>
<use f='llvm/clang/lib/Format/UnwrappedLineFormatter.cpp' l='1144' u='c' c='_ZN5clang6format22UnwrappedLineFormatter6formatERKN4llvm15SmallVectorImplIPNS0_13AnnotatedLineEEEbibjjj'/>
<use f='llvm/clang/lib/Format/UnwrappedLineFormatter.cpp' l='1190' u='c' c='_ZN5clang6format22UnwrappedLineFormatter6formatERKN4llvm15SmallVectorImplIPNS0_13AnnotatedLineEEEbibjjj'/>
<def f='llvm/clang/lib/Format/UnwrappedLineFormatter.cpp' l='1212' ll='1301' type='void clang::format::UnwrappedLineFormatter::formatFirstToken(const clang::format::AnnotatedLine &amp; Line, const clang::format::AnnotatedLine * PreviousLine, const SmallVectorImpl&lt;clang::format::AnnotatedLine *&gt; &amp; Lines, unsigned int Indent, unsigned int NewlineIndent)'/>
