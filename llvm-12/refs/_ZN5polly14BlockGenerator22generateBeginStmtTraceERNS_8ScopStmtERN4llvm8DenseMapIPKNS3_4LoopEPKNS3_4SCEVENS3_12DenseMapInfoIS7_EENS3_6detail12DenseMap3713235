<dec f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='335' type='void polly::BlockGenerator::generateBeginStmtTrace(polly::ScopStmt &amp; Stmt, llvm::LoopToScevMapT &amp; LTS, polly::ValueMapT &amp; BBMap)'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='441' u='c' c='_ZN5polly14BlockGenerator6copyBBERNS_8ScopStmtEPN4llvm10BasicBlockERNS3_8DenseMapINS3_11AssertingVHINS3_5ValueEEES9_NS3_12DenseMapInfoIS9_EENS3_6detai13152743'/>
<def f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='661' ll='754' type='void polly::BlockGenerator::generateBeginStmtTrace(polly::ScopStmt &amp; Stmt, llvm::LoopToScevMapT &amp; LTS, polly::ValueMapT &amp; BBMap)'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1484' u='c' c='_ZN5polly15RegionGenerator8copyStmtERNS_8ScopStmtERN4llvm8DenseMapIPKNS3_4LoopEPKNS3_4SCEVENS3_12DenseMapInfoIS7_EENS3_6detail12DenseMapPairIS7_SA_EEE11681919'/>
<doc f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='319'>/// When statement tracing is enabled, build the print instructions for
  /// printing the current statement instance.
  ///
  /// The printed output looks like:
  ///
  ///     Stmt1(0)
  ///
  /// If printing of scalars is enabled, it also appends the value of each
  /// scalar to the line:
  ///
  ///     Stmt1(0) %i=1 %sum=5
  ///
  /// @param Stmt  The statement we generate code for.
  /// @param LTS   A mapping from loops virtual canonical induction
  ///              variable to their new values.
  /// @param BBMap A mapping from old values to their new values in this block.</doc>
