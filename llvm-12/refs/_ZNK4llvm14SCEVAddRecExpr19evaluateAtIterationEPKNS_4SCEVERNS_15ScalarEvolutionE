<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h' l='402' type='const llvm::SCEV * llvm::SCEVAddRecExpr::evaluateAtIteration(const llvm::SCEV * It, llvm::ScalarEvolution &amp; SE) const'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h' l='904' u='c' c='_ZN4llvm22SCEVLoopAddRecRewriter15visitAddRecExprEPKNS_14SCEVAddRecExprE'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h' l='400'>/// Return the value of this chain of recurrences at the specified
    /// iteration number.</doc>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1030' u='c' c='_ZNK4llvm14DependenceInfo15isKnownLessThanEPKNS_4SCEVES3_'/>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='210' u='c' c='_ZN4llvm22RuntimePointerChecking6insertEPNS_4LoopEPNS_5ValueEbjjRKNS_8DenseMapIPKS3_S4_NS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S4_EEEERNS_211645919'/>
<use f='llvm/llvm/lib/Analysis/LoopUnrollAnalyzer.cpp' l='42' u='c' c='_ZN4llvm20UnrolledInstAnalyzer20simplifyInstWithSCEVEPNS_11InstructionE'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='1017' ll='1031' type='const llvm::SCEV * llvm::SCEVAddRecExpr::evaluateAtIteration(const llvm::SCEV * It, llvm::ScalarEvolution &amp; SE) const'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6025' u='c' c='_ZN4llvm15ScalarEvolution33getRangeForAffineNoSelfWrappingAREPKNS_14SCEVAddRecExprEPKNS_4SCEVEjNS0_13RangeSignHintE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7793' u='c' c='_ZL31EvaluateConstantChrecAtConstantPKN4llvm14SCEVAddRecExprEPNS_11ConstantIntERNS_15ScalarEvolutionE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='8667' u='c' c='_ZN4llvm15ScalarEvolution18computeSCEVAtScopeEPKNS_4SCEVEPKNS_4LoopE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9695' u='c' c='_ZN4llvm15ScalarEvolution45getLoopInvariantExitCondDuringFirstIterationsENS_7CmpInst9PredicateEPKNS_4SCEVES5_PKNS_4LoopEPKNS_11InstructionES5_'/>
<doc f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='1009'>/// Return the value of this chain of recurrences at the specified iteration
/// number.  We can evaluate this recurrence by multiplying each element in the
/// chain by the binomial coefficient corresponding to it.  In other words, we
/// can evaluate {A,+,B,+,C,+,D} as:
///
///   A*BC(It, 0) + B*BC(It, 1) + C*BC(It, 2) + D*BC(It, 3)
///
/// where BC(It, k) stands for binomial coefficient.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/LoopPeel.cpp' l='243' u='c' c='_ZL24countToEliminateComparesRN4llvm4LoopEjRNS_15ScalarEvolutionE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUtils.cpp' l='1374' u='c' c='_ZN4llvm21rewriteLoopExitValuesEPNS_4LoopEPNS_8LoopInfoEPNS_17TargetLibraryInfoEPNS_15ScalarEvolutionEPKNS_19TargetTransformInfoERNS_12SCEVExpanderEPN10378857'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1669' u='c' c='_ZN4llvm12SCEVExpander15visitAddRecExprEPKNS_14SCEVAddRecExprE'/>
