<dec f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='212' type='bool llvm::IRSimilarity::isClose(const llvm::IRSimilarity::IRInstructionData &amp; A, const llvm::IRSimilarity::IRInstructionData &amp; B)'/>
<use f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='233' u='c' c='_ZN4llvm12IRSimilarity23IRInstructionDataTraits7isEqualEPKNS0_17IRInstructionDataES4_'/>
<def f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='84' ll='147' type='bool llvm::IRSimilarity::isClose(const llvm::IRSimilarity::IRInstructionData &amp; A, const llvm::IRSimilarity::IRInstructionData &amp; B)'/>
<use f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='348' u='c' c='_ZN4llvm12IRSimilarity21IRSimilarityCandidate9isSimilarERKS1_S3_'/>
<use f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='592' u='c' c='_ZN4llvm12IRSimilarity21IRSimilarityCandidate16compareStructureERKS1_S3_'/>
<doc f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='203'>/// Compare one IRInstructionData class to another IRInstructionData class for
/// whether they are performing a the same operation, and can mapped to the
/// same value. For regular instructions if the hash value is the same, then
/// they will also be close.
///
/// \param A - The first IRInstructionData class to compare
/// \param B - The second IRInstructionData class to compare
/// \returns true if \p A and \p B are similar enough to be mapped to the same
/// value.</doc>
