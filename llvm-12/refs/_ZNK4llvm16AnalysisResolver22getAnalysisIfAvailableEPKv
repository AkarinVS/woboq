<dec f='llvm/llvm/include/llvm/PassAnalysisSupport.h' l='192' type='llvm::Pass * llvm::AnalysisResolver::getAnalysisIfAvailable(llvm::AnalysisID ID) const'/>
<use f='llvm/llvm/include/llvm/PassAnalysisSupport.h' l='216' u='c' c='_ZNK4llvm4Pass22getAnalysisIfAvailableEv'/>
<doc f='llvm/llvm/include/llvm/PassAnalysisSupport.h' l='191'>/// Return analysis result or null if it doesn&apos;t exist.</doc>
<def f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1311' ll='1313' type='llvm::Pass * llvm::AnalysisResolver::getAnalysisIfAvailable(llvm::AnalysisID ID) const'/>
<doc f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1308'>//===----------------------------------------------------------------------===//
// NOTE: Is this the right place to define this method ?
// getAnalysisIfAvailable - Return analysis result or null if it doesn&apos;t exist.</doc>
<use f='llvm/llvm/lib/IR/Pass.cpp' l='65' u='c' c='_ZNK4llvm4Pass22mustPreserveAnalysisIDERc'/>
