<dec f='llvm/llvm/include/llvm/DebugInfo/GSYM/LineTable.h' l='154' type='static llvm::Expected&lt;LineTable&gt; llvm::gsym::LineTable::decode(llvm::DataExtractor &amp; Data, uint64_t BaseAddr)'/>
<doc f='llvm/llvm/include/llvm/DebugInfo/GSYM/LineTable.h' l='142'>/// Decode an LineTable object from a binary data stream.
  ///
  /// \param Data The binary stream to read the data from. This object must
  /// have the data for the LineTable object starting at offset zero. The data
  /// can contain more data than needed.
  ///
  /// \param BaseAddr The base address to use when decoding the line table.
  /// This will be the FunctionInfo&apos;s start address and will be used to
  /// initialize the line table row prior to parsing any opcodes.
  ///
  /// \returns An LineTable or an error describing the issue that was
  /// encountered during decoding.</doc>
<use f='llvm/llvm/lib/DebugInfo/GSYM/FunctionInfo.cpp' l='76' u='c' c='_ZN4llvm4gsym12FunctionInfo6decodeERNS_13DataExtractorEm'/>
<def f='llvm/llvm/lib/DebugInfo/GSYM/LineTable.cpp' l='251' ll='261' type='static llvm::Expected&lt;LineTable&gt; llvm::gsym::LineTable::decode(llvm::DataExtractor &amp; Data, uint64_t BaseAddr)'/>
<doc f='llvm/llvm/lib/DebugInfo/GSYM/LineTable.cpp' l='248'>// Parse all line table entries into the &quot;LineTable&quot; vector. We can
// cache the results of this if needed, or we can call LineTable::lookup()
// below.</doc>
<use f='llvm/llvm/unittests/DebugInfo/GSYM/GSYMTest.cpp' l='813' u='c' c='_ZL19TestLineTableHelperN4llvm7support10endiannessERKNS_4gsym9LineTableE'/>
<use f='llvm/llvm/unittests/DebugInfo/GSYM/GSYMTest.cpp' l='883' u='c' c='_ZL24TestLineTableDecodeErrorN4llvm7support10endiannessENS_9StringRefEmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
