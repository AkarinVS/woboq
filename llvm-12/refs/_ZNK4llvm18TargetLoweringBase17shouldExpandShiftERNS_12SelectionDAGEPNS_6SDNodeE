<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='878' ll='880' type='bool llvm::TargetLoweringBase::shouldExpandShift(llvm::SelectionDAG &amp; DAG, llvm::SDNode * N) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='875'>/// Return true if SHIFT instructions should be expanded to SHIFT_PARTS
  /// instructions, and false if a library call is preferred (e.g for code-size
  /// reasons).</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='3730' u='c' c='_ZN4llvm16DAGTypeLegalizer18ExpandIntRes_ShiftEPNS_6SDNodeERNS_7SDValueES4_'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='16574' c='_ZNK4llvm21AArch64TargetLowering17shouldExpandShiftERNS_12SelectionDAGEPNS_6SDNodeE'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='18759' c='_ZNK4llvm17ARMTargetLowering17shouldExpandShiftERNS_12SelectionDAGEPNS_6SDNodeE'/>
<ovr f='llvm/llvm/lib/Target/RISCV/RISCVISelLowering.h' l='212' c='_ZNK4llvm19RISCVTargetLowering17shouldExpandShiftERNS_12SelectionDAGEPNS_6SDNodeE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='5474' c='_ZNK4llvm17X86TargetLowering17shouldExpandShiftERNS_12SelectionDAGEPNS_6SDNodeE'/>
