<dec f='llvm/clang/lib/StaticAnalyzer/Checkers/WebKit/PtrTypesSemantics.h' l='32' type='llvm::Optional&lt;const clang::CXXRecordDecl *&gt; clang::isRefCountable(const clang::CXXBaseSpecifier * Base)'/>
<doc f='llvm/clang/lib/StaticAnalyzer/Checkers/WebKit/PtrTypesSemantics.h' l='22'>// Ref-countability of a type is implicitly defined by Ref&lt;T&gt; and RefPtr&lt;T&gt;
// implementation. It can be modeled as: type T having public methods ref() and
// deref()

// In WebKit there are two ref-counted templated smart pointers: RefPtr&lt;T&gt; and
// Ref&lt;T&gt;.

/// \returns CXXRecordDecl of the base if the type is ref-countable, nullptr if
/// not, None if inconclusive.</doc>
<def f='llvm/clang/lib/StaticAnalyzer/Checkers/WebKit/PtrTypesSemantics.cpp' l='48' ll='63' type='llvm::Optional&lt;const clang::CXXRecordDecl *&gt; clang::isRefCountable(const clang::CXXBaseSpecifier * Base)'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/WebKit/PtrTypesSemantics.cpp' l='82' u='c' c='_ZN5clang14isRefCountableEPKNS_13CXXRecordDeclE'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/WebKit/RefCntblBaseVirtualDtorChecker.cpp' l='80' u='c' c='_ZNK12_GLOBAL__N_130RefCntblBaseVirtualDtorChecker18visitCXXRecordDeclEPKN5clang13CXXRecordDeclE'/>
