<dec f='llvm/llvm/include/llvm/CodeGen/CalcSpillWeights.h' l='92' type='float llvm::VirtRegAuxInfo::weightCalcHelper(llvm::LiveInterval &amp; LI, llvm::SlotIndex * Start = nullptr, llvm::SlotIndex * End = nullptr)'/>
<use f='llvm/llvm/lib/CodeGen/CalcSpillWeights.cpp' l='129' u='c' c='_ZN4llvm14VirtRegAuxInfo27calculateSpillWeightAndHintERNS_12LiveIntervalE'/>
<use f='llvm/llvm/lib/CodeGen/CalcSpillWeights.cpp' l='138' u='c' c='_ZN4llvm14VirtRegAuxInfo12futureWeightERNS_12LiveIntervalENS_9SlotIndexES3_'/>
<def f='llvm/llvm/lib/CodeGen/CalcSpillWeights.cpp' l='141' ll='310' type='float llvm::VirtRegAuxInfo::weightCalcHelper(llvm::LiveInterval &amp; LI, llvm::SlotIndex * Start = nullptr, llvm::SlotIndex * End = nullptr)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/CalcSpillWeights.h' l='80'>/// Helper function for weight calculations.
    /// (Re)compute LI&apos;s spill weight and allocation hint, or, for non null
    /// start and end - compute future expected spill weight of a split
    /// artifact of LI that will span between start and end slot indexes.
    /// \param LI     The live interval for which to compute the weight.
    /// \param Start  The expected beginning of the split artifact. Instructions
    ///               before start will not affect the weight. Relevant for
    ///               weight calculation of future split artifact.
    /// \param End    The expected end of the split artifact. Instructions
    ///               after end will not affect the weight. Relevant for
    ///               weight calculation of future split artifact.
    /// \return The spill weight. Returns negative weight for unspillable LI.</doc>
