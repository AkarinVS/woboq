<dec f='llvm/llvm/include/llvm/Transforms/Utils/Cloning.h' l='274' type='void llvm::identifyNoAliasScopesToClone(ArrayRef&lt;llvm::BasicBlock *&gt; BBs, SmallVectorImpl&lt;llvm::MDNode *&gt; &amp; NoAliasDeclScopes)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Cloning.h' l='271'>/// Find the &apos;llvm.experimental.noalias.scope.decl&apos; intrinsics in the specified
/// basic blocks and extract their scope. These are candidates for duplication
/// when cloning.</doc>
<def f='llvm/llvm/lib/Transforms/Utils/CloneFunction.cpp' l='985' ll='991' type='void llvm::identifyNoAliasScopesToClone(ArrayRef&lt;llvm::BasicBlock *&gt; BBs, SmallVectorImpl&lt;llvm::MDNode *&gt; &amp; NoAliasDeclScopes)'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopPeel.cpp' l='784' u='c' c='_ZN4llvm8peelLoopEPNS_4LoopEjPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheEb'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnroll.cpp' l='596' u='c' c='_ZN4llvm10UnrollLoopEPNS_4LoopENS_17UnrollLoopOptionsEPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheEPKNS_19TargetTrans5476875'/>
