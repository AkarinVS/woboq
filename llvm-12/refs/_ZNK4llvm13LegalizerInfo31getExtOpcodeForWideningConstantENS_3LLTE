<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='1289' type='unsigned int llvm::LegalizerInfo::getExtOpcodeForWideningConstant(llvm::LLT SmallTy) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='1285'>/// Return the opcode (SEXT/ZEXT/ANYEXT) that should be performed while
  /// widening a constant of type SmallTy which targets can override.
  /// For eg, the DAG does (SmallTy.isByteSized() ? G_SEXT : G_ZEXT) which
  /// will be the default.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='2100' u='c' c='_ZN4llvm15LegalizerHelper11widenScalarERNS_12MachineInstrEjNS_3LLTE'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerInfo.cpp' l='686' ll='688' type='unsigned int llvm::LegalizerInfo::getExtOpcodeForWideningConstant(llvm::LLT SmallTy) const'/>
