<dec f='llvm/clang/include/clang/AST/Expr.h' l='556' type='static bool clang::Expr::isPotentialConstantExpr(const clang::FunctionDecl * FD, SmallVectorImpl&lt;clang::PartialDiagnosticAt&gt; &amp; Diags)'/>
<doc f='llvm/clang/include/clang/AST/Expr.h' l='552'>/// isPotentialConstantExpr - Return true if this function&apos;s definition
  /// might be usable in a constant expression in C++11, if it were marked
  /// constexpr. Return false if the function can never produce a constant
  /// expression, along with diagnostics describing why not.</doc>
<def f='llvm/clang/lib/AST/ExprConstant.cpp' l='15633' ll='15679' type='static bool clang::Expr::isPotentialConstantExpr(const clang::FunctionDecl * FD, SmallVectorImpl&lt;clang::PartialDiagnosticAt&gt; &amp; Diags)'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='2342' u='c' c='_ZL26CheckConstexprFunctionBodyRN5clang4SemaEPKNS_12FunctionDeclEPNS_4StmtENS0_18CheckConstexprKindE'/>
