<dec f='llvm/clang/include/clang/AST/ASTContext.h' l='1558' type='clang::QualType clang::ASTContext::getDecltypeType(clang::Expr * e, clang::QualType UnderlyingType) const'/>
<doc f='llvm/clang/include/clang/AST/ASTContext.h' l='1557'>/// C++11 decltype.</doc>
<def f='llvm/clang/lib/AST/ASTContext.cpp' l='5383' ll='5410' type='clang::QualType clang::ASTContext::getDecltypeType(clang::Expr * e, clang::QualType UnderlyingType) const'/>
<doc f='llvm/clang/lib/AST/ASTContext.cpp' l='5379'>/// Unlike many &quot;get&lt;Type&gt;&quot; functions, we don&apos;t unique DecltypeType
/// nodes. This would never be helpful, since each such type has its own
/// expression, and would not give a significant memory saving, since there
/// is an Expr tree under each such type.</doc>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='1333' u='c' c='_ZN5clang15ASTNodeImporter17VisitDecltypeTypeEPKNS_12DecltypeTypeE'/>
<use f='llvm/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp' l='886' u='c' c='_ZN12_GLOBAL__N_117RewriteModernObjC19getIvarAccessStringB5cxx11EPN5clang12ObjCIvarDeclE'/>
<use f='llvm/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp' l='7541' u='c' c='_ZN12_GLOBAL__N_117RewriteModernObjC22RewriteObjCIvarRefExprEPN5clang15ObjCIvarRefExprE'/>
<use f='llvm/clang/lib/Sema/SemaType.cpp' l='8921' u='c' c='_ZN5clang4Sema17BuildDecltypeTypeEPNS_4ExprENS_14SourceLocationEb'/>
<use f='llvm/lldb/unittests/Symbol/TestTypeSystemClang.cpp' l='533' u='c' c='_ZN49TestTypeSystemClang_TestGetTypeClassDeclType_Test8TestBodyEv'/>
