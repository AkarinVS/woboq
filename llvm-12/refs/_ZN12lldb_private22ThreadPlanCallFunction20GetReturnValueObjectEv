<inh f='llvm/lldb/include/lldb/Target/ThreadPlan.h' l='465' c='_ZN12lldb_private10ThreadPlan20GetReturnValueObjectEv'/>
<def f='llvm/lldb/include/lldb/Target/ThreadPlanCallFunction.h' l='62' ll='64' type='lldb::ValueObjectSP lldb_private::ThreadPlanCallFunction::GetReturnValueObject()'/>
<doc f='llvm/lldb/include/lldb/Target/ThreadPlanCallFunction.h' l='53'>// To get the return value from a function call you must create a
  // lldb::ValueSP that contains a valid clang type in its context and call
  // RequestReturnValue. The ValueSP will be stored and when the function is
  // done executing, the object will check if there is a requested return
  // value. If there is, the return value will be retrieved using the
  // ABI::GetReturnValue() for the ABI in the process. Then after the thread
  // plan is complete, you can call &quot;GetReturnValue()&quot; to retrieve the value
  // that was extracted.</doc>
