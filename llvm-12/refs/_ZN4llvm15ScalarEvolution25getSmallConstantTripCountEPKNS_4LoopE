<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='713' type='unsigned int llvm::ScalarEvolution::getSmallConstantTripCount(const llvm::Loop * L)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='708'>/// Returns the maximum trip count of the loop if it is a single-exit
  /// loop and we can compute a small maximum for that loop.
  ///
  /// Implemented in terms of the \c getSmallConstantTripCount overload with
  /// the single exiting block passed to it. See that routine for details.</doc>
<use f='llvm/llvm/lib/Analysis/LoopCacheAnalysis.cpp' l='491' u='c' c='_ZN4llvm9CacheCostC1ERKNS_11SmallVectorIPNS_4LoopELj8EEERKNS_8LoopInfoERNS_15ScalarEvolutionERNS_19TargetTransformInfoERNS_9AAResultsERNS_14Dependence388712'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6815' ll='6821' type='unsigned int llvm::ScalarEvolution::getSmallConstantTripCount(const llvm::Loop * L)'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonTargetTransformInfo.cpp' l='76' u='c' c='_ZN4llvm14HexagonTTIImpl21getPeelingPreferencesEPNS_4LoopERNS_15ScalarEvolutionERNS_19TargetTransformInfo18PeelingPreferencesE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCTargetTransformInfo.cpp' l='719' u='c' c='_ZN4llvm10PPCTTIImpl24isHardwareLoopProfitableEPNS_4LoopERNS_15ScalarEvolutionERNS_15AssumptionCacheEPNS_17TargetLibraryInfoERNS_16HardwareLoopInfoE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopFuse.cpp' l='730' u='c' c='_ZNK12_GLOBAL__N_19LoopFuser23haveIdenticalTripCountsERKNS_15FusionCandidateES3_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopFuse.cpp' l='731' u='c' c='_ZNK12_GLOBAL__N_19LoopFuser23haveIdenticalTripCountsERKNS_15FusionCandidateES3_'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='419' u='c' c='_ZL19getSmallBestKnownTCRN4llvm15ScalarEvolutionEPNS_4LoopE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5490' u='c' c='_ZN4llvm26LoopVectorizationCostModel12computeMaxVFENS_12ElementCountEj'/>
