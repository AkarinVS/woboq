<use f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='833' u='c' c='_ZN4llvm13IRBuilderBase18CreateMaskedGatherEPNS_5ValueEjS2_S2_RKNS_5TwineE'/>
<dec f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='837' type='llvm::CallInst * llvm::IRBuilderBase::CreateMaskedGather(llvm::Value * Ptrs, llvm::Align Alignment, llvm::Value * Mask = nullptr, llvm::Value * PassThru = nullptr, const llvm::Twine &amp; Name = &quot;&quot;)'/>
<doc f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='836'>/// Create a call to Masked Gather intrinsic</doc>
<def f='llvm/llvm/lib/IR/IRBuilder.cpp' l='522' ll='544' type='llvm::CallInst * llvm::IRBuilderBase::CreateMaskedGather(llvm::Value * Ptrs, llvm::Align Alignment, llvm::Value * Mask = nullptr, llvm::Value * PassThru = nullptr, const llvm::Twine &amp; Name = &quot;&quot;)'/>
<doc f='llvm/llvm/lib/IR/IRBuilder.cpp' l='514'>/// Create a call to a Masked Gather intrinsic.
/// \p Ptrs     - vector of pointers for loading
/// \p Align    - alignment for one element
/// \p Mask     - vector of booleans which indicates what vector lanes should
///               be accessed in memory
/// \p PassThru - pass-through value that is used to fill the masked-off lanes
///               of the result
/// \p Name     - name of the result variable</doc>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2846' u='c' c='_ZN4llvm19InnerLoopVectorizer26vectorizeMemoryInstructionEPNS_11InstructionERNS_16VPTransformStateEPNS_7VPValueES6_S6_S6_'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='4617' u='c' c='_ZN4llvm13slpvectorizer7BoUpSLP13vectorizeTreeEPNS1_9TreeEntryE'/>
