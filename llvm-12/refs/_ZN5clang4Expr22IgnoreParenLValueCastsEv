<dec f='llvm/clang/include/clang/AST/Expr.h' l='901' type='clang::Expr * clang::Expr::IgnoreParenLValueCasts()'/>
<use f='llvm/clang/include/clang/AST/Expr.h' l='903' u='c' c='_ZNK5clang4Expr22IgnoreParenLValueCastsEv'/>
<doc f='llvm/clang/include/clang/AST/Expr.h' l='893'>/// Skip past any parentheses and lvalue casts which might surround this
  /// expression until reaching a fixed point. Skips:
  /// * What IgnoreParens() skips
  /// * What IgnoreCasts() skips, except that only lvalue-to-rvalue
  ///   casts are skipped
  /// FIXME: This is intended purely as a temporary workaround for code
  /// that hasn&apos;t yet been rewritten to do the right thing about those
  /// casts, and may disappear along with the last internal use.</doc>
<use f='llvm/clang/lib/ARCMigrate/TransUnbridgedCasts.cpp' l='451' u='c' c='_ZNK12_GLOBAL__N_121UnbridgedCastRewriter6isSelfEPN5clang4ExprE'/>
<def f='llvm/clang/lib/AST/Expr.cpp' l='2792' ll='2795' type='clang::Expr * clang::Expr::IgnoreParenLValueCasts()'/>
<use f='llvm/clang/lib/Sema/SemaExprObjC.cpp' l='1927' u='c' c='_ZN5clang4Sema10isSelfExprEPNS_4ExprEPKNS_14ObjCMethodDeclE'/>
<use f='llvm/clang/lib/Sema/SemaOpenMP.cpp' l='17728' u='c' c='_ZL27checkMappableExpressionListRN5clang4SemaEPN12_GLOBAL__N_110DSAStackTyEN4llvm3omp6ClauseERNS2_19MappableVarListInfoENS_14SourceLocationERNS_12CXXS13148141'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp' l='294' u='c' c='_ZN12_GLOBAL__N_17WalkAST26checkLoopConditionForFloatEPKN5clang7ForStmtE'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp' l='296' u='c' c='_ZN12_GLOBAL__N_17WalkAST26checkLoopConditionForFloatEPKN5clang7ForStmtE'/>
