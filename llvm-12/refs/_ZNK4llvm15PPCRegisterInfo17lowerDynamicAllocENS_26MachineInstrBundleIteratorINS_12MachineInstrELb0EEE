<dec f='llvm/llvm/lib/Target/PowerPC/PPCRegisterInfo.h' l='108' type='void llvm::PPCRegisterInfo::lowerDynamicAlloc(MachineBasicBlock::iterator II) const'/>
<def f='llvm/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp' l='486' ll='538' type='void llvm::PPCRegisterInfo::lowerDynamicAlloc(MachineBasicBlock::iterator II) const'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp' l='1171' u='c' c='_ZNK4llvm15PPCRegisterInfo19eliminateFrameIndexENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEEijPNS_12RegScavengerE'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp' l='475'>//===----------------------------------------------------------------------===//
// Stack Frame Processing methods
//===----------------------------------------------------------------------===//

/// lowerDynamicAlloc - Generate the code for allocating an object in the
/// current frame.  The sequence of code will be in the general form
///
///   addi   R0, SP, \#frameSize ; get the address of the previous frame
///   stwxu  R0, SP, Rnegsize   ; add and update the SP with the negated size
///   addi   Rnew, SP, \#maxCalFrameSize ; get the top of the allocation
///</doc>
