<dec f='llvm/clang/include/clang/Sema/Sema.h' l='4195' type='void clang::Sema::diagnoseTypo(const clang::TypoCorrection &amp; Correction, const clang::PartialDiagnostic &amp; TypoDiag, const clang::PartialDiagnostic &amp; PrevNote, bool ErrorRecovery = true)'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='4265' u='c' c='_ZN5clang4Sema19BuildMemInitializerEPNS_4DeclEPNS_5ScopeERNS_12CXXScopeSpecEPNS_14IdentifierInfoENS_9OpaquePtrINS_8QualTypeEEERKNS_8DeclSpecENS_14Sour9377157'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='11367' u='c' c='_ZL26TryNamespaceTypoCorrectionRN5clang4SemaERNS_12LookupResultEPNS_5ScopeERNS_12CXXScopeSpecENS_14SourceLocationEPNS_14IdentifierInfoE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='11372' u='c' c='_ZL26TryNamespaceTypoCorrectionRN5clang4SemaERNS_12LookupResultEPNS_5ScopeERNS_12CXXScopeSpecENS_14SourceLocationEPNS_14IdentifierInfoE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2128' u='c' c='_ZL29emitEmptyLookupTypoDiagnosticRKN5clang14TypoCorrectionERNS_4SemaERKNS_12CXXScopeSpecENS_15DeclarationNameENS_14SourceLocationEN4llvm8ArrayRefIPNS_4ExprEEEjj'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2131' u='c' c='_ZL29emitEmptyLookupTypoDiagnosticRKN5clang14TypoCorrectionERNS_4SemaERKNS_12CXXScopeSpecENS_15DeclarationNameENS_14SourceLocationEN4llvm8ArrayRefIPNS_4ExprEEEjj'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2345' u='c' c='_ZN5clang4Sema19DiagnoseEmptyLookupEPNS_5ScopeERNS_12CXXScopeSpecERNS_12LookupResultERNS_27CorrectionCandidateCallbackEPNS_24TemplateArgumentListInfoE5867693'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2348' u='c' c='_ZN5clang4Sema19DiagnoseEmptyLookupEPNS_5ScopeERNS_12CXXScopeSpecERNS_12LookupResultERNS_27CorrectionCandidateCallbackEPNS_24TemplateArgumentListInfoE5867693'/>
<use f='llvm/clang/lib/Sema/SemaLookup.cpp' l='5263' u='c' c='_ZN5clang4Sema12diagnoseTypoERKNS_14TypoCorrectionERKNS_17PartialDiagnosticEb'/>
<def f='llvm/clang/lib/Sema/SemaLookup.cpp' l='5406' ll='5437' type='void clang::Sema::diagnoseTypo(const clang::TypoCorrection &amp; Correction, const clang::PartialDiagnostic &amp; TypoDiag, const clang::PartialDiagnostic &amp; PrevNote, bool ErrorRecovery = true)'/>
<doc f='llvm/clang/lib/Sema/SemaLookup.cpp' l='5394'>/// Diagnose a successfully-corrected typo. Separated from the correction
/// itself to allow external validation of the result, etc.
///
/// \param Correction The result of performing typo correction.
/// \param TypoDiag The diagnostic to produce. This will have the corrected
///        string added to it (and usually also a fixit).
/// \param PrevNote A note to use when indicating the location of the entity to
///        which we are correcting. Will have the correction string added to it.
/// \param ErrorRecovery If \c true (the default), the caller is going to
///        recover from the typo as if the corrected string had been typed.
///        In this case, \c PDiag must be an error, and we will attach a fixit
///        to it.</doc>
<use f='llvm/clang/lib/Sema/SemaTemplateVariadic.cpp' l='1026' u='c' c='_ZN5clang4Sema28ActOnSizeofParameterPackExprEPNS_5ScopeENS_14SourceLocationERNS_14IdentifierInfoES3_S3_'/>
