<dec f='llvm/polly/include/polly/Support/SCEVValidator.h' l='38' type='bool polly::hasIVParams(const llvm::SCEV * Expr)'/>
<doc f='llvm/polly/include/polly/Support/SCEVValidator.h' l='30'>/// Check if some parameters in the affine expression might hide induction
/// variables. If this is the case, we will try to delinearize the accesses
/// taking into account this information to possibly obtain a memory access
/// with more structure. Currently we assume that each parameter that
/// comes from a function call might depend on a (virtual) induction variable.
/// This covers calls to &apos;get_global_id&apos; and &apos;get_local_id&apos; as they commonly
/// arise in OpenCL code, while not catching any false-positives in our current
/// tests.</doc>
<use f='llvm/polly/lib/Analysis/ScopDetection.cpp' l='1116' u='c' c='_ZNK5polly13ScopDetection13isValidAccessEPN4llvm11InstructionEPKNS1_4SCEVEPKNS1_11SCEVUnknownERNS0_16DetectionContextE'/>
<def f='llvm/polly/lib/Support/SCEVValidator.cpp' l='621' ll='626' type='bool polly::hasIVParams(const llvm::SCEV * Expr)'/>
