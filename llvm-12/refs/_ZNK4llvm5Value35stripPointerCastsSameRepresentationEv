<dec f='llvm/llvm/include/llvm/IR/Value.h' l='648' type='const llvm::Value * llvm::Value::stripPointerCastsSameRepresentation() const'/>
<use f='llvm/llvm/include/llvm/IR/Value.h' l='651' u='c' c='_ZN4llvm5Value35stripPointerCastsSameRepresentationEv'/>
<doc f='llvm/llvm/include/llvm/IR/Value.h' l='643'>/// Strip off pointer casts, all-zero GEPs and address space casts
  /// but ensures the representation of the result stays the same.
  ///
  /// Returns the original uncasted value with the same representation. If this
  /// is called on a non-pointer value, it returns &apos;this&apos;.</doc>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4892' u='c' c='_ZL32isGuaranteedNotToBeUndefOrPoisonPKN4llvm5ValueEPNS_15AssumptionCacheEPKNS_11InstructionEPKNS_13DominatorTreeEjb'/>
<def f='llvm/llvm/lib/IR/Value.cpp' l='638' ll='640' type='const llvm::Value * llvm::Value::stripPointerCastsSameRepresentation() const'/>
