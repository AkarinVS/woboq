<def f='llvm/llvm/include/llvm/Analysis/InlineCost.h' l='129' type='int llvm::InlineCost::getCostDelta() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/InlineCost.h' l='126'>/// Get the cost delta from the threshold for inlining.
  /// Only valid if the cost is of the variable kind. Returns a negative
  /// value if the cost is too high to inline.</doc>
<use f='llvm/llvm/lib/Analysis/InlineAdvisor.cpp' l='254' u='c' c='_ZL16shouldBeDeferredPN4llvm8FunctionENS_10InlineCostERiNS_12function_refIFS2_RNS_8CallBaseEEEE'/>
<use f='llvm/llvm/lib/Transforms/IPO/PartialInlining.cpp' l='814' u='c' c='_ZNK12_GLOBAL__N_118PartialInlinerImpl19shouldPartialInlineERN4llvm8CallBaseERNS0_14FunctionClonerENS1_14BlockFrequencyERNS1_25OptimizationRemarkEmitterE'/>
<use f='llvm/llvm/lib/Transforms/IPO/PartialInlining.cpp' l='846' u='c' c='_ZNK12_GLOBAL__N_118PartialInlinerImpl19shouldPartialInlineERN4llvm8CallBaseERNS0_14FunctionClonerENS1_14BlockFrequencyERNS1_25OptimizationRemarkEmitterE'/>
