<dec f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='587' type='static llvm::CastInst * llvm::CastInst::CreateTruncOrBitCast(llvm::Value * S, llvm::Type * Ty, const llvm::Twine &amp; Name = &quot;&quot;, llvm::Instruction * InsertBefore = nullptr)'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='586'>/// Create a Trunc or BitCast cast instruction</doc>
<use f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='2190' u='c' c='_ZN4llvm13IRBuilderBase20CreateTruncOrBitCastEPNS_5ValueEPNS_4TypeERKNS_5TwineE'/>
<use f='llvm/llvm/include/llvm/IR/NoFolder.h' l='266' u='c' c='_ZNK4llvm8NoFolder20CreateTruncOrBitCastEPNS_8ConstantEPNS_4TypeE'/>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='2991' ll='2997' type='static llvm::CastInst * llvm::CastInst::CreateTruncOrBitCast(llvm::Value * S, llvm::Type * Ty, const llvm::Twine &amp; Name = &quot;&quot;, llvm::Instruction * InsertBefore = nullptr)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1241' u='c' c='_ZN4llvm16InstCombinerImpl62canonicalizeCondSignextOfHighBitExtractToSignextHighBitExtractERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='866' u='c' c='_ZN4llvm16InstCombinerImpl10visitTruncERNS_9TruncInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp' l='1233' u='c' c='_ZN4llvm16InstCombinerImpl53foldVariableSignZeroExtensionOfVariableHighBitExtractERNS_14BinaryOperatorE'/>
