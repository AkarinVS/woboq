<use f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='254' u='a' c='_ZNK5clang12DynTypedNode3getEv'/>
<use f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='262' u='a' c='_ZNK5clang12DynTypedNode12getUncheckedEv'/>
<use f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='274' u='a' c='_ZNK5clang12DynTypedNode18getMemoizationDataEv'/>
<use f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='409' u='a' c='_ZN5clang12DynTypedNode19DynCastPtrConverter6createERKT0_'/>
<use f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='429' u='a' c='_ZN5clang12DynTypedNode12PtrConverter6createERKT_'/>
<use f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='448' u='a' c='_ZN5clang12DynTypedNode14ValueConverter6createERKT_'/>
<dec f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='466' type='llvm::AlignedCharArrayUnion&lt;const void *, TemplateArgument, TemplateArgumentLoc, NestedNameSpecifierLoc, QualType, TypeLoc&gt;'/>
<offset>64</offset>
<doc f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='455'>/// Stores the data of the node.
  ///
  /// Note that we can store \c Decls, \c Stmts, \c Types,
  /// \c NestedNameSpecifiers and \c CXXCtorInitializer by pointer as they are
  /// guaranteed to be unique pointers pointing to dedicated storage in the AST.
  /// \c QualTypes, \c NestedNameSpecifierLocs, \c TypeLocs,
  /// \c TemplateArguments and \c TemplateArgumentLocs on the other hand do not
  /// have storage or unique pointers and thus need to be stored by value.</doc>
