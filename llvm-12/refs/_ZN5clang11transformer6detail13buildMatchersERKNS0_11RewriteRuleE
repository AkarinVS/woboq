<dec f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='436' type='std::vector&lt;ast_matchers::internal::DynTypedMatcher&gt; clang::transformer::detail::buildMatchers(const clang::transformer::RewriteRule &amp; Rule)'/>
<use f='llvm/clang/lib/Tooling/Transformer/RewriteRule.cpp' l='243' u='c' c='_ZN12_GLOBAL__N_117ApplyRuleCallback16registerMatchersERKN5clang12ast_matchers10BoundNodesEPNS2_11MatchFinderE'/>
<def f='llvm/clang/lib/Tooling/Transformer/RewriteRule.cpp' l='376' ll='406' type='std::vector&lt;DynTypedMatcher&gt; clang::transformer::detail::buildMatchers(const clang::transformer::RewriteRule &amp; Rule)'/>
<use f='llvm/clang/lib/Tooling/Transformer/RewriteRule.cpp' l='409' u='c' c='_ZN5clang11transformer6detail12buildMatcherERKNS0_11RewriteRuleE'/>
<doc f='llvm/clang/include/clang/Tooling/Transformer/RewriteRule.h' l='428'>/// Builds a set of matchers that cover the rule.
///
/// One matcher is built for each distinct node matcher base kind: Stmt, Decl,
/// etc. Node-matchers for `QualType` and `Type` are not permitted, since such
/// nodes carry no source location information and are therefore not relevant
/// for rewriting. If any such matchers are included, will return an empty
/// vector.</doc>
<use f='llvm/clang/lib/Tooling/Transformer/Transformer.cpp' l='25' u='c' c='_ZN5clang7tooling11Transformer16registerMatchersEPNS_12ast_matchers11MatchFinderE'/>
<use f='llvm/clang/unittests/Tooling/TransformerTest.cpp' l='987' u='c' c='_ZN12_GLOBAL__N_145TransformerTest_OrderedRuleMultipleKinds_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/TransformerTest.cpp' l='987' u='c' c='_ZN12_GLOBAL__N_145TransformerTest_OrderedRuleMultipleKinds_Test8TestBodyEv'/>
