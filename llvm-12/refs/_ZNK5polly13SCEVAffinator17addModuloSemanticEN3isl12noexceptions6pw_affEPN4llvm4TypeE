<dec f='llvm/polly/include/polly/Support/SCEVAffinator.h' l='86' type='isl::pw_aff polly::SCEVAffinator::addModuloSemantic(isl::pw_aff PWA, llvm::Type * ExprType) const'/>
<doc f='llvm/polly/include/polly/Support/SCEVAffinator.h' l='80'>/// Compute the non-wrapping version of @p PWA for type @p ExprType.
  ///
  /// @param PWA  The piece-wise affine function that might wrap.
  /// @param Type The type of the SCEV that was translated to @p PWA.
  ///
  /// @returns The expr @p PWA modulo the size constraints of @p ExprType.</doc>
<use f='llvm/polly/lib/Support/SCEVAffinator.cpp' l='142' u='c' c='_ZNK5polly13SCEVAffinator16checkForWrappingEPKN4llvm4SCEVESt4pairIN3isl12noexceptions6pw_affENS7_3setEE'/>
<def f='llvm/polly/lib/Support/SCEVAffinator.cpp' l='159' ll='171' type='isl::pw_aff polly::SCEVAffinator::addModuloSemantic(isl::pw_aff PWA, llvm::Type * ExprType) const'/>
<use f='llvm/polly/lib/Support/SCEVAffinator.cpp' l='226' u='c' c='_ZN5polly13SCEVAffinator5visitEPKN4llvm4SCEVE'/>
<use f='llvm/polly/lib/Support/SCEVAffinator.cpp' l='234' u='c' c='_ZN5polly13SCEVAffinator5visitEPKN4llvm4SCEVE'/>
