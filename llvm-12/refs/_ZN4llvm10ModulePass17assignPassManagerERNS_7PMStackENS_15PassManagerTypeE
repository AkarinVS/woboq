<dec f='llvm/llvm/include/llvm/Pass.h' l='253' type='void llvm::ModulePass::assignPassManager(llvm::PMStack &amp; PMS, llvm::PassManagerType T)'/>
<ovr f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRDynamicChecks.cpp' l='585' c='_ZN12lldb_private15IRDynamicChecks17assignPassManagerERN4llvm7PMStackENS1_15PassManagerTypeE'/>
<ovr f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='2026' c='_ZN11IRForTarget17assignPassManagerERN4llvm7PMStackENS0_15PassManagerTypeE'/>
<inh f='llvm/llvm/include/llvm/Pass.h' l='139' c='_ZN4llvm4Pass17assignPassManagerERNS_7PMStackENS_15PassManagerTypeE'/>
<def f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1730' ll='1738' type='void llvm::ModulePass::assignPassManager(llvm::PMStack &amp; PMS, llvm::PassManagerType PreferredType)'/>
<use f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1760' u='c' c='_ZN4llvm12FunctionPass17assignPassManagerERNS_7PMStackENS_15PassManagerTypeE'/>
<doc f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1728'>/// Find appropriate Module Pass Manager in the PM Stack and
/// add self into that manager.</doc>
