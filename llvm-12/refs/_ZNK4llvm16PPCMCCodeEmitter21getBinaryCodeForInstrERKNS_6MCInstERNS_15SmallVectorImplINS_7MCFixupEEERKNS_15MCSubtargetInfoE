<dec f='llvm/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.h' l='108' type='uint64_t llvm::PPCMCCodeEmitter::getBinaryCodeForInstr(const llvm::MCInst &amp; MI, SmallVectorImpl&lt;llvm::MCFixup&gt; &amp; Fixups, const llvm::MCSubtargetInfo &amp; STI) const'/>
<doc f='llvm/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.h' l='106'>// getBinaryCodeForInstr - TableGen&apos;erated function for getting the
  // binary encoding for an instruction.</doc>
<use f='llvm/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp' l='439' u='c' c='_ZNK4llvm16PPCMCCodeEmitter17encodeInstructionERKNS_6MCInstERNS_11raw_ostreamERNS_15SmallVectorImplINS_7MCFixupEEERKNS_15MCSubtargetInfoE'/>
<def f='llvm/build/lib/Target/PowerPC/PPCGenMCCodeEmitter.inc' l='9' ll='7324' type='uint64_t llvm::PPCMCCodeEmitter::getBinaryCodeForInstr(const llvm::MCInst &amp; MI, SmallVectorImpl&lt;llvm::MCFixup&gt; &amp; Fixups, const llvm::MCSubtargetInfo &amp; STI) const'/>
<doc f='llvm/build/lib/Target/PowerPC/PPCGenMCCodeEmitter.inc' l='1'>/*===- TableGen&apos;erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Machine Code Emitter                                                       *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/</doc>
