<dec f='llvm/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h' l='575' type='llvm::EngineBuilder &amp; llvm::EngineBuilder::setMCJITMemoryManager(std::unique_ptr&lt;RTDyldMemoryManager&gt; mcjmm)'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h' l='569'>/// setMCJITMemoryManager - Sets the MCJIT memory manager to use. This allows
  /// clients to customize their memory allocation policies for the MCJIT. This
  /// is only appropriate for the MCJIT; setting this and configuring the builder
  /// to create anything other than MCJIT will cause a runtime error. If create()
  /// is called and is successful, the created engine takes ownership of the
  /// memory manager. This option defaults to NULL.</doc>
<use f='llvm/clang/tools/clang-fuzzer/handle-llvm/handle_llvm.cpp' l='174' u='c' c='_ZL19CreateAndRunJITFuncRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm10CodeGenOpt5LevelE'/>
<use f='llvm/lldb/source/Expression/IRExecutionUnit.cpp' l='270' u='c' c='_ZN12lldb_private15IRExecutionUnit15GetRunnableInfoERNS_6StatusERmS3_'/>
<def f='llvm/llvm/lib/ExecutionEngine/ExecutionEngine.cpp' l='486' ll='492' type='llvm::EngineBuilder &amp; llvm::EngineBuilder::setMCJITMemoryManager(std::unique_ptr&lt;RTDyldMemoryManager&gt; mcjmm)'/>
<use f='llvm/llvm/lib/ExecutionEngine/ExecutionEngineBindings.cpp' l='206' u='c' c='LLVMCreateMCJITCompilerForModule'/>
<use f='llvm/llvm/tools/lli/lli.cpp' l='464' u='c' c='main'/>
<use f='llvm/llvm/tools/llvm-exegesis/lib/Assembler.cpp' l='308' u='c' c='_ZN4llvm8exegesis18ExecutableFunctionC1ESt10unique_ptrINS_17LLVMTargetMachineESt14default_deleteIS3_EEONS_6object12OwningBinaryINS7_10ObjectFileEEE'/>
<use f='llvm/llvm/unittests/ExecutionEngine/MCJIT/MCJITTestBase.h' l='310' u='c' c='_ZN4llvm13MCJITTestBase9createJITESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE'/>
