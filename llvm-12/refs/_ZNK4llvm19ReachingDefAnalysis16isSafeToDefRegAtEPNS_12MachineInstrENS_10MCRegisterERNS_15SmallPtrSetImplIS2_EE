<dec f='llvm/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h' l='239' type='bool llvm::ReachingDefAnalysis::isSafeToDefRegAt(llvm::MachineInstr * MI, llvm::MCRegister PhysReg, llvm::ReachingDefAnalysis::InstSet &amp; Ignore) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h' l='236'>/// Return whether a MachineInstr could be inserted at MI and safely define
  /// the given register without affecting the program, ignoring any effects
  /// on the provided instructions.</doc>
<use f='llvm/llvm/lib/CodeGen/ReachingDefAnalysis.cpp' l='681' u='c' c='_ZNK4llvm19ReachingDefAnalysis16isSafeToDefRegAtEPNS_12MachineInstrENS_10MCRegisterE'/>
<def f='llvm/llvm/lib/CodeGen/ReachingDefAnalysis.cpp' l='684' ll='711' type='bool llvm::ReachingDefAnalysis::isSafeToDefRegAt(llvm::MachineInstr * MI, llvm::MCRegister PhysReg, llvm::ReachingDefAnalysis::InstSet &amp; Ignore) const'/>
<use f='llvm/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp' l='1353' u='c' c='_ZNK12_GLOBAL__N_119ARMLowOverheadLoops13RevertLoopDecEPN4llvm12MachineInstrE'/>
