<def f='llvm/llvm/include/llvm/ADT/CoalescingBitVector.h' l='322' ll='335' type='void llvm::CoalescingBitVector::const_iterator::advanceToLowerBound(IndexT Index)'/>
<use f='llvm/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp' l='945' u='c' c='_ZNK12_GLOBAL__N_114VarLocBasedLDV17collectIDsForRegsERN4llvm19CoalescingBitVectorImEERKNS1_8SmallSetINS1_8RegisterELj32ESt4lessIS6_EEERKS3_'/>
<use f='llvm/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp' l='977' u='c' c='_ZNK12_GLOBAL__N_114VarLocBasedLDV11getUsedRegsERKN4llvm19CoalescingBitVectorImEERNS1_15SmallVectorImplIjEE'/>
<doc f='llvm/llvm/include/llvm/ADT/CoalescingBitVector.h' l='318'>/// Advance the iterator to the first set bit AT, OR AFTER, \p Index. If
    /// no such set bit exists, advance to end(). This is like std::lower_bound.
    /// This is useful if \p Index is close to the current iterator position.
    /// However, unlike \ref find(), this has worst-case O(n) performance.</doc>
<use f='llvm/llvm/unittests/ADT/CoalescingBitVectorTest.cpp' l='464' u='c' c='_ZN12_GLOBAL__N_148CoalescingBitVectorTest_AdvanceToLowerBound_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/CoalescingBitVectorTest.cpp' l='486' u='c' c='_ZN12_GLOBAL__N_148CoalescingBitVectorTest_AdvanceToLowerBound_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/CoalescingBitVectorTest.cpp' l='488' u='c' c='_ZN12_GLOBAL__N_148CoalescingBitVectorTest_AdvanceToLowerBound_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/CoalescingBitVectorTest.cpp' l='490' u='c' c='_ZN12_GLOBAL__N_148CoalescingBitVectorTest_AdvanceToLowerBound_Test8TestBodyEv'/>
