<dec f='llvm/lldb/include/lldb/Symbol/Block.h' l='119' type='bool lldb_private::Block::Contains(const lldb_private::Block * block) const'/>
<doc f='llvm/lldb/include/lldb/Symbol/Block.h' l='111'>/// Check if this object contains &quot;block&quot; as a child block at any depth.
  ///
  /// \param[in] block
  ///     A potential child block.
  ///
  /// \return
  ///     Returns \b true if \a block is a child of this block, \b
  ///     false otherwise.</doc>
<def f='llvm/lldb/source/Symbol/Block.cpp' l='173' ll='185' type='bool lldb_private::Block::Contains(const lldb_private::Block * block) const'/>
<use f='llvm/lldb/source/Symbol/Variable.cpp' l='310' u='c' c='_ZN12lldb_private8Variable9IsInScopeEPNS_10StackFrameE'/>
<use f='llvm/lldb/source/Target/StackID.cpp' l='93' u='c' c='_ZN12lldb_privateltERKNS_7StackIDES2_'/>
