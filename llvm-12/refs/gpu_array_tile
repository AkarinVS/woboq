<def f='llvm/polly/lib/External/ppcg/gpu_array_tile.h' l='45' ll='52'/>
<use f='llvm/polly/lib/External/ppcg/gpu_array_tile.h' l='54' c='gpu_array_tile_create'/>
<use f='llvm/polly/lib/External/ppcg/gpu_array_tile.h' l='55' c='gpu_array_tile_free'/>
<use f='llvm/polly/lib/External/ppcg/gpu_array_tile.h' l='55' c='gpu_array_tile_free'/>
<use f='llvm/polly/lib/External/ppcg/gpu_array_tile.h' l='57' c='gpu_array_tile_size'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.h' l='39'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.h' l='42'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.h' l='60' c='gpu_array_ref_group_tile'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='1211' c='create_kernel_var'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='1601' c='transform_index'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='1929' c='create_access_leaf'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='3229' c='create_from_access'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='3273' c='add_group_write_sync'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='3335' c='add_copies_group_private'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='3489' c='add_copies_group_shared'/>
<size>40</size>
<doc f='llvm/polly/lib/External/ppcg/gpu_array_tile.h' l='25'>/* A tile of an outer array.
 *
 * requires_unroll is set if the schedule dimensions that are mapped
 * to threads need to be unrolled for this (private) tile to be used.
 *
 * &quot;depth&quot; reflects the number of schedule dimensions that affect the tile.
 * The copying into and/or out of the tile is performed at that depth.
 *
 * n is the dimension of the array.
 * bound is an array of size &quot;n&quot; representing the lower bound
 *	and size for each index.
 *
 * tiling maps a tile in the global array to the corresponding
 * shared/private memory tile and is of the form
 *
 *	{ [D[i] -&gt; A[a]] -&gt; T[(a + shift(i))/stride - lb(i)] }
 *
 * where D represents the initial &quot;depth&quot; dimensions
 * of the computed schedule.
 */</doc>
<mbr r='gpu_array_tile::ctx' o='0' t='isl_ctx *'/>
<mbr r='gpu_array_tile::requires_unroll' o='64' t='int'/>
<mbr r='gpu_array_tile::depth' o='96' t='int'/>
<mbr r='gpu_array_tile::n' o='128' t='int'/>
<mbr r='gpu_array_tile::bound' o='192' t='struct gpu_array_bound *'/>
<mbr r='gpu_array_tile::tiling' o='256' t='isl_multi_aff *'/>
<use f='llvm/polly/lib/External/ppcg/gpu_array_tile.c' l='6' c='gpu_array_tile_free'/>
<use f='llvm/polly/lib/External/ppcg/gpu_array_tile.c' l='6' c='gpu_array_tile_free'/>
<use f='llvm/polly/lib/External/ppcg/gpu_array_tile.c' l='28' c='gpu_array_tile_create'/>
<use f='llvm/polly/lib/External/ppcg/gpu_array_tile.c' l='31' c='gpu_array_tile_create'/>
<use f='llvm/polly/lib/External/ppcg/gpu_array_tile.c' l='33' c='gpu_array_tile_create'/>
<use f='llvm/polly/lib/External/ppcg/gpu_array_tile.c' l='33' c='gpu_array_tile_create'/>
<use f='llvm/polly/lib/External/ppcg/gpu_array_tile.c' l='57' c='gpu_array_tile_size'/>
<size>40</size>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='93' c='gpu_array_ref_group_tile'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='112' c='gpu_array_ref_group_requires_unroll'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='413' c='can_tile'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='630' c='compute_tile_depth'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='745' c='tile_adjust_depth'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='777' c='tile_set_depth'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='1180' c='compute_group_bounds_core'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='1310' c='smaller_tile'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='1311' c='smaller_tile'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='1311' c='smaller_tile'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='1718' c='strided_tile'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='1787' c='gpu_array_ref_group_compute_tiling'/>
<size>40</size>
