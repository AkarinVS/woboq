<dec f='llvm/llvm/include/llvm/Analysis/CaptureTracking.h' l='58' type='bool llvm::PointerMayBeCapturedBefore(const llvm::Value * V, bool ReturnCaptures, bool StoreCaptures, const llvm::Instruction * I, const llvm::DominatorTree * DT, bool IncludeI = false, unsigned int MaxUsesToExplore = 0)'/>
<use f='llvm/llvm/lib/Analysis/AliasAnalysis.cpp' l='709' u='c' c='_ZN4llvm9AAResults18callCapturesBeforeEPKNS_11InstructionERKNS_14MemoryLocationEPNS_13DominatorTreeE'/>
<doc f='llvm/llvm/include/llvm/Analysis/CaptureTracking.h' l='45'>/// PointerMayBeCapturedBefore - Return true if this pointer value may be
  /// captured by the enclosing function (which is required to exist). If a
  /// DominatorTree is provided, only captures which happen before the given
  /// instruction are considered. This routine can be expensive, so consider
  /// caching the results.  The boolean ReturnCaptures specifies whether
  /// returning the value (or part of it) from the function counts as capturing
  /// it or not.  The boolean StoreCaptures specified whether storing the value
  /// (or part of it) into memory anywhere automatically counts as capturing it
  /// or not. Captures by the provided instruction are considered if the
  /// final parameter is true.
  /// MaxUsesToExplore specifies how many uses the analysis should explore for
  /// one value before giving up due too &quot;too many uses&quot;. If MaxUsesToExplore
  /// is zero, a default value is assumed.</doc>
<def f='llvm/llvm/lib/Analysis/CaptureTracking.cpp' l='221' ll='242' type='bool llvm::PointerMayBeCapturedBefore(const llvm::Value * V, bool ReturnCaptures, bool StoreCaptures, const llvm::Instruction * I, const llvm::DominatorTree * DT, bool IncludeI = false, unsigned int MaxUsesToExplore = 0)'/>
<doc f='llvm/llvm/lib/Analysis/CaptureTracking.cpp' l='212'>/// PointerMayBeCapturedBefore - Return true if this pointer value may be
/// captured by the enclosing function (which is required to exist). If a
/// DominatorTree is provided, only captures which happen before the given
/// instruction are considered. This routine can be expensive, so consider
/// caching the results.  The boolean ReturnCaptures specifies whether
/// returning the value (or part of it) from the function counts as capturing
/// it or not.  The boolean StoreCaptures specified whether storing the value
/// (or part of it) into memory anywhere automatically counts as capturing it
/// or not.</doc>
<use f='llvm/llvm/lib/Analysis/Loads.cpp' l='143' u='c' c='_ZL34isDereferenceableAndAlignedPointerPKN4llvm5ValueENS_5AlignERKNS_5APIntERKNS_10DataLayoutEPKNS_11InstructionEPKNS_13DominatorTreeERNS_15SmallPtrSetImplIS2_EEj'/>
<use f='llvm/llvm/lib/Transforms/Utils/InlineFunction.cpp' l='1134' u='c' c='_ZL21AddAliasScopeMetadataRN4llvm8CallBaseERNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEERKNS_10D5245488'/>
<use f='llvm/llvm/unittests/Analysis/CaptureTrackingTest.cpp' l='67' u='c' c='_ZN37CaptureTracking_MaxUsesToExplore_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/CaptureTrackingTest.cpp' l='69' u='c' c='_ZN37CaptureTracking_MaxUsesToExplore_Test8TestBodyEv'/>
