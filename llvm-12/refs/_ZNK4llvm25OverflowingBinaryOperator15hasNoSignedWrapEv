<def f='llvm/llvm/include/llvm/IR/Operator.h' l='96' ll='98' type='bool llvm::OverflowingBinaryOperator::hasNoSignedWrap() const'/>
<doc f='llvm/llvm/include/llvm/IR/Operator.h' l='94'>/// Test whether this operation is known to never
  /// undergo signed overflow, aka the nsw property.</doc>
<use f='llvm/llvm/lib/Analysis/DemandedBits.cpp' l='216' u='c' c='_ZN4llvm12DemandedBits24determineLiveOperandBitsEPKNS_11InstructionEPKNS_5ValueEjRKNS_5APIntERS7_RNS_9KnownBitsESC_Rb'/>
<use f='llvm/llvm/lib/Analysis/LazyValueInfo.cpp' l='1016' u='c' c='_ZN12_GLOBAL__N_117LazyValueInfoImpl23solveBlockValueBinaryOpEPN4llvm14BinaryOperatorEPNS1_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='1003' u='c' c='_ZL14isNoWrapAddRecPN4llvm5ValueEPKNS_14SCEVAddRecExprERNS_25PredicatedScalarEvolutionEPKNS_4LoopE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='4555' u='c' c='_ZN12_GLOBAL__N_18BinaryOpC1EPN4llvm8OperatorE'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='2536' u='c' c='_ZL15isKnownNonEqualPKN4llvm5ValueES2_jRKN12_GLOBAL__N_15QueryE'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='2536' u='c' c='_ZL15isKnownNonEqualPKN4llvm5ValueES2_jRKN12_GLOBAL__N_15QueryE'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4553' u='c' c='_ZL27computeOverflowForSignedAddPKN4llvm5ValueES2_PKNS_11AddOperatorERKNS_10DataLayoutEPNS_15AssumptionCacheEPKNS_11InstructionEPKNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4704' u='c' c='_ZL22canCreateUndefOrPoisonPKN4llvm8OperatorEb'/>
<use f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp' l='1436' u='c' c='_ZL20getOptimizationFlagsPKN4llvm5ValueE'/>
<use f='llvm/llvm/lib/CodeGen/MachineInstr.cpp' l='539' u='c' c='_ZN4llvm12MachineInstr24copyFlagsFromInstructionERKNS_11InstructionE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='3012' u='c' c='_ZN4llvm19SelectionDAGBuilder11visitBinaryERKNS_4UserEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='3065' u='c' c='_ZN4llvm19SelectionDAGBuilder10visitShiftERKNS_4UserEj'/>
<use f='llvm/llvm/lib/IR/AsmWriter.cpp' l='1325' u='c' c='_ZL21WriteOptimizationInfoRN4llvm11raw_ostreamEPKNS_4UserE'/>
<use f='llvm/llvm/lib/IR/Instruction.cpp' l='136' u='c' c='_ZNK4llvm11Instruction15hasNoSignedWrapEv'/>
<use f='llvm/llvm/lib/IR/Instruction.cpp' l='271' u='c' c='_ZN4llvm11Instruction11copyIRFlagsEPKNS_5ValueEb'/>
<use f='llvm/llvm/lib/IR/Instruction.cpp' l='294' u='c' c='_ZN4llvm11Instruction10andIRFlagsEPKNS_5ValueE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='43' u='c' c='_ZL25decomposeSimpleLinearExprPN4llvm5ValueERjRm'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='255' u='c' c='_ZN4llvm16InstCombinerImpl8visitMulERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='256' u='c' c='_ZN4llvm16InstCombinerImpl8visitMulERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='311' u='c' c='_ZN4llvm16InstCombinerImpl8visitMulERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='314' u='c' c='_ZN4llvm16InstCombinerImpl8visitMulERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='770' u='c' c='_ZN4llvm16InstCombinerImpl20commonIDivTransformsERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='796' u='c' c='_ZN4llvm16InstCombinerImpl20commonIDivTransformsERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='842' u='c' c='_ZN4llvm16InstCombinerImpl20commonIDivTransformsERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='1153' u='c' c='_ZN4llvm16InstCombinerImpl26foldSelectValueEquivalenceERNS_10SelectInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp' l='514' u='c' c='_ZN4llvm16InstCombinerImpl23SimplifyDemandedUseBitsEPNS_5ValueENS_5APIntERNS_9KnownBitsEjPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp' l='534' u='c' c='_ZN4llvm16InstCombinerImpl23SimplifyDemandedUseBitsEPNS_5ValueENS_5APIntERNS_9KnownBitsEjPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp' l='553' u='c' c='_ZN4llvm16InstCombinerImpl23SimplifyDemandedUseBitsEPNS_5ValueENS_5APIntERNS_9KnownBitsEjPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='260' u='c' c='_ZL20maintainNoSignedWrapRN4llvm14BinaryOperatorEPNS_5ValueES3_'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='288' u='c' c='_ZL15hasNoSignedWrapRN4llvm14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='665' u='c' c='_ZN4llvm16InstCombinerImpl16tryFactorizationERNS_14BinaryOperatorENS_11Instruction9BinaryOpsEPNS_5ValueES6_S6_S6_'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='670' u='c' c='_ZN4llvm16InstCombinerImpl16tryFactorizationERNS_14BinaryOperatorENS_11Instruction9BinaryOpsEPNS_5ValueES6_S6_S6_'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp' l='1353' u='c' c='_ZN7WidenIV28getExtendedOperandRecurrenceENS_14NarrowIVDefUseE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp' l='1524' u='c' c='_ZN7WidenIV19widenWithVariantUseENS_14NarrowIVDefUseE'/>
<use f='llvm/llvm/unittests/IR/IRBuilderTest.cpp' l='680' u='c' c='_ZN12_GLOBAL__N_128IRBuilderTest_WrapFlags_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/IRBuilderTest.cpp' l='682' u='c' c='_ZN12_GLOBAL__N_128IRBuilderTest_WrapFlags_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/IRBuilderTest.cpp' l='684' u='c' c='_ZN12_GLOBAL__N_128IRBuilderTest_WrapFlags_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/IRBuilderTest.cpp' l='687' u='c' c='_ZN12_GLOBAL__N_128IRBuilderTest_WrapFlags_Test8TestBodyEv'/>
