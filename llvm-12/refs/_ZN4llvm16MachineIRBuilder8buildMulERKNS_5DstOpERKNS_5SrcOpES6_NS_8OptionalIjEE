<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='1411' ll='1415' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildMul(const llvm::DstOp &amp; Dst, const llvm::SrcOp &amp; Src0, const llvm::SrcOp &amp; Src1, Optional&lt;unsigned int&gt; Flags = None)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='1401'>/// Build and insert \p Res = G_MUL \p Op0, \p Op1
  ///
  /// G_MUL sets \p Res to the sum of integer parameters \p Op0 and \p Op1,
  /// truncated to their width.
  ///
  /// \pre setBasicBlock or setMI must have been called.
  /// \pre \p Res, \p Op0 and \p Op1 must be generic virtual registers
  ///      with the same (scalar or vector) type).
  ///
  /// \return a MachineInstrBuilder for the newly created instruction.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp' l='1110' u='c' c='_ZL14getMemsetValueN4llvm8RegisterENS_3LLTERNS_16MachineIRBuilderE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp' l='1540' u='c' c='_ZN4llvm12IRTranslator22translateGetElementPtrERKNS_4UserERNS_16MachineIRBuilderE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp' l='2584' u='c' c='_ZN4llvm12IRTranslator15translateAllocaERKNS_4UserERNS_16MachineIRBuilderE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='2501' u='c' c='_ZN4llvm15LegalizerHelper23bitcastExtractVectorEltERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='2881' u='c' c='_ZN4llvm15LegalizerHelper5lowerERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='3214' u='c' c='_ZN4llvm15LegalizerHelper23getVectorElementPointerENS_8RegisterENS_3LLTES1_'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='4411' u='c' c='_ZN4llvm15LegalizerHelper17multiplyRegistersERNS_15SmallVectorImplINS_8RegisterEEENS_8ArrayRefIS2_EES6_NS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='4422' u='c' c='_ZN4llvm15LegalizerHelper17multiplyRegistersERNS_15SmallVectorImplINS_8RegisterEEENS_8ArrayRefIS2_EES6_NS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='4998' u='c' c='_ZN4llvm15LegalizerHelper13lowerBitCountERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='6214' u='c' c='_ZN4llvm15LegalizerHelper16lowerSMULH_UMULHERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp' l='2785' u='c' c='_ZNK4llvm19AMDGPULegalizerInfo23legalizeUDIV_UREM32ImplERNS_16MachineIRBuilderENS_8RegisterES3_S3_b'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp' l='2790' u='c' c='_ZNK4llvm19AMDGPULegalizerInfo23legalizeUDIV_UREM32ImplERNS_16MachineIRBuilderENS_8RegisterES3_S3_b'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp' l='2879' u='c' c='_ZNK4llvm19AMDGPULegalizerInfo23legalizeUDIV_UREM64ImplERNS_16MachineIRBuilderENS_8RegisterES3_S3_b'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp' l='2891' u='c' c='_ZNK4llvm19AMDGPULegalizerInfo23legalizeUDIV_UREM64ImplERNS_16MachineIRBuilderENS_8RegisterES3_S3_b'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp' l='2909' u='c' c='_ZNK4llvm19AMDGPULegalizerInfo23legalizeUDIV_UREM64ImplERNS_16MachineIRBuilderENS_8RegisterES3_S3_b'/>
<use f='llvm/llvm/unittests/CodeGen/GlobalISel/PatternMatchTest.cpp' l='64' u='c' c='_ZN12_GLOBAL__N_137AArch64GISelMITest_MatchBinaryOp_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/GlobalISel/PatternMatchTest.cpp' l='82' u='c' c='_ZN12_GLOBAL__N_137AArch64GISelMITest_MatchBinaryOp_Test8TestBodyEv'/>
