<dec f='llvm/llvm/include/llvm/Analysis/ProfileSummaryInfo.h' l='113' type='bool llvm::ProfileSummaryInfo::isFunctionHotInCallGraph(const llvm::Function * F, llvm::BlockFrequencyInfo &amp; BFI) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/ProfileSummaryInfo.h' l='112'>/// Returns true if \p F contains hot code.</doc>
<def f='llvm/llvm/lib/Analysis/ProfileSummaryInfo.cpp' l='150' ll='172' type='bool llvm::ProfileSummaryInfo::isFunctionHotInCallGraph(const llvm::Function * F, llvm::BlockFrequencyInfo &amp; BFI) const'/>
<doc f='llvm/llvm/lib/Analysis/ProfileSummaryInfo.cpp' l='145'>/// Returns true if the function contains hot code. This can include a hot
/// function entry count, hot basic block, or (in the case of Sample PGO)
/// hot total call edge count.
/// If it returns false, it either means it is not hot or it is unknown
/// (for example, no profile data is available).</doc>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='479' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare13runOnFunctionERN4llvm8FunctionE'/>
