<dec f='llvm/llvm/include/llvm/Transforms/Utils/LoopVersioning.h' l='83' type='void llvm::LoopVersioning::annotateLoopWithNoAlias()'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/LoopVersioning.h' l='78'>/// Annotate memory instructions in the versioned loop with no-alias
  /// metadata based on the memchecks issued.
  ///
  /// This is just wrapper that calls prepareNoAliasMetadata and
  /// annotateInstWithNoAlias on the instructions of the versioned loop.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopDistribute.cpp' l='820' u='c' c='_ZN12_GLOBAL__N_121LoopDistributeForLoop11processLoopERSt8functionIFRKN4llvm14LoopAccessInfoERNS2_4LoopEEE'/>
<def f='llvm/llvm/lib/Transforms/Utils/LoopVersioning.cpp' l='213' ll='224' type='void llvm::LoopVersioning::annotateLoopWithNoAlias()'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopVersioning.cpp' l='283' u='c' c='_ZN12_GLOBAL__N_17runImplEPN4llvm8LoopInfoENS0_12function_refIFRKNS0_14LoopAccessInfoERNS0_4LoopEEEEPNS0_13DominatorTreeEPNS0_15ScalarEvolutionE'/>
