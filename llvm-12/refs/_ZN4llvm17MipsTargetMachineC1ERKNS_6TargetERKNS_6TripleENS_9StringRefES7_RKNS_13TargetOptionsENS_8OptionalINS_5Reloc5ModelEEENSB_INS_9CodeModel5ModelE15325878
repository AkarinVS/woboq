<dec f='llvm/llvm/lib/Target/Mips/MipsTargetMachine.h' l='40' type='void llvm::MipsTargetMachine::MipsTargetMachine(const llvm::Target &amp; T, const llvm::Triple &amp; TT, llvm::StringRef CPU, llvm::StringRef FS, const llvm::TargetOptions &amp; Options, Optional&lt;Reloc::Model&gt; RM, Optional&lt;CodeModel::Model&gt; CM, CodeGenOpt::Level OL, bool JIT, bool isLittle)'/>
<def f='llvm/llvm/lib/Target/Mips/MipsTargetMachine.cpp' l='111' ll='137' type='void llvm::MipsTargetMachine::MipsTargetMachine(const llvm::Target &amp; T, const llvm::Triple &amp; TT, llvm::StringRef CPU, llvm::StringRef FS, const llvm::TargetOptions &amp; Options, Optional&lt;Reloc::Model&gt; RM, Optional&lt;CodeModel::Model&gt; CM, CodeGenOpt::Level OL, bool JIT, bool isLittle)'/>
<use f='llvm/llvm/lib/Target/Mips/MipsTargetMachine.cpp' l='149' u='c' c='_ZN4llvm19MipsebTargetMachineC1ERKNS_6TargetERKNS_6TripleENS_9StringRefES7_RKNS_13TargetOptionsENS_8OptionalINS_5Reloc5ModelEEENSB_INS_9CodeModel5Mode10724443'/>
<use f='llvm/llvm/lib/Target/Mips/MipsTargetMachine.cpp' l='159' u='c' c='_ZN4llvm19MipselTargetMachineC1ERKNS_6TargetERKNS_6TripleENS_9StringRefES7_RKNS_13TargetOptionsENS_8OptionalINS_5Reloc5ModelEEENSB_INS_9CodeModel5Mode4719146'/>
<doc f='llvm/llvm/lib/Target/Mips/MipsTargetMachine.cpp' l='106'>// On function prologue, the stack is created by decrementing
// its pointer. Once decremented, all references are done with positive
// offset from the stack/frame pointer, using StackGrowsUp enables
// an easier handling.
// Using CodeModel::Large enables different CALL behavior.</doc>
