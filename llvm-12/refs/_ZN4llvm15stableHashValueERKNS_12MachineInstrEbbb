<dec f='llvm/llvm/include/llvm/CodeGen/MachineStableHash.h' l='24' type='llvm::stable_hash llvm::stableHashValue(const llvm::MachineInstr &amp; MI, bool HashVRegs = false, bool HashConstantPoolIndices = false, bool HashMemOperands = false)'/>
<use f='llvm/llvm/lib/CodeGen/MIRVRegNamerUtils.cpp' l='62' u='c' c='_ZN4llvm11VRegRenamer24getInstructionOpcodeHashB5cxx11ERNS_12MachineInstrE'/>
<def f='llvm/llvm/lib/CodeGen/MachineStableHash.cpp' l='154' ll='194' type='llvm::stable_hash llvm::stableHashValue(const llvm::MachineInstr &amp; MI, bool HashVRegs = false, bool HashConstantPoolIndices = false, bool HashMemOperands = false)'/>
<doc f='llvm/llvm/lib/CodeGen/MachineStableHash.cpp' l='150'>/// A stable hash value for machine instructions.
/// Returns 0 if no stable hash could be computed.
/// The hashing and equality testing functions ignore definitions so this is
/// useful for CSE, etc.</doc>
