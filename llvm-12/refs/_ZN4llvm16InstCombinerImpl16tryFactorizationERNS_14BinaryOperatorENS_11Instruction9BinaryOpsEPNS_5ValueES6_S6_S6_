<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='552' type='llvm::Value * llvm::InstCombinerImpl::tryFactorization(llvm::BinaryOperator &amp; , Instruction::BinaryOps , llvm::Value * , llvm::Value * , llvm::Value * , llvm::Value * )'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='550'>/// This tries to simplify binary operations by factorizing out common terms
  /// (e. g. &quot;(A*B)+(A*C)&quot; -&gt; &quot;A*(B+C)&quot;).</doc>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='597' ll='696' type='llvm::Value * llvm::InstCombinerImpl::tryFactorization(llvm::BinaryOperator &amp; I, Instruction::BinaryOps InnerOpcode, llvm::Value * A, llvm::Value * B, llvm::Value * C, llvm::Value * D)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='721' u='c' c='_ZN4llvm16InstCombinerImpl29SimplifyUsingDistributiveLawsERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='728' u='c' c='_ZN4llvm16InstCombinerImpl29SimplifyUsingDistributiveLawsERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='735' u='c' c='_ZN4llvm16InstCombinerImpl29SimplifyUsingDistributiveLawsERNS_14BinaryOperatorE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='595'>/// This tries to simplify binary operations by factorizing out common terms
/// (e. g. &quot;(A*B)+(A*C)&quot; -&gt; &quot;A*(B+C)&quot;).</doc>
