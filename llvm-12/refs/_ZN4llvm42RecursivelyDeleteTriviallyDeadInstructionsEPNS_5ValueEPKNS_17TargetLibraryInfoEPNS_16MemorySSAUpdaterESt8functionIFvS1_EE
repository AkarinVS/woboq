<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='95' type='bool llvm::RecursivelyDeleteTriviallyDeadInstructions(llvm::Value * V, const llvm::TargetLibraryInfo * TLI = nullptr, llvm::MemorySSAUpdater * MSSAU = nullptr, std::function&lt;void (Value *)&gt; AboutToDeleteCallback = std::function&lt;void (Value *)&gt;())'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='92'>/// If the specified value is a trivially dead instruction, delete it.
/// If that makes any of its operands trivially dead, delete them too,
/// recursively. Return true if any instructions were deleted.</doc>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='2069' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare16optimizeCallInstEPN4llvm8CallInstERb'/>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='5286' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare18optimizeMemoryInstEPN4llvm11InstructionEPNS1_5ValueEPNS1_4TypeEj'/>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='5423' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare25optimizeGatherScatterInstEPN4llvm11InstructionEPNS1_5ValueE'/>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='6724' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare25optimizeShuffleVectorInstEPN4llvm17ShuffleVectorInstE'/>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='7693' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare14makeBitReverseERN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/CodeGen/HardwareLoops.cpp' l='477' u='c' c='_ZN12_GLOBAL__N_112HardwareLoop13InsertLoopDecEv'/>
<use f='llvm/llvm/lib/CodeGen/HardwareLoops.cpp' l='520' u='c' c='_ZN12_GLOBAL__N_112HardwareLoop12UpdateBranchEPN4llvm5ValueE'/>
<use f='llvm/llvm/lib/CodeGen/InterleavedAccessPass.cpp' l='418' u='c' c='_ZN12_GLOBAL__N_117InterleavedAccess20replaceBinOpShufflesEN4llvm8ArrayRefIPNS1_17ShuffleVectorInstEEERNS1_15SmallVectorImplIS4_EEPNS1_8LoadInstE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULateCodeGenPrepare.cpp' l='179' u='c' c='_ZN12_GLOBAL__N_124AMDGPULateCodeGenPrepare13visitLoadInstERN4llvm8LoadInstE'/>
<use f='llvm/llvm/lib/Target/ARM/MVETailPredication.cpp' l='416' u='c' c='_ZN12_GLOBAL__N_118MVETailPredication24TryConvertActiveLaneMaskEPN4llvm5ValueE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp' l='1495' u='c' c='_ZN12_GLOBAL__N_127PolynomialMultiplyRecognize15cleanupLoopBodyEPN4llvm10BasicBlockE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp' l='1846' u='c' c='_ZN12_GLOBAL__N_127PolynomialMultiplyRecognize9recognizeEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp' l='1877' u='c' c='_ZN12_GLOBAL__N_127PolynomialMultiplyRecognize9recognizeEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp' l='2078' u='c' c='_ZN12_GLOBAL__N_125HexagonLoopIdiomRecognize19processCopyingStoreEPN4llvm4LoopEPNS1_9StoreInstEPKNS1_4SCEVE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp' l='2082' u='c' c='_ZN12_GLOBAL__N_125HexagonLoopIdiomRecognize19processCopyingStoreEPN4llvm4LoopEPNS1_9StoreInstEPKNS1_4SCEVE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp' l='2304' u='c' c='_ZN12_GLOBAL__N_125HexagonLoopIdiomRecognize19processCopyingStoreEPN4llvm4LoopEPNS1_9StoreInstEPKNS1_4SCEVE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp' l='621' u='c' c='_ZN12_GLOBAL__N_120PPCLoopInstrFormPrep17rewriteLoadStoresEPN4llvm4LoopERNS_6BucketERNS1_8SmallSetIPNS1_10BasicBlockELj16ESt4lessIS8_EEENS_9InstrFormE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp' l='669' u='c' c='_ZN12_GLOBAL__N_120PPCLoopInstrFormPrep17rewriteLoadStoresEPN4llvm4LoopERNS_6BucketERNS1_8SmallSetIPNS1_10BasicBlockELj16ESt4lessIS8_EEENS_9InstrFormE'/>
<use f='llvm/llvm/lib/Transforms/IPO/StripSymbols.cpp' l='271' u='c' c='_ZL21stripDebugDeclareImplRN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/ObjCARC/ObjCARC.h' l='54' u='c' c='_ZN4llvm7objcarcL16EraseInstructionEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='384' u='c' c='_ZN12_GLOBAL__N_114IndVarSimplify21handleFloatingPointIVEPN4llvm4LoopEPNS1_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='388' u='c' c='_ZN12_GLOBAL__N_114IndVarSimplify21handleFloatingPointIVEPN4llvm4LoopEPNS1_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='401' u='c' c='_ZN12_GLOBAL__N_114IndVarSimplify21handleFloatingPointIVEPN4llvm4LoopEPNS1_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='1878' u='c' c='_ZN12_GLOBAL__N_114IndVarSimplify3runEPN4llvm4LoopE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp' l='1184' u='c' c='_ZNK12_GLOBAL__N_122InferAddressSpacesImpl27rewriteWithNewAddressSpacesERKN4llvm19TargetTransformInfoENS1_8ArrayRefINS1_14WeakTrackingVHEEERKNS1_8Dens6265900'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopIdiomRecognize.cpp' l='1867' u='c' c='_ZN12_GLOBAL__N_118LoopIdiomRecognize23transformLoopToPopcountEPN4llvm10BasicBlockEPNS1_11InstructionEPNS1_7PHINodeEPNS1_5ValueE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='812' u='c' c='_ZN12_GLOBAL__N_115LoopPredication20widenGuardConditionsEPN4llvm13IntrinsicInstERNS1_12SCEVExpanderE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='838' u='c' c='_ZN12_GLOBAL__N_115LoopPredication35widenWidenableBranchGuardConditionsEPN4llvm10BranchInstERNS1_12SCEVExpanderE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp' l='1021' u='c' c='_ZN12_GLOBAL__N_126SeparateConstOffsetFromGEP8splitGEPEPN4llvm17GetElementPtrInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp' l='1022' u='c' c='_ZN12_GLOBAL__N_126SeparateConstOffsetFromGEP8splitGEPEPN4llvm17GetElementPtrInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp' l='1220' u='c' c='_ZN12_GLOBAL__N_126SeparateConstOffsetFromGEP11reuniteExtsEPN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp' l='1232' u='c' c='_ZN12_GLOBAL__N_126SeparateConstOffsetFromGEP11reuniteExtsEPN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp' l='1156' u='c' c='_ZL21buildClonedLoopBlocksRN4llvm4LoopEPNS_10BasicBlockES3_NS_8ArrayRefIS3_EES3_S3_S3_RKNS_13SmallDenseMapIS3_S3_Lj16ENS_12DenseMapInfoIS3_EENS_6detai9053684'/>
<use f='llvm/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp' l='662' u='c' c='_ZN12_GLOBAL__N_126StraightLineStrengthReduce25rewriteCandidateWithBasisERKNS0_9CandidateES3_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp' l='750' u='c' c='_ZN12_GLOBAL__N_126StraightLineStrengthReduce13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Utils/BypassSlowDivision.cpp' l='479' u='c' c='_ZN4llvm18bypassSlowDivisionEPNS_10BasicBlockERKNS_8DenseMapIjjNS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjjEEEE'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='155' u='c' c='_ZN4llvm22ConstantFoldTerminatorEPNS_10BasicBlockEbPKNS_17TargetLibraryInfoEPNS_14DomTreeUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='279' u='c' c='_ZN4llvm22ConstantFoldTerminatorEPNS_10BasicBlockEbPKNS_17TargetLibraryInfoEPNS_14DomTreeUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='352' u='c' c='_ZN4llvm22ConstantFoldTerminatorEPNS_10BasicBlockEbPKNS_17TargetLibraryInfoEPNS_14DomTreeUpdaterE'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='486' ll='499' type='bool llvm::RecursivelyDeleteTriviallyDeadInstructions(llvm::Value * V, const llvm::TargetLibraryInfo * TLI = nullptr, llvm::MemorySSAUpdater * MSSAU = nullptr, std::function&lt;void (Value *)&gt; AboutToDeleteCallback = std::function&lt;void (Value *)&gt;())'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='604' u='c' c='_ZN4llvm28RecursivelyDeleteDeadPHINodeEPNS_7PHINodeEPKNS_17TargetLibraryInfoEPNS_16MemorySSAUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='611' u='c' c='_ZN4llvm28RecursivelyDeleteDeadPHINodeEPNS_7PHINodeEPKNS_17TargetLibraryInfoEPNS_16MemorySSAUpdaterE'/>
<doc f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='482'>/// RecursivelyDeleteTriviallyDeadInstructions - If the specified value is a
/// trivially dead instruction, delete it.  If that makes any of its operands
/// trivially dead, delete them too, recursively.  Return true if any
/// instructions were deleted.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnroll.cpp' l='219' u='c' c='_ZN4llvm23simplifyLoopAfterUnrollEPNS_4LoopEbPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheEPKNS_19TargetTransformInfoE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='720' u='c' c='_ZL25EraseTerminatorAndDCECondPN4llvm11InstructionEPNS_16MemorySSAUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='6318' u='c' c='_ZN12_GLOBAL__N_114SimplifyCFGOpt18simplifyCondBranchEPN4llvm10BranchInstERNS1_9IRBuilderINS1_14ConstantFolderENS1_24IRBuilderDefaultInserterEEE'/>
<use f='llvm/llvm/unittests/Transforms/Utils/LocalTest.cpp' l='572' u='c' c='_ZN47SalvageDebugInfoTest_RecursiveInstDeletion_Test8TestBodyEv'/>
