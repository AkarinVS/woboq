<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='3146' u='w' c='_ZN5clang12ast_matchers8internal29matcher_hasDirectBase0MatcherC1ERKNS1_7MatcherINS_16CXXBaseSpecifierEEE'/>
<dec f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='3146' type='const internal::Matcher&lt;CXXBaseSpecifier&gt;'/>
<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='3149' u='m' c='_ZNK5clang12ast_matchers8internal29matcher_hasDirectBase0Matcher7matchesERKNS_13CXXRecordDeclEPNS1_14ASTMatchFinderEPNS1_21BoundNodesTreeBuilderE'/>
<offset>128</offset>
<doc f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='3133'>/// Matches C++ classes that have a direct base matching \p BaseSpecMatcher.
///
/// Example:
/// matcher hasDirectBase(hasType(cxxRecordDecl(hasName(&quot;SpecialBase&quot;))))
/// \code
///   class Foo;
///   class Bar : Foo {};
///   class Baz : Bar {};
///   class SpecialBase;
///   class Proxy : SpecialBase {};  // matches Proxy
///   class IndirectlyDerived : Proxy {};  // doesn&apos;t match
/// \endcode</doc>
