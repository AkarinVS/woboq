<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='108' type='bool llvm::InstCombinerImpl::sinkNotIntoOtherHandOfAndOrOr(llvm::BinaryOperator &amp; I)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1987' u='c' c='_ZN4llvm16InstCombinerImpl8visitAndERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='2871' u='c' c='_ZN4llvm16InstCombinerImpl7visitOrERNS_14BinaryOperatorE'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='3105' ll='3140' type='bool llvm::InstCombinerImpl::sinkNotIntoOtherHandOfAndOrOr(llvm::BinaryOperator &amp; I)'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='3100'>// Transform
//   z = (~x) &amp;/| y
// into:
//   z = ~(x |/&amp; (~y))
// iff y is free to invert and all uses of z can be freely updated.</doc>
