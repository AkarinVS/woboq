<dec f='llvm/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.h' l='49' type='bool llvm::RISCVDAGToDAGISel::MatchSLLIUW(llvm::SDNode * N) const'/>
<use f='llvm/build/lib/Target/RISCV/RISCVGenDAGISel.inc' l='459764' u='c' c='_ZNK4llvm17RISCVDAGToDAGISel18CheckNodePredicateEPNS_6SDNodeEj'/>
<def f='llvm/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp' l='844' ll='862' type='bool llvm::RISCVDAGToDAGISel::MatchSLLIUW(llvm::SDNode * N) const'/>
<doc f='llvm/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp' l='829'>// Check that it is a SLLIUW (Shift Logical Left Immediate Unsigned i32
// on RV64).
// SLLIUW is the same as SLLI except for the fact that it clears the bits
// XLEN-1:32 of the input RS1 before shifting.
// A PatFrag has already checked that it has the right structure:
//
//  (AND (SHL RS1, VC2), VC1)
//
// We check that VC2, the shamt is less than 32, otherwise the pattern is
// exactly the same as SLLI and we give priority to that.
// Eventually we check that VC1, the mask used to clear the upper 32 bits
// of RS1, is correct:
//
//  VC1 == (0xFFFFFFFF &lt;&lt; VC2)
//</doc>
