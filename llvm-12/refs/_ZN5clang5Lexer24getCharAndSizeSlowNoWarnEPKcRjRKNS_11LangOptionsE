<use f='llvm/clang/include/clang/Lex/Lexer.h' l='557' u='c' c='_ZN5clang5Lexer20getCharAndSizeNoWarnEPKcRjRKNS_11LangOptionsE'/>
<dec f='llvm/clang/include/clang/Lex/Lexer.h' l='690' type='static char clang::Lexer::getCharAndSizeSlowNoWarn(const char * Ptr, unsigned int &amp; Size, const clang::LangOptions &amp; LangOpts)'/>
<doc f='llvm/clang/include/clang/Lex/Lexer.h' l='688'>/// getCharAndSizeSlowNoWarn - Same as getCharAndSizeSlow, but never emits a
  /// diagnostic.</doc>
<def f='llvm/clang/lib/Lex/Lexer.cpp' l='1377' ll='1416' type='static char clang::Lexer::getCharAndSizeSlowNoWarn(const char * Ptr, unsigned int &amp; Size, const clang::LangOptions &amp; LangOpts)'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='1394' u='c' c='_ZN5clang5Lexer24getCharAndSizeSlowNoWarnEPKcRjRKNS_11LangOptionsE'/>
<doc f='llvm/clang/lib/Lex/Lexer.cpp' l='1371'>/// getCharAndSizeSlowNoWarn - Handle the slow/uncommon case of the
/// getCharAndSizeNoWarn method.  Here we know that we can accumulate into Size,
/// and that we have already incremented Ptr by Size bytes.
///
/// NOTE: When this method is updated, getCharAndSizeSlow (above) should
/// be updated to match.</doc>
