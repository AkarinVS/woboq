<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/RangedConstraintManager.h' l='124' type='clang::ento::RangeSet clang::ento::RangeSet::Intersect(clang::ento::BasicValueFactory &amp; BV, clang::ento::RangeSet::Factory &amp; F, llvm::APSInt Lower, llvm::APSInt Upper) const'/>
<def f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='253' ll='272' type='clang::ento::RangeSet clang::ento::RangeSet::Intersect(clang::ento::BasicValueFactory &amp; BV, clang::ento::RangeSet::Factory &amp; F, llvm::APSInt Lower, llvm::APSInt Upper) const'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='281' u='c' c='_ZNK5clang4ento8RangeSet9IntersectERNS0_17BasicValueFactoryERN4llvm12ImmutableSetINS0_5RangeENS0_10RangeTraitEE7FactoryERKS1_'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='376' u='c' c='_ZNK5clang4ento8RangeSet6DeleteERNS0_17BasicValueFactoryERN4llvm12ImmutableSetINS0_5RangeENS0_10RangeTraitEE7FactoryERKNS4_6APSIntE'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='1865' u='c' c='_ZN12_GLOBAL__N_122RangeConstraintManager9checkNullEN4llvm18IntrusiveRefCntPtrIKN5clang4ento12ProgramStateEEEPKNS4_7SymExprE'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='2067' u='c' c='_ZN12_GLOBAL__N_122RangeConstraintManager11assumeSymEQEN4llvm18IntrusiveRefCntPtrIKN5clang4ento12ProgramStateEEEPKNS4_7SymExprERKNS1_6APSIntESD_'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='2097' u='c' c='_ZN12_GLOBAL__N_122RangeConstraintManager13getSymLTRangeEN4llvm18IntrusiveRefCntPtrIKN5clang4ento12ProgramStateEEEPKNS4_7SymExprERKNS1_6APSIntESD_'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='2133' u='c' c='_ZN12_GLOBAL__N_122RangeConstraintManager13getSymGTRangeEN4llvm18IntrusiveRefCntPtrIKN5clang4ento12ProgramStateEEEPKNS4_7SymExprERKNS1_6APSIntESD_'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='2169' u='c' c='_ZN12_GLOBAL__N_122RangeConstraintManager13getSymGERangeEN4llvm18IntrusiveRefCntPtrIKN5clang4ento12ProgramStateEEEPKNS4_7SymExprERKNS1_6APSIntESD_'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='2205' u='c' c='_ZN12_GLOBAL__N_122RangeConstraintManager13getSymLERangeEN4llvm12function_refIFN5clang4ento8RangeSetEvEEERKNS1_6APSIntESA_'/>
<doc f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='246'>// Returns a set containing the values in the receiving set, intersected with
// the closed range [Lower, Upper]. Unlike the Range type, this range uses
// modular arithmetic, corresponding to the common treatment of C integer
// overflow. Thus, if the Lower bound is greater than the Upper bound, the
// range is taken to wrap around. This is equivalent to taking the
// intersection with the two ranges [Min, Upper] and [Lower, Max],
// or, alternatively, /removing/ all integers between Upper and Lower.</doc>
