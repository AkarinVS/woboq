<def f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1082' ll='1084' type='bool llvm::MachineInstr::hasExtraSrcRegAllocReq(llvm::MachineInstr::QueryType Type = AnyInBundle) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1076'>/// Returns true if this instruction source operands
  /// have special register allocation requirements that are not captured by the
  /// operand register classes. e.g. ARM::STRD&apos;s two source registers must be an
  /// even / odd pair, ARM::STM registers have to be in ascending order.
  /// Post-register allocation passes should not attempt to change allocations
  /// for sources of instructions with this flag.</doc>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='461' u='c' c='_ZN4llvm24AggressiveAntiDepBreaker15ScanInstructionERNS_12MachineInstrEj'/>
<use f='llvm/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp' l='180' u='c' c='_ZN4llvm22CriticalAntiDepBreaker18PrescanInstructionERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/MachineOperand.cpp' l='133' u='c' c='_ZNK4llvm14MachineOperand11isRenamableEv'/>
