<dec f='llvm/llvm/include/llvm/IR/Value.h' l='637' type='const llvm::Value * llvm::Value::stripPointerCastsAndAliases() const'/>
<use f='llvm/llvm/include/llvm/IR/Value.h' l='640' u='c' c='_ZN4llvm5Value27stripPointerCastsAndAliasesEv'/>
<doc f='llvm/llvm/include/llvm/IR/Value.h' l='633'>/// Strip off pointer casts, all-zero GEPs, address space casts, and aliases.
  ///
  /// Returns the original uncasted value.  If this is called on a non-pointer
  /// value, it returns &apos;this&apos;.</doc>
<def f='llvm/llvm/lib/IR/Value.cpp' l='634' ll='636' type='const llvm::Value * llvm::Value::stripPointerCastsAndAliases() const'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp' l='1803' u='c' c='_ZNK12_GLOBAL__N_122ModuleAddressSanitizer24getExcludedAliasedGlobalERKN4llvm11GlobalAliasE'/>
