<dec f='llvm/lldb/source/Plugins/Process/minidump/RegisterContextMinidump_x86_64.h' l='35' type='lldb::DataBufferSP lldb_private::minidump::ConvertMinidumpContext_x86_64(llvm::ArrayRef&lt;uint8_t&gt; source_data, lldb_private::RegisterInfoInterface * target_reg_interface)'/>
<def f='llvm/lldb/source/Plugins/Process/minidump/RegisterContextMinidump_x86_64.cpp' l='47' ll='110' type='lldb::DataBufferSP lldb_private::minidump::ConvertMinidumpContext_x86_64(llvm::ArrayRef&lt;uint8_t&gt; source_data, lldb_private::RegisterInfoInterface * target_reg_interface)'/>
<doc f='llvm/lldb/source/Plugins/Process/minidump/RegisterContextMinidump_x86_64.h' l='30'>// This function receives an ArrayRef pointing to the bytes of the Minidump
// register context and returns a DataBuffer that&apos;s ordered by the offsets
// specified in the RegisterInfoInterface argument
// This way we can reuse the already existing register contexts</doc>
<use f='llvm/lldb/source/Plugins/Process/minidump/ThreadMinidump.cpp' l='84' u='c' c='_ZN12lldb_private8minidump14ThreadMinidump29CreateRegisterContextForFrameEPNS_10StackFrameE'/>
<use f='llvm/lldb/unittests/Process/minidump/RegisterContextMinidumpTest.cpp' l='119' u='c' c='_ZN58RegisterContextMinidump_ConvertMinidumpContext_x86_64_Test8TestBodyEv'/>
