<dec f='llvm/llvm/include/llvm/Transforms/Utils/LoopUtils.h' l='351' type='bool llvm::canSinkOrHoistInst(llvm::Instruction &amp; I, llvm::AAResults * AA, llvm::DominatorTree * DT, llvm::Loop * CurLoop, llvm::AliasSetTracker * CurAST, llvm::MemorySSAUpdater * MSSAU, bool TargetExecutesOncePerLoop, llvm::SinkAndHoistLICMFlags * LICMFlags = nullptr, llvm::OptimizationRemarkEmitter * ORE = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/LoopUtils.h' l='342'>/// Returns true if is legal to hoist or sink this instruction disregarding the
/// possible introduction of faults.  Reasoning about potential faulting
/// instructions is the responsibility of the caller since it is challenging to
/// do efficiently from within this routine.
/// \p TargetExecutesOncePerLoop is true only when it is guaranteed that the
/// target executes at most once per execution of the loop body.  This is used
/// to assess the legality of duplicating atomic loads.  Generally, this is
/// true when moving out of loop and not true when moving into loops.
/// If \p ORE is set use it to emit optimization remarks.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='544' u='c' c='_ZN4llvm10sinkRegionEPNS_15DomTreeNodeBaseINS_10BasicBlockEEEPNS_9AAResultsEPNS_8LoopInfoEPNS_13DominatorTreeEPNS_18BlockFrequencyInfoEPNS_17TargetLib7188496'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='884' u='c' c='_ZN4llvm11hoistRegionEPNS_15DomTreeNodeBaseINS_10BasicBlockEEEPNS_9AAResultsEPNS_8LoopInfoEPNS_13DominatorTreeEPNS_18BlockFrequencyInfoEPNS_17TargetLi16094382'/>
<def f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='1128' ll='1339' type='bool llvm::canSinkOrHoistInst(llvm::Instruction &amp; I, llvm::AAResults * AA, llvm::DominatorTree * DT, llvm::Loop * CurLoop, llvm::AliasSetTracker * CurAST, llvm::MemorySSAUpdater * MSSAU, bool TargetExecutesOncePerLoop, llvm::SinkAndHoistLICMFlags * Flags = nullptr, llvm::OptimizationRemarkEmitter * ORE = nullptr)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopSink.cpp' l='332' u='c' c='_ZL29sinkLoopInvariantInstructionsRN4llvm4LoopERNS_9AAResultsERNS_8LoopInfoERNS_13DominatorTreeERNS_18BlockFrequencyInfoEPNS_15ScalarEvolutionEPNS_15A14422985'/>
