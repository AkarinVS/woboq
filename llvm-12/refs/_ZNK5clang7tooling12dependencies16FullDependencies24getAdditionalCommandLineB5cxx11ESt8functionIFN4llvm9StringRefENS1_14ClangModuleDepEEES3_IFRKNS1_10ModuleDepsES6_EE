<dec f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningTool.h' l='67' type='std::vector&lt;std::string&gt; clang::tooling::dependencies::FullDependencies::getAdditionalCommandLine(std::function&lt;StringRef (ClangModuleDep)&gt; LookupPCMPath, std::function&lt;const ModuleDeps &amp;(ClangModuleDep)&gt; LookupModuleDeps) const'/>
<def f='llvm/clang/lib/Tooling/DependencyScanning/DependencyScanningTool.cpp' l='16' ll='25' type='std::vector&lt;std::string&gt; clang::tooling::dependencies::FullDependencies::getAdditionalCommandLine(std::function&lt;StringRef (ClangModuleDep)&gt; LookupPCMPath, std::function&lt;const ModuleDeps &amp;(ClangModuleDep)&gt; LookupModuleDeps) const'/>
<doc f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningTool.h' l='57'>/// Gets the full addtional command line suitable for appending to the
  /// original command line to pass to clang.
  ///
  /// \param LookupPCMPath this function is called to fill in `-fmodule-file=`
  ///                      flags and for the `-o` flag. It needs to return a
  ///                      path for where the PCM for the given module is to
  ///                      be located.
  /// \param LookupModuleDeps this fucntion is called to collect the full
  ///                         transitive set of dependencies for this
  ///                         compilation.</doc>
<use f='llvm/clang/tools/clang-scan-deps/ClangScanDeps.cpp' l='263' u='c' c='_ZN8FullDeps9mergeDepsEN4llvm9StringRefEN5clang7tooling12dependencies22FullDependenciesResultEm'/>
