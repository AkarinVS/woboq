<dec f='llvm/polly/lib/External/isl/include/isl/aff.h' l='161' type='isl_aff * isl_aff_pullback_multi_aff(isl_aff * aff, isl_multi_aff * ma)'/>
<use f='llvm/polly/lib/External/isl/include/isl/isl-noexceptions.h' l='4230' u='c' c='_ZNK3isl12noexceptions3aff8pullbackENS0_9multi_affE'/>
<use f='llvm/polly/lib/External/isl/isl_pw_pullback_templ.c' l='55' macro='1' u='c' c='isl_pw_aff_pullback_multi_aff'/>
<def f='llvm/polly/lib/External/isl/isl_aff.c' l='5815' ll='5861' type='isl_aff * isl_aff_pullback_multi_aff(isl_aff * aff, isl_multi_aff * ma)'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='5876' u='c' c='isl_aff_pullback_aff'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='5898' u='c' c='isl_multi_aff_pullback_multi_aff'/>
<doc f='llvm/polly/lib/External/isl/isl_aff.c' l='5796'>/* Compute the pullback of &quot;aff&quot; by the function represented by &quot;ma&quot;.
 * In other words, plug in &quot;ma&quot; in &quot;aff&quot;.  The result is an affine expression
 * defined over the domain space of &quot;ma&quot;.
 *
 * If &quot;aff&quot; is represented by
 *
 *	(a(p) + b x + c(divs))/d
 *
 * and ma is represented by
 *
 *	x = D(p) + F(y) + G(divs&apos;)
 *
 * then the result is
 *
 *	(a(p) + b D(p) + b F(y) + b G(divs&apos;) + c(divs))/d
 *
 * The divs in the local space of the input are similarly adjusted
 * through a call to isl_local_space_preimage_multi_aff.
 */</doc>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='1436' u='c' c='pullback_phase'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='1438' u='c' c='pullback_phase'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='1440' u='c' c='pullback_phase'/>
