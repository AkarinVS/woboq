<inh f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='1712' c='llvm::AbstractState'/>
<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3523' ll='3685'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3687'/>
<fun r='_ZN4llvm20PotentialValuesStateC1Ev'/>
<fun r='_ZN4llvm20PotentialValuesStateC1Eb'/>
<fun r='_ZNK4llvm20PotentialValuesState12isValidStateEv'/>
<fun r='_ZNK4llvm20PotentialValuesState12isAtFixpointEv'/>
<fun r='_ZN4llvm20PotentialValuesState27indicatePessimisticFixpointEv'/>
<fun r='_ZN4llvm20PotentialValuesState26indicateOptimisticFixpointEv'/>
<fun r='_ZN4llvm20PotentialValuesState10getAssumedEv'/>
<fun r='_ZNK4llvm20PotentialValuesState10getAssumedEv'/>
<fun r='_ZNK4llvm20PotentialValuesState13getAssumedSetEv'/>
<fun r='_ZNK4llvm20PotentialValuesState16undefIsContainedEv'/>
<fun r='_ZNK4llvm20PotentialValuesStateeqERKNS_20PotentialValuesStateIT_T0_EE'/>
<smbr r='llvm::PotentialValuesState::MaxPotentialValues' t='unsigned int'/>
<fun r='_ZN4llvm20PotentialValuesState12getBestStateEv'/>
<fun r='_ZN4llvm20PotentialValuesState12getBestStateERNS_20PotentialValuesStateIT_T0_EE'/>
<fun r='_ZN4llvm20PotentialValuesState13getWorstStateEv'/>
<fun r='_ZN4llvm20PotentialValuesState12unionAssumedERKT_'/>
<fun r='_ZN4llvm20PotentialValuesState12unionAssumedERKNS_20PotentialValuesStateIT_T0_EE'/>
<fun r='_ZN4llvm20PotentialValuesState21unionAssumedWithUndefEv'/>
<fun r='_ZN4llvm20PotentialValuesStateeOERKNS_20PotentialValuesStateIT_T0_EE'/>
<fun r='_ZN4llvm20PotentialValuesStateaNERKNS_20PotentialValuesStateIT_T0_EE'/>
<fun r='_ZN4llvm20PotentialValuesState18checkAndInvalidateEv'/>
<fun r='_ZN4llvm20PotentialValuesState16reduceUndefValueEv'/>
<fun r='_ZN4llvm20PotentialValuesState6insertERKT_'/>
<fun r='_ZN4llvm20PotentialValuesState9unionWithERKNS_20PotentialValuesStateIT_T0_EE'/>
<fun r='_ZN4llvm20PotentialValuesState14unionWithUndefEv'/>
<fun r='_ZN4llvm20PotentialValuesState13intersectWithERKNS_20PotentialValuesStateIT_T0_EE'/>
<mbr r='llvm::PotentialValuesState::IsValidState' t='llvm::BooleanState'/>
<mbr r='llvm::PotentialValuesState::Set' t='llvm::PotentialValuesState::SetTy'/>
<mbr r='llvm::PotentialValuesState::UndefIsContained' t='bool'/>
