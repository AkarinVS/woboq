<def f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='531' type='bool llvm::LoopAccessInfo::hasConvergentOp() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='528'>/// Return true if there is a convergent operation in the loop. There may
  /// still be reported runtime pointer checks that would be required, but it is
  /// not legal to insert them.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopDistribute.cpp' l='774' u='c' c='_ZN12_GLOBAL__N_121LoopDistributeForLoop11processLoopERSt8functionIFRKN4llvm14LoopAccessInfoERNS2_4LoopEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopDistribute.cpp' l='800' u='c' c='_ZN12_GLOBAL__N_121LoopDistributeForLoop11processLoopERSt8functionIFRKN4llvm14LoopAccessInfoERNS2_4LoopEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp' l='545' u='c' c='_ZN12_GLOBAL__N_122LoadEliminationForLoop11processLoopEv'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopVersioning.cpp' l='277' u='c' c='_ZN12_GLOBAL__N_17runImplEPN4llvm8LoopInfoENS0_12function_refIFRKNS0_14LoopAccessInfoERNS0_4LoopEEEEPNS0_13DominatorTreeEPNS0_15ScalarEvolutionE'/>
