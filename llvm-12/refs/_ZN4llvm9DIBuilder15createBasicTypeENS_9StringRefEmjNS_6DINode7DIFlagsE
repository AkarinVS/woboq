<dec f='llvm/llvm/include/llvm/IR/DIBuilder.h' l='198' type='llvm::DIBasicType * llvm::DIBuilder::createBasicType(llvm::StringRef Name, uint64_t SizeInBits, unsigned int Encoding, DINode::DIFlags Flags = DINode::FlagZero)'/>
<doc f='llvm/llvm/include/llvm/IR/DIBuilder.h' l='192'>/// Create debugging information entry for a basic
    /// type.
    /// \param Name        Type name.
    /// \param SizeInBits  Size of the type.
    /// \param Encoding    DWARF encoding code, e.g., dwarf::DW_ATE_float.
    /// \param Flags       Optional DWARF attributes, e.g., DW_AT_endianity.</doc>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='850' u='c' c='_ZN5clang7CodeGen11CGDebugInfo10CreateTypeEPKNS_11BuiltinTypeE'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='864' u='c' c='_ZN5clang7CodeGen11CGDebugInfo10CreateTypeEPKNS_10ExtIntTypeE'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='875' u='c' c='_ZN5clang7CodeGen11CGDebugInfo10CreateTypeEPKNS_11ComplexTypeE'/>
<use f='llvm/llvm/examples/Kaleidoscope/Chapter9/toy.cpp' l='839' u='c' c='_ZN9DebugInfo11getDoubleTyEv'/>
<def f='llvm/llvm/lib/IR/DIBuilder.cpp' l='262' ll='268' type='llvm::DIBasicType * llvm::DIBuilder::createBasicType(llvm::StringRef Name, uint64_t SizeInBits, unsigned int Encoding, DINode::DIFlags Flags = DINode::FlagZero)'/>
<use f='llvm/llvm/lib/IR/DebugInfo.cpp' l='1054' u='c' c='LLVMDIBuilderCreateBasicType'/>
<use f='llvm/llvm/lib/Transforms/Utils/Debugify.cpp' l='88' u='c' c='_ZN4llvm21applyDebugifyMetadataERNS_6ModuleENS_14iterator_rangeINS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_8FunctionELb0ELb0EvEELb0ELb0EEE15527186'/>
<use f='llvm/llvm/unittests/IR/IRBuilderTest.cpp' l='746' u='c' c='_ZN12_GLOBAL__N_133IRBuilderTest_createFunction_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/CloningTest.cpp' l='500' u='c' c='_ZN12_GLOBAL__N_19CloneFunc26CreateOldFunctionBodyAndDIEv'/>
