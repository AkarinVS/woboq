<dec f='llvm/polly/include/polly/ScopDetection.h' l='322' type='bool polly::ScopDetection::hasPossiblyDistributableLoop(polly::ScopDetection::DetectionContext &amp; Context) const'/>
<doc f='llvm/polly/include/polly/ScopDetection.h' l='313'>/// Check if the unique affine loop might be amendable to distribution.
  ///
  /// This function checks if the number of non-trivial blocks in the unique
  /// affine loop in Context.CurRegion is at least two, thus if the loop might
  /// be amendable to distribution.
  ///
  /// @param Context  The context of scop detection.
  ///
  /// @return True only if the affine loop might be amendable to distributable.</doc>
<def f='llvm/polly/lib/Analysis/ScopDetection.cpp' l='1586' ll='1604' type='bool polly::ScopDetection::hasPossiblyDistributableLoop(polly::ScopDetection::DetectionContext &amp; Context) const'/>
<use f='llvm/polly/lib/Analysis/ScopDetection.cpp' l='1627' u='c' c='_ZNK5polly13ScopDetection18isProfitableRegionERNS0_16DetectionContextE'/>
