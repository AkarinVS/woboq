<dec f='llvm/llvm/include/llvm/Transforms/Scalar/JumpThreading.h' l='115' type='bool llvm::JumpThreadingPass::processBlock(llvm::BasicBlock * BB)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='431' u='c' c='_ZN4llvm17JumpThreadingPass7runImplERNS_8FunctionEPNS_17TargetLibraryInfoEPNS_13LazyValueInfoEPNS_9AAResultsEPNS_14DomTreeUpdaterEbSt10unique_ptrINS_16218292'/>
<def f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='1027' ll='1248' type='bool llvm::JumpThreadingPass::processBlock(llvm::BasicBlock * BB)'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='1025'>/// processBlock - If there are any predecessors whose control can be threaded
/// through to a successor, transform them now.</doc>
