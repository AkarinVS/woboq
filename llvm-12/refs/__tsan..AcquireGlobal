<dec f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='814' type='void __tsan::AcquireGlobal(__tsan::ThreadState * thr, __sanitizer::uptr pc)'/>
<doc f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='808'>// AcquireGlobal synchronizes the current thread with all other threads.
// In terms of happens-before relation, it draws a HB edge from all threads
// (where they happen to execute right now) to the current thread. We use it to
// handle Go finalizers. Namely, finalizer goroutine executes AcquireGlobal
// right before executing finalizers. This provides a coarse, but simple
// approximation of the actual required synchronization.</doc>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interface_java.cpp' l='172' u='c' c='__tsan_java_finalize'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='425' ll='432' type='void __tsan::AcquireGlobal(__tsan::ThreadState * thr, __sanitizer::uptr pc)'/>
