<dec f='llvm/clang/include/clang/Sema/Sema.h' l='3754' type='bool clang::Sema::ResolveAndFixSingleFunctionTemplateSpecialization(clang::ExprResult &amp; SrcExpr, bool DoFunctionPointerConverion = false, bool Complain = false, clang::SourceRange OpRangeForComplaining = clang::SourceRange(), clang::QualType DestTypeForComplaining = clang::QualType(), unsigned int DiagIDForComplaining = 0)'/>
<use f='llvm/clang/lib/Sema/SemaCast.cpp' l='1100' u='c' c='_ZN12_GLOBAL__N_113CastOperation15CheckStaticCastEv'/>
<use f='llvm/clang/lib/Sema/SemaCast.cpp' l='2073' u='c' c='_ZL32fixOverloadedReinterpretCastExprRN5clang4SemaENS_8QualTypeERNS_12ActionResultIPNS_4ExprELb1EEE'/>
<use f='llvm/clang/lib/Sema/SemaCast.cpp' l='2536' u='c' c='_ZN12_GLOBAL__N_113CastOperation18CheckCXXCStyleCastEbb'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='19269' u='c' c='_ZN5clang4Sema20CheckPlaceholderExprEPNS_4ExprE'/>
<def f='llvm/clang/lib/Sema/SemaOverload.cpp' l='12514' ll='12587' type='bool clang::Sema::ResolveAndFixSingleFunctionTemplateSpecialization(clang::ExprResult &amp; SrcExpr, bool doFunctionPointerConverion = false, bool complain = false, clang::SourceRange OpRangeForComplaining = clang::SourceRange(), clang::QualType DestTypeForComplaining = clang::QualType(), unsigned int DiagIDForComplaining = 0)'/>
<doc f='llvm/clang/lib/Sema/SemaOverload.cpp' l='12506'>// Resolve and fix an overloaded expression that can be resolved
// because it identifies a single function template specialization.
//
// Last three arguments should only be supplied if Complain = true
//
// Return true if it was logically possible to so resolve the
// expression, regardless of whether or not it succeeded.  Always
// returns true if &apos;complain&apos; is set.</doc>
