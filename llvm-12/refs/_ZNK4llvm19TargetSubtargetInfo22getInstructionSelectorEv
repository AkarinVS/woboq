<def f='llvm/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h' l='110' ll='112' type='llvm::InstructionSelector * llvm::TargetSubtargetInfo::getInstructionSelector() const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h' l='106'>// FIXME: This lets targets specialize the selector by subtarget (which lets
  // us do things like a dedicated avx512 selector).  However, we might want
  // to also specialize selectors by MachineFunction, which would let us be
  // aware of optsize/optnone and such.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/InstructionSelect.cpp' l='77' u='c' c='_ZN4llvm17InstructionSelect20runOnMachineFunctionERNS_15MachineFunctionE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64Subtarget.cpp' l='245' c='_ZNK4llvm16AArch64Subtarget22getInstructionSelectorEv'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/GCNSubtarget.h' l='232' c='_ZNK4llvm12GCNSubtarget22getInstructionSelectorEv'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMSubtarget.cpp' l='131' c='_ZNK4llvm12ARMSubtarget22getInstructionSelectorEv'/>
<ovr f='llvm/llvm/lib/Target/Mips/MipsSubtarget.cpp' l='293' c='_ZNK4llvm13MipsSubtarget22getInstructionSelectorEv'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCSubtarget.cpp' l='261' c='_ZNK4llvm12PPCSubtarget22getInstructionSelectorEv'/>
<ovr f='llvm/llvm/lib/Target/RISCV/RISCVSubtarget.cpp' l='73' c='_ZNK4llvm14RISCVSubtarget22getInstructionSelectorEv'/>
<ovr f='llvm/llvm/lib/Target/X86/X86Subtarget.cpp' l='329' c='_ZNK4llvm12X86Subtarget22getInstructionSelectorEv'/>
