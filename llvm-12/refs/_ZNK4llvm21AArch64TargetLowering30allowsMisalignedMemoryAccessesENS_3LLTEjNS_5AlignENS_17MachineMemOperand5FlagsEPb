<dec f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.h' l='495' type='bool llvm::AArch64TargetLowering::allowsMisalignedMemoryAccesses(llvm::LLT Ty, unsigned int AddrSpace, llvm::Align Alignment, MachineMemOperand::Flags Flags, bool * Fast = nullptr) const'/>
<doc f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.h' l='494'>/// LLT variant.</doc>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1617' c='_ZNK4llvm18TargetLoweringBase30allowsMisalignedMemoryAccessesENS_3LLTEjNS_5AlignENS_17MachineMemOperand5FlagsEPb'/>
<def f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='1687' ll='1710' type='bool llvm::AArch64TargetLowering::allowsMisalignedMemoryAccesses(llvm::LLT Ty, unsigned int AddrSpace, llvm::Align Alignment, MachineMemOperand::Flags Flags, bool * Fast = nullptr) const'/>
<doc f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='1686'>// Same as above but handling LLTs instead.</doc>
