<dec f='llvm/polly/include/polly/DeLICM.h' l='35' type='bool polly::isConflicting(isl::union_set ExistingOccupied, isl::union_set ExistingUnused, isl::union_map ExistingKnown, isl::union_map ExistingWrites, isl::union_set ProposedOccupied, isl::union_set ProposedUnused, isl::union_map ProposedKnown, isl::union_map ProposedWrites, llvm::raw_ostream * OS = nullptr, unsigned int Indent = 0)'/>
<def f='llvm/polly/lib/Transform/DeLICM.cpp' l='1432' ll='1444' type='bool polly::isConflicting(isl::union_set ExistingOccupied, isl::union_set ExistingUnused, isl::union_map ExistingKnown, isl::union_map ExistingWrites, isl::union_set ProposedOccupied, isl::union_set ProposedUnused, isl::union_map ProposedKnown, isl::union_map ProposedWrites, llvm::raw_ostream * OS = nullptr, unsigned int Indent = 0)'/>
<doc f='llvm/polly/include/polly/DeLICM.h' l='32'>/// Determine whether two lifetimes are conflicting.
///
/// Used by unittesting.</doc>
<use f='llvm/polly/unittests/DeLICM/DeLICMTest.cpp' l='136' u='c' c='_ZN12_GLOBAL__N_136checkIsConflictingNonsymmetricCommonEP7isl_ctxN3isl12noexceptions9union_mapENS3_9union_setES4_S4_S5_S4_'/>
<use f='llvm/polly/unittests/DeLICM/DeLICMTest.cpp' l='144' u='c' c='_ZN12_GLOBAL__N_136checkIsConflictingNonsymmetricCommonEP7isl_ctxN3isl12noexceptions9union_mapENS3_9union_setES4_S4_S5_S4_'/>
<use f='llvm/polly/unittests/DeLICM/DeLICMTest.cpp' l='148' u='c' c='_ZN12_GLOBAL__N_136checkIsConflictingNonsymmetricCommonEP7isl_ctxN3isl12noexceptions9union_mapENS3_9union_setES4_S4_S5_S4_'/>
<use f='llvm/polly/unittests/DeLICM/DeLICMTest.cpp' l='151' u='c' c='_ZN12_GLOBAL__N_136checkIsConflictingNonsymmetricCommonEP7isl_ctxN3isl12noexceptions9union_mapENS3_9union_setES4_S4_S5_S4_'/>
