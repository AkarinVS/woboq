<dec f='llvm/polly/include/polly/ScopDetection.h' l='250' type='bool polly::ScopDetection::hasValidArraySizes(polly::ScopDetection::DetectionContext &amp; Context, SmallVectorImpl&lt;const llvm::SCEV *&gt; &amp; Sizes, const llvm::SCEVUnknown * BasePointer, llvm::Loop * Scope) const'/>
<doc f='llvm/polly/include/polly/ScopDetection.h' l='242'>/// Check if the dimension size of a delinearized array is valid.
  ///
  /// @param Context     The current detection context.
  /// @param Sizes       The sizes of the different array dimensions.
  /// @param BasePointer The base pointer we are interested in.
  /// @param Scope       The location where @p BasePointer is being used.
  /// @returns True if one or more array sizes could be derived - meaning: we
  ///          see this array as multi-dimensional.</doc>
<def f='llvm/polly/lib/Analysis/ScopDetection.cpp' l='906' ll='963' type='bool polly::ScopDetection::hasValidArraySizes(polly::ScopDetection::DetectionContext &amp; Context, SmallVectorImpl&lt;const llvm::SCEV *&gt; &amp; Sizes, const llvm::SCEVUnknown * BasePointer, llvm::Loop * Scope) const'/>
<use f='llvm/polly/lib/Analysis/ScopDetection.cpp' l='1033' u='c' c='_ZNK5polly13ScopDetection21hasBaseAffineAccessesERNS0_16DetectionContextEPKN4llvm11SCEVUnknownEPNS3_4LoopE'/>
