<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2560' type='clang::Parser::TPResult clang::Parser::TryParseInitDeclaratorList()'/>
<use f='llvm/clang/lib/Parse/ParseCXXInlineMethods.cpp' l='1189' u='c' c='_ZN5clang6Parser26ConsumeAndStoreInitializerERN4llvm11SmallVectorINS_5TokenELj4EEENS0_14CachedInitKindE'/>
<use f='llvm/clang/lib/Parse/ParseTentative.cpp' l='242' u='c' c='_ZN5clang6Parser25TryParseSimpleDeclarationEb'/>
<def f='llvm/clang/lib/Parse/ParseTentative.cpp' l='279' ll='325' type='Parser::TPResult clang::Parser::TryParseInitDeclaratorList()'/>
<doc f='llvm/clang/lib/Parse/ParseTentative.cpp' l='252'>/// Tentatively parse an init-declarator-list in order to disambiguate it from
/// an expression.
///
///       init-declarator-list:
///         init-declarator
///         init-declarator-list &apos;,&apos; init-declarator
///
///       init-declarator:
///         declarator initializer[opt]
/// [GNU]   declarator simple-asm-expr[opt] attributes[opt] initializer[opt]
///
///       initializer:
///         brace-or-equal-initializer
///         &apos;(&apos; expression-list &apos;)&apos;
///
///       brace-or-equal-initializer:
///         &apos;=&apos; initializer-clause
/// [C++11] braced-init-list
///
///       initializer-clause:
///         assignment-expression
///         braced-init-list
///
///       braced-init-list:
///         &apos;{&apos; initializer-list &apos;,&apos;[opt] &apos;}&apos;
///         &apos;{&apos; &apos;}&apos;
///</doc>
