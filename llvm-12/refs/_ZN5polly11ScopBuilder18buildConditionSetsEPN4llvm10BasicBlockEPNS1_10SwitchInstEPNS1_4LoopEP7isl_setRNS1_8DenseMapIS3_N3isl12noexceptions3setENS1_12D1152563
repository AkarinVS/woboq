<dec f='llvm/polly/include/polly/ScopBuilder.h' l='194' type='bool polly::ScopBuilder::buildConditionSets(llvm::BasicBlock * BB, llvm::SwitchInst * SI, llvm::Loop * L, isl_set * Domain, DenseMap&lt;llvm::BasicBlock *, isl::set&gt; &amp; InvalidDomainMap, SmallVectorImpl&lt;isl_set *&gt; &amp; ConditionSets)'/>
<def f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='395' ll='430' type='bool polly::ScopBuilder::buildConditionSets(llvm::BasicBlock * BB, llvm::SwitchInst * SI, llvm::Loop * L, isl_set * Domain, DenseMap&lt;llvm::BasicBlock *, isl::set&gt; &amp; InvalidDomainMap, SmallVectorImpl&lt;isl_set *&gt; &amp; ConditionSets)'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='571' u='c' c='_ZN5polly11ScopBuilder18buildConditionSetsEPN4llvm10BasicBlockEPNS1_11InstructionEPNS1_4LoopEP7isl_setRNS1_8DenseMapIS3_N3isl12noexceptions3setENS1_1213831191'/>
<doc f='llvm/polly/include/polly/ScopBuilder.h' l='189'>/// Build the conditions sets for the switch @p SI in the @p Domain.
  ///
  /// This will fill @p ConditionSets with the conditions under which control
  /// will be moved from @p SI to its successors. Hence, @p ConditionSets will
  /// have as many elements as @p SI has successors.</doc>
