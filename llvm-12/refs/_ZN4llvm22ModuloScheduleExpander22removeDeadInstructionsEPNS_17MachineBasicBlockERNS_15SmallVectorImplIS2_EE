<dec f='llvm/llvm/include/llvm/CodeGen/ModuloSchedule.h' l='204' type='void llvm::ModuloScheduleExpander::removeDeadInstructions(llvm::MachineBasicBlock * KernelBB, llvm::ModuloScheduleExpander::MBBVectorTy &amp; EpilogBBs)'/>
<use f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='173' u='c' c='_ZN4llvm22ModuloScheduleExpander21generatePipelinedLoopEv'/>
<def f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='701' ll='773' type='void llvm::ModuloScheduleExpander::removeDeadInstructions(llvm::MachineBasicBlock * KernelBB, llvm::ModuloScheduleExpander::MBBVectorTy &amp; EpilogBBs)'/>
<doc f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='697'>/// Remove instructions that generate values with no uses.
/// Typically, these are induction variable operations that generate values
/// used in the loop itself.  A dead instruction has a definition with
/// no uses, or uses that occur in the original loop only.</doc>
