<dec f='include/link.h' l='76' type='Elf64_Dyn []'/>
<dec f='llvm/compiler-rt/lib/asan/asan_linux.cpp' l='58' type='Elf64_Dyn []'/>
<use f='llvm/compiler-rt/lib/asan/asan_linux.cpp' l='88' u='a' c='__asan::AsanDoesNotSupportStaticLinkage'/>
<doc f='include/link.h' l='69'>/* This symbol refers to the &quot;dynamic structure&quot; in the `.dynamic&apos; section
   of whatever module refers to `_DYNAMIC&apos;.  So, to find its own
   `struct r_debug&apos;, a program could do:
     for (dyn = _DYNAMIC; dyn-&gt;d_tag != DT_NULL; ++dyn)
       if (dyn-&gt;d_tag == DT_DEBUG)
	 r_debug = (struct r_debug *) dyn-&gt;d_un.d_ptr;
   */</doc>
<dec f='llvm/compiler-rt/lib/memprof/memprof_linux.cpp' l='42' type='Elf64_Dyn []'/>
<use f='llvm/compiler-rt/lib/memprof/memprof_linux.cpp' l='63' u='a' c='__memprof::MemprofDoesNotSupportStaticLinkage'/>
