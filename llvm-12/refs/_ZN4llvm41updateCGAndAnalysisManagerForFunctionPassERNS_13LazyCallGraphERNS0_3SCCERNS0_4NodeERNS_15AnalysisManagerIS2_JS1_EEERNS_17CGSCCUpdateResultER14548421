<dec f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='435' type='LazyCallGraph::SCC &amp; llvm::updateCGAndAnalysisManagerForFunctionPass(llvm::LazyCallGraph &amp; G, LazyCallGraph::SCC &amp; C, LazyCallGraph::Node &amp; N, llvm::CGSCCAnalysisManager &amp; AM, llvm::CGSCCUpdateResult &amp; UR, llvm::FunctionAnalysisManager &amp; FAM)'/>
<doc f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='429'>/// Helper to update the call graph after running a function pass.
///
/// Function passes can only mutate the call graph in specific ways. This
/// routine provides a helper that updates the call graph in those ways
/// including returning whether any changes were made and populating a CG
/// update result struct for the overall CGSCC walk.</doc>
<use f='llvm/llvm/lib/Analysis/CGSCCPassManager.cpp' l='577' u='c' c='_ZN4llvm26CGSCCToFunctionPassAdaptor3runERNS_13LazyCallGraph3SCCERNS_15AnalysisManagerIS2_JRS1_EEES5_RNS_17CGSCCUpdateResultE'/>
<def f='llvm/llvm/lib/Analysis/CGSCCPassManager.cpp' l='1221' ll='1227' type='LazyCallGraph::SCC &amp; llvm::updateCGAndAnalysisManagerForFunctionPass(llvm::LazyCallGraph &amp; G, LazyCallGraph::SCC &amp; InitialC, LazyCallGraph::Node &amp; N, llvm::CGSCCAnalysisManager &amp; AM, llvm::CGSCCUpdateResult &amp; UR, llvm::FunctionAnalysisManager &amp; FAM)'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/CoroSplit.cpp' l='1812' u='c' c='_ZL34updateCallGraphAfterCoroutineSplitRN4llvm13LazyCallGraph4NodeERKNS_4coro5ShapeERKNS_15SmallVectorImplIPNS_8FunctionEEERNS0_3SCCERS0_RNS_15Analysi11823215'/>
<use f='llvm/llvm/unittests/Analysis/CGSCCPassManagerTest.cpp' l='1211' u='c' c='_ZN12_GLOBAL__N_161CGSCCPassManagerTest_TestAnalysisInvalidationCGSCCUpdate_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/CGSCCPassManagerTest.cpp' l='1257' u='c' c='_ZN12_GLOBAL__N_161CGSCCPassManagerTest_TestAnalysisInvalidationCGSCCUpdate_Test8TestBodyEv'/>
