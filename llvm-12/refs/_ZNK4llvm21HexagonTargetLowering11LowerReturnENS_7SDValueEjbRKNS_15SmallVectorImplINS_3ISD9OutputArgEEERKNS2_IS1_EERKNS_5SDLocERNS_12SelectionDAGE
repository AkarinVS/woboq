<dec f='llvm/llvm/lib/Target/Hexagon/HexagonISelLowering.h' l='231' type='llvm::SDValue llvm::HexagonTargetLowering::LowerReturn(llvm::SDValue Chain, CallingConv::ID CallConv, bool isVarArg, const SmallVectorImpl&lt;ISD::OutputArg&gt; &amp; Outs, const SmallVectorImpl&lt;llvm::SDValue&gt; &amp; OutVals, const llvm::SDLoc &amp; dl, llvm::SelectionDAG &amp; DAG) const'/>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3922' c='_ZNK4llvm14TargetLowering11LowerReturnENS_7SDValueEjbRKNS_15SmallVectorImplINS_3ISD9OutputArgEEERKNS2_IS1_EERKNS_5SDLocERNS_12SelectionDAGE'/>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp' l='197' ll='237' type='llvm::SDValue llvm::HexagonTargetLowering::LowerReturn(llvm::SDValue Chain, CallingConv::ID CallConv, bool IsVarArg, const SmallVectorImpl&lt;ISD::OutputArg&gt; &amp; Outs, const SmallVectorImpl&lt;llvm::SDValue&gt; &amp; OutVals, const llvm::SDLoc &amp; dl, llvm::SelectionDAG &amp; DAG) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp' l='194'>// LowerReturn - Lower ISD::RET. If a struct is larger than 8 bytes and is
// passed by value, the function prototype is modified to return void and
// the value is stored in memory pointed by a pointer passed by caller.</doc>
