<def f='llvm/llvm/include/llvm/ADT/APFloat.h' l='1189' ll='1194' type='bool llvm::APFloat::isExactlyValue(double V) const'/>
<doc f='llvm/llvm/include/llvm/ADT/APFloat.h' l='1181'>/// We don&apos;t rely on operator== working on double values, as
  /// it returns true for things that are clearly not equal, like -0.0 and 0.0.
  /// As such, this method can be used to do an exact bit-for-bit comparison of
  /// two floating point values.
  ///
  /// We leave the version with the double argument here because it&apos;s just so
  /// convenient to write &quot;2.0&quot; and the like.  Without this function we&apos;d
  /// have to duplicate its logic everywhere it&apos;s called.</doc>
<use f='llvm/llvm/include/llvm/CodeGen/SelectionDAGNodes.h' l='1614' u='c' c='_ZNK4llvm16ConstantFPSDNode14isExactlyValueEd'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='14012' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner9visitFPOWEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='14013' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner9visitFPOWEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='14039' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner9visitFPOWEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='14040' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner9visitFPOWEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='7539' u='c' c='_ZN4llvm12SelectionDAG15simplifyFPBinopEjNS_7SDValueES1_NS_11SDNodeFlagsE'/>
<use f='llvm/build/lib/Target/AArch64/AArch64GenDAGISel.inc' l='159621' u='c' c='_ZNK12_GLOBAL__N_119AArch64DAGToDAGISel18CheckNodePredicateEPN4llvm6SDNodeEj'/>
<use f='llvm/build/lib/Target/AArch64/AArch64GenGlobalISel.inc' l='1036' u='c' c='_ZNK12_GLOBAL__N_126AArch64InstructionSelector24testImmPredicate_APFloatEjRKN4llvm7APFloatE'/>
<use f='llvm/build/lib/Target/X86/X86GenDAGISel.inc' l='288944' u='c' c='_ZNK12_GLOBAL__N_115X86DAGToDAGISel18CheckNodePredicateEPN4llvm6SDNodeEj'/>
<use f='llvm/build/lib/Target/X86/X86GenDAGISel.inc' l='288951' u='c' c='_ZNK12_GLOBAL__N_115X86DAGToDAGISel18CheckNodePredicateEPN4llvm6SDNodeEj'/>
<use f='llvm/build/lib/Target/X86/X86GenDAGISel.inc' l='288958' u='c' c='_ZNK12_GLOBAL__N_115X86DAGToDAGISel18CheckNodePredicateEPN4llvm6SDNodeEj'/>
<use f='llvm/build/lib/Target/X86/X86GenDAGISel.inc' l='288965' u='c' c='_ZNK12_GLOBAL__N_115X86DAGToDAGISel18CheckNodePredicateEPN4llvm6SDNodeEj'/>
<use f='llvm/build/lib/Target/X86/X86GenGlobalISel.inc' l='790' u='c' c='_ZNK12_GLOBAL__N_122X86InstructionSelector24testImmPredicate_APFloatEjRKN4llvm7APFloatE'/>
<use f='llvm/build/lib/Target/X86/X86GenGlobalISel.inc' l='797' u='c' c='_ZNK12_GLOBAL__N_122X86InstructionSelector24testImmPredicate_APFloatEjRKN4llvm7APFloatE'/>
<use f='llvm/build/lib/Target/X86/X86GenGlobalISel.inc' l='804' u='c' c='_ZNK12_GLOBAL__N_122X86InstructionSelector24testImmPredicate_APFloatEjRKN4llvm7APFloatE'/>
<use f='llvm/build/lib/Target/X86/X86GenGlobalISel.inc' l='811' u='c' c='_ZNK12_GLOBAL__N_122X86InstructionSelector24testImmPredicate_APFloatEjRKN4llvm7APFloatE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='1648' u='c' c='_ZN4llvm17LibCallSimplifier18replacePowWithSqrtEPNS_8CallInstERNS_13IRBuilderBaseE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='1648' u='c' c='_ZN4llvm17LibCallSimplifier18replacePowWithSqrtEPNS_8CallInstERNS_13IRBuilderBaseE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='1751' u='c' c='_ZN4llvm17LibCallSimplifier11optimizePowEPNS_8CallInstERNS_13IRBuilderBaseE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='1751' u='c' c='_ZN4llvm17LibCallSimplifier11optimizePowEPNS_8CallInstERNS_13IRBuilderBaseE'/>
