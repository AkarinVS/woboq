<dec f='llvm/llvm/lib/Bitcode/Reader/MetadataLoader.cpp' l='453' type='Expected&lt;bool&gt; llvm::MetadataLoader::MetadataLoaderImpl::loadGlobalDeclAttachments()'/>
<def f='llvm/llvm/lib/Bitcode/Reader/MetadataLoader.cpp' l='896' ll='966' type='Expected&lt;bool&gt; llvm::MetadataLoader::MetadataLoaderImpl::loadGlobalDeclAttachments()'/>
<use f='llvm/llvm/lib/Bitcode/Reader/MetadataLoader.cpp' l='1000' u='c' c='_ZN4llvm14MetadataLoader18MetadataLoaderImpl13parseMetadataEb'/>
<doc f='llvm/llvm/lib/Bitcode/Reader/MetadataLoader.cpp' l='452'>/// Load the global decl attachments, using the index built for lazy loading.</doc>
<doc f='llvm/llvm/lib/Bitcode/Reader/MetadataLoader.cpp' l='891'>// Load the global decl attachments after building the lazy loading index.
// We don&apos;t load them &quot;lazily&quot; - all global decl attachments must be
// parsed since they aren&apos;t materialized on demand. However, by delaying
// their parsing until after the index is created, we can use the index
// instead of creating temporaries.</doc>
