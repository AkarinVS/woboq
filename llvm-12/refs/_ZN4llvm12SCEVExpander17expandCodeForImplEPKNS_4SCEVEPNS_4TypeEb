<use f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='274' u='c' c='_ZN4llvm12SCEVExpander13expandCodeForEPKNS_4SCEVEPNS_4TypeE'/>
<dec f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='391' type='llvm::Value * llvm::SCEVExpander::expandCodeForImpl(const llvm::SCEV * SH, llvm::Type * Ty, bool Root)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='385'>/// Insert code to directly compute the specified SCEV expression into the
  /// program. The code is inserted into the SCEVExpander&apos;s current
  /// insertion point. If a type is specified, the result will be expanded to
  /// have that type, with a cast if necessary. If \p Root is true, this
  /// indicates that \p SH is the top-level expression to expand passed from
  /// an external client call.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='487' u='c' c='_ZN4llvm12SCEVExpander14expandAddToGEPEPKPKNS_4SCEVES5_PNS_11PointerTypeEPNS_4TypeEPNS_5ValueE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='546' u='c' c='_ZN4llvm12SCEVExpander14expandAddToGEPEPKPKNS_4SCEVES5_PNS_11PointerTypeEPNS_4TypeEPNS_5ValueE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='767' u='c' c='_ZN4llvm12SCEVExpander12visitAddExprEPKNS_11SCEVAddExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='774' u='c' c='_ZN4llvm12SCEVExpander12visitAddExprEPKNS_11SCEVAddExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='826' u='c' c='_ZN4llvm12SCEVExpander12visitMulExprEPKNS_11SCEVMulExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='885' u='c' c='_ZN4llvm12SCEVExpander13visitUDivExprEPKNS_12SCEVUDivExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='894' u='c' c='_ZN4llvm12SCEVExpander13visitUDivExprEPKNS_12SCEVUDivExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1498' u='c' c='_ZN4llvm12SCEVExpander25expandAddRecExprLiterallyEPKNS_14SCEVAddRecExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1506' u='c' c='_ZN4llvm12SCEVExpander25expandAddRecExprLiterallyEPKNS_14SCEVAddRecExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1513' u='c' c='_ZN4llvm12SCEVExpander25expandAddRecExprLiterallyEPKNS_14SCEVAddRecExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1521' u='c' c='_ZN4llvm12SCEVExpander25expandAddRecExprLiterallyEPKNS_14SCEVAddRecExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1679' u='c' c='_ZN4llvm12SCEVExpander17visitPtrToIntExprEPKNS_16SCEVPtrToIntExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1685' u='c' c='_ZN4llvm12SCEVExpander17visitTruncateExprEPKNS_16SCEVTruncateExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1693' u='c' c='_ZN4llvm12SCEVExpander19visitZeroExtendExprEPKNS_18SCEVZeroExtendExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1701' u='c' c='_ZN4llvm12SCEVExpander19visitSignExtendExprEPKNS_18SCEVSignExtendExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1718' u='c' c='_ZN4llvm12SCEVExpander13visitSMaxExprEPKNS_12SCEVSMaxExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1741' u='c' c='_ZN4llvm12SCEVExpander13visitUMaxExprEPKNS_12SCEVUMaxExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1764' u='c' c='_ZN4llvm12SCEVExpander13visitSMinExprEPKNS_12SCEVSMinExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1787' u='c' c='_ZN4llvm12SCEVExpander13visitUMinExprEPKNS_12SCEVUMinExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1802' u='c' c='_ZN4llvm12SCEVExpander17expandCodeForImplEPKNS_4SCEVEPNS_4TypeEPNS_11InstructionEb'/>
<def f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1806' ll='1844' type='llvm::Value * llvm::SCEVExpander::expandCodeForImpl(const llvm::SCEV * SH, llvm::Type * Ty, bool Root)'/>
