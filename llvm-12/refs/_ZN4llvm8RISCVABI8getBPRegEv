<dec f='llvm/llvm/lib/Target/RISCV/MCTargetDesc/RISCVBaseInfo.h' l='245' type='llvm::MCRegister llvm::RISCVABI::getBPReg()'/>
<doc f='llvm/llvm/lib/Target/RISCV/MCTargetDesc/RISCVBaseInfo.h' l='244'>// Returns the register used to hold the stack pointer after realignment.</doc>
<def f='llvm/llvm/lib/Target/RISCV/MCTargetDesc/RISCVBaseInfo.cpp' l='81' type='llvm::MCRegister llvm::RISCVABI::getBPReg()'/>
<doc f='llvm/llvm/lib/Target/RISCV/MCTargetDesc/RISCVBaseInfo.cpp' l='78'>// To avoid the BP value clobbered by a function call, we need to choose a
// callee saved register to save the value. RV32E only has X8 and X9 as callee
// saved registers and X8 will be used as fp. So we choose X9 as bp.</doc>
<use f='llvm/llvm/lib/Target/RISCV/RISCVFrameLowering.cpp' l='316' u='c' c='_ZNK4llvm18RISCVFrameLowering12emitPrologueERNS_15MachineFunctionERNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/RISCV/RISCVFrameLowering.cpp' l='607' u='c' c='_ZNK4llvm18RISCVFrameLowering22getFrameIndexReferenceERKNS_15MachineFunctionEiRNS_8RegisterE'/>
<use f='llvm/llvm/lib/Target/RISCV/RISCVFrameLowering.cpp' l='640' u='c' c='_ZNK4llvm18RISCVFrameLowering20determineCalleeSavesERNS_15MachineFunctionERNS_9BitVectorEPNS_12RegScavengerE'/>
<use f='llvm/llvm/lib/Target/RISCV/RISCVRegisterInfo.cpp' l='96' u='c' c='_ZNK4llvm17RISCVRegisterInfo15getReservedRegsERKNS_15MachineFunctionE'/>
