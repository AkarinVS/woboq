<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_atomic.h' l='44' ll='47'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_mutex.h' l='140'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='55'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_thread_registry.h' l='56'/>
<size>4</size>
<mbr r='__sanitizer::atomic_uint32_t::val_dont_use' o='0' t='volatile __sanitizer::atomic_uint32_t::Type'/>
<use f='llvm/compiler-rt/lib/asan/asan_rtl.cpp' l='43' c='__asan::AsanDie'/>
<use f='llvm/compiler-rt/lib/asan/asan_rtl.cpp' l='72' c='__asan::AsanCheckFailed'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/asan/asan_stack.cpp' l='19'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_suppressions.h' l='25'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/ubsan/ubsan_value.h' l='61' c='__ubsan::SourceLocation::acquire'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/memprof/memprof_rtl.cpp' l='37' c='__memprof::MemprofDie'/>
<use f='llvm/compiler-rt/lib/memprof/memprof_rtl.cpp' l='58' c='__memprof::MemprofCheckFailed'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/memprof/memprof_stack.cpp' l='19'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/msan/msan.cpp' l='102'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_stackdepotbase.h' l='55'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.cpp' l='25'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='646' c='__sanitizer::BlockingMutex::Lock'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='646' c='__sanitizer::BlockingMutex::Lock'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='662' c='__sanitizer::BlockingMutex::Unlock'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='662' c='__sanitizer::BlockingMutex::Unlock'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='677' c='__sanitizer::BlockingMutex::CheckLocked'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='677' c='__sanitizer::BlockingMutex::CheckLocked'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_stackdepot.cpp' l='24'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_termination.cpp' l='71' c='__sanitizer::CheckFailed'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.h' l='62'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='541'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='93' c='__tsan::ref_ptr'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='94' c='__tsan::ref_ptr'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='100' c='__tsan::UnrefClockBlock'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='350' c='__tsan::ThreadClock::ReleaseStore'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='517' c='__tsan::SyncClock::IsShared'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_external.cpp' l='29'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='858' c='__cxa_guard_acquire'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='876' c='__cxa_guard_release'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='882' c='__cxa_guard_abort'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='1467' c='__interceptor_pthread_once'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='1470' c='__interceptor_pthread_once'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='1472' c='__interceptor_pthread_once'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='1475' c='__interceptor_pthread_once'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interface_atomic.cpp' l='188' c='_ZL9to_atomicPVKj'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interface_atomic.cpp' l='189' c='_ZL9to_atomicPVKj'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.cpp' l='436' c='__tsan::MaybeSpawnBackgroundThread'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.cpp' l='247' c='__tsan::MetaMap::GetAndLock'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/ubsan_minimal/ubsan_minimal_handlers.cpp' l='21'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/xray/xray_interface.cpp' l='84'/>
<size>4</size>
