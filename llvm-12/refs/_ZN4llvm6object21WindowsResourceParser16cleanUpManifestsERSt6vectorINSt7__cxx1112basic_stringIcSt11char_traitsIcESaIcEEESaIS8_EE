<dec f='llvm/llvm/include/llvm/Object/WindowsResource.h' l='160' type='void llvm::object::WindowsResourceParser::cleanUpManifests(std::vector&lt;std::string&gt; &amp; Duplicates)'/>
<use f='llvm/lld/COFF/DriverUtils.cpp' l='739' u='c' c='_ZN3lld4coff16convertResToCOFFEN4llvm8ArrayRefINS1_15MemoryBufferRefEEENS2_IPNS0_7ObjFileEEE'/>
<def f='llvm/llvm/lib/Object/WindowsResource.cpp' l='263' ll='306' type='void llvm::object::WindowsResourceParser::cleanUpManifests(std::vector&lt;std::string&gt; &amp; Duplicates)'/>
<doc f='llvm/llvm/lib/Object/WindowsResource.cpp' l='255'>// MinGW specific. Remove default manifests (with language zero) if there are
// other manifests present, and report an error if there are more than one
// manifest with a non-zero language code.
// GCC has the concept of a default manifest resource object, which gets
// linked in implicitly if present. This default manifest has got language
// id zero, and should be dropped silently if there&apos;s another manifest present.
// If the user resources surprisignly had a manifest with language id zero,
// we should also ignore the duplicate default manifest.</doc>
