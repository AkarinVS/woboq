<dec f='llvm/clang/include/clang/Lex/Lexer.h' l='681' type='static unsigned int clang::Lexer::getEscapedNewLineSize(const char * P)'/>
<doc f='llvm/clang/include/clang/Lex/Lexer.h' l='678'>/// getEscapedNewLineSize - Return the size of the specified escaped newline,
  /// or 0 if it is not an escaped newline. P[-1] is known to be a &quot;\&quot; on entry
  /// to this function.</doc>
<def f='llvm/clang/lib/Lex/Lexer.cpp' l='1195' ll='1213' type='static unsigned int clang::Lexer::getEscapedNewLineSize(const char * Ptr)'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='1234' u='c' c='_ZN5clang5Lexer19SkipEscapedNewLinesEPKc'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='1331' u='c' c='_ZN5clang5Lexer18getCharAndSizeSlowEPKcRjPNS_5TokenE'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='1388' u='c' c='_ZN5clang5Lexer24getCharAndSizeSlowNoWarnEPKcRjRKNS_11LangOptionsE'/>
<doc f='llvm/clang/lib/Lex/Lexer.cpp' l='1192'>/// getEscapedNewLineSize - Return the size of the specified escaped newline,
/// or 0 if it is not an escaped newline. P[-1] is known to be a &quot;\&quot; or a
/// trigraph equivalent on entry to this function.</doc>
