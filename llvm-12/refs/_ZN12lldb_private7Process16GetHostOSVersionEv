<def f='llvm/lldb/include/lldb/Target/Process.h' l='1181' type='llvm::VersionTuple lldb_private::Process::GetHostOSVersion()'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='1170'>/// Sometimes the connection to a process can detect the host OS version
  /// that the process is running on. The current platform should be checked
  /// first in case the platform is connected, but clients can fall back onto
  /// this function if the platform fails to identify the host OS version. The
  /// platform should be checked first in case you are running a simulator
  /// platform that might itself be running natively, but have different
  /// heuristics for figuring out which OS is is emulating.
  ///
  /// \return
  ///     Returns the version tuple of the host OS. In case of failure an empty
  ///     VersionTuple is returner.</doc>
<use f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderDarwin.cpp' l='1157' u='c' c='_ZN12lldb_private19DynamicLoaderDarwin10UseDYLDSPIEPNS_7ProcessE'/>
<ovr f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='4264' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote16GetHostOSVersionEv'/>
<use f='llvm/lldb/source/Target/Platform.cpp' l='491' u='c' c='_ZN12lldb_private8Platform12GetOSVersionEPNS_7ProcessE'/>
