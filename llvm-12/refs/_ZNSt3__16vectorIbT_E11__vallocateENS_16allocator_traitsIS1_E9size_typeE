<dec f='llvm/build/include/c++/v1/vector' l='2435' type='void std::__1::vector&lt;bool, type-parameter-0-0&gt;::__vallocate(std::__1::vector&lt;bool, type-parameter-0-0&gt;::size_type __n)'/>
<def f='llvm/build/include/c++/v1/vector' l='2528' ll='2538' type='void std::__1::vector&lt;bool, type-parameter-0-0&gt;::__vallocate(std::__1::vector&lt;bool, type-parameter-0-0&gt;::size_type __n)'/>
<use f='llvm/build/include/c++/v1/vector' l='2653' u='c' c='_ZNSt3__16vectorIbT_EC1ENS_16allocator_traitsIS1_E9size_typeE'/>
<use f='llvm/build/include/c++/v1/vector' l='2667' u='c' c='_ZNSt3__16vectorIbT_EC1ENS_16allocator_traitsIS1_E9size_typeERKS1_'/>
<use f='llvm/build/include/c++/v1/vector' l='2681' u='c' c='_ZNSt3__16vectorIbT_EC1ENS_16allocator_traitsIS1_E9size_typeERKb'/>
<use f='llvm/build/include/c++/v1/vector' l='2694' u='c' c='_ZNSt3__16vectorIbT_EC1ENS_16allocator_traitsIS1_E9size_typeERKbRKS1_'/>
<use f='llvm/build/include/c++/v1/vector' l='2764' u='c' c='_ZNSt3__16vectorIbT_EC1ETL0__S3_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorIS3_EE5valueEvE4typeE'/>
<use f='llvm/build/include/c++/v1/vector' l='2780' u='c' c='_ZNSt3__16vectorIbT_EC1ETL0__S3_RKS1_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorIS3_EE5valueEvE4typeE'/>
<use f='llvm/build/include/c++/v1/vector' l='2796' u='c' c='_ZNSt3__16vectorIbT_EC1ESt16initializer_listIbE'/>
<use f='llvm/build/include/c++/v1/vector' l='2810' u='c' c='_ZNSt3__16vectorIbT_EC1ESt16initializer_listIbERKS1_'/>
<use f='llvm/build/include/c++/v1/vector' l='2833' u='c' c='_ZNSt3__16vectorIbT_EC1ERKNS0_IbS1_EE'/>
<use f='llvm/build/include/c++/v1/vector' l='2846' u='c' c='_ZNSt3__16vectorIbT_EC1ERKNS0_IbS1_EERKS1_'/>
<use f='llvm/build/include/c++/v1/vector' l='2863' u='c' c='_ZNSt3__16vectorIbT_EaSERKNS0_IbS1_EE'/>
<use f='llvm/build/include/c++/v1/vector' l='2905' u='c' c='_ZNSt3__16vectorIbT_EC1EONS0_IbS1_EERKS1_'/>
<use f='llvm/build/include/c++/v1/vector' l='3002' u='c' c='_ZNSt3__16vectorIbT_E6assignETL0__S3_'/>
<doc f='llvm/build/include/c++/v1/vector' l='2521'>//  Allocate space for __n objects
//  throws length_error if __n &gt; max_size()
//  throws (probably bad_alloc) if memory run out
//  Precondition:  __begin_ == __end_ == __cap() == 0
//  Precondition:  __n &gt; 0
//  Postcondition:  capacity() == __n
//  Postcondition:  size() == 0</doc>
