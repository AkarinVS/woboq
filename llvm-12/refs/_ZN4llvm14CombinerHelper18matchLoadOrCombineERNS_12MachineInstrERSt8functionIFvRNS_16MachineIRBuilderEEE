<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CombinerHelper.h' l='484' type='bool llvm::CombinerHelper::matchLoadOrCombine(llvm::MachineInstr &amp; MI, std::function&lt;void (MachineIRBuilder &amp;)&gt; &amp; MatchInfo)'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp' l='3449' ll='3561' type='bool llvm::CombinerHelper::matchLoadOrCombine(llvm::MachineInstr &amp; MI, std::function&lt;void (MachineIRBuilder &amp;)&gt; &amp; MatchInfo)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CombinerHelper.h' l='475'>/// Match expression trees of the form
  ///
  /// \code
  ///  sN *a = ...
  ///  sM val = a[0] | (a[1] &lt;&lt; N) | (a[2] &lt;&lt; 2N) | (a[3] &lt;&lt; 3N) ...
  /// \endcode
  ///
  /// And check if the tree can be replaced with a M-bit load + possibly a
  /// bswap.</doc>
<use f='llvm/build/lib/Target/AArch64/AArch64GenPreLegalizeGICombiner.inc' l='996' u='c' c='_ZNK12_GLOBAL__N_136AArch64GenPreLegalizerCombinerHelper13tryCombineAllERN4llvm19GISelChangeObserverERNS1_12MachineInstrERNS1_16MachineIRBuilderE'/>
<use f='llvm/build/lib/Target/AMDGPU/AMDGPUGenPostLegalizeGICombiner.inc' l='1033' u='c' c='_ZNK12_GLOBAL__N_136AMDGPUGenPostLegalizerCombinerHelper13tryCombineAllERN4llvm19GISelChangeObserverERNS1_12MachineInstrERNS1_16MachineIRBuilderE'/>
<use f='llvm/build/lib/Target/AMDGPU/AMDGPUGenPreLegalizeGICombiner.inc' l='988' u='c' c='_ZNK12_GLOBAL__N_135AMDGPUGenPreLegalizerCombinerHelper13tryCombineAllERN4llvm19GISelChangeObserverERNS1_12MachineInstrERNS1_16MachineIRBuilderERNS1_14CombinerHelperE'/>
