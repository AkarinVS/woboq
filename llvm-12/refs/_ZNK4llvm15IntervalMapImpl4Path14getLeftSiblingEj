<dec f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='872' type='llvm::IntervalMapImpl::NodeRef llvm::IntervalMapImpl::Path::getLeftSibling(unsigned int Level) const'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1622' u='c' c='_ZN4llvm11IntervalMap8iterator15canCoalesceLeftET_T0_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1812' u='c' c='_ZN4llvm11IntervalMap8iterator10treeInsertET_S2_T0_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1971' u='c' c='_ZN4llvm11IntervalMap8iterator8overflowEj'/>
<doc f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='869'>/// getLeftSibling - Get the left sibling node at Level, or a null NodeRef.
  /// @param Level Get the sibling to node(Level).
  /// @return Left sibling, or NodeRef().</doc>
<def f='llvm/llvm/lib/Support/IntervalMap.cpp' l='25' ll='46' type='llvm::IntervalMapImpl::NodeRef llvm::IntervalMapImpl::Path::getLeftSibling(unsigned int Level) const'/>
