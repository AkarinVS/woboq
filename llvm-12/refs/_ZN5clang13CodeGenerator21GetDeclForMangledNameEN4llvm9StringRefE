<dec f='llvm/clang/include/clang/CodeGen/ModuleBuilder.h' l='75' type='const clang::Decl * clang::CodeGenerator::GetDeclForMangledName(llvm::StringRef MangledName)'/>
<use f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='588' u='c' c='_ZN5clang15BackendConsumer20StackSizeDiagHandlerERKN4llvm23DiagnosticInfoStackSizeE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='626' u='c' c='_ZNK5clang15BackendConsumer27getBestLocationFromDebugLocERKN4llvm30DiagnosticInfoWithLocationBaseERbRNS1_9StringRefERjS8_'/>
<doc f='llvm/clang/include/clang/CodeGen/ModuleBuilder.h' l='71'>/// Given a mangled name, return a declaration which mangles that way
  /// which has been added to this code generator via a Handle method.
  ///
  /// This may return null if there was no matching declaration.</doc>
<def f='llvm/clang/lib/CodeGen/ModuleBuilder.cpp' l='324' ll='326' type='const clang::Decl * clang::CodeGenerator::GetDeclForMangledName(llvm::StringRef name)'/>
