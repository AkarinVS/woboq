<dec f='llvm/llvm/lib/Target/Mips/MipsSEISelLowering.h' l='129' type='llvm::MachineBasicBlock * llvm::MipsSETargetLowering::emitST_F16_PSEUDO(llvm::MachineInstr &amp; MI, llvm::MachineBasicBlock * BB) const'/>
<use f='llvm/llvm/lib/Target/Mips/MipsSEISelLowering.cpp' l='1129' u='c' c='_ZNK4llvm20MipsSETargetLowering27EmitInstrWithCustomInserterERNS_12MachineInstrEPNS_17MachineBasicBlockE'/>
<def f='llvm/llvm/lib/Target/Mips/MipsSEISelLowering.cpp' l='3507' ll='3547' type='llvm::MachineBasicBlock * llvm::MipsSETargetLowering::emitST_F16_PSEUDO(llvm::MachineInstr &amp; MI, llvm::MachineBasicBlock * BB) const'/>
<doc f='llvm/llvm/lib/Target/Mips/MipsSEISelLowering.cpp' l='3496'>// Emit the ST_F16_PSEDUO instruction to store a f16 value from an MSA
// register.
//
// STF16 MSA128F16:$wd, mem_simm10:$addr
// =&gt;
//  copy_u.h $rtemp,$wd[0]
//  sh $rtemp, $addr
//
// Safety: We can&apos;t use st.h &amp; co as they would over write the memory after
// the destination. It would require half floats be allocated 16 bytes(!) of
// space.</doc>
<doc f='llvm/llvm/lib/Target/Mips/MipsSEISelLowering.h' l='128'>/// Emit the FILL_FD pseudo instruction</doc>
