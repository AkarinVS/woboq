<dec f='llvm/llvm/lib/Target/X86/X86.h' l='111' type='llvm::FunctionPass * llvm::createX86FixupBWInsts()'/>
<doc f='llvm/llvm/lib/Target/X86/X86.h' l='107'>/// Return a Machine IR pass that selectively replaces
/// certain byte and word instructions by equivalent 32 bit instructions,
/// in order to eliminate partial register usage, false dependences on
/// the upper portions of registers, and to save code size.</doc>
<def f='llvm/llvm/lib/Target/X86/X86FixupBWInsts.cpp' l='157' type='llvm::FunctionPass * llvm::createX86FixupBWInsts()'/>
<use f='llvm/llvm/lib/Target/X86/X86TargetMachine.cpp' l='533' u='c' c='_ZN12_GLOBAL__N_113X86PassConfig14addPreEmitPassEv'/>
