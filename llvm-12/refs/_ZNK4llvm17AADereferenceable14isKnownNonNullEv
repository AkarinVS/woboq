<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2985' ll='2987' type='bool llvm::AADereferenceable::isKnownNonNull() const'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2984'>/// Return true if we know that the underlying value is nonnull.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='1630' u='c' c='_ZN12_GLOBAL__N_134getKnownNonNullAndDerefBytesForUseERN4llvm10AttributorERKNS0_17AbstractAttributeERNS0_5ValueEPKNS0_3UseEPKNS0_11InstructionERbSE_'/>
