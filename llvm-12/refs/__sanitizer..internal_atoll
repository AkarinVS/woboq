<dec f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_libc.h' l='28' type='__sanitizer::s64 __sanitizer::internal_atoll(const char * nptr)'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_libc.h' l='25'>// internal_X() is a custom implementation of X() for use in RTL.

// String functions</doc>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors_format.inc' l='19' u='c' c='_ZL12parse_numberPKcPi'/>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_libc.cpp' l='19' ll='21' type='__sanitizer::s64 __sanitizer::internal_atoll(const char * nptr)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='945' u='c' c='__sanitizer::ThreadLister::ListThreads'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='982' u='c' c='__sanitizer::ThreadLister::IsAlive'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='46' u='c' c='__sanitizer::ExtractInt'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='56' u='c' c='__sanitizer::ExtractUptr'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='66' u='c' c='__sanitizer::ExtractSptr'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='308' u='c' c='__sanitizer::ParseFileLineInfo'/>
