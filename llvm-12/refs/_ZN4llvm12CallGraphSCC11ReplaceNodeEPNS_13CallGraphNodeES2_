<dec f='llvm/llvm/include/llvm/Analysis/CallGraphSCCPass.h' l='104' type='void llvm::CallGraphSCC::ReplaceNode(llvm::CallGraphNode * Old, llvm::CallGraphNode * New)'/>
<doc f='llvm/llvm/include/llvm/Analysis/CallGraphSCCPass.h' l='102'>/// ReplaceNode - This informs the SCC and the pass manager that the specified
  /// Old node has been deleted, and New is to be used in its place.</doc>
<def f='llvm/llvm/lib/Analysis/CallGraphSCCPass.cpp' l='591' ll='607' type='void llvm::CallGraphSCC::ReplaceNode(llvm::CallGraphNode * Old, llvm::CallGraphNode * New)'/>
<use f='llvm/llvm/lib/Analysis/CallGraphSCCPass.cpp' l='610' u='c' c='_ZN4llvm12CallGraphSCC10DeleteNodeEPNS_13CallGraphNodeE'/>
<doc f='llvm/llvm/lib/Analysis/CallGraphSCCPass.cpp' l='585'>//===----------------------------------------------------------------------===//
// CallGraphSCC Implementation
//===----------------------------------------------------------------------===//

/// This informs the SCC and the pass manager that the specified
/// Old node has been deleted, and New is to be used in its place.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp' l='1163' u='c' c='_ZN12_GLOBAL__N_112ArgPromotion8runOnSCCERN4llvm12CallGraphSCCE'/>
<use f='llvm/llvm/lib/Transforms/Utils/CallGraphUpdater.cpp' l='134' u='c' c='_ZN4llvm16CallGraphUpdater19replaceFunctionWithERNS_8FunctionES2_'/>
