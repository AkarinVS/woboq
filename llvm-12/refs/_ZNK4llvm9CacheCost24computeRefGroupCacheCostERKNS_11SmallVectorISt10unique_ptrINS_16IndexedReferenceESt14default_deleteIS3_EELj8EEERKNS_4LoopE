<dec f='llvm/llvm/include/llvm/Analysis/LoopCacheAnalysis.h' l='235' type='llvm::CacheCostTy llvm::CacheCost::computeRefGroupCacheCost(const llvm::ReferenceGroupTy &amp; RG, const llvm::Loop &amp; L) const'/>
<use f='llvm/llvm/lib/Analysis/LoopCacheAnalysis.cpp' l='635' u='c' c='_ZNK4llvm9CacheCost20computeLoopCacheCostERKNS_4LoopERKNS_11SmallVectorINS4_ISt10unique_ptrINS_16IndexedReferenceESt14default_deleteIS6_EELj8EEELj8EEE'/>
<def f='llvm/llvm/lib/Analysis/LoopCacheAnalysis.cpp' l='645' ll='651' type='llvm::CacheCostTy llvm::CacheCost::computeRefGroupCacheCost(const llvm::ReferenceGroupTy &amp; RG, const llvm::Loop &amp; L) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopCacheAnalysis.h' l='225'>/// Compute the cost of a representative reference in reference group \p RG
  /// when the given loop \p L is considered as the innermost loop in the nest.
  /// The computed cost is an estimate for the number of cache lines used by the
  /// reference group. The representative reference cost is defined as:
  ///   - equal to one if the reference is loop invariant, or
  ///   - equal to &apos;(TripCount * stride) / cache_line_size&apos; if (a) loop \p L&apos;s
  ///     induction variable is used only in the reference subscript associated
  ///     with loop \p L, and (b) the reference stride is less than the cache
  ///     line size, or
  ///   - TripCount otherwise</doc>
