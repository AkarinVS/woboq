<def f='llvm/compiler-rt/lib/msan/msan_origin.h' l='54' ll='164'/>
<use f='llvm/compiler-rt/lib/msan/msan_origin.h' l='85' c='__msan::Origin::getNextChainedOrigin'/>
<use f='llvm/compiler-rt/lib/msan/msan_origin.h' l='90' c='__msan::Origin::getNextChainedOrigin'/>
<use f='llvm/compiler-rt/lib/msan/msan_origin.h' l='97' c='__msan::Origin::CreateStackOrigin'/>
<use f='llvm/compiler-rt/lib/msan/msan_origin.h' l='99' c='__msan::Origin::CreateStackOrigin'/>
<use f='llvm/compiler-rt/lib/msan/msan_origin.h' l='102' c='__msan::Origin::CreateHeapOrigin'/>
<use f='llvm/compiler-rt/lib/msan/msan_origin.h' l='106' c='__msan::Origin::CreateHeapOrigin'/>
<use f='llvm/compiler-rt/lib/msan/msan_origin.h' l='109' c='__msan::Origin::CreateChainedOrigin'/>
<use f='llvm/compiler-rt/lib/msan/msan_origin.h' l='109' c='__msan::Origin::CreateChainedOrigin'/>
<use f='llvm/compiler-rt/lib/msan/msan_origin.h' l='137' c='__msan::Origin::CreateChainedOrigin'/>
<use f='llvm/compiler-rt/lib/msan/msan_origin.h' l='140' c='__msan::Origin::FromRawId'/>
<use f='llvm/compiler-rt/lib/msan/msan_origin.h' l='141' c='__msan::Origin::FromRawId'/>
<use f='llvm/compiler-rt/lib/msan/msan.cpp' l='296' c='__msan::ChainOrigin'/>
<use f='llvm/compiler-rt/lib/msan/msan.cpp' l='298' c='__msan::ChainOrigin'/>
<use f='llvm/compiler-rt/lib/msan/msan.cpp' l='632' c='__msan_origin_is_descendant_or_same'/>
<size>4</size>
<doc f='llvm/compiler-rt/lib/msan/msan_origin.h' l='19'>// Origin handling.
//
// Origin is a 32-bit identifier that is attached to any uninitialized value in
// the program and describes, more or less exactly, how this memory came to be
// uninitialized.
//
// There are 3 kinds of origin ids:
// 1xxx xxxx xxxx xxxx   heap origin id
// 0000 xxxx xxxx xxxx   stack origin id
// 0zzz xxxx xxxx xxxx   chained origin id
//
// Heap origin id describes a heap memory allocation and contains (in the xxx
// part) a value of StackDepot.
//
// Stack origin id describes a stack memory allocation and contains (in the xxx
// part) an index into StackOriginDescr and StackOriginPC. We don&apos;t store a
// stack trace for such origins for performance reasons.
//
// Chained origin id describes an event of storing an uninitialized value to
// memory. The xxx part is a value of ChainedOriginDepot, which is a mapping of
// (stack_id, prev_id) -&gt; id, where
//  * stack_id describes the event.
//    StackDepot keeps a mapping between those and corresponding stack traces.
//  * prev_id is another origin id that describes the earlier part of the
//    uninitialized value history.
// Following a chain of prev_id provides the full recorded history of an
// uninitialized value.
//
// This, effectively, defines a tree (or 2 trees, see below) where nodes are
// points in value history marked with origin ids, and edges are events that are
// marked with stack_id.
//
// The &quot;zzz&quot; bits of chained origin id are used to store the length (or depth)
// of the origin chain.</doc>
<fun r='__msan::Origin::isValidId'/>
<fun r='__msan::Origin::raw_id'/>
<fun r='__msan::Origin::isHeapOrigin'/>
<fun r='__msan::Origin::isStackOrigin'/>
<fun r='__msan::Origin::isChainedOrigin'/>
<fun r='__msan::Origin::getChainedId'/>
<fun r='__msan::Origin::getStackId'/>
<fun r='__msan::Origin::getHeapId'/>
<fun r='__msan::Origin::getNextChainedOrigin'/>
<fun r='__msan::Origin::getStackTraceForHeapOrigin'/>
<fun r='__msan::Origin::CreateStackOrigin'/>
<fun r='__msan::Origin::CreateHeapOrigin'/>
<fun r='__msan::Origin::CreateChainedOrigin'/>
<fun r='__msan::Origin::FromRawId'/>
<smbr r='__msan::Origin::kDepthBits' t='const int'/>
<smbr r='__msan::Origin::kDepthShift' t='const int'/>
<smbr r='__msan::Origin::kHeapShift' t='const int'/>
<smbr r='__msan::Origin::kChainedIdMask' t='const __sanitizer::u32'/>
<smbr r='__msan::Origin::kStackIdMask' t='const __sanitizer::u32'/>
<smbr r='__msan::Origin::kHeapIdMask' t='const __sanitizer::u32'/>
<mbr r='__msan::Origin::raw_id_' o='0' t='__sanitizer::u32'/>
<fun r='__msan::Origin::Origin'/>
<fun r='__msan::Origin::depth'/>
<smbr r='__msan::Origin::kMaxDepth' t='const int'/>
<use f='llvm/compiler-rt/lib/msan/msan_allocator.cpp' l='188' c='__msan::MsanAllocate'/>
<use f='llvm/compiler-rt/lib/msan/msan_allocator.cpp' l='208' c='__msan::MsanDeallocate'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/msan/msan_poisoning.cpp' l='244' c='__msan::PoisonMemory'/>
<size>4</size>
<use f='llvm/compiler-rt/lib/msan/msan_report.cpp' l='62' c='__msan::DescribeOrigin'/>
<size>4</size>
