<dec f='include/stdlib.h' l='586' type='void * aligned_alloc(size_t __alignment, size_t __size)'/>
<doc f='include/stdlib.h' l='585'>/* ISO C variant of aligned allocation.  */</doc>
<def f='llvm/compiler-rt/lib/asan/asan_malloc_linux.cpp' l='191' macro='1' type='void * aligned_alloc(__sanitizer::uptr boundary, __sanitizer::uptr size)'/>
<def f='llvm/compiler-rt/lib/hwasan/hwasan_interceptors.cpp' l='187' macro='1' type='void * aligned_alloc(SIZE_T alignment, SIZE_T size)'/>
<def f='llvm/compiler-rt/lib/lsan/lsan_interceptors.cpp' l='136' macro='1' type='void * aligned_alloc(__sanitizer::uptr alignment, __sanitizer::uptr size)'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_interceptors.cpp' l='141' u='a' c='__lsan::InitializeInterceptors'/>
<def f='llvm/compiler-rt/lib/memprof/memprof_malloc_linux.cpp' l='173' macro='1' type='void * aligned_alloc(__sanitizer::uptr boundary, __sanitizer::uptr size)'/>
<def f='llvm/compiler-rt/lib/msan/msan_interceptors.cpp' l='188' macro='1' type='void * aligned_alloc(SIZE_T alignment, SIZE_T size)'/>
<def f='llvm/compiler-rt/lib/scudo/scudo_malloc.cpp' l='68' ll='70' macro='1' type='void * aligned_alloc(size_t alignment, size_t size)'/>
<def f='llvm/compiler-rt/lib/scudo/standalone/wrappers_c.inc' l='201' ll='212' macro='1' type='void * aligned_alloc(size_t alignment, size_t size)'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='796' macro='1' type='void * aligned_alloc(__sanitizer::uptr align, __sanitizer::uptr sz)'/>
