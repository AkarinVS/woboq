<dec f='llvm/llvm/lib/FileCheck/FileCheckImpl.h' l='745' type='static Expected&lt;llvm::NumericVariable *&gt; llvm::Pattern::parseNumericVariableDefinition(llvm::StringRef &amp; Expr, llvm::FileCheckPatternContext * Context, Optional&lt;size_t&gt; LineNumber, llvm::ExpressionFormat ImplicitFormat, const llvm::SourceMgr &amp; SM)'/>
<def f='llvm/llvm/lib/FileCheck/FileCheck.cpp' l='462' ll='499' type='static Expected&lt;llvm::NumericVariable *&gt; llvm::Pattern::parseNumericVariableDefinition(llvm::StringRef &amp; Expr, llvm::FileCheckPatternContext * Context, Optional&lt;size_t&gt; LineNumber, llvm::ExpressionFormat ImplicitFormat, const llvm::SourceMgr &amp; SM)'/>
<use f='llvm/llvm/lib/FileCheck/FileCheck.cpp' l='876' u='c' c='_ZN4llvm7Pattern29parseNumericSubstitutionBlockENS_9StringRefERNS_8OptionalIPNS_15NumericVariableEEEbNS2_ImEEPNS_23FileCheckPatternContextERKNS_9SourceMgrE'/>
<doc f='llvm/llvm/lib/FileCheck/FileCheckImpl.h' l='740'>/// Parses \p Expr for the name of a numeric variable to be defined at line
  /// \p LineNumber, or before input is parsed if \p LineNumber is None.
  /// \returns a pointer to the class instance representing that variable,
  /// creating it if needed, or an error holding a diagnostic against \p SM
  /// should defining such a variable be invalid.</doc>
