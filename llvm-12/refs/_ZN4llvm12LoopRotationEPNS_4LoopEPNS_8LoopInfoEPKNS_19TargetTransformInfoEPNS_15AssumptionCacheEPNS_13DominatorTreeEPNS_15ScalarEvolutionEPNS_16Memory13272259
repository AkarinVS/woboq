<dec f='llvm/llvm/include/llvm/Transforms/Utils/LoopRotationUtils.h' l='33' type='bool llvm::LoopRotation(llvm::Loop * L, llvm::LoopInfo * LI, const llvm::TargetTransformInfo * TTI, llvm::AssumptionCache * AC, llvm::DominatorTree * DT, llvm::ScalarEvolution * SE, llvm::MemorySSAUpdater * MSSAU, const llvm::SimplifyQuery &amp; SQ, bool RotationOnly, unsigned int Threshold, bool IsUtilMode, bool PrepareForLTO = false)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopRotation.cpp' l='63' u='c' c='_ZN4llvm14LoopRotatePass3runERNS_4LoopERNS_15AnalysisManagerIS1_JRNS_27LoopStandardAnalysisResultsEEEES5_RNS_10LPMUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopRotation.cpp' l='132' u='c' c='_ZN12_GLOBAL__N_120LoopRotateLegacyPass9runOnLoopEPN4llvm4LoopERNS1_13LPPassManagerE'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/LoopRotationUtils.h' l='27'>/// Convert a loop into a loop with bottom test. It may
/// perform loop latch simplication as well if the flag RotationOnly
/// is false. The flag Threshold represents the size threshold of the loop
/// header. If the loop header&apos;s size exceeds the threshold, the loop rotation
/// will give up. The flag IsUtilMode controls the heuristic used in the
/// LoopRotation. If it is true, the profitability heuristic will be ignored.</doc>
<def f='llvm/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp' l='822' ll='831' type='bool llvm::LoopRotation(llvm::Loop * L, llvm::LoopInfo * LI, const llvm::TargetTransformInfo * TTI, llvm::AssumptionCache * AC, llvm::DominatorTree * DT, llvm::ScalarEvolution * SE, llvm::MemorySSAUpdater * MSSAU, const llvm::SimplifyQuery &amp; SQ, bool RotationOnly = true, unsigned int Threshold = unsigned int(-1), bool IsUtilMode = true, bool PrepareForLTO = false)'/>
<doc f='llvm/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp' l='821'>/// The utility to convert a loop into a loop with bottom test.</doc>
<use f='llvm/llvm/unittests/Transforms/Utils/LoopRotationUtilsTest.cpp' l='88' u='c' c='_ZN30LoopRotate_MultiDeoptExit_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/LoopRotationUtilsTest.cpp' l='159' u='c' c='_ZN37LoopRotate_MultiDeoptExit_Nondup_Test8TestBodyEv'/>
