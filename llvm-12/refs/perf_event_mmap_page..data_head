<dec f='include/linux/perf_event.h' l='610' type='__u64'/>
<offset>8192</offset>
<doc f='include/linux/perf_event.h' l='594'>/*
	 * Control data for the mmap() data buffer.
	 *
	 * User-space reading the @data_head value should issue an smp_rmb(),
	 * after reading this value.
	 *
	 * When the mapping is PROT_WRITE the @data_tail value should be
	 * written by userspace to reflect the last read data, after issueing
	 * an smp_mb() to separate the data read from the -&gt;data_tail store.
	 * In this case the kernel will not over-write unread data.
	 *
	 * See perf_output_put_handle() for the data ordering.
	 *
	 * data_{offset,size} indicate the location and size of the perf record
	 * buffer within the mmapped area.
	 */</doc>
<doc f='include/linux/perf_event.h' l='610'>/* head in the data section */</doc>
<use f='llvm/lldb/source/Plugins/Process/Linux/ProcessorTrace.cpp' l='344' u='r' c='_ZN12lldb_private13process_linux21ProcessorTraceMonitor17ReadPerfTraceDataERN4llvm15MutableArrayRefIhEEm'/>
<dec f='include/perfmon/perf_event.h' l='395' type='uint64_t'/>
<offset>8192</offset>
<use f='llvm/llvm/tools/llvm-exegesis/lib/X86/X86Counter.cpp' l='235' u='r' c='_ZNK4llvm8exegesis13X86LbrCounter13doReadCounterEPKvS3_'/>
