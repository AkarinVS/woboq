<dec f='llvm/clang/include/clang/Sema/Sema.h' l='7829' type='clang::QualType clang::Sema::CheckTypenameType(clang::ElaboratedTypeKeyword Keyword, clang::SourceLocation KeywordLoc, clang::NestedNameSpecifierLoc QualifierLoc, const clang::IdentifierInfo &amp; II, clang::SourceLocation IILoc, bool DeducedTSTContext = true)'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='326' u='c' c='_ZN5clang4Sema11getTypeNameERKNS_14IdentifierInfoENS_14SourceLocationEPNS_5ScopeEPNS_12CXXScopeSpecEbbNS_9OpaquePtrINS_8QualTypeEEEbbbPPS1_'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='4222' u='c' c='_ZN5clang4Sema19BuildMemInitializerEPNS_4DeclEPNS_5ScopeERNS_12CXXScopeSpecEPNS_14IdentifierInfoENS_9OpaquePtrINS_8QualTypeEEERKNS_8DeclSpecENS_14Sour9377157'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='16253' u='c' c='_ZN5clang4Sema23ActOnTemplatedFriendTagEPNS_5ScopeENS_14SourceLocationEjS3_RNS_12CXXScopeSpecEPNS_14IdentifierInfoES3_RKNS_20ParsedAttributesViewEN4ll10490667'/>
<use f='llvm/clang/lib/Sema/TreeTransform.h' l='1101' u='c' c='_ZN5clang13TreeTransform24RebuildDependentNameTypeENS_21ElaboratedTypeKeywordENS_14SourceLocationENS_22NestedNameSpecifierLocEPKNS_14IdentifierInfoES2_b'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='358' u='c' c='_ZN5clang4Sema17getDestructorNameENS_14SourceLocationERNS_14IdentifierInfoES1_PNS_5ScopeERNS_12CXXScopeSpecENS_9OpaquePtrINS_8QualTypeEEEb'/>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='10508' u='c' c='_ZN5clang4Sema17CheckTypenameTypeENS_21ElaboratedTypeKeywordENS_14SourceLocationENS_22NestedNameSpecifierLocERKNS_14IdentifierInfoES2_PPNS_14TypeSourceInfoEb'/>
<def f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='10531' ll='10714' type='clang::QualType clang::Sema::CheckTypenameType(clang::ElaboratedTypeKeyword Keyword, clang::SourceLocation KeywordLoc, clang::NestedNameSpecifierLoc QualifierLoc, const clang::IdentifierInfo &amp; II, clang::SourceLocation IILoc, bool DeducedTSTContext = true)'/>
<doc f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='10529'>/// Build the type that describes a C++ typename specifier,
/// e.g., &quot;typename T::type&quot;.</doc>
