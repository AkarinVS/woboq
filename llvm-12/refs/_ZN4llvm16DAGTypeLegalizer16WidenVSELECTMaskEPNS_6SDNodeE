<dec f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h' l='896' type='llvm::SDValue llvm::DAGTypeLegalizer::WidenVSELECTMask(llvm::SDNode * N)'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='1736' u='c' c='_ZN4llvm16DAGTypeLegalizer19PromoteIntOp_SELECTEPNS_6SDNodeEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp' l='518' u='c' c='_ZN4llvm16DAGTypeLegalizer15SplitRes_SELECTEPNS_6SDNodeERNS_7SDValueES4_'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp' l='4187' ll='4286' type='llvm::SDValue llvm::DAGTypeLegalizer::WidenVSELECTMask(llvm::SDNode * N)'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp' l='4295' u='c' c='_ZN4llvm16DAGTypeLegalizer18WidenVecRes_SELECTEPNS_6SDNodeE'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp' l='4183'>// This method tries to handle some special cases for the vselect mask
// and if needed adjusting the mask vector type to match that of the VSELECT.
// Without it, many cases end up with scalarization of the SETCC, with many
// unnecessary instructions.</doc>
