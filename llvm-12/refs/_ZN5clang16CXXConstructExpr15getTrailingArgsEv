<dec f='llvm/clang/include/clang/AST/ExprCXX.h' l='1496' type='clang::Stmt ** clang::CXXConstructExpr::getTrailingArgs()'/>
<use f='llvm/clang/include/clang/AST/ExprCXX.h' l='1498' u='c' c='_ZNK5clang16CXXConstructExpr15getTrailingArgsEv'/>
<use f='llvm/clang/include/clang/AST/ExprCXX.h' l='1597' u='c' c='_ZN5clang16CXXConstructExpr9arg_beginEv'/>
<use f='llvm/clang/include/clang/AST/ExprCXX.h' l='1602' u='c' c='_ZN5clang16CXXConstructExpr7getArgsEv'/>
<use f='llvm/clang/include/clang/AST/ExprCXX.h' l='1638' u='c' c='_ZN5clang16CXXConstructExpr8childrenEv'/>
<use f='llvm/clang/include/clang/AST/ExprCXX.h' l='1638' u='c' c='_ZN5clang16CXXConstructExpr8childrenEv'/>
<def f='llvm/clang/include/clang/AST/ExprCXX.h' l='1836' ll='1842' type='clang::Stmt ** clang::CXXConstructExpr::getTrailingArgs()'/>
<doc f='llvm/clang/include/clang/AST/ExprCXX.h' l='1480'>// We would like to stash the arguments of the constructor call after
  // CXXConstructExpr. However CXXConstructExpr is used as a base class of
  // CXXTemporaryObjectExpr which makes the use of llvm::TrailingObjects
  // impossible.
  //
  // Instead we manually stash the trailing object after the full object
  // containing CXXConstructExpr (that is either CXXConstructExpr or
  // CXXTemporaryObjectExpr).
  //
  // The trailing objects are:
  //
  // * An array of getNumArgs() &quot;Stmt *&quot; for the arguments of the
  //   constructor call.

  /// Return a pointer to the start of the trailing arguments.
  /// Defined just after CXXTemporaryObjectExpr.</doc>
<use f='llvm/clang/lib/AST/ExprCXX.cpp' l='1070' u='c' c='_ZN5clang16CXXConstructExprC1ENS_4Stmt9StmtClassENS_8QualTypeENS_14SourceLocationEPNS_18CXXConstructorDeclEbN4llvm8ArrayRefIPNS_4ExprEEEbbbbNS0_16Cons3463018'/>
