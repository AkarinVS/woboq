<dec f='include/unistd.h' l='1056' type='long syscall(long __sysno)'/>
<doc f='include/unistd.h' l='1046'>/* Invoke `system call&apos; number SYSNO, passing it the remaining arguments.
   This is completely system-dependent, and not often useful.

   In Unix, `syscall&apos; sets `errno&apos; for all errors and most calls return -1
   for errors; in many systems you cannot pass arguments or get return
   values for all system calls (`pipe&apos;, `fork&apos;, and `getppid&apos; typically
   among them).

   In Mach, all system calls take normal arguments and always return an
   error code (zero for success).  */</doc>
<use f='llvm/compiler-rt/lib/dfsan/dfsan_interceptors.cpp' l='36' u='c' c='__interceptor_mmap'/>
<use f='llvm/compiler-rt/lib/gwp_asan/platform_specific/common_posix.cpp' l='20' u='c' c='_ZN8gwp_asan11getThreadIDEv'/>
<use f='llvm/compiler-rt/lib/safestack/safestack_platform.h' l='77' u='c' c='_ZN9safestack6GetTidEv'/>
<use f='llvm/compiler-rt/lib/safestack/safestack_platform.h' l='89' u='c' c='_ZN9safestack6TgKillEiyi'/>
<use f='llvm/compiler-rt/lib/safestack/safestack_platform.h' l='100' u='c' c='_ZN9safestack4MmapEPvjiiil'/>
<use f='llvm/compiler-rt/lib/safestack/safestack_platform.h' l='109' u='c' c='_ZN9safestack6MunmapEPvj'/>
<use f='llvm/compiler-rt/lib/safestack/safestack_platform.h' l='118' u='c' c='_ZN9safestack8MprotectEPvji'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='176' macro='1' u='c' c='__sanitizer::internal_mmap'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='183' macro='1' u='c' c='__sanitizer::internal_munmap'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='187' macro='1' u='c' c='__sanitizer::internal_mprotect'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='191' macro='1' u='c' c='__sanitizer::internal_madvise'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='195' macro='1' u='c' c='__sanitizer::internal_close'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='202' macro='1' u='c' c='__sanitizer::internal_open'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='211' macro='1' u='c' c='__sanitizer::internal_open'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='217' macro='1' u='c' c='__sanitizer::internal_read'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='224' macro='1' u='c' c='__sanitizer::internal_write'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='231' macro='1' u='c' c='__sanitizer::internal_ftruncate'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='323' macro='1' u='c' c='__sanitizer::internal_stat'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='348' macro='1' u='c' c='__sanitizer::internal_lstat'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='367' macro='1' u='c' c='__sanitizer::internal_fstat'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='381' macro='1' u='c' c='__sanitizer::internal_dup'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='388' macro='1' u='c' c='__sanitizer::internal_dup2'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='397' macro='1' u='c' c='__sanitizer::internal_readlink'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='405' macro='1' u='c' c='__sanitizer::internal_unlink'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='417' macro='1' u='c' c='__sanitizer::internal_rename'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='422' macro='1' u='c' c='__sanitizer::internal_sched_yield'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='429' macro='1' u='c' c='__sanitizer::internal_sleep'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='436' macro='1' u='c' c='__sanitizer::internal_execve'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='446' macro='1' u='c' c='__sanitizer::internal__exit'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='476' macro='1' u='c' c='__sanitizer::GetTid'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='482' macro='1' u='c' c='__sanitizer::TgKill'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='500' macro='1' u='c' c='__sanitizer::NanoTime'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='505' macro='1' u='c' c='__sanitizer::internal_clock_gettime'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='655' macro='1' u='c' c='__sanitizer::BlockingMutex::Lock'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='671' macro='1' u='c' c='__sanitizer::BlockingMutex::Unlock'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='708' macro='1' u='c' c='__sanitizer::internal_ptrace'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='713' macro='1' u='c' c='__sanitizer::internal_waitpid'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='718' macro='1' u='c' c='__sanitizer::internal_getpid'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='722' macro='1' u='c' c='__sanitizer::internal_getppid'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='739' macro='1' u='c' c='__sanitizer::internal_getdents'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='744' macro='1' u='c' c='__sanitizer::internal_lseek'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='749' macro='1' u='c' c='__sanitizer::internal_prctl'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='754' macro='1' u='c' c='__sanitizer::internal_sigaltstack'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='761' macro='1' u='c' c='__sanitizer::internal_fork'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='830' macro='1' u='c' c='__sanitizer::internal_sigaction_norestorer'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='856' macro='1' u='c' c='__sanitizer::internal_sigprocmask'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='1678' macro='1' u='c' c='__sanitizer::internal_uname'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='2269' macro='1' u='c' c='__sanitizer::GetRandom'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/linux.cpp' l='111' u='c' c='_ZN5scudo11HybridMutex8lockSlowEv'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/linux.cpp' l='120' u='c' c='_ZN5scudo11HybridMutex6unlockEv'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/linux.cpp' l='145' u='c' c='_ZN5scudo11getThreadIDEv'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/linux.cpp' l='160' u='c' c='_ZN5scudo9getRandomEPvmb'/>
<use f='llvm/libcxx/src/atomic.cpp' l='42' u='c' c='_ZNSt3__1L33__libcpp_platform_wait_on_addressEPVKNS_17__cxx_atomic_implIiNS_22__cxx_atomic_base_implIiEEEEi'/>
<use f='llvm/libcxx/src/atomic.cpp' l='48' u='c' c='_ZNSt3__1L33__libcpp_platform_wake_by_addressEPVKNS_17__cxx_atomic_implIiNS_22__cxx_atomic_base_implIiEEEEb'/>
<use f='llvm/libcxxabi/src/cxa_guard_impl.h' l='157' u='c' c='__cxxabiv1::(anonymousnamespace)::PlatformThreadID'/>
<use f='llvm/libcxxabi/src/cxa_guard_impl.h' l='401' u='c' c='__cxxabiv1::(anonymousnamespace)::PlatformFutexWait'/>
<use f='llvm/libcxxabi/src/cxa_guard_impl.h' l='407' u='c' c='__cxxabiv1::(anonymousnamespace)::PlatformFutexWake'/>
<use f='llvm/lldb/source/Plugins/Process/Linux/NativeThreadLinux.cpp' l='33' u='c' c='_ZN12lldb_private13process_linux17NativeThreadLinux11RequestStopEv'/>
<use f='llvm/lldb/source/Plugins/Process/Linux/ProcessorTrace.cpp' l='123' u='c' c='_ZN12lldb_private13process_linux21ProcessorTraceMonitor10StartTraceEmmRKNS_12TraceOptionsE'/>
<use f='llvm/llvm/lib/Support/Host.cpp' l='395' u='c' c='_ZN4llvm3sys6detail20getHostCPUNameForBPFEv'/>
<use f='llvm/llvm/lib/Support/Host.cpp' l='408' u='c' c='_ZN4llvm3sys6detail20getHostCPUNameForBPFEv'/>
<use f='llvm/llvm/lib/Support/Unix/Threading.inc' l='122' u='c' c='_ZN4llvm12get_threadidEv'/>
<use f='include/perfmon/perf_event.h' l='527' u='c' c='_ZL15perf_event_openP15perf_event_attriiim'/>
