<dec f='llvm/lldb/source/Plugins/LanguageRuntime/RenderScript/RenderScriptRuntime/RenderScriptRuntime.h' l='370' type='bool lldb_private::RenderScriptRuntime::PlaceBreakpointOnKernel(lldb::TargetSP target, lldb_private::Stream &amp; messages, const char * name, const lldb_renderscript::RSCoordinate * coords = nullptr)'/>
<def f='llvm/lldb/source/Plugins/LanguageRuntime/RenderScript/RenderScriptRuntime/RenderScriptRuntime.cpp' l='3732' ll='3753' type='bool lldb_private::RenderScriptRuntime::PlaceBreakpointOnKernel(lldb::TargetSP target, lldb_private::Stream &amp; messages, const char * name, const lldb_private::lldb_renderscript::RSCoordinate * coord = nullptr)'/>
<use f='llvm/lldb/source/Plugins/LanguageRuntime/RenderScript/RenderScriptRuntime/RenderScriptRuntime.cpp' l='4306' u='c' c='_ZN51CommandObjectRenderScriptRuntimeKernelBreakpointSet9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<doc f='llvm/lldb/source/Plugins/LanguageRuntime/RenderScript/RenderScriptRuntime/RenderScriptRuntime.cpp' l='3728'>// Tries to set a breakpoint on the start of a kernel, resolved using the
// kernel name. Argument &apos;coords&apos;, represents a three dimensional coordinate
// which can be used to specify a single kernel instance to break on. If this
// is set then we add a callback to the breakpoint.</doc>
