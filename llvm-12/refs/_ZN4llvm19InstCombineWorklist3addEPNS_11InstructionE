<def f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombineWorklist.h' l='46' ll='49' type='void llvm::InstCombineWorklist::add(llvm::Instruction * I)'/>
<use f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombineWorklist.h' l='55' u='c' c='_ZN4llvm19InstCombineWorklist8addValueEPNS_5ValueE'/>
<doc f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombineWorklist.h' l='43'>/// Add instruction to the worklist.
  /// Instructions will be visited in the order they are added.
  /// You likely want to use this method.</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='369' u='c' c='_ZN4llvm16InstCombinerImpl19InsertNewInstBeforeEPNS_11InstructionERS1_'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='452' u='c' c='_ZN4llvm16InstCombinerImpl21eraseInstFromFunctionERNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='3964' u='c' c='_ZL31combineInstructionsOverFunctionRN4llvm8FunctionERNS_19InstCombineWorklistEPNS_9AAResultsERNS_15AssumptionCacheERNS_17TargetLibraryInfoERNS_19Targ12081709'/>
