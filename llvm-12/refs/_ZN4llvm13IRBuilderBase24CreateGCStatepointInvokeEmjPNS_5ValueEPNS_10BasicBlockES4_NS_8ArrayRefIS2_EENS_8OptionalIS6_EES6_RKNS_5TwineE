<dec f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='899' type='llvm::InvokeInst * llvm::IRBuilderBase::CreateGCStatepointInvoke(uint64_t ID, uint32_t NumPatchBytes, llvm::Value * ActualInvokee, llvm::BasicBlock * NormalDest, llvm::BasicBlock * UnwindDest, ArrayRef&lt;llvm::Value *&gt; InvokeArgs, Optional&lt;ArrayRef&lt;llvm::Value *&gt; &gt; DeoptArgs, ArrayRef&lt;llvm::Value *&gt; GCArgs, const llvm::Twine &amp; Name = &quot;&quot;)'/>
<doc f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='896'>/// Create an invoke to the experimental.gc.statepoint intrinsic to
  /// start a new statepoint sequence.</doc>
<def f='llvm/llvm/lib/IR/IRBuilder.cpp' l='705' ll='714' type='llvm::InvokeInst * llvm::IRBuilderBase::CreateGCStatepointInvoke(uint64_t ID, uint32_t NumPatchBytes, llvm::Value * ActualInvokee, llvm::BasicBlock * NormalDest, llvm::BasicBlock * UnwindDest, ArrayRef&lt;llvm::Value *&gt; InvokeArgs, Optional&lt;ArrayRef&lt;llvm::Value *&gt; &gt; DeoptArgs, ArrayRef&lt;llvm::Value *&gt; GCArgs, const llvm::Twine &amp; Name = &quot;&quot;)'/>
