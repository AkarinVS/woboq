<dec f='llvm/polly/lib/External/isl/isl_tab.h' l='206' type='enum isl_lp_result isl_tab_min(struct isl_tab * tab, isl_int * f, isl_sioimath * denom, isl_int * opt, isl_int * opt_denom, unsigned int flags)'/>
<use f='llvm/polly/lib/External/isl/basis_reduction_tab.c' l='191' u='c' c='solve_lp'/>
<use f='llvm/polly/lib/External/isl/basis_reduction_tab.c' l='227' u='c' c='cut_lp_to_hyperplane'/>
<use f='llvm/polly/lib/External/isl/isl_convex_hull.c' l='2138' u='c' c='is_bound'/>
<use f='llvm/polly/lib/External/isl/isl_lp.c' l='40' u='c' c='isl_tab_solve_lp'/>
<use f='llvm/polly/lib/External/isl/isl_map_simplify.c' l='4279' u='c' c='test_ineq_is_satisfied'/>
<use f='llvm/polly/lib/External/isl/isl_sample.c' l='227' u='c' c='compute_min'/>
<use f='llvm/polly/lib/External/isl/isl_sample.c' l='245' u='c' c='compute_max'/>
<use f='llvm/polly/lib/External/isl/isl_scan.c' l='152' u='c' c='isl_basic_set_scan'/>
<use f='llvm/polly/lib/External/isl/isl_scan.c' l='160' u='c' c='isl_basic_set_scan'/>
<def f='llvm/polly/lib/External/isl/isl_tab.c' l='3348' ll='3415' type='enum isl_lp_result isl_tab_min(struct isl_tab * tab, isl_int * f, isl_sioimath * denom, isl_int * opt, isl_int * opt_denom, unsigned int flags)'/>
<doc f='llvm/polly/lib/External/isl/isl_tab.c' l='3338'>/* Return the minimal value of the affine expression &quot;f&quot; with denominator
 * &quot;denom&quot; in *opt, *opt_denom, assuming the tableau is not empty and
 * the expression cannot attain arbitrarily small values.
 * If opt_denom is NULL, then *opt is rounded up to the nearest integer.
 * The return value reflects the nature of the result (empty, unbounded,
 * minimal value returned in *opt).
 *
 * This function assumes that at least one more row and at least
 * one more element in the constraint array are available in the tableau.
 */</doc>
