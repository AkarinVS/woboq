<dec f='llvm/lldb/include/lldb/Target/Process.h' l='2907' type='void lldb_private::Process::AppendSTDOUT(const char * s, size_t len)'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='4935' u='c' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote17HandleAsyncStdoutEN4llvm9StringRefE'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='4161' ll='4166' type='void lldb_private::Process::AppendSTDOUT(const char * s, size_t len)'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='4264' u='c' c='_ZN12lldb_private7Process28STDIOReadThreadBytesReceivedEPvPKvm'/>
<doc f='llvm/lldb/source/Target/Process.cpp' l='4142'>// uint32_t
// Process::ListProcessesMatchingName (const char *name, StringList &amp;matches,
// std::vector&lt;lldb::pid_t&gt; &amp;pids)
//{
//    return 0;
//}
//
// ArchSpec
// Process::GetArchSpecForExistingProcess (lldb::pid_t pid)
//{
//    return Host::GetArchSpecForExistingProcess (pid);
//}
//
// ArchSpec
// Process::GetArchSpecForExistingProcess (const char *process_name)
//{
//    return Host::GetArchSpecForExistingProcess (process_name);
//}</doc>
