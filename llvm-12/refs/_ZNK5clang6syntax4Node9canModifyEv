<def f='llvm/clang/include/clang/Tooling/Syntax/Tree.h' l='114' type='bool clang::syntax::Node::canModify() const'/>
<doc f='llvm/clang/include/clang/Tooling/Syntax/Tree.h' l='108'>/// If this function return false, the tree cannot be modified because there
  /// is no reasonable way to produce the corresponding textual replacements.
  /// This can happen when the node crosses macro expansion boundaries.
  ///
  /// Note that even if the node is not modifiable, its child nodes can be
  /// modifiable.</doc>
<use f='llvm/clang/lib/Tooling/Syntax/Tree.cpp' l='211' u='c' c='_ZN12_GLOBAL__N_18dumpNodeERN4llvm11raw_ostreamEPKN5clang6syntax4NodeERKNS3_13SourceManagerESt6vectorIbSaIbEE'/>
<use f='llvm/clang/unittests/Tooling/Syntax/MutationsTest.cpp' l='49' u='c'/>
