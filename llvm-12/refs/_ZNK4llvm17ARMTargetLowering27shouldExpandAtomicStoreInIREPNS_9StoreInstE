<dec f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='618' type='bool llvm::ARMTargetLowering::shouldExpandAtomicStoreInIR(llvm::StoreInst * SI) const'/>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1950' c='_ZNK4llvm18TargetLoweringBase27shouldExpandAtomicStoreInIREPNS_9StoreInstE'/>
<def f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='18631' ll='18634' type='bool llvm::ARMTargetLowering::shouldExpandAtomicStoreInIR(llvm::StoreInst * SI) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='18627'>// Loads and stores less than 64-bits are already atomic; ones above that
// are doomed anyway, so defer to the default libcall and blame the OS when
// things go wrong. Cortex M doesn&apos;t have ldrexd/strexd though, so don&apos;t emit
// anything for those.</doc>
