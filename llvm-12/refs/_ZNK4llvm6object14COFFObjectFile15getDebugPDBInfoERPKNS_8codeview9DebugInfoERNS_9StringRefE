<dec f='llvm/llvm/include/llvm/Object/COFF.h' l='1079' type='llvm::Error llvm::object::COFFObjectFile::getDebugPDBInfo(const codeview::DebugInfo *&amp; Info, llvm::StringRef &amp; PDBFileName) const'/>
<doc f='llvm/llvm/include/llvm/Object/COFF.h' l='1075'>/// Get PDB information from an executable. If the information is not present,
  /// Info will be set to nullptr and PDBFileName will be empty. An error is
  /// returned only on corrupt object files. Convenience accessor that can be
  /// used if the debug directory is not already handy.</doc>
<use f='llvm/lldb/source/Plugins/ObjectFile/PECOFF/ObjectFilePECOFF.cpp' l='50' u='c' c='_ZL11GetCoffUUIDRN4llvm6object14COFFObjectFileE'/>
<use f='llvm/lldb/source/Plugins/SymbolFile/NativePDB/SymbolFileNativePDB.cpp' l='109' u='c' c='_ZL19loadMatchingPDBFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERN4llvm20BumpPtrAllocatorImplINS5_15MallocAllocatorELm4096ELm4096ELm128EEE'/>
<use f='llvm/llvm/lib/DebugInfo/PDB/Native/NativeSession.cpp' l='136' u='c' c='_ZL17getPdbPathFromExeB5cxx11N4llvm9StringRefE'/>
<use f='llvm/llvm/lib/DebugInfo/Symbolize/Symbolize.cpp' l='553' u='c' c='_ZN4llvm9symbolize14LLVMSymbolizer21getOrCreateModuleInfoERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<def f='llvm/llvm/lib/Object/COFFObjectFile.cpp' l='531' ll='540' type='llvm::Error llvm::object::COFFObjectFile::getDebugPDBInfo(const codeview::DebugInfo *&amp; PDBInfo, llvm::StringRef &amp; PDBFileName) const'/>
