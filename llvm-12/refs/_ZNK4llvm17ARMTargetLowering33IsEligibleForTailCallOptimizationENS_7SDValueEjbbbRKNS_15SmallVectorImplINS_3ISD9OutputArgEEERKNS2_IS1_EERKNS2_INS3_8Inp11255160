<dec f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='864' type='bool llvm::ARMTargetLowering::IsEligibleForTailCallOptimization(llvm::SDValue Callee, CallingConv::ID CalleeCC, bool isVarArg, bool isCalleeStructRet, bool isCallerStructRet, const SmallVectorImpl&lt;ISD::OutputArg&gt; &amp; Outs, const SmallVectorImpl&lt;llvm::SDValue&gt; &amp; OutVals, const SmallVectorImpl&lt;ISD::InputArg&gt; &amp; Ins, llvm::SelectionDAG &amp; DAG, const bool isIndirect) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='861'>/// IsEligibleForTailCallOptimization - Check whether the call is eligible
    /// for tail call optimization. Targets which want to do tail call
    /// optimization should implement this function.</doc>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='2276' u='c' c='_ZNK4llvm17ARMTargetLowering9LowerCallERNS_14TargetLowering16CallLoweringInfoERNS_15SmallVectorImplINS_7SDValueEEE'/>
<def f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='2778' ll='2903' type='bool llvm::ARMTargetLowering::IsEligibleForTailCallOptimization(llvm::SDValue Callee, CallingConv::ID CalleeCC, bool isVarArg, bool isCalleeStructRet, bool isCallerStructRet, const SmallVectorImpl&lt;ISD::OutputArg&gt; &amp; Outs, const SmallVectorImpl&lt;llvm::SDValue&gt; &amp; OutVals, const SmallVectorImpl&lt;ISD::InputArg&gt; &amp; Ins, llvm::SelectionDAG &amp; DAG, const bool isIndirect) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='2775'>/// IsEligibleForTailCallOptimization - Check whether the call is eligible
/// for tail call optimization. Targets which want to do tail call
/// optimization should implement this function.</doc>
