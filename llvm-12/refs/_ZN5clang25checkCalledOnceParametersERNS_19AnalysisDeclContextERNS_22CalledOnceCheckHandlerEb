<dec f='llvm/clang/include/clang/Analysis/Analyses/CalledOnceCheck.h' l='106' type='void clang::checkCalledOnceParameters(clang::AnalysisDeclContext &amp; AC, clang::CalledOnceCheckHandler &amp; Handler, bool CheckConventionalParameters)'/>
<def f='llvm/clang/lib/Analysis/CalledOnceCheck.cpp' l='1520' ll='1524' type='void clang::checkCalledOnceParameters(clang::AnalysisDeclContext &amp; AC, clang::CalledOnceCheckHandler &amp; Handler, bool CheckConventionalParameters)'/>
<doc f='llvm/clang/include/clang/Analysis/Analyses/CalledOnceCheck.h' l='94'>/// Check given CFG for &apos;called once&apos; parameter violations.
///
/// It traverses the function and tracks how such parameters are used.
/// It detects two main violations:
///   * parameter is called twice
///   * parameter is not called
///
/// \param AC -- context.
/// \param Handler -- a handler for found violations.
/// \param CheckConventionalParameters -- true, if we want to check parameters
/// not explicitly marked as &apos;called once&apos;, but having the same requirements
/// according to conventions.</doc>
<use f='llvm/clang/lib/Sema/AnalysisBasedWarnings.cpp' l='2350' u='c' c='_ZN5clang4sema21AnalysisBasedWarnings13IssueWarningsENS1_6PolicyEPNS0_17FunctionScopeInfoEPKNS_4DeclENS_8QualTypeE'/>
