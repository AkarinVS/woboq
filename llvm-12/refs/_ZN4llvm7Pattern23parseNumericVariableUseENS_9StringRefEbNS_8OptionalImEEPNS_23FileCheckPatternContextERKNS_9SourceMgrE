<dec f='llvm/llvm/lib/FileCheck/FileCheckImpl.h' l='755' type='static Expected&lt;std::unique_ptr&lt;NumericVariableUse&gt; &gt; llvm::Pattern::parseNumericVariableUse(llvm::StringRef Name, bool IsPseudo, Optional&lt;size_t&gt; LineNumber, llvm::FileCheckPatternContext * Context, const llvm::SourceMgr &amp; SM)'/>
<def f='llvm/llvm/lib/FileCheck/FileCheck.cpp' l='501' ll='534' type='static Expected&lt;std::unique_ptr&lt;NumericVariableUse&gt; &gt; llvm::Pattern::parseNumericVariableUse(llvm::StringRef Name, bool IsPseudo, Optional&lt;size_t&gt; LineNumber, llvm::FileCheckPatternContext * Context, const llvm::SourceMgr &amp; SM)'/>
<use f='llvm/llvm/lib/FileCheck/FileCheck.cpp' l='562' u='c' c='_ZN4llvm7Pattern19parseNumericOperandERNS_9StringRefENS0_14AllowedOperandEbNS_8OptionalImEEPNS_23FileCheckPatternContextERKNS_9SourceMgrE'/>
<doc f='llvm/llvm/lib/FileCheck/FileCheckImpl.h' l='749'>/// Parses \p Name as a (pseudo if \p IsPseudo is true) numeric variable use
  /// at line \p LineNumber, or before input is parsed if \p LineNumber is
  /// None. Parameter \p Context points to the class instance holding the live
  /// string and numeric variables. \returns the pointer to the class instance
  /// representing that variable if successful, or an error holding a
  /// diagnostic against \p SM otherwise.</doc>
