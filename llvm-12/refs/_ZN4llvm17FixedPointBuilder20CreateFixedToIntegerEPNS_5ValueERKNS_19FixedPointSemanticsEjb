<def f='llvm/llvm/include/llvm/IR/FixedPointBuilder.h' l='152' ll='157' type='llvm::Value * llvm::FixedPointBuilder::CreateFixedToInteger(llvm::Value * Src, const llvm::FixedPointSemantics &amp; SrcSema, unsigned int DstWidth, bool DstIsSigned)'/>
<use f='llvm/clang/lib/CodeGen/CGExprScalar.cpp' l='1452' u='c' c='_ZN12_GLOBAL__N_117ScalarExprEmitter24EmitFixedPointConversionEPN4llvm5ValueEN5clang8QualTypeES5_NS4_14SourceLocationE'/>
<doc f='llvm/llvm/include/llvm/IR/FixedPointBuilder.h' l='146'>/// Convert an integer value representing a fixed-point number to an integer
  /// with the given bit width and signedness.
  /// \p Src         - The source value
  /// \p SrcSema     - The fixed-point semantic of the source value
  /// \p DstWidth    - The bit width of the result value
  /// \p DstIsSigned - The signedness of the result value</doc>
