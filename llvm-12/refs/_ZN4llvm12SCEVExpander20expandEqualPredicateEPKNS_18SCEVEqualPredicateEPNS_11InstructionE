<dec f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='284' type='llvm::Value * llvm::SCEVExpander::expandEqualPredicate(const llvm::SCEVEqualPredicate * Pred, llvm::Instruction * Loc)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='282'>/// A specialized variant of expandCodeForPredicate, handling the case when
  /// we are expanding code for a SCEVEqualPredicate.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='2421' u='c' c='_ZN4llvm12SCEVExpander22expandCodeForPredicateEPKNS_13SCEVPredicateEPNS_11InstructionE'/>
<def f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='2430' ll='2440' type='llvm::Value * llvm::SCEVExpander::expandEqualPredicate(const llvm::SCEVEqualPredicate * Pred, llvm::Instruction * IP)'/>
