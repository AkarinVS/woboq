<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h' l='806' type='bool clang::ento::ExprEngine::mayInlineDecl(clang::AnalysisDeclContext * ADC) const'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h' l='804'>/// See if the given AnalysisDeclContext is built for a function that we
  /// should inline, just by looking at the declaration of the function.</doc>
<def f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='890' ll='944' type='bool clang::ento::ExprEngine::mayInlineDecl(clang::AnalysisDeclContext * CalleeADC) const'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='975' u='c' c='_ZN5clang4ento10ExprEngine16shouldInlineCallERKNS0_9CallEventEPKNS_4DeclEPKNS0_12ExplodedNodeERKNS0_15EvalCallOptionsE'/>
<doc f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='885'>/// Returns true if the function in \p CalleeADC may be inlined in general.
///
/// This checks static properties of the function, such as its signature and
/// CFG, to determine whether the analyzer should ever consider inlining it,
/// in any context.</doc>
