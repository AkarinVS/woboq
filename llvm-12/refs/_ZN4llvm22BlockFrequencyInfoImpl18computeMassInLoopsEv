<dec f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='957' type='void llvm::BlockFrequencyInfoImpl::computeMassInLoops()'/>
<use f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='1094' u='c' c='_ZN4llvm22BlockFrequencyInfoImpl9calculateERKNS_10bfi_detail7TypeMapIT_E9FunctionTERKNS4_22BranchProbabilityInfoTERKNS4_9LoopInfoTE'/>
<def f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='1200' ll='1212' type='void llvm::BlockFrequencyInfoImpl::computeMassInLoops()'/>
<doc f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='948'>/// Compute mass in all loops.
  ///
  /// For each loop bottom-up, call \a computeMassInLoop().
  ///
  /// \a computeMassInLoop() aborts (and returns \c false) on loops that
  /// contain a irreducible sub-SCCs.  Use \a computeIrreducibleMass() and then
  /// re-enter \a computeMassInLoop().
  ///
  /// \post \a computeMassInLoop() has returned \c true for every loop.</doc>
