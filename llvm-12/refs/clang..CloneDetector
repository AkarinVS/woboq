<def f='llvm/clang/include/clang/Analysis/CloneDetection.h' l='166' ll='224'/>
<size>208</size>
<doc f='llvm/clang/include/clang/Analysis/CloneDetection.h' l='153'>/// Searches for similar subtrees in the AST.
///
/// First, this class needs several declarations with statement bodies which
/// can be passed via analyzeCodeBody. Afterwards all statements can be
/// searched for clones by calling findClones with a given list of constraints
/// that should specify the wanted properties of the clones.
///
/// The result of findClones can be further constrained with the constrainClones
/// method.
///
/// This class only searches for clones in executable source code
/// (e.g. function bodies). Other clones (e.g. cloned comments or declarations)
/// are not supported.</doc>
<fun r='_ZN5clang13CloneDetector15analyzeCodeBodyEPKNS_4DeclE'/>
<fun r='_ZN5clang13CloneDetector15constrainClonesERSt6vectorIN4llvm11SmallVectorINS_12StmtSequenceELj8EEESaIS5_EET_'/>
<fun r='_ZN5clang13CloneDetector15constrainClonesERSt6vectorIN4llvm11SmallVectorINS_12StmtSequenceELj8EEESaIS5_EET_DpT0_'/>
<fun r='_ZN5clang13CloneDetector10findClonesERSt6vectorIN4llvm11SmallVectorINS_12StmtSequenceELj8EEESaIS5_EEDpT_'/>
<mbr r='clang::CloneDetector::Sequences' o='0' t='clang::CloneDetector::CloneGroup'/>
<fun r='_ZN5clang13CloneDetector15analyzeCodeBodyEPKNS_4DeclE'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/CloneChecker.cpp' l='37'/>
<size>208</size>
<use f='llvm/clang/unittests/Analysis/CloneDetectionTest.cpp' l='21'/>
<use f='llvm/clang/unittests/Analysis/CloneDetectionTest.cpp' l='24' c='_ZN5clang8analysis12_GLOBAL__N_121CloneDetectionVisitorC1ERNS_13CloneDetectorE'/>
<use f='llvm/clang/unittests/Analysis/CloneDetectionTest.cpp' l='62' c='_ZN5clang8analysis12_GLOBAL__N_140CloneDetector_FilterFunctionsByName_Test8TestBodyEv'/>
<size>208</size>
