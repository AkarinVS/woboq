<dec f='llvm/clang/include/clang/Tooling/Syntax/Tokens.h' l='303' type='std::vector&lt;const syntax::Token *&gt; clang::syntax::TokenBuffer::macroExpansions(clang::FileID FID) const'/>
<doc f='llvm/clang/include/clang/Tooling/Syntax/Tokens.h' l='295'>/// Get all tokens that expand a macro in \p FID. For the following input
  ///     #define FOO B
  ///     #define FOO2(X) int X
  ///     FOO2(XY)
  ///     int B;
  ///     FOO;
  /// macroExpansions() returns {&quot;FOO2&quot;, &quot;FOO&quot;} (from line 3 and 5
  /// respecitvely).</doc>
<def f='llvm/clang/lib/Tooling/Syntax/Tokens.cpp' l='482' ll='495' type='std::vector&lt;const syntax::Token *&gt; clang::syntax::TokenBuffer::macroExpansions(clang::FileID FID) const'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TokensTest.cpp' l='882' u='c' c='_ZN12_GLOBAL__N_136TokenBufferTest_MacroExpansions_Test8TestBodyEv'/>
