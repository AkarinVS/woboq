<dec f='llvm/llvm/include/llvm/CodeGen/SelectionDAG.h' l='2018' type='llvm::SDValue llvm::SelectionDAG::getNeutralElement(unsigned int Opcode, const llvm::SDLoc &amp; DL, llvm::EVT VT, llvm::SDNodeFlags Flags)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/SelectionDAG.h' l='2017'>/// Get the (commutative) neutral element for the given opcode, if it exists.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp' l='5001' u='c' c='_ZN4llvm16DAGTypeLegalizer20WidenVecOp_VECREDUCEEPNS_6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp' l='5027' u='c' c='_ZN4llvm16DAGTypeLegalizer24WidenVecOp_VECREDUCE_SEQEPNS_6SDNodeE'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='10142' ll='10178' type='llvm::SDValue llvm::SelectionDAG::getNeutralElement(unsigned int Opcode, const llvm::SDLoc &amp; DL, llvm::EVT VT, llvm::SDNodeFlags Flags)'/>
