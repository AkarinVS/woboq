<def f='llvm/llvm/include/llvm/IR/LegacyPassManager.h' l='98' macro='1' type='legacy::PassManagerBase * llvm::unwrap(LLVMPassManagerRef P)'/>
<def f='llvm/llvm/include/llvm/IR/LegacyPassManager.h' l='98' macro='1' type='T * llvm::unwrap(LLVMPassManagerRef P)'/>
<use f='llvm/llvm/include/llvm/IR/LegacyPassManager.h' l='98' macro='1' u='c' c='_ZN4llvm6unwrapEP21LLVMOpaquePassManager'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='4139' u='c' c='LLVMRunPassManager'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='4143' u='c' c='LLVMInitializeFunctionPassManager'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='4147' u='c' c='LLVMRunFunctionPassManager'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='4151' u='c' c='LLVMFinalizeFunctionPassManager'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='4155' u='c' c='LLVMDisposePassManager'/>
<use f='llvm/llvm/lib/Target/Target.cpp' l='65' u='c' c='LLVMAddTargetLibraryInfo'/>
<use f='llvm/llvm/lib/Target/TargetMachineC.cpp' l='269' u='c' c='LLVMAddAnalysisPasses'/>
<use f='llvm/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombine.cpp' l='462' u='c' c='LLVMAddAggressiveInstCombinerPass'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/Coroutines.cpp' l='736' u='c' c='LLVMAddCoroEarlyPass'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/Coroutines.cpp' l='740' u='c' c='LLVMAddCoroSplitPass'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/Coroutines.cpp' l='744' u='c' c='LLVMAddCoroElidePass'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/Coroutines.cpp' l='748' u='c' c='LLVMAddCoroCleanupPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='73' u='c' c='LLVMAddArgumentPromotionPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='77' u='c' c='LLVMAddCalledValuePropagationPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='81' u='c' c='LLVMAddConstantMergePass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='85' u='c' c='LLVMAddDeadArgEliminationPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='89' u='c' c='LLVMAddFunctionAttrsPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='93' u='c' c='LLVMAddFunctionInliningPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='97' u='c' c='LLVMAddAlwaysInlinerPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='101' u='c' c='LLVMAddGlobalDCEPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='105' u='c' c='LLVMAddGlobalOptimizerPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='109' u='c' c='LLVMAddPruneEHPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='113' u='c' c='LLVMAddIPSCCPPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='117' u='c' c='LLVMAddMergeFunctionsPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='124' u='c' c='LLVMAddInternalizePass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='131' u='c' c='LLVMAddInternalizePassWithMustPreservePredicate'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='137' u='c' c='LLVMAddStripDeadPrototypesPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='141' u='c' c='LLVMAddStripSymbolsPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='1264' u='c' c='LLVMPassManagerBuilderPopulateFunctionPassManager'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='1272' u='c' c='LLVMPassManagerBuilderPopulateModulePassManager'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='1281' u='c' c='LLVMPassManagerBuilderPopulateLTOPassManager'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='4134' u='c' c='LLVMAddInstructionCombiningPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='121' u='c' c='_Z26LLVMAddLoopSimplifyCFGPassP21LLVMOpaquePassManager'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='129' u='c' c='LLVMAddAggressiveDCEPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='133' u='c' c='LLVMAddDCEPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='137' u='c' c='LLVMAddBitTrackingDCEPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='141' u='c' c='LLVMAddAlignmentFromAssumptionsPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='145' u='c' c='LLVMAddCFGSimplificationPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='149' u='c' c='LLVMAddDeadStoreEliminationPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='153' u='c' c='LLVMAddScalarizerPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='157' u='c' c='LLVMAddGVNPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='161' u='c' c='LLVMAddNewGVNPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='165' u='c' c='LLVMAddMergedLoadStoreMotionPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='169' u='c' c='LLVMAddIndVarSimplifyPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='173' u='c' c='LLVMAddInstructionSimplifyPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='177' u='c' c='LLVMAddJumpThreadingPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='181' u='c' c='_Z19LLVMAddLoopSinkPassP21LLVMOpaquePassManager'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='185' u='c' c='LLVMAddLICMPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='189' u='c' c='LLVMAddLoopDeletionPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='193' u='c' c='_Z22LLVMAddLoopFlattenPassP21LLVMOpaquePassManager'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='197' u='c' c='LLVMAddLoopIdiomPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='201' u='c' c='LLVMAddLoopRotatePass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='205' u='c' c='LLVMAddLoopRerollPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='209' u='c' c='LLVMAddLoopUnrollPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='213' u='c' c='LLVMAddLoopUnrollAndJamPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='217' u='c' c='LLVMAddLoopUnswitchPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='221' u='c' c='LLVMAddLowerAtomicPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='225' u='c' c='LLVMAddMemCpyOptPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='229' u='c' c='LLVMAddPartiallyInlineLibCallsPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='233' u='c' c='LLVMAddReassociatePass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='237' u='c' c='LLVMAddSCCPPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='241' u='c' c='LLVMAddScalarReplAggregatesPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='245' u='c' c='LLVMAddScalarReplAggregatesPassSSA'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='250' u='c' c='LLVMAddScalarReplAggregatesPassWithThreshold'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='258' u='c' c='LLVMAddTailCallEliminationPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='262' u='c' c='LLVMAddDemoteMemoryToRegisterPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='266' u='c' c='LLVMAddVerifierPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='270' u='c' c='LLVMAddCorrelatedValuePropagationPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='274' u='c' c='LLVMAddEarlyCSEPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='278' u='c' c='LLVMAddEarlyCSEMemSSAPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='282' u='c' c='_Z25LLVMAddGVNHoistLegacyPassP21LLVMOpaquePassManager'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='286' u='c' c='LLVMAddTypeBasedAliasAnalysisPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='290' u='c' c='LLVMAddScopedNoAliasAAPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='294' u='c' c='LLVMAddBasicAliasAnalysisPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='298' u='c' c='LLVMAddLowerConstantIntrinsicsPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='302' u='c' c='LLVMAddLowerExpectIntrinsicPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='306' u='c' c='LLVMAddUnifyFunctionExitNodesPass'/>
<use f='llvm/llvm/lib/Transforms/Utils/Utils.cpp' l='57' u='c' c='LLVMAddLowerSwitchPass'/>
<use f='llvm/llvm/lib/Transforms/Utils/Utils.cpp' l='61' u='c' c='LLVMAddPromoteMemoryToRegisterPass'/>
<use f='llvm/llvm/lib/Transforms/Utils/Utils.cpp' l='65' u='c' c='LLVMAddAddDiscriminatorsPass'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/Vectorize.cpp' l='37' u='c' c='LLVMAddLoopVectorizePass'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/Vectorize.cpp' l='41' u='c' c='LLVMAddSLPVectorizePass'/>
