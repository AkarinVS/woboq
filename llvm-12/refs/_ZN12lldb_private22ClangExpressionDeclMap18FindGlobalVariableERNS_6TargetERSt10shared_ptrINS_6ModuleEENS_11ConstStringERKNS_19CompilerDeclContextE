<dec f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.h' l='507' type='lldb::VariableSP lldb_private::ClangExpressionDeclMap::FindGlobalVariable(lldb_private::Target &amp; target, lldb::ModuleSP &amp; module, lldb_private::ConstString name, const lldb_private::CompilerDeclContext &amp; namespace_decl)'/>
<def f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.cpp' l='610' ll='623' type='lldb::VariableSP lldb_private::ClangExpressionDeclMap::FindGlobalVariable(lldb_private::Target &amp; target, lldb::ModuleSP &amp; module, lldb_private::ConstString name, const lldb_private::CompilerDeclContext &amp; namespace_decl)'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.cpp' l='1413' u='c' c='_ZN12lldb_private22ClangExpressionDeclMap24FindExternalVisibleDeclsERNS_17NameSearchContextESt10shared_ptrINS_6ModuleEERKNS_19CompilerDeclContextE'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.h' l='490'>/// Given a target, find a variable that matches the given name and type.
  ///
  /// \param[in] target
  ///     The target to use as a basis for finding the variable.
  ///
  /// \param[in] module
  ///     If non-NULL, the module to search.
  ///
  /// \param[in] name
  ///     The name as a plain C string.
  ///
  /// \param[in] namespace_decl
  ///     If non-NULL and module is non-NULL, the parent namespace.
  ///
  /// \return
  ///     The LLDB Variable found, or NULL if none was found.</doc>
