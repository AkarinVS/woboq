<def f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='870' ll='872' type='deferredval_ty&lt;llvm::BasicBlock&gt; llvm::PatternMatch::m_Deferred(llvm::BasicBlock *const &amp; BB)'/>
<doc f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='869'>/// A commutative-friendly version of m_Specific().</doc>
<use f='llvm/llvm/unittests/IR/PatternMatch.cpp' l='1263' u='c' c='_ZN12_GLOBAL__N_136PatternMatchTest_CondBranchTest_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/PatternMatch.cpp' l='1266' u='c' c='_ZN12_GLOBAL__N_136PatternMatchTest_CondBranchTest_Test8TestBodyEv'/>
