<def f='llvm/llvm/include/llvm/Support/MathExtras.h' l='480' ll='482' type='bool llvm::isShiftedMask_32(uint32_t Value)'/>
<doc f='llvm/llvm/include/llvm/Support/MathExtras.h' l='478'>/// Return true if the argument contains a non-empty sequence of ones with the
/// remainder zero (32 bit version.) Ex. isShiftedMask_32(0x0000FF00U) == true.</doc>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp' l='2436' u='c' c='_ZL13isShiftedMaskmN4llvm3EVTE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp' l='3118' u='c' c='_ZN12_GLOBAL__N_115ARMDAGToDAGISel24tryV6T2BitfieldExtractOpEPN4llvm6SDNodeEb'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='12960' u='c' c='_ZL15CombineANDShiftPN4llvm6SDNodeERNS_14TargetLowering15DAGCombinerInfoEPKNS_12ARMSubtargetE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='12973' u='c' c='_ZL15CombineANDShiftPN4llvm6SDNodeERNS_14TargetLowering15DAGCombinerInfoEPKNS_12ARMSubtargetE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='18340' u='c' c='_ZN4llvm3ARM22isBitFieldInvertedMaskEj'/>
<use f='llvm/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h' l='62' u='c' c='_ZN4llvmL11isRunOfOnesEjRjS0_'/>
<use f='llvm/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h' l='70' u='c' c='_ZN4llvmL11isRunOfOnesEjRjS0_'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCTargetTransformInfo.cpp' l='301' u='c' c='_ZN4llvm10PPCTTIImpl17getIntImmCostInstEjjRKNS_5APIntEPNS_4TypeENS_19TargetTransformInfo14TargetCostKindEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCTargetTransformInfo.cpp' l='302' u='c' c='_ZN4llvm10PPCTTIImpl17getIntImmCostInstEjjRKNS_5APIntEPNS_4TypeENS_19TargetTransformInfo14TargetCostKindEPNS_11InstructionE'/>
