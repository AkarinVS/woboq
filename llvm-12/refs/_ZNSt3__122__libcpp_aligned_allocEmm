<def f='llvm/build/include/c++/v1/new' l='311' ll='321' type='void * std::__1::__libcpp_aligned_alloc(std::size_t __alignment, std::size_t __size)'/>
<doc f='llvm/build/include/c++/v1/new' l='305'>// Low-level helpers to call the aligned allocation and deallocation functions
// on the target platform. This is used to implement libc++&apos;s own memory
// allocation routines -- if you need to allocate memory inside the library,
// chances are that you want to use `__libcpp_allocate` instead.
//
// Returns the allocated memory, or `nullptr` on failure.</doc>
<def f='llvm/libcxx/include/new' l='311' ll='321' type='void * std::__1::__libcpp_aligned_alloc(std::size_t __alignment, std::size_t __size)'/>
<doc f='llvm/libcxx/include/new' l='305'>// Low-level helpers to call the aligned allocation and deallocation functions
// on the target platform. This is used to implement libc++&apos;s own memory
// allocation routines -- if you need to allocate memory inside the library,
// chances are that you want to use `__libcpp_allocate` instead.
//
// Returns the allocated memory, or `nullptr` on failure.</doc>
<use f='llvm/libcxxabi/src/fallback_malloc.cpp' l='216' u='c' c='__cxxabiv1::__aligned_malloc_with_fallback'/>
<use f='llvm/libcxxabi/src/stdlib_new_delete.cpp' l='152' u='c' c='_ZnwmSt11align_val_t'/>
