<dec f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='349' type='llvm::ConstantRange llvm::ConstantRange::overflowingBinaryOp(Instruction::BinaryOps BinOp, const llvm::ConstantRange &amp; Other, unsigned int NoWrapKind) const'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='345'>/// Return a new range representing the possible values resulting
  /// from an application of the specified overflowing binary operator to a
  /// left hand side of this range and a right hand side of \p Other given
  /// the provided knowledge about lack of wrapping \p NoWrapKind.</doc>
<use f='llvm/llvm/lib/Analysis/LazyValueInfo.cpp' l='1022' u='c' c='_ZN12_GLOBAL__N_117LazyValueInfoImpl23solveBlockValueBinaryOpEPN4llvm14BinaryOperatorEPNS1_10BasicBlockE'/>
<def f='llvm/llvm/lib/IR/ConstantRange.cpp' l='837' ll='852' type='llvm::ConstantRange llvm::ConstantRange::overflowingBinaryOp(Instruction::BinaryOps BinOp, const llvm::ConstantRange &amp; Other, unsigned int NoWrapKind) const'/>
