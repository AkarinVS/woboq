<dec f='llvm/lld/wasm/SymbolTable.h' l='116' type='lld::wasm::InputFunction * lld::wasm::SymbolTable::replaceWithUnreachable(lld::wasm::Symbol * sym, const llvm::wasm::WasmSignature &amp; sig, llvm::StringRef debugName)'/>
<def f='llvm/lld/wasm/SymbolTable.cpp' l='743' ll='757' type='lld::wasm::InputFunction * lld::wasm::SymbolTable::replaceWithUnreachable(lld::wasm::Symbol * sym, const llvm::wasm::WasmSignature &amp; sig, llvm::StringRef debugName)'/>
<use f='llvm/lld/wasm/SymbolTable.cpp' l='763' u='c' c='_ZN3lld4wasm11SymbolTable20replaceWithUndefinedEPNS0_6SymbolE'/>
<use f='llvm/lld/wasm/SymbolTable.cpp' l='800' u='c' c='_ZN3lld4wasm11SymbolTable19createUndefinedStubERKN4llvm4wasm13WasmSignatureE'/>
<use f='llvm/lld/wasm/SymbolTable.cpp' l='861' u='c' c='_ZN3lld4wasm11SymbolTable20handleSymbolVariantsEv'/>
<doc f='llvm/lld/wasm/SymbolTable.cpp' l='739'>// Replace the given symbol body with an unreachable function.
// This is used by handleWeakUndefines in order to generate a callable
// equivalent of an undefined function and also handleSymbolVariants for
// undefined functions that don&apos;t match the signature of the definition.</doc>
