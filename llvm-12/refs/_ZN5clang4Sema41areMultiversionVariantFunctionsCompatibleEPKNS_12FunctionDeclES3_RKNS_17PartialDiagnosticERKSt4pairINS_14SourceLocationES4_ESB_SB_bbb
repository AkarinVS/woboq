<dec f='llvm/clang/include/clang/Sema/Sema.h' l='10285' type='bool clang::Sema::areMultiversionVariantFunctionsCompatible(const clang::FunctionDecl * OldFD, const clang::FunctionDecl * NewFD, const clang::PartialDiagnostic &amp; NoProtoDiagID, const clang::PartialDiagnosticAt &amp; NoteCausedDiagIDAt, const clang::PartialDiagnosticAt &amp; NoSupportDiagIDAt, const clang::PartialDiagnosticAt &amp; DiffDiagIDAt, bool TemplatesSupported, bool ConstexprSupported, bool CLinkageMayDiffer)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='10284'>/// Checks if the variant/multiversion functions are compatible.</doc>
<def f='llvm/clang/lib/Sema/SemaDecl.cpp' l='10148' ll='10258' type='bool clang::Sema::areMultiversionVariantFunctionsCompatible(const clang::FunctionDecl * OldFD, const clang::FunctionDecl * NewFD, const clang::PartialDiagnostic &amp; NoProtoDiagID, const clang::PartialDiagnosticAt &amp; NoteCausedDiagIDAt, const clang::PartialDiagnosticAt &amp; NoSupportDiagIDAt, const clang::PartialDiagnosticAt &amp; DiffDiagIDAt, bool TemplatesSupported, bool ConstexprSupported, bool CLinkageMayDiffer)'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='10286' u='c' c='_ZL32CheckMultiVersionAdditionalRulesRN5clang4SemaEPKNS_12FunctionDeclES4_bNS_16MultiVersionKindE'/>
<use f='llvm/clang/lib/Sema/SemaOpenMP.cpp' l='6486' u='c' c='_ZN5clang4Sema33checkOpenMPDeclareVariantFunctionENS_9OpaquePtrINS_12DeclGroupRefEEEPNS_4ExprERNS_12OMPTraitInfoENS_11SourceRangeE'/>
