<def f='llvm/clang/include/clang/Lex/Token.h' l='285' type='bool clang::Token::needsCleaning() const'/>
<doc f='llvm/clang/include/clang/Lex/Token.h' l='284'>/// Return true if this token has trigraphs or escaped newlines in it.</doc>
<use f='llvm/clang/lib/Frontend/PrintPreprocessedOutput.cpp' l='789' u='c' c='_ZL23PrintPreprocessedTokensRN5clang12PreprocessorERNS_5TokenEPN12_GLOBAL__N_124PrintPPOutputPPCallbacksERN4llvm11raw_ostreamE'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='354' u='c' c='_ZN5clang5Lexer11getSpellingENS_14SourceLocationERN4llvm15SmallVectorImplIcEERKNS_13SourceManagerERKNS_11LangOptionsEPb'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='381' u='c' c='_ZN5clang5Lexer11getSpellingB5cxx11ERKNS_5TokenERKNS_13SourceManagerERKNS_11LangOptionsEPb'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='434' u='c' c='_ZN5clang5Lexer11getSpellingERKNS_5TokenERPKcRKNS_13SourceManagerERKNS_11LangOptionsEPb'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='663' u='c' c='_ZN5clang5Lexer15ComputePreambleEN4llvm9StringRefERKNS_11LangOptionsEj'/>
<use f='llvm/clang/lib/Lex/PPDirectives.cpp' l='505' u='c' c='_ZN5clang12Preprocessor28SkipExcludedConditionalBlockENS_14SourceLocationES1_bbS1_'/>
<use f='llvm/clang/lib/Lex/Preprocessor.cpp' l='244' u='c' c='_ZNK5clang12Preprocessor9DumpTokenERKNS_5TokenEb'/>
<use f='llvm/clang/lib/Lex/Preprocessor.cpp' l='470' u='c' c='_ZNK5clang12Preprocessor11getSpellingERKNS_5TokenERN4llvm15SmallVectorImplIcEEPb'/>
<use f='llvm/clang/lib/Lex/Preprocessor.cpp' l='701' u='c' c='_ZNK5clang12Preprocessor20LookUpIdentifierInfoERNS_5TokenE'/>
<use f='llvm/clang/lib/Lex/TokenConcatenation.cpp' l='50' u='c' c='_ZNK5clang18TokenConcatenation24IsIdentifierStringPrefixERKNS_5TokenE'/>
<use f='llvm/clang/lib/Lex/TokenConcatenation.cpp' l='132' u='c' c='_ZL12GetFirstCharRKN5clang12PreprocessorERKNS_5TokenE'/>
<use f='llvm/clang/lib/Tooling/Syntax/Tokens.cpp' l='504' u='c' c='_ZN5clang6syntax8tokenizeERKNS0_9FileRangeERKNS_13SourceManagerERKNS_11LangOptionsE'/>
