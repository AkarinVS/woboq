<dec f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='91' type='llvm::PostIncLoopSet'/>
<use f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='311' u='w' c='_ZN4llvm12SCEVExpander10setPostIncERKNS_11SmallPtrSetIPKNS_4LoopELj2EEE'/>
<use f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='316' u='m' c='_ZN4llvm12SCEVExpander12clearPostIncEv'/>
<offset>2304</offset>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='87'>/// Addrecs referring to any of the given loops are expanded in post-inc
  /// mode. For example, expanding {1,+,1}&lt;L&gt; in post-inc mode returns the add
  /// instruction that adds one to the phi for {0,+,1}&lt;L&gt;, as opposed to a new
  /// phi starting at 1. This is only supported in non-canonical mode.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1294' u='r' c='_ZN4llvm12SCEVExpander25getAddRecExprPHILiterallyEPKNS_14SCEVAddRecExprEPKNS_4LoopEPNS_4TypeES8_RS8_Rb'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1295' u='m' c='_ZN4llvm12SCEVExpander25getAddRecExprPHILiterallyEPKNS_14SCEVAddRecExprEPKNS_4LoopEPNS_4TypeES8_RS8_Rb'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1365' u='w' c='_ZN4llvm12SCEVExpander25getAddRecExprPHILiterallyEPKNS_14SCEVAddRecExprEPKNS_4LoopEPNS_4TypeES8_RS8_Rb'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1381' u='m' c='_ZN4llvm12SCEVExpander25expandAddRecExprLiterallyEPKNS_14SCEVAddRecExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1435' u='m' c='_ZN4llvm12SCEVExpander25expandAddRecExprLiterallyEPKNS_14SCEVAddRecExprE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1919' u='m' c='_ZN4llvm12SCEVExpander6expandEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='1980' u='m' c='_ZN4llvm12SCEVExpander19rememberInstructionEPNS_5ValueE'/>
