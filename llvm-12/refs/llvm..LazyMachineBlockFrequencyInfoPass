<inh f='llvm/llvm/include/llvm/CodeGen/MachineFunctionPass.h' l='30' c='llvm::MachineFunctionPass'/>
<def f='llvm/llvm/include/llvm/CodeGen/LazyMachineBlockFrequencyInfo.h' l='37' ll='73'/>
<use f='llvm/llvm/lib/CodeGen/LazyMachineBlockFrequencyInfo.cpp' l='27' c='_ZL51initializeLazyMachineBlockFrequencyInfoPassPassOnceRN4llvm12PassRegistryE'/>
<size>136</size>
<doc f='llvm/llvm/include/llvm/CodeGen/LazyMachineBlockFrequencyInfo.h' l='25'>/// This is an alternative analysis pass to MachineBlockFrequencyInfo.
/// The difference is that with this pass, the block frequencies are not
/// computed when the analysis pass is executed but rather when the BFI result
/// is explicitly requested by the analysis client.
///
/// This works by checking querying if MBFI is available and otherwise
/// generating MBFI on the fly.  In this case the passes required for (LI, DT)
/// are also queried before being computed on the fly.
///
/// Note that it is expected that we wouldn&apos;t need this functionality for the
/// new PM since with the new PM, analyses are executed on demand.</doc>
<mbr r='llvm::LazyMachineBlockFrequencyInfoPass::OwnedMBFI' o='832' t='std::unique_ptr&lt;MachineBlockFrequencyInfo&gt;'/>
<mbr r='llvm::LazyMachineBlockFrequencyInfoPass::OwnedMLI' o='896' t='std::unique_ptr&lt;MachineLoopInfo&gt;'/>
<mbr r='llvm::LazyMachineBlockFrequencyInfoPass::OwnedMDT' o='960' t='std::unique_ptr&lt;MachineDominatorTree&gt;'/>
<mbr r='llvm::LazyMachineBlockFrequencyInfoPass::MF' o='1024' t='llvm::MachineFunction *'/>
<fun r='_ZNK4llvm33LazyMachineBlockFrequencyInfoPass23calculateIfNotAvailableEv'/>
<smbr r='llvm::LazyMachineBlockFrequencyInfoPass::ID' t='char'/>
<fun r='_ZN4llvm33LazyMachineBlockFrequencyInfoPassC1Ev'/>
<fun r='_ZN4llvm33LazyMachineBlockFrequencyInfoPass6getBFIEv'/>
<fun r='_ZNK4llvm33LazyMachineBlockFrequencyInfoPass6getBFIEv'/>
<fun r='_ZNK4llvm33LazyMachineBlockFrequencyInfoPass16getAnalysisUsageERNS_13AnalysisUsageE'/>
<fun r='_ZN4llvm33LazyMachineBlockFrequencyInfoPass20runOnMachineFunctionERNS_15MachineFunctionE'/>
<fun r='_ZN4llvm33LazyMachineBlockFrequencyInfoPass13releaseMemoryEv'/>
<fun r='_ZNK4llvm33LazyMachineBlockFrequencyInfoPass5printERNS_11raw_ostreamEPKNS_6ModuleE'/>
<smbr r='llvm::LazyMachineBlockFrequencyInfoPass::ID' t='char'/>
<fun r='_ZN4llvm33LazyMachineBlockFrequencyInfoPassC1Ev'/>
<fun r='_ZNK4llvm33LazyMachineBlockFrequencyInfoPass5printERNS_11raw_ostreamEPKNS_6ModuleE'/>
<fun r='_ZNK4llvm33LazyMachineBlockFrequencyInfoPass16getAnalysisUsageERNS_13AnalysisUsageE'/>
<fun r='_ZN4llvm33LazyMachineBlockFrequencyInfoPass13releaseMemoryEv'/>
<fun r='_ZNK4llvm33LazyMachineBlockFrequencyInfoPass23calculateIfNotAvailableEv'/>
<fun r='_ZN4llvm33LazyMachineBlockFrequencyInfoPass20runOnMachineFunctionERNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/CodeGen/MachineCombiner.cpp' l='146' c='_ZNK12_GLOBAL__N_115MachineCombiner16getAnalysisUsageERN4llvm13AnalysisUsageE'/>
<use f='llvm/llvm/lib/CodeGen/MachineCombiner.cpp' l='718' c='_ZN12_GLOBAL__N_115MachineCombiner20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<size>136</size>
<use f='llvm/llvm/lib/CodeGen/MachineOptimizationRemarkEmitter.cpp' l='76' c='_ZN4llvm36MachineOptimizationRemarkEmitterPass20runOnMachineFunctionERNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/CodeGen/MachineOptimizationRemarkEmitter.cpp' l='86' c='_ZNK4llvm36MachineOptimizationRemarkEmitterPass16getAnalysisUsageERNS_13AnalysisUsageE'/>
<size>136</size>
<use f='llvm/llvm/lib/CodeGen/TailDuplication.cpp' l='44' c='_ZNK12_GLOBAL__N_117TailDuplicateBase16getAnalysisUsageERN4llvm13AnalysisUsageE'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplication.cpp' l='90' c='_ZN12_GLOBAL__N_117TailDuplicateBase20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<size>136</size>
<use f='llvm/llvm/lib/Target/X86/X86FixupBWInsts.cpp' l='120' c='_ZNK12_GLOBAL__N_115FixupBWInstPass16getAnalysisUsageERN4llvm13AnalysisUsageE'/>
<use f='llvm/llvm/lib/Target/X86/X86FixupBWInsts.cpp' l='168' c='_ZN12_GLOBAL__N_115FixupBWInstPass20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<size>136</size>
<use f='llvm/llvm/lib/Target/X86/X86FixupLEAs.cpp' l='119' c='_ZNK12_GLOBAL__N_112FixupLEAPass16getAnalysisUsageERN4llvm13AnalysisUsageE'/>
<use f='llvm/llvm/lib/Target/X86/X86FixupLEAs.cpp' l='219' c='_ZN12_GLOBAL__N_112FixupLEAPass20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<size>136</size>
<use f='llvm/llvm/lib/Target/X86/X86OptimizeLEAs.cpp' l='255' c='_ZNK12_GLOBAL__N_118X86OptimizeLEAPass16getAnalysisUsageERN4llvm13AnalysisUsageE'/>
<use f='llvm/llvm/lib/Target/X86/X86OptimizeLEAs.cpp' l='696' c='_ZN12_GLOBAL__N_118X86OptimizeLEAPass20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<size>136</size>
<use f='llvm/llvm/lib/Target/X86/X86PadShortFunction.cpp' l='60' c='_ZNK12_GLOBAL__N_112PadShortFunc16getAnalysisUsageERN4llvm13AnalysisUsageE'/>
<use f='llvm/llvm/lib/Target/X86/X86PadShortFunction.cpp' l='61' c='_ZNK12_GLOBAL__N_112PadShortFunc16getAnalysisUsageERN4llvm13AnalysisUsageE'/>
<use f='llvm/llvm/lib/Target/X86/X86PadShortFunction.cpp' l='121' c='_ZN12_GLOBAL__N_112PadShortFunc20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<size>136</size>
