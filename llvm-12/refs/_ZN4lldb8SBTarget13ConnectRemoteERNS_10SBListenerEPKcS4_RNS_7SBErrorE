<dec f='llvm/lldb/include/lldb/API/SBTarget.h' l='277' type='lldb::SBProcess lldb::SBTarget::ConnectRemote(lldb::SBListener &amp; listener, const char * url, const char * plugin_name, lldb::SBError &amp; error)'/>
<use f='llvm/build/tools/lldb/bindings/python/LLDBWrapPython.cpp' l='53942' u='c' c='_ZL28_wrap_SBTarget_ConnectRemoteP7_objectS0_'/>
<doc f='llvm/lldb/include/lldb/API/SBTarget.h' l='258'>/// Connect to a remote debug server with url.
  ///
  /// \param[in] listener
  ///     An optional listener that will receive all process events.
  ///     If \a listener is valid then \a listener will listen to all
  ///     process events. If not valid, then this target&apos;s debugger
  ///     (SBTarget::GetDebugger()) will listen to all process events.
  ///
  /// \param[in] url
  ///     The url to connect to, e.g., &apos;connect://localhost:12345&apos;.
  ///
  /// \param[in] plugin_name
  ///     The plugin name to be used; can be nullptr.
  ///
  /// \param[out] error
  ///     An error explaining what went wrong if the connect fails.
  ///
  /// \return
  ///      A process object for the connected process.</doc>
<def f='llvm/lldb/source/API/SBTarget.cpp' l='554' ll='587' type='lldb::SBProcess lldb::SBTarget::ConnectRemote(lldb::SBListener &amp; listener, const char * url, const char * plugin_name, lldb::SBError &amp; error)'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='558' u='a' c='_ZN4lldb8SBTarget13ConnectRemoteERNS_10SBListenerEPKcS4_RNS_7SBErrorE'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='558' u='a' c='_ZN4lldb8SBTarget13ConnectRemoteERNS_10SBListenerEPKcS4_RNS_7SBErrorE'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='2492' u='a' c='_ZN12lldb_private5repro15RegisterMethodsERNS0_8RegistryE'/>
