<def f='llvm/llvm/tools/llvm-exegesis/lib/Target.h' l='115' type='unsigned int llvm::exegesis::ExegesisTarget::getMaxMemoryAccessSize() const'/>
<doc f='llvm/llvm/tools/llvm-exegesis/lib/Target.h' l='110'>// Returns the maximum number of bytes a load/store instruction can access at
  // once. This is typically the size of the largest register available on the
  // processor. Note that this only used as a hint to generate independant
  // load/stores to/from memory, so the exact returned value does not really
  // matter as long as it&apos;s large enough.</doc>
<ovr f='llvm/llvm/tools/llvm-exegesis/lib/Mips/Target.cpp' l='58' c='_ZNK4llvm8exegesis12_GLOBAL__N_118ExegesisMipsTarget22getMaxMemoryAccessSizeEv'/>
<use f='llvm/llvm/tools/llvm-exegesis/lib/ParallelSnippetGenerator.cpp' l='99' u='c' c='_ZNK4llvm8exegesis24ParallelSnippetGenerator25instantiateMemoryOperandsEjRSt6vectorINS0_19InstructionTemplateESaIS3_EE'/>
<ovr f='llvm/llvm/tools/llvm-exegesis/lib/X86/Target.cpp' l='674' c='_ZNK4llvm8exegesis12_GLOBAL__N_117ExegesisX86Target22getMaxMemoryAccessSizeEv'/>
