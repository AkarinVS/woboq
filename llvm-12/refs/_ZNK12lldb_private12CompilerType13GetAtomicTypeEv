<dec f='llvm/lldb/include/lldb/Symbol/CompilerType.h' l='239' type='lldb_private::CompilerType lldb_private::CompilerType::GetAtomicType() const'/>
<doc f='llvm/lldb/include/lldb/Symbol/CompilerType.h' l='236'>/// Return a new CompilerType that is the atomic type of this type. If this
  /// type is not valid or the type system doesn&apos;t support atomic types, this
  /// returns an invalid type.</doc>
<def f='llvm/lldb/source/Symbol/CompilerType.cpp' l='428' ll='432' type='lldb_private::CompilerType lldb_private::CompilerType::GetAtomicType() const'/>
<use f='llvm/lldb/source/Symbol/Type.cpp' l='507' u='c' c='_ZN12lldb_private4Type19ResolveCompilerTypeENS0_12ResolveStateE'/>
<use f='llvm/lldb/source/Symbol/Type.cpp' l='565' u='c' c='_ZN12lldb_private4Type19ResolveCompilerTypeENS0_12ResolveStateE'/>
