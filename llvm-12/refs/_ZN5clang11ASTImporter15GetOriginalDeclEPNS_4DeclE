<def f='llvm/clang/include/clang/AST/ASTImporter.h' l='593' type='clang::Decl * clang::ASTImporter::GetOriginalDecl(clang::Decl * To)'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='2133' u='c' c='_ZN5clang15ASTNodeImporter17IsStructuralMatchEPNS_10RecordDeclES2_b'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='2160' u='c' c='_ZN5clang15ASTNodeImporter17IsStructuralMatchEPNS_8EnumDeclES2_'/>
<doc f='llvm/clang/include/clang/AST/ASTImporter.h' l='587'>/// Called by StructuralEquivalenceContext.  If a RecordDecl is
    /// being compared to another RecordDecl as part of import, completing the
    /// other RecordDecl may trigger importation of the first RecordDecl. This
    /// happens especially for anonymous structs.  If the original of the second
    /// RecordDecl can be found, we can complete it without the need for
    /// importation, eliminating this loop.</doc>
<ovr f='llvm/clang/lib/AST/ExternalASTMerger.cpp' l='189' c='_ZN12_GLOBAL__N_115LazyASTImporter15GetOriginalDeclEPN5clang4DeclE'/>
<use f='llvm/clang/lib/AST/ExternalASTMerger.cpp' l='407' u='c' c='_ZN5clang17ExternalASTMerger16FindOriginalDeclEPNS_4DeclE'/>
<ovr f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangASTImporter.cpp' l='1189' c='_ZN12lldb_private16ClangASTImporter19ASTImporterDelegate15GetOriginalDeclEPN5clang4DeclE'/>
