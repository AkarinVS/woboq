<dec f='include/sys/epoll.h' l='109' type='int epoll_ctl(int __epfd, int __op, int __fd, struct epoll_event * __event)'/>
<use f='llvm/clang/lib/DirectoryWatcher/linux/DirectoryWatcher-linux.cpp' l='202' u='c' c='_ZN12_GLOBAL__N_121DirectoryWatcherLinux18InotifyPollingLoopEv'/>
<use f='llvm/clang/lib/DirectoryWatcher/linux/DirectoryWatcher-linux.cpp' l='208' u='c' c='_ZN12_GLOBAL__N_121DirectoryWatcherLinux18InotifyPollingLoopEv'/>
<doc f='include/sys/epoll.h' l='103'>/* Manipulate an epoll instance &quot;epfd&quot;. Returns 0 in case of success,
   -1 in case of error ( the &quot;errno&quot; variable will contain the
   specific error code ) The &quot;op&quot; parameter is one of the EPOLL_CTL_*
   constants defined above. The &quot;fd&quot; parameter is the target of the
   operation. The &quot;event&quot; parameter describes which events the caller
   is interested in and any associated user data.  */</doc>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='1854' macro='1' type='int epoll_ctl(int epfd, int op, int fd, void * ev)'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='1890' u='a' c='__tsan::InitializeInterceptors'/>
