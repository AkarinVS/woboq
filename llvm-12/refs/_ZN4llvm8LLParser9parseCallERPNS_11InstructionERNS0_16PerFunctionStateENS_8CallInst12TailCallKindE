<dec f='llvm/llvm/lib/AsmParser/LLParser.h' l='590' type='bool llvm::LLParser::parseCall(llvm::Instruction *&amp; Inst, llvm::LLParser::PerFunctionState &amp; PFS, CallInst::TailCallKind TCK)'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='6196' u='c' c='_ZN4llvm8LLParser16parseInstructionERPNS_11InstructionEPNS_10BasicBlockERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='6198' u='c' c='_ZN4llvm8LLParser16parseInstructionERPNS_11InstructionEPNS_10BasicBlockERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='6200' u='c' c='_ZN4llvm8LLParser16parseInstructionERPNS_11InstructionEPNS_10BasicBlockERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='6202' u='c' c='_ZN4llvm8LLParser16parseInstructionERPNS_11InstructionEPNS_10BasicBlockERNS0_16PerFunctionStateE'/>
<def f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='7151' ll='7256' type='bool llvm::LLParser::parseCall(llvm::Instruction *&amp; Inst, llvm::LLParser::PerFunctionState &amp; PFS, CallInst::TailCallKind TCK)'/>
<doc f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='7142'>/// parseCall
///   ::= &apos;call&apos; OptionalFastMathFlags OptionalCallingConv
///           OptionalAttrs Type Value ParameterList OptionalAttrs
///   ::= &apos;tail&apos; &apos;call&apos; OptionalFastMathFlags OptionalCallingConv
///           OptionalAttrs Type Value ParameterList OptionalAttrs
///   ::= &apos;musttail&apos; &apos;call&apos; OptionalFastMathFlags OptionalCallingConv
///           OptionalAttrs Type Value ParameterList OptionalAttrs
///   ::= &apos;notail&apos; &apos;call&apos;  OptionalFastMathFlags OptionalCallingConv
///           OptionalAttrs Type Value ParameterList OptionalAttrs</doc>
