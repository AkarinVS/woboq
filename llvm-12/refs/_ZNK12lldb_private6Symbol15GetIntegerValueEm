<def f='llvm/lldb/include/lldb/Symbol/Symbol.h' l='92' ll='101' type='uint64_t lldb_private::Symbol::GetIntegerValue(uint64_t fail_value = 0) const'/>
<doc f='llvm/lldb/include/lldb/Symbol/Symbol.h' l='88'>// When a symbol&apos;s value isn&apos;t an address, we need to access the raw value.
  // This function will ensure this symbol&apos;s value isn&apos;t an address and return
  // the integer value if this checks out, otherwise it will return
  // &quot;fail_value&quot; if the symbol is an address value.</doc>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/SymbolFileDWARFDebugMap.cpp' l='348' u='c' c='_ZN23SymbolFileDWARFDebugMap7InitOSOEv'/>
