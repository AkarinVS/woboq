<def f='llvm/compiler-rt/lib/asan/asan_interceptors.cpp' l='310' macro='1' type='void siglongjmp(void * env, int val)'/>
<use f='llvm/compiler-rt/lib/asan/asan_interceptors.cpp' l='654' u='a' c='__asan::InitializeAsanInterceptors'/>
<dec f='include/setjmp.h' l='93' type='void siglongjmp(struct __jmp_buf_tag * __env, int __val)'/>
<doc f='include/setjmp.h' l='89'>/* Jump to the environment saved in ENV, making the
   sigsetjmp call there return VAL, or 1 if VAL is 0.
   Restore the signal mask if that sigsetjmp call saved it.
   This is just an alias `longjmp&apos;.  */</doc>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='627' macro='1' type='void siglongjmp(__sanitizer::uptr * env, int val)'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='613' u='a' c='__tsan::InitializeInterceptors'/>
