<dec f='llvm/clang/include/clang/Format/Format.h' l='237' type='clang::format::FormatStyle::AlignConsecutiveStyle'/>
<use f='llvm/clang/include/clang/Format/Format.h' l='3031' u='r' c='_ZNK5clang6format11FormatStyleeqERKS1_'/>
<use f='llvm/clang/include/clang/Format/Format.h' l='3031' u='r' c='_ZNK5clang6format11FormatStyleeqERKS1_'/>
<offset>96</offset>
<doc f='llvm/clang/include/clang/Format/Format.h' l='171'>/// Style of aligning consecutive assignments.
  ///
  /// ``Consecutive`` will result in formattings like:
  /// \code
  ///   int a            = 1;
  ///   int somelongname = 2;
  ///   double c         = 3;
  /// \endcode
  ///
  /// Possible values:
  ///
  /// * ``ACS_None`` (in configuration: ``None``)
  ///    Do not align assignments on consecutive lines.
  ///
  /// * ``ACS_Consecutive`` (in configuration: ``Consecutive``)
  ///    Align assignments on consecutive lines. This will result in
  ///    formattings like:
  ///    \code
  ///      int a            = 1;
  ///      int somelongname = 2;
  ///      double c         = 3;
  ///
  ///      int d = 3;
  ///      /* A comment. */
  ///      double e = 4;
  ///    \endcode
  ///
  /// * ``ACS_AcrossEmptyLines`` (in configuration: ``AcrossEmptyLines``)
  ///    Same as ACS_Consecutive, but also spans over empty lines, e.g.
  ///    \code
  ///      int a            = 1;
  ///      int somelongname = 2;
  ///      double c         = 3;
  ///
  ///      int d            = 3;
  ///      /* A comment. */
  ///      double e = 4;
  ///    \endcode
  ///
  /// * ``ACS_AcrossComments`` (in configuration: ``AcrossComments``)
  ///    Same as ACS_Consecutive, but also spans over lines only containing
  ///    comments, e.g.
  ///    \code
  ///      int a            = 1;
  ///      int somelongname = 2;
  ///      double c         = 3;
  ///
  ///      int d    = 3;
  ///      /* A comment. */
  ///      double e = 4;
  ///    \endcode
  ///
  /// * ``ACS_AcrossEmptyLinesAndComments``
  ///   (in configuration: ``AcrossEmptyLinesAndComments``)
  ///
  ///    Same as ACS_Consecutive, but also spans over lines only containing
  ///    comments and empty lines, e.g.
  ///    \code
  ///      int a            = 1;
  ///      int somelongname = 2;
  ///      double c         = 3;
  ///
  ///      int d            = 3;
  ///      /* A comment. */
  ///      double e         = 4;
  ///    \endcode</doc>
<use f='llvm/clang/lib/Format/Format.cpp' l='475' u='a' c='_ZN4llvm4yaml13MappingTraitsIN5clang6format11FormatStyleEE7mappingERNS0_2IOERS4_'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='889' u='w' c='_ZN5clang6format12getLLVMStyleENS0_11FormatStyle12LanguageKindE'/>
<use f='llvm/clang/lib/Format/WhitespaceManager.cpp' l='647' u='r' c='_ZN5clang6format17WhitespaceManager27alignConsecutiveAssignmentsEv'/>
<use f='llvm/clang/lib/Format/WhitespaceManager.cpp' l='663' u='r' c='_ZN5clang6format17WhitespaceManager27alignConsecutiveAssignmentsEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='11705' u='w' c='_ZN5clang6format12_GLOBAL__N_136FormatTest_ConfigurableUseOfTab_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='11944' u='w' c='_ZN5clang6format12_GLOBAL__N_136FormatTest_ConfigurableUseOfTab_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='12780' u='w' c='_ZN5clang6format12_GLOBAL__N_138FormatTest_AlignConsecutiveMacros_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13023' u='w' c='_ZN5clang6format12_GLOBAL__N_159FormatTest_AlignConsecutiveAssignmentsAcrossEmptyLines_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13098' u='w' c='_ZN5clang6format12_GLOBAL__N_171FormatTest_AlignConsecutiveDeclarationsAcrossEmptyLinesAndComments_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13228' u='w' c='_ZN5clang6format12_GLOBAL__N_157FormatTest_AlignConsecutiveAssignmentsAcrossComments_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13315' u='w' c='_ZN5clang6format12_GLOBAL__N_170FormatTest_AlignConsecutiveAssignmentsAcrossEmptyLinesAndComments_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13630' u='w' c='_ZN5clang6format12_GLOBAL__N_143FormatTest_AlignConsecutiveAssignments_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13638' u='w' c='_ZN5clang6format12_GLOBAL__N_143FormatTest_AlignConsecutiveAssignments_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13877' u='w' c='_ZN5clang6format12_GLOBAL__N_141FormatTest_AlignConsecutiveBitFields_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='14017' u='w' c='_ZN5clang6format12_GLOBAL__N_144FormatTest_AlignConsecutiveDeclarations_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='14080' u='w' c='_ZN5clang6format12_GLOBAL__N_144FormatTest_AlignConsecutiveDeclarations_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='14149' u='w' c='_ZN5clang6format12_GLOBAL__N_144FormatTest_AlignConsecutiveDeclarations_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='14163' u='w' c='_ZN5clang6format12_GLOBAL__N_144FormatTest_AlignConsecutiveDeclarations_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='14176' u='w' c='_ZN5clang6format12_GLOBAL__N_144FormatTest_AlignConsecutiveDeclarations_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='14186' u='w' c='_ZN5clang6format12_GLOBAL__N_144FormatTest_AlignConsecutiveDeclarations_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='14200' u='w' c='_ZN5clang6format12_GLOBAL__N_144FormatTest_AlignConsecutiveDeclarations_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='14208' u='w' c='_ZN5clang6format12_GLOBAL__N_144FormatTest_AlignConsecutiveDeclarations_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15532' u='w' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15533' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15533' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15536' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15536' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15538' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15538' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15540' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15540' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15543' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15543' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15545' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15545' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='18534' u='w' c='_ZN5clang6format12_GLOBAL__N_141FormatTest_WhitespaceSensitiveMacros_Test8TestBodyEv'/>
