<def f='llvm/llvm/utils/TableGen/DirectiveEmitter.cpp' l='529' ll='554' type='void llvm::GenerateFlangClauseParserClass(const llvm::DirectiveLanguage &amp; DirLang, llvm::raw_ostream &amp; OS)'/>
<use f='llvm/llvm/utils/TableGen/DirectiveEmitter.cpp' l='645' u='c' c='_ZN4llvm23EmitDirectivesFlangImplERKNS_17DirectiveLanguageERNS_11raw_ostreamE'/>
<doc f='llvm/llvm/utils/TableGen/DirectiveEmitter.cpp' l='524'>// Generate classes entry for Flang clauses in the Flang parse-tree
// If the clause as a non-generic class, no entry is generated.
// If the clause does not hold a value, an EMPTY_CLASS is used.
// If the clause class is generic then a WRAPPER_CLASS is used. When the value
// is optional, the value class is wrapped into a std::optional.</doc>
