<dec f='llvm/lldb/include/lldb/Target/Process.h' l='711' type='lldb_private::Status lldb_private::Process::Attach(lldb_private::ProcessAttachInfo &amp; attach_info)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='697'>/// Attach to an existing process using the process attach info.
  ///
  /// This function is not meant to be overridden by Process subclasses. It
  /// will first call WillAttach (lldb::pid_t) or WillAttach (const char *),
  /// and if that returns \b true, DoAttach (lldb::pid_t) or DoAttach (const
  /// char *) will be called to actually do the attach. If DoAttach returns \b
  /// true, then Process::DidAttach() will be called.
  ///
  /// \param[in] attach_info
  ///     The process attach info.
  ///
  /// \return
  ///     Returns \a pid if attaching was successful, or
  ///     LLDB_INVALID_PROCESS_ID if attaching fails.</doc>
<use f='llvm/lldb/source/API/SBProcess.cpp' l='181' u='c' c='_ZN4lldb9SBProcess27RemoteAttachToProcessWithIDEmRNS_7SBErrorE'/>
<use f='llvm/lldb/source/Plugins/Platform/POSIX/PlatformPOSIX.cpp' l='400' u='c' c='_ZN13PlatformPOSIX6AttachERN12lldb_private17ProcessAttachInfoERNS0_8DebuggerEPNS0_6TargetERNS0_6StatusE'/>
<use f='llvm/lldb/source/Plugins/Platform/Windows/PlatformWindows.cpp' l='281' u='c' c='_ZN12lldb_private15PlatformWindows6AttachERNS_17ProcessAttachInfoERNS_8DebuggerEPNS_6TargetERNS_6StatusE'/>
<use f='llvm/lldb/source/Plugins/Platform/gdb-server/PlatformRemoteGDBServer.cpp' l='593' u='c' c='_ZN12lldb_private19platform_gdb_server23PlatformRemoteGDBServer6AttachERNS_17ProcessAttachInfoERNS_8DebuggerEPNS_6TargetERNS_6StatusE'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='2692' ll='2811' type='lldb_private::Status lldb_private::Process::Attach(lldb_private::ProcessAttachInfo &amp; attach_info)'/>
<use f='llvm/lldb/source/Target/Target.cpp' l='3115' u='c' c='_ZN12lldb_private6Target6AttachERNS_17ProcessAttachInfoEPNS_6StreamE'/>
