<dec f='llvm/llvm/include/llvm/DWARFLinker/DWARFLinker.h' l='698' type='void llvm::DWARFLinker::generateUnitRanges(llvm::CompileUnit &amp; Unit) const'/>
<def f='llvm/llvm/lib/DWARFLinker/DWARFLinker.cpp' l='1586' ll='1591' type='void llvm::DWARFLinker::generateUnitRanges(llvm::CompileUnit &amp; Unit) const'/>
<use f='llvm/llvm/lib/DWARFLinker/DWARFLinker.cpp' l='2203' u='c' c='_ZN4llvm11DWARFLinker9DIECloner20cloneAllCompileUnitsERNS_12DWARFContextERKNS_9DWARFFileERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_10OffsetsTagEEEb'/>
<doc f='llvm/llvm/lib/DWARFLinker/DWARFLinker.cpp' l='1580'>/// Generate the debug_aranges entries for \p Unit and if the
/// unit has a DW_AT_ranges attribute, also emit the debug_ranges
/// contribution for this attribute.
/// FIXME: this could actually be done right in patchRangesForUnit,
/// but for the sake of initial bit-for-bit compatibility with legacy
/// dsymutil, we have to do it in a delayed pass.</doc>
<doc f='llvm/llvm/include/llvm/DWARFLinker/DWARFLinker.h' l='696'>/// Generate and emit the DW_AT_ranges attribute for a compile_unit if it had
  /// one.</doc>
