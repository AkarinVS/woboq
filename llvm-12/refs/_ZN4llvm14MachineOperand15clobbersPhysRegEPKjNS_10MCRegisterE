<def f='llvm/llvm/include/llvm/CodeGen/MachineOperand.h' l='614' ll='618' type='static bool llvm::MachineOperand::clobbersPhysReg(const uint32_t * RegMask, llvm::MCRegister PhysReg)'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachineOperand.h' l='622' u='c' c='_ZNK4llvm14MachineOperand15clobbersPhysRegENS_10MCRegisterE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineOperand.h' l='610'>/// clobbersPhysReg - Returns true if this RegMask clobbers PhysReg.
  /// It is sometimes necessary to detach the register mask pointer from its
  /// machine operand. This static method can be used for such detached bit
  /// mask pointers.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/CallLowering.cpp' l='627' u='c' c='_ZNK4llvm12CallLowering20parametersInCSRMatchERKNS_19MachineRegisterInfoEPKjRKNS_15SmallVectorImplINS_11CCValAssignEEERKNS6_INS0_7ArgInfoEEE'/>
<use f='llvm/llvm/lib/CodeGen/InterferenceCache.cpp' l='194' u='c' c='_ZN4llvm17InterferenceCache5Entry6updateEj'/>
<use f='llvm/llvm/lib/CodeGen/InterferenceCache.cpp' l='251' u='c' c='_ZN4llvm17InterferenceCache5Entry6updateEj'/>
<use f='llvm/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp' l='1283' u='c' c='_ZN12_GLOBAL__N_114VarLocBasedLDV19transferRegisterDefERN4llvm12MachineInstrERNS0_13OpenRangesSetERNS0_9VarLocMapERNS1_11SmallVectorINS0_17TransferDebugPairELj4EEE'/>
<use f='llvm/llvm/lib/CodeGen/LivePhysRegs.cpp' l='109' u='c' c='_ZN4llvm12LivePhysRegs11stepForwardERKNS_12MachineInstrERNS_15SmallVectorImplISt4pairItPKNS_14MachineOperandEEEE'/>
<use f='llvm/llvm/lib/CodeGen/LiveRegUnits.cpp' l='25' u='c' c='_ZN4llvm12LiveRegUnits22removeRegsNotPreservedEPKj'/>
<use f='llvm/llvm/lib/CodeGen/LiveRegUnits.cpp' l='34' u='c' c='_ZN4llvm12LiveRegUnits13addRegsInMaskEPKj'/>
<use f='llvm/llvm/lib/CodeGen/MachineVerifier.cpp' l='2233' u='c' c='_ZN12_GLOBAL__N_115MachineVerifier23visitMachineBundleAfterEPKN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/PeepholeOptimizer.cpp' l='1678' u='c' c='_ZN12_GLOBAL__N_117PeepholeOptimizer20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocFast.cpp' l='1259' u='c' c='_ZN12_GLOBAL__N_112RegAllocFast19allocateInstructionERN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/RegisterUsageInfo.cpp' l='96' u='c' c='_ZNK4llvm25PhysicalRegisterUsageInfo5printERNS_11raw_ostreamEPKNS_6ModuleE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='1327' u='c' c='_ZL24CheckForLiveRegDefMaskedPN4llvm5SUnitEPKjNS_8ArrayRefIS1_EERNS_8SmallSetIjLj4ESt4lessIjEEERNS_15SmallVectorImplIjEE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='2857' u='c' c='_ZL28canClobberReachingPhysRegUsePKN4llvm5SUnitES2_PN12_GLOBAL__N_117ScheduleDAGRRListEPKNS_15TargetInstrInfoEPKNS_18TargetRegisterInfoE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='2899' u='c' c='_ZL21canClobberPhysRegDefsPKN4llvm5SUnitES2_PKNS_15TargetInstrInfoEPKNS_18TargetRegisterInfoE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='88' u='c' c='_ZNK4llvm14TargetLowering20parametersInCSRMatchERKNS_19MachineRegisterInfoEPKjRKNS_15SmallVectorImplINS_11CCValAssignEEERKNS6_INS_7SDValueEEE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp' l='468' u='c' c='_ZL20handleRegMaskClobberPKjtP7LOHInfo'/>
<use f='llvm/llvm/lib/Target/X86/X86RegisterInfo.cpp' l='549' u='c' c='_ZNK4llvm15X86RegisterInfo15getReservedRegsERKNS_15MachineFunctionE'/>
