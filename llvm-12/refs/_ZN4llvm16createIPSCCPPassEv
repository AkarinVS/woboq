<dec f='llvm/llvm/include/llvm/Transforms/IPO.h' l='170' type='llvm::ModulePass * llvm::createIPSCCPPass()'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO.h' l='165'>//===----------------------------------------------------------------------===//
/// createIPSCCPPass - This pass propagates constants from call sites into the
/// bodies of functions, and keeps track of whether basic blocks are executable
/// in the process.
///</doc>
<use f='llvm/llvm/include/llvm/LinkAllPasses.h' l='117' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='113' u='c' c='LLVMAddIPSCCPPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='619' u='c' c='_ZN4llvm18PassManagerBuilder25populateModulePassManagerERNS_6legacy15PassManagerBaseE'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='958' u='c' c='_ZN4llvm18PassManagerBuilder24addLTOOptimizationPassesERNS_6legacy15PassManagerBaseE'/>
<def f='llvm/llvm/lib/Transforms/IPO/SCCP.cpp' l='93' type='llvm::ModulePass * llvm::createIPSCCPPass()'/>
<doc f='llvm/llvm/lib/Transforms/IPO/SCCP.cpp' l='92'>// createIPSCCPPass - This is the public interface to this file.</doc>
