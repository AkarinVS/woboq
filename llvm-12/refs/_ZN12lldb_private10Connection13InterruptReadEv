<dec f='llvm/lldb/include/lldb/Utility/Connection.h' l='164' type='bool lldb_private::Connection::InterruptRead()'/>
<doc f='llvm/lldb/include/lldb/Utility/Connection.h' l='153'>/// Interrupts an ongoing Read() operation.
  ///
  /// If there is an ongoing read operation in another thread, this operation
  /// return with status == eConnectionStatusInterrupted. Note that if there
  /// data waiting to be read and an interrupt request is issued, the Read()
  /// function will return the data immediately without processing the
  /// interrupt request (which will remain queued for the next Read()
  /// operation).
  ///
  /// \return
  ///     Returns true is the interrupt request was successful.</doc>
<use f='llvm/lldb/source/Core/Communication.cpp' l='406' u='c' c='_ZN12lldb_private13Communication25SynchronizeWithReadThreadEv'/>
<ovr f='llvm/lldb/source/Host/posix/ConnectionFileDescriptorPosix.cpp' l='289' c='_ZN12lldb_private24ConnectionFileDescriptor13InterruptReadEv'/>
<ovr f='llvm/lldb/unittests/Process/gdb-remote/GDBRemoteTestUtils.h' l='36' c='_ZN12lldb_private18process_gdb_remote14MockConnection13InterruptReadEv'/>
