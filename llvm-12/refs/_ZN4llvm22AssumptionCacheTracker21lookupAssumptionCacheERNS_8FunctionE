<dec f='llvm/llvm/include/llvm/Analysis/AssumptionCache.h' l='232' type='llvm::AssumptionCache * llvm::AssumptionCacheTracker::lookupAssumptionCache(llvm::Function &amp; F)'/>
<doc f='llvm/llvm/include/llvm/Analysis/AssumptionCache.h' l='230'>/// Return the cached assumptions for a function if it has already been
  /// scanned. Otherwise return nullptr.</doc>
<def f='llvm/llvm/lib/Analysis/AssumptionCache.cpp' l='292' ll='297' type='llvm::AssumptionCache * llvm::AssumptionCacheTracker::lookupAssumptionCache(llvm::Function &amp; F)'/>
<use f='llvm/llvm/lib/Transforms/IPO/HotColdSplitting.cpp' l='748' u='c' c='_ZN12_GLOBAL__N_126HotColdSplittingLegacyPass11runOnModuleERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/IPO/LoopExtractor.cpp' l='130' u='c' c='_ZN12_GLOBAL__N_123LoopExtractorLegacyPass11runOnModuleERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/IPO/PartialInlining.cpp' l='375' u='c' c='_ZN12_GLOBAL__N_124PartialInlinerLegacyPass11runOnModuleERN4llvm6ModuleE'/>
