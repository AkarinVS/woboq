<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='4183' type='llvm::Value * clang::CodeGen::CodeGenFunction::EmitARCUnsafeClaimAutoreleasedReturnValue(llvm::Value * value)'/>
<def f='llvm/clang/lib/CodeGen/CGObjC.cpp' l='2345' ll='2356' type='llvm::Value * clang::CodeGen::CodeGenFunction::EmitARCUnsafeClaimAutoreleasedReturnValue(llvm::Value * value)'/>
<use f='llvm/clang/lib/CodeGen/CGObjC.cpp' l='2971' u='c' c='_ZL28emitARCUnsafeClaimCallResultRN5clang7CodeGen15CodeGenFunctionEPKNS_4ExprE'/>
<doc f='llvm/clang/lib/CodeGen/CGObjC.cpp' l='2338'>/// Claim a possibly-autoreleased return value at +0.  This is only
/// valid to do in contexts which do not rely on the retain to keep
/// the object valid for all of its uses; for example, when
/// the value is ignored, or when it is being assigned to an
/// __unsafe_unretained variable.
///
///   call i8* \@objc_unsafeClaimAutoreleasedReturnValue(i8* %value)</doc>
