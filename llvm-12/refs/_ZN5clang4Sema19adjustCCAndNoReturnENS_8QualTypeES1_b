<dec f='llvm/clang/include/clang/Sema/Sema.h' l='8270' type='clang::QualType clang::Sema::adjustCCAndNoReturn(clang::QualType ArgFunctionType, clang::QualType FunctionType, bool AdjustExceptionSpec = false)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='8262'>//===--------------------------------------------------------------------===//
  // C++ Template Argument Deduction (C++ [temp.deduct])
  //===--------------------------------------------------------------------===//

  /// Adjust the type \p ArgFunctionType to match the calling convention,
  /// noreturn, and optionally the exception specification of \p FunctionType.
  /// Deduction often wants to ignore these properties when matching function
  /// types.</doc>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='2736' u='c' c='_ZN5clang4Sema23FindAllocationFunctionsENS_14SourceLocationENS_11SourceRangeENS0_23AllocationFunctionScopeES3_NS_8QualTypeEbRbN4llvm15MutableArrayRefI4442873'/>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='9180' u='c' c='_ZN5clang4Sema25CheckMemberSpecializationEPNS_9NamedDeclERNS_12LookupResultE'/>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='10134' u='c' c='_ZN5clang4Sema26ActOnExplicitInstantiationEPNS_5ScopeENS_14SourceLocationES3_RNS_10DeclaratorE'/>
<def f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='4219' ll='4253' type='clang::QualType clang::Sema::adjustCCAndNoReturn(clang::QualType ArgFunctionType, clang::QualType FunctionType, bool AdjustExceptionSpec = false)'/>
<use f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='4318' u='c' c='_ZN5clang4Sema23DeduceTemplateArgumentsEPNS_20FunctionTemplateDeclEPNS_24TemplateArgumentListInfoENS_8QualTypeERPNS_12FunctionDeclERNS_4sema21TemplateDeductionInfoEb'/>
<use f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='4381' u='c' c='_ZN5clang4Sema23DeduceTemplateArgumentsEPNS_20FunctionTemplateDeclEPNS_24TemplateArgumentListInfoENS_8QualTypeERPNS_12FunctionDeclERNS_4sema21TemplateDeductionInfoEb'/>
