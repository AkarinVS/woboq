<dec f='llvm/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h' l='422' type='llvm::OpenMPIRBuilder::InsertPointTy llvm::OpenMPIRBuilder::emitBarrierImpl(const llvm::OpenMPIRBuilder::LocationDescription &amp; Loc, omp::Directive DK, bool ForceSimpleCall, bool CheckCancelFlag)'/>
<doc f='llvm/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h' l='413'>/// Generate a barrier runtime call.
  ///
  /// \param Loc The location at which the request originated and is fulfilled.
  /// \param DK The directive which caused the barrier
  /// \param ForceSimpleCall Flag to force a simple (=non-cancellation) barrier.
  /// \param CheckCancelFlag Flag to indicate a cancel barrier return value
  ///                        should be checked and acted upon.
  ///
  /// \returns The insertion point after the barrier.</doc>
<use f='llvm/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp' l='315' u='c' c='_ZN4llvm15OpenMPIRBuilder13createBarrierERKNS0_19LocationDescriptionENS_3omp9DirectiveEbb'/>
<def f='llvm/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp' l='318' ll='363' type='OpenMPIRBuilder::InsertPointTy llvm::OpenMPIRBuilder::emitBarrierImpl(const llvm::OpenMPIRBuilder::LocationDescription &amp; Loc, llvm::omp::Directive Kind, bool ForceSimpleCall, bool CheckCancelFlag)'/>
