<def f='llvm/llvm/include/llvm/Support/type_traits.h' l='140' ll='183'/>
<def f='llvm/llvm/include/llvm/Support/type_traits.h' l='184' ll='186'/>
<smbr r='llvm::is_trivially_copyable::has_trivial_copy_constructor' t='const bool'/>
<smbr r='llvm::is_trivially_copyable::has_deleted_copy_constructor' t='const bool'/>
<smbr r='llvm::is_trivially_copyable::has_trivial_move_constructor' t='const bool'/>
<smbr r='llvm::is_trivially_copyable::has_deleted_move_constructor' t='const bool'/>
<smbr r='llvm::is_trivially_copyable::has_trivial_copy_assign' t='const bool'/>
<smbr r='llvm::is_trivially_copyable::has_deleted_copy_assign' t='const bool'/>
<smbr r='llvm::is_trivially_copyable::has_trivial_move_assign' t='const bool'/>
<smbr r='llvm::is_trivially_copyable::has_deleted_move_assign' t='const bool'/>
<smbr r='llvm::is_trivially_copyable::has_trivial_destructor' t='const bool'/>
<smbr r='llvm::is_trivially_copyable::value' t='const bool'/>
<def f='llvm/llvm/include/llvm/ADT/PointerIntPair.h' l='132' ll='140'/>
<doc f='llvm/llvm/include/llvm/ADT/PointerIntPair.h' l='130'>// Specialize is_trivially_copyable to avoid limitation of llvm::is_trivially_copyable
// when compiled with gcc 4.9.</doc>
