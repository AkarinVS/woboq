<def f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='949' ll='984' type='Optional&lt;unsigned int&gt; findDuplicateOutputBlock(llvm::BasicBlock * OutputBB, ArrayRef&lt;llvm::BasicBlock *&gt; OutputStoreBBs)'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='1054' u='c' c='_ZL27alignOutputBlockWithAggFuncR15OutlinableGroupRN4llvm16OutlinableRegionEPNS1_10BasicBlockES5_RKNS1_8DenseMapIPNS1_5ValueES8_NS1_12DenseMapInfoIS8_14107659'/>
<doc f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='943'>/// It is possible that there is a basic block that already performs the same
/// stores. This returns a duplicate block, if it exists
///
/// \param OutputBB [in] the block we are looking for a duplicate of.
/// \param OutputStoreBBs [in] The existing output blocks.
/// \returns an optional value with the number output block if there is a match.</doc>
