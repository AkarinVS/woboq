<def f='llvm/compiler-rt/lib/xray/xray_interface.cpp' l='94' ll='145'/>
<use f='llvm/compiler-rt/lib/xray/xray_interface.cpp' l='317' c='__xray::(anonymousnamespace)::controlPatching'/>
<use f='llvm/compiler-rt/lib/xray/xray_interface.cpp' l='384' c='__xray::(anonymousnamespace)::mprotectAndPatchFunction'/>
<size>24</size>
<doc f='llvm/compiler-rt/lib/xray/xray_interface.cpp' l='86'>// MProtectHelper is an RAII wrapper for calls to mprotect(...) that will
// undo any successful mprotect(...) changes. This is used to make a page
// writeable and executable, and upon destruction if it was successful in
// doing so returns the page into a read-only and executable page.
//
// This is only used specifically for runtime-patching of the XRay
// instrumentation points. This assumes that the executable pages are
// originally read-and-execute only.</doc>
