<dec f='llvm/llvm/include/llvm/Analysis/BranchProbabilityInfo.h' l='198' type='void llvm::BranchProbabilityInfo::copyEdgeProbabilities(llvm::BasicBlock * Src, llvm::BasicBlock * Dst)'/>
<doc f='llvm/llvm/include/llvm/Analysis/BranchProbabilityInfo.h' l='194'>/// Copy outgoing edge probabilities from \p Src to \p Dst.
  ///
  /// This allows to keep probabilities unset for the destination if they were
  /// unset for source.</doc>
<def f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='1200' ll='1217' type='void llvm::BranchProbabilityInfo::copyEdgeProbabilities(llvm::BasicBlock * Src, llvm::BasicBlock * Dst)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2278' u='c' c='_ZN4llvm17JumpThreadingPass27threadThroughTwoBasicBlocksEPNS_10BasicBlockES2_S2_S2_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2709' u='c' c='_ZN4llvm17JumpThreadingPass32duplicateCondBranchOnPHIIntoPredEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EE'/>
