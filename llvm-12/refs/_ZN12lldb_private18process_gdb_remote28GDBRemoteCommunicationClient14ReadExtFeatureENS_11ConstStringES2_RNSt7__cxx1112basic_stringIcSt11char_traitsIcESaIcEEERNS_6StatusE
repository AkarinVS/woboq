<dec f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationClient.h' l='461' type='bool lldb_private::process_gdb_remote::GDBRemoteCommunicationClient::ReadExtFeature(const lldb_private::ConstString object, const lldb_private::ConstString annex, std::string &amp; out, lldb_private::Status &amp; err)'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationClient.cpp' l='1640' u='c' c='_ZN12lldb_private18process_gdb_remote28GDBRemoteCommunicationClient18LoadQXferMemoryMapEv'/>
<def f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationClient.cpp' l='3810' ll='3873' type='bool lldb_private::process_gdb_remote::GDBRemoteCommunicationClient::ReadExtFeature(const lldb_private::ConstString object, const lldb_private::ConstString annex, std::string &amp; out, lldb_private::Status &amp; err)'/>
<doc f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationClient.cpp' l='3805'>// query the target remote for extended information using the qXfer packet
//
// example: object=&apos;features&apos;, annex=&apos;target.xml&apos;, out=&lt;xml output&gt; return:
// &apos;true&apos;  on success
//          &apos;false&apos; on failure (err set)</doc>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='4484' u='c' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote37GetGDBServerRegisterInfoXMLAndProcessERNS_8ArchSpecENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERjSA_'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='4637' u='c' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote19GetLoadedModuleListEv'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='4727' u='c' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote19GetLoadedModuleListEv'/>
