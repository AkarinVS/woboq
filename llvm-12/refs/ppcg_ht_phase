<use f='llvm/polly/lib/External/ppcg/hybrid.h' l='13'/>
<def f='llvm/polly/lib/External/ppcg/hybrid.c' l='347' ll='357'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='1391' c='construct_phase'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='1391' c='construct_phase'/>
<size>56</size>
<doc f='llvm/polly/lib/External/ppcg/hybrid.c' l='320'>/* Representation of one of the two phases of hybrid tiling.
 *
 * &quot;tiling&quot; points to the shared tiling data.
 *
 * &quot;time_tile&quot;, &quot;local_time&quot; and &quot;shift_space&quot; are equal to the corresponding
 * fields of &quot;tiling&quot;, pulled back to the input space.
 * In case of phase 0, these expressions have also been moved
 * from phase 1 to phase 0.
 *
 * &quot;domain&quot; contains the hexagonal tiling of this phase.
 *
 * &quot;space_shift&quot; is the shift that should be added to the space band
 * in order to be able to apply rectangular tiling to the space.
 * For phase 1, it is equal to
 *
 *	[P[t] -&gt; C[s_0, s_i]] -&gt; C[(-(2 * shift_s)*T) % W, dl_i * u]
 *
 * with shift_s = S_0 + floor(d_u h),
 * T equal to &quot;time_tile&quot; and u equal to &quot;local_time&quot;.
 * For phase 0, it is equal to
 *
 *	[P[t] -&gt; C[s_0, s_i]] -&gt; C[shift_s + (-(2 * shift_s)*T) % W, dl_i * u]
 *
 * &quot;space_tile&quot; is the space tiling.  It is equal to
 *
 *	[P[t] -&gt; C[s]] -&gt; C[floor((s + space_shift)/space_size]
 */</doc>
<mbr r='ppcg_ht_phase::tiling' o='0' t='ppcg_ht_tiling *'/>
<mbr r='ppcg_ht_phase::time_tile' o='64' t='isl_aff *'/>
<mbr r='ppcg_ht_phase::local_time' o='128' t='isl_aff *'/>
<mbr r='ppcg_ht_phase::shift_space' o='192' t='isl_aff *'/>
<mbr r='ppcg_ht_phase::domain' o='256' t='isl_set *'/>
<mbr r='ppcg_ht_phase::space_shift' o='320' t='isl_multi_aff *'/>
<mbr r='ppcg_ht_phase::space_tile' o='384' t='isl_multi_aff *'/>
