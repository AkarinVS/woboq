<dec f='llvm/lldb/include/lldb/Breakpoint/BreakpointOptions.h' l='117' type='void lldb_private::BreakpointOptions::BreakpointOptions(const char * condition, bool enabled = true, int32_t ignore = 0, bool one_shot = false, bool auto_continue = false)'/>
<doc f='llvm/lldb/include/lldb/Breakpoint/BreakpointOptions.h' l='97'>// Constructors and Destructors

  /// This constructor allows you to specify all the breakpoint options except
  /// the callback.  That one is more complicated, and better to do by hand.
  ///
  /// \param[in] condition
  ///    The expression which if it evaluates to \b true if we are to stop
  ///
  /// \param[in] enabled
  ///    Is this breakpoint enabled.
  ///
  /// \param[in] ignore
  ///    How many breakpoint hits we should ignore before stopping.
  ///
  /// \param[in] one_shot
  ///    Should this breakpoint delete itself after being hit once.
  ///
  /// \param[in] auto_continue
  ///    Should this breakpoint auto-continue after running its commands.
  ///</doc>
<def f='llvm/lldb/source/Breakpoint/BreakpointOptions.cpp' l='133' ll='146' type='void lldb_private::BreakpointOptions::BreakpointOptions(const char * condition, bool enabled = true, int32_t ignore = 0, bool one_shot = false, bool auto_continue = false)'/>
