<dec f='llvm/llvm/include/llvm/Transforms/Utils/SimplifyLibCalls.h' l='51' type='llvm::Value * llvm::FortifiedLibCallSimplifier::optimizeCall(llvm::CallInst * CI, llvm::IRBuilderBase &amp; B)'/>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='2177' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare16optimizeCallInstEPN4llvm8CallInstERb'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/SimplifyLibCalls.h' l='47'>/// Take the given call instruction and return a more
  /// optimal value to replace the instruction with or 0 if a more
  /// optimal form can&apos;t be found.
  /// The call must not be an indirect call.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='3095' u='c' c='_ZN4llvm17LibCallSimplifier12optimizeCallEPNS_8CallInstERNS_13IRBuilderBaseE'/>
<def f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='3486' ll='3559' type='llvm::Value * llvm::FortifiedLibCallSimplifier::optimizeCall(llvm::CallInst * CI, llvm::IRBuilderBase &amp; Builder)'/>
