<dec f='llvm/clang/include/clang/AST/Decl.h' l='2347' type='bool clang::FunctionDecl::isReplaceableGlobalAllocationFunction(Optional&lt;unsigned int&gt; * AlignmentParam = nullptr, bool * IsNothrow = nullptr) const'/>
<doc f='llvm/clang/include/clang/AST/Decl.h' l='2326'>/// Determines whether this function is one of the replaceable
  /// global allocation functions:
  ///    void *operator new(size_t);
  ///    void *operator new(size_t, const std::nothrow_t &amp;) noexcept;
  ///    void *operator new[](size_t);
  ///    void *operator new[](size_t, const std::nothrow_t &amp;) noexcept;
  ///    void operator delete(void *) noexcept;
  ///    void operator delete(void *, std::size_t) noexcept;      [C++1y]
  ///    void operator delete(void *, const std::nothrow_t &amp;) noexcept;
  ///    void operator delete[](void *) noexcept;
  ///    void operator delete[](void *, std::size_t) noexcept;    [C++1y]
  ///    void operator delete[](void *, const std::nothrow_t &amp;) noexcept;
  /// These functions have special behavior under C++1y [expr.new]:
  ///    An implementation is allowed to omit a call to a replaceable global
  ///    allocation function. [...]
  ///
  /// If this function is an aligned allocation/deallocation function, return
  /// the parameter number of the requested alignment through AlignmentParam.
  ///
  /// If this function is an allocation/deallocation function that takes
  /// the `std::nothrow_t` tag, return true through IsNothrow,</doc>
<def f='llvm/clang/lib/AST/Decl.cpp' l='3068' ll='3135' type='bool clang::FunctionDecl::isReplaceableGlobalAllocationFunction(Optional&lt;unsigned int&gt; * AlignmentParam = nullptr, bool * IsNothrow = nullptr) const'/>
<use f='llvm/clang/lib/AST/ExprConstant.cpp' l='7637' u='c' c='_ZN12_GLOBAL__N_117ExprEvaluatorBase14handleCallExprEPKN5clang8CallExprERNS1_7APValueEPKNS_6LValueE'/>
<use f='llvm/clang/lib/AST/ExprConstant.cpp' l='9337' u='c' c='_ZN12_GLOBAL__N_120PointerExprEvaluator15VisitCXXNewExprEPKN5clang10CXXNewExprE'/>
<use f='llvm/clang/lib/AST/ExprConstant.cpp' l='14413' u='c' c='_ZN12_GLOBAL__N_117VoidExprEvaluator18VisitCXXDeleteExprEPKN5clang13CXXDeleteExprE'/>
<use f='llvm/clang/lib/AST/ExprConstant.cpp' l='14457' u='c' c='_ZN12_GLOBAL__N_117VoidExprEvaluator18VisitCXXDeleteExprEPKN5clang13CXXDeleteExprE'/>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='1972' u='c' c='_ZN5clang7CodeGen13CodeGenModule22ConstructAttributeListEN4llvm9StringRefERKNS0_14CGFunctionInfoENS0_12CGCalleeInfoERNS2_13AttributeListERjb'/>
<use f='llvm/clang/lib/CodeGen/CGExprCXX.cpp' l='1319' u='c' c='_ZL17EmitNewDeleteCallRN5clang7CodeGen15CodeGenFunctionEPKNS_12FunctionDeclEPKNS_17FunctionProtoTypeERKNS0_11CallArgListE'/>
<use f='llvm/clang/lib/CodeGen/CGExprCXX.cpp' l='1653' u='c' c='_ZN5clang7CodeGen15CodeGenFunction14EmitCXXNewExprEPKNS_10CXXNewExprE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='2052' u='c' c='_ZN5clang7CodeGen13CodeGenModule21SetFunctionAttributesENS_10GlobalDeclEPN4llvm8FunctionEbb'/>
<use f='llvm/clang/lib/CodeGen/ItaniumCXXABI.cpp' l='2148' u='c' c='_ZN12_GLOBAL__N_113ItaniumCXXABI21InitializeArrayCookieERN5clang7CodeGen15CodeGenFunctionENS2_7AddressEPN4llvm5ValueEPKNS1_10CXXNewExprENS1_8QualTypeE'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='9474' u='c' c='_ZN5clang4Sema23ActOnFunctionDeclaratorEPNS_5ScopeERNS_10DeclaratorEPNS_11DeclContextEPNS_14TypeSourceInfoERNS_12LookupResultEN4llvm15MutableArrayRefI5939088'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='14810' u='c' c='_ZN5clang4Sema64AddKnownFunctionAttributesForReplaceableGlobalAllocationFunctionEPNS_12FunctionDeclE'/>
<use f='llvm/clang/lib/Sema/SemaExceptionSpec.cpp' l='392' u='c' c='_ZN5clang4Sema28CheckEquivalentExceptionSpecEPNS_12FunctionDeclES2_'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='1854' u='c' c='_ZNK5clang4Sema38isUnavailableAlignedAllocationFunctionERKNS_12FunctionDeclE'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='3680' u='c' c='_ZL31resolveBuiltinNewDeleteOverloadRN5clang4SemaEPNS_8CallExprEbRPNS_12FunctionDeclE'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCXX.cpp' l='845' u='c' c='_ZN5clang4ento10ExprEngine15VisitCXXNewExprEPKNS_10CXXNewExprEPNS0_12ExplodedNodeERNS0_15ExplodedNodeSetE'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='694' u='c' c='_ZN5clang4ento10ExprEngine15bindReturnValueERKNS0_9CallEventEPKNS_15LocationContextEN4llvm18IntrusiveRefCntPtrIKNS0_12ProgramStateEEE'/>
