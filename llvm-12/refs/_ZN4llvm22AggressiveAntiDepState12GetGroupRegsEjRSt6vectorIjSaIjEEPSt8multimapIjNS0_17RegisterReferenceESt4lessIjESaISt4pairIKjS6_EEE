<dec f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h' l='97' type='void llvm::AggressiveAntiDepState::GetGroupRegs(unsigned int Group, std::vector&lt;unsigned int&gt; &amp; Regs, std::multimap&lt;unsigned int, AggressiveAntiDepState::RegisterReference&gt; * RegRefs)'/>
<def f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='78' ll='87' type='void llvm::AggressiveAntiDepState::GetGroupRegs(unsigned int Group, std::vector&lt;unsigned int&gt; &amp; Regs, std::multimap&lt;unsigned int, AggressiveAntiDepState::RegisterReference&gt; * RegRefs)'/>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='558' u='c' c='_ZN4llvm24AggressiveAntiDepBreaker25FindSuitableFreeRegistersEjRSt3mapIPKNS_19TargetRegisterClassEjSt4lessIS4_ESaISt4pairIKS4_jEEERS1_IjjS5_IjESaIS7_IKjjEEE'/>
<doc f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h' l='95'>// Return a vector of the registers belonging to a group.
    // If RegRefs is non-NULL then only included referenced registers.</doc>
