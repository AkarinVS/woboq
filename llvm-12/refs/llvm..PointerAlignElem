<def f='llvm/llvm/include/llvm/IR/DataLayout.h' l='90' ll='103'/>
<use f='llvm/llvm/include/llvm/IR/DataLayout.h' l='98' c='_ZN4llvm16PointerAlignElem3getEjNS_5AlignES1_jj'/>
<use f='llvm/llvm/include/llvm/IR/DataLayout.h' l='102' c='_ZNK4llvm16PointerAlignElemeqERKS0_'/>
<use f='llvm/llvm/include/llvm/IR/DataLayout.h' l='161'/>
<use f='llvm/llvm/include/llvm/IR/DataLayout.h' l='164' c='_ZNK4llvm10DataLayout19getPointerAlignElemEj'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/IR/DataLayout.h' l='84'>/// Layout pointer alignment element.
///
/// Stores the alignment data associated with a given pointer and address space.
///
/// \note The unusual order of elements in the structure attempts to reduce
/// padding and make the structure slightly more cache friendly.</doc>
<mbr r='llvm::PointerAlignElem::ABIAlign' o='0' t='llvm::Align'/>
<mbr r='llvm::PointerAlignElem::PrefAlign' o='8' t='llvm::Align'/>
<mbr r='llvm::PointerAlignElem::TypeByteWidth' o='32' t='uint32_t'/>
<mbr r='llvm::PointerAlignElem::AddressSpace' o='64' t='uint32_t'/>
<mbr r='llvm::PointerAlignElem::IndexWidth' o='96' t='uint32_t'/>
<fun r='_ZN4llvm16PointerAlignElem3getEjNS_5AlignES1_jj'/>
<fun r='_ZNK4llvm16PointerAlignElemeqERKS0_'/>
<use f='llvm/llvm/lib/IR/DataLayout.cpp' l='127' c='_ZN4llvm16PointerAlignElem3getEjNS_5AlignES1_jj'/>
<use f='llvm/llvm/lib/IR/DataLayout.cpp' l='131' c='_ZN4llvm16PointerAlignElem3getEjNS_5AlignES1_jj'/>
<use f='llvm/llvm/lib/IR/DataLayout.cpp' l='141' c='_ZNK4llvm16PointerAlignElemeqERKS0_'/>
<use f='llvm/llvm/lib/IR/DataLayout.cpp' l='586' c='_ZNK4llvm10DataLayout19getPointerAlignElemEj'/>
<use f='llvm/llvm/lib/IR/DataLayout.cpp' l='590' c='_ZNK4llvm10DataLayout19getPointerAlignElemEj'/>
<use f='llvm/llvm/lib/IR/DataLayout.cpp' l='609' c='_ZN4llvm10DataLayout19setPointerAlignmentEjNS_5AlignES1_jj'/>
<size>16</size>
<fun r='_ZN4llvm16PointerAlignElem3getEjNS_5AlignES1_jj'/>
<fun r='_ZNK4llvm16PointerAlignElemeqERKS0_'/>
