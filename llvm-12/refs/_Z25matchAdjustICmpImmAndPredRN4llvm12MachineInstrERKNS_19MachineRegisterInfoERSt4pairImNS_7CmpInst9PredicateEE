<def f='llvm/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp' l='524' ll='535' type='bool matchAdjustICmpImmAndPred(llvm::MachineInstr &amp; MI, const llvm::MachineRegisterInfo &amp; MRI, std::pair&lt;uint64_t, CmpInst::Predicate&gt; &amp; MatchInfo)'/>
<use f='llvm/build/lib/Target/AArch64/AArch64GenPostLegalizeGILowering.inc' l='339' u='c' c='_ZNK12_GLOBAL__N_137AArch64GenPostLegalizerLoweringHelper13tryCombineAllERN4llvm19GISelChangeObserverERNS1_12MachineInstrERNS1_16MachineIRBuilderERNS1_14CombinerHelperE'/>
<doc f='llvm/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp' l='516'>/// Determine whether or not it is possible to update the RHS and predicate of
/// a G_ICMP instruction such that the RHS will be selected as an arithmetic
/// immediate.
///
/// \p MI - The G_ICMP instruction
/// \p MatchInfo - The new RHS immediate and predicate on success
///
/// See tryAdjustICmpImmAndPred for valid transformations.</doc>
