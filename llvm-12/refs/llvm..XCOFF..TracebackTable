<def f='llvm/llvm/include/llvm/BinaryFormat/XCOFF.h' l='301' ll='394'/>
<size>1</size>
<smbr r='llvm::XCOFF::TracebackTable::VersionMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::VersionShift' t='const uint8_t'/>
<smbr r='llvm::XCOFF::TracebackTable::LanguageIdMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::LanguageIdShift' t='const uint8_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsGlobaLinkageMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsOutOfLineEpilogOrPrologueMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::HasTraceBackTableOffsetMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsInternalProcedureMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::HasControlledStorageMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsTOClessMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsFloatingPointPresentMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsFloatingPointOperationLogOrAbortEnabledMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsInterruptHandlerMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsFunctionNamePresentMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsAllocaUsedMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::OnConditionDirectiveMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsCRSavedMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsLRSavedMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::OnConditionDirectiveShift' t='const uint8_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsBackChainStoredMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsFixupMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::FPRSavedMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::FPRSavedShift' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::HasVectorInfoMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::HasExtensionTableMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::GPRSavedMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::GPRSavedShift' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::NumberOfFixedParmsMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::NumberOfFixedParmsShift' t='const uint8_t'/>
<smbr r='llvm::XCOFF::TracebackTable::NumberOfFloatingPointParmsMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::HasParmsOnStackMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::NumberOfFloatingPointParmsShift' t='const uint8_t'/>
<smbr r='llvm::XCOFF::TracebackTable::ParmTypeIsFloatingBit' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::ParmTypeFloatingIsDoubleBit' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::ParmTypeIsFixedBits' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::ParmTypeIsVectorBits' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::ParmTypeIsFloatingBits' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::ParmTypeIsDoubleBits' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::ParmTypeMask' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::NumberOfVRSavedMask' t='const uint16_t'/>
<smbr r='llvm::XCOFF::TracebackTable::IsVRSavedOnStackMask' t='const uint16_t'/>
<smbr r='llvm::XCOFF::TracebackTable::HasVarArgsMask' t='const uint16_t'/>
<smbr r='llvm::XCOFF::TracebackTable::NumberOfVRSavedShift' t='const uint8_t'/>
<smbr r='llvm::XCOFF::TracebackTable::NumberOfVectorParmsMask' t='const uint16_t'/>
<smbr r='llvm::XCOFF::TracebackTable::HasVMXInstructionMask' t='const uint16_t'/>
<smbr r='llvm::XCOFF::TracebackTable::NumberOfVectorParmsShift' t='const uint8_t'/>
<smbr r='llvm::XCOFF::TracebackTable::ParmTypeIsVectorCharBit' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::ParmTypeIsVectorShortBit' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::ParmTypeIsVectorIntBit' t='const uint32_t'/>
<smbr r='llvm::XCOFF::TracebackTable::ParmTypeIsVectorFloatBit' t='const uint32_t'/>
