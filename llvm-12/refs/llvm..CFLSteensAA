<inh f='llvm/llvm/include/llvm/IR/PassManager.h' l='391' c='llvm::AnalysisInfoMixin'/>
<def f='llvm/llvm/include/llvm/Analysis/CFLSteensAliasAnalysis.h' l='111' ll='120'/>
<use f='llvm/llvm/include/llvm/Analysis/CFLSteensAliasAnalysis.h' l='111'/>
<use f='llvm/llvm/include/llvm/Analysis/CFLSteensAliasAnalysis.h' l='112'/>
<size>1</size>
<doc f='llvm/llvm/include/llvm/Analysis/CFLSteensAliasAnalysis.h' l='107'>/// Analysis pass providing a never-invalidated alias analysis result.
///
/// FIXME: We really should refactor CFL to use the analysis more heavily, and
/// in particular to leverage invalidation to trigger re-computation of sets.</doc>
<smbr r='llvm::CFLSteensAA::Key' t='llvm::AnalysisKey'/>
<fun r='_ZN4llvm11CFLSteensAA3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<use f='llvm/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h' l='500' c='_ZN4llvmL18registerAAAnalysesENS_9CFLAATypeE'/>
<use f='llvm/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h' l='507' c='_ZN4llvmL18registerAAAnalysesENS_9CFLAATypeE'/>
<size>1</size>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='182' c='_ZN4llvm11PassBuilder24registerFunctionAnalysesERNS_15AnalysisManagerINS_8FunctionEJEEE'/>
<size>1</size>
