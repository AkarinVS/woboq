<dec f='llvm/llvm/lib/Bitcode/Reader/ValueList.h' l='105' type='void llvm::BitcodeReaderValueList::resolveConstantForwardRefs()'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitcodeReader.cpp' l='2401' u='c' c='_ZN12_GLOBAL__N_113BitcodeReader14parseConstantsEv'/>
<doc f='llvm/llvm/lib/Bitcode/Reader/ValueList.h' l='103'>/// Once all constants are read, this method bulk resolves any forward
  /// references.</doc>
<def f='llvm/llvm/lib/Bitcode/Reader/ValueList.cpp' l='150' ll='222' type='void llvm::BitcodeReaderValueList::resolveConstantForwardRefs()'/>
<doc f='llvm/llvm/lib/Bitcode/Reader/ValueList.cpp' l='144'>/// Once all constants are read, this method bulk resolves any forward
/// references.  The idea behind this is that we sometimes get constants (such
/// as large arrays) which reference *many* forward ref constants.  Replacing
/// each of these causes a lot of thrashing when building/reuniquing the
/// constant.  Instead of doing this, we look at all the uses and rewrite all
/// the place holders at once for any constant that uses a placeholder.</doc>
