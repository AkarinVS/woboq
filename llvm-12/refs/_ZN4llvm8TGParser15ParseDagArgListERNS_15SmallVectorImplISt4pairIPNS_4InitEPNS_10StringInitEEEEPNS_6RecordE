<dec f='llvm/llvm/lib/TableGen/TGParser.h' l='248' type='void llvm::TGParser::ParseDagArgList(SmallVectorImpl&lt;std::pair&lt;llvm::Init *, StringInit *&gt; &gt; &amp; Result, llvm::Record * CurRec)'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2257' u='c' c='_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE'/>
<def f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2486' ll='2522' type='void llvm::TGParser::ParseDagArgList(SmallVectorImpl&lt;std::pair&lt;llvm::Init *, StringInit *&gt; &gt; &amp; Result, llvm::Record * CurRec)'/>
<doc f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2480'>/// ParseDagArgList - Parse the argument list for a dag literal expression.
///
///    DagArg     ::= Value (&apos;:&apos; VARNAME)?
///    DagArg     ::= VARNAME
///    DagArgList ::= DagArg
///    DagArgList ::= DagArgList &apos;,&apos; DagArg</doc>
