<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1073' type='bool llvm::ScalarEvolution::getIndexExpressionsFromGEP(const llvm::GetElementPtrInst * GEP, SmallVectorImpl&lt;const llvm::SCEV *&gt; &amp; Subscripts, SmallVectorImpl&lt;int&gt; &amp; Sizes)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1064'>/// Gathers the individual index expressions from a GEP instruction.
  ///
  /// This function optimistically assumes the GEP references into a fixed size
  /// array. If this is actually true, this function returns a list of array
  /// subscript expressions in \p Subscripts and a list of integers describing
  /// the size of the individual array dimensions in \p Sizes. Both lists have
  /// either equal length or the size list is one element shorter in case there
  /// is no known size available for the outermost array dimension. Returns true
  /// if successful and false otherwise.</doc>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3331' u='c' c='_ZN4llvm14DependenceInfo23tryDelinearizeFixedSizeEPNS_11InstructionES2_PKNS_4SCEVES5_RNS_15SmallVectorImplIS5_EES8_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3332' u='c' c='_ZN4llvm14DependenceInfo23tryDelinearizeFixedSizeEPNS_11InstructionES2_PKNS_4SCEVES5_RNS_15SmallVectorImplIS5_EES8_'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='11905' ll='11948' type='bool llvm::ScalarEvolution::getIndexExpressionsFromGEP(const llvm::GetElementPtrInst * GEP, SmallVectorImpl&lt;const llvm::SCEV *&gt; &amp; Subscripts, SmallVectorImpl&lt;int&gt; &amp; Sizes)'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='1635' u='c' c='_ZN5polly11ScopBuilder24buildAccessMultiDimFixedENS_10MemAccInstEPNS_8ScopStmtE'/>
