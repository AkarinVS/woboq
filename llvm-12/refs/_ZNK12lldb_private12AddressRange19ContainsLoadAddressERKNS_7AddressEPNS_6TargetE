<dec f='llvm/lldb/include/lldb/Core/AddressRange.h' l='145' type='bool lldb_private::AddressRange::ContainsLoadAddress(const lldb_private::Address &amp; so_addr, lldb_private::Target * target) const'/>
<doc f='llvm/lldb/include/lldb/Core/AddressRange.h' l='135'>/// Check if a section offset \a so_addr when represented as a load address
  /// is contained within this object&apos;s load address range.
  ///
  /// \param[in] so_addr
  ///     A section offset address object reference.
  ///
  /// \return
  ///     Returns \b true if both \a this and \a so_addr have
  ///     resolvable load address values and \a so_addr is contained
  ///     in the address range, \b false otherwise.</doc>
<def f='llvm/lldb/source/Core/AddressRange.cpp' l='93' ll='109' type='bool lldb_private::AddressRange::ContainsLoadAddress(const lldb_private::Address &amp; addr, lldb_private::Target * target) const'/>
<use f='llvm/lldb/source/Plugins/Disassembler/LLVMC/DisassemblerLLVMC.cpp' l='1339' u='c' c='_ZN17DisassemblerLLVMC12SymbolLookupEmPmmPPKc'/>
