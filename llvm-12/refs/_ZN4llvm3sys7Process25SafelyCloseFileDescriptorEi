<dec f='llvm/llvm/include/llvm/Support/Process.h' l='131' type='static std::error_code llvm::sys::Process::SafelyCloseFileDescriptor(int FD)'/>
<doc f='llvm/llvm/include/llvm/Support/Process.h' l='124'>// This function safely closes a file descriptor.  It is not safe to retry
  // close(2) when it returns with errno equivalent to EINTR; this is because
  // *nixen cannot agree if the file descriptor is, in fact, closed when this
  // occurs.
  //
  // N.B. Some operating systems, due to thread cancellation, cannot properly
  // guarantee that it will or will not be closed one way or the other!</doc>
<use f='llvm/clang/lib/Frontend/PrecompiledPreamble.cpp' l='657' u='c' c='_ZN5clang19PrecompiledPreamble11TempPCHFile24CreateNewPreamblePCHFileEv'/>
<use f='llvm/lldb/tools/driver/Driver.cpp' l='432' u='c' c='_ZL26PrepareCommandsForSourcingPKcm'/>
<use f='llvm/lldb/tools/driver/Driver.cpp' l='433' u='c' c='_ZL26PrepareCommandsForSourcingPKcm'/>
<use f='llvm/lldb/tools/driver/Driver.cpp' l='439' u='c' c='_ZL26PrepareCommandsForSourcingPKcm'/>
<use f='llvm/lldb/tools/driver/Driver.cpp' l='449' u='c' c='_ZL26PrepareCommandsForSourcingPKcm'/>
<use f='llvm/llvm/lib/Support/FileCollector.cpp' l='170' u='c' c='_ZL29copyAccessAndModificationTimeN4llvm9StringRefERKNS_3sys2fs11file_statusE'/>
<use f='llvm/llvm/lib/Support/Unix/Path.inc' l='1150' u='c' c='_ZN4llvm3sys2fs9closeFileERi'/>
<def f='llvm/llvm/lib/Support/Unix/Process.inc' l='233' ll='266' type='static std::error_code llvm::sys::Process::SafelyCloseFileDescriptor(int FD)'/>
<use f='llvm/llvm/lib/Support/raw_ostream.cpp' l='666' u='c' c='_ZN4llvm14raw_fd_ostreamD1Ev'/>
<use f='llvm/llvm/lib/Support/raw_ostream.cpp' l='798' u='c' c='_ZN4llvm14raw_fd_ostream5closeEv'/>
<use f='llvm/llvm/tools/llvm-objcopy/llvm-objcopy.cpp' l='265' u='c' c='_ZL17restoreStatOnFileN4llvm9StringRefERKNS_3sys2fs11file_statusEb'/>
<use f='llvm/llvm/unittests/Support/ReplaceFileTest.cpp' l='51' u='c' c='_ZN12_GLOBAL__N_18ScopedFDD1Ev'/>
