<def f='llvm/clang/include/clang/Lex/TokenConcatenation.h' l='30' ll='68'/>
<use f='llvm/clang/lib/Frontend/PrintPreprocessedOutput.cpp' l='82'/>
<size>400</size>
<doc f='llvm/clang/include/clang/Lex/TokenConcatenation.h' l='22'>/// TokenConcatenation class, which answers the question of
  ///   &quot;Is it safe to emit two tokens without a whitespace between them, or
  ///    would that cause implicit concatenation of the tokens?&quot;
  ///
  /// For example, it emitting two identifiers &quot;foo&quot; and &quot;bar&quot; next to each
  /// other would cause the lexer to produce one &quot;foobar&quot; token.  Emitting &quot;1&quot;
  /// and &quot;)&quot; next to each other is safe.
  ///</doc>
<mbr r='clang::TokenConcatenation::PP' o='0' t='const clang::Preprocessor &amp;'/>
<mbr r='clang::TokenConcatenation::TokenInfo' o='64' t='char [387]'/>
<fun r='_ZN5clang18TokenConcatenationC1ERKNS_12PreprocessorE'/>
<fun r='_ZNK5clang18TokenConcatenation11AvoidConcatERKNS_5TokenES3_S3_'/>
<fun r='_ZNK5clang18TokenConcatenation24IsIdentifierStringPrefixERKNS_5TokenE'/>
<use f='llvm/clang/lib/Rewrite/HTMLRewrite.cpp' l='595' c='_ZN5clang4html15HighlightMacrosERNS_8RewriterENS_6FileIDERKNS_12PreprocessorE'/>
<size>400</size>
<use f='llvm/clang/lib/StaticAnalyzer/Core/PlistDiagnostics.cpp' l='860'/>
<size>400</size>
