<dec f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='458' type='bool llvm::TargetInstrInfo::findCommutedOpIndices(const llvm::MachineInstr &amp; MI, unsigned int &amp; SrcOpIdx1, unsigned int &amp; SrcOpIdx2) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='441'>/// Returns true iff the routine could find two commutable operands in the
  /// given machine instruction.
  /// The &apos;SrcOpIdx1&apos; and &apos;SrcOpIdx2&apos; are INPUT and OUTPUT arguments.
  /// If any of the INPUT values is set to the special value
  /// &apos;CommuteAnyOperandIndex&apos; then the method arbitrarily picks a commutable
  /// operand, then returns its index in the corresponding argument.
  /// If both of INPUT values are set to &apos;CommuteAnyOperandIndex&apos; then method
  /// looks for 2 commutable operands.
  /// If INPUT values refer to some operands of MI, then the method simply
  /// returns true if the corresponding operands are commutable and returns
  /// false otherwise.
  ///
  /// For example, calling this method this way:
  ///     unsigned Op1 = 1, Op2 = CommuteAnyOperandIndex;
  ///     findCommutedOpIndices(MI, Op1, Op2);
  /// can be interpreted as a query asking to find an operand that would be
  /// commutable with the operand#1.</doc>
<use f='llvm/llvm/lib/CodeGen/PeepholeOptimizer.cpp' l='1536' u='c' c='_ZN12_GLOBAL__N_117PeepholeOptimizer20findTargetRecurrenceEN4llvm8RegisterERKNS1_8SmallSetIS2_Lj2ESt4lessIS2_EEERNS1_11SmallVectorINS_15RecurrenceInstrELj4EEE'/>
<use f='llvm/llvm/lib/CodeGen/RegisterCoalescer.cpp' l='850' u='c' c='_ZN12_GLOBAL__N_117RegisterCoalescer24removeCopyByCommutingDefERKN4llvm13CoalescerPairEPNS1_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='257' u='c' c='_ZNK4llvm15TargetInstrInfo18commuteInstructionERNS_12MachineInstrEbjj'/>
<def f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='296' ll='318' type='bool llvm::TargetInstrInfo::findCommutedOpIndices(const llvm::MachineInstr &amp; MI, unsigned int &amp; SrcOpIdx1, unsigned int &amp; SrcOpIdx2) const'/>
<use f='llvm/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp' l='1078' u='c' c='_ZN12_GLOBAL__N_125TwoAddressInstructionPass21tryInstructionCommuteEPN4llvm12MachineInstrEjjbj'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='2028' c='_ZNK4llvm11SIInstrInfo21findCommutedOpIndicesERKNS_12MachineInstrERjS4_'/>
<use f='llvm/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp' l='779' u='c' c='_ZN12_GLOBAL__N_116Thumb2SizeReduce13ReduceTo2AddrERN4llvm17MachineBasicBlockEPNS1_12MachineInstrERKNS_11ReduceEntryEbb'/>
<ovr f='llvm/llvm/lib/Target/Mips/MipsInstrInfo.cpp' l='681' c='_ZNK4llvm13MipsInstrInfo21findCommutedOpIndicesERKNS_12MachineInstrERjS4_'/>
<use f='llvm/llvm/lib/Target/Mips/MipsInstrInfo.cpp' l='706' u='c' c='_ZNK4llvm13MipsInstrInfo21findCommutedOpIndicesERKNS_12MachineInstrERjS4_'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='1223' c='_ZNK4llvm12PPCInstrInfo21findCommutedOpIndicesERKNS_12MachineInstrERjS4_'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='1232' u='c' c='_ZNK4llvm12PPCInstrInfo21findCommutedOpIndicesERKNS_12MachineInstrERjS4_'/>
<use f='llvm/llvm/lib/Target/WebAssembly/WebAssemblyRegStackify.cpp' l='783' u='c' c='_ZN12_GLOBAL__N_114CommutingState12maybeCommuteEPN4llvm12MachineInstrERNS_15TreeWalkerStateEPKNS1_20WebAssemblyInstrInfoE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='2461' c='_ZNK4llvm12X86InstrInfo21findCommutedOpIndicesERKNS_12MachineInstrERjS4_'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='2522' u='c' c='_ZNK4llvm12X86InstrInfo21findCommutedOpIndicesERKNS_12MachineInstrERjS4_'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='2527' u='c' c='_ZNK4llvm12X86InstrInfo21findCommutedOpIndicesERKNS_12MachineInstrERjS4_'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='2536' u='c' c='_ZNK4llvm12X86InstrInfo21findCommutedOpIndicesERKNS_12MachineInstrERjS4_'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='2667' u='c' c='_ZNK4llvm12X86InstrInfo21findCommutedOpIndicesERKNS_12MachineInstrERjS4_'/>
