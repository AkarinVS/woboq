<dec f='llvm/llvm/include/llvm/IR/Type.h' l='396' type='static llvm::Type * llvm::Type::getPrimitiveType(llvm::LLVMContext &amp; C, llvm::Type::TypeID IDNumber)'/>
<doc f='llvm/llvm/include/llvm/IR/Type.h' l='390'>//===--------------------------------------------------------------------===//
  // Static members exported by the Type class itself.  Useful for getting
  // instances of Type.
  //

  /// Return a type based on an identifier.</doc>
<def f='llvm/llvm/lib/IR/Type.cpp' l='39' ll='57' type='static llvm::Type * llvm::Type::getPrimitiveType(llvm::LLVMContext &amp; C, llvm::Type::TypeID IDNumber)'/>
<doc f='llvm/llvm/lib/IR/Type.cpp' l='35'>//===----------------------------------------------------------------------===//
//                         Type Class Implementation
//===----------------------------------------------------------------------===//</doc>
