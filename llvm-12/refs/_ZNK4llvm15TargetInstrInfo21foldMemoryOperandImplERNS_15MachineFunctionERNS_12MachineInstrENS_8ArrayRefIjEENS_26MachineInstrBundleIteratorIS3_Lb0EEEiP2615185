<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1170' ll='1177' type='llvm::MachineInstr * llvm::TargetInstrInfo::foldMemoryOperandImpl(llvm::MachineFunction &amp; MF, llvm::MachineInstr &amp; MI, ArrayRef&lt;unsigned int&gt; Ops, MachineBasicBlock::iterator InsertPt, int FrameIndex, llvm::LiveIntervals * LIS = nullptr, llvm::VirtRegMap * VRM = nullptr) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1165'>/// Target-dependent implementation for foldMemoryOperand.
  /// Target-independent code in foldMemoryOperand will
  /// take care of adding a MachineMemOperand to the newly created instruction.
  /// The instruction and any auxiliary instructions necessary will be inserted
  /// at InsertPt.</doc>
<use f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='612' u='c' c='_ZNK4llvm15TargetInstrInfo17foldMemoryOperandERNS_12MachineInstrENS_8ArrayRefIjEEiPNS_13LiveIntervalsEPNS_10VirtRegMapE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='3747' c='_ZNK4llvm16AArch64InstrInfo21foldMemoryOperandImplERNS_15MachineFunctionERNS_12MachineInstrENS_8ArrayRefIjEENS_26MachineInstrBundleIteratorIS3_Lb0EEEi14474806'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='7361' c='_ZNK4llvm11SIInstrInfo21foldMemoryOperandImplERNS_15MachineFunctionERNS_12MachineInstrENS_8ArrayRefIjEENS_26MachineInstrBundleIteratorIS3_Lb0EEEiPNS_115012366'/>
<ovr f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='994' c='_ZNK4llvm16SystemZInstrInfo21foldMemoryOperandImplERNS_15MachineFunctionERNS_12MachineInstrENS_8ArrayRefIjEENS_26MachineInstrBundleIteratorIS3_Lb0EEEi15416259'/>
<ovr f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='5681' c='_ZNK4llvm12X86InstrInfo21foldMemoryOperandImplERNS_15MachineFunctionERNS_12MachineInstrENS_8ArrayRefIjEENS_26MachineInstrBundleIteratorIS3_Lb0EEEiPNS_13641444'/>
