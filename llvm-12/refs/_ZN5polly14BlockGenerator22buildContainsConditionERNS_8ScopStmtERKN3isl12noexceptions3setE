<dec f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='348' type='llvm::Value * polly::BlockGenerator::buildContainsCondition(polly::ScopStmt &amp; Stmt, const isl::set &amp; Subdomain)'/>
<def f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='583' ll='605' type='llvm::Value * polly::BlockGenerator::buildContainsCondition(polly::ScopStmt &amp; Stmt, const isl::set &amp; Subdomain)'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='623' u='c' c='_ZN5polly14BlockGenerator28generateConditionalExecutionERNS_8ScopStmtERKN3isl12noexceptions3setEN4llvm9StringRefERKSt8functionIFvvEE'/>
<doc f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='338'>/// Generate instructions that compute whether one instance of @p Set is
  /// executed.
  ///
  /// @param Stmt      The statement we generate code for.
  /// @param Subdomain A set in the space of @p Stmt&apos;s domain. Elements not in
  ///                  @p Stmt&apos;s domain are ignored.
  ///
  /// @return An expression of type i1, generated into the current builder
  ///         position, that evaluates to 1 if the executed instance is part of
  ///         @p Set.</doc>
