<dec f='llvm/llvm/lib/AsmParser/LLParser.h' l='269' type='bool llvm::LLParser::parseOptionalCallingConv(unsigned int &amp; CC)'/>
<def f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='2099' ll='2156' type='bool llvm::LLParser::parseOptionalCallingConv(unsigned int &amp; CC)'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='5656' u='c' c='_ZN4llvm8LLParser19parseFunctionHeaderERPNS_8FunctionEb'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='6437' u='c' c='_ZN4llvm8LLParser11parseInvokeERPNS_11InstructionERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='6746' u='c' c='_ZN4llvm8LLParser11parseCallBrERPNS_11InstructionERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='7172' u='c' c='_ZN4llvm8LLParser9parseCallERPNS_11InstructionERNS0_16PerFunctionStateENS_8CallInst12TailCallKindE'/>
<doc f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='2053'>/// parseOptionalCallingConv
///   ::= /*empty*/
///   ::= &apos;ccc&apos;
///   ::= &apos;fastcc&apos;
///   ::= &apos;intel_ocl_bicc&apos;
///   ::= &apos;coldcc&apos;
///   ::= &apos;cfguard_checkcc&apos;
///   ::= &apos;x86_stdcallcc&apos;
///   ::= &apos;x86_fastcallcc&apos;
///   ::= &apos;x86_thiscallcc&apos;
///   ::= &apos;x86_vectorcallcc&apos;
///   ::= &apos;arm_apcscc&apos;
///   ::= &apos;arm_aapcscc&apos;
///   ::= &apos;arm_aapcs_vfpcc&apos;
///   ::= &apos;aarch64_vector_pcs&apos;
///   ::= &apos;aarch64_sve_vector_pcs&apos;
///   ::= &apos;msp430_intrcc&apos;
///   ::= &apos;avr_intrcc&apos;
///   ::= &apos;avr_signalcc&apos;
///   ::= &apos;ptx_kernel&apos;
///   ::= &apos;ptx_device&apos;
///   ::= &apos;spir_func&apos;
///   ::= &apos;spir_kernel&apos;
///   ::= &apos;x86_64_sysvcc&apos;
///   ::= &apos;win64cc&apos;
///   ::= &apos;webkit_jscc&apos;
///   ::= &apos;anyregcc&apos;
///   ::= &apos;preserve_mostcc&apos;
///   ::= &apos;preserve_allcc&apos;
///   ::= &apos;ghccc&apos;
///   ::= &apos;swiftcc&apos;
///   ::= &apos;x86_intrcc&apos;
///   ::= &apos;hhvmcc&apos;
///   ::= &apos;hhvm_ccc&apos;
///   ::= &apos;cxx_fast_tlscc&apos;
///   ::= &apos;amdgpu_vs&apos;
///   ::= &apos;amdgpu_ls&apos;
///   ::= &apos;amdgpu_hs&apos;
///   ::= &apos;amdgpu_es&apos;
///   ::= &apos;amdgpu_gs&apos;
///   ::= &apos;amdgpu_ps&apos;
///   ::= &apos;amdgpu_cs&apos;
///   ::= &apos;amdgpu_kernel&apos;
///   ::= &apos;tailcc&apos;
///   ::= &apos;cc&apos; UINT
///</doc>
