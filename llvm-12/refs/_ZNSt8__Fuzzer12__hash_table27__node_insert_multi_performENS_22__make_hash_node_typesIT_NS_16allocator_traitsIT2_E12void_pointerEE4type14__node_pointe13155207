<dec f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_x86_64/include/c++/v1/__hash_table' l='1050' type='void std::__Fuzzer::__hash_table::__node_insert_multi_perform(std::__Fuzzer::__hash_table::__node_pointer __cp, std::__Fuzzer::__hash_table::__next_pointer __pn)'/>
<def f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_x86_64/include/c++/v1/__hash_table' l='1979' ll='2009' type='void std::__Fuzzer::__hash_table::__node_insert_multi_perform(std::__Fuzzer::__hash_table::__node_pointer __cp, std::__Fuzzer::__hash_table::__next_pointer __pn)'/>
<use f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_x86_64/include/c++/v1/__hash_table' l='2018' u='c' c='_ZNSt8__Fuzzer12__hash_table19__node_insert_multiENS_22__make_hash_node_typesIT_NS_16allocator_traitsIT2_E12void_pointerEE4type14__node_pointerE'/>
<doc f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_x86_64/include/c++/v1/__hash_table' l='1974'>// Insert the node __cp into the container after __pn (which is the last node in
// the bucket that compares equal to __cp). Rehashing, and checking for
// uniqueness has already been performed (in __node_insert_multi_prepare), so
// all we need to do is update the bucket and size(). Assumes that __cp-&gt;__hash
// is up-to-date.</doc>
