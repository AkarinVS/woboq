<dec f='llvm/lldb/include/lldb/Target/Thread.h' l='242' type='bool lldb_private::Thread::MatchesSpec(const lldb_private::ThreadSpec * spec)'/>
<doc f='llvm/lldb/include/lldb/Target/Thread.h' l='237'>// Return whether this thread matches the specification in ThreadSpec.  This
  // is a virtual method because at some point we may extend the thread spec
  // with a platform specific dictionary of attributes, which then only the
  // platform specific Thread implementation would know how to match.  For now,
  // this just calls through to the ThreadSpec&apos;s ThreadPassesBasicTests method.</doc>
<use f='llvm/lldb/source/Breakpoint/BreakpointLocation.cpp' l='378' u='c' c='_ZN12lldb_private18BreakpointLocation18ValidForThisThreadEPNS_6ThreadE'/>
<def f='llvm/lldb/source/Target/Thread.cpp' l='1053' ll='1055' type='bool lldb_private::Thread::MatchesSpec(const lldb_private::ThreadSpec * spec)'/>
