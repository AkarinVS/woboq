<def f='llvm/lldb/include/lldb/Utility/Log.h' l='60' ll='94'/>
<use f='llvm/lldb/include/lldb/Utility/Log.h' l='100' c='_ZN12lldb_private3Log8RegisterEN4llvm9StringRefERNS0_7ChannelE'/>
<use f='llvm/lldb/include/lldb/Utility/Log.h' l='133' c='_ZN12lldb_private3LogC1ERNS0_7ChannelE'/>
<use f='llvm/lldb/include/lldb/Utility/Log.h' l='173'/>
<size>32</size>
<doc f='llvm/lldb/include/lldb/Utility/Log.h' l='58'>// This class describes a log channel. It also encapsulates the behavior
  // necessary to enable a log channel in an atomic manner.</doc>
<mbr r='lldb_private::Log::Channel::log_ptr' o='0' t='std::atomic&lt;Log *&gt;'/>
<mbr r='lldb_private::Log::Channel::categories' o='64' t='const llvm::ArrayRef&lt;Category&gt;'/>
<mbr r='lldb_private::Log::Channel::default_flags' o='192' t='const uint32_t'/>
<fun r='_ZN12lldb_private3Log7ChannelC1EN4llvm8ArrayRefINS0_8CategoryEEEj'/>
<fun r='_ZN12lldb_private3Log7Channel11GetLogIfAllEj'/>
<fun r='_ZN12lldb_private3Log7Channel11GetLogIfAnyEj'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemoteLog.h' l='33'/>
<use f='llvm/lldb/source/Plugins/Process/POSIX/ProcessPOSIXLog.h' l='28'/>
<size>32</size>
<use f='llvm/lldb/source/Plugins/Process/POSIX/ProcessPOSIXLog.cpp' l='25'/>
<size>32</size>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemoteLog.cpp' l='36'/>
<size>32</size>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/LogChannelDWARF.h' l='24'/>
<size>32</size>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/LogChannelDWARF.cpp' l='27'/>
<size>32</size>
<use f='llvm/lldb/source/Utility/Log.cpp' l='188' c='_ZN12lldb_private3Log8RegisterEN4llvm9StringRefERNS0_7ChannelE'/>
<size>32</size>
<use f='llvm/lldb/source/Utility/Logging.cpp' l='52'/>
<size>32</size>
<use f='llvm/lldb/unittests/Utility/LogTest.cpp' l='27'/>
<size>32</size>
