<def f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='387' ll='389'/>
<use f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='392' c='_ZN4llvm12PatternMatch21m_AnyIntegralConstantEv'/>
<use f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='393' c='_ZN4llvm12PatternMatch21m_AnyIntegralConstantEv'/>
<size>1</size>
<doc f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='378'>///////////////////////////////////////////////////////////////////////////////
//
// Encapsulate constant value queries for use in templated predicate matchers.
// This allows checking if constants match using compound predicates and works
// with vector constants, possibly with relaxed constraints. For example, ignore
// undef values.
//
///////////////////////////////////////////////////////////////////////////////</doc>
<fun r='_ZN4llvm12PatternMatch12is_any_apint7isValueERKNS_5APIntE'/>
