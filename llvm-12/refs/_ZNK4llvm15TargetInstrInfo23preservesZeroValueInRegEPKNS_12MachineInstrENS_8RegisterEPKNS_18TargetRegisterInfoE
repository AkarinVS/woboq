<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1339' ll='1343' type='bool llvm::TargetInstrInfo::preservesZeroValueInReg(const llvm::MachineInstr * MI, const llvm::Register NullValueReg, const llvm::TargetRegisterInfo * TRI) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1334'>/// Returns true if MI&apos;s Def is NullValueReg, and the MI
  /// does not change the Zero value. i.e. cases such as rax = shr rax, X where
  /// NullValueReg = rax. Note that if the NullValueReg is non-zero, this
  /// function can return true even if becomes zero. Specifically cases such as
  /// NullValueReg = shl NullValueReg, 63.</doc>
<use f='llvm/llvm/lib/CodeGen/ImplicitNullChecks.cpp' l='698' u='c' c='_ZN12_GLOBAL__N_118ImplicitNullChecks25analyzeBlockForNullChecksERN4llvm17MachineBasicBlockERNS1_15SmallVectorImplINS0_9NullCheckEEE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='3706' c='_ZNK4llvm12X86InstrInfo23preservesZeroValueInRegEPKNS_12MachineInstrENS_8RegisterEPKNS_18TargetRegisterInfoE'/>
