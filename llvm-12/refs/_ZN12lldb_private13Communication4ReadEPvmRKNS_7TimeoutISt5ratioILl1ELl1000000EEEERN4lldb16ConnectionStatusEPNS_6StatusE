<dec f='llvm/lldb/include/lldb/Core/Communication.h' l='191' type='size_t lldb_private::Communication::Read(void * dst, size_t dst_len, const Timeout&lt;std::micro&gt; &amp; timeout, lldb::ConnectionStatus &amp; status, lldb_private::Status * error_ptr)'/>
<doc f='llvm/lldb/include/lldb/Core/Communication.h' l='164'>/// Read bytes from the current connection.
  ///
  /// If no read thread is running, this function call the connection&apos;s
  /// Connection::Read(...) function to get any available.
  ///
  /// If a read thread has been started, this function will check for any
  /// cached bytes that have already been read and return any currently
  /// available bytes. If no bytes are cached, it will wait for the bytes to
  /// become available by listening for the \a eBroadcastBitReadThreadGotBytes
  /// event. If this function consumes all of the bytes in the cache, it will
  /// reset the \a eBroadcastBitReadThreadGotBytes event bit.
  ///
  /// \param[in] dst
  ///     A destination buffer that must be at least \a dst_len bytes
  ///     long.
  ///
  /// \param[in] dst_len
  ///     The number of bytes to attempt to read, and also the max
  ///     number of bytes that can be placed into \a dst.
  ///
  /// \param[in] timeout
  ///     A timeout value or llvm::None for no timeout.
  ///
  /// \return
  ///     The number of bytes actually read.
  ///
  /// \see size_t Connection::Read (void *, size_t);</doc>
<use f='llvm/lldb/source/API/SBCommunication.cpp' l='119' u='c' c='_ZN4lldb15SBCommunication4ReadEPvmjRNS_16ConnectionStatusE'/>
<def f='llvm/lldb/source/Core/Communication.cpp' l='125' ll='171' type='size_t lldb_private::Communication::Read(void * dst, size_t dst_len, const Timeout&lt;std::micro&gt; &amp; timeout, lldb::ConnectionStatus &amp; status, lldb_private::Status * error_ptr)'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunication.cpp' l='282' u='c' c='_ZN12lldb_private18process_gdb_remote22GDBRemoteCommunication19WaitForPacketNoLockER24StringExtractorGDBRemoteNS_7TimeoutISt5ratioILl1ELl1000000EEEEb'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerLLGS.cpp' l='1146' u='c' c='_ZN12lldb_private18process_gdb_remote32GDBRemoteCommunicationServerLLGS17SendProcessOutputEv'/>
