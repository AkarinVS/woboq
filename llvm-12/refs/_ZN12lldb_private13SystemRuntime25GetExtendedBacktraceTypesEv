<dec f='llvm/lldb/include/lldb/Target/SystemRuntime.h' l='109' type='const std::vector&lt;ConstString&gt; &amp; lldb_private::SystemRuntime::GetExtendedBacktraceTypes()'/>
<use f='llvm/lldb/source/API/SBProcess.cpp' l='1177' u='c' c='_ZN4lldb9SBProcess28GetNumExtendedBacktraceTypesEv'/>
<use f='llvm/lldb/source/API/SBProcess.cpp' l='1190' u='c' c='_ZN4lldb9SBProcess31GetExtendedBacktraceTypeAtIndexEj'/>
<doc f='llvm/lldb/include/lldb/Target/SystemRuntime.h' l='88'>/// Return a list of thread origin extended backtraces that may be
  /// available.
  ///
  /// A System Runtime may be able to provide a backtrace of when this
  /// thread was originally created.  Furthermore, it may be able to provide
  /// that extended backtrace for different styles of creation. On a system
  /// with both pthreads and libdispatch, aka Grand Central Dispatch, queues,
  /// the system runtime may be able to provide the pthread creation of the
  /// thread and it may also be able to provide the backtrace of when this GCD
  /// queue work block was enqueued. The caller may request these different
  /// origins by name.
  ///
  /// The names will be provided in the order that they are most likely to be
  /// requested.  For instance, a most natural order may be to request the GCD
  /// libdispatch queue origin.  If there is none, then request the pthread
  /// origin.
  ///
  /// \return
  ///   A vector of ConstStrings with names like &quot;pthread&quot; or &quot;libdispatch&quot;.
  ///   An empty vector may be returned if no thread origin extended
  ///   backtrace capabilities are available.</doc>
<use f='llvm/lldb/source/Commands/CommandObjectThread.cpp' l='132' u='c' c='_ZN28CommandObjectThreadBacktrace19DoExtendedBacktraceEPN12lldb_private6ThreadERNS0_19CommandReturnObjectE'/>
<ovr f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/SystemRuntimeMacOSX.cpp' l='673' c='_ZN19SystemRuntimeMacOSX25GetExtendedBacktraceTypesEv'/>
<def f='llvm/lldb/source/Target/SystemRuntime.cpp' l='42' ll='44' type='const std::vector&lt;ConstString&gt; &amp; lldb_private::SystemRuntime::GetExtendedBacktraceTypes()'/>
