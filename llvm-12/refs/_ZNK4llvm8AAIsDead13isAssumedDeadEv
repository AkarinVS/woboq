<dec f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2764' type='bool llvm::AAIsDead::isAssumedDead() const'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2760'>/// The query functions are protected such that other attributes need to go
  /// through the Attributor interfaces: `Attributor::isAssumedDead(...)`

  /// Returns true if the underlying value is assumed dead.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='638' u='c' c='_ZN4llvm10Attributor13isAssumedDeadERKNS_11InstructionEPKNS_17AbstractAttributeEPKNS_8AAIsDeadEbNS_10DepClassTyE'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='674' u='c' c='_ZN4llvm10Attributor13isAssumedDeadERKNS_10IRPositionEPKNS_17AbstractAttributeEPKNS_8AAIsDeadEbNS_10DepClassTyE'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='2762' c='_ZNK12_GLOBAL__N_117AAIsDeadValueImpl13isAssumedDeadEv'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='3138' c='_ZNK12_GLOBAL__N_116AAIsDeadFunction13isAssumedDeadEv'/>
