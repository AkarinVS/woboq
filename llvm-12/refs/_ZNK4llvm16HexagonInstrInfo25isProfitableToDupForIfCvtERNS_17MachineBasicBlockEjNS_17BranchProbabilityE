<dec f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='164' type='bool llvm::HexagonInstrInfo::isProfitableToDupForIfCvt(llvm::MachineBasicBlock &amp; MBB, unsigned int NumCycles, llvm::BranchProbability Probability) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='158'>/// Return true if it&apos;s profitable for if-converter to duplicate instructions
  /// of specified accumulated instruction latencies in the specified MBB to
  /// enable if-conversion.
  /// The probability of the instructions being executed is given by
  /// Probability, and Confidence is a measure of our confidence that it
  /// will be properly predicted.</doc>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='808' c='_ZNK4llvm15TargetInstrInfo25isProfitableToDupForIfCvtERNS_17MachineBasicBlockEjNS_17BranchProbabilityE'/>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='788' ll='791' type='bool llvm::HexagonInstrInfo::isProfitableToDupForIfCvt(llvm::MachineBasicBlock &amp; MBB, unsigned int NumInstrs, llvm::BranchProbability Probability) const'/>
