<dec f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h' l='60' type='std::vector&lt;unsigned int&gt;'/>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='56' u='w' c='_ZN4llvm22AggressiveAntiDepStateC1EjPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='72' u='m' c='_ZN4llvm22AggressiveAntiDepState8GetGroupEj'/>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='73' u='m' c='_ZN4llvm22AggressiveAntiDepState8GetGroupEj'/>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='100' u='m' c='_ZN4llvm22AggressiveAntiDepState11UnionGroupsEjj'/>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='108' u='m' c='_ZN4llvm22AggressiveAntiDepState10LeaveGroupEj'/>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='109' u='m' c='_ZN4llvm22AggressiveAntiDepState10LeaveGroupEj'/>
<offset>64</offset>
<doc f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h' l='55'>/// Implements a disjoint-union data structure to
    /// form register groups. A node is represented by an index into
    /// the vector. A node can &quot;point to&quot; itself to indicate that it
    /// is the parent of a group, or point to another node to indicate
    /// that it is a member of the same group as that node.</doc>
