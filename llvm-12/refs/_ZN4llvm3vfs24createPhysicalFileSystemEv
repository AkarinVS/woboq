<dec f='llvm/llvm/include/llvm/Support/VirtualFileSystem.h' l='310' type='std::unique_ptr&lt;FileSystem&gt; llvm::vfs::createPhysicalFileSystem()'/>
<doc f='llvm/llvm/include/llvm/Support/VirtualFileSystem.h' l='306'>/// Create an \p vfs::FileSystem for the &apos;real&apos; file system, as seen by
/// the operating system.
/// It has its own working directory, independent of (but initially equal to)
/// that of the process.</doc>
<use f='llvm/clang/lib/Tooling/AllTUsExecution.cpp' l='127' u='c' c='_ZN5clang7tooling18AllTUsToolExecutor7executeEN4llvm8ArrayRefISt4pairISt10unique_ptrINS0_21FrontendActionFactoryESt14default_deleteIS6_EESt8functionIF13938766'/>
<use f='llvm/clang/lib/Tooling/DependencyScanning/DependencyScanningWorker.cpp' l='157' u='c' c='_ZN5clang7tooling12dependencies24DependencyScanningWorkerC1ERNS1_25DependencyScanningServiceE'/>
<def f='llvm/llvm/lib/Support/VirtualFileSystem.cpp' l='351' ll='353' type='std::unique_ptr&lt;FileSystem&gt; llvm::vfs::createPhysicalFileSystem()'/>
<use f='llvm/llvm/unittests/Support/VirtualFileSystemTest.cpp' l='455' u='c' c='_ZN46VirtualFileSystemTest_MultipleWorkingDirs_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/VirtualFileSystemTest.cpp' l='456' u='c' c='_ZN46VirtualFileSystemTest_MultipleWorkingDirs_Test8TestBodyEv'/>
