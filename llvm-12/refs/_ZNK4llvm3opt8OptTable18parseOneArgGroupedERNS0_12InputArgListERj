<dec f='llvm/llvm/include/llvm/Option/OptTable.h' l='86' type='llvm::opt::Arg * llvm::opt::OptTable::parseOneArgGrouped(llvm::opt::InputArgList &amp; Args, unsigned int &amp; Index) const'/>
<def f='llvm/llvm/lib/Option/OptTable.cpp' l='341' ll='389' type='llvm::opt::Arg * llvm::opt::OptTable::parseOneArgGrouped(llvm::opt::InputArgList &amp; Args, unsigned int &amp; Index) const'/>
<use f='llvm/llvm/lib/Option/OptTable.cpp' l='477' u='c' c='_ZNK4llvm3opt8OptTable9ParseArgsENS_8ArrayRefIPKcEERjS6_jj'/>
<doc f='llvm/llvm/lib/Option/OptTable.cpp' l='337'>// Parse a single argument, return the new argument, and update Index. If
// GroupedShortOptions is true, -a matches &quot;-abc&quot; and the argument in Args will
// be updated to &quot;-bc&quot;. This overload does not support
// FlagsToInclude/FlagsToExclude or case insensitive options.</doc>
