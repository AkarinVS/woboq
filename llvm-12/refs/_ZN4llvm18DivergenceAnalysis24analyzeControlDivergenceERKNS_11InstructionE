<dec f='llvm/llvm/include/llvm/Analysis/DivergenceAnalysis.h' l='90' type='void llvm::DivergenceAnalysis::analyzeControlDivergence(const llvm::Instruction &amp; Term)'/>
<use f='llvm/llvm/lib/Analysis/DivergenceAnalysis.cpp' l='140' u='c' c='_ZN4llvm18DivergenceAnalysis9pushUsersERKNS_5ValueE'/>
<def f='llvm/llvm/lib/Analysis/DivergenceAnalysis.cpp' l='290' ll='311' type='void llvm::DivergenceAnalysis::analyzeControlDivergence(const llvm::Instruction &amp; Term)'/>
<doc f='llvm/llvm/include/llvm/Analysis/DivergenceAnalysis.h' l='88'>/// \brief Mark \p Term as divergent and push all Instructions that become
  /// divergent as a result on the worklist.</doc>
