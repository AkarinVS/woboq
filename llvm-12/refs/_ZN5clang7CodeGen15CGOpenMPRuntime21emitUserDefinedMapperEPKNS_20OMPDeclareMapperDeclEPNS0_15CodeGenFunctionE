<dec f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='926' type='void clang::CodeGen::CGOpenMPRuntime::emitUserDefinedMapper(const clang::OMPDeclareMapperDecl * D, clang::CodeGen::CodeGenFunction * CGF = nullptr)'/>
<use f='llvm/clang/lib/CodeGen/CGDecl.cpp' l='2602' u='c' c='_ZN5clang7CodeGen13CodeGenModule20EmitOMPDeclareMapperEPKNS_20OMPDeclareMapperDeclEPNS0_15CodeGenFunctionE'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='925'>/// Emit the function for the user defined mapper construct.</doc>
<def f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='9538' ll='9804' type='void clang::CodeGen::CGOpenMPRuntime::emitUserDefinedMapper(const clang::OMPDeclareMapperDecl * D, clang::CodeGen::CodeGenFunction * CGF = nullptr)'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='9870' u='c' c='_ZN5clang7CodeGen15CGOpenMPRuntime32getOrCreateUserDefinedMapperFuncEPKNS_20OMPDeclareMapperDeclE'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='9508'>/// Emit the user-defined mapper function. The code generation follows the
/// pattern in the example below.
/// \code
/// void .omp_mapper.&lt;type_name&gt;.&lt;mapper_id&gt;.(void *rt_mapper_handle,
///                                           void *base, void *begin,
///                                           int64_t size, int64_t type,
///                                           void *name = nullptr) {
///   // Allocate space for an array section first.
///   if (size &gt; 1 &amp;&amp; !maptype.IsDelete)
///     __tgt_push_mapper_component(rt_mapper_handle, base, begin,
///                                 size*sizeof(Ty), clearToFrom(type));
///   // Map members.
///   for (unsigned i = 0; i &lt; size; i++) {
///     // For each component specified by this mapper:
///     for (auto c : all_components) {
///       if (c.hasMapper())
///         (*c.Mapper())(rt_mapper_handle, c.arg_base, c.arg_begin, c.arg_size,
///                       c.arg_type, c.arg_name);
///       else
///         __tgt_push_mapper_component(rt_mapper_handle, c.arg_base,
///                                     c.arg_begin, c.arg_size, c.arg_type,
///                                     c.arg_name);
///     }
///   }
///   // Delete the array section.
///   if (size &gt; 1 &amp;&amp; maptype.IsDelete)
///     __tgt_push_mapper_component(rt_mapper_handle, base, begin,
///                                 size*sizeof(Ty), clearToFrom(type));
/// }
/// \endcode</doc>
