<inh f='llvm/llvm/include/llvm/Support/VirtualFileSystem.h' l='370' c='llvm::vfs::ProxyFileSystem'/>
<def f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h' l='143' ll='182'/>
<size>192</size>
<doc f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h' l='134'>/// A virtual file system optimized for the dependency discovery.
///
/// It is primarily designed to work with source files whose contents was was
/// preprocessed to remove any tokens that are unlikely to affect the dependency
/// computation.
///
/// This is not a thread safe VFS. A single instance is meant to be used only in
/// one thread. Multiple instances are allowed to service multiple threads
/// running in parallel.</doc>
<fun r='_ZN5clang7tooling12dependencies34DependencyScanningWorkerFilesystemC1ERNS1_39DependencyScanningFilesystemSharedCacheEN4llvm18IntrusiveRefCntPtrINS5_3v7226240'/>
<fun r='_ZN5clang7tooling12dependencies34DependencyScanningWorkerFilesystem6statusERKN4llvm5TwineE'/>
<fun r='_ZN5clang7tooling12dependencies34DependencyScanningWorkerFilesystem15openFileForReadERKN4llvm5TwineE'/>
<mbr r='clang::tooling::dependencies::DependencyScanningWorkerFilesystem::IgnoredFiles' o='192' t='llvm::StringSet&lt;&gt;'/>
<fun r='_ZN5clang7tooling12dependencies34DependencyScanningWorkerFilesystem14setCachedEntryEN4llvm9StringRefEPKNS1_21CachedFileSystemEntryE'/>
<fun r='_ZN5clang7tooling12dependencies34DependencyScanningWorkerFilesystem14getCachedEntryEN4llvm9StringRefE'/>
<fun r='_ZN5clang7tooling12dependencies34DependencyScanningWorkerFilesystem26getOrCreateFileSystemEntryEN4llvm9StringRefE'/>
<mbr r='clang::tooling::dependencies::DependencyScanningWorkerFilesystem::SharedCache' o='448' t='clang::tooling::dependencies::DependencyScanningFilesystemSharedCache &amp;'/>
<mbr r='clang::tooling::dependencies::DependencyScanningWorkerFilesystem::Cache' o='512' t='llvm::StringMap&lt;const CachedFileSystemEntry *, llvm::BumpPtrAllocator&gt;'/>
<mbr r='clang::tooling::dependencies::DependencyScanningWorkerFilesystem::PPSkipMappings' o='1472' t='clang::ExcludedPreprocessorDirectiveSkipMapping *'/>
<fun r='_ZN5clang7tooling12dependencies34DependencyScanningWorkerFilesystem26getOrCreateFileSystemEntryEN4llvm9StringRefE'/>
<fun r='_ZN5clang7tooling12dependencies34DependencyScanningWorkerFilesystem6statusERKN4llvm5TwineE'/>
<fun r='_ZN5clang7tooling12dependencies34DependencyScanningWorkerFilesystem15openFileForReadERKN4llvm5TwineE'/>
<use f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningWorker.h' l='75'/>
<size>192</size>
<use f='llvm/clang/lib/Tooling/DependencyScanning/DependencyScanningWorker.cpp' l='53' c='_ZN12_GLOBAL__N_124DependencyScanningActionC1EN4llvm9StringRefERN5clang7tooling12dependencies18DependencyConsumerENS1_18IntrusiveRefCntPtrINS5_34Depen2624236'/>
<use f='llvm/clang/lib/Tooling/DependencyScanning/DependencyScanningWorker.cpp' l='145'/>
<use f='llvm/clang/lib/Tooling/DependencyScanning/DependencyScanningWorker.cpp' l='162' c='_ZN5clang7tooling12dependencies24DependencyScanningWorkerC1ERNS1_25DependencyScanningServiceE'/>
<size>192</size>
