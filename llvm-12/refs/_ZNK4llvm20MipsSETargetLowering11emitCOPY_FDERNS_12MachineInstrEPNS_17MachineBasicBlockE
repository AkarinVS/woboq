<dec f='llvm/llvm/lib/Target/Mips/MipsSEISelLowering.h' l='100' type='llvm::MachineBasicBlock * llvm::MipsSETargetLowering::emitCOPY_FD(llvm::MachineInstr &amp; MI, llvm::MachineBasicBlock * BB) const'/>
<use f='llvm/llvm/lib/Target/Mips/MipsSEISelLowering.cpp' l='1097' u='c' c='_ZNK4llvm20MipsSETargetLowering27EmitInstrWithCustomInserterERNS_12MachineInstrEPNS_17MachineBasicBlockE'/>
<def f='llvm/llvm/lib/Target/Mips/MipsSEISelLowering.cpp' l='3212' ll='3235' type='llvm::MachineBasicBlock * llvm::MipsSETargetLowering::emitCOPY_FD(llvm::MachineInstr &amp; MI, llvm::MachineBasicBlock * BB) const'/>
<doc f='llvm/llvm/lib/Target/Mips/MipsSEISelLowering.cpp' l='3202'>// Emit the COPY_FD pseudo instruction.
//
// copy_fd_pseudo $fd, $ws, n
// =&gt;
// splati.d $wt, $ws, $n
// copy $fd, $wt:sub_64
//
// When n is zero, the equivalent operation can be performed with (potentially)
// zero instructions due to register overlaps. This optimization is always
// valid because FR=1 mode which is the only supported mode in MSA.</doc>
<doc f='llvm/llvm/lib/Target/Mips/MipsSEISelLowering.h' l='99'>/// Emit the COPY_FD pseudo instruction</doc>
