<dec f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='1179' type='llvm::LazyCallGraph::Node &amp; llvm::LazyCallGraph::initNode(llvm::Function &amp; F)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='1176'>/// Helper to initialize a new node created outside of creating SCCs and add
  /// it to the NodeMap if necessary. For example, useful when a function is
  /// split.</doc>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1648' u='c' c='_ZN4llvm13LazyCallGraph16addSplitFunctionERNS_8FunctionES2_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1734' u='c' c='_ZN4llvm13LazyCallGraph29addSplitRefRecursiveFunctionsERNS_8FunctionENS_8ArrayRefIPS1_EE'/>
<def f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1812' ll='1818' type='LazyCallGraph::Node &amp; llvm::LazyCallGraph::initNode(llvm::Function &amp; F)'/>
