<dec f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.h' l='1040' type='llvm::SDValue llvm::AArch64TargetLowering::getSVESafeBitCast(llvm::EVT VT, llvm::SDValue Op, llvm::SelectionDAG &amp; DAG) const'/>
<doc f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.h' l='1031'>// With the exception of data-predicate transitions, no instructions are
  // required to cast between legal scalable vector types. However:
  //  1. Packed and unpacked types have different bit lengths, meaning BITCAST
  //     is not universally useable.
  //  2. Most unpacked integer types are not legal and thus integer extends
  //     cannot be used to convert between unpacked and packed types.
  // These can make &quot;bitcasting&quot; a multiphase process. REINTERPRET_CAST is used
  // to transition between unpacked and packed types of the same element type,
  // with BITCAST used otherwise.</doc>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='4014' u='c' c='_ZNK4llvm21AArch64TargetLowering12LowerMGATHERENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='4034' u='c' c='_ZNK4llvm21AArch64TargetLowering12LowerMGATHERENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='4074' u='c' c='_ZNK4llvm21AArch64TargetLowering13LowerMSCATTERENS_7SDValueERNS_12SelectionDAGE'/>
<def f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='17230' ll='17266' type='llvm::SDValue llvm::AArch64TargetLowering::getSVESafeBitCast(llvm::EVT VT, llvm::SDValue Op, llvm::SelectionDAG &amp; DAG) const'/>
