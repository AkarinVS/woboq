<dec f='llvm/polly/lib/External/isl/isl_sample.h' l='23' type='isl_vec * isl_basic_set_sample_with_cone(isl_basic_map * bset, isl_basic_map * cone)'/>
<def f='llvm/polly/lib/External/isl/isl_sample.c' l='943' ll='991' type='isl_vec * isl_basic_set_sample_with_cone(isl_basic_map * bset, isl_basic_map * cone)'/>
<use f='llvm/polly/lib/External/isl/isl_sample.c' l='1141' u='c' c='gbr_sample'/>
<doc f='llvm/polly/lib/External/isl/isl_sample.c' l='906'>/* Give a basic set &quot;bset&quot; with recession cone &quot;cone&quot;, compute and
 * return an integer point in bset, if any.
 *
 * If the recession cone is full-dimensional, then we know that
 * bset contains an infinite number of integer points and it is
 * fairly easy to pick one of them.
 * If the recession cone is not full-dimensional, then we first
 * transform bset such that the bounded directions appear as
 * the first dimensions of the transformed basic set.
 * We do this by using a unimodular transformation that transforms
 * the equalities in the recession cone to equalities on the first
 * dimensions.
 *
 * The transformed set is then projected onto its bounded dimensions.
 * Note that to compute this projection, we can simply drop all constraints
 * involving any of the unbounded dimensions since these constraints
 * cannot be combined to produce a constraint on the bounded dimensions.
 * To see this, assume that there is such a combination of constraints
 * that produces a constraint on the bounded dimensions.  This means
 * that some combination of the unbounded dimensions has both an upper
 * bound and a lower bound in terms of the bounded dimensions, but then
 * this combination would be a bounded direction too and would have been
 * transformed into a bounded dimensions.
 *
 * We then compute a sample value in the bounded dimensions.
 * If no such value can be found, then the original set did not contain
 * any integer points and we are done.
 * Otherwise, we plug in the value we found in the bounded dimensions,
 * project out these bounded dimensions and end up with a set with
 * a full-dimensional recession cone.
 * A sample point in this set is computed by &quot;rounding up&quot; any
 * rational point in the set.
 *
 * The sample points in the bounded and unbounded dimensions are
 * then combined into a single sample point and transformed back
 * to the original space.
 */</doc>
<use f='llvm/polly/lib/External/isl/isl_tab_pip.c' l='3059' u='c' c='gbr_get_sample'/>
