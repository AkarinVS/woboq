<dec f='llvm/llvm/include/llvm/ADT/SmallVector.h' l='364' type='void llvm::SmallVectorTemplateBase::takeAllocationForGrow(T * NewElts, size_t NewCapacity)'/>
<use f='llvm/llvm/include/llvm/ADT/SmallVector.h' l='388' u='c' c='_ZN4llvm23SmallVectorTemplateBase13growAndAssignEmRKT_'/>
<use f='llvm/llvm/include/llvm/ADT/SmallVector.h' l='398' u='c' c='_ZN4llvm23SmallVectorTemplateBase18growAndEmplaceBackEDpOTL0__'/>
<use f='llvm/llvm/include/llvm/ADT/SmallVector.h' l='428' u='c' c='_ZN4llvm23SmallVectorTemplateBase4growEm'/>
<def f='llvm/llvm/include/llvm/ADT/SmallVector.h' l='443' ll='452' type='void llvm::SmallVectorTemplateBase::takeAllocationForGrow(T * NewElts, size_t NewCapacity)'/>
<doc f='llvm/llvm/include/llvm/ADT/SmallVector.h' l='363'>/// Transfer ownership of the allocation, finishing up \a grow().</doc>
<doc f='llvm/llvm/include/llvm/ADT/SmallVector.h' l='442'>// Define this out-of-line to dissuade the C++ compiler from inlining it.</doc>
