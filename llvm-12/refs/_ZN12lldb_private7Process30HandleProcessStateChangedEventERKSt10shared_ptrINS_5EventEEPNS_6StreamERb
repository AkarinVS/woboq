<dec f='llvm/lldb/include/lldb/Target/Process.h' l='2119' type='static bool lldb_private::Process::HandleProcessStateChangedEvent(const lldb::EventSP &amp; event_sp, lldb_private::Stream * stream, bool &amp; pop_process_io_handler)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='2100'>/// Centralize the code that handles and prints descriptions for process
  /// state changes.
  ///
  /// \param[in] event_sp
  ///     The process state changed event
  ///
  /// \param[in] stream
  ///     The output stream to get the state change description
  ///
  /// \param[in,out] pop_process_io_handler
  ///     If this value comes in set to \b true, then pop the Process IOHandler
  ///     if needed.
  ///     Else this variable will be set to \b true or \b false to indicate if
  ///     the process
  ///     needs to have its process IOHandler popped.
  ///
  /// \return
  ///     \b true if the event describes a process state changed event, \b false
  ///     otherwise.</doc>
<use f='llvm/lldb/source/Core/Debugger.cpp' l='1322' u='c' c='_ZN12lldb_private8Debugger18HandleProcessEventERKSt10shared_ptrINS_5EventEE'/>
<use f='llvm/lldb/source/Core/Debugger.cpp' l='1362' u='c' c='_ZN12lldb_private8Debugger18HandleProcessEventERKSt10shared_ptrINS_5EventEE'/>
<use f='llvm/lldb/source/Target/Platform.cpp' l='1861' u='c' c='_ZN12lldb_private8Platform16DoConnectProcessEN4llvm9StringRefES2_RNS_8DebuggerEPNS_6StreamEPNS_6TargetERNS_6StatusE'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='654' u='c' c='_ZN12lldb_private7Process20WaitForProcessToStopERKNS_7TimeoutISt5ratioILl1ELl1000000EEEEPSt10shared_ptrINS_5EventEEbS7_INS_8ListenerEEPNS_6StreamEb'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='684' ll='892' type='static bool lldb_private::Process::HandleProcessStateChangedEvent(const lldb::EventSP &amp; event_sp, lldb_private::Stream * stream, bool &amp; pop_process_io_handler)'/>
