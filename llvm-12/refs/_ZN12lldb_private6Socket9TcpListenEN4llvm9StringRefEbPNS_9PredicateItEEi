<dec f='llvm/lldb/include/lldb/Host/Socket.h' l='70' type='static llvm::Expected&lt;std::unique_ptr&lt;TCPSocket&gt; &gt; lldb_private::Socket::TcpListen(llvm::StringRef host_and_port, bool child_processes_inherit, Predicate&lt;uint16_t&gt; * predicate, int backlog = 5)'/>
<def f='llvm/lldb/source/Host/common/Socket.cpp' l='169' ll='203' type='static llvm::Expected&lt;std::unique_ptr&lt;TCPSocket&gt; &gt; lldb_private::Socket::TcpListen(llvm::StringRef host_and_port, bool child_processes_inherit, Predicate&lt;uint16_t&gt; * predicate, int backlog = 5)'/>
<doc f='llvm/lldb/include/lldb/Host/Socket.h' l='66'>// Initialize a Tcp Socket object in listening mode.  listen and accept are
  // implemented separately because the caller may wish to manipulate or query
  // the socket after it is initialized, but before entering a blocking accept.</doc>
<use f='llvm/lldb/source/Host/posix/ConnectionFileDescriptorPosix.cpp' l='703' u='c' c='_ZN12lldb_private24ConnectionFileDescriptor21SocketListenAndAcceptEN4llvm9StringRefEPNS_6StatusE'/>
<use f='llvm/lldb/unittests/Host/SocketTest.cpp' l='163' u='c' c='_ZN33SocketTest_TCPListen0GetPort_Test8TestBodyEv'/>
<use f='llvm/lldb/unittests/Host/SocketTestUtilities.cpp' l='95' u='c' c='_ZL14CheckIPSupportN4llvm9StringRefES0_'/>
