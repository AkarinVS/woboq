<dec f='llvm/lldb/include/lldb/Symbol/CompileUnit.h' l='256' type='bool lldb_private::CompileUnit::ForEachExternalModule(llvm::DenseSet&lt;lldb_private::SymbolFile *&gt; &amp; visited_symbol_files, llvm::function_ref&lt;bool (Module &amp;)&gt; lambda)'/>
<doc f='llvm/lldb/include/lldb/Symbol/CompileUnit.h' l='241'>/// Apply a lambda to each external lldb::Module referenced by this
  /// compilation unit. Recursively also descends into the referenced external
  /// modules of any encountered compilation unit.
  ///
  /// \param visited_symbol_files
  ///     A set of SymbolFiles that were already visited to avoid
  ///     visiting one file more than once.
  ///
  /// \param[in] lambda
  ///     The lambda that should be applied to every function. The lambda can
  ///     return true if the iteration should be aborted earlier.
  ///
  /// \return
  ///     If the lambda early-exited, this function returns true to
  ///     propagate the early exit.</doc>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangUserExpression.cpp' l='499' u='c' c='_Z15GetModuleConfigN4lldb12LanguageTypeERN12lldb_private16ExecutionContextE'/>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/SymbolFileDWARF.cpp' l='873' u='c' c='_ZN15SymbolFileDWARF21ForEachExternalModuleERN12lldb_private11CompileUnitERN4llvm8DenseSetIPNS0_10SymbolFileENS3_12DenseMapInfoIS6_EEEENS3_12function_5131787'/>
<def f='llvm/lldb/source/Symbol/CompileUnit.cpp' l='351' ll='357' type='bool lldb_private::CompileUnit::ForEachExternalModule(llvm::DenseSet&lt;SymbolFile *&gt; &amp; visited_symbol_files, llvm::function_ref&lt;bool (Module &amp;)&gt; lambda)'/>
