<dec f='llvm/polly/include/polly/CodeGen/LoopGeneratorsKMP.h' l='101' type='void polly::ParallelLoopGeneratorKMP::createCallDispatchInit(llvm::Value * GlobalThreadID, llvm::Value * LB, llvm::Value * UB, llvm::Value * Inc, llvm::Value * ChunkSize)'/>
<doc f='llvm/polly/include/polly/CodeGen/LoopGeneratorsKMP.h' l='93'>/// Create a runtime library call to prepare the OpenMP runtime.
  /// For dynamically scheduled loops, saving the loop arguments.
  ///
  /// @param GlobalThreadID   The global thread ID.
  /// @param LB               The loop&apos;s lower bound.
  /// @param UB               The loop&apos;s upper bound.
  /// @param Inc              The loop increment.
  /// @param ChunkSize        The chunk size of the parallel loop.</doc>
<use f='llvm/polly/lib/CodeGen/LoopGeneratorsKMP.cpp' l='210' u='c' c='_ZN5polly24ParallelLoopGeneratorKMP11createSubFnEPN4llvm5ValueEPNS1_10AllocaInstENS1_9SetVectorIS3_St6vectorIS3_SaIS3_EENS1_8DenseSetIS3_NS1_12DenseMa11000764'/>
<def f='llvm/polly/lib/CodeGen/LoopGeneratorsKMP.cpp' l='418' ll='456' type='void polly::ParallelLoopGeneratorKMP::createCallDispatchInit(llvm::Value * GlobalThreadID, llvm::Value * LB, llvm::Value * UB, llvm::Value * Inc, llvm::Value * ChunkSize)'/>
