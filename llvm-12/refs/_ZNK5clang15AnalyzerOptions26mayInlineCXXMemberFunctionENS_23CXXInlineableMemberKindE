<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h' l='392' type='bool clang::AnalyzerOptions::mayInlineCXXMemberFunction(clang::CXXInlineableMemberKind K) const'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h' l='386'>/// Returns the option controlling which C++ member functions will be
  /// considered for inlining.
  ///
  /// This is controlled by the &apos;c++-inlining&apos; config option.
  ///
  /// \sa CXXMemberInliningMode</doc>
<def f='llvm/clang/lib/StaticAnalyzer/Core/AnalyzerOptions.cpp' l='97' ll='115' type='bool clang::AnalyzerOptions::mayInlineCXXMemberFunction(clang::CXXInlineableMemberKind Param) const'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='729' u='c' c='_ZN5clang4ento10ExprEngine17mayInlineCallKindERKNS0_9CallEventEPKNS0_12ExplodedNodeERNS_15AnalyzerOptionsERKNS0_15EvalCallOptionsE'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='733' u='c' c='_ZN5clang4ento10ExprEngine17mayInlineCallKindERKNS0_9CallEventEPKNS0_12ExplodedNodeERNS_15AnalyzerOptionsERKNS0_15EvalCallOptionsE'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='767' u='c' c='_ZN5clang4ento10ExprEngine17mayInlineCallKindERKNS0_9CallEventEPKNS0_12ExplodedNodeERNS_15AnalyzerOptionsERKNS0_15EvalCallOptionsE'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='797' u='c' c='_ZN5clang4ento10ExprEngine17mayInlineCallKindERKNS0_9CallEventEPKNS0_12ExplodedNodeERNS_15AnalyzerOptionsERKNS0_15EvalCallOptionsE'/>
