<def f='llvm/compiler-rt/lib/scudo/standalone/primary32.h' l='42' ll='490'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/primary32.h' l='50'/>
<doc f='llvm/compiler-rt/lib/scudo/standalone/primary32.h' l='24'>// SizeClassAllocator32 is an allocator for 32 or 64-bit address space.
//
// It maps Regions of 2^RegionSizeLog bytes aligned on a 2^RegionSizeLog bytes
// boundary, and keeps a bytemap of the mappable address space to track the size
// class they are associated with.
//
// Mapped regions are split into equally sized Blocks according to the size
// class they belong to, and the associated pointers are shuffled to prevent any
// predictable address pattern (the predictability increases with the block
// size).
//
// Regions for size class 0 are special and used to hold TransferBatches, which
// allow to transfer arrays of pointers from the global size class freelist to
// the thread specific freelist for said class, and back.
//
// Memory used by this allocator is never unmapped but can be partially
// reclaimed if the platform allows for it.</doc>
<fun r='_ZN5scudo20SizeClassAllocator3216getSizeByClassIdEm'/>
<fun r='_ZN5scudo20SizeClassAllocator3211canAllocateEm'/>
<fun r='_ZN5scudo20SizeClassAllocator3221initLinkerInitializedEi'/>
<fun r='_ZN5scudo20SizeClassAllocator324initEi'/>
<fun r='_ZN5scudo20SizeClassAllocator3213unmapTestOnlyEv'/>
<fun r='_ZN5scudo20SizeClassAllocator328popBatchEPNS_28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32IT_EEEEm'/>
<fun r='_ZN5scudo20SizeClassAllocator329pushBatchEmPNS_28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32IT_EEE13TransferBatchE'/>
<fun r='_ZN5scudo20SizeClassAllocator327disableEv'/>
<fun r='_ZN5scudo20SizeClassAllocator326enableEv'/>
<fun r='_ZN5scudo20SizeClassAllocator3217iterateOverBlocksETL0__'/>
<fun r='_ZN5scudo20SizeClassAllocator328getStatsEPNS_12ScopedStringE'/>
<fun r='_ZN5scudo20SizeClassAllocator329setOptionENS_6OptionEl'/>
<fun r='_ZN5scudo20SizeClassAllocator3211releaseToOSEv'/>
<fun r='_ZNK5scudo20SizeClassAllocator3225getRegionInfoArrayAddressEv'/>
<fun r='_ZN5scudo20SizeClassAllocator3222getRegionInfoArraySizeEv'/>
<fun r='_ZN5scudo20SizeClassAllocator3216findNearestBlockEPKcm'/>
<mbr r='scudo::SizeClassAllocator32::Options' t='scudo::AtomicOptions'/>
<smbr r='scudo::SizeClassAllocator32::NumClasses' t='const scudo::uptr'/>
<smbr r='scudo::SizeClassAllocator32::RegionSize' t='const scudo::uptr'/>
<smbr r='scudo::SizeClassAllocator32::NumRegions' t='const scudo::uptr'/>
<smbr r='scudo::SizeClassAllocator32::MaxNumBatches' t='const scudo::u32'/>
<fun r='_ZN5scudo20SizeClassAllocator3215computeRegionIdEm'/>
<fun r='_ZN5scudo20SizeClassAllocator3218allocateRegionSlowEv'/>
<fun r='_ZN5scudo20SizeClassAllocator3214allocateRegionEPNS0_13SizeClassInfoEm'/>
<fun r='_ZN5scudo20SizeClassAllocator3216getSizeClassInfoEm'/>
<fun r='_ZN5scudo20SizeClassAllocator3216populateFreeListEPNS_28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32IT_EEEEmPNS0_13SizeClassInfoE'/>
<fun r='_ZN5scudo20SizeClassAllocator328getStatsEPNS_12ScopedStringEmm'/>
<fun r='_ZN5scudo20SizeClassAllocator3216releaseToOSMaybeEPNS0_13SizeClassInfoEmb'/>
<mbr r='scudo::SizeClassAllocator32::SizeClassInfoArray' t='scudo::SizeClassAllocator32::SizeClassInfo [NumClasses]'/>
<mbr r='scudo::SizeClassAllocator32::PossibleRegions' t='scudo::SizeClassAllocator32::ByteMap'/>
<mbr r='scudo::SizeClassAllocator32::ReleaseToOsIntervalMs' t='scudo::atomic_s32'/>
<smbr r='scudo::SizeClassAllocator32::MaxStashedRegions' t='const scudo::uptr'/>
<mbr r='scudo::SizeClassAllocator32::RegionsStashMutex' t='scudo::HybridMutex'/>
<mbr r='scudo::SizeClassAllocator32::NumberOfStashedRegions' t='scudo::uptr'/>
<mbr r='scudo::SizeClassAllocator32::RegionsStash' t='scudo::uptr [MaxStashedRegions]'/>
