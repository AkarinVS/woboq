<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/Utils.h' l='215' ll='217' type='bool llvm::isKnownNeverSNaN(llvm::Register Val, const llvm::MachineRegisterInfo &amp; MRI)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/Utils.h' l='214'>/// Returns true if \p Val can be assumed to never be a signaling NaN.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='5484' u='c' c='_ZN4llvm15LegalizerHelper18lowerFMinNumMaxNumERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='5487' u='c' c='_ZN4llvm15LegalizerHelper18lowerFMinNumMaxNumERNS_12MachineInstrE'/>
