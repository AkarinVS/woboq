<dec f='llvm/lldb/include/lldb/Core/Mangled.h' l='95' type='bool lldb_private::Mangled::operator!() const'/>
<doc f='llvm/lldb/include/lldb/Core/Mangled.h' l='81'>/// Logical NOT operator.
  ///
  /// This allows code to check a Mangled object to see if it contains an
  /// empty mangled name using code such as:
  ///
  /// \code
  /// Mangled mangled(...);
  /// if (!mangled)
  /// { ...
  /// \endcode
  ///
  /// \return
  ///     Returns \b true if the object has an empty mangled and
  ///     unmangled name, \b false otherwise.</doc>
<def f='llvm/lldb/source/Core/Mangled.cpp' l='134' type='bool lldb_private::Mangled::operator!() const'/>
<doc f='llvm/lldb/source/Core/Mangled.cpp' l='128'>// Logical NOT operator. This allows code to check any Mangled objects to see
// if they are invalid using code such as:
//
//  Mangled mangled(...);
//  if (!file_spec)
//  { ...</doc>
