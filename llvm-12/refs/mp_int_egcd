<dec f='llvm/polly/lib/External/isl/imath/imath.h' l='295' type='mp_result mp_int_egcd(mp_int a, mp_int b, mp_int c, mp_int x, mp_int y)'/>
<doc f='llvm/polly/lib/External/isl/imath/imath.h' l='290'>/** Sets `c` to the greatest common divisor of `a` and `b`, and sets `x` and
    `y` to values satisfying Bezout&apos;s identity `gcd(a, b) = ax + by`.

    It returns `MP_UNDEF` if the GCD is undefined, such as for example if `a`
    and `b` are both zero. */</doc>
<use f='llvm/polly/lib/External/isl/imath/imath.c' l='1125' u='c' c='mp_int_invmod'/>
<def f='llvm/polly/lib/External/isl/imath/imath.c' l='1211' ll='1306' type='mp_result mp_int_egcd(mp_int a, mp_int b, mp_int c, mp_int x, mp_int y)'/>
<doc f='llvm/polly/lib/External/isl/imath/imath.c' l='1207'>/* This is the binary GCD algorithm again, but this time we keep track of the
   elementary matrix operations as we go, so we can get values x and y
   satisfying c = ax + by.
 */</doc>
