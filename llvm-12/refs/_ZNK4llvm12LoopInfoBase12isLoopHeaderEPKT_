<def f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='976' ll='979' type='bool llvm::LoopInfoBase::isLoopHeader(const BlockT * BB) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='975'>// True if the block is a loop header node</doc>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4208' u='c' c='_ZN4llvm20getUnderlyingObjectsEPKNS_5ValueERNS_15SmallVectorImplIS2_EEPNS_8LoopInfoEj'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachineLoopInfo.h' l='140' u='c' c='_ZNK4llvm15MachineLoopInfo12isLoopHeaderEPKNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp' l='201' u='c' c='_ZN12_GLOBAL__N_129ConstantTerminatorFoldingImpl17hasIrreducibleCFGERN4llvm13LoopBlocksDFSE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp' l='451' u='c' c='_ZN12_GLOBAL__N_129ConstantTerminatorFoldingImpl20deleteDeadLoopBlocksEv'/>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='875' u='c' c='_ZL26SplitBlockPredecessorsImplPN4llvm10BasicBlockENS_8ArrayRefIS1_EEPKcPNS_14DomTreeUpdaterEPNS_13DominatorTreeEPNS_8LoopInfoEPNS_16MemorySSAUpdaterEb'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='466' u='c' c='_ZN4llvm25LoopVectorizationLegality21canVectorizeOuterLoopEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='467' u='c' c='_ZN4llvm25LoopVectorizationLegality21canVectorizeOuterLoopEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlanPredicator.cpp' l='218' u='c' c='_ZN4llvm15VPlanPredicator18linearizeRegionRecEPNS_13VPRegionBlockE'/>
<use f='llvm/polly/lib/Support/ScopHelper.cpp' l='423' u='c' c='_ZN5polly12isErrorBlockERN4llvm10BasicBlockERKNS0_6RegionERNS0_8LoopInfoERKNS0_13DominatorTreeE'/>
