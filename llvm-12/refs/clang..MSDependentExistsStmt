<inh f='llvm/clang/include/clang/AST/Stmt.h' l='68' c='clang::Stmt'/>
<def f='llvm/clang/include/clang/AST/StmtCXX.h' l='252' ll='312'/>
<size>64</size>
<doc f='llvm/clang/include/clang/AST/StmtCXX.h' l='225'>/// Representation of a Microsoft __if_exists or __if_not_exists
/// statement with a dependent name.
///
/// The __if_exists statement can be used to include a sequence of statements
/// in the program only when a particular dependent name does not exist. For
/// example:
///
/// \code
/// template&lt;typename T&gt;
/// void call_foo(T &amp;t) {
///   __if_exists (T::foo) {
///     t.foo(); // okay: only called when T::foo exists.
///   }
/// }
/// \endcode
///
/// Similarly, the __if_not_exists statement can be used to include the
/// statements when a particular name does not exist.
///
/// Note that this statement only captures __if_exists and __if_not_exists
/// statements whose name is dependent. All non-dependent cases are handled
/// directly in the parser, so that they don&apos;t introduce a new scope. Clang
/// introduces scopes in the dependent case to keep names inside the compound
/// statement from leaking out into the surround statements, which would
/// compromise the template instantiation model. This behavior differs from
/// Visual C++ (which never introduces a scope), but is a fairly reasonable
/// approximation of the VC++ behavior.</doc>
<mbr r='clang::MSDependentExistsStmt::KeywordLoc' o='64' t='clang::SourceLocation'/>
<mbr r='clang::MSDependentExistsStmt::IsIfExists' o='96' t='bool'/>
<mbr r='clang::MSDependentExistsStmt::QualifierLoc' o='128' t='clang::NestedNameSpecifierLoc'/>
<mbr r='clang::MSDependentExistsStmt::NameInfo' o='256' t='clang::DeclarationNameInfo'/>
<mbr r='clang::MSDependentExistsStmt::SubStmt' o='448' t='clang::Stmt *'/>
<fun r='_ZN5clang21MSDependentExistsStmtC1ENS_14SourceLocationEbNS_22NestedNameSpecifierLocENS_19DeclarationNameInfoEPNS_12CompoundStmtE'/>
<fun r='_ZNK5clang21MSDependentExistsStmt13getKeywordLocEv'/>
<fun r='_ZNK5clang21MSDependentExistsStmt10isIfExistsEv'/>
<fun r='_ZNK5clang21MSDependentExistsStmt13isIfNotExistsEv'/>
<fun r='_ZNK5clang21MSDependentExistsStmt15getQualifierLocEv'/>
<fun r='_ZNK5clang21MSDependentExistsStmt11getNameInfoEv'/>
<fun r='_ZNK5clang21MSDependentExistsStmt10getSubStmtEv'/>
<fun r='_ZNK5clang21MSDependentExistsStmt11getBeginLocEv'/>
<fun r='_ZNK5clang21MSDependentExistsStmt9getEndLocEv'/>
<fun r='_ZN5clang21MSDependentExistsStmt8childrenEv'/>
<fun r='_ZNK5clang21MSDependentExistsStmt8childrenEv'/>
<fun r='_ZN5clang21MSDependentExistsStmt7classofEPKNS_4StmtE'/>
<use f='llvm/clang/include/clang/AST/RecursiveASTVisitor.h' l='2266' c='_ZN5clang19RecursiveASTVisitor29TraverseMSDependentExistsStmtEPNS_21MSDependentExistsStmtEPN4llvm15SmallVectorImplINS3_14PointerIntPairIPNS_4StmtELj1E16594936'/>
<size>64</size>
<use f='llvm/clang/lib/AST/StmtPrinter.cpp' l='360' c='_ZN12_GLOBAL__N_111StmtPrinter26VisitMSDependentExistsStmtEPN5clang21MSDependentExistsStmtE'/>
<size>64</size>
<use f='llvm/clang/lib/AST/StmtProfile.cpp' l='348' c='_ZN12_GLOBAL__N_112StmtProfiler26VisitMSDependentExistsStmtEPKN5clang21MSDependentExistsStmtE'/>
<size>64</size>
<use f='llvm/build/tools/clang/include/clang/AST/StmtDataCollectors.inc' l='159' c='_ZN12_GLOBAL__N_128CloneTypeIIStmtDataCollector26VisitMSDependentExistsStmtEPKN5clang21MSDependentExistsStmtE'/>
<size>64</size>
<use f='llvm/clang/lib/Sema/TreeTransform.h' l='8148' c='_ZN5clang13TreeTransform30TransformMSDependentExistsStmtEPNS_21MSDependentExistsStmtE'/>
<size>64</size>
<use f='llvm/clang/lib/Sema/SemaStmt.cpp' l='4334' c='_ZN5clang4Sema26BuildMSDependentExistsStmtENS_14SourceLocationEbNS_22NestedNameSpecifierLocENS_19DeclarationNameInfoEPNS_4StmtE'/>
<size>64</size>
<use f='llvm/clang/lib/Serialization/ASTReaderStmt.cpp' l='1667' c='_ZN5clang13ASTStmtReader26VisitMSDependentExistsStmtEPNS_21MSDependentExistsStmtE'/>
<use f='llvm/clang/lib/Serialization/ASTReaderStmt.cpp' l='3127' c='_ZN5clang9ASTReader18ReadStmtFromStreamERNS_13serialization10ModuleFileE'/>
<size>64</size>
<use f='llvm/clang/lib/Serialization/ASTWriterStmt.cpp' l='1550' c='_ZN5clang13ASTStmtWriter26VisitMSDependentExistsStmtEPNS_21MSDependentExistsStmtE'/>
<size>64</size>
<use f='llvm/clang/tools/libclang/CIndex.cpp' l='1961' c='_ZNK12_GLOBAL__N_124DeclarationNameInfoVisit3getEv'/>
<use f='llvm/clang/tools/libclang/CIndex.cpp' l='2001' c='_ZN12_GLOBAL__N_114EnqueueVisitor26VisitMSDependentExistsStmtEPKN5clang21MSDependentExistsStmtE'/>
<use f='llvm/clang/tools/libclang/CIndex.cpp' l='2568' c='_ZN12_GLOBAL__N_114EnqueueVisitor26VisitMSDependentExistsStmtEPKN5clang21MSDependentExistsStmtE'/>
<size>64</size>
