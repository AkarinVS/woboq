<def f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.h' l='601' ll='603' type='bool llvm::PPCInstrInfo::isZeroExtended(const llvm::MachineInstr &amp; MI, const unsigned int depth = 0) const'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.h' l='599'>/// Return true if the output of the instruction is always zero-extended,
  /// i.e. 0 to 31-th bits are all zeros</doc>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='2401' u='c' c='_ZNK4llvm12PPCInstrInfo20optimizeCompareInstrERNS_12MachineInstrENS_8RegisterES3_iiPKNS_19MachineRegisterInfoE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp' l='214' u='c' c='_ZN12_GLOBAL__N_124getKnownLeadingZeroCountEPN4llvm12MachineInstrEPKNS0_12PPCInstrInfoE'/>
