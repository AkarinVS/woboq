<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='2487' type='clang::CodeGen::Address clang::CodeGen::CodeGenFunction::CreateDefaultAlignTempAlloca(llvm::Type * Ty, const llvm::Twine &amp; Name = &quot;tmp&quot;)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='2477'>/// CreateDefaultAlignedTempAlloca - This creates an alloca with the
  /// default ABI alignment of the given LLVM type.
  ///
  /// IMPORTANT NOTE: This is *not* generally the right alignment for
  /// any given AST type that happens to have been lowered to the
  /// given IR type.  This should only ever be used for function-local,
  /// IR-driven manipulations like saving and restoring a value.  Do
  /// not hand this address off to arbitrary IRGen routines, and especially
  /// do not pass it as an argument to a function that might expect a
  /// properly ABI-aligned value.</doc>
<use f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='45' u='c' c='_ZN5clang7CodeGen15DominatingValueINS0_6RValueEE10saved_type4saveERNS0_15CodeGenFunctionES2_'/>
<use f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='54' u='c' c='_ZN5clang7CodeGen15DominatingValueINS0_6RValueEE10saved_type4saveERNS0_15CodeGenFunctionES2_'/>
<use f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='454' u='c' c='_ZN5clang7CodeGen15CodeGenFunction16PopCleanupBlocksENS0_12EHScopeStack15stable_iteratorESt16initializer_listIPPN4llvm5ValueEE'/>
<use f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='1268' u='c' c='_ZN5clang7CodeGen15CodeGenFunction24getNormalCleanupDestSlotEv'/>
<use f='llvm/clang/lib/CodeGen/CGDecl.cpp' l='1363' u='c' c='_ZN5clang7CodeGen15CodeGenFunction38EmitAndRegisterVariableArrayDimensionsEPNS0_11CGDebugInfoERKNS_7VarDeclEb'/>
<def f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='120' ll='125' type='clang::CodeGen::Address clang::CodeGen::CodeGenFunction::CreateDefaultAlignTempAlloca(llvm::Type * Ty, const llvm::Twine &amp; Name = &quot;tmp&quot;)'/>
<use f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='3036' u='c' c='_ZN5clang7CodeGen15CodeGenFunction14EmitCheckValueEPN4llvm5ValueE'/>
<doc f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='116'>/// CreateDefaultAlignTempAlloca - This creates an alloca with the
/// default alignment of the corresponding LLVM type, which is *not*
/// guaranteed to be related in any way to the expected alignment of
/// an AST type that might have been lowered to Ty.</doc>
<use f='llvm/clang/lib/CodeGen/CGExprScalar.cpp' l='2052' u='c' c='_ZN12_GLOBAL__N_117ScalarExprEmitter13VisitCastExprEPN5clang8CastExprE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='2093' u='c' c='_ZN5clang7CodeGen15CGOpenMPRuntime16emitParallelCallERNS0_15CodeGenFunctionENS_14SourceLocationEPN4llvm8FunctionENS5_8ArrayRefIPNS5_5ValueEEEPKNS_4ExprE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='1355' u='c' c='_ZN5clang7CodeGen18CGOpenMPRuntimeGPU14emitWorkerLoopERNS0_15CodeGenFunctionERNS1_19WorkerFunctionStateE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='1357' u='c' c='_ZN5clang7CodeGen18CGOpenMPRuntimeGPU14emitWorkerLoopERNS0_15CodeGenFunctionERNS1_19WorkerFunctionStateE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='2065' u='c' c='_ZN5clang7CodeGen18CGOpenMPRuntimeGPU13emitTeamsCallERNS0_15CodeGenFunctionERKNS_22OMPExecutableDirectiveENS_14SourceLocationEPN4llvm8FunctionENS8_8Ar288086'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='2103' u='c' c='_ZN5clang7CodeGen18CGOpenMPRuntimeGPU23emitNonSPMDParallelCallERNS0_15CodeGenFunctionENS_14SourceLocationEPN4llvm5ValueENS5_8ArrayRefIS7_EEPKNS_4ExprE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='2113' u='c' c='_ZN5clang7CodeGen18CGOpenMPRuntimeGPU23emitNonSPMDParallelCallERNS0_15CodeGenFunctionENS_14SourceLocationEPN4llvm5ValueENS5_8ArrayRefIS7_EEPKNS_4ExprE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='2163' u='c' c='_ZN5clang7CodeGen18CGOpenMPRuntimeGPU23emitNonSPMDParallelCallERNS0_15CodeGenFunctionENS_14SourceLocationEPN4llvm5ValueENS5_8ArrayRefIS7_EEPKNS_4ExprE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='2278' u='c' c='_ZN5clang7CodeGen18CGOpenMPRuntimeGPU20emitSPMDParallelCallERNS0_15CodeGenFunctionENS_14SourceLocationEPN4llvm8FunctionENS5_8ArrayRefIPNS5_5ValueEEEPKNS_4ExprE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='2288' u='c' c='_ZN5clang7CodeGen18CGOpenMPRuntimeGPU20emitSPMDParallelCallERNS0_15CodeGenFunctionENS_14SourceLocationEPN4llvm8FunctionENS5_8ArrayRefIPNS5_5ValueEEEPKNS_4ExprE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='4224' u='c' c='_ZN5clang7CodeGen18CGOpenMPRuntimeGPU32createParallelDataSharingWrapperEPN4llvm8FunctionERKNS_22OMPExecutableDirectiveE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='4239' u='c' c='_ZN5clang7CodeGen18CGOpenMPRuntimeGPU32createParallelDataSharingWrapperEPN4llvm8FunctionERKNS_22OMPExecutableDirectiveE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenFunction.cpp' l='966' u='c' c='_ZN5clang7CodeGen15CodeGenFunction13StartFunctionENS_10GlobalDeclENS_8QualTypeEPN4llvm8FunctionERKNS0_14CGFunctionInfoERKNS0_15FunctionArgListENS_14SourceLocationESD_'/>
<use f='llvm/clang/lib/CodeGen/CodeGenFunction.cpp' l='1052' u='c' c='_ZN5clang7CodeGen15CodeGenFunction13StartFunctionENS_10GlobalDeclENS_8QualTypeEPN4llvm8FunctionERKNS0_14CGFunctionInfoERKNS0_15FunctionArgListENS_14SourceLocationESD_'/>
