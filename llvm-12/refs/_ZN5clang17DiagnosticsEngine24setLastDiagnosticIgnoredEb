<def f='llvm/clang/include/clang/Basic/Diagnostic.h' l='716' ll='720' type='void clang::DiagnosticsEngine::setLastDiagnosticIgnored(bool Ignored)'/>
<doc f='llvm/clang/include/clang/Basic/Diagnostic.h' l='710'>/// Pretend that the last diagnostic issued was ignored, so any
  /// subsequent notes will be suppressed, or restore a prior ignoring
  /// state after ignoring some diagnostics and their notes, possibly in
  /// the middle of another diagnostic.
  ///
  /// This can be used by clients who suppress diagnostics themselves.</doc>
<use f='llvm/clang/include/clang/Sema/Sema.h' l='9012' u='c' c='_ZN5clang4Sema10SFINAETrapD1Ev'/>
<use f='llvm/clang/lib/ARCMigrate/ARCMT.cpp' l='143' u='c' c='_ZN12_GLOBAL__N_125CaptureDiagnosticConsumer16HandleDiagnosticEN5clang17DiagnosticsEngine5LevelERKNS1_10DiagnosticE'/>
<use f='llvm/clang/lib/Sema/Sema.cpp' l='1396' u='c' c='_ZN5clang4Sema21EmitCurrentDiagnosticEj'/>
<use f='llvm/clang/lib/Sema/Sema.cpp' l='1421' u='c' c='_ZN5clang4Sema21EmitCurrentDiagnosticEj'/>
<use f='llvm/clang/lib/Sema/Sema.cpp' l='1430' u='c' c='_ZN5clang4Sema21EmitCurrentDiagnosticEj'/>
<use f='llvm/clang/lib/Sema/Sema.cpp' l='1444' u='c' c='_ZN5clang4Sema21EmitCurrentDiagnosticEj'/>
