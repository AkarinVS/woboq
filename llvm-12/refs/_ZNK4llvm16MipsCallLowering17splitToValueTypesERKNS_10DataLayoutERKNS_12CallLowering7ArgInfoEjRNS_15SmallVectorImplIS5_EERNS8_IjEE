<dec f='llvm/llvm/lib/Target/Mips/MipsCallLowering.h' l='88' type='void llvm::MipsCallLowering::splitToValueTypes(const llvm::DataLayout &amp; DL, const llvm::CallLowering::ArgInfo &amp; OrigArg, unsigned int OriginalIndex, SmallVectorImpl&lt;llvm::CallLowering::ArgInfo&gt; &amp; SplitArgs, SmallVectorImpl&lt;unsigned int&gt; &amp; SplitArgsOrigIndices) const'/>
<use f='llvm/llvm/lib/Target/Mips/MipsCallLowering.cpp' l='396' u='c' c='_ZNK4llvm16MipsCallLowering11lowerReturnERNS_16MachineIRBuilderEPKNS_5ValueENS_8ArrayRefINS_8RegisterEEERNS_20FunctionLoweringInfoE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsCallLowering.cpp' l='613' u='c' c='_ZNK4llvm16MipsCallLowering9lowerCallERNS_16MachineIRBuilderERNS_12CallLowering16CallLoweringInfoE'/>
<def f='llvm/llvm/lib/Target/Mips/MipsCallLowering.cpp' l='667' ll='685' type='void llvm::MipsCallLowering::splitToValueTypes(const llvm::DataLayout &amp; DL, const llvm::CallLowering::ArgInfo &amp; OrigArg, unsigned int OriginalIndex, SmallVectorImpl&lt;llvm::CallLowering::ArgInfo&gt; &amp; SplitArgs, SmallVectorImpl&lt;unsigned int&gt; &amp; SplitArgsOrigIndices) const'/>
<doc f='llvm/llvm/lib/Target/Mips/MipsCallLowering.h' l='86'>/// Split structures and arrays, save original argument indices since
  /// Mips calling convention needs info about original argument type.</doc>
