<def f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h' l='395' ll='402' type='llvm::Instruction * llvm::InstCombiner::InsertNewInstBefore(llvm::Instruction * New, llvm::Instruction &amp; Old)'/>
<use f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h' l='407' u='c' c='_ZN4llvm12InstCombiner17InsertNewInstWithEPNS_11InstructionERS1_'/>
<doc f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h' l='391'>/// Inserts an instruction \p New before instruction \p Old
  ///
  /// Also adds the new instruction to the worklist and returns \p New so that
  /// it is suitable for use as the return from the visitation patterns.</doc>
