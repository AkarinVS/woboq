<dec f='llvm/polly/lib/External/ppcg/ppcg.h' l='125' type='void compute_dependences(struct ppcg_scop * scop)'/>
<def f='llvm/polly/lib/External/ppcg/ppcg.c' l='717' ll='749' type='void compute_dependences(struct ppcg_scop * scop)'/>
<use f='llvm/polly/lib/External/ppcg/ppcg.c' l='920' u='c' c='ppcg_scop_from_pet_scop'/>
<doc f='llvm/polly/lib/External/ppcg/ppcg.c' l='706'>/* Compute the dependences of the program represented by &quot;scop&quot;.
 * Store the computed potential flow dependences
 * in scop-&gt;dep_flow and the reads with potentially no corresponding writes in
 * scop-&gt;live_in.
 * Store the potential live out accesses in scop-&gt;live_out.
 * Store the potential false (anti and output) dependences in scop-&gt;dep_false.
 *
 * If live range reordering is allowed, then we compute a separate
 * set of order dependences and a set of external false dependences
 * in compute_live_range_reordering_dependences.
 */</doc>
