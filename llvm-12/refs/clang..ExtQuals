<use f='llvm/clang/include/clang/AST/Type.h' l='95'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='96' c='_ZN4llvm21PointerLikeTypeTraitsIPN5clang8ExtQualsEE16getAsVoidPointerES3_'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='98' c='_ZN4llvm21PointerLikeTypeTraitsIPN5clang8ExtQualsEE18getFromVoidPointerEPv'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='99' c='_ZN4llvm21PointerLikeTypeTraitsIPN5clang8ExtQualsEE18getFromVoidPointerEPv'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='665'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='668' c='_ZNK5clang8QualType17getExtQualsUnsafeEv'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='669' c='_ZNK5clang8QualType17getExtQualsUnsafeEv'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='686' c='_ZN5clang8QualTypeC1EPKNS_8ExtQualsEj'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='774' c='_ZNK5clang8QualType25hasLocalNonFastQualifiersEv'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='1338'/>
<inh f='llvm/clang/include/clang/AST/Type.h' l='1337' c='clang::ExtQualsTypeCommonBase'/>
<inh f='llvm/llvm/include/llvm/ADT/FoldingSet.h' l='133' c='llvm::FoldingSetBase::Node'/>
<def f='llvm/clang/include/clang/AST/Type.h' l='1366' ll='1424'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='1384' c='_ZN5clang8ExtQuals5this_Ev'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='6364' c='_ZN5clang18QualifierCollector5stripENS_8QualTypeE'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='6425' c='_ZNK5clang8QualType5splitEv'/>
<use f='llvm/clang/include/clang/AST/ASTContext.h' l='191'/>
<size>32</size>
<doc f='llvm/clang/include/clang/AST/Type.h' l='1356'>/// We can encode up to four bits in the low bits of a
/// type pointer, but there are many more type qualifiers that we want
/// to be able to apply to an arbitrary type.  Therefore we have this
/// struct, intended to be heap-allocated and used by QualType to
/// store qualifiers.
///
/// The current design tags the &apos;const&apos;, &apos;restrict&apos;, and &apos;volatile&apos; qualifiers
/// in three low bits on the QualType pointer; a fourth bit records whether
/// the pointer is an ExtQuals node. The extended qualifiers (address spaces,
/// Objective-C GC attributes) are much more rare.</doc>
<mbr r='clang::ExtQuals::Quals' o='192' t='clang::Qualifiers'/>
<fun r='_ZN5clang8ExtQuals5this_Ev'/>
<fun r='_ZN5clang8ExtQualsC1EPKNS_4TypeENS_8QualTypeENS_10QualifiersE'/>
<fun r='_ZNK5clang8ExtQuals13getQualifiersEv'/>
<fun r='_ZNK5clang8ExtQuals13hasObjCGCAttrEv'/>
<fun r='_ZNK5clang8ExtQuals13getObjCGCAttrEv'/>
<fun r='_ZNK5clang8ExtQuals15hasObjCLifetimeEv'/>
<fun r='_ZNK5clang8ExtQuals15getObjCLifetimeEv'/>
<fun r='_ZNK5clang8ExtQuals15hasAddressSpaceEv'/>
<fun r='_ZNK5clang8ExtQuals15getAddressSpaceEv'/>
<fun r='_ZNK5clang8ExtQuals11getBaseTypeEv'/>
<fun r='_ZNK5clang8ExtQuals7ProfileERN4llvm16FoldingSetNodeIDE'/>
<fun r='_ZN5clang8ExtQuals7ProfileERN4llvm16FoldingSetNodeIDEPKNS_4TypeENS_10QualifiersE'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='2885' c='_ZNK5clang10ASTContext14getExtQualTypeEPKNS_4TypeENS_10QualifiersE'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='2901' c='_ZNK5clang10ASTContext14getExtQualTypeEPKNS_4TypeENS_10QualifiersE'/>
<size>32</size>
