<dec f='llvm/llvm/include/llvm/Analysis/MemoryBuiltins.h' l='126' type='const llvm::CallInst * llvm::extractMallocCall(const llvm::Value * I, function_ref&lt;const llvm::TargetLibraryInfo &amp;(llvm::Function &amp;)&gt; GetTLI)'/>
<use f='llvm/llvm/include/llvm/Analysis/MemoryBuiltins.h' l='131' u='c' c='_ZN4llvm17extractMallocCallEPNS_5ValueENS_12function_refIFRKNS_17TargetLibraryInfoERNS_8FunctionEEEE'/>
<doc f='llvm/llvm/include/llvm/Analysis/MemoryBuiltins.h' l='118'>//===----------------------------------------------------------------------===//
//  malloc Call Utility Functions.
//

/// extractMallocCall - Returns the corresponding CallInst if the instruction
/// is a malloc call.  Since CallInst::CreateMalloc() only creates calls, we
/// ignore InvokeInst here.</doc>
<def f='llvm/llvm/lib/Analysis/MemoryBuiltins.cpp' l='340' ll='344' type='const llvm::CallInst * llvm::extractMallocCall(const llvm::Value * I, function_ref&lt;const llvm::TargetLibraryInfo &amp;(llvm::Function &amp;)&gt; GetTLI)'/>
<doc f='llvm/llvm/lib/Analysis/MemoryBuiltins.cpp' l='337'>/// extractMallocCall - Returns the corresponding CallInst if the instruction
/// is a malloc call.  Since CallInst::CreateMalloc() only creates calls, we
/// ignore InvokeInst here.</doc>
