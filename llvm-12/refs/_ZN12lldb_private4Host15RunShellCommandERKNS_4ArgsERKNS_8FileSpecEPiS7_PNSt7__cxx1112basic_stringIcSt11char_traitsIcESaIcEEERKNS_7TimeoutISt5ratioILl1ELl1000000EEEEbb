<dec f='llvm/lldb/include/lldb/Host/Host.h' l='236' type='static lldb_private::Status lldb_private::Host::RunShellCommand(const lldb_private::Args &amp; args, const lldb_private::FileSpec &amp; working_dir, int * status_ptr, int * signo_ptr, std::string * command_output, const Timeout&lt;std::micro&gt; &amp; timeout, bool run_in_shell = true, bool hide_stderr = false)'/>
<doc f='llvm/lldb/include/lldb/Host/Host.h' l='229'>/// Run a shell command.
  /// \arg working_dir Pass empty FileSpec to use the current working directory
  /// \arg status_ptr  Pass NULL if you don&apos;t want the process exit status
  /// \arg signo_ptr   Pass NULL if you don&apos;t want the signal that caused the
  ///                  process to exit
  /// \arg command_output  Pass NULL if you don&apos;t want the command output
  /// \arg hide_stderr if this is false, redirect stderr to stdout</doc>
<def f='llvm/lldb/source/Host/common/Host.cpp' l='491' ll='499' type='static lldb_private::Status lldb_private::Host::RunShellCommand(const lldb_private::Args &amp; args, const lldb_private::FileSpec &amp; working_dir, int * status_ptr, int * signo_ptr, std::string * command_output_ptr, const Timeout&lt;std::micro&gt; &amp; timeout, bool run_in_shell = true, bool hide_stderr = false)'/>
