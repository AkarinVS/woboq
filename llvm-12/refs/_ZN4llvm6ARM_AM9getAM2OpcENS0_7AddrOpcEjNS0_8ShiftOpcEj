<def f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h' l='413' ll='418' type='unsigned int llvm::ARM_AM::getAM2Opc(llvm::ARM_AM::AddrOpc Opc, unsigned int Imm12, llvm::ARM_AM::ShiftOpc SO, unsigned int IdxMode = 0)'/>
<doc f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h' l='395'>//===--------------------------------------------------------------------===//
  // Addressing Mode #2
  //===--------------------------------------------------------------------===//
  //
  // This is used for most simple load/store instructions.
  //
  // addrmode2 := reg +/- reg shop imm
  // addrmode2 := reg +/- imm12
  //
  // The first operand is always a Reg.  The second operand is a reg if in
  // reg/reg form, otherwise it&apos;s reg#0.  The third field encodes the operation
  // in bit 12, the immediate in bits 0-11, and the shift op in 13-15. The
  // fourth operand 16-17 encodes the index mode.
  //
  // If this addressing mode is a frame index (before prolog/epilog insertion
  // and code rewriting), this operand will have the form:  FI#, reg0, &lt;offs&gt;
  // with no shift amount for the frame offset.
  //</doc>
<use f='llvm/llvm/lib/Target/ARM/ARMFrameLowering.cpp' l='1152' u='c' c='_ZNK4llvm16ARMFrameLowering11emitPopInstERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEENS_15MutableArrayRefINS_15Cal6389274'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp' l='716' u='c' c='_ZN12_GLOBAL__N_115ARMDAGToDAGISel15SelectLdStSORegEN4llvm7SDValueERS2_S3_S3_'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp' l='802' u='c' c='_ZN12_GLOBAL__N_115ARMDAGToDAGISel15SelectLdStSORegEN4llvm7SDValueERS2_S3_S3_'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp' l='838' u='c' c='_ZN12_GLOBAL__N_115ARMDAGToDAGISel24SelectAddrMode2OffsetRegEPN4llvm6SDNodeENS1_7SDValueERS4_S5_'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp' l='874' u='c' c='_ZN12_GLOBAL__N_115ARMDAGToDAGISel24SelectAddrMode2OffsetImmEPN4llvm6SDNodeENS1_7SDValueERS4_S5_'/>
<use f='llvm/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp' l='1531' u='c' c='_ZN12_GLOBAL__N_115ARMLoadStoreOpt24MergeBaseUpdateLoadStoreEPN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp' l='1561' u='c' c='_ZN12_GLOBAL__N_115ARMLoadStoreOpt24MergeBaseUpdateLoadStoreEPN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp' l='2881' u='c' c='_ZNK12_GLOBAL__N_110ARMOperand20addAddrMode2OperandsERN4llvm6MCInstEj'/>
<use f='llvm/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp' l='2885' u='c' c='_ZNK12_GLOBAL__N_110ARMOperand20addAddrMode2OperandsERN4llvm6MCInstEj'/>
<use f='llvm/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp' l='2902' u='c' c='_ZNK12_GLOBAL__N_110ARMOperand23addAM2OffsetImmOperandsERN4llvm6MCInstEj'/>
<use f='llvm/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp' l='3107' u='c' c='_ZNK12_GLOBAL__N_110ARMOperand23addMemRegOffsetOperandsERN4llvm6MCInstEj'/>
<use f='llvm/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp' l='3190' u='c' c='_ZNK12_GLOBAL__N_110ARMOperand28addPostIdxRegShiftedOperandsERN4llvm6MCInstEj'/>
<use f='llvm/llvm/lib/Target/ARM/Disassembler/ARMDisassembler.cpp' l='1934' u='c' c='_ZL29DecodeAddrMode2IdxInstructionRN4llvm6MCInstEjmPKv'/>
<use f='llvm/llvm/lib/Target/ARM/Disassembler/ARMDisassembler.cpp' l='1939' u='c' c='_ZL29DecodeAddrMode2IdxInstructionRN4llvm6MCInstEjmPKv'/>
<use f='llvm/llvm/lib/Target/ARM/Disassembler/ARMDisassembler.cpp' l='1984' u='c' c='_ZL21DecodeSORegMemOperandRN4llvm6MCInstEjmPKv'/>
<use f='llvm/llvm/lib/Target/ARM/Disassembler/ARMDisassembler.cpp' l='1986' u='c' c='_ZL21DecodeSORegMemOperandRN4llvm6MCInstEjmPKv'/>
