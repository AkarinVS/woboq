<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='4263' type='void clang::CodeGen::CodeGenFunction::EmitAggregateStore(llvm::Value * Val, clang::CodeGen::Address Dest, bool DestIsVolatile)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='4261'>/// Build all the stores needed to initialize an aggregate at Dest with the
  /// value Val.</doc>
<def f='llvm/clang/lib/CodeGen/CGCall.cpp' l='1297' ll='1309' type='void clang::CodeGen::CodeGenFunction::EmitAggregateStore(llvm::Value * Val, clang::CodeGen::Address Dest, bool DestIsVolatile)'/>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='1361' u='c' c='_ZL18CreateCoercedStorePN4llvm5ValueEN5clang7CodeGen7AddressEbRNS3_15CodeGenFunctionE'/>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='5279' u='c' c='_ZN5clang7CodeGen15CodeGenFunction8EmitCallERKNS0_14CGFunctionInfoERKNS0_8CGCalleeENS0_15ReturnValueSlotERKNS0_11CallArgListEPPN4llvm8CallBaseENS_14SourceLocationE'/>
<doc f='llvm/clang/lib/CodeGen/CGCall.cpp' l='1293'>// Function to store a first-class aggregate into memory.  We prefer to
// store the elements rather than the aggregate to be more friendly to
// fast-isel.
// FIXME: Do we need to recurse here?</doc>
<use f='llvm/clang/lib/CodeGen/CGExprAgg.cpp' l='131' u='c' c='_ZN12_GLOBAL__N_114AggExprEmitter17VisitConstantExprEPN5clang12ConstantExprE'/>
