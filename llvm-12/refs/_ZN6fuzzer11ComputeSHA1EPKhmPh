<dec f='llvm/compiler-rt/lib/fuzzer/FuzzerSHA1.h' l='24' type='void fuzzer::ComputeSHA1(const uint8_t * Data, size_t Len, uint8_t * Out)'/>
<doc f='llvm/compiler-rt/lib/fuzzer/FuzzerSHA1.h' l='23'>// Computes SHA1 hash of &apos;Len&apos; bytes in &apos;Data&apos;, writes kSHA1NumBytes to &apos;Out&apos;.</doc>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerCorpus.h' l='230' u='c' c='_ZN6fuzzer11InputCorpus11AddToCorpusERKNSt8__Fuzzer6vectorIhNS_16fuzzer_allocatorIhEEEEmbbbNS1_6chrono8durationIxNS1_5ratioILl1ELl1000000EEEEERKNS2_Ij12855263'/>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerCorpus.h' l='288' u='c' c='_ZN6fuzzer11InputCorpus7ReplaceEPNS_9InputInfoERKNSt8__Fuzzer6vectorIhNS_16fuzzer_allocatorIhEEEE'/>
<def f='llvm/compiler-rt/lib/fuzzer/FuzzerSHA1.cpp' l='203' ll='208' type='void fuzzer::ComputeSHA1(const uint8_t * Data, size_t Len, uint8_t * Out)'/>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerSHA1.cpp' l='219' u='c' c='_ZN6fuzzer4HashERKNSt8__Fuzzer6vectorIhNS_16fuzzer_allocatorIhEEEE'/>
<doc f='llvm/compiler-rt/lib/fuzzer/FuzzerSHA1.cpp' l='202'>// The rest is added for LibFuzzer</doc>
