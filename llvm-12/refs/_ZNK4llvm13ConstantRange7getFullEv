<def f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='56' ll='58' type='llvm::ConstantRange llvm::ConstantRange::getFull() const'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='55'>/// Create full constant range with same bitwidth.</doc>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='594' u='c' c='_ZNK4llvm13ConstantRange9unionWithERKS0_NS0_18PreferredRangeTypeE'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='608' u='c' c='_ZNK4llvm13ConstantRange9unionWithERKS0_NS0_18PreferredRangeTypeE'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='634' u='c' c='_ZNK4llvm13ConstantRange9unionWithERKS0_NS0_18PreferredRangeTypeE'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='833' u='c' c='_ZNK4llvm13ConstantRange8binaryOpENS_11Instruction9BinaryOpsERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='907' u='c' c='_ZNK4llvm13ConstantRange3addERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='912' u='c' c='_ZNK4llvm13ConstantRange3addERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='918' u='c' c='_ZNK4llvm13ConstantRange3addERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='930' u='c' c='_ZNK4llvm13ConstantRange13addWithNoWrapERKS0_jNS0_18PreferredRangeTypeE'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='954' u='c' c='_ZNK4llvm13ConstantRange3subERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='959' u='c' c='_ZNK4llvm13ConstantRange3subERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='965' u='c' c='_ZNK4llvm13ConstantRange3subERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='977' u='c' c='_ZNK4llvm13ConstantRange13subWithNoWrapERKS0_jNS0_18PreferredRangeTypeE'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1263' u='c' c='_ZNK4llvm13ConstantRange9binaryNotEv'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1313' u='c' c='_ZNK4llvm13ConstantRange9binaryXorERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1330' u='c' c='_ZNK4llvm13ConstantRange3shlERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1497' u='c' c='_ZNK4llvm13ConstantRange7inverseEv'/>
