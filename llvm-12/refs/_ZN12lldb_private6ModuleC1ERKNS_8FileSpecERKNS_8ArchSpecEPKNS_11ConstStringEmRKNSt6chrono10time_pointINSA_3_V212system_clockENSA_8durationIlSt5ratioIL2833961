<dec f='llvm/lldb/include/lldb/Core/Module.h' l='112' type='void lldb_private::Module::Module(const lldb_private::FileSpec &amp; file_spec, const lldb_private::ArchSpec &amp; arch, const lldb_private::ConstString * object_name = nullptr, lldb::offset_t object_offset = 0, const llvm::sys::TimePoint&lt;&gt; &amp; object_mod_time = llvm::sys::TimePoint&lt;&gt;())'/>
<doc f='llvm/lldb/include/lldb/Core/Module.h' l='90'>/// Construct with file specification and architecture.
  ///
  /// Clients that wish to share modules with other targets should use
  /// ModuleList::GetSharedModule().
  ///
  /// \param[in] file_spec
  ///     The file specification for the on disk representation of
  ///     this executable image.
  ///
  /// \param[in] arch
  ///     The architecture to set as the current architecture in
  ///     this module.
  ///
  /// \param[in] object_name
  ///     The name of an object in a module used to extract a module
  ///     within a module (.a files and modules that contain multiple
  ///     architectures).
  ///
  /// \param[in] object_offset
  ///     The offset within an existing module used to extract a
  ///     module within a module (.a files and modules that contain
  ///     multiple architectures).</doc>
<def f='llvm/lldb/source/Core/Module.cpp' l='233' ll='258' type='void lldb_private::Module::Module(const lldb_private::FileSpec &amp; file_spec, const lldb_private::ArchSpec &amp; arch, const lldb_private::ConstString * object_name = nullptr, lldb::offset_t object_offset = 0, const llvm::sys::TimePoint&lt;&gt; &amp; object_mod_time = llvm::sys::TimePoint&lt;&gt;())'/>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/SymbolFileDWARFDebugMap.cpp' l='171' u='c' c='_ZN14DebugMapModuleC1ERKSt10shared_ptrIN12lldb_private6ModuleEEjRKNS1_8FileSpecERKNS1_8ArchSpecEPKNS1_11ConstStringElNSt6chrono10time_pointINSF_3_V2123325806'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='2344' u='c' c='_ZN12lldb_private7Process20ReadModuleFromMemoryERKNS_8FileSpecEmm'/>
