<dec f='llvm/llvm/include/llvm/Transforms/Utils/Cloning.h' l='311' type='void llvm::cloneAndAdaptNoAliasScopes(ArrayRef&lt;llvm::MDNode *&gt; NoAliasDeclScopes, llvm::Instruction * IStart, llvm::Instruction * IEnd, llvm::LLVMContext &amp; Context, llvm::StringRef Ext)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Cloning.h' l='308'>/// Clone the specified noalias decl scopes. Then adapt all instructions in the
/// [IStart, IEnd] (IEnd included !) range to the cloned versions. &apos;Ext&apos; will be
/// added to the duplicate scope names.</doc>
<def f='llvm/llvm/lib/Transforms/Utils/CloneFunction.cpp' l='965' ll='983' type='void llvm::cloneAndAdaptNoAliasScopes(ArrayRef&lt;llvm::MDNode *&gt; NoAliasDeclScopes, llvm::Instruction * IStart, llvm::Instruction * IEnd, llvm::LLVMContext &amp; Context, llvm::StringRef Ext)'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp' l='526' u='c' c='_ZN12_GLOBAL__N_110LoopRotate10rotateLoopEPN4llvm4LoopEb'/>
