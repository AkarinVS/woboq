<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='841' type='void llvm::ScalarEvolution::forgetLoopDispositions(const llvm::Loop * L)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='836'>/// Called when the client has changed the disposition of values in
  /// this loop.
  ///
  /// We don&apos;t have a way to invalidate per-loop dispositions. Clear and
  /// recompute is simpler.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7178' ll='7180' type='void llvm::ScalarEvolution::forgetLoopDispositions(const llvm::Loop * L)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='484' u='c' c='_ZN12_GLOBAL__N_123LoopInvariantCodeMotion9runOnLoopEPN4llvm4LoopEPNS1_9AAResultsEPNS1_8LoopInfoEPNS1_13DominatorTreeEPNS1_18BlockFrequencyInfoEPNS1_110924068'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopDeletion.cpp' l='90' u='c' c='_ZL10isLoopDeadPN4llvm4LoopERNS_15ScalarEvolutionERNS_15SmallVectorImplIPNS_10BasicBlockEEES6_RbS6_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopSink.cpp' l='341' u='c' c='_ZL29sinkLoopInvariantInstructionsRN4llvm4LoopERNS_9AAResultsERNS_8LoopInfoERNS_13DominatorTreeERNS_18BlockFrequencyInfoEPNS_15ScalarEvolutionEPNS_15A14422985'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopSimplify.cpp' l='675' u='c' c='_ZL15simplifyOneLoopPN4llvm4LoopERNS_15SmallVectorImplIS1_EEPNS_13DominatorTreeEPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_15AssumptionCacheEPNS_16MemorySSAUpdaterEb'/>
