<def f='llvm/llvm/include/llvm/MCA/Stages/MicroOpQueueStage.h' l='54' ll='59' type='unsigned int llvm::mca::MicroOpQueueStage::getNormalizedOpcodes(const llvm::mca::InstRef &amp; IR) const'/>
<use f='llvm/llvm/include/llvm/MCA/Stages/MicroOpQueueStage.h' l='70' u='c' c='_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE'/>
<doc f='llvm/llvm/include/llvm/MCA/Stages/MicroOpQueueStage.h' l='48'>// By default, an instruction consumes a number of buffer entries equal to its
  // number of micro opcodes (see field `InstrDesc::NumMicroOpcodes`).  The
  // number of entries consumed by an instruction is normalized to the
  // minimum value between NumMicroOpcodes and the buffer size. This is to avoid
  // problems with (microcoded) instructions that generate a number of micro
  // opcodes than doesn&apos;t fit in the buffer.</doc>
<use f='llvm/llvm/lib/MCA/Stages/MicroOpQueueStage.cpp' l='28' u='c' c='_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv'/>
<use f='llvm/llvm/lib/MCA/Stages/MicroOpQueueStage.cpp' l='48' u='c' c='_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE'/>
