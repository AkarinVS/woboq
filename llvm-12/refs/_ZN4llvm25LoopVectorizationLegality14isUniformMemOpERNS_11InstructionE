<def f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='310' ll='319' type='bool llvm::LoopVectorizationLegality::isUniformMemOp(llvm::Instruction &amp; I)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='308'>/// A uniform memory op is a load or store which accesses the same memory
  /// location on all lanes.</doc>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5320' u='c' c='_ZN4llvm26LoopVectorizationCostModel19collectLoopUniformsENS_12ElementCountE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5355' u='c' c='_ZN4llvm26LoopVectorizationCostModel19collectLoopUniformsENS_12ElementCountE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7036' u='c' c='_ZN4llvm26LoopVectorizationCostModel28setCostBasedWideningDecisionENS_12ElementCountE'/>
