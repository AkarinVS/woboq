<dec f='llvm/llvm/include/llvm/ExecutionEngine/Orc/IndirectionUtils.h' l='531' type='void llvm::orc::moveFunctionBody(llvm::Function &amp; OrigF, llvm::ValueToValueMapTy &amp; VMap, llvm::ValueMaterializer * Materializer = nullptr, llvm::Function * NewF = nullptr)'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/Orc/IndirectionUtils.h' l='523'>/// Move the body of function &apos;F&apos; to a cloned function declaration in a
///        different module (See related cloneFunctionDecl).
///
///   If the target function declaration is not supplied via the NewF parameter
/// then it will be looked up via the VMap.
///
///   This will delete the body of function &apos;F&apos; from its original parent module,
/// but leave its declaration.</doc>
<def f='llvm/llvm/lib/ExecutionEngine/Orc/IndirectionUtils.cpp' l='305' ll='322' type='void llvm::orc::moveFunctionBody(llvm::Function &amp; OrigF, llvm::ValueToValueMapTy &amp; VMap, llvm::ValueMaterializer * Materializer = nullptr, llvm::Function * NewF = nullptr)'/>
