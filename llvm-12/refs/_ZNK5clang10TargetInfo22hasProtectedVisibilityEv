<def f='llvm/clang/include/clang/Basic/TargetInfo.h' l='1099' type='bool clang::TargetInfo::hasProtectedVisibility() const'/>
<doc f='llvm/clang/include/clang/Basic/TargetInfo.h' l='1089'>/// Does this target support &quot;protected&quot; visibility?
  ///
  /// Any target which dynamic libraries will naturally support
  /// something like &quot;default&quot; (meaning that the symbol is visible
  /// outside this shared object) and &quot;hidden&quot; (meaning that it isn&apos;t)
  /// visibilities, but &quot;protected&quot; is really an ELF-specific concept
  /// with weird semantics designed around the convenience of dynamic
  /// linker implementations.  Which is not to suggest that there&apos;s
  /// consistent target-independent semantics for &quot;default&quot; visibility
  /// either; the entire thing is pretty badly mangled.</doc>
<ovr f='llvm/clang/lib/Basic/Targets/Le64.h' l='58' c='_ZNK5clang7targets14Le64TargetInfo22hasProtectedVisibilityEv'/>
<ovr f='llvm/clang/lib/Basic/Targets/WebAssembly.h' l='140' c='_ZNK5clang7targets21WebAssemblyTargetInfo22hasProtectedVisibilityEv'/>
<use f='llvm/clang/lib/Sema/SemaDeclAttr.cpp' l='2680' u='c' c='_ZL20handleVisibilityAttrRN5clang4SemaEPNS_4DeclERKNS_10ParsedAttrEb'/>
