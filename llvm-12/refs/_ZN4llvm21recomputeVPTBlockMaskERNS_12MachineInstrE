<dec f='llvm/llvm/lib/Target/ARM/Thumb2InstrInfo.h' l='95' type='void llvm::recomputeVPTBlockMask(llvm::MachineInstr &amp; Instr)'/>
<doc f='llvm/llvm/lib/Target/ARM/Thumb2InstrInfo.h' l='90'>// Recomputes the Block Mask of Instr, a VPT or VPST instruction.
// This rebuilds the block mask of the instruction depending on the predicates
// of the instructions following it. This should only be used after the
// MVEVPTBlockInsertion pass has run, and should be used whenever a predicated
// instruction is added to/removed from the block.</doc>
<use f='llvm/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp' l='1658' u='c' c='_ZN12_GLOBAL__N_119ARMLowOverheadLoops6ExpandERNS_15LowOverheadLoopE'/>
<def f='llvm/llvm/lib/Target/ARM/Thumb2InstrInfo.cpp' l='788' ll='816' type='void llvm::recomputeVPTBlockMask(llvm::MachineInstr &amp; Instr)'/>
