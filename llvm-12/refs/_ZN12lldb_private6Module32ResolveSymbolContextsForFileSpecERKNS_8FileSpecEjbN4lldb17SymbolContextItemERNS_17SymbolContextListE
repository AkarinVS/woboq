<dec f='llvm/lldb/include/lldb/Core/Module.h' l='775' type='uint32_t lldb_private::Module::ResolveSymbolContextsForFileSpec(const lldb_private::FileSpec &amp; file_spec, uint32_t line, bool check_inlines, lldb::SymbolContextItem resolve_scope, lldb_private::SymbolContextList &amp; sc_list)'/>
<doc f='llvm/lldb/include/lldb/Core/Module.h' l='735'>/// Resolve items in the symbol context for a given file and line.
  ///
  /// Tries to resolve \a file_spec and \a line to a list of matching symbol
  /// contexts.
  ///
  /// The line table entries contains addresses that can be used to further
  /// resolve the values in each match: the function, block, symbol. Care
  /// should be taken to minimize the amount of information that is requested
  /// to only what is needed -- typically the module, compile unit, line table
  /// and line table entry are sufficient.
  ///
  /// \param[in] file_spec
  ///     A file spec to a source file to match. If \a file_path does
  ///     not specify a directory, then this query will match all
  ///     files whose base filename matches. If \a file_path does
  ///     specify a directory, the fullpath to the file must match.
  ///
  /// \param[in] line
  ///     The source line to match, or zero if just the compile unit
  ///     should be resolved.
  ///
  /// \param[in] check_inlines
  ///     Check for inline file and line number matches. This option
  ///     should be used sparingly as it will cause all line tables
  ///     for every compile unit to be parsed and searched for
  ///     matching inline file entries.
  ///
  /// \param[in] resolve_scope
  ///     The scope that should be resolved (see
  ///     SymbolContext::Scope).
  ///
  /// \param[out] sc_list
  ///     A symbol context list that gets filled in with all of the
  ///     matches.
  ///
  /// \return
  ///     A integer that contains SymbolContext::Scope bits set for
  ///     each item that was successfully resolved.
  ///
  /// \see SymbolContext::Scope</doc>
<use f='llvm/lldb/source/Commands/CommandObjectTarget.cpp' l='1332' u='c' c='_ZL24DumpCompileUnitLineTableRN12lldb_private18CommandInterpreterERNS_6StreamEPNS_6ModuleERKNS_8FileSpecEN4lldb16DescriptionLevelE'/>
<use f='llvm/lldb/source/Commands/CommandObjectTarget.cpp' l='1733' u='c' c='_ZL25LookupFileAndLineInModuleRN12lldb_private18CommandInterpreterERNS_6StreamEPNS_6ModuleERKNS_8FileSpecEjbb'/>
<use f='llvm/lldb/source/Core/Module.cpp' l='586' u='c' c='_ZN12lldb_private6Module31ResolveSymbolContextForFilePathEPKcjbN4lldb17SymbolContextItemERNS_17SymbolContextListE'/>
<def f='llvm/lldb/source/Core/Module.cpp' l='590' ll='606' type='uint32_t lldb_private::Module::ResolveSymbolContextsForFileSpec(const lldb_private::FileSpec &amp; file_spec, uint32_t line, bool check_inlines, lldb::SymbolContextItem resolve_scope, lldb_private::SymbolContextList &amp; sc_list)'/>
<use f='llvm/lldb/source/Core/ModuleList.cpp' l='680' u='c' c='_ZNK12lldb_private10ModuleList32ResolveSymbolContextsForFileSpecERKNS_8FileSpecEjbN4lldb17SymbolContextItemERNS_17SymbolContextListE'/>
<use f='llvm/lldb/unittests/Symbol/TestLineEntry.cpp' l='61' u='c' c='_ZN13LineEntryTest19GetLineEntryForLineEj'/>
