<def f='llvm/polly/lib/External/isl/isl_pw_union_opt.c' l='229' macro='1' type='isl_pw_aff * isl_pw_aff_merge(struct isl_pw_aff_union_opt_cmp_data * data1, struct isl_pw_aff_union_opt_cmp_data * data2)'/>
<use f='llvm/polly/lib/External/isl/isl_pw_union_opt.c' l='350' macro='1' u='c' c='isl_pw_aff_union_opt_cmp'/>
<doc f='llvm/polly/lib/External/isl/isl_pw_union_opt.c' l='213'>/* Given two piecewise expressions data1-&gt;pw and data2-&gt;pw, replace
 * their domains
 * by the sets in data1-&gt;cell and data2-&gt;cell and combine the results into
 * a single piecewise expression.
 * The pieces of data1-&gt;pw and data2-&gt;pw are assumed to have been sorted
 * according to the function value expressions.
 * The pieces of the result are also sorted in this way.
 *
 * Run through the pieces of data1-&gt;pw and data2-&gt;pw in order until they
 * have both been exhausted, picking the piece from data1-&gt;pw or data2-&gt;pw
 * depending on which should come first, together with the corresponding
 * domain from data1-&gt;cell or data2-&gt;cell.  In cases where the next pieces
 * in both data1-&gt;pw and data2-&gt;pw have the same function value expression,
 * construct only a single piece in the result with as domain
 * the union of the domains in data1-&gt;cell and data2-&gt;cell.
 */</doc>
