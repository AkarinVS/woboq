<def f='llvm/llvm/include/llvm/Support/ARMTargetParser.h' l='114' ll='122'/>
<use f='llvm/llvm/include/llvm/Support/ARMTargetParser.h' l='124'/>
<use f='llvm/llvm/include/llvm/Support/AArch64TargetParser.h' l='98'/>
<doc f='llvm/llvm/include/llvm/Support/ARMTargetParser.h' l='109'>// List of CPU names and their arches.
// The same CPU can have multiple arches and can be default on multiple arches.
// When finding the Arch for a CPU, first-found prevails. Sort them accordingly.
// When this becomes table-generated, we&apos;d probably need two tables.
// FIXME: TableGen this.</doc>
<mbr r='llvm::ARM::CpuNames::NameCStr' t='const char *'/>
<mbr r='llvm::ARM::CpuNames::NameLength' t='size_t'/>
<mbr r='llvm::ARM::CpuNames::ArchID' t='T'/>
<mbr r='llvm::ARM::CpuNames::Default' t='bool'/>
<mbr r='llvm::ARM::CpuNames::DefaultExtensions' t='uint64_t'/>
<fun r='_ZNK4llvm3ARM8CpuNames7getNameEv'/>
<use f='llvm/llvm/lib/Support/ARMTargetParser.cpp' l='591' c='_ZN4llvm3ARM20fillValidCPUArchListERNS_15SmallVectorImplINS_9StringRefEEE'/>
