<dec f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='326' type='bool llvm::GVNHoist::hasEHOnPath(const llvm::BasicBlock * HoistPt, const llvm::BasicBlock * SrcBB, int &amp; NBBsOnAllPaths)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='338' u='c' c='_ZN4llvm8GVNHoist17safeToHoistScalarEPKNS_10BasicBlockES3_Ri'/>
<def f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='722' ll='750' type='bool llvm::GVNHoist::hasEHOnPath(const llvm::BasicBlock * HoistPt, const llvm::BasicBlock * SrcBB, int &amp; NBBsOnAllPaths)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='780' u='c' c='_ZN4llvm8GVNHoist15safeToHoistLdStEPKNS_11InstructionES3_PNS_14MemoryUseOrDefENS0_7InsKindERi'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='322'>// Return true when there are exception handling between HoistPt and BB.
  // Decrement by 1 NBBsOnAllPaths for each block between HoistPt and BB, and
  // return true when the counter NBBsOnAllPaths reaches 0, except when it is
  // initialized to -1 which is unlimited.</doc>
