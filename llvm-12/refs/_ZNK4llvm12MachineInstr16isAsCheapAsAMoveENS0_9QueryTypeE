<def f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1071' ll='1074' type='bool llvm::MachineInstr::isAsCheapAsAMove(llvm::MachineInstr::QueryType Type = AllInBundle) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1065'>/// Returns true if this instruction has the same cost (or less) than a move
  /// instruction. This is useful during certain types of optimizations
  /// (e.g., remat during two-address conversion or machine licm)
  /// where we would like to remat or hoist the instruction, but not if it costs
  /// more than moving the instruction into the appropriate register. Note, we
  /// are not marking copies from and to the same register class with this flag.</doc>
<use f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='369' u='c' c='_ZNK4llvm15TargetInstrInfo16isAsCheapAsAMoveERKNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/MachineCSE.cpp' l='774' u='c' c='_ZN12_GLOBAL__N_110MachineCSE14isPRECandidateEPN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='804' u='c' c='_ZNK4llvm16AArch64InstrInfo16isAsCheapAsAMoveERKNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='830' u='c' c='_ZNK4llvm16AArch64InstrInfo16isAsCheapAsAMoveERKNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/RISCV/RISCVInstrInfo.cpp' l='569' u='c' c='_ZNK4llvm14RISCVInstrInfo16isAsCheapAsAMoveERKNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/WebAssembly/WebAssemblyRegStackify.cpp' l='265' u='c' c='_ZL19shouldRematerializeRKN4llvm12MachineInstrERNS_9AAResultsEPKNS_20WebAssemblyInstrInfoE'/>
