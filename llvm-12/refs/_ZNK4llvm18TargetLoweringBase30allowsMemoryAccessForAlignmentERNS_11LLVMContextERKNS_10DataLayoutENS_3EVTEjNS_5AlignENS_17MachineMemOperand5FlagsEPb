<dec f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1628' type='bool llvm::TargetLoweringBase::allowsMemoryAccessForAlignment(llvm::LLVMContext &amp; Context, const llvm::DataLayout &amp; DL, llvm::EVT VT, unsigned int AddrSpace = 0, llvm::Align Alignment = llvm::Align(1), MachineMemOperand::Flags Flags = MachineMemOperand::MONone, bool * Fast = nullptr) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1624'>/// This function returns true if the memory access is aligned or if the
  /// target allows this specific unaligned memory access. If the access is
  /// allowed, the optional final parameter returns if the access is also fast
  /// (as defined by the target).</doc>
<def f='llvm/llvm/lib/CodeGen/TargetLoweringBase.cpp' l='1684' ll='1703' type='bool llvm::TargetLoweringBase::allowsMemoryAccessForAlignment(llvm::LLVMContext &amp; Context, const llvm::DataLayout &amp; DL, llvm::EVT VT, unsigned int AddrSpace = 0, llvm::Align Alignment = llvm::Align(1), MachineMemOperand::Flags Flags = MachineMemOperand::MONone, bool * Fast = nullptr) const'/>
<use f='llvm/llvm/lib/CodeGen/TargetLoweringBase.cpp' l='1708' u='c' c='_ZNK4llvm18TargetLoweringBase30allowsMemoryAccessForAlignmentERNS_11LLVMContextERKNS_10DataLayoutENS_3EVTERKNS_17MachineMemOperandEPb'/>
<use f='llvm/llvm/lib/CodeGen/TargetLoweringBase.cpp' l='1717' u='c' c='_ZNK4llvm18TargetLoweringBase18allowsMemoryAccessERNS_11LLVMContextERKNS_10DataLayoutENS_3EVTEjNS_5AlignENS_17MachineMemOperand5FlagsEPb'/>
