<def f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='865' ll='871'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='1139' c='_ZN4llvm13slpvectorizer7BoUpSLP10VLOperands14getBestOperandEjiiNS_8ArrayRefINS2_14ReorderingModeEEE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='1146' c='_ZN4llvm13slpvectorizer7BoUpSLP10VLOperands14getBestOperandEjiiNS_8ArrayRefINS2_14ReorderingModeEEE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='1348' c='_ZN4llvm13slpvectorizer7BoUpSLP10VLOperands7reorderEv'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='859'>/// During operand reordering, we are trying to select the operand at lane
    /// that matches best with the operand at the neighboring lane. Our
    /// selection is based on the type of value we are looking for. For example,
    /// if the neighboring lane has a load, we need to look for a load that is
    /// accessing a consecutive address. These strategies are summarized in the
    /// &apos;ReorderingMode&apos; enumerator.</doc>
