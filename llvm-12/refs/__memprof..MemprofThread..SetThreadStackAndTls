<dec f='llvm/compiler-rt/lib/memprof/memprof_thread.h' l='99' type='void __memprof::MemprofThread::SetThreadStackAndTls(const __memprof::MemprofThread::InitOptions * options)'/>
<doc f='llvm/compiler-rt/lib/memprof/memprof_thread.h' l='96'>// NOTE: There is no MemprofThread constructor. It is allocated
  // via mmap() and *must* be valid in zero-initialized state.</doc>
<use f='llvm/compiler-rt/lib/memprof/memprof_thread.cpp' l='125' u='c' c='__memprof::MemprofThread::Init'/>
<def f='llvm/compiler-rt/lib/memprof/memprof_thread.cpp' l='170' ll='184' type='void __memprof::MemprofThread::SetThreadStackAndTls(const __memprof::MemprofThread::InitOptions * options)'/>
<doc f='llvm/compiler-rt/lib/memprof/memprof_thread.cpp' l='167'>// This implementation doesn&apos;t use the argument, which is just passed down
// from the caller of Init (which see, above).  It&apos;s only there to support
// OS-specific implementations that need more information passed through.</doc>
