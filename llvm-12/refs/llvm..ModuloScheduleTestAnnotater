<def f='llvm/llvm/include/llvm/CodeGen/ModuloSchedule.h' l='375' ll='385'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='633' c='_ZN4llvm17SwingSchedulerDAG8scheduleEv'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/CodeGen/ModuloSchedule.h' l='369'>/// Expander that simply annotates each scheduled instruction with a post-instr
/// symbol that can be consumed by the ModuloScheduleTest pass.
///
/// The post-instr symbol is a way of annotating an instruction that can be
/// roundtripped in MIR. The syntax is:
///   MYINST %0, post-instr-symbol &lt;mcsymbol Stage-1_Cycle-5&gt;</doc>
<mbr r='llvm::ModuloScheduleTestAnnotater::MF' o='0' t='llvm::MachineFunction &amp;'/>
<mbr r='llvm::ModuloScheduleTestAnnotater::S' o='64' t='llvm::ModuloSchedule &amp;'/>
<fun r='_ZN4llvm27ModuloScheduleTestAnnotaterC1ERNS_15MachineFunctionERNS_14ModuloScheduleE'/>
<fun r='_ZN4llvm27ModuloScheduleTestAnnotater8annotateEv'/>
