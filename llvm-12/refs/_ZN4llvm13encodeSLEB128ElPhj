<def f='llvm/llvm/include/llvm/Support/LEB128.h' l='52' ll='76' type='unsigned int llvm::encodeSLEB128(int64_t Value, uint8_t * p, unsigned int PadTo = 0)'/>
<doc f='llvm/llvm/include/llvm/Support/LEB128.h' l='50'>/// Utility function to encode a SLEB128 value to a buffer. Returns
/// the length in bytes of the encoded value.</doc>
<use f='llvm/lld/wasm/InputChunks.cpp' l='167' u='c' c='_ZNK3lld4wasm10InputChunk7writeToEPh'/>
<use f='llvm/lld/wasm/InputChunks.cpp' l='172' u='c' c='_ZNK3lld4wasm10InputChunk7writeToEPh'/>
<use f='llvm/lld/wasm/InputChunks.cpp' l='244' u='c' c='_ZN3lld4wasmL20writeCompressedRelocEPhRKN4llvm4wasm14WasmRelocationEm'/>
<use f='llvm/llvm/lib/DebugInfo/GSYM/FileWriter.cpp' l='22' u='c' c='_ZN4llvm4gsym10FileWriter9writeSLEBEl'/>
<use f='llvm/llvm/lib/Support/BinaryStreamWriter.cpp' l='43' u='c' c='_ZN4llvm18BinaryStreamWriter12writeSLEB128El'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp' l='390' u='c' c='_ZL24appendVGScaledOffsetExprRN4llvm15SmallVectorImplIcEEiijRNS_18raw_string_ostreamE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp' l='397' u='c' c='_ZL24appendVGScaledOffsetExprRN4llvm15SmallVectorImplIcEEiijRNS_18raw_string_ostreamE'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/LEB128Test.cpp' l='32' u='c' c='_ZN12_GLOBAL__N_129LEB128Test_EncodeSLEB128_Test8TestBodyEv'/>
