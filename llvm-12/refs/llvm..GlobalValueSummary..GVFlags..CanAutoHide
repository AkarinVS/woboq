<dec f='llvm/llvm/include/llvm/IR/ModuleSummaryIndex.h' l='321' type='unsigned int'/>
<use f='llvm/llvm/include/llvm/IR/ModuleSummaryIndex.h' l='328' u='w' c='_ZN4llvm18GlobalValueSummary7GVFlagsC1ENS_11GlobalValue12LinkageTypesEbbbb'/>
<use f='llvm/llvm/include/llvm/IR/ModuleSummaryIndex.h' l='409' u='w' c='_ZN4llvm18GlobalValueSummary14setCanAutoHideEb'/>
<use f='llvm/llvm/include/llvm/IR/ModuleSummaryIndex.h' l='411' u='r' c='_ZNK4llvm18GlobalValueSummary11canAutoHideEv'/>
<offset>7</offset>
<doc f='llvm/llvm/include/llvm/IR/ModuleSummaryIndex.h' l='312'>/// In the per-module summary, indicates that the global value is
    /// linkonce_odr and global unnamed addr (so eligible for auto-hiding
    /// via hidden visibility). In the combined summary, indicates that the
    /// prevailing linkonce_odr copy can be auto-hidden via hidden visibility
    /// when it is upgraded to weak_odr in the backend. This is legal when
    /// all copies are eligible for auto-hiding (i.e. all copies were
    /// linkonce_odr global unnamed addr. If any copy is not (e.g. it was
    /// originally weak_odr, we cannot auto-hide the prevailing copy as it
    /// means the symbol was externally visible.</doc>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='9386' u='w' c='_ZN4llvm8LLParser12parseGVFlagsERNS_18GlobalValueSummary7GVFlagsE'/>
<use f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp' l='1054' u='r' c='_ZL24getEncodedGVSummaryFlagsN4llvm18GlobalValueSummary7GVFlagsE'/>
<use f='llvm/llvm/lib/IR/AsmWriter.cpp' l='3337' u='r' c='_ZN12_GLOBAL__N_114AssemblyWriter12printSummaryERKN4llvm18GlobalValueSummaryE'/>
<use f='llvm/llvm/lib/IR/ModuleSummaryIndex.cpp' l='569' u='r' c='_ZNK4llvm18ModuleSummaryIndex11exportToDotERNS_11raw_ostreamERKNS_8DenseSetImNS_12DenseMapInfoImEEEE'/>
<use f='llvm/llvm/include/llvm/IR/ModuleSummaryIndexYAML.h' l='251' u='r' c='_ZN4llvm4yaml19CustomMappingTraitsISt3mapImNS_22GlobalValueSummaryInfoESt4lessImESaISt4pairIKmS3_EEEE6outputERNS0_2IOERSA_'/>
