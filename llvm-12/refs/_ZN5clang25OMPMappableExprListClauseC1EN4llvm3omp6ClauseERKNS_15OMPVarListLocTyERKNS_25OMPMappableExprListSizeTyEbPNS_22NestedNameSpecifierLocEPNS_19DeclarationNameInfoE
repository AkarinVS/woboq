<def f='llvm/clang/include/clang/AST/OpenMPClause.h' l='4864' ll='4878' type='void clang::OMPMappableExprListClause::OMPMappableExprListClause&lt;T&gt;(clang::OpenMPClauseKind K, const clang::OMPVarListLocTy &amp; Locs, const clang::OMPMappableExprListSizeTy &amp; Sizes, bool SupportsMapper = false, clang::NestedNameSpecifierLoc * MapperQualifierLocPtr = nullptr, clang::DeclarationNameInfo * MapperIdInfoPtr = nullptr)'/>
<use f='llvm/clang/include/clang/AST/OpenMPClause.h' l='5451' u='c' c='_ZN5clang12OMPMapClauseC1EN4llvm8ArrayRefINS_21OpenMPMapModifierKindEEENS2_INS_14SourceLocationEEENS_22NestedNameSpecifierLocENS_19DeclarationNameInfo699801'/>
<use f='llvm/clang/include/clang/AST/OpenMPClause.h' l='5473' u='c' c='_ZN5clang12OMPMapClauseC1ERKNS_25OMPMappableExprListSizeTyE'/>
<use f='llvm/clang/include/clang/AST/OpenMPClause.h' l='6374' u='c' c='_ZN5clang11OMPToClauseC1EN4llvm8ArrayRefINS_24OpenMPMotionModifierKindEEENS2_INS_14SourceLocationEEENS_22NestedNameSpecifierLocENS_19DeclarationNameIn6486323'/>
<use f='llvm/clang/include/clang/AST/OpenMPClause.h' l='6395' u='c' c='_ZN5clang11OMPToClauseC1ERKNS_25OMPMappableExprListSizeTyE'/>
<use f='llvm/clang/include/clang/AST/OpenMPClause.h' l='6576' u='c' c='_ZN5clang13OMPFromClauseC1EN4llvm8ArrayRefINS_24OpenMPMotionModifierKindEEENS2_INS_14SourceLocationEEENS_22NestedNameSpecifierLocENS_19DeclarationName9540434'/>
<use f='llvm/clang/include/clang/AST/OpenMPClause.h' l='6597' u='c' c='_ZN5clang13OMPFromClauseC1ERKNS_25OMPMappableExprListSizeTyE'/>
<use f='llvm/clang/include/clang/AST/OpenMPClause.h' l='6758' u='c' c='_ZN5clang21OMPUseDevicePtrClauseC1ERKNS_15OMPVarListLocTyERKNS_25OMPMappableExprListSizeTyE'/>
<use f='llvm/clang/include/clang/AST/OpenMPClause.h' l='6769' u='c' c='_ZN5clang21OMPUseDevicePtrClauseC1ERKNS_25OMPMappableExprListSizeTyE'/>
<use f='llvm/clang/include/clang/AST/OpenMPClause.h' l='6922' u='c' c='_ZN5clang22OMPUseDeviceAddrClauseC1ERKNS_15OMPVarListLocTyERKNS_25OMPMappableExprListSizeTyE'/>
<use f='llvm/clang/include/clang/AST/OpenMPClause.h' l='6933' u='c' c='_ZN5clang22OMPUseDeviceAddrClauseC1ERKNS_25OMPMappableExprListSizeTyE'/>
<use f='llvm/clang/include/clang/AST/OpenMPClause.h' l='7026' u='c' c='_ZN5clang20OMPIsDevicePtrClauseC1ERKNS_15OMPVarListLocTyERKNS_25OMPMappableExprListSizeTyE'/>
<use f='llvm/clang/include/clang/AST/OpenMPClause.h' l='7036' u='c' c='_ZN5clang20OMPIsDevicePtrClauseC1ERKNS_25OMPMappableExprListSizeTyE'/>
<doc f='llvm/clang/include/clang/AST/OpenMPClause.h' l='4846'>/// Build a clause for \a NumUniqueDeclarations declarations, \a
  /// NumComponentLists total component lists, and \a NumComponents total
  /// components.
  ///
  /// \param K Kind of the clause.
  /// \param Locs Locations needed to build a mappable clause. It includes 1)
  /// StartLoc: starting location of the clause (the clause keyword); 2)
  /// LParenLoc: location of &apos;(&apos;; 3) EndLoc: ending location of the clause.
  /// \param Sizes All required sizes to build a mappable clause. It includes 1)
  /// NumVars: number of expressions listed in this clause; 2)
  /// NumUniqueDeclarations: number of unique base declarations in this clause;
  /// 3) NumComponentLists: number of component lists in this clause; and 4)
  /// NumComponents: total number of expression components in the clause.
  /// \param SupportsMapper Indicates whether this clause is possible to have
  /// user-defined mappers associated.
  /// \param MapperQualifierLocPtr C++ nested name specifier for the associated
  /// user-defined mapper.
  /// \param MapperIdInfoPtr The identifier of associated user-defined mapper.</doc>
