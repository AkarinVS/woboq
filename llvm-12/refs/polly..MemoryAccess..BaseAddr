<dec f='llvm/polly/include/polly/ScopInfo.h' l='531' type='AssertingVH&lt;llvm::Value&gt;'/>
<use f='llvm/polly/include/polly/ScopInfo.h' l='829' u='m' c='_ZNK5polly12MemoryAccess19getOriginalBaseAddrEv'/>
<offset>320</offset>
<doc f='llvm/polly/include/polly/ScopInfo.h' l='519'>// Properties describing the accessed array.
  // TODO: It might be possible to move them to ScopArrayInfo.
  // @{

  /// The base address (e.g., A for A[i+j]).
  ///
  /// The #BaseAddr of a memory access of kind MemoryKind::Array is the base
  /// pointer of the memory access.
  /// The #BaseAddr of a memory access of kind MemoryKind::PHI or
  /// MemoryKind::ExitPHI is the PHI node itself.
  /// The #BaseAddr of a memory access of kind MemoryKind::Value is the
  /// instruction defining the value.</doc>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='892' u='w' c='_ZN5polly12MemoryAccessC1EPNS_8ScopStmtEPN4llvm11InstructionENS0_10AccessTypeEPNS3_5ValueEPNS3_4TypeEbNS3_8ArrayRefIPKNS3_4SCEVEEESF_S8_NS_10MemoryKindE'/>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='914' u='w' c='_ZN5polly12MemoryAccessC1EPNS_8ScopStmtENS0_10AccessTypeEN3isl12noexceptions3mapE'/>
