<dec f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetQueuesHandler.h' l='85' type='lldb_private::AppleGetQueuesHandler::GetQueuesReturnInfo lldb_private::AppleGetQueuesHandler::GetCurrentQueues(lldb_private::Thread &amp; thread, lldb::addr_t page_to_free, uint64_t page_to_free_size, lldb_private::Status &amp; error)'/>
<def f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetQueuesHandler.cpp' l='216' ll='392' type='AppleGetQueuesHandler::GetQueuesReturnInfo lldb_private::AppleGetQueuesHandler::GetCurrentQueues(lldb_private::Thread &amp; thread, lldb::addr_t page_to_free, uint64_t page_to_free_size, lldb_private::Status &amp; error)'/>
<doc f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetQueuesHandler.h' l='59'>/// Get the list of queues that exist (with any active or pending items) via
  /// a call to introspection_get_dispatch_queues().  If there&apos;s a page of
  /// memory that needs to be freed, pass in the address and size and it will
  /// be freed before getting the list of queues.
  ///
  /// \param [in] thread
  ///     The thread to run this plan on.
  ///
  /// \param [in] page_to_free
  ///     An address of an inferior process vm page that needs to be
  ///     deallocated,
  ///     LLDB_INVALID_ADDRESS if this is not needed.
  ///
  /// \param [in] page_to_free_size
  ///     The size of the vm page that needs to be deallocated if an address was
  ///     passed in to page_to_free.
  ///
  /// \param [out] error
  ///     This object will be updated with the error status / error string from
  ///     any failures encountered.
  ///
  /// \returns
  ///     The result of the inferior function call execution.  If there was a
  ///     failure of any kind while getting
  ///     the information, the queues_buffer_ptr value will be
  ///     LLDB_INVALID_ADDRESS.</doc>
<use f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/SystemRuntimeMacOSX.cpp' l='690' u='c' c='_ZN19SystemRuntimeMacOSX17PopulateQueueListERN12lldb_private9QueueListE'/>
