<dec f='llvm/lldb/include/lldb/Host/Host.h' l='143' type='static lldb_private::FileSpec lldb_private::Host::GetModuleFileSpecForHostAddress(const void * host_addr)'/>
<doc f='llvm/lldb/include/lldb/Host/Host.h' l='130'>/// Given an address in the current process (the process that is running the
  /// LLDB code), return the name of the module that it comes from. This can
  /// be useful when you need to know the path to the shared library that your
  /// code is running in for loading resources that are relative to your
  /// binary.
  ///
  /// \param[in] host_addr
  ///     The pointer to some code in the current process.
  ///
  /// \return
  ///     \b A file spec with the module that contains \a host_addr,
  ///     which may be invalid if \a host_addr doesn&apos;t fall into
  ///     any valid module address range.</doc>
<def f='llvm/lldb/source/Host/common/Host.cpp' l='422' ll='434' type='static lldb_private::FileSpec lldb_private::Host::GetModuleFileSpecForHostAddress(const void * host_addr)'/>
<use f='llvm/lldb/source/Host/common/HostInfoBase.cpp' l='248' u='c' c='_ZN12lldb_private12HostInfoBase29ComputeSharedLibraryDirectoryERNS_8FileSpecE'/>
