<dec f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.h' l='76' type='unsigned int llvm::MipsSEInstrInfo::loadImmediate(int64_t Imm, llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator II, const llvm::DebugLoc &amp; DL, unsigned int * NewImm) const'/>
<doc f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.h' l='73'>/// Emit a series of instructions to load an immediate. If NewImm is a
  /// non-NULL parameter, the last instruction is not emitted, but instead
  /// its immediate operand is returned in NewImm.</doc>
<use f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp' l='610' u='c' c='_ZNK4llvm15MipsSEInstrInfo14adjustStackPtrEjlRNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEE'/>
<def f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp' l='617' ll='657' type='unsigned int llvm::MipsSEInstrInfo::loadImmediate(int64_t Imm, llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator II, const llvm::DebugLoc &amp; DL, unsigned int * NewImm) const'/>
<doc f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp' l='615'>/// This function generates the sequence of instructions needed to get the
/// result of adding register REG and immediate IMM.</doc>
<use f='llvm/llvm/lib/Target/Mips/MipsSERegisterInfo.cpp' l='245' u='c' c='_ZNK4llvm18MipsSERegisterInfo11eliminateFIENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEEjiml'/>
