<dec f='llvm/lldb/include/lldb/Target/Platform.h' l='423' type='uint32_t lldb_private::Platform::FindProcesses(const lldb_private::ProcessInstanceInfoMatch &amp; match_info, lldb_private::ProcessInstanceInfoList &amp; proc_infos)'/>
<doc f='llvm/lldb/include/lldb/Target/Platform.h' l='402'>/// Attach to an existing process by process name.
  ///
  /// This function is not meant to be overridden by Process subclasses. It
  /// will first call Process::WillAttach (const char *) and if that returns
  /// \b true, Process::DoAttach (const char *) will be called to actually do
  /// the attach. If DoAttach returns \b true, then Process::DidAttach() will
  /// be called.
  ///
  /// \param[in] process_name
  ///     A process name to match against the current process list.
  ///
  /// \return
  ///     Returns \a pid if attaching was successful, or
  ///     LLDB_INVALID_PROCESS_ID if attaching fails.
  //        virtual lldb::ProcessSP
  //        Attach (const char *process_name,
  //                bool wait_for_launch,
  //                Status &amp;error) = 0;

  // The base class Platform will take care of the host platform. Subclasses
  // will need to fill in the remote case.</doc>
<use f='llvm/lldb/source/Commands/CommandCompletions.cpp' l='685' u='c' c='_ZN12lldb_private18CommandCompletions10ProcessIDsERNS_18CommandInterpreterERNS_17CompletionRequestEPNS_12SearchFilterE'/>
<use f='llvm/lldb/source/Commands/CommandCompletions.cpp' l='699' u='c' c='_ZN12lldb_private18CommandCompletions12ProcessNamesERNS_18CommandInterpreterERNS_17CompletionRequestEPNS_12SearchFilterE'/>
<use f='llvm/lldb/source/Commands/CommandObjectPlatform.cpp' l='1144' u='c' c='_ZN32CommandObjectPlatformProcessList9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<ovr f='llvm/lldb/source/Plugins/Platform/gdb-server/PlatformRemoteGDBServer.cpp' l='374' c='_ZN12lldb_private19platform_gdb_server23PlatformRemoteGDBServer13FindProcessesERKNS_24ProcessInstanceInfoMatchERSt6vectorINS_19ProcessInstanceInfoESaIS6_EE'/>
<def f='llvm/lldb/source/Target/Platform.cpp' l='1001' ll='1009' type='uint32_t lldb_private::Platform::FindProcesses(const lldb_private::ProcessInstanceInfoMatch &amp; match_info, lldb_private::ProcessInstanceInfoList &amp; process_infos)'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='2746' u='c' c='_ZN12lldb_private7Process6AttachERNS_17ProcessAttachInfoE'/>
<ovr f='llvm/lldb/source/Target/RemoteAwarePlatform.cpp' l='398' c='_ZN12lldb_private19RemoteAwarePlatform13FindProcessesERKNS_24ProcessInstanceInfoMatchERSt6vectorINS_19ProcessInstanceInfoESaIS5_EE'/>
<use f='llvm/lldb/source/Target/RemoteAwarePlatform.cpp' l='401' u='c' c='_ZN12lldb_private19RemoteAwarePlatform13FindProcessesERKNS_24ProcessInstanceInfoMatchERSt6vectorINS_19ProcessInstanceInfoESaIS5_EE'/>
<use f='llvm/lldb/source/Target/RemoteAwarePlatform.cpp' l='403' u='c' c='_ZN12lldb_private19RemoteAwarePlatform13FindProcessesERKNS_24ProcessInstanceInfoMatchERSt6vectorINS_19ProcessInstanceInfoESaIS5_EE'/>
