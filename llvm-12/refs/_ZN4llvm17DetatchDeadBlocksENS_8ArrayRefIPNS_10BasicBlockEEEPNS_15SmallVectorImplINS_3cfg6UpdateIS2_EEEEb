<dec f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='49' type='void llvm::DetatchDeadBlocks(ArrayRef&lt;llvm::BasicBlock *&gt; BBs, SmallVectorImpl&lt;DominatorTree::UpdateType&gt; * Updates, bool KeepOneInputPHIs = false)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='45'>/// Replace contents of every block in \p BBs with single unreachable
/// instruction. If \p Updates is specified, collect all necessary DT updates
/// into this vector. If \p KeepOneInputPHIs is true, one-input Phis in
/// successors of blocks being deleted will be preserved.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='1327' u='c' c='_ZN4llvm10Attributor9cleanupIREv'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp' l='472' u='c' c='_ZN12_GLOBAL__N_129ConstantTerminatorFoldingImpl20deleteDeadLoopBlocksEv'/>
<def f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='54' ll='86' type='void llvm::DetatchDeadBlocks(ArrayRef&lt;llvm::BasicBlock *&gt; BBs, SmallVectorImpl&lt;DominatorTree::UpdateType&gt; * Updates, bool KeepOneInputPHIs = false)'/>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='105' u='c' c='_ZN4llvm16DeleteDeadBlocksENS_8ArrayRefIPNS_10BasicBlockEEEPNS_14DomTreeUpdaterEb'/>
