<dec f='llvm/clang/include/clang/Frontend/VerifyDiagnosticConsumer.h' l='301' type='void clang::VerifyDiagnosticConsumer::VerifyDiagnosticConsumer(clang::DiagnosticsEngine &amp; Diags)'/>
<use f='llvm/clang/lib/Frontend/CompilerInstance.cpp' l='296' u='c' c='_ZN5clang16CompilerInstance17createDiagnosticsEPNS_17DiagnosticOptionsEPNS_18DiagnosticConsumerEbPKNS_14CodeGenOptionsE'/>
<doc f='llvm/clang/include/clang/Frontend/VerifyDiagnosticConsumer.h' l='298'>/// Create a new verifying diagnostic client, which will issue errors to
  /// the currently-attached diagnostic client when a diagnostic does not match
  /// what is expected (as indicated in the source file).</doc>
<def f='llvm/clang/lib/Frontend/VerifyDiagnosticConsumer.cpp' l='661' ll='668' type='void clang::VerifyDiagnosticConsumer::VerifyDiagnosticConsumer(clang::DiagnosticsEngine &amp; Diags_)'/>
<use f='llvm/clang/tools/arcmt-test/arcmt-test.cpp' l='119' u='c' c='_ZL17checkForMigrationN4llvm9StringRefENS_8ArrayRefIPKcEE'/>
