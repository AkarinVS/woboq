<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='2373' type='static llvm::Type * llvm::ExtractValueInst::getIndexedType(llvm::Type * Agg, ArrayRef&lt;unsigned int&gt; Idxs)'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='2418' u='c' c='_ZN4llvm16ExtractValueInstC1EPNS_5ValueENS_8ArrayRefIjEERKNS_5TwineEPNS_11InstructionE'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='2427' u='c' c='_ZN4llvm16ExtractValueInstC1EPNS_5ValueENS_8ArrayRefIjEERKNS_5TwineEPNS_10BasicBlockE'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='2369'>/// Returns the type of the element that would be extracted
  /// with an extractvalue instruction with the specified parameters.
  ///
  /// Null is returned if the indices are invalid for the specified type.</doc>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='3768' u='c' c='_ZL17BuildSubAggregatePN4llvm5ValueENS_8ArrayRefIjEEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='3563' u='c' c='_ZN4llvm8LLParser10parseValIDERNS_5ValIDEPNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='3583' u='c' c='_ZN4llvm8LLParser10parseValIDERNS_5ValIDEPNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='7675' u='c' c='_ZN4llvm8LLParser17parseExtractValueERPNS_11InstructionERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='7696' u='c' c='_ZN4llvm8LLParser16parseInsertValueERPNS_11InstructionERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/CodeGen/Analysis.cpp' l='430' u='c' c='_ZL21advanceToNextLeafTypeRN4llvm15SmallVectorImplIPNS_4TypeEEERNS0_IjEE'/>
<use f='llvm/llvm/lib/CodeGen/Analysis.cpp' l='438' u='c' c='_ZL21advanceToNextLeafTypeRN4llvm15SmallVectorImplIPNS_4TypeEEERNS0_IjEE'/>
<use f='llvm/llvm/lib/CodeGen/Analysis.cpp' l='459' u='c' c='_ZL13firstRealTypePN4llvm4TypeERNS_15SmallVectorImplIS1_EERNS2_IjEE'/>
<use f='llvm/llvm/lib/CodeGen/Analysis.cpp' l='472' u='c' c='_ZL13firstRealTypePN4llvm4TypeERNS_15SmallVectorImplIS1_EERNS2_IjEE'/>
<use f='llvm/llvm/lib/CodeGen/Analysis.cpp' l='490' u='c' c='_ZL12nextRealTypeRN4llvm15SmallVectorImplIPNS_4TypeEEERNS0_IjEE'/>
<use f='llvm/llvm/lib/CodeGen/Analysis.cpp' l='689' u='c' c='_ZN4llvm31returnTypeIsEligibleForTailCallEPKNS_8FunctionEPKNS_11InstructionEPKNS_10ReturnInstERKNS_18TargetLoweringBaseE'/>
<use f='llvm/llvm/lib/ExecutionEngine/Interpreter/Execution.cpp' l='1941' u='c' c='_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE'/>
<use f='llvm/llvm/lib/ExecutionEngine/Interpreter/Execution.cpp' l='1988' u='c' c='_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE'/>
<use f='llvm/llvm/lib/FuzzMutate/Operations.cpp' l='249' u='c' c='_ZL21validInsertValueIndexv'/>
<use f='llvm/llvm/lib/FuzzMutate/Operations.cpp' l='260' u='c' c='_ZL21validInsertValueIndexv'/>
<use f='llvm/llvm/lib/IR/Constants.cpp' l='2592' u='c' c='_ZN4llvm12ConstantExpr15getExtractValueEPNS_8ConstantENS_8ArrayRefIjEEPNS_4TypeE'/>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='2343' ll='2366' type='static llvm::Type * llvm::ExtractValueInst::getIndexedType(llvm::Type * Agg, ArrayRef&lt;unsigned int&gt; Idxs)'/>
<doc f='llvm/llvm/lib/IR/Instructions.cpp' l='2337'>// getIndexedType - Returns the type of the element that would be extracted
// with an extractvalue instruction with the specified parameters.
//
// A null type is returned if the indices are invalid for the specified
// pointer type.
//</doc>
<use f='llvm/llvm/lib/IR/Verifier.cpp' l='3794' u='c' c='_ZN12_GLOBAL__N_18Verifier21visitExtractValueInstERN4llvm16ExtractValueInstE'/>
<use f='llvm/llvm/lib/IR/Verifier.cpp' l='3802' u='c' c='_ZN12_GLOBAL__N_18Verifier20visitInsertValueInstERN4llvm15InsertValueInstE'/>
