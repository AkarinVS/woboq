<dec f='llvm/lldb/include/lldb/Target/RegisterContextUnwind.h' l='120' type='bool lldb_private::RegisterContextUnwind::IsTrapHandlerSymbol(lldb_private::Process * process, const lldb_private::SymbolContext &amp; m_sym_ctx) const'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='169' u='c' c='_ZN12lldb_private21RegisterContextUnwind21InitializeZerothFrameEv'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='465' u='c' c='_ZN12lldb_private21RegisterContextUnwind24InitializeNonZerothFrameEv'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='515' u='c' c='_ZN12lldb_private21RegisterContextUnwind24InitializeNonZerothFrameEv'/>
<def f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='1117' ll='1141' type='bool lldb_private::RegisterContextUnwind::IsTrapHandlerSymbol(lldb_private::Process * process, const lldb_private::SymbolContext &amp; m_sym_ctx) const'/>
<doc f='llvm/lldb/include/lldb/Target/RegisterContextUnwind.h' l='113'>/// Determines if a SymbolContext is a trap handler or not
  ///
  /// Given a SymbolContext, determines if this is a trap handler function
  /// aka asynchronous signal handler.
  ///
  /// \return
  ///     Returns true if the SymbolContext is a trap handler.</doc>
