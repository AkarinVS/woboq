<dec f='llvm/clang/include/clang/AST/OpenMPClause.h' l='5549' type='static clang::OMPMapClause * clang::OMPMapClause::CreateEmpty(const clang::ASTContext &amp; C, const clang::OMPMappableExprListSizeTy &amp; Sizes)'/>
<doc f='llvm/clang/include/clang/AST/OpenMPClause.h' l='5539'>/// Creates an empty clause with the place for \a NumVars original
  /// expressions, \a NumUniqueDeclarations declarations, \NumComponentLists
  /// lists, and \a NumComponents expression components.
  ///
  /// \param C AST context.
  /// \param Sizes All required sizes to build a mappable clause. It includes 1)
  /// NumVars: number of expressions listed in this clause; 2)
  /// NumUniqueDeclarations: number of unique base declarations in this clause;
  /// 3) NumComponentLists: number of component lists in this clause; and 4)
  /// NumComponents: total number of expression components in the clause.</doc>
<def f='llvm/clang/lib/AST/OpenMPClause.cpp' l='1082' ll='1092' type='static clang::OMPMapClause * clang::OMPMapClause::CreateEmpty(const clang::ASTContext &amp; C, const clang::OMPMappableExprListSizeTy &amp; Sizes)'/>
<use f='llvm/clang/lib/Serialization/ASTReader.cpp' l='11868' u='c' c='_ZN5clang15OMPClauseReader10readClauseEv'/>
