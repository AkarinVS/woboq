<dec f='llvm/lldb/source/Plugins/SymbolVendor/ELF/SymbolVendorELF.h' l='30' type='static lldb_private::SymbolVendor * SymbolVendorELF::CreateInstance(const lldb::ModuleSP &amp; module_sp, lldb_private::Stream * feedback_strm)'/>
<use f='llvm/lldb/source/Plugins/SymbolVendor/ELF/SymbolVendorELF.cpp' l='36' u='r' c='_ZN15SymbolVendorELF10InitializeEv'/>
<use f='llvm/lldb/source/Plugins/SymbolVendor/ELF/SymbolVendorELF.cpp' l='40' u='r' c='_ZN15SymbolVendorELF9TerminateEv'/>
<def f='llvm/lldb/source/Plugins/SymbolVendor/ELF/SymbolVendorELF.cpp' l='58' ll='146' type='static lldb_private::SymbolVendor * SymbolVendorELF::CreateInstance(const lldb::ModuleSP &amp; module_sp, lldb_private::Stream * feedback_strm)'/>
<doc f='llvm/lldb/source/Plugins/SymbolVendor/ELF/SymbolVendorELF.cpp' l='53'>// CreateInstance
//
// Platforms can register a callback to use when creating symbol vendors to
// allow for complex debug information file setups, and to also allow for
// finding separate debug information files.</doc>
