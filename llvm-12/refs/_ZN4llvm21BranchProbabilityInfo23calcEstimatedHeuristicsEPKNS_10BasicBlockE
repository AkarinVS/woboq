<dec f='llvm/llvm/include/llvm/Analysis/BranchProbabilityInfo.h' l='412' type='bool llvm::BranchProbabilityInfo::calcEstimatedHeuristics(const llvm::BasicBlock * BB)'/>
<doc f='llvm/llvm/include/llvm/Analysis/BranchProbabilityInfo.h' l='410'>/// Based on computed weights by \p computeEstimatedBlockWeight set
  /// probabilities on branches.</doc>
<def f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='828' ll='915' type='bool llvm::BranchProbabilityInfo::calcEstimatedHeuristics(const llvm::BasicBlock * BB)'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='1292' u='c' c='_ZN4llvm21BranchProbabilityInfo9calculateERKNS_8FunctionERKNS_8LoopInfoEPKNS_17TargetLibraryInfoEPNS_13DominatorTreeEPNS_17PostDominatorTreeE'/>
<doc f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='825'>// Calculate edge probabilities based on block&apos;s estimated weight.
// Note that gathered weights were not scaled for loops. Thus edges entering
// and exiting loops requires special processing.</doc>
