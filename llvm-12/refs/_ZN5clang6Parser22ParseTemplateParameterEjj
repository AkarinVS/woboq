<dec f='llvm/clang/include/clang/Parse/Parser.h' l='3303' type='clang::NamedDecl * clang::Parser::ParseTemplateParameter(unsigned int Depth, unsigned int Position)'/>
<use f='llvm/clang/lib/Parse/ParseTemplate.cpp' l='486' u='c' c='_ZN5clang6Parser26ParseTemplateParameterListEjRN4llvm15SmallVectorImplIPNS_9NamedDeclEEE'/>
<def f='llvm/clang/lib/Parse/ParseTemplate.cpp' l='617' ll='671' type='clang::NamedDecl * clang::Parser::ParseTemplateParameter(unsigned int Depth, unsigned int Position)'/>
<doc f='llvm/clang/lib/Parse/ParseTemplate.cpp' l='597'>/// ParseTemplateParameter - Parse a template-parameter (C++ [temp.param]).
///
///       template-parameter: [C++ temp.param]
///         type-parameter
///         parameter-declaration
///
///       type-parameter: (See below)
///         type-parameter-key ...[opt] identifier[opt]
///         type-parameter-key identifier[opt] = type-id
/// (C++2a) type-constraint ...[opt] identifier[opt]
/// (C++2a) type-constraint identifier[opt] = type-id
///         &apos;template&apos; &apos;&lt;&apos; template-parameter-list &apos;&gt;&apos; type-parameter-key
///               ...[opt] identifier[opt]
///         &apos;template&apos; &apos;&lt;&apos; template-parameter-list &apos;&gt;&apos; type-parameter-key
///               identifier[opt] &apos;=&apos; id-expression
///
///       type-parameter-key:
///         class
///         typename
///</doc>
