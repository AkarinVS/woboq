<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='727' type='llvm::Value * llvm::InstCombinerImpl::EvaluateInDifferentType(llvm::Value * V, llvm::Type * Ty, bool isSigned)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='180' ll='247' type='llvm::Value * llvm::InstCombinerImpl::EvaluateInDifferentType(llvm::Value * V, llvm::Type * Ty, bool isSigned)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='204' u='c' c='_ZN4llvm16InstCombinerImpl23EvaluateInDifferentTypeEPNS_5ValueEPNS_4TypeEb'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='205' u='c' c='_ZN4llvm16InstCombinerImpl23EvaluateInDifferentTypeEPNS_5ValueEPNS_4TypeEb'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='224' u='c' c='_ZN4llvm16InstCombinerImpl23EvaluateInDifferentTypeEPNS_5ValueEPNS_4TypeEb'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='225' u='c' c='_ZN4llvm16InstCombinerImpl23EvaluateInDifferentTypeEPNS_5ValueEPNS_4TypeEb'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='234' u='c' c='_ZN4llvm16InstCombinerImpl23EvaluateInDifferentTypeEPNS_5ValueEPNS_4TypeEb'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='744' u='c' c='_ZN4llvm16InstCombinerImpl10visitTruncERNS_9TruncInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='762' u='c' c='_ZN4llvm16InstCombinerImpl10visitTruncERNS_9TruncInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='1200' u='c' c='_ZN4llvm16InstCombinerImpl9visitZExtERNS_8ZExtInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='1476' u='c' c='_ZN4llvm16InstCombinerImpl9visitSExtERNS_8SExtInstE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='178'>/// Given an expression that CanEvaluateTruncated or CanEvaluateSExtd returns
/// true for, actually insert the code to evaluate the expression.</doc>
