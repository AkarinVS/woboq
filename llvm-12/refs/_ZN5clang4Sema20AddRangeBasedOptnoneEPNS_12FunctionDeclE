<dec f='llvm/clang/include/clang/Sema/Sema.h' l='10024' type='void clang::Sema::AddRangeBasedOptnone(clang::FunctionDecl * FD)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='10021'>/// Only called on function definitions; if there is a pragma in scope
  /// with the effect of a range-based optnone, consider marking the function
  /// with attribute optnone.</doc>
<def f='llvm/clang/lib/Sema/SemaAttr.cpp' l='993' ll='998' type='void clang::Sema::AddRangeBasedOptnone(clang::FunctionDecl * FD)'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='9772' u='c' c='_ZN5clang4Sema23ActOnFunctionDeclaratorEPNS_5ScopeERNS_10DeclaratorEPNS_11DeclContextEPNS_14TypeSourceInfoERNS_12LookupResultEN4llvm15MutableArrayRefI5939088'/>
<use f='llvm/clang/lib/Sema/SemaLambda.cpp' l='990' u='c' c='_ZN5clang4Sema28ActOnStartOfLambdaDefinitionERNS_16LambdaIntroducerERNS_10DeclaratorEPNS_5ScopeE'/>
