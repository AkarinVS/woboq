<dec f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.h' l='220' type='bool IRForTarget::CreateResultVariable(llvm::Function &amp; llvm_function)'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.h' l='213'>/// The top-level pass implementation
  ///
  /// \param[in] llvm_function
  ///     The function currently being processed.
  ///
  /// \return
  ///     True on success; false otherwise</doc>
<def f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='167' ll='405' type='bool IRForTarget::CreateResultVariable(llvm::Function &amp; llvm_function)'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='1896' u='c' c='_ZN11IRForTarget11runOnModuleERN4llvm6ModuleE'/>
