<dec f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='703' type='llvm::SelectPatternResult llvm::matchSelectPattern(llvm::Value * V, llvm::Value *&amp; LHS, llvm::Value *&amp; RHS, Instruction::CastOps * CastOp = nullptr, unsigned int Depth = 0)'/>
<use f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='711' u='c' c='_ZN4llvm18matchSelectPatternEPKNS_5ValueERS2_S3_'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='685'>/// Pattern match integer [SU]MIN, [SU]MAX and ABS idioms, returning the kind
  /// and providing the out parameter results if we successfully match.
  ///
  /// For ABS/NABS, LHS will be set to the input to the abs idiom. RHS will be
  /// the negation instruction from the idiom.
  ///
  /// If CastOp is not nullptr, also match MIN/MAX idioms where the type does
  /// not match that of the original select. If this is the case, the cast
  /// operation (one of Trunc,SExt,Zext) that must be done to transform the
  /// type of LHS and RHS into the type of V is returned in CastOp.
  ///
  /// For example:
  ///   %1 = icmp slt i32 %a, i32 4
  ///   %2 = sext i32 %a to i64
  ///   %3 = select i1 %1, i64 %2, i64 4
  ///
  /// -&gt; LHS = %a, RHS = i32 4, *CastOp = Instruction::SExt
  ///</doc>
<use f='llvm/llvm/lib/Analysis/IVDescriptors.cpp' l='873' u='c' c='_ZNK4llvm20RecurrenceDescriptor19getReductionOpChainEPNS_7PHINodeEPNS_4LoopE'/>
<use f='llvm/llvm/lib/Analysis/LazyValueInfo.cpp' l='825' u='c' c='_ZN12_GLOBAL__N_117LazyValueInfoImpl21solveBlockValueSelectEPN4llvm10SelectInstEPNS1_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='5366' u='c' c='_ZL19matchMinMaxOfMinMaxN4llvm7CmpInst9PredicateEPNS_5ValueES3_S3_S3_j'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='5371' u='c' c='_ZL19matchMinMaxOfMinMaxN4llvm7CmpInst9PredicateEPNS_5ValueES3_S3_S3_j'/>
<def f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='5863' ll='5880' type='llvm::SelectPatternResult llvm::matchSelectPattern(llvm::Value * V, llvm::Value *&amp; LHS, llvm::Value *&amp; RHS, Instruction::CastOps * CastOp = nullptr, unsigned int Depth = 0)'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='5955' u='c' c='_ZN4llvm29canConvertToMinOrMaxIntrinsicENS_8ArrayRefIPNS_5ValueEEE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='3189' u='c' c='_ZN4llvm19SelectionDAGBuilder11visitSelectERKNS_4UserE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMTargetTransformInfo.cpp' l='297' u='c' c='_ZL19isSSATMinMaxPatternPN4llvm11InstructionERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMTargetTransformInfo.cpp' l='308' u='c' c='_ZL19isSSATMinMaxPatternPN4llvm11InstructionERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Target/X86/X86PartialReduction.cpp' l='186' u='c' c='_ZN12_GLOBAL__N_119X86PartialReduction17trySADReplacementEPN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='2008' u='c' c='_ZN4llvm16InstCombinerImpl8visitSubERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='2012' u='c' c='_ZN4llvm16InstCombinerImpl8visitSubERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='3467' u='c' c='_ZN4llvm16InstCombinerImpl8visitXorERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='433' u='c' c='_ZL12foldCttzCtlzRN4llvm13IntrinsicInstERNS_16InstCombinerImplE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='774' u='c' c='_ZN4llvm16InstCombinerImpl10visitTruncERNS_9TruncInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='1364' u='c' c='_ZN4llvm16InstCombinerImpl16foldICmpWithZeroERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='5605' u='c' c='_ZN4llvm16InstCombinerImpl13visitICmpInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='6189' u='c' c='_ZN4llvm16InstCombinerImpl13visitFCmpInstERNS_8FCmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='237' u='c' c='_ZN4llvm16InstCombinerImpl8visitMulERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='1024' u='c' c='_ZL30canonicalizeMinMaxWithConstantRN4llvm10SelectInstERNS_8ICmpInstERNS_16InstCombinerImplE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='1061' u='c' c='_ZL19canonicalizeAbsNabsRN4llvm10SelectInstERNS_8ICmpInstERNS_16InstCombinerImplE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='2232' u='c' c='_ZL19factorizeMinMaxTreeN4llvm19SelectPatternFlavorEPNS_5ValueES2_RNS_9IRBuilderINS_12TargetFolderENS_25IRBuilderCallbackInserterEEE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='2233' u='c' c='_ZL19factorizeMinMaxTreeN4llvm19SelectPatternFlavorEPNS_5ValueES2_RNS_9IRBuilderINS_12TargetFolderENS_25IRBuilderCallbackInserterEEE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='2768' u='c' c='_ZN4llvm16InstCombinerImpl15visitSelectInstERNS_10SelectInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='2772' u='c' c='_ZN4llvm16InstCombinerImpl15visitSelectInstERNS_10SelectInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='2776' u='c' c='_ZN4llvm16InstCombinerImpl15visitSelectInstERNS_10SelectInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp' l='304' u='c' c='_ZN4llvm16InstCombinerImpl23SimplifyDemandedUseBitsEPNS_5ValueENS_5APIntERNS_9KnownBitsEjPNS_11InstructionE'/>
<use f='llvm/llvm/unittests/Analysis/ValueTrackingTest.cpp' l='95' u='c' c='_ZN12_GLOBAL__N_122MatchSelectPatternTest13expectPatternERKN4llvm19SelectPatternResultE'/>
