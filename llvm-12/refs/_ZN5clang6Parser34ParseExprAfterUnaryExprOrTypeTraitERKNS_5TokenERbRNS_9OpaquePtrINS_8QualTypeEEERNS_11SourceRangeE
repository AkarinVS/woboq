<dec f='llvm/clang/include/clang/Parse/Parser.h' l='1822' type='clang::ExprResult clang::Parser::ParseExprAfterUnaryExprOrTypeTrait(const clang::Token &amp; OpTok, bool &amp; isCastExpr, clang::ParsedType &amp; CastTy, clang::SourceRange &amp; CastRange)'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='7179' u='c' c='_ZN5clang6Parser20ParseTypeofSpecifierERNS_8DeclSpecE'/>
<def f='llvm/clang/lib/Parse/ParseExpr.cpp' l='2242' ll='2323' type='clang::ExprResult clang::Parser::ParseExprAfterUnaryExprOrTypeTrait(const clang::Token &amp; OpTok, bool &amp; isCastExpr, clang::ParsedType &amp; CastTy, clang::SourceRange &amp; CastRange)'/>
<use f='llvm/clang/lib/Parse/ParseExpr.cpp' l='2403' u='c' c='_ZN5clang6Parser35ParseUnaryExprOrTypeTraitExpressionEv'/>
<doc f='llvm/clang/lib/Parse/ParseExpr.cpp' l='2219'>/// ParseExprAfterUnaryExprOrTypeTrait - We parsed a typeof/sizeof/alignof/
/// vec_step and we are at the start of an expression or a parenthesized
/// type-id. OpTok is the operand token (typeof/sizeof/alignof). Returns the
/// expression (isCastExpr == false) or the type (isCastExpr == true).
///
/// \verbatim
///       unary-expression:  [C99 6.5.3]
///         &apos;sizeof&apos; unary-expression
///         &apos;sizeof&apos; &apos;(&apos; type-name &apos;)&apos;
/// [GNU]   &apos;__alignof&apos; unary-expression
/// [GNU]   &apos;__alignof&apos; &apos;(&apos; type-name &apos;)&apos;
/// [C11]   &apos;_Alignof&apos; &apos;(&apos; type-name &apos;)&apos;
/// [C++0x] &apos;alignof&apos; &apos;(&apos; type-id &apos;)&apos;
///
/// [GNU]   typeof-specifier:
///           typeof ( expressions )
///           typeof ( type-name )
/// [GNU/C++] typeof unary-expression
///
/// [OpenCL 1.1 6.11.12] vec_step built-in function:
///           vec_step ( expressions )
///           vec_step ( type-name )
/// \endverbatim</doc>
