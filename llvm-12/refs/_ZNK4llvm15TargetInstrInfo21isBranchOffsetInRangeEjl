<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='562' ll='565' type='bool llvm::TargetInstrInfo::isBranchOffsetInRange(unsigned int BranchOpc, int64_t BrOffset) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='560'>/// \returns true if a branch from an instruction with opcode \p BranchOpc
  ///  bytes is capable of jumping to a position \p BrOffset bytes away.</doc>
<use f='llvm/llvm/lib/CodeGen/BranchRelaxation.cpp' l='280' u='c' c='_ZNK12_GLOBAL__N_116BranchRelaxation14isBlockInRangeERKN4llvm12MachineInstrERKNS1_17MachineBasicBlockE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='208' c='_ZNK4llvm16AArch64InstrInfo21isBranchOffsetInRangeEjl'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='2051' c='_ZNK4llvm11SIInstrInfo21isBranchOffsetInRangeEjl'/>
<ovr f='llvm/llvm/lib/Target/AVR/AVRInstrInfo.cpp' l='532' c='_ZNK4llvm12AVRInstrInfo21isBranchOffsetInRangeEjl'/>
<ovr f='llvm/llvm/lib/Target/Mips/MipsInstrInfo.cpp' l='279' c='_ZNK4llvm13MipsInstrInfo21isBranchOffsetInRangeEjl'/>
<ovr f='llvm/llvm/lib/Target/RISCV/RISCVInstrInfo.cpp' l='465' c='_ZNK4llvm14RISCVInstrInfo21isBranchOffsetInRangeEjl'/>
