<inh f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='31' c='llvm::BinaryByteStream'/>
<def f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='75' ll='83'/>
<size>40</size>
<doc f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='71'>/// An implementation of BinaryStream whose data is backed by an llvm
/// MemoryBuffer object.  MemoryBufferByteStream owns the MemoryBuffer in
/// question.  As with BinaryByteStream, reading from a MemoryBufferByteStream
/// will never cause a copy.</doc>
<fun r='_ZN4llvm22MemoryBufferByteStreamC1ESt10unique_ptrINS_12MemoryBufferESt14default_deleteIS2_EENS_7support10endiannessE'/>
<mbr r='llvm::MemoryBufferByteStream::MemBuffer' o='256' t='std::unique_ptr&lt;MemoryBuffer&gt;'/>
<use f='llvm/lldb/source/Plugins/ObjectFile/PDB/ObjectFilePDB.cpp' l='183' c='_ZN12lldb_private13ObjectFilePDB11loadPDBFileENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERN4llvm20BumpPtrAllocatorImplINS7_15MallocAllocatorE1986758'/>
<size>40</size>
<use f='llvm/llvm/lib/DebugInfo/PDB/Native/NativeSession.cpp' l='67' c='_ZN4llvm3pdb13NativeSession13createFromPdbESt10unique_ptrINS_12MemoryBufferESt14default_deleteIS3_EERS2_INS0_11IPDBSessionES4_IS7_EE'/>
<use f='llvm/llvm/lib/DebugInfo/PDB/Native/NativeSession.cpp' l='98' c='_ZL11loadPdbFileN4llvm9StringRefERSt10unique_ptrINS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096ELm128EEESt14default_deleteIS4_EE'/>
<size>40</size>
