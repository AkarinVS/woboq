<dec f='llvm/clang/unittests/AST/ASTImporterFixtures.h' l='144' type='std::list&lt;TU&gt;'/>
<use f='llvm/clang/unittests/AST/ASTImporterFixtures.cpp' l='134' u='a' c='_ZN5clang12ast_matchers19ASTImporterTestBase10findFromTUEPNS_4DeclE'/>
<use f='llvm/clang/unittests/AST/ASTImporterFixtures.cpp' l='147' u='m' c='_ZN5clang12ast_matchers19ASTImporterTestBase15getImportedDeclEN4llvm9StringRefENS_12TestLanguageES3_S4_S3_'/>
<use f='llvm/clang/unittests/AST/ASTImporterFixtures.cpp' l='149' u='m' c='_ZN5clang12ast_matchers19ASTImporterTestBase15getImportedDeclEN4llvm9StringRefENS_12TestLanguageES3_S4_S3_'/>
<use f='llvm/clang/unittests/AST/ASTImporterFixtures.cpp' l='181' u='m' c='_ZN5clang12ast_matchers19ASTImporterTestBase9getTuDeclEN4llvm9StringRefENS_12TestLanguageES3_'/>
<use f='llvm/clang/unittests/AST/ASTImporterFixtures.cpp' l='182' u='m' c='_ZN5clang12ast_matchers19ASTImporterTestBase9getTuDeclEN4llvm9StringRefENS_12TestLanguageES3_'/>
<use f='llvm/clang/unittests/AST/ASTImporterFixtures.cpp' l='225' c='_ZN5clang12ast_matchers19ASTImporterTestBaseD1Ev'/>
<offset>832</offset>
<doc f='llvm/clang/unittests/AST/ASTImporterFixtures.h' l='137'>// We may have several From contexts and related translation units. In each
  // AST, the buffers for the source are handled via references and are set
  // during the creation of the AST. These references must point to a valid
  // buffer until the AST is alive. Thus, we must use a list in order to avoid
  // moving of the stored objects because that would mean breaking the
  // references in the AST. By using a vector a move could happen when the
  // vector is expanding, with the list we won&apos;t have these issues.</doc>
