<def f='llvm/lldb/include/lldb/Target/Platform.h' l='862' ll='865' type='llvm::Expected&lt;StructuredData::DictionarySP&gt; lldb_private::Platform::FetchExtendedCrashInformation(lldb_private::Process &amp; process)'/>
<doc f='llvm/lldb/include/lldb/Target/Platform.h' l='847'>/// Gather all of crash informations into a structured data dictionary.
  ///
  /// If the platform have a crashed process with crash information entries,
  /// gather all the entries into an structured data dictionary or return a
  /// nullptr. This dictionary is generic and extensible, as it contains an
  /// array for each different type of crash information.
  ///
  /// \param[in] process
  ///     The crashed process.
  ///
  /// \return
  ///     A structured data dictionary containing at each entry, the crash
  ///     information type as the entry key and the matching  an array as the
  ///     entry value. \b nullptr if not implemented or  if the process has no
  ///     crash information entry. \b error if an error occured.</doc>
<use f='llvm/lldb/source/API/SBProcess.cpp' l='1028' u='c' c='_ZN4lldb9SBProcess27GetExtendedCrashInformationEv'/>
<use f='llvm/lldb/source/Commands/CommandObjectProcess.cpp' l='1297' u='c' c='_ZN26CommandObjectProcessStatus9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<ovr f='llvm/lldb/source/Plugins/Platform/MacOSX/PlatformDarwin.cpp' l='1391' c='_ZN14PlatformDarwin29FetchExtendedCrashInformationERN12lldb_private7ProcessE'/>
