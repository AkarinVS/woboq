<dec f='llvm/lldb/include/lldb/Symbol/Variable.h' l='32' type='void lldb_private::Variable::Variable(lldb::user_id_t uid, const char * name, const char * mangled, const lldb::SymbolFileTypeSP &amp; symfile_type_sp, lldb::ValueType scope, lldb_private::SymbolContextScope * owner_scope, const lldb_private::Variable::RangeList &amp; scope_range, lldb_private::Declaration * decl, const lldb_private::DWARFExpression &amp; location, bool external, bool artificial, bool location_is_constant_data, bool static_member = false)'/>
<doc f='llvm/lldb/include/lldb/Symbol/Variable.h' l='29'>/// Constructors and Destructors.
  ///
  /// \param mangled The mangled or fully qualified name of the variable.</doc>
<def f='llvm/lldb/source/Symbol/Variable.cpp' l='38' ll='50' type='void lldb_private::Variable::Variable(lldb::user_id_t uid, const char * name, const char * mangled, const lldb::SymbolFileTypeSP &amp; symfile_type_sp, lldb::ValueType scope, lldb_private::SymbolContextScope * context, const lldb_private::Variable::RangeList &amp; scope_range, lldb_private::Declaration * decl_ptr, const lldb_private::DWARFExpression &amp; location, bool external, bool artificial, bool location_is_constant_data, bool static_member = false)'/>
