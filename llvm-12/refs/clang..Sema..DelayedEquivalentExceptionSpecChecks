<dec f='llvm/clang/include/clang/Sema/Sema.h' l='883' type='SmallVector&lt;std::pair&lt;FunctionDecl *, FunctionDecl *&gt;, 2&gt;'/>
<use f='llvm/clang/include/clang/Sema/Sema.h' l='12692'/>
<use f='llvm/clang/include/clang/Sema/Sema.h' l='12699' u='a' c='_ZN5clang4Sema31SavePendingParsedClassStateRAII14swapSavedStateEv'/>
<offset>23872</offset>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='877'>/// All the function redeclarations seen during a class definition that had
  /// their exception spec checks delayed, plus the prior declaration they
  /// should be checked against. Except during error recovery, the new decl
  /// should always be a friend declaration, as that&apos;s the only valid way to
  /// redeclare a special member before its class is complete.</doc>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='8593' c='_ZN5clang4Sema32CheckDelayedMemberExceptionSpecsEv'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='8596' u='a' c='_ZN5clang4Sema32CheckDelayedMemberExceptionSpecsEv'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='13380' u='m' c='_ZN5clang4Sema25ActOnFinishCXXMemberDeclsEv'/>
<use f='llvm/clang/lib/Sema/SemaExceptionSpec.cpp' l='308' u='m' c='_ZN5clang4Sema28CheckEquivalentExceptionSpecEPNS_12FunctionDeclES2_'/>
