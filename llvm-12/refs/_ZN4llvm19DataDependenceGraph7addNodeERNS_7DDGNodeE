<dec f='llvm/llvm/include/llvm/Analysis/DDG.h' l='340' type='bool llvm::DataDependenceGraph::addNode(llvm::DataDependenceGraph::NodeType &amp; N)'/>
<use f='llvm/llvm/include/llvm/Analysis/DDG.h' l='364' u='c' c='_ZN4llvm10DDGBuilder14createRootNodeEv'/>
<use f='llvm/llvm/include/llvm/Analysis/DDG.h' l='370' u='c' c='_ZN4llvm10DDGBuilder21createFineGrainedNodeERNS_11InstructionE'/>
<use f='llvm/llvm/include/llvm/Analysis/DDG.h' l='376' u='c' c='_ZN4llvm10DDGBuilder13createPiBlockERKNS_11SmallVectorIPNS_7DDGNodeELj4EEE'/>
<def f='llvm/llvm/lib/Analysis/DDG.cpp' l='221' ll='242' type='bool llvm::DataDependenceGraph::addNode(llvm::DDGNode &amp; N)'/>
<doc f='llvm/llvm/include/llvm/Analysis/DDG.h' l='337'>/// Add node \p N to the graph, if it&apos;s not added yet, and keep track of the
  /// root node as well as pi-blocks and their members. Return true if node is
  /// successfully added.</doc>
