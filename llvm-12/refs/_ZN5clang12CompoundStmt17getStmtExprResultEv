<def f='llvm/clang/include/clang/AST/Stmt.h' l='1490' ll='1496' type='clang::Stmt * clang::CompoundStmt::getStmtExprResult()'/>
<use f='llvm/clang/include/clang/AST/Stmt.h' l='1499' u='c' c='_ZNK5clang12CompoundStmt17getStmtExprResultEv'/>
<doc f='llvm/clang/include/clang/AST/Stmt.h' l='1482'>// Get the Stmt that StmtExpr would consider to be the result of this
  // compound statement. This is used by StmtExpr to properly emulate the GCC
  // compound expression extension, which ignores trailing NullStmts when
  // getting the result of the expression.
  // i.e. ({ 5;;; })
  //           ^^ ignored
  // If we don&apos;t find something that isn&apos;t a NullStmt, just return the last
  // Stmt.</doc>
<use f='llvm/clang/lib/AST/ComputeDependence.cpp' l='164' u='c' c='_ZN5clang17computeDependenceEPNS_8StmtExprEj'/>
<use f='llvm/clang/lib/Sema/TreeTransform.h' l='7097' u='c' c='_ZN5clang13TreeTransform21TransformCompoundStmtEPNS_12CompoundStmtEb'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='14890' u='c' c='_ZN5clang4Sema13BuildStmtExprENS_14SourceLocationEPNS_4StmtES1_j'/>
