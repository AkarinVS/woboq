<dec f='llvm/lldb/include/lldb/Breakpoint/BreakpointLocation.h' l='65' type='bool lldb_private::BreakpointLocation::ShouldStop(lldb_private::StoppointCallbackContext * context)'/>
<doc f='llvm/lldb/include/lldb/Breakpoint/BreakpointLocation.h' l='56'>/// Determines whether we should stop due to a hit at this breakpoint
  /// location.
  ///
  /// Side Effects: This may evaluate the breakpoint condition, and run the
  /// callback.  So this command may do a considerable amount of work.
  ///
  /// \return
  ///     \b true if this breakpoint location thinks we should stop,
  ///     \b false otherwise.</doc>
<def f='llvm/lldb/source/Breakpoint/BreakpointLocation.cpp' l='387' ll='414' type='bool lldb_private::BreakpointLocation::ShouldStop(lldb_private::StoppointCallbackContext * context)'/>
<doc f='llvm/lldb/source/Breakpoint/BreakpointLocation.cpp' l='382'>// RETURNS - true if we should stop at this breakpoint, false if we
// should continue.  Note, we don&apos;t check the thread spec for the breakpoint
// here, since if the breakpoint is not for this thread, then the event won&apos;t
// even get reported, so the check is redundant.</doc>
<use f='llvm/lldb/source/Breakpoint/BreakpointLocationCollection.cpp' l='127' u='c' c='_ZN12lldb_private28BreakpointLocationCollection10ShouldStopEPNS_24StoppointCallbackContextE'/>
<use f='llvm/lldb/source/Breakpoint/BreakpointLocationList.cpp' l='49' u='c' c='_ZN12lldb_private22BreakpointLocationList10ShouldStopEPNS_24StoppointCallbackContextEi'/>
