<dec f='llvm/clang/include/clang/AST/NestedNameSpecifier.h' l='125' type='static clang::NestedNameSpecifier * clang::NestedNameSpecifier::Create(const clang::ASTContext &amp; Context, clang::NestedNameSpecifier * Prefix, clang::IdentifierInfo * II)'/>
<doc f='llvm/clang/include/clang/AST/NestedNameSpecifier.h' l='120'>/// Builds a specifier combining a prefix and an identifier.
  ///
  /// The prefix must be dependent, since nested name specifiers
  /// referencing an identifier are only permitted when the identifier
  /// cannot be resolved.</doc>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='5975' u='c' c='_ZNK5clang10ASTContext31getCanonicalNestedNameSpecifierEPNS_19NestedNameSpecifierE'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='6004' u='c' c='_ZNK5clang10ASTContext31getCanonicalNestedNameSpecifierEPNS_19NestedNameSpecifierE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='8510' u='c' c='_ZN5clang11ASTImporter6ImportEPNS_19NestedNameSpecifierE'/>
<def f='llvm/clang/lib/AST/NestedNameSpecifier.cpp' l='58' ll='69' type='static clang::NestedNameSpecifier * clang::NestedNameSpecifier::Create(const clang::ASTContext &amp; Context, clang::NestedNameSpecifier * Prefix, clang::IdentifierInfo * II)'/>
<use f='llvm/clang/lib/AST/NestedNameSpecifier.cpp' l='577' u='c' c='_ZN5clang29NestedNameSpecifierLocBuilder6ExtendERNS_10ASTContextEPNS_14IdentifierInfoENS_14SourceLocationES5_'/>
