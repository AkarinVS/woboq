<def f='llvm/llvm/include/llvm/IR/Instructions.h' l='1409' type='bool llvm::FCmpInst::isEquality() const'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='1414' u='c' c='_ZNK4llvm8FCmpInst13isCommutativeEv'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='1423' u='c' c='_ZNK4llvm8FCmpInst12isRelationalEv'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='1407'>/// @returns true if the predicate of this instruction is EQ or NE.
  /// Determine if this is an equality predicate.</doc>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='1050' u='c' c='_ZN4llvm21BranchProbabilityInfo27calcFloatingPointHeuristicsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='5787' u='c' c='_ZN4llvm16InstCombinerImpl20foldFCmpIntToFPConstERNS_8FCmpInstEPNS_11InstructionEPNS_8ConstantE'/>
