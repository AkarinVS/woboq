<def f='llvm/lldb/include/lldb/Symbol/ObjectFile.h' l='461' ll='463' type='lldb_private::Address lldb_private::ObjectFile::GetImageInfoAddress(lldb_private::Target * target)'/>
<doc f='llvm/lldb/include/lldb/Symbol/ObjectFile.h' l='449'>/// Similar to Process::GetImageInfoAddress().
  ///
  /// Some platforms embed auxiliary structures useful to debuggers in the
  /// address space of the inferior process.  This method returns the address
  /// of such a structure if the information can be resolved via entries in
  /// the object file.  ELF, for example, provides a means to hook into the
  /// runtime linker so that a debugger may monitor the loading and unloading
  /// of shared libraries.
  ///
  /// \return
  ///     The address of any auxiliary tables, or an invalid address if this
  ///     object file format does not support or contain such information.</doc>
<use f='llvm/lldb/source/Plugins/DynamicLoader/POSIX-DYLD/DYLDRendezvous.cpp' l='51' u='c' c='_ZL24ResolveRendezvousAddressPN12lldb_private7ProcessE'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/POSIX-DYLD/DynamicLoaderPOSIXDYLD.cpp' l='129' u='c' c='_ZN22DynamicLoaderPOSIXDYLD9DidAttachEv'/>
<ovr f='llvm/lldb/source/Plugins/ObjectFile/ELF/ObjectFileELF.cpp' l='817' c='_ZN13ObjectFileELF19GetImageInfoAddressEPN12lldb_private6TargetE'/>
<use f='llvm/lldb/source/Plugins/Process/elf-core/ProcessElfCore.cpp' l='407' u='c' c='_ZN14ProcessElfCore19GetImageInfoAddressEv'/>
