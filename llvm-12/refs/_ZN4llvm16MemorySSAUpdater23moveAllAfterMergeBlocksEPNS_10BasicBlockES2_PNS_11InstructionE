<dec f='llvm/llvm/include/llvm/Analysis/MemorySSAUpdater.h' l='163' type='void llvm::MemorySSAUpdater::moveAllAfterMergeBlocks(llvm::BasicBlock * From, llvm::BasicBlock * To, llvm::Instruction * Start)'/>
<doc f='llvm/llvm/include/llvm/Analysis/MemorySSAUpdater.h' l='149'>/// `From` block was merged into `To`. There is a CFG edge from `To` to
  /// `From`.`To` still branches to `From`, but all instructions were moved and
  /// `From` is now an empty block; `From` is about to be deleted. Move all
  /// accesses from `From` to `To` starting at instruction `Start`. `To` may
  /// have multiple successors, `From` has a single predecessor. `From` may have
  /// successors with MPhi nodes, replace their incoming block with `To`.
  /// |------|        |------|
  /// |  To  |        |  To  |
  /// |------|        |      |
  ///    ||      =&gt;   |      |
  ///    \/           |      |
  /// |------|        |      |  &lt;- Start
  /// | From |        |      |
  /// |------|        |------|</doc>
<def f='llvm/llvm/lib/Analysis/MemorySSAUpdater.cpp' l='1261' ll='1269' type='void llvm::MemorySSAUpdater::moveAllAfterMergeBlocks(llvm::BasicBlock * From, llvm::BasicBlock * To, llvm::Instruction * Start)'/>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='264' u='c' c='_ZN4llvm25MergeBlockIntoPredecessorEPNS_10BasicBlockEPNS_14DomTreeUpdaterEPNS_8LoopInfoEPNS_16MemorySSAUpdaterEPNS_23MemoryDependenceResultsEb'/>
