<dec f='llvm/clang/include/clang/AST/DeclBase.h' l='268' type='llvm::PointerUnion&lt;DeclContext *, MultipleDC *&gt;'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='270' u='m' c='_ZNK5clang4Decl10isInSemaDCEv'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='271' u='m' c='_ZNK5clang4Decl13isOutOfSemaDCEv'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='274' u='m' c='_ZNK5clang4Decl13getMultipleDCEv'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='278' u='m' c='_ZNK5clang4Decl13getSemanticDCEv'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='382' u='w' c='_ZN5clang4DeclC1ENS0_4KindEPNS_11DeclContextENS_14SourceLocationE'/>
<offset>128</offset>
<doc f='llvm/clang/include/clang/AST/DeclBase.h' l='255'>/// DeclCtx - Holds either a DeclContext* or a MultipleDC*.
  /// For declarations that don&apos;t contain C++ scope specifiers, it contains
  /// the DeclContext where the Decl was declared.
  /// For declarations with C++ scope specifiers, it contains a MultipleDC*
  /// with the context where it semantically belongs (SemanticDC) and the
  /// context where it was lexically declared (LexicalDC).
  /// e.g.:
  ///
  ///   namespace A {
  ///      void f(); // SemanticDC == LexicalDC == &apos;namespace A&apos;
  ///   }
  ///   void A::f(); // SemanticDC == namespace &apos;A&apos;
  ///                // LexicalDC == global namespace</doc>
<use f='llvm/clang/lib/AST/DeclBase.cpp' l='328' u='w' c='_ZN5clang4Decl14setDeclContextEPNS_11DeclContextE'/>
<use f='llvm/clang/lib/AST/DeclBase.cpp' l='358' u='w' c='_ZN5clang4Decl19setDeclContextsImplEPNS_11DeclContextES2_RNS_10ASTContextE'/>
<use f='llvm/clang/lib/AST/DeclBase.cpp' l='363' u='w' c='_ZN5clang4Decl19setDeclContextsImplEPNS_11DeclContextES2_RNS_10ASTContextE'/>
