<dec f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='591' type='void llvm::getGuaranteedNonPoisonOps(const llvm::Instruction * I, SmallPtrSetImpl&lt;const llvm::Value *&gt; &amp; Ops)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='589'>/// Insert operands of I into Ops such that I will trigger undefined behavior
  /// if I is executed and that operand has a poison value.</doc>
<def f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='5076' ll='5117' type='void llvm::getGuaranteedNonPoisonOps(const llvm::Instruction * I, SmallPtrSetImpl&lt;const llvm::Value *&gt; &amp; Operands)'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='5122' u='c' c='_ZN4llvm13mustTriggerUBEPKNS_11InstructionERKNS_8SmallSetIPKNS_5ValueELj16ESt4lessIS6_EEE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp' l='286' u='c' c='_ZL7rewriteRN4llvm8FunctionE'/>
