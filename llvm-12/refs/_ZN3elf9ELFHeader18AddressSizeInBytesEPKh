<dec f='llvm/lldb/source/Plugins/ObjectFile/ELF/ELFHeader.h' l='145' type='static unsigned int elf::ELFHeader::AddressSizeInBytes(const uint8_t * magic)'/>
<def f='llvm/lldb/source/Plugins/ObjectFile/ELF/ELFHeader.cpp' l='161' ll='174' type='static unsigned int elf::ELFHeader::AddressSizeInBytes(const uint8_t * magic)'/>
<doc f='llvm/lldb/source/Plugins/ObjectFile/ELF/ELFHeader.h' l='137'>/// Examines at most EI_NIDENT bytes starting from the given address and
  /// determines the address size of the underlying ELF file.  This function
  /// should only be called on an pointer for which MagicBytesMatch returns
  /// true.
  ///
  /// \return
  ///    The number of bytes forming an address in the ELF file (either 4 or
  ///    8), else zero if the address size could not be determined.</doc>
<use f='llvm/lldb/source/Plugins/ObjectFile/ELF/ObjectFileELF.cpp' l='376' u='c' c='_ZN13ObjectFileELF14CreateInstanceERKSt10shared_ptrIN12lldb_private6ModuleEERS0_INS1_10DataBufferEEmPKNS1_8FileSpecEmm'/>
<use f='llvm/lldb/source/Plugins/ObjectFile/ELF/ObjectFileELF.cpp' l='394' u='c' c='_ZN13ObjectFileELF20CreateMemoryInstanceERKSt10shared_ptrIN12lldb_private6ModuleEERS0_INS1_10DataBufferEERKS0_INS1_7ProcessEEm'/>
