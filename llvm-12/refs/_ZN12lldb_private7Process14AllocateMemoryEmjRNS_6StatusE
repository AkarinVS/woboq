<dec f='llvm/lldb/include/lldb/Target/Process.h' l='1669' type='lldb::addr_t lldb_private::Process::AllocateMemory(size_t size, uint32_t permissions, lldb_private::Status &amp; error)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='1648'>/// The public interface to allocating memory in the process.
  ///
  /// This function will allocate memory in the process&apos;s address space.  This
  /// can&apos;t rely on the generic function calling mechanism, since that
  /// requires this function.
  ///
  /// \param[in] size
  ///     The size of the allocation requested.
  ///
  /// \param[in] permissions
  ///     Or together any of the lldb::Permissions bits.  The permissions on
  ///     a given memory allocation can&apos;t be changed after allocation.  Note
  ///     that a block that isn&apos;t set writable can still be written on from
  ///     lldb,
  ///     just not by the process itself.
  ///
  /// \param[in,out] error
  ///     An error object to fill in if things go wrong.
  /// \return
  ///     The address of the allocated buffer in the process, or
  ///     LLDB_INVALID_ADDRESS if the allocation failed.</doc>
<use f='llvm/lldb/source/Expression/FunctionCaller.cpp' l='151' u='c' c='_ZN12lldb_private14FunctionCaller22WriteFunctionArgumentsERNS_16ExecutionContextERmRNS_9ValueListERNS_17DiagnosticManagerE'/>
<use f='llvm/lldb/source/Expression/IRMemoryMap.cpp' l='70' u='c' c='_ZN12lldb_private11IRMemoryMap9FindSpaceEm'/>
<use f='llvm/lldb/source/Expression/IRMemoryMap.cpp' l='339' u='c' c='_ZN12lldb_private11IRMemoryMap6MallocEmhjNS0_16AllocationPolicyEbRNS_6StatusE'/>
<use f='llvm/lldb/source/Expression/IRMemoryMap.cpp' l='366' u='c' c='_ZN12lldb_private11IRMemoryMap6MallocEmhjNS0_16AllocationPolicyEbRNS_6StatusE'/>
<use f='llvm/lldb/source/Plugins/LanguageRuntime/ObjC/AppleObjCRuntime/AppleObjCRuntimeV2.cpp' l='1382' u='c' c='_ZN12lldb_private18AppleObjCRuntimeV231UpdateISAToDescriptorMapDynamicER16RemoteNXMapTable'/>
<use f='llvm/lldb/source/Plugins/LanguageRuntime/ObjC/AppleObjCRuntime/AppleObjCRuntimeV2.cpp' l='1660' u='c' c='_ZN12lldb_private18AppleObjCRuntimeV235UpdateISAToDescriptorMapSharedCacheEv'/>
<use f='llvm/lldb/source/Plugins/Platform/POSIX/PlatformPOSIX.cpp' l='736' u='c' c='_ZN13PlatformPOSIX11DoLoadImageEPN12lldb_private7ProcessERKNS0_8FileSpecEPKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_EERNS0_6StatusEPS3_'/>
<use f='llvm/lldb/source/Plugins/Platform/POSIX/PlatformPOSIX.cpp' l='810' u='c' c='_ZN13PlatformPOSIX11DoLoadImageEPN12lldb_private7ProcessERKNS0_8FileSpecEPKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_EERNS0_6StatusEPS3_'/>
<use f='llvm/lldb/source/Plugins/Platform/POSIX/PlatformPOSIX.cpp' l='838' u='c' c='_ZN13PlatformPOSIX11DoLoadImageEPN12lldb_private7ProcessERKNS0_8FileSpecEPKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_EERNS0_6StatusEPS3_'/>
<use f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetItemInfoHandler.cpp' l='285' u='c' c='_ZN12lldb_private23AppleGetItemInfoHandler11GetItemInfoERNS_6ThreadEmmmRNS_6StatusE'/>
<use f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetPendingItemsHandler.cpp' l='288' u='c' c='_ZN12lldb_private27AppleGetPendingItemsHandler15GetPendingItemsERNS_6ThreadEmmmRNS_6StatusE'/>
<use f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetQueuesHandler.cpp' l='287' u='c' c='_ZN12lldb_private21AppleGetQueuesHandler16GetCurrentQueuesERNS_6ThreadEmmRNS_6StatusE'/>
<use f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetThreadItemInfoHandler.cpp' l='289' u='c' c='_ZN12lldb_private29AppleGetThreadItemInfoHandler17GetThreadItemInfoERNS_6ThreadEmmmRNS_6StatusE'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='2244' ll='2265' type='lldb::addr_t lldb_private::Process::AllocateMemory(size_t size, uint32_t permissions, lldb_private::Status &amp; error)'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='2269' u='c' c='_ZN12lldb_private7Process15CallocateMemoryEmjRNS_6StatusE'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='2282' u='c' c='_ZN12lldb_private7Process6CanJITEv'/>
