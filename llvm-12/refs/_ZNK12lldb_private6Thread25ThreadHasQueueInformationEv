<def f='llvm/lldb/include/lldb/Target/Thread.h' l='393' type='bool lldb_private::Thread::ThreadHasQueueInformation() const'/>
<doc f='llvm/lldb/include/lldb/Target/Thread.h' l='381'>/// Whether this Thread already has all the Queue information cached or not
  ///
  /// A Thread may be associated with a libdispatch work Queue at a given
  /// public stop event.  If so, the thread can satisify requests like
  /// GetQueueLibdispatchQueueAddress, GetQueueKind, GetQueueName, and
  /// GetQueueID
  /// either from information from the remote debug stub when it is initially
  /// created, or it can query the SystemRuntime for that information.
  ///
  /// This method allows the SystemRuntime to discover if a thread has this
  /// information already, instead of calling the thread to get the information
  /// and having the thread call the SystemRuntime again.</doc>
<ovr f='llvm/lldb/source/Plugins/Process/gdb-remote/ThreadGDBRemote.cpp' l='206' c='_ZNK12lldb_private18process_gdb_remote15ThreadGDBRemote25ThreadHasQueueInformationEv'/>
<use f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/SystemRuntimeMacOSX.cpp' l='723' u='c' c='_ZN19SystemRuntimeMacOSX17PopulateQueueListERN12lldb_private9QueueListE'/>
