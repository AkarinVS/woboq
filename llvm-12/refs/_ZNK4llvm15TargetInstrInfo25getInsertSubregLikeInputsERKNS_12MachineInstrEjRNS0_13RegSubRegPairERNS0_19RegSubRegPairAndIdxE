<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1227' ll='1232' type='bool llvm::TargetInstrInfo::getInsertSubregLikeInputs(const llvm::MachineInstr &amp; MI, unsigned int DefIdx, llvm::TargetInstrInfo::RegSubRegPair &amp; BaseReg, llvm::TargetInstrInfo::RegSubRegPairAndIdx &amp; InsertedReg) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1219'>/// Target-dependent implementation of getInsertSubregInputs.
  ///
  /// \returns true if it is possible to build the equivalent
  /// INSERT_SUBREG inputs with the pair \p MI, \p DefIdx. False otherwise.
  ///
  /// \pre MI.isInsertSubregLike().
  ///
  /// \see TargetInstrInfo::getInsertSubregInputs.</doc>
<use f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='1345' u='c' c='_ZNK4llvm15TargetInstrInfo21getInsertSubregInputsERKNS_12MachineInstrEjRNS0_13RegSubRegPairERNS0_19RegSubRegPairAndIdxE'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='5386' c='_ZNK4llvm16ARMBaseInstrInfo25getInsertSubregLikeInputsERKNS_12MachineInstrEjRNS_15TargetInstrInfo13RegSubRegPairERNS4_19RegSubRegPairAndIdxE'/>
