<dec f='llvm/polly/lib/External/isl/isl_sample.h' l='28' type='int isl_tab_set_initial_basis_with_cone(struct isl_tab * tab, struct isl_tab * tab_cone)'/>
<use f='llvm/polly/lib/External/isl/isl_affine_hull.c' l='645' u='c' c='isl_tab_detect_equalities'/>
<def f='llvm/polly/lib/External/isl/isl_sample.c' l='1085' ll='1119' type='int isl_tab_set_initial_basis_with_cone(struct isl_tab * tab, struct isl_tab * tab_cone)'/>
<doc f='llvm/polly/lib/External/isl/isl_sample.c' l='1071'>/* Compute and return an initial basis for the possibly
 * unbounded tableau &quot;tab&quot;.  &quot;tab_cone&quot; is a tableau
 * for the corresponding recession cone.
 * Additionally, add constraints to &quot;tab&quot; that ensure
 * that any rational value for the unbounded directions
 * can be rounded up to an integer value.
 *
 * If the tableau is bounded, i.e., if the recession cone
 * is zero-dimensional, then we just use inital_basis.
 * Otherwise, we construct a basis whose first directions
 * correspond to equalities, followed by bounded directions,
 * i.e., equalities in the recession cone.
 * The remaining directions are then unbounded.
 */</doc>
