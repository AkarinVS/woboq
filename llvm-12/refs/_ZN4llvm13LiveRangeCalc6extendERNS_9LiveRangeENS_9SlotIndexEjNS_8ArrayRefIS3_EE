<dec f='llvm/llvm/include/llvm/CodeGen/LiveRangeCalc.h' l='208' type='void llvm::LiveRangeCalc::extend(llvm::LiveRange &amp; LR, llvm::SlotIndex Use, unsigned int PhysReg, ArrayRef&lt;llvm::SlotIndex&gt; Undefs)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/LiveRangeCalc.h' l='194'>//===--------------------------------------------------------------------===//
  // Mid-level interface.
  //===--------------------------------------------------------------------===//
  //
  // Modify existing live ranges.
  //

  /// Extend the live range of @p LR to reach @p Use.
  ///
  /// The existing values in @p LR must be live so they jointly dominate @p Use.
  /// If @p Use is not dominated by a single existing value, PHI-defs are
  /// inserted as required to preserve SSA form.
  ///
  /// PhysReg, when set, is used to verify live-in lists on basic blocks.</doc>
<use f='llvm/llvm/lib/CodeGen/LiveIntervalCalc.cpp' l='203' u='c' c='_ZN4llvm16LiveIntervalCalc12extendToUsesERNS_9LiveRangeENS_8RegisterENS_11LaneBitmaskEPNS_12LiveIntervalE'/>
<use f='llvm/llvm/lib/CodeGen/LiveIntervals.cpp' l='637' u='c' c='_ZN4llvm13LiveIntervals15extendToIndicesERNS_9LiveRangeENS_8ArrayRefINS_9SlotIndexEEES5_'/>
<def f='llvm/llvm/lib/CodeGen/LiveRangeCalc.cpp' l='89' ll='112' type='void llvm::LiveRangeCalc::extend(llvm::LiveRange &amp; LR, llvm::SlotIndex Use, unsigned int PhysReg, ArrayRef&lt;llvm::SlotIndex&gt; Undefs)'/>
<use f='llvm/llvm/lib/CodeGen/SplitKit.cpp' l='1265' u='c' c='_ZN4llvm11SplitEditor14extendPHIRangeERNS_17MachineBasicBlockERNS_16LiveIntervalCalcERNS_9LiveRangeENS_11LaneBitmaskENS_8ArrayRefINS_9SlotIndexEEE'/>
<use f='llvm/llvm/lib/CodeGen/SplitKit.cpp' l='1377' u='c' c='_ZN4llvm11SplitEditor15rewriteAssignedEb'/>
<use f='llvm/llvm/lib/CodeGen/SplitKit.cpp' l='1403' u='c' c='_ZN4llvm11SplitEditor15rewriteAssignedEb'/>
