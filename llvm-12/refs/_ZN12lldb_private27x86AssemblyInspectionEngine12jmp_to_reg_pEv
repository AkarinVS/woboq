<dec f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.h' l='117' type='bool lldb_private::x86AssemblyInspectionEngine::jmp_to_reg_p()'/>
<def f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='677' ll='716' type='bool lldb_private::x86AssemblyInspectionEngine::jmp_to_reg_p()'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='1239' u='c' c='_ZN12lldb_private27x86AssemblyInspectionEngine36GetNonCallSiteUnwindPlanFromAssemblyEPhmRNS_12AddressRangeERNS_10UnwindPlanE'/>
<doc f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='670'>// Returns true if this is a jmp instruction where we can&apos;t
// know the destination address statically. 
//
// ff e0                                   jmpq   *%rax
// ff e1                                   jmpq   *%rcx
// ff 60 28                                jmpq   *0x28(%rax)
// ff 60 60                                jmpq   *0x60(%rax)</doc>
