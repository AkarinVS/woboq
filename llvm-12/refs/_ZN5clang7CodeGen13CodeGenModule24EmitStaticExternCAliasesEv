<dec f='llvm/clang/lib/CodeGen/CodeGenModule.h' l='1541' type='void clang::CodeGen::CodeGenModule::EmitStaticExternCAliases()'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenModule.h' l='1539'>/// Emit aliases for internal-linkage declarations inside &quot;C&quot; language
  /// linkage specifications, giving them the &quot;expected&quot; name where possible.</doc>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='486' u='c' c='_ZN5clang7CodeGen13CodeGenModule7ReleaseEv'/>
<def f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='5969' ll='5978' type='void clang::CodeGen::CodeGenModule::EmitStaticExternCAliases()'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='5964'>/// For each function which is declared within an extern &quot;C&quot; region and marked
/// as &apos;used&apos;, but has internal linkage, create an alias from the unmangled
/// name to the mangled name if possible. People expect to be able to refer
/// to such functions with an unmangled name from inline assembly within the
/// same translation unit.</doc>
