<dec f='llvm/llvm/include/llvm/IR/DiagnosticHandler.h' l='56' type='bool llvm::DiagnosticHandler::isMissedOptRemarkEnabled(llvm::StringRef PassName) const'/>
<use f='llvm/llvm/include/llvm/IR/DiagnosticHandler.h' l='64' u='c' c='_ZNK4llvm17DiagnosticHandler18isAnyRemarkEnabledENS_9StringRefE'/>
<doc f='llvm/llvm/include/llvm/IR/DiagnosticHandler.h' l='54'>/// Return true if missed optimization remarks are enabled, override
  /// to provide different implementation.</doc>
<use f='llvm/llvm/include/llvm/CodeGen/MachineOptimizationRemarkEmitter.h' l='103' u='c' c='_ZNK4llvm31MachineOptimizationRemarkMissed9isEnabledEv'/>
<ovr f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='66' c='_ZNK5clang22ClangDiagnosticHandler24isMissedOptRemarkEnabledEN4llvm9StringRefE'/>
<use f='llvm/llvm/lib/Analysis/InlineAdvisor.cpp' l='100' u='c' c='_ZL22getDefaultInlineAdviceRN4llvm8CallBaseERNS_15AnalysisManagerINS_8FunctionEJEEERKNS_12InlineParamsE'/>
<def f='llvm/llvm/lib/IR/DiagnosticHandler.cpp' l='78' ll='81' type='bool llvm::DiagnosticHandler::isMissedOptRemarkEnabled(llvm::StringRef PassName) const'/>
<use f='llvm/llvm/lib/IR/DiagnosticInfo.cpp' l='297' u='c' c='_ZNK4llvm24OptimizationRemarkMissed9isEnabledEv'/>
<use f='llvm/llvm/lib/Transforms/IPO/PartialInlining.cpp' l='783' u='c' c='_ZNK12_GLOBAL__N_118PartialInlinerImpl19shouldPartialInlineERN4llvm8CallBaseERNS0_14FunctionClonerENS1_14BlockFrequencyERNS1_25OptimizationRemarkEmitterE'/>
