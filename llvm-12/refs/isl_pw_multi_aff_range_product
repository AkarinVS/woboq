<dec f='llvm/polly/lib/External/isl/include/isl/aff.h' l='708' type='isl_pw_multi_aff * isl_pw_multi_aff_range_product(isl_pw_multi_aff * pma1, isl_pw_multi_aff * pma2)'/>
<use f='llvm/polly/lib/External/isl/include/isl/isl-noexceptions.h' l='12514' u='c' c='_ZNK3isl12noexceptions12pw_multi_aff13range_productES1_'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='5332' u='c' c='pw_multi_aff_from_map_stride'/>
<def f='llvm/polly/lib/External/isl/isl_aff.c' l='6231' ll='6241' type='isl_pw_multi_aff * isl_pw_multi_aff_range_product(isl_pw_multi_aff * pma1, isl_pw_multi_aff * pma2)'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='6315' u='a' c='range_product_entry'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='6766' u='c' c='isl_pw_multi_aff_from_multi_pw_aff'/>
<doc f='llvm/polly/lib/External/isl/isl_aff.c' l='6228'>/* Given two isl_pw_multi_affs A -&gt; B and C -&gt; D,
 * construct an isl_pw_multi_aff (A * C) -&gt; [B -&gt; D].
 */</doc>
