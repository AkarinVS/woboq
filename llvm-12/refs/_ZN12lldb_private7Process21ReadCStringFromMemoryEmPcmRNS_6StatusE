<dec f='llvm/lldb/include/lldb/Target/Process.h' l='1493' type='size_t lldb_private::Process::ReadCStringFromMemory(lldb::addr_t vm_addr, char * cstr, size_t cstr_max_len, lldb_private::Status &amp; error)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='1486'>/// Read a NULL terminated C string from memory
  ///
  /// This function will read a cache page at a time until the NULL
  /// C string terminator is found. It will stop reading if the NULL
  /// termination byte isn&apos;t found before reading \a cstr_max_len bytes, and
  /// the results are always guaranteed to be NULL terminated (at most
  /// cstr_max_len - 1 bytes will be read).</doc>
<use f='llvm/lldb/source/API/SBProcess.cpp' l='907' u='c' c='_ZN4lldb9SBProcess21ReadCStringFromMemoryEmPvmRNS_7SBErrorE'/>
<use f='llvm/lldb/source/DataFormatters/StringPrinter.cpp' l='465' u='c' c='_ZN12lldb_private10formattersL32ReadEncodedBufferAndDumpToStreamENS0_13StringPrinter17StringElementTypeERKNS1_32ReadStringAndDumpToStreamOptionsEPFN4l4712174'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderMacOSXDYLD.cpp' l='679' u='c' c='_ZN23DynamicLoaderMacOSXDYLD14ReadImageInfosEmjRSt6vectorIN12lldb_private19DynamicLoaderDarwin9ImageInfoESaIS3_EE'/>
<use f='llvm/lldb/source/Plugins/LanguageRuntime/ObjC/AppleObjCRuntime/AppleObjCClassDescriptorV2.cpp' l='174' u='c' c='_ZN12lldb_private17ClassDescriptorV210class_ro_t4ReadEPNS_7ProcessEm'/>
<use f='llvm/lldb/source/Plugins/LanguageRuntime/ObjC/AppleObjCRuntime/AppleObjCRuntime.cpp' l='209' u='c' c='_ZN12lldb_private16AppleObjCRuntime20GetObjectDescriptionERNS_6StreamERNS_5ValueEPNS_21ExecutionContextScopeE'/>
<use f='llvm/lldb/source/Plugins/LanguageRuntime/ObjC/AppleObjCRuntime/AppleObjCRuntimeV1.cpp' l='238' u='c' c='_ZN12lldb_private18AppleObjCRuntimeV117ClassDescriptorV110InitializeEmSt10shared_ptrINS_7ProcessEE'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='1910' u='c' c='_ZN12lldb_private7Process21ReadCStringFromMemoryEmRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_6StatusE'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='1977' ll='2021' type='size_t lldb_private::Process::ReadCStringFromMemory(lldb::addr_t addr, char * dst, size_t dst_max_len, lldb_private::Status &amp; result_error)'/>
<doc f='llvm/lldb/source/Target/Process.cpp' l='1975'>// Deprecated in favor of ReadStringFromMemory which has wchar support and
// correct code to find null terminators.</doc>
