<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1390' type='void llvm::ScalarEvolution::BackedgeTakenInfo::BackedgeTakenInfo(ArrayRef&lt;llvm::ScalarEvolution::BackedgeTakenInfo::EdgeExitInfo&gt; ExitCounts, bool IsComplete, const llvm::SCEV * ConstantMax, bool MaxOrZero)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1389'>/// Initialize BackedgeTakenInfo from a list of exact exit counts.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7329' ll='7355' type='void llvm::ScalarEvolution::BackedgeTakenInfo::BackedgeTakenInfo(ArrayRef&lt;ScalarEvolution::BackedgeTakenInfo::EdgeExitInfo&gt; ExitCounts, bool IsComplete, const llvm::SCEV * ConstantMax, bool MaxOrZero)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7441' u='c' c='_ZN4llvm15ScalarEvolution25computeBackedgeTakenCountEPKNS_4LoopEb'/>
<doc f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7327'>/// Allocate memory for BackedgeTakenInfo and copy the not-taken count of each
/// computable exit into a persistent ExitNotTakenInfo array.</doc>
