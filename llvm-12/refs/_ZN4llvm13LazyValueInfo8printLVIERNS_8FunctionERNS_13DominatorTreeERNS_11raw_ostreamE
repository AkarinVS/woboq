<dec f='llvm/llvm/include/llvm/Analysis/LazyValueInfo.h' l='112' type='void llvm::LazyValueInfo::printLVI(llvm::Function &amp; F, llvm::DominatorTree &amp; DTree, llvm::raw_ostream &amp; OS)'/>
<def f='llvm/llvm/lib/Analysis/LazyValueInfo.cpp' l='1875' ll='1879' type='void llvm::LazyValueInfo::printLVI(llvm::Function &amp; F, llvm::DominatorTree &amp; DTree, llvm::raw_ostream &amp; OS)'/>
<use f='llvm/llvm/lib/Analysis/LazyValueInfo.cpp' l='1955' u='c' c='_ZN12_GLOBAL__N_120LazyValueInfoPrinter13runOnFunctionERN4llvm8FunctionE'/>
<doc f='llvm/llvm/include/llvm/Analysis/LazyValueInfo.h' l='109'>/// Print the \LazyValueInfo Analysis.
  /// We pass in the DTree that is required for identifying which basic blocks
  /// we can solve/print for, in the LVIPrinter.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='337' u='c' c='_ZN12_GLOBAL__N_113JumpThreading13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='367' u='c' c='_ZN4llvm17JumpThreadingPass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
