<dec f='llvm/llvm/tools/llvm-objcopy/wasm/Writer.h' l='41' type='static llvm::objcopy::wasm::Writer::SectionHeader llvm::objcopy::wasm::Writer::createSectionHeader(const llvm::objcopy::wasm::Section &amp; S, size_t &amp; SectionSize)'/>
<doc f='llvm/llvm/tools/llvm-objcopy/wasm/Writer.h' l='32'>/// Generate a wasm section section header for S.
  /// The header consists of
  /// * A one-byte section ID (aka the section type).
  /// * The size of the section contents, encoded as ULEB128.
  /// * If the section is a custom section (type 0) it also has a name, which is
  ///   encoded as a length-prefixed string. The encoded section size *includes*
  ///   this string.
  /// See https://webassembly.github.io/spec/core/binary/modules.html#sections
  /// Return the header and store the total size in SectionSize.</doc>
<def f='llvm/llvm/tools/llvm-objcopy/wasm/Writer.cpp' l='22' ll='42' type='static Writer::SectionHeader llvm::objcopy::wasm::Writer::createSectionHeader(const llvm::objcopy::wasm::Section &amp; S, size_t &amp; SectionSize)'/>
<use f='llvm/llvm/tools/llvm-objcopy/wasm/Writer.cpp' l='50' u='c' c='_ZN4llvm7objcopy4wasm6Writer8finalizeEv'/>
