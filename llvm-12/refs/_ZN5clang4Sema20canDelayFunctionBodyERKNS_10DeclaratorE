<dec f='llvm/clang/include/clang/Sema/Sema.h' l='2788' type='bool clang::Sema::canDelayFunctionBody(const clang::Declarator &amp; D)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='2780'>/// Determine whether we can delay parsing the body of a function or
  /// function template until it is used, assuming we don&apos;t care about emitting
  /// code for that function.
  ///
  /// This will be \c false if we may need the body of the function in the
  /// middle of parsing an expression (where it&apos;s impractical to switch to
  /// parsing a different function), for instance, if it&apos;s constexpr in C++11
  /// or has an &apos;auto&apos; return type in C++14. These cases are essentially bugs.</doc>
<use f='llvm/clang/lib/Parse/Parser.cpp' l='1224' u='c' c='_ZN5clang6Parser23ParseFunctionDefinitionERNS_17ParsingDeclaratorERKNS0_18ParsedTemplateInfoEPNS0_18LateParsedAttrListE'/>
<def f='llvm/clang/lib/Sema/SemaDecl.cpp' l='14202' ll='14224' type='bool clang::Sema::canDelayFunctionBody(const clang::Declarator &amp; D)'/>
