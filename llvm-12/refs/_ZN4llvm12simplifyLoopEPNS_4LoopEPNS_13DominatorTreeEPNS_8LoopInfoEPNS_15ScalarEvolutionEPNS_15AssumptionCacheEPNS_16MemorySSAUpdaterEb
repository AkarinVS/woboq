<dec f='llvm/llvm/include/llvm/Transforms/Utils/LoopSimplify.h' l='64' type='bool llvm::simplifyLoop(llvm::Loop * L, llvm::DominatorTree * DT, llvm::LoopInfo * LI, llvm::ScalarEvolution * SE, llvm::AssumptionCache * AC, llvm::MemorySSAUpdater * MSSAU, bool PreserveLCSSA)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/LoopSimplify.h' l='58'>/// Simplify each loop in a loop nest recursively.
///
/// This takes a potentially un-simplified loop L (and its children) and turns
/// it into a simplified loop nest with preheaders and single backedges. It will
/// update \c DominatorTree, \c LoopInfo, \c ScalarEvolution and \c MemorySSA
/// analyses if they&apos;re non-null, and LCSSA if \c PreserveLCSSA is true.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp' l='1563' u='c' c='_ZN12_GLOBAL__N_115LoopConstrainer3runEv'/>
<use f='llvm/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp' l='1782' u='c' c='_ZN4llvm8IRCEPass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp' l='1827' u='c' c='_ZN12_GLOBAL__N_114IRCELegacyPass13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp' l='626' u='c' c='_ZL25eliminateLoadsAcrossLoopsRN4llvm8FunctionERNS_8LoopInfoERNS_13DominatorTreeEPNS_18BlockFrequencyInfoEPNS_18ProfileSummaryInfoEPNS_15ScalarEvoluti10033544'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp' l='442' u='c' c='_ZL21tryToUnrollAndJamLoopRN4llvm8FunctionERNS_13DominatorTreeERNS_8LoopInfoERNS_15ScalarEvolutionERKNS_19TargetTransformInfoERNS_15AssumptionCacheERN10081398'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp' l='1420' u='c' c='_ZN4llvm14LoopUnrollPass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopPeel.cpp' l='857' u='c' c='_ZN4llvm8peelLoopEPNS_4LoopEjPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheEb'/>
<def f='llvm/llvm/lib/Transforms/Utils/LoopSimplify.cpp' l='726' ll='759' type='bool llvm::simplifyLoop(llvm::Loop * L, llvm::DominatorTree * DT, llvm::LoopInfo * LI, llvm::ScalarEvolution * SE, llvm::AssumptionCache * AC, llvm::MemorySSAUpdater * MSSAU, bool PreserveLCSSA)'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopSimplify.cpp' l='836' u='c' c='_ZN12_GLOBAL__N_112LoopSimplify13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopSimplify.cpp' l='867' u='c' c='_ZN4llvm16LoopSimplifyPass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnroll.cpp' l='945' u='c' c='_ZN4llvm10UnrollLoopEPNS_4LoopENS_17UnrollLoopOptionsEPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheEPKNS_19TargetTrans5476875'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnroll.cpp' l='949' u='c' c='_ZN4llvm10UnrollLoopEPNS_4LoopENS_17UnrollLoopOptionsEPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheEPKNS_19TargetTrans5476875'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='9559' u='c' c='_ZN4llvm17LoopVectorizePass11processLoopEPNS_4LoopE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='9653' u='c' c='_ZN4llvm17LoopVectorizePass7runImplERNS_8FunctionERNS_15ScalarEvolutionERNS_8LoopInfoERNS_19TargetTransformInfoERNS_13DominatorTreeERNS_18BlockFrequen2739751'/>
