<def f='llvm/clang/include/clang/Lex/PPCallbacks.h' l='60' ll='62' type='void clang::PPCallbacks::FileSkipped(const clang::FileEntryRef &amp; SkippedFile, const clang::Token &amp; FilenameTok, SrcMgr::CharacteristicKind FileType)'/>
<ovr f='llvm/clang/include/clang/Lex/PPCallbacks.h' l='393' c='_ZN5clang18PPChainedCallbacks11FileSkippedERKNS_12FileEntryRefERKNS_5TokenENS_6SrcMgr18CharacteristicKindE'/>
<use f='llvm/clang/include/clang/Lex/PPCallbacks.h' l='395' u='c' c='_ZN5clang18PPChainedCallbacks11FileSkippedERKNS_12FileEntryRefERKNS_5TokenENS_6SrcMgr18CharacteristicKindE'/>
<use f='llvm/clang/include/clang/Lex/PPCallbacks.h' l='396' u='c' c='_ZN5clang18PPChainedCallbacks11FileSkippedERKNS_12FileEntryRefERKNS_5TokenENS_6SrcMgr18CharacteristicKindE'/>
<doc f='llvm/clang/include/clang/Lex/PPCallbacks.h' l='52'>/// Callback invoked whenever a source file is skipped as the result
  /// of header guard optimization.
  ///
  /// \param SkippedFile The file that is skipped instead of entering \#include
  ///
  /// \param FilenameTok The file name token in \#include &quot;FileName&quot; directive
  /// or macro expanded file name token from \#include MACRO(PARAMS) directive.
  /// Note that FilenameTok contains corresponding quotes/angles symbols.</doc>
<ovr f='llvm/clang/lib/Frontend/DependencyFile.cpp' l='57' c='_ZN12_GLOBAL__N_123DepCollectorPPCallbacks11FileSkippedERKN5clang12FileEntryRefERKNS1_5TokenENS1_6SrcMgr18CharacteristicKindE'/>
<ovr f='llvm/clang/lib/Frontend/Rewrite/InclusionRewriter.cpp' l='174' c='_ZN12_GLOBAL__N_117InclusionRewriter11FileSkippedERKN5clang12FileEntryRefERKNS1_5TokenENS1_6SrcMgr18CharacteristicKindE'/>
<use f='llvm/clang/lib/Lex/PPDirectives.cpp' l='2079' u='c' c='_ZN5clang12Preprocessor27HandleHeaderIncludeOrImportENS_14SourceLocationERNS_5TokenES3_S1_PKNS_15DirectoryLookupEPKNS_9FileEntryE'/>
