<dec f='llvm/clang/include/clang/Sema/Sema.h' l='3644' type='void clang::Sema::AddTemplateConversionCandidate(clang::FunctionTemplateDecl * FunctionTemplate, clang::DeclAccessPair FoundDecl, clang::CXXRecordDecl * ActingContext, clang::Expr * From, clang::QualType ToType, clang::OverloadCandidateSet &amp; CandidateSet, bool AllowObjCConversionOnExplicit, bool AllowExplicit, bool AllowResultConversion = true)'/>
<use f='llvm/clang/lib/Sema/SemaInit.cpp' l='3986' u='c' c='_ZL26ResolveConstructorOverloadRN5clang4SemaENS_14SourceLocationEN4llvm15MutableArrayRefIPNS_4ExprEEERNS_20OverloadCandidateSetENS_8QualTypeENS_23Decl11310345'/>
<use f='llvm/clang/lib/Sema/SemaInit.cpp' l='4595' u='c' c='_ZL32TryRefInitWithConversionFunctionRN5clang4SemaERKNS_17InitializedEntityERKNS_18InitializationKindEPNS_4ExprEbbRNS_22InitializationSequenceE'/>
<use f='llvm/clang/lib/Sema/SemaInit.cpp' l='5261' u='c' c='_ZL24TryUserDefinedConversionRN5clang4SemaENS_8QualTypeERKNS_18InitializationKindEPNS_4ExprERNS_22InitializationSequenceEb'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='3530' u='c' c='_ZL23IsUserDefinedConversionRN5clang4SemaEPNS_4ExprENS_8QualTypeERNS_29UserDefinedConversionSequenceERNS_20OverloadCandidateSetENS0_15AllowedExplicitEb'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='4665' u='c' c='_ZL24FindConversionForRefInitRN5clang4SemaERNS_26ImplicitConversionSequenceENS_8QualTypeENS_14SourceLocationEPNS_4ExprES4_bb'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6004' u='c' c='_ZL33collectViableConversionCandidatesRN5clang4SemaEPNS_4ExprENS_8QualTypeERNS_17UnresolvedSetImplERNS_20OverloadCandidateSetE'/>
<def f='llvm/clang/lib/Sema/SemaOverload.cpp' l='7461' ll='7508' type='void clang::Sema::AddTemplateConversionCandidate(clang::FunctionTemplateDecl * FunctionTemplate, clang::DeclAccessPair FoundDecl, clang::CXXRecordDecl * ActingDC, clang::Expr * From, clang::QualType ToType, clang::OverloadCandidateSet &amp; CandidateSet, bool AllowObjCConversionOnExplicit, bool AllowExplicit, bool AllowResultConversion = true)'/>
<doc f='llvm/clang/lib/Sema/SemaOverload.cpp' l='7456'>/// Adds a conversion function template specialization
/// candidate to the overload set, using template argument deduction
/// to deduce the template arguments of the conversion function
/// template from the type that we are converting to (C++
/// [temp.deduct.conv]).</doc>
