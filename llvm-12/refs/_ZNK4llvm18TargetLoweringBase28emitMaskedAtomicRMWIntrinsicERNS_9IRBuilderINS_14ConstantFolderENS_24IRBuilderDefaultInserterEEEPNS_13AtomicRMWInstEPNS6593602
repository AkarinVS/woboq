<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1872' ll='1878' type='llvm::Value * llvm::TargetLoweringBase::emitMaskedAtomicRMWIntrinsic(IRBuilder&lt;&gt; &amp; Builder, llvm::AtomicRMWInst * AI, llvm::Value * AlignedAddr, llvm::Value * Incr, llvm::Value * Mask, llvm::Value * ShiftAmt, llvm::AtomicOrdering Ord) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1869'>/// Perform a masked atomicrmw using a target-specific intrinsic. This
  /// represents the core LL/SC loop which will be lowered at a late stage by
  /// the backend.</doc>
<use f='llvm/llvm/lib/CodeGen/AtomicExpandPass.cpp' l='984' u='c' c='_ZN12_GLOBAL__N_112AtomicExpand32expandAtomicRMWToMaskedIntrinsicEPN4llvm13AtomicRMWInstE'/>
<ovr f='llvm/llvm/lib/Target/RISCV/RISCVISelLowering.cpp' l='4394' c='_ZNK4llvm19RISCVTargetLowering28emitMaskedAtomicRMWIntrinsicERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_13AtomicRMWInstEPN5092888'/>
