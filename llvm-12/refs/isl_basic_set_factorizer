<dec f='llvm/polly/lib/External/isl/isl_factorization.h' l='25' type='isl_factorizer * isl_basic_set_factorizer(isl_basic_map * bset)'/>
<use f='llvm/polly/lib/External/isl/isl_bernstein.c' l='478' u='c' c='bernstein_coefficients_factors'/>
<def f='llvm/polly/lib/External/isl/isl_factorization.c' l='269' ll='341' type='isl_factorizer * isl_basic_set_factorizer(isl_basic_map * bset)'/>
<doc f='llvm/polly/lib/External/isl/isl_factorization.c' l='261'>/* Determine if the set variables of the basic set can be factorized and
 * return the results in an isl_factorizer.
 *
 * The algorithm works by first computing the Hermite normal form
 * and then grouping columns linked by one or more constraints together,
 * where a constraints &quot;links&quot; two or more columns if the constraint
 * has nonzero coefficients in the columns.
 */</doc>
<use f='llvm/polly/lib/External/isl/isl_farkas.c' l='825' u='c' c='basic_set_coefficients'/>
<use f='llvm/polly/lib/External/isl/isl_polynomial.c' l='4810' u='c' c='compressed_multiplicative_call'/>
<use f='llvm/polly/lib/External/isl/isl_sample.c' l='647' u='c' c='sample_bounded'/>
<use f='llvm/polly/lib/External/isl/isl_test.c' l='4267' u='c' c='test_factorize'/>
<use f='llvm/polly/lib/External/isl/isl_test.c' l='4285' u='c' c='test_factorize'/>
