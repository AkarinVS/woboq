<dec f='llvm/clang/include/clang/AST/Type.h' l='1709' type='unsigned int'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='4997' u='r' c='_ZNK5clang8AutoType10getNumArgsEv'/>
<offset>32</offset>
<doc f='llvm/clang/include/clang/AST/Type.h' l='1702'>/// The number of template arguments in the type-constraints, which is
    /// expected to be able to hold at least 1024 according to [implimits].
    /// However as this limit is somewhat easy to hit with template
    /// metaprogramming we&apos;d prefer to keep it as large as possible.
    /// At the moment it has been left as a non-bitfield since this type
    /// safely fits in 64 bits as an unsigned, so there is no reason to
    /// introduce the performance impact of a bitfield.</doc>
<use f='llvm/clang/lib/AST/Type.cpp' l='4385' u='w' c='_ZN5clang8AutoTypeC1ENS_8QualTypeENS_15AutoTypeKeywordENS_19TypeDependenceScope14TypeDependenceEPNS_11ConceptDeclEN4llvm8ArrayRefINS_16TemplateArgumentEEE'/>
