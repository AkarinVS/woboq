<def f='llvm/llvm/include/llvm/Support/FormatVariadic.h' l='142' ll='148'/>
<use f='llvm/llvm/include/llvm/Support/FormatVariadic.h' l='154' c='_ZN4llvm14formatv_objectC1ENS_9StringRefEOT_'/>
<use f='llvm/llvm/include/llvm/Support/FormatVariadic.h' l='162' c='_ZN4llvm14formatv_objectC1EONS_14formatv_objectIT_EE'/>
<doc f='llvm/llvm/include/llvm/Support/FormatVariadic.h' l='135'>// The parameters are stored in a std::tuple, which does not provide runtime
  // indexing capabilities.  In order to enable runtime indexing, we use this
  // structure to put the parameters into a std::array.  Since the parameters
  // are not all the same type, we use some type-erasure by wrapping the
  // parameters in a template class that derives from a non-template superclass.
  // Essentially, we are converting a std::tuple&lt;Derived&lt;Ts...&gt;&gt; to a
  // std::array&lt;Base*&gt;.</doc>
<fun r='_ZN4llvm14formatv_object15create_adaptersclEDpRTL0__'/>
