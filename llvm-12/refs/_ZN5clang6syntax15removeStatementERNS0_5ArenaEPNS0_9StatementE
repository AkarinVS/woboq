<dec f='llvm/clang/include/clang/Tooling/Syntax/Mutations.h' l='32' type='void clang::syntax::removeStatement(syntax::Arena &amp; A, syntax::Statement * S)'/>
<doc f='llvm/clang/include/clang/Tooling/Syntax/Mutations.h' l='26'>/// Removes a statement or replaces it with an empty statement where one is
/// required syntactically. E.g., in the following example:
///     if (cond) { foo(); } else bar();
/// One can remove `foo();` completely and to remove `bar();` we would need to
/// replace it with an empty statement.
/// EXPECTS: S-&gt;canModify() == true</doc>
<def f='llvm/clang/lib/Tooling/Syntax/Mutations.cpp' l='80' ll='94' type='void clang::syntax::removeStatement(syntax::Arena &amp; A, syntax::Statement * S)'/>
<use f='llvm/clang/unittests/Tooling/Syntax/MutationsTest.cpp' l='50' u='c'/>
