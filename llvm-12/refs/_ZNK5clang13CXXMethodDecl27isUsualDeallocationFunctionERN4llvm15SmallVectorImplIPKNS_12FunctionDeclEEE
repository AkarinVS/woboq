<dec f='llvm/clang/include/clang/AST/DeclCXX.h' l='2013' type='bool clang::CXXMethodDecl::isUsualDeallocationFunction(SmallVectorImpl&lt;const clang::FunctionDecl *&gt; &amp; PreventedBy) const'/>
<doc f='llvm/clang/include/clang/AST/DeclCXX.h' l='2006'>/// Determine whether this is a usual deallocation function (C++
  /// [basic.stc.dynamic.deallocation]p2), which is an overloaded delete or
  /// delete[] operator with a particular signature. Populates \p PreventedBy
  /// with the declarations of the functions of the same kind if they were the
  /// reason for this function returning false. This is used by
  /// Sema::isUsualDeallocationFunction to reconsider the answer based on the
  /// context.</doc>
<def f='llvm/clang/lib/AST/DeclCXX.cpp' l='2299' ll='2374' type='bool clang::CXXMethodDecl::isUsualDeallocationFunction(SmallVectorImpl&lt;const clang::FunctionDecl *&gt; &amp; PreventedBy) const'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='1550' u='c' c='_ZN5clang4Sema27isUsualDeallocationFunctionEPKNS_13CXXMethodDeclE'/>
