<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='1810' ll='1812' type='void llvm::IntegerStateBase::operator^=(const IntegerStateBase&lt;llvm::IntegerStateBase::base_t, BestState, WorstState&gt; &amp; R)'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2943' u='c' c='_ZN4llvm10DerefStateeOERKS0_'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2944' u='c' c='_ZN4llvm10DerefStateeOERKS0_'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='1807'>/// &quot;Clamp&quot; this state with \p R. The result is subtype dependent but it is
  /// intended that only information assumed in both states will be assumed in
  /// this one afterwards.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='1765' u='c' c='_ZN12_GLOBAL__N_117AANonNullFloating10updateImplERN4llvm10AttributorE'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='3876' u='c' c='_ZN12_GLOBAL__N_115AAAlignFloating10updateImplERN4llvm10AttributorE'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='7977' u='c' c='_ZN12_GLOBAL__N_117AANoUndefFloating10updateImplERN4llvm10AttributorE'/>
