<dec f='llvm/build/include/c++/v1/string' l='1596' type='void std::__1::basic_string::__init_copy_ctor_external(const std::__1::basic_string::value_type * __s, std::__1::basic_string::size_type __sz)'/>
<use f='llvm/build/include/c++/v1/string' l='1923' u='c' c='_ZNSt3__112basic_stringC1ERKNS_12basic_stringIT_T0_T1_EE'/>
<use f='llvm/build/include/c++/v1/string' l='1939' u='c' c='_ZNSt3__112basic_stringC1ERKNS_12basic_stringIT_T0_T1_EERKS4_'/>
<def f='llvm/build/include/c++/v1/string' l='1946' ll='1963' type='void std::__1::basic_string::__init_copy_ctor_external(const std::__1::basic_string::value_type * __s, std::__1::basic_string::size_type __sz)'/>
<doc f='llvm/build/include/c++/v1/string' l='1588'>// Slow path for the (inlined) copy constructor for &apos;long&apos; strings.
    // Always externally instantiated and not inlined.
    // Requires that __s is zero terminated.
    // The main reason for this function to exist is because for unstable, we
    // want to allow inlining of the copy constructor. However, we don&apos;t want
    // to call the __init() functions as those are marked as inline which may
    // result in over-aggressive inlining by the compiler, where our aim is
    // to only inline the fast path code directly in the ctor.</doc>
