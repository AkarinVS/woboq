<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='6454' macro='1' type='int sem_timedwait(__sanitizer::__sanitizer_sem_t * s, void * abstime)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='6488' u='a' c='_ZL28InitializeCommonInterceptorsv'/>
<dec f='include/semaphore.h' l='62' type='int sem_timedwait(sem_t *__restrict __sem, const struct timespec *__restrict __abstime)'/>
<use f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_x86_64/include/c++/v1/__threading_support' l='477' u='c' c='_ZNSt8__Fuzzer29__libcpp_semaphore_wait_timedEP5sem_tRKNS_6chrono8durationIxNS_5ratioILl1ELl1000000000EEEEE'/>
<doc f='include/semaphore.h' l='58'>/* Similar to `sem_wait&apos; but wait only until ABSTIME.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<use f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_i386/include/c++/v1/__threading_support' l='477' u='c' c='_ZNSt8__Fuzzer29__libcpp_semaphore_wait_timedEP5sem_tRKNS_6chrono8durationIxNS_5ratioILx1ELx1000000000EEEEE'/>
<use f='llvm/build/include/c++/v1/__threading_support' l='477' u='c' c='_ZNSt3__129__libcpp_semaphore_wait_timedEP5sem_tRKNS_6chrono8durationIxNS_5ratioILl1ELl1000000000EEEEE'/>
<use f='llvm/libcxx/include/__threading_support' l='477' u='c' c='_ZNSt3__129__libcpp_semaphore_wait_timedEP5sem_tRKNS_6chrono8durationIxNS_5ratioILl1ELl1000000000EEEEE'/>
