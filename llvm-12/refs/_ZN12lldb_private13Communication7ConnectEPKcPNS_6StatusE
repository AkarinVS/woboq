<dec f='llvm/lldb/include/lldb/Core/Communication.h' l='140' type='lldb::ConnectionStatus lldb_private::Communication::Connect(const char * url, lldb_private::Status * error_ptr)'/>
<doc f='llvm/lldb/include/lldb/Core/Communication.h' l='126'>/// Connect using the current connection by passing \a url to its connect
  /// function. string.
  ///
  /// \param[in] url
  ///     A string that contains all information needed by the
  ///     subclass to connect to another client.
  ///
  /// \return
  ///     \b True if the connect succeeded, \b false otherwise. The
  ///     internal error object should be filled in with an
  ///     appropriate value based on the result of this function.
  ///
  /// \see Status&amp; Communication::GetError ();
  /// \see bool Connection::Connect (const char *url);</doc>
<use f='llvm/lldb/source/API/SBCommunication.cpp' l='67' u='c' c='_ZN4lldb15SBCommunication7ConnectEPKc'/>
<def f='llvm/lldb/source/Core/Communication.cpp' l='78' ll='90' type='lldb::ConnectionStatus lldb_private::Communication::Connect(const char * url, lldb_private::Status * error_ptr)'/>
<use f='llvm/lldb/source/Plugins/Platform/gdb-server/PlatformRemoteGDBServer.cpp' l='324' u='c' c='_ZN12lldb_private19platform_gdb_server23PlatformRemoteGDBServer13ConnectRemoteERNS_4ArgsE'/>
