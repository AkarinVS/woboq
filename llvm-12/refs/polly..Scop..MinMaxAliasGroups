<dec f='llvm/polly/include/polly/ScopInfo.h' l='1877' type='polly::Scop::MinMaxVectorPairVectorTy'/>
<use f='llvm/polly/include/polly/ScopInfo.h' l='2334' u='a' c='_ZNK5polly4Scop14getAliasGroupsEv'/>
<use f='llvm/polly/include/polly/ScopInfo.h' l='2339' u='m' c='_ZN5polly4Scop13addAliasGroupERN4llvm11SmallVectorISt4pairIN3isl12noexceptions12pw_multi_affES6_ELj4EEES9_'/>
<use f='llvm/polly/include/polly/ScopInfo.h' l='2340' u='m' c='_ZN5polly4Scop13addAliasGroupERN4llvm11SmallVectorISt4pairIN3isl12noexceptions12pw_multi_affES6_ELj4EEES9_'/>
<use f='llvm/polly/include/polly/ScopInfo.h' l='2341' u='m' c='_ZN5polly4Scop13addAliasGroupERN4llvm11SmallVectorISt4pairIN3isl12noexceptions12pw_multi_affES6_ELj4EEES9_'/>
<offset>4544</offset>
<doc f='llvm/polly/include/polly/ScopInfo.h' l='1864'>/// The set of minimal/maximal accesses for each alias group.
  ///
  /// When building runtime alias checks we look at all memory instructions and
  /// build so called alias groups. Each group contains a set of accesses to
  /// different base arrays which might alias with each other. However, between
  /// alias groups there is no aliasing possible.
  ///
  /// In a program with int and float pointers annotated with tbaa information
  /// we would probably generate two alias groups, one for the int pointers and
  /// one for the float pointers.
  ///
  /// During code generation we will create a runtime alias check for each alias
  /// group to ensure the SCoP is executed in an alias free environment.</doc>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='2187' c='_ZNK5polly4Scop21printAliasAssumptionsERN4llvm11raw_ostreamE'/>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='2195' u='m' c='_ZNK5polly4Scop21printAliasAssumptionsERN4llvm11raw_ostreamE'/>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='2200' c='_ZNK5polly4Scop21printAliasAssumptionsERN4llvm11raw_ostreamE'/>
