<dec f='llvm/lldb/include/lldb/Target/Process.h' l='1483' type='size_t lldb_private::Process::ReadStringFromMemory(lldb::addr_t vm_addr, char * str, size_t max_bytes, lldb_private::Status &amp; error, size_t type_width = 1)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='1456'>/// Read a NULL terminated string from memory
  ///
  /// This function will read a cache page at a time until a NULL string
  /// terminator is found. It will stop reading if an aligned sequence of NULL
  /// termination \a type_width bytes is not found before reading \a
  /// cstr_max_len bytes.  The results are always guaranteed to be NULL
  /// terminated, and that no more than (max_bytes - type_width) bytes will be
  /// read.
  ///
  /// \param[in] vm_addr
  ///     The virtual load address to start the memory read.
  ///
  /// \param[in] str
  ///     A character buffer containing at least max_bytes.
  ///
  /// \param[in] max_bytes
  ///     The maximum number of bytes to read.
  ///
  /// \param[in] error
  ///     The error status of the read operation.
  ///
  /// \param[in] type_width
  ///     The size of the null terminator (1 to 4 bytes per
  ///     character).  Defaults to 1.
  ///
  /// \return
  ///     The error status or the number of bytes prior to the null terminator.</doc>
<use f='llvm/lldb/source/DataFormatters/StringPrinter.cpp' l='468' u='c' c='_ZN12lldb_private10formattersL32ReadEncodedBufferAndDumpToStreamENS0_13StringPrinter17StringElementTypeERKNS1_32ReadStringAndDumpToStreamOptionsEPFN4l4712174'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='1924' ll='1973' type='size_t lldb_private::Process::ReadStringFromMemory(lldb::addr_t addr, char * dst, size_t max_bytes, lldb_private::Status &amp; error, size_t type_width = 1)'/>
