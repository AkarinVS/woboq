<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1888' ll='1891' type='bool llvm::TargetInstrInfo::isMBBSafeToOutlineFrom(llvm::MachineBasicBlock &amp; MBB, unsigned int &amp; Flags) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1886'>/// Optional target hook that returns true if \p MBB is safe to outline from,
  /// and returns any target-specific information in \p Flags.</doc>
<use f='llvm/llvm/lib/CodeGen/MachineOutliner.cpp' l='246' u='c' c='_ZN12_GLOBAL__N_117InstructionMapper20convertToUnsignedVecERN4llvm17MachineBasicBlockERKNS1_15TargetInstrInfoE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='6534' c='_ZNK4llvm16AArch64InstrInfo22isMBBSafeToOutlineFromERNS_17MachineBasicBlockERj'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='6046' c='_ZNK4llvm16ARMBaseInstrInfo22isMBBSafeToOutlineFromERNS_17MachineBasicBlockERj'/>
<ovr f='llvm/llvm/lib/Target/RISCV/RISCVInstrInfo.cpp' l='742' c='_ZNK4llvm14RISCVInstrInfo22isMBBSafeToOutlineFromERNS_17MachineBasicBlockERj'/>
