<def f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='752' ll='755' type='unsigned int llvm::TargetRegisterInfo::getRegPressureLimit(const llvm::TargetRegisterClass * RC, llvm::MachineFunction &amp; MF) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='746'>/// Return the register pressure &quot;high water mark&quot; for the specific register
  /// class. The scheduler is in high register pressure mode (for the specific
  /// register class) if it goes over the limit.
  ///
  /// Note: this is the old register pressure model that relies on a manually
  /// specified representative register class per value type.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp' l='64' u='c' c='_ZN4llvm21ResourcePriorityQueueC1EPNS_16SelectionDAGISelE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='1768' u='c' c='_ZN12_GLOBAL__N_118RegReductionPQBaseC1ERN4llvm15MachineFunctionEbbbPKNS1_15TargetInstrInfoEPKNS1_18TargetRegisterInfoEPKNS1_14TargetLoweringE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp' l='718' c='_ZNK4llvm19AArch64RegisterInfo19getRegPressureLimitEPKNS_19TargetRegisterClassERNS_15MachineFunctionE'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIRegisterInfo.cpp' l='2068' c='_ZNK4llvm14SIRegisterInfo19getRegPressureLimitEPKNS_19TargetRegisterClassERNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIRegisterInfo.cpp' l='2076' u='c' c='_ZNK4llvm14SIRegisterInfo19getRegPressureLimitEPKNS_19TargetRegisterClassERNS_15MachineFunctionE'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp' l='281' c='_ZNK4llvm19ARMBaseRegisterInfo19getRegPressureLimitEPKNS_19TargetRegisterClassERNS_15MachineFunctionE'/>
<ovr f='llvm/llvm/lib/Target/Mips/MipsRegisterInfo.cpp' l='67' c='_ZNK4llvm16MipsRegisterInfo19getRegPressureLimitEPKNS_19TargetRegisterClassERNS_15MachineFunctionE'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp' l='413' c='_ZNK4llvm15PPCRegisterInfo19getRegPressureLimitEPKNS_19TargetRegisterClassERNS_15MachineFunctionE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86RegisterInfo.cpp' l='256' c='_ZNK4llvm15X86RegisterInfo19getRegPressureLimitEPKNS_19TargetRegisterClassERNS_15MachineFunctionE'/>
