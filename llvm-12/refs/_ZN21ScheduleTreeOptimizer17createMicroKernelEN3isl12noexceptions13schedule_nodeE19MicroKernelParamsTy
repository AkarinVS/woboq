<dec f='llvm/polly/include/polly/ScheduleOptimizer.h' l='330' type='static isl::schedule_node ScheduleTreeOptimizer::createMicroKernel(isl::schedule_node Node, MicroKernelParamsTy MicroKernelParams)'/>
<def f='llvm/polly/lib/Transform/ScheduleOptimizer.cpp' l='826' ll='832' type='static isl::schedule_node ScheduleTreeOptimizer::createMicroKernel(isl::schedule_node Node, MicroKernelParamsTy MicroKernelParams)'/>
<use f='llvm/polly/lib/Transform/ScheduleOptimizer.cpp' l='1296' u='c' c='_ZN21ScheduleTreeOptimizer21optimizeMatMulPatternEN3isl12noexceptions13schedule_nodeEPKN4llvm19TargetTransformInfoERN5polly12MatMulInfoTyE'/>
<doc f='llvm/polly/include/polly/ScheduleOptimizer.h' l='318'>/// Create the BLIS macro-kernel.
  ///
  /// We create the BLIS macro-kernel by applying a combination of tiling
  /// of dimensions of the band node and interchanging of two innermost
  /// modified dimensions. The values passed in MicroKernelParam are used
  /// as tile sizes.
  ///
  /// @param Node The schedule node to be modified.
  /// @param MicroKernelParams Parameters of the micro kernel
  ///                          to be used as tile sizes.
  /// @see MicroKernelParamsTy</doc>
