<def f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h' l='110' ll='132'/>
<use f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h' l='146' c='_ZN5clang7tooling12dependencies34DependencyScanningWorkerFilesystemC1ERNS1_39DependencyScanningFilesystemSharedCacheEN4llvm18IntrusiveRefCntPtrINS5_3v7226240'/>
<use f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h' l='174'/>
<size>16</size>
<doc f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h' l='105'>/// This class is a shared cache, that caches the &apos;stat&apos; and &apos;open&apos; calls to the
/// underlying real file system.
///
/// It is sharded based on the hash of the key to reduce the lock contention for
/// the worker threads.</doc>
<fun r='_ZN5clang7tooling12dependencies39DependencyScanningFilesystemSharedCacheC1Ev'/>
<fun r='_ZN5clang7tooling12dependencies39DependencyScanningFilesystemSharedCache3getEN4llvm9StringRefE'/>
<mbr r='clang::tooling::dependencies::DependencyScanningFilesystemSharedCache::CacheShards' o='0' t='std::unique_ptr&lt;CacheShard []&gt;'/>
<mbr r='clang::tooling::dependencies::DependencyScanningFilesystemSharedCache::NumShards' o='64' t='unsigned int'/>
<fun r='_ZN5clang7tooling12dependencies39DependencyScanningFilesystemSharedCacheC1Ev'/>
<fun r='_ZN5clang7tooling12dependencies39DependencyScanningFilesystemSharedCache3getEN4llvm9StringRefE'/>
<use f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningService.h' l='61' c='_ZN5clang7tooling12dependencies25DependencyScanningService14getSharedCacheEv'/>
<use f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningService.h' l='74'/>
<size>16</size>
