<dec f='llvm/lldb/include/lldb/Target/Process.h' l='2068' type='lldb::StateType lldb_private::Process::GetNextEvent(lldb::EventSP &amp; event_sp)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='2067'>// Event Handling</doc>
<def f='llvm/lldb/source/Target/Process.cpp' l='584' ll='593' type='lldb::StateType lldb_private::Process::GetNextEvent(lldb::EventSP &amp; event_sp)'/>
<doc f='llvm/lldb/source/Target/Process.cpp' l='574'>// FIXME: We need to do some work on events before the general Listener sees
// them.
// For instance if we are continuing from a breakpoint, we need to ensure that
// we do the little &quot;insert real insn, step &amp; stop&quot; trick.  But we can&apos;t do
// that when the event is delivered by the broadcaster - since that is done on
// the thread that is waiting for new events, so if we needed more than one
// event for our handling, we would stall.  So instead we do it when we fetch
// the event off of the queue.
//</doc>
