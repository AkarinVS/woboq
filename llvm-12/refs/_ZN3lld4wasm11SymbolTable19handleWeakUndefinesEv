<dec f='llvm/lld/wasm/SymbolTable.h' l='100' type='void lld::wasm::SymbolTable::handleWeakUndefines()'/>
<use f='llvm/lld/wasm/Driver.cpp' l='1029' u='c' c='_ZN3lld4wasm12_GLOBAL__N_112LinkerDriver10linkerMainEN4llvm8ArrayRefIPKcEE'/>
<def f='llvm/lld/wasm/SymbolTable.cpp' l='772' ll='786' type='void lld::wasm::SymbolTable::handleWeakUndefines()'/>
<doc f='llvm/lld/wasm/SymbolTable.cpp' l='768'>// For weak undefined functions, there may be &quot;call&quot; instructions that reference
// the symbol. In this case, we need to synthesise a dummy/stub function that
// will abort at runtime, so that relocations can still provided an operand to
// the call instruction that passes Wasm validation.</doc>
