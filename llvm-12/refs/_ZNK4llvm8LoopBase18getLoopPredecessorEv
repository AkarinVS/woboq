<dec f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='326' type='BlockT * llvm::LoopBase::getLoopPredecessor() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='322'>/// If the given loop&apos;s header has exactly one unique predecessor outside the
  /// loop, return it. Otherwise return null.
  ///  This is less strict that the loop &quot;preheader&quot; concept, which requires
  /// the predecessor to have exactly one successor.</doc>
<use f='llvm/llvm/include/llvm/Analysis/LoopInfoImpl.h' l='169' u='c' c='_ZNK4llvm8LoopBase16getLoopPreheaderEv'/>
<def f='llvm/llvm/include/llvm/Analysis/LoopInfoImpl.h' l='193' ll='210' type='BlockT * llvm::LoopBase::getLoopPredecessor() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopInfoImpl.h' l='188'>/// getLoopPredecessor - If the given loop&apos;s header has exactly one unique
/// predecessor outside the loop, return it. Otherwise return null.
/// This is less strict that the loop &quot;preheader&quot; concept, which requires
/// the predecessor to have exactly one successor.
///</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7887' u='c' c='_ZN4llvm15ScalarEvolution28computeShiftCompareExitLimitEPNS_5ValueES2_PKNS_4LoopENS_7CmpInst9PredicateE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9196' u='c' c='_ZNK4llvm15ScalarEvolution38getPredecessorWithUniqueSuccessorForBBEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='10044' u='c' c='_ZN4llvm15ScalarEvolution30isBasicBlockEntryGuardedByCondEPKNS_10BasicBlockENS_7CmpInst9PredicateEPKNS_4SCEVES8_'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='10605' u='c' c='_ZN4llvm15ScalarEvolution17isImpliedViaMergeENS_7CmpInst9PredicateEPKNS_4SCEVES5_S5_S5_j'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='13299' u='c' c='_ZN4llvm15ScalarEvolution15applyLoopGuardsEPKNS_4SCEVEPKNS_4LoopE'/>
<use f='llvm/llvm/lib/CodeGen/MachineLICM.cpp' l='325' u='c' c='_ZL30LoopIsOuterMostWithPredecessorPN4llvm11MachineLoopE'/>
<use f='llvm/llvm/lib/CodeGen/MachineLICM.cpp' l='329' u='c' c='_ZL30LoopIsOuterMostWithPredecessorPN4llvm11MachineLoopE'/>
<use f='llvm/llvm/lib/CodeGen/MachineLICM.cpp' l='1568' u='c' c='_ZN12_GLOBAL__N_115MachineLICMBase15getCurPreheaderEv'/>
<use f='llvm/llvm/lib/Target/ARM/ARMBlockPlacement.cpp' l='81' u='c' c='_ZN4llvm17ARMBlockPlacement20runOnMachineFunctionERNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp' l='545' u='c' c='_ZN12_GLOBAL__N_120PPCLoopInstrFormPrep17rewriteLoadStoresEPN4llvm4LoopERNS_6BucketERNS1_8SmallSetIPNS1_10BasicBlockELj16ESt4lessIS8_EEENS_9InstrFormE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp' l='741' u='c' c='_ZN12_GLOBAL__N_120PPCLoopInstrFormPrep15alreadyPreparedEPN4llvm4LoopEPNS1_11InstructionEPKNS1_4SCEVEPKNS1_12SCEVConstantENS_9InstrFormE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp' l='812' u='c' c='_ZN12_GLOBAL__N_120PPCLoopInstrFormPrep9runOnLoopEPN4llvm4LoopE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GuardWidening.cpp' l='781' u='c' c='_ZN4llvm17GuardWideningPass3runERNS_4LoopERNS_15AnalysisManagerIS1_JRNS_27LoopStandardAnalysisResultsEEEES5_RNS_10LPMUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GuardWidening.cpp' l='836' u='c' c='_ZN12_GLOBAL__N_127LoopGuardWideningLegacyPass9runOnLoopEPN4llvm4LoopERNS1_13LPPassManagerE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopInterchange.cpp' l='302' u='c' c='_ZL20getInductionVariablePN4llvm4LoopEPNS_15ScalarEvolutionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopInterchange.cpp' l='684' u='c' c='_ZN12_GLOBAL__N_123LoopInterchangeLegality26findInductionAndReductionsEPN4llvm4LoopERNS1_11SmallVectorIPNS1_7PHINodeELj8EEES3_'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp' l='214' u='c' c='_ZN12_GLOBAL__N_114SimplifyIndvar25makeIVComparisonInvariantEPN4llvm8ICmpInstEPNS1_5ValueE'/>
