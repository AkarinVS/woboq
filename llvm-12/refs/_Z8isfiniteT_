<def f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_x86_64/include/c++/v1/math.h' l='435' ll='442' type='typename std::enable_if&lt;std::is_arithmetic&lt;_A1&gt;::value &amp;&amp; std::numeric_limits&lt;_A1&gt;::has_infinity, bool&gt;::type isfinite(_A1 __lcpp_x)'/>
<def f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_x86_64/include/c++/v1/math.h' l='445' ll='450' type='typename std::enable_if&lt;std::is_arithmetic&lt;_A1&gt;::value &amp;&amp; !std::numeric_limits&lt;_A1&gt;::has_infinity, bool&gt;::type isfinite(_A1 )'/>
<def f='llvm/build/include/c++/v1/math.h' l='435' ll='442' type='typename std::enable_if&lt;std::is_arithmetic&lt;_A1&gt;::value &amp;&amp; std::numeric_limits&lt;_A1&gt;::has_infinity, bool&gt;::type isfinite(_A1 __lcpp_x)'/>
<def f='llvm/build/include/c++/v1/math.h' l='445' ll='450' type='typename std::enable_if&lt;std::is_arithmetic&lt;_A1&gt;::value &amp;&amp; !std::numeric_limits&lt;_A1&gt;::has_infinity, bool&gt;::type isfinite(_A1 )'/>
<def f='llvm/libcxx/include/math.h' l='435' ll='442' type='typename std::enable_if&lt;std::is_arithmetic&lt;_A1&gt;::value &amp;&amp; std::numeric_limits&lt;_A1&gt;::has_infinity, bool&gt;::type isfinite(_A1 __lcpp_x)'/>
<def f='llvm/libcxx/include/math.h' l='445' ll='450' type='typename std::enable_if&lt;std::is_arithmetic&lt;_A1&gt;::value &amp;&amp; !std::numeric_limits&lt;_A1&gt;::has_infinity, bool&gt;::type isfinite(_A1 )'/>
