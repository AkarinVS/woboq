<dec f='llvm/lldb/include/lldb/Target/Thread.h' l='1204' type='void lldb_private::Thread::DestroyThread()'/>
<doc f='llvm/lldb/include/lldb/Target/Thread.h' l='1201'>// This is necessary to make sure thread assets get destroyed while the
  // thread is still in good shape to call virtual thread methods.  This must
  // be called by classes that derive from Thread in their destructor.</doc>
<use f='llvm/lldb/source/Plugins/Process/Utility/HistoryThread.cpp' l='46' u='c' c='_ZN12lldb_private13HistoryThreadD1Ev'/>
<use f='llvm/lldb/source/Plugins/Process/Utility/ThreadMemory.cpp' l='35' u='c' c='_ZN12ThreadMemoryD1Ev'/>
<use f='llvm/lldb/source/Plugins/Process/elf-core/ThreadElfCore.cpp' l='51' u='c' c='_ZN13ThreadElfCoreD1Ev'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/ThreadGDBRemote.cpp' l='60' u='c' c='_ZN12lldb_private18process_gdb_remote15ThreadGDBRemoteD1Ev'/>
<use f='llvm/lldb/source/Plugins/Process/mach-core/ThreadMachCore.cpp' l='37' u='c' c='_ZN14ThreadMachCoreD1Ev'/>
<def f='llvm/lldb/source/Target/Thread.cpp' l='254' ll='262' type='void lldb_private::Thread::DestroyThread()'/>
<use f='llvm/lldb/source/Target/ThreadList.cpp' l='454' u='c' c='_ZN12lldb_private10ThreadList7DestroyEv'/>
<use f='llvm/lldb/source/Target/ThreadList.cpp' l='735' u='c' c='_ZN12lldb_private10ThreadList6UpdateERS0_'/>
<use f='llvm/lldb/unittests/Process/ProcessEventDataTest.cpp' l='70' u='c' c='_ZN12_GLOBAL__N_111DummyThreadD1Ev'/>
<use f='llvm/lldb/unittests/Thread/ThreadTest.cpp' l='68' u='c' c='_ZN12_GLOBAL__N_111DummyThreadD1Ev'/>
