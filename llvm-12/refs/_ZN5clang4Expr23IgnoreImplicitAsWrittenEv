<dec f='llvm/clang/include/clang/AST/Expr.h' l='846' type='clang::Expr * clang::Expr::IgnoreImplicitAsWritten()'/>
<use f='llvm/clang/include/clang/AST/Expr.h' l='848' u='c' c='_ZNK5clang4Expr23IgnoreImplicitAsWrittenEv'/>
<doc f='llvm/clang/include/clang/AST/Expr.h' l='841'>/// Skip past any implicit AST nodes which might surround this expression
  /// until reaching a fixed point. Same as IgnoreImplicit, except that it
  /// also skips over implicit calls to constructors and conversion functions.
  ///
  /// FIXME: Should IgnoreImplicit do this?</doc>
<def f='llvm/clang/lib/AST/Expr.cpp' l='2767' ll='2769' type='clang::Expr * clang::Expr::IgnoreImplicitAsWritten()'/>
