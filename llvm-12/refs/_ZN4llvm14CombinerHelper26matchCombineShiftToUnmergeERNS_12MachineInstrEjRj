<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CombinerHelper.h' l='263' type='bool llvm::CombinerHelper::matchCombineShiftToUnmerge(llvm::MachineInstr &amp; MI, unsigned int TargetShiftSize, unsigned int &amp; ShiftVal)'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp' l='2070' ll='2093' type='bool llvm::CombinerHelper::matchCombineShiftToUnmerge(llvm::MachineInstr &amp; MI, unsigned int TargetShiftSize, unsigned int &amp; ShiftVal)'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp' l='2172' u='c' c='_ZN4llvm14CombinerHelper24tryCombineShiftToUnmergeERNS_12MachineInstrEj'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CombinerHelper.h' l='261'>/// Reduce a shift by a constant to an unmerge and a shift on a half sized
  /// type. This will not produce a shift smaller than \p TargetShiftSize.</doc>
