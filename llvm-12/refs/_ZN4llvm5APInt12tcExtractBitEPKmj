<dec f='llvm/llvm/include/llvm/ADT/APInt.h' l='1910' type='static int llvm::APInt::tcExtractBit(const llvm::APInt::WordType * , unsigned int bit)'/>
<doc f='llvm/llvm/include/llvm/ADT/APInt.h' l='1909'>/// Extract the given bit of a bignum; returns 0 or 1.  Zero-based.</doc>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='499' u='c' c='_ZN4llvmL29lostFractionThroughTruncationEPKmjj'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='829' u='c' c='_ZNK4llvm6detail9IEEEFloat10isDenormalEv'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='1329' u='c' c='_ZNK4llvm6detail9IEEEFloat17roundAwayFromZeroENS_12RoundingModeENS_12lostFractionEj'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='2471' u='c' c='_ZN4llvm6detail9IEEEFloat30convertFromSignExtendedIntegerEPKmjbNS_12RoundingModeE'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='2498' u='c' c='_ZN4llvm6detail9IEEEFloat30convertFromZeroExtendedIntegerEPKmjbNS_12RoundingModeE'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='4004' u='c' c='_ZNK4llvm6detail9IEEEFloat11isSignalingEv'/>
<def f='llvm/llvm/lib/Support/APInt.cpp' l='2370' ll='2372' type='static int llvm::APInt::tcExtractBit(const llvm::APInt::WordType * parts, unsigned int bit)'/>
<doc f='llvm/llvm/lib/Support/APInt.cpp' l='2369'>/* Extract the given bit of a bignum; returns 0 or 1.  */</doc>
