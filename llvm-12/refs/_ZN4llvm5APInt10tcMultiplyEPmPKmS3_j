<dec f='llvm/llvm/include/llvm/ADT/APInt.h' l='1965' type='static int llvm::APInt::tcMultiply(llvm::APInt::WordType * , const llvm::APInt::WordType * , const llvm::APInt::WordType * , unsigned int )'/>
<doc f='llvm/llvm/include/llvm/ADT/APInt.h' l='1961'>/// DST = LHS * RHS, where DST has the same width as the operands and is
  /// filled with the least significant parts of the result.  Returns one if
  /// overflow occurred, otherwise zero.  DST must be disjoint from both
  /// operands.</doc>
<use f='llvm/llvm/lib/Support/APInt.cpp' l='237' u='c' c='_ZNK4llvm5APIntmlERKS0_'/>
<def f='llvm/llvm/lib/Support/APInt.cpp' l='2628' ll='2640' type='static int llvm::APInt::tcMultiply(llvm::APInt::WordType * dst, const llvm::APInt::WordType * lhs, const llvm::APInt::WordType * rhs, unsigned int parts)'/>
<doc f='llvm/llvm/lib/Support/APInt.cpp' l='2624'>/* DST = LHS * RHS, where DST has the same width as the operands and
   is filled with the least significant parts of the result.  Returns
   one if overflow occurred, otherwise zero.  DST must be disjoint
   from both operands.  */</doc>
