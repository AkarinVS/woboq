<dec f='llvm/lldb/include/lldb/Target/Process.h' l='2246' type='void lldb_private::Process::DumpThreadPlans(lldb_private::Stream &amp; strm, lldb::DescriptionLevel desc_level, bool internal, bool condense_trivial, bool skip_unreported_plans)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='2229'>/// Dump all the thread plans for this process.
  ///
  /// \param[in,out] strm
  ///     The stream to which to dump the output
  ///
  /// \param[in] desc_level
  ///     How much detail to dump
  ///
  /// \param[in] internal
  ///     If \b true dump all plans, if false only user initiated plans
  ///
  /// \param[in] condense_trivial
  ///     If true, only dump a header if the plan stack is just the base plan.
  ///
  /// \param[in] skip_unreported_plans
  ///     If true, skip printing all thread plan stacks that don&apos;t currently
  ///     have a backing lldb_private::Thread *.</doc>
<use f='llvm/lldb/source/Commands/CommandObjectThread.cpp' l='1762' u='c' c='_ZN27CommandObjectThreadPlanList9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='1194' ll='1199' type='void lldb_private::Process::DumpThreadPlans(lldb_private::Stream &amp; strm, lldb::DescriptionLevel desc_level, bool internal, bool condense_trivial, bool skip_unreported_plans)'/>
