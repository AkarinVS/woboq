<def f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='1023' ll='1027' type='bool llvm::TargetRegisterInfo::shouldUseDeferredSpillingForVirtReg(const llvm::MachineFunction &amp; MF, const llvm::LiveInterval &amp; VirtReg) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='1014'>/// Deferred spilling delays the spill insertion of a virtual register
  /// after every other allocation. By deferring the spilling, it is
  /// sometimes possible to eliminate that spilling altogether because
  /// something else could have been eliminated, thus leaving some space
  /// for the virtual register.
  /// However, this comes with a compile time impact because it adds one
  /// more stage to the greedy register allocator.
  /// This method is used to decide whether \p VirtReg should use the deferred
  /// spilling stage instead of being spilled right away.</doc>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='3106' u='c' c='_ZN12_GLOBAL__N_18RAGreedy17selectOrSplitImplERN4llvm12LiveIntervalERNS1_15SmallVectorImplINS1_8RegisterEEERNS1_8SmallSetIS5_Lj16ESt4lessIS5_EEEj'/>
