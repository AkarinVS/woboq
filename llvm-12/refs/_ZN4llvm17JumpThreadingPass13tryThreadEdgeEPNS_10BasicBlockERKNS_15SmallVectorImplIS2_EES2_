<dec f='llvm/llvm/include/llvm/Transforms/Scalar/JumpThreading.h' l='123' type='bool llvm::JumpThreadingPass::tryThreadEdge(llvm::BasicBlock * BB, const SmallVectorImpl&lt;llvm::BasicBlock *&gt; &amp; PredBBs, llvm::BasicBlock * SuccBB)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='1791' u='c' c='_ZN4llvm17JumpThreadingPass22processThreadableEdgesEPNS_5ValueEPNS_10BasicBlockENS_13jumpthreading18ConstantPreferenceEPNS_11InstructionE'/>
<def f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2314' ll='2348' type='bool llvm::JumpThreadingPass::tryThreadEdge(llvm::BasicBlock * BB, const SmallVectorImpl&lt;llvm::BasicBlock *&gt; &amp; PredBBs, llvm::BasicBlock * SuccBB)'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2313'>/// tryThreadEdge - Thread an edge if it&apos;s safe and profitable to do so.</doc>
