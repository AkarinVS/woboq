<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='186' type='llvm::LoadInst * llvm::InstCombinerImpl::combineLoadToNewType(llvm::LoadInst &amp; LI, llvm::Type * NewTy, const llvm::Twine &amp; Suffix = &quot;&quot;)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='2477' u='c' c='_ZN4llvm16InstCombinerImpl22optimizeBitCastFromPhiERNS_8CastInstEPNS_7PHINodeE'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='456' ll='474' type='llvm::LoadInst * llvm::InstCombinerImpl::combineLoadToNewType(llvm::LoadInst &amp; LI, llvm::Type * NewTy, const llvm::Twine &amp; Suffix = &quot;&quot;)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='606' u='c' c='_ZL26combineLoadToOperationTypeRN4llvm16InstCombinerImplERNS_8LoadInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='635' u='c' c='_ZL21unpackLoadToAggregateRN4llvm16InstCombinerImplERNS_8LoadInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='682' u='c' c='_ZL21unpackLoadToAggregateRN4llvm16InstCombinerImplERNS_8LoadInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='1327' u='c' c='_ZL35removeBitcastsFromLoadStoreOnMinMaxRN4llvm16InstCombinerImplERNS_9StoreInstE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='447'>/// Helper to combine a load to a new type.
///
/// This just does the work of combining a load to a new type. It handles
/// metadata, etc., and returns the new instruction. The \c NewTy should be the
/// loaded *value* type. This will convert it to a pointer, cast the operand to
/// that pointer type, load it, etc.
///
/// Note that this will create all of the instructions with whatever insert
/// point the \c InstCombinerImpl currently is using.</doc>
