<dec f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.h' l='131' type='void __tsan::ThreadClock::set(__tsan::ClockCache * c, unsigned int tid, __sanitizer::u64 v)'/>
<dec f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.h' l='132' type='void __tsan::ThreadClock::set(__sanitizer::u64 v)'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.h' l='225' ll='228' macro='1' type='void __tsan::ThreadClock::set(__sanitizer::u64 v)'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='414' ll='422' type='void __tsan::ThreadClock::set(__tsan::ClockCache * c, unsigned int tid, __sanitizer::u64 v)'/>
<doc f='llvm/compiler-rt/lib/tsan/rtl/tsan_clock.cpp' l='412'>// Sets a single element in the vector clock.
// This function is called only from weird places like AcquireGlobal.</doc>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='422' u='c' c='__tsan::UpdateClockCallback'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='477' u='c' c='__tsan::UpdateSleepClockCallback'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='494' u='c' c='__tsan::AcquireImpl'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='502' u='c' c='__tsan::ReleaseStoreAcquireImpl'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='511' u='c' c='__tsan::ReleaseImpl'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='520' u='c' c='__tsan::ReleaseStoreImpl'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='529' u='c' c='__tsan::AcquireReleaseImpl'/>
