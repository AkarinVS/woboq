<def f='llvm/clang/include/clang/Basic/TargetCXXABI.h' l='228' ll='230' type='bool clang::TargetCXXABI::areArgsDestroyedLeftToRightInCallee() const'/>
<doc f='llvm/clang/include/clang/Basic/TargetCXXABI.h' l='221'>/// Are arguments to a call destroyed left to right in the callee?
  /// This is a fundamental language change, since it implies that objects
  /// passed by value do *not* live to the end of the full expression.
  /// Temporaries passed to a function taking a const reference live to the end
  /// of the full expression as usual.  Both the caller and the callee must
  /// have access to the destructor, while only the caller needs the
  /// destructor if this is false.</doc>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='2843' u='c' c='_ZN5clang7CodeGen15CodeGenFunction18EmitFunctionPrologERKNS0_14CGFunctionInfoEPN4llvm8FunctionERKNS0_15FunctionArgListE'/>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='3990' u='c' c='_ZN5clang7CodeGen15CodeGenFunction12EmitCallArgsERNS0_11CallArgListENS1_16PrototypeWrapperEN4llvm14iterator_rangeINS_4Stmt12CastIteratorINS_4ExprEKPKS15429507'/>
<use f='llvm/clang/lib/CodeGen/CGClass.cpp' l='2111' u='c' c='_ZL23canEmitDelegateCallArgsRN5clang7CodeGen15CodeGenFunctionEPKNS_18CXXConstructorDeclENS_11CXXCtorTypeERNS0_11CallArgListE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='6866' u='c' c='_ZN5clang4Sema22CheckCompletedCXXClassEPNS_5ScopeEPNS_13CXXRecordDeclE'/>
