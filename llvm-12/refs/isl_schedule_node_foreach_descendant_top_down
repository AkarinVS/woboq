<dec f='llvm/polly/lib/External/isl/include/isl/schedule_node.h' l='42' type='isl_stat isl_schedule_node_foreach_descendant_top_down(isl_schedule_node * node, isl_bool (*)(isl_schedule_node *, void *) fn, void * user)'/>
<use f='llvm/polly/lib/External/isl/isl_schedule.c' l='259' u='c' c='isl_schedule_foreach_schedule_node_top_down'/>
<def f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='1395' ll='1407' type='isl_stat isl_schedule_node_foreach_descendant_top_down(isl_schedule_node * node, isl_bool (*)(isl_schedule_node *, void *) fn, void * user)'/>
<use f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='1450' u='c' c='isl_schedule_node_every_descendant'/>
<doc f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='1385'>/* Traverse the descendants of &quot;node&quot; (including the node itself)
 * in depth first preorder.
 *
 * If &quot;fn&quot; returns isl_bool_error on any of the nodes,
 * then the traversal is aborted.
 * If &quot;fn&quot; returns isl_bool_false on any of the nodes, then the subtree rooted
 * at that node is skipped.
 *
 * Return isl_stat_ok on success and isl_stat_error on failure.
 */</doc>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='2557' u='c' c='subtree_has_permutable_bands'/>
<use f='llvm/polly/lib/Transform/ScheduleOptimizer.cpp' l='1432' u='c' c='_ZL29walkScheduleTreeForStatisticsN3isl12noexceptions8scheduleEi'/>
