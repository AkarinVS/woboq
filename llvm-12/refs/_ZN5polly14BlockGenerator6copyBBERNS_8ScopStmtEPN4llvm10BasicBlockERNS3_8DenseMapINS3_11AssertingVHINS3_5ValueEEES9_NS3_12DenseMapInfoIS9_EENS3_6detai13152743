<dec f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='289' type='llvm::BasicBlock * polly::BlockGenerator::copyBB(polly::ScopStmt &amp; Stmt, llvm::BasicBlock * BB, polly::ValueMapT &amp; BBMap, llvm::LoopToScevMapT &amp; LTS, isl_id_to_ast_expr * NewAccesses)'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='424' u='c' c='_ZN5polly14BlockGenerator8copyStmtERNS_8ScopStmtERN4llvm8DenseMapIPKNS3_4LoopEPKNS3_4SCEVENS3_12DenseMapInfoIS7_EENS3_6detail12DenseMapPairIS7_SA_EEEE5047815'/>
<def f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='435' ll='449' type='llvm::BasicBlock * polly::BlockGenerator::copyBB(polly::ScopStmt &amp; Stmt, llvm::BasicBlock * BB, polly::ValueMapT &amp; BBMap, llvm::LoopToScevMapT &amp; LTS, isl_id_to_ast_expr * NewAccesses)'/>
<doc f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='276'>/// Copy the given basic block.
  ///
  /// @param Stmt      The statement to code generate.
  /// @param BB        The basic block to code generate.
  /// @param BBMap     A mapping from old values to their new values in this
  /// block.
  /// @param LTS         A map from old loops to new induction variables as
  ///                    SCEVs.
  /// @param NewAccesses A map from memory access ids to new ast expressions,
  ///                    which may contain new access expressions for certain
  ///                    memory accesses.
  ///
  /// @returns The copy of the basic block.</doc>
