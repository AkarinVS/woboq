<dec f='llvm/llvm/include/llvm/CodeGen/MachineInstrBundle.h' l='284' type='llvm::PhysRegInfo llvm::AnalyzePhysRegInBundle(const llvm::MachineInstr &amp; MI, llvm::Register Reg, const llvm::TargetRegisterInfo * TRI)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineInstrBundle.h' l='278'>/// AnalyzePhysRegInBundle - Analyze how the current instruction or bundle uses
/// a physical register.  This function should not be called after operator++(),
/// it expects a fresh iterator.
///
/// @param Reg The physical register to analyze.
/// @returns A filled-in PhysRegInfo struct.</doc>
<use f='llvm/llvm/lib/CodeGen/InlineSpiller.cpp' l='910' u='c' c='_ZN12_GLOBAL__N_113InlineSpiller17foldMemoryOperandEN4llvm8ArrayRefISt4pairIPNS1_12MachineInstrEjEEES5_'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='1463' u='c' c='_ZNK4llvm17MachineBasicBlock23computeRegisterLivenessEPKNS_18TargetRegisterInfoENS_10MCRegisterENS_26MachineInstrBundleIteratorIKNS_12MachineInstrELb0EEEj'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='1501' u='c' c='_ZNK4llvm17MachineBasicBlock23computeRegisterLivenessEPKNS_18TargetRegisterInfoENS_10MCRegisterENS_26MachineInstrBundleIteratorIKNS_12MachineInstrELb0EEEj'/>
<def f='llvm/llvm/lib/CodeGen/MachineInstrBundle.cpp' l='311' ll='360' type='llvm::PhysRegInfo llvm::AnalyzePhysRegInBundle(const llvm::MachineInstr &amp; MI, llvm::Register Reg, const llvm::TargetRegisterInfo * TRI)'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp' l='355' u='c' c='_ZN12_GLOBAL__N_111SSACCmpConv22findConvertibleCompareEPN4llvm17MachineBasicBlockE'/>
