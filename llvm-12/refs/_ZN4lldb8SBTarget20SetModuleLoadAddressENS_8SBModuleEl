<dec f='llvm/lldb/include/lldb/API/SBTarget.h' l='383' type='lldb::SBError lldb::SBTarget::SetModuleLoadAddress(lldb::SBModule module, int64_t sections_offset)'/>
<use f='llvm/build/tools/lldb/bindings/python/LLDBWrapPython.cpp' l='54804' u='c' c='_ZL35_wrap_SBTarget_SetModuleLoadAddressP7_objectS0_'/>
<doc f='llvm/lldb/include/lldb/API/SBTarget.h' l='365'>/// Slide all file addresses for all module sections so that \a module
  /// appears to loaded at these slide addresses.
  ///
  /// When you need all sections within a module to be loaded at a
  /// rigid slide from the addresses found in the module object file,
  /// this function will allow you to easily and quickly slide all
  /// module sections.
  ///
  /// \param[in] module
  ///     The module to load.
  ///
  /// \param[in] sections_offset
  ///     An offset that will be applied to all section file addresses
  ///     (the virtual addresses found in the object file itself).
  ///
  /// \return
  ///     An error to indicate success, fail, and any reason for
  ///     failure.</doc>
<def f='llvm/lldb/source/API/SBTarget.cpp' l='2242' ll='2275' type='lldb::SBError lldb::SBTarget::SetModuleLoadAddress(lldb::SBModule module, int64_t slide_offset)'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='2244' u='a' c='_ZN4lldb8SBTarget20SetModuleLoadAddressENS_8SBModuleEl'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='2244' u='a' c='_ZN4lldb8SBTarget20SetModuleLoadAddressENS_8SBModuleEl'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='2674' u='a' c='_ZN12lldb_private5repro15RegisterMethodsERNS0_8RegistryE'/>
