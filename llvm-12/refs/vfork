<dec f='include/unistd.h' l='764' type='__pid_t vfork()'/>
<doc f='include/unistd.h' l='760'>/* Clone the calling process, but without copying the whole address space.
   The calling process is suspended until the new process exits or is
   replaced by a call to `execve&apos;.  Return -1 for errors, 0 to the new process,
   and the process ID of the new process to the old process.  */</doc>
<dec f='llvm/compiler-rt/lib/asan/asan_interceptors.cpp' l='608' type='int vfork()'/>
<use f='llvm/compiler-rt/lib/asan/asan_interceptors.cpp' l='697' u='a' c='__asan::InitializeAsanInterceptors'/>
<dec f='llvm/compiler-rt/lib/hwasan/hwasan_interceptors.cpp' l='230' type='int vfork()'/>
<use f='llvm/compiler-rt/lib/hwasan/hwasan_interceptors.cpp' l='342' u='a' c='__hwasan::InitializeInterceptors'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='2163' macro='1' type='int vfork(int fake)'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='2808' u='a' c='__tsan::InitializeInterceptors'/>
