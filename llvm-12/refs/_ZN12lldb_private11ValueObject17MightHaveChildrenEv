<dec f='llvm/lldb/include/lldb/Core/ValueObject.h' l='763' type='bool lldb_private::ValueObject::MightHaveChildren()'/>
<doc f='llvm/lldb/include/lldb/Core/ValueObject.h' l='749'>/// Find out if a ValueObject might have children.
  ///
  /// This call is much more efficient than CalculateNumChildren() as
  /// it doesn&apos;t need to complete the underlying type. This is designed
  /// to be used in a UI environment in order to detect if the
  /// disclosure triangle should be displayed or not.
  ///
  /// This function returns true for class, union, structure,
  /// pointers, references, arrays and more. Again, it does so without
  /// doing any expensive type completion.
  ///
  /// \return
  ///     Returns \b true if the ValueObject might have children, or \b
  ///     false otherwise.</doc>
<use f='llvm/lldb/source/API/SBValue.cpp' l='962' u='c' c='_ZN4lldb7SBValue17MightHaveChildrenEv'/>
<use f='llvm/lldb/source/Core/IOHandlerCursesGUI.cpp' l='1511' u='c' c='_ZN3RowC1ERKSt10shared_ptrIN12lldb_private11ValueObjectEEPS_'/>
<def f='llvm/lldb/source/Core/ValueObject.cpp' l='566' ll='576' type='bool lldb_private::ValueObject::MightHaveChildren()'/>
<ovr f='llvm/lldb/source/Core/ValueObjectSyntheticFilter.cpp' l='117' c='_ZN12lldb_private20ValueObjectSynthetic17MightHaveChildrenEv'/>
<use f='llvm/lldb/source/DataFormatters/FormatManager.cpp' l='517' u='c' c='_ZN12lldb_private13FormatManager21ShouldPrintAsOneLinerERNS_11ValueObjectE'/>
<use f='llvm/lldb/source/DataFormatters/ValueObjectPrinter.cpp' l='635' u='c' c='_ZN12lldb_private18ValueObjectPrinter24ShouldPrintEmptyBracketsEbb'/>
