<dec f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='776' type='Optional&lt;int64_t&gt; llvm::isPointerOffset(const llvm::Value * Ptr1, const llvm::Value * Ptr2, const llvm::DataLayout &amp; DL)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='773'>/// If Ptr1 is provably equal to Ptr2 plus a constant offset, return that
  /// offset. For example, Ptr1 might be &amp;A[42], and Ptr2 might be &amp;A[40]. In
  /// this case offset would be -8.</doc>
<def f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='6705' ll='6780' type='Optional&lt;int64_t&gt; llvm::isPointerOffset(const llvm::Value * Ptr1, const llvm::Value * Ptr2, const llvm::DataLayout &amp; DL)'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64StackTagging.cpp' l='386' u='c' c='_ZN12_GLOBAL__N_119AArch64StackTagging19collectInitializersEPN4llvm11InstructionEPNS1_5ValueEmRNS_18InitializerBuilderE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64StackTagging.cpp' l='403' u='c' c='_ZN12_GLOBAL__N_119AArch64StackTagging19collectInitializersEPN4llvm11InstructionEPNS1_5ValueEmRNS_18InitializerBuilderE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp' l='430' u='c' c='_ZN4llvm13MemCpyOptPass20tryMergingIntoMemsetEPNS_11InstructionEPNS_5ValueES4_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp' l='443' u='c' c='_ZN4llvm13MemCpyOptPass20tryMergingIntoMemsetEPNS_11InstructionEPNS_5ValueES4_'/>
