<def f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.h' l='502' ll='505' type='static bool llvm::SIInstrInfo::isSegmentSpecificFLAT(const llvm::MachineInstr &amp; MI)'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.h' l='500'>// Is a FLAT encoded instruction which accesses a specific segment,
  // i.e. global_* or scratch_*.</doc>
<use f='llvm/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.cpp' l='1071' u='c' c='_ZN4llvm19GCNHazardRecognizer25fixLdsBranchVmemWARHazardEPNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInsertHardClauses.cpp' l='69' u='c' c='_ZN12_GLOBAL__N_117getHardClauseTypeERKN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='2929' u='c' c='_ZNK4llvm11SIInstrInfo31areMemAccessesTriviallyDisjointERKNS_12MachineInstrES3_'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='4746' u='c' c='_ZNK4llvm11SIInstrInfo20legalizeOperandsFLATERNS_19MachineRegisterInfoERNS_12MachineInstrE'/>
