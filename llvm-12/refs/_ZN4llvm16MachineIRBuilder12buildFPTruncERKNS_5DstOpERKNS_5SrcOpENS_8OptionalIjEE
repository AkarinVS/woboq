<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='1025' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildFPTrunc(const llvm::DstOp &amp; Res, const llvm::SrcOp &amp; Op, Optional&lt;unsigned int&gt; Flags = None)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='1015'>/// Build and insert \p Res = G_FPTRUNC \p Op
  ///
  /// G_FPTRUNC converts a floating-point value into one with a smaller type.
  ///
  /// \pre setBasicBlock or setMI must have been called.
  /// \pre \p Res must be a generic virtual register with scalar or vector type.
  /// \pre \p Op must be a generic virtual register with scalar or vector type.
  /// \pre \p Res must be smaller than \p Op
  ///
  /// \return The newly created instruction.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp' l='2026' u='c' c='_ZN4llvm12IRTranslator23translateKnownIntrinsicERKNS_8CallInstEjRNS_16MachineIRBuilderE'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='721' ll='725' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildFPTrunc(const llvm::DstOp &amp; Res, const llvm::SrcOp &amp; Op, Optional&lt;unsigned int&gt; Flags = None)'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp' l='2545' u='c' c='_ZNK4llvm19AMDGPULegalizerInfo12legalizeFPowERNS_12MachineInstrERNS_16MachineIRBuilderE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp' l='3152' u='c' c='_ZNK4llvm19AMDGPULegalizerInfo14legalizeFDIV16ERNS_12MachineInstrERNS_19MachineRegisterInfoERNS_16MachineIRBuilderE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUPostLegalizerCombiner.cpp' l='196' u='c' c='_ZN33AMDGPUPostLegalizerCombinerHelper17applyUCharToFloatERN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsLegalizerInfo.cpp' l='451' u='c' c='_ZNK4llvm17MipsLegalizerInfo14legalizeCustomERNS_15LegalizerHelperERNS_12MachineInstrE'/>
<use f='llvm/llvm/unittests/CodeGen/GlobalISel/PatternMatchTest.cpp' l='215' u='c' c='_ZN12_GLOBAL__N_138AArch64GISelMITest_MatchFPUnaryOp_Test8TestBodyEv'/>
