<dec f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='522' type='llvm::OverflowResult llvm::computeOverflowForSignedAdd(const llvm::AddOperator * Add, const llvm::DataLayout &amp; DL, llvm::AssumptionCache * AC = nullptr, const llvm::Instruction * CxtI = nullptr, const llvm::DominatorTree * DT = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='521'>/// This version also leverages the sign bit of Add if known.</doc>
<def f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4997' ll='5004' type='llvm::OverflowResult llvm::computeOverflowForSignedAdd(const llvm::AddOperator * Add, const llvm::DataLayout &amp; DL, llvm::AssumptionCache * AC = nullptr, const llvm::Instruction * CxtI = nullptr, const llvm::DominatorTree * DT = nullptr)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/NaryReassociate.cpp' l='342' u='c' c='_ZN4llvm19NaryReassociatePass24tryReassociateGEPAtIndexEPNS_17GetElementPtrInstEjPNS_4TypeE'/>
