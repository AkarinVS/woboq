<inh f='llvm/llvm/include/llvm/IR/PassManager.h' l='374' c='llvm::PassInfoMixin'/>
<def f='llvm/llvm/include/llvm/Transforms/Instrumentation/AddressSanitizer.h' l='118' ll='133'/>
<use f='llvm/llvm/include/llvm/Transforms/Instrumentation/AddressSanitizer.h' l='119'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='1296' c='_ZN12_GLOBAL__N_118EmitAssemblyHelper30EmitAssemblyWithNewPassManagerEN5clang13BackendActionESt10unique_ptrIN4llvm17raw_pwrite_streamESt14default_deleteIS5_EE'/>
<size>4</size>
<doc f='llvm/llvm/include/llvm/Transforms/Instrumentation/AddressSanitizer.h' l='113'>/// Public interface to the address sanitizer module pass for instrumenting code
/// to check for various memory errors.
///
/// This adds &apos;asan.module_ctor&apos; to &apos;llvm.global_ctors&apos;. This pass may also
/// run intependently of the function address sanitizer.</doc>
<fun r='_ZN4llvm26ModuleAddressSanitizerPassC1Ebbbb'/>
<fun r='_ZN4llvm26ModuleAddressSanitizerPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE'/>
<fun r='_ZN4llvm26ModuleAddressSanitizerPass10isRequiredEv'/>
<mbr r='llvm::ModuleAddressSanitizerPass::CompileKernel' o='0' t='bool'/>
<mbr r='llvm::ModuleAddressSanitizerPass::Recover' o='8' t='bool'/>
<mbr r='llvm::ModuleAddressSanitizerPass::UseGlobalGC' o='16' t='bool'/>
<mbr r='llvm::ModuleAddressSanitizerPass::UseOdrIndicator' o='24' t='bool'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='115' c='_ZN4llvm11PassBuilder15parseModulePassERNS_11PassManagerINS_6ModuleENS_15AnalysisManagerIS2_JEEEJEEERKNS0_15PipelineElementE'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='118' c='_ZN4llvm11PassBuilder15parseModulePassERNS_11PassManagerINS_6ModuleENS_15AnalysisManagerIS2_JEEEJEEERKNS0_15PipelineElementE'/>
<size>4</size>
<use f='llvm/llvm/tools/opt/NewPMDriver.cpp' l='332' c='_ZN4llvm15runPassPipelineENS_9StringRefERNS_6ModuleEPNS_13TargetMachineEPNS_21TargetLibraryInfoImplEPNS_14ToolOutputFileES8_S8_S0_NS_8ArrayRefIS0_EENS12269778'/>
<size>4</size>
