<dec f='llvm/polly/include/polly/CodeGen/LoopGeneratorsKMP.h' l='128' type='void polly::ParallelLoopGeneratorKMP::createCallStaticInit(llvm::Value * GlobalThreadID, llvm::Value * IsLastPtr, llvm::Value * LBPtr, llvm::Value * UBPtr, llvm::Value * StridePtr, llvm::Value * ChunkSize)'/>
<doc f='llvm/polly/include/polly/CodeGen/LoopGeneratorsKMP.h' l='118'>/// Create a runtime library call to prepare the OpenMP runtime.
  /// For statically scheduled loops, saving the loop arguments.
  ///
  /// @param GlobalThreadID   The global thread ID.
  /// @param IsLastPtr        Pointer to a flag, which is set to 1 if this is
  ///                         the last chunk of work, or 0 otherwise.
  /// @param LBPtr            Pointer to the lower bound for the next chunk.
  /// @param UBPtr            Pointer to the upper bound for the next chunk.
  /// @param StridePtr        Pointer to the stride for the next chunk.
  /// @param ChunkSize        The chunk size of the parallel loop.</doc>
<use f='llvm/polly/lib/CodeGen/LoopGeneratorsKMP.cpp' l='235' u='c' c='_ZN5polly24ParallelLoopGeneratorKMP11createSubFnEPN4llvm5ValueEPNS1_10AllocaInstENS1_9SetVectorIS3_St6vectorIS3_SaIS3_EENS1_8DenseSetIS3_NS1_12DenseMa11000764'/>
<def f='llvm/polly/lib/CodeGen/LoopGeneratorsKMP.cpp' l='354' ll='397' type='void polly::ParallelLoopGeneratorKMP::createCallStaticInit(llvm::Value * GlobalThreadID, llvm::Value * IsLastPtr, llvm::Value * LBPtr, llvm::Value * UBPtr, llvm::Value * StridePtr, llvm::Value * ChunkSize)'/>
