<dec f='llvm/llvm/lib/FileCheck/FileCheckImpl.h' l='782' type='static Expected&lt;std::unique_ptr&lt;ExpressionAST&gt; &gt; llvm::Pattern::parseBinop(llvm::StringRef Expr, llvm::StringRef &amp; RemainingExpr, std::unique_ptr&lt;ExpressionAST&gt; LeftOp, bool IsLegacyLineExpr, Optional&lt;size_t&gt; LineNumber, llvm::FileCheckPatternContext * Context, const llvm::SourceMgr &amp; SM)'/>
<use f='llvm/llvm/lib/FileCheck/FileCheck.cpp' l='613' u='c' c='_ZN4llvm7Pattern14parseParenExprERNS_9StringRefENS_8OptionalImEEPNS_23FileCheckPatternContextERKNS_9SourceMgrE'/>
<def f='llvm/llvm/lib/FileCheck/FileCheck.cpp' l='627' ll='670' type='static Expected&lt;std::unique_ptr&lt;ExpressionAST&gt; &gt; llvm::Pattern::parseBinop(llvm::StringRef Expr, llvm::StringRef &amp; RemainingExpr, std::unique_ptr&lt;ExpressionAST&gt; LeftOp, bool IsLegacyLineExpr, Optional&lt;size_t&gt; LineNumber, llvm::FileCheckPatternContext * Context, const llvm::SourceMgr &amp; SM)'/>
<use f='llvm/llvm/lib/FileCheck/FileCheck.cpp' l='713' u='c' c='_ZN4llvm7Pattern13parseCallExprERNS_9StringRefES1_NS_8OptionalImEEPNS_23FileCheckPatternContextERKNS_9SourceMgrE'/>
<use f='llvm/llvm/lib/FileCheck/FileCheck.cpp' l='840' u='c' c='_ZN4llvm7Pattern29parseNumericSubstitutionBlockENS_9StringRefERNS_8OptionalIPNS_15NumericVariableEEEbNS2_ImEEPNS_23FileCheckPatternContextERKNS_9SourceMgrE'/>
<doc f='llvm/llvm/lib/FileCheck/FileCheckImpl.h' l='772'>/// Parses and updates \p RemainingExpr for a binary operation at line
  /// \p LineNumber, or before input is parsed if \p LineNumber is None. The
  /// left operand of this binary operation is given in \p LeftOp and \p Expr
  /// holds the string for the full expression, including the left operand.
  /// Parameter \p IsLegacyLineExpr indicates whether we are parsing a legacy
  /// @LINE expression. Parameter \p Context points to the class instance
  /// holding the live string and numeric variables. \returns the class
  /// representing the binary operation in the AST of the expression, or an
  /// error holding a diagnostic against \p SM otherwise.</doc>
