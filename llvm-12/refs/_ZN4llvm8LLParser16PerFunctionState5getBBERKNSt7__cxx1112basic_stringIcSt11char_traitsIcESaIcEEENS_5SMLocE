<dec f='llvm/llvm/lib/AsmParser/LLParser.h' l='447' type='llvm::BasicBlock * llvm::LLParser::PerFunctionState::getBB(const std::string &amp; Name, llvm::LLParser::LocTy Loc)'/>
<def f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='3181' ll='3185' type='llvm::BasicBlock * llvm::LLParser::PerFunctionState::getBB(const std::string &amp; Name, llvm::LLParser::LocTy Loc)'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='3211' u='c' c='_ZN4llvm8LLParser16PerFunctionState8defineBBERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiNS_5SMLocE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='3468' u='c' c='_ZN4llvm8LLParser10parseValIDERNS_5ValIDEPNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='5899' u='c' c='_ZN4llvm8LLParser16PerFunctionState31resolveForwardRefBlockAddressesEv'/>
<doc f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='3179'>/// getBB - Get a basic block with the specified name or ID, creating a
/// forward reference record if needed.</doc>
<doc f='llvm/llvm/lib/AsmParser/LLParser.h' l='444'>/// GetBB - Get a basic block with the specified name or ID, creating a
      /// forward reference record if needed.  This can return null if the value
      /// is not a BasicBlock.</doc>
