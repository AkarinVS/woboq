<dec f='llvm/libcxxabi/src/private_typeinfo.h' l='131' type='void __cxxabiv1::__class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info * , const void * , int , bool ) const'/>
<use f='llvm/libcxxabi/src/private_typeinfo.cpp' l='690' u='c' c='__cxxabiv1::__dynamic_cast'/>
<ovr f='llvm/libcxxabi/src/private_typeinfo.cpp' l='863' c='__cxxabiv1::__vmi_class_type_info::search_below_dst'/>
<ovr f='llvm/libcxxabi/src/private_typeinfo.cpp' l='1036' c='__cxxabiv1::__si_class_type_info::search_below_dst'/>
<use f='llvm/libcxxabi/src/private_typeinfo.cpp' l='1106' u='c' c='__cxxabiv1::__si_class_type_info::search_below_dst'/>
<def f='llvm/libcxxabi/src/private_typeinfo.cpp' l='1112' ll='1153' type='void __cxxabiv1::__class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info * info, const void * current_ptr, int path_below, bool use_strcmp) const'/>
<use f='llvm/libcxxabi/src/private_typeinfo.cpp' l='1318' u='c' c='__cxxabiv1::__base_class_type_info::search_below_dst'/>
<doc f='llvm/libcxxabi/src/private_typeinfo.cpp' l='1110'>// This is the same algorithm as __vmi_class_type_info::search_below_dst but
//   simplified to the case that there is no base class.</doc>
