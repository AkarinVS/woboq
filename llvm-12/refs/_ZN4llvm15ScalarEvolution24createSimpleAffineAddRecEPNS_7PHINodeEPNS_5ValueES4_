<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1572' type='const llvm::SCEV * llvm::ScalarEvolution::createSimpleAffineAddRec(llvm::PHINode * PN, llvm::Value * BEValueV, llvm::Value * StartValueV)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1571'>/// A helper function for createAddRecFromPHI to handle simple cases.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5038' ll='5080' type='const llvm::SCEV * llvm::ScalarEvolution::createSimpleAffineAddRec(llvm::PHINode * PN, llvm::Value * BEValueV, llvm::Value * StartValueV)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5115' u='c' c='_ZN4llvm15ScalarEvolution19createAddRecFromPHIEPNS_7PHINodeE'/>
<doc f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5032'>/// A helper function for createAddRecFromPHI to handle simple cases.
///
/// This function tries to find an AddRec expression for the simplest (yet most
/// common) cases: PN = PHI(Start, OP(Self, LoopInvariant)).
/// If it fails, createAddRecFromPHI will use a more general, but slow,
/// technique for finding the AddRec expression.</doc>
