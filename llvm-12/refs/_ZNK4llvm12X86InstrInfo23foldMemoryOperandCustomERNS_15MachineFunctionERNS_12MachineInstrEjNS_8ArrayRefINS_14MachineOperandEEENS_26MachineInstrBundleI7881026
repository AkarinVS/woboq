<dec f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='598' type='llvm::MachineInstr * llvm::X86InstrInfo::foldMemoryOperandCustom(llvm::MachineFunction &amp; MF, llvm::MachineInstr &amp; MI, unsigned int OpNum, ArrayRef&lt;llvm::MachineOperand&gt; MOs, MachineBasicBlock::iterator InsertPt, unsigned int Size, llvm::Align Alignment) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='596'>/// Handles memory folding for special case instructions, for instance those
  /// requiring custom manipulation of the address.</doc>
<def f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='5401' ll='5473' type='llvm::MachineInstr * llvm::X86InstrInfo::foldMemoryOperandCustom(llvm::MachineFunction &amp; MF, llvm::MachineInstr &amp; MI, unsigned int OpNum, ArrayRef&lt;llvm::MachineOperand&gt; MOs, MachineBasicBlock::iterator InsertPt, unsigned int Size, llvm::Align Alignment) const'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='5537' u='c' c='_ZNK4llvm12X86InstrInfo21foldMemoryOperandImplERNS_15MachineFunctionERNS_12MachineInstrEjNS_8ArrayRefINS_14MachineOperandEEENS_26MachineInstrBundleIte4038674'/>
