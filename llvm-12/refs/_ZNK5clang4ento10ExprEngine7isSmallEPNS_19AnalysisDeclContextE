<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h' l='794' type='bool clang::ento::ExprEngine::isSmall(clang::AnalysisDeclContext * ADC) const'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h' l='789'>/// See if the given AnalysisDeclContext is built for a function that we
  /// should always inline simply because it&apos;s small enough.
  /// Apart from &quot;small&quot; functions, we also have &quot;large&quot; functions
  /// (cf. isLarge()), some of which are huge (cf. isHuge()), and we classify
  /// the remaining functions as &quot;medium&quot;.</doc>
<def f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='367' ll='375' type='bool clang::ento::ExprEngine::isSmall(clang::AnalysisDeclContext * ADC) const'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='407' u='c' c='_ZN5clang4ento10ExprEngine18examineStackFramesEPKNS_4DeclEPKNS_15LocationContextERbRj'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='1001' u='c' c='_ZN5clang4ento10ExprEngine16shouldInlineCallERKNS0_9CallEventEPKNS_4DeclEPKNS0_12ExplodedNodeERKNS0_15EvalCallOptionsE'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='1012' u='c' c='_ZN5clang4ento10ExprEngine16shouldInlineCallERKNS0_9CallEventEPKNS_4DeclEPKNS0_12ExplodedNodeERKNS0_15EvalCallOptionsE'/>
