<dec f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='39' type='bool llvm::isSafeToExpandAt(const llvm::SCEV * S, const llvm::Instruction * InsertionPoint, llvm::ScalarEvolution &amp; SE)'/>
<use f='llvm/llvm/lib/CodeGen/HardwareLoops.cpp' l='404' u='c' c='_ZN12_GLOBAL__N_112HardwareLoop13InitLoopCountEv'/>
<use f='llvm/llvm/lib/CodeGen/HardwareLoops.cpp' l='410' u='c' c='_ZN12_GLOBAL__N_112HardwareLoop13InitLoopCountEv'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h' l='36'>/// Return true if the given expression is safe to expand in the sense that
/// all materialized values are defined and safe to speculate at the specified
/// location and their operands are defined at this location.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp' l='1456' u='c' c='_ZN12_GLOBAL__N_115LoopConstrainer3runEv'/>
<use f='llvm/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp' l='1483' u='c' c='_ZN12_GLOBAL__N_115LoopConstrainer3runEv'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='521' u='c' c='_ZN12_GLOBAL__N_115LoopPredication12findInsertPtEPN4llvm11InstructionENS1_8ArrayRefIPKNS1_4SCEVEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='587' u='c' c='_ZN12_GLOBAL__N_115LoopPredication35widenICmpRangeCheckIncrementingLoopENS_8LoopICmpES1_RN4llvm12SCEVExpanderEPNS2_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='588' u='c' c='_ZN12_GLOBAL__N_115LoopPredication35widenICmpRangeCheckIncrementingLoopENS_8LoopICmpES1_RN4llvm12SCEVExpanderEPNS2_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='630' u='c' c='_ZN12_GLOBAL__N_115LoopPredication35widenICmpRangeCheckDecrementingLoopENS_8LoopICmpES1_RN4llvm12SCEVExpanderEPNS2_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='631' u='c' c='_ZN12_GLOBAL__N_115LoopPredication35widenICmpRangeCheckDecrementingLoopENS_8LoopICmpES1_RN4llvm12SCEVExpanderEPNS2_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='1106' u='c' c='_ZN12_GLOBAL__N_115LoopPredication18predicateLoopExitsEPN4llvm4LoopERNS1_12SCEVExpanderE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='1139' u='c' c='_ZN12_GLOBAL__N_115LoopPredication18predicateLoopExitsEPN4llvm4LoopERNS1_12SCEVExpanderE'/>
<def f='llvm/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp' l='2662' ll='2683' type='bool llvm::isSafeToExpandAt(const llvm::SCEV * S, const llvm::Instruction * InsertionPoint, llvm::ScalarEvolution &amp; SE)'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp' l='678' u='c' c='_ZN12_GLOBAL__N_114SimplifyIndvar30replaceIVUserWithLoopInvariantEPN4llvm11InstructionE'/>
<use f='llvm/llvm/unittests/Transforms/Utils/ScalarEvolutionExpanderTest.cpp' l='278' u='c' c='_ZN4llvm61ScalarEvolutionExpanderTest_SCEVExpanderIsSafeToExpandAt_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/ScalarEvolutionExpanderTest.cpp' l='279' u='c' c='_ZN4llvm61ScalarEvolutionExpanderTest_SCEVExpanderIsSafeToExpandAt_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/ScalarEvolutionExpanderTest.cpp' l='280' u='c' c='_ZN4llvm61ScalarEvolutionExpanderTest_SCEVExpanderIsSafeToExpandAt_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/ScalarEvolutionExpanderTest.cpp' l='281' u='c' c='_ZN4llvm61ScalarEvolutionExpanderTest_SCEVExpanderIsSafeToExpandAt_Test8TestBodyEv'/>
