<def f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='1783' ll='1785' type='bool llvm::CallBase::onlyAccessesInaccessibleMemory() const'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='1781'>/// Determine if the function may only access memory that is
  /// inaccessible from the IR.</doc>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='685' u='c' c='_ZN4llvm13BasicAAResult17getModRefBehaviorEPKNS_8CallBaseE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='599' u='c' c='_ZL29isSafeAndProfitableToSinkLoadPN4llvm8LoadInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp' l='1574' u='c' c='_ZN12_GLOBAL__N_110canSkipDefEPN4llvm9MemoryDefEb'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp' l='1758' u='c' c='_ZN12_GLOBAL__N_18DSEState19isCompleteOverwriteERKN4llvm14MemoryLocationEPNS1_11InstructionES6_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp' l='1886' u='c' c='_ZN12_GLOBAL__N_18DSEState13isReadClobberERKN4llvm14MemoryLocationEPNS1_11InstructionE'/>
