<dec f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h' l='1000' type='void llvm::DAGTypeLegalizer::SplitRes_MERGE_VALUES(llvm::SDNode * N, unsigned int ResNo, llvm::SDValue &amp; Lo, llvm::SDValue &amp; Hi)'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h' l='999'>// Generic Result Splitting.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='2030' u='c' c='_ZN4llvm16DAGTypeLegalizer19ExpandIntegerResultEPNS_6SDNodeEj'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp' l='503' ll='507' type='void llvm::DAGTypeLegalizer::SplitRes_MERGE_VALUES(llvm::SDNode * N, unsigned int ResNo, llvm::SDValue &amp; Lo, llvm::SDValue &amp; Hi)'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp' l='494'>//===--------------------------------------------------------------------===//
// Generic Result Splitting.
//===--------------------------------------------------------------------===//

// Be careful to make no assumptions about which of Lo/Hi is stored first in
// memory (for vectors it is always Lo first followed by Hi in the following
// bytes; for integers and floats it is Lo first if and only if the machine is
// little-endian).</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp' l='903' u='c' c='_ZN4llvm16DAGTypeLegalizer17SplitVectorResultEPNS_6SDNodeEj'/>
