<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h' l='831' type='void clang::ento::ExprEngine::performTrivialCopy(clang::ento::NodeBuilder &amp; Bldr, clang::ento::ExplodedNode * Pred, const clang::ento::CallEvent &amp; Call)'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h' l='829'>/// Models a trivial copy or move constructor or trivial assignment operator
  /// call with a simple bind.</doc>
<def f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCXX.cpp' l='40' ll='95' type='void clang::ento::ExprEngine::performTrivialCopy(clang::ento::NodeBuilder &amp; Bldr, clang::ento::ExplodedNode * Pred, const clang::ento::CallEvent &amp; Call)'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCXX.cpp' l='627' u='c' c='_ZN5clang4ento10ExprEngine17handleConstructorEPKNS_4ExprEPNS0_12ExplodedNodeERNS0_15ExplodedNodeSetE'/>
<doc f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCXX.cpp' l='38'>// FIXME: This is the sort of code that should eventually live in a Core
// checker rather than as a special case in ExprEngine.</doc>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='1041' u='c' c='_ZN5clang4ento10ExprEngine15defaultEvalCallERNS0_11NodeBuilderEPNS0_12ExplodedNodeERKNS0_9CallEventERKNS0_15EvalCallOptionsE'/>
