<dec f='llvm/clang/include/clang/Parse/Parser.h' l='866' type='clang::Parser::AnnotatedNameKind clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback * CCC = nullptr)'/>
<use f='llvm/clang/lib/Parse/ParseStmt.cpp' l='191' u='c' c='_ZN5clang6Parser42ParseStatementOrDeclarationAfterAttributesERN4llvm11SmallVectorIPNS_4StmtELj32EEENS0_17ParsedStmtContextEPNS_14SourceLocationERNS0_214630584'/>
<use f='llvm/clang/lib/Parse/ParseTentative.cpp' l='1280' u='c' c='_ZN5clang6Parser25isCXXDeclarationSpecifierENS0_8TPResultEPb'/>
<use f='llvm/clang/lib/Parse/ParseTentative.cpp' l='1540' u='c' c='_ZN5clang6Parser25isCXXDeclarationSpecifierENS0_8TPResultEPb'/>
<def f='llvm/clang/lib/Parse/Parser.cpp' l='1623' ll='1802' type='Parser::AnnotatedNameKind clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback * CCC = nullptr)'/>
<doc f='llvm/clang/lib/Parse/Parser.cpp' l='1616'>/// Attempt to classify the name at the current token position. This may
/// form a type, scope or primary expression annotation, or replace the token
/// with a typo-corrected keyword. This is only appropriate when the current
/// name must refer to an entity which has already been declared.
///
/// \param CCC Indicates how to perform typo-correction for this name. If NULL,
///        no typo correction will be performed.</doc>
