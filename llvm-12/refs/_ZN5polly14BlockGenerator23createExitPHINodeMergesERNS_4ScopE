<dec f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='417' type='void polly::BlockGenerator::createExitPHINodeMerges(polly::Scop &amp; S)'/>
<def f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='930' ll='975' type='void polly::BlockGenerator::createExitPHINodeMerges(polly::Scop &amp; S)'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1007' u='c' c='_ZN5polly14BlockGenerator12finalizeSCoPERNS_4ScopE'/>
<doc f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='403'>/// Create exit PHI node merges for PHI nodes with more than two edges
  ///        from inside the scop.
  ///
  /// For scops which have a PHI node in the exit block that has more than two
  /// incoming edges from inside the scop region, we require some special
  /// handling to understand which of the possible values will be passed to the
  /// PHI node from inside the optimized version of the scop. To do so ScopInfo
  /// models the possible incoming values as write accesses of the ScopStmts.
  ///
  /// This function creates corresponding code to reload the computed outgoing
  /// value from the stack slot it has been stored into and to pass it on to the
  /// PHI node in the original exit block.
  ///
  /// @param S The scop for which to generate the exiting PHI nodes.</doc>
