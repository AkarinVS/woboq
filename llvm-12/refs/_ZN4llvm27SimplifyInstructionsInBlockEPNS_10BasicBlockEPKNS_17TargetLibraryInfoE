<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='139' type='bool llvm::SimplifyInstructionsInBlock(llvm::BasicBlock * BB, const llvm::TargetLibraryInfo * TLI = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='134'>/// Scan the specified basic block and try to simplify any instructions in it
/// and recursively delete dead instructions.
///
/// This returns true if it changed the code, note that it can delete
/// instructions in other blocks as well in this block.</doc>
<use f='llvm/llvm/lib/CodeGen/ExpandMemCmp.cpp' l='856' u='c' c='_ZN12_GLOBAL__N_116ExpandMemCmpPass7runImplERN4llvm8FunctionEPKNS1_17TargetLibraryInfoEPKNS1_19TargetTransformInfoEPKNS1_14TargetLoweringEPNS1_18Profi10063634'/>
<use f='llvm/llvm/lib/CodeGen/WinEHPrepare.cpp' l='1030' u='c' c='_ZN12_GLOBAL__N_112WinEHPrepare23cleanupPreparedFuncletsERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp' l='1188' u='c' c='_ZN12_GLOBAL__N_124MVEGatherScatterLowering13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp' l='1199' u='c' c='_ZN12_GLOBAL__N_124MVEGatherScatterLowering13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombine.cpp' l='390' u='c' c='_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2305' u='c' c='_ZN4llvm17JumpThreadingPass27threadThroughTwoBasicBlocksEPNS_10BasicBlockES2_S2_S2_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2306' u='c' c='_ZN4llvm17JumpThreadingPass27threadThroughTwoBasicBlocksEPNS_10BasicBlockES2_S2_S2_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2423' u='c' c='_ZN4llvm17JumpThreadingPass10threadEdgeEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EES2_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp' l='1495' u='c' c='_ZN12_GLOBAL__N_110LoopReroll14DAGRootTracker7replaceEPKN4llvm4SCEVE'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='677' ll='711' type='bool llvm::SimplifyInstructionsInBlock(llvm::BasicBlock * BB, const llvm::TargetLibraryInfo * TLI = nullptr)'/>
<doc f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='672'>/// SimplifyInstructionsInBlock - Scan the specified basic block and try to
/// simplify any instructions in it and recursively delete dead instructions.
///
/// This returns true if it changed the code, note that it can delete
/// instructions in other blocks as well in this block.</doc>
<use f='llvm/llvm/lib/Transforms/Vectorize/VectorCombine.cpp' l='789' u='c' c='_ZN12_GLOBAL__N_113VectorCombine3runEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/LocalTest.cpp' l='580' u='c' c='_ZN54SalvageDebugInfoTest_RecursiveBlockSimplification_Test8TestBodyEv'/>
