<dec f='llvm/llvm/lib/Target/PowerPC/PPCFrameLowering.h' l='124' type='bool llvm::PPCFrameLowering::assignCalleeSavedSpillSlots(llvm::MachineFunction &amp; MF, const llvm::TargetRegisterInfo * TRI, std::vector&lt;CalleeSavedInfo&gt; &amp; CSI) const'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCFrameLowering.h' l='120'>/// This function will assign callee saved gprs to volatile vector registers
  /// for prologue spills when applicable. It returns false if there are any
  /// registers which were not spilled to volatile vector registers.</doc>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetFrameLowering.h' l='161' c='_ZNK4llvm19TargetFrameLowering27assignCalleeSavedSpillSlotsERNS_15MachineFunctionEPKNS_18TargetRegisterInfoERSt6vectorINS_15CalleeSavedInfoESaIS7_EE'/>
<def f='llvm/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp' l='2230' ll='2280' type='bool llvm::PPCFrameLowering::assignCalleeSavedSpillSlots(llvm::MachineFunction &amp; MF, const llvm::TargetRegisterInfo * TRI, std::vector&lt;CalleeSavedInfo&gt; &amp; CSI) const'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp' l='2225'>// This function checks if a callee saved gpr can be spilled to a volatile
// vector register. This occurs for leaf functions when the option
// ppc-enable-pe-vector-spills is enabled. If there are any remaining registers
// which were not spilled to vectors, return false so the target independent
// code can handle them by assigning a FrameIdx to a stack slot.</doc>
