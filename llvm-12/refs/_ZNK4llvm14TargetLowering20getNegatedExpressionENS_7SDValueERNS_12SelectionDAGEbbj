<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3639' ll='3643' type='llvm::SDValue llvm::TargetLowering::getNegatedExpression(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG, bool LegalOps, bool OptForSize, unsigned int Depth = 0) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3637'>/// This is the helper function to return the newly negated expression if
  /// the cost is not expensive.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='13381' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner9visitFSUBEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='13402' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner9visitFSUBEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='14441' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner9visitFNEGEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='46550' u='c' c='_ZL11combineFnegPN4llvm6SDNodeERNS_12SelectionDAGERNS_14TargetLowering15DAGCombinerInfoERKNS_12X86SubtargetE'/>
