<def f='llvm/llvm/include/llvm/Support/DebugCounter.h' l='71' ll='73' type='static unsigned int llvm::DebugCounter::registerCounter(llvm::StringRef Name, llvm::StringRef Desc)'/>
<use f='llvm/llvm/lib/Analysis/AssumeBundleQueries.cpp' l='29' macro='1' u='c'/>
<doc f='llvm/llvm/include/llvm/Support/DebugCounter.h' l='66'>// Register a counter with the specified name.
  //
  // FIXME: Currently, counter registration is required to happen before command
  // line option parsing. The main reason to register counters is to produce a
  // nice list of them on the command line, but i&apos;m not sure this is worth it.</doc>
<use f='llvm/llvm/lib/CodeGen/MachineCopyPropagation.cpp' l='83' macro='1' u='c'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64FalkorHWPFFix.cpp' l='64' macro='1' u='c'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp' l='58' macro='1' u='c'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp' l='40' macro='1' u='c'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp' l='42' macro='1' u='c'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp' l='44' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='50' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineNegator.cpp' l='90' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='127' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp' l='37' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DCE.cpp' l='36' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp' l='95' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DivRemPairs.cpp' l='38' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/EarlyCSE.cpp' l='78' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/NewGVN.cpp' l='146' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/NewGVN.cpp' l='148' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/PartiallyInlineLibCalls.cpp' l='28' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Utils/AssumeBundleBuilder.cpp' l='47' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Utils/PredicateInfo.cpp' l='53' macro='1' u='c'/>
