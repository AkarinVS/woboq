<dec f='llvm/llvm/lib/Target/AVR/MCTargetDesc/AVRMCCodeEmitter.h' l='61' type='unsigned int llvm::AVRMCCodeEmitter::encodeMemri(const llvm::MCInst &amp; MI, unsigned int OpNo, SmallVectorImpl&lt;llvm::MCFixup&gt; &amp; Fixups, const llvm::MCSubtargetInfo &amp; STI) const'/>
<def f='llvm/llvm/lib/Target/AVR/MCTargetDesc/AVRMCCodeEmitter.cpp' l='134' ll='168' type='unsigned int llvm::AVRMCCodeEmitter::encodeMemri(const llvm::MCInst &amp; MI, unsigned int OpNo, SmallVectorImpl&lt;llvm::MCFixup&gt; &amp; Fixups, const llvm::MCSubtargetInfo &amp; STI) const'/>
<use f='llvm/build/lib/Target/AVR/AVRGenMCCodeEmitter.inc' l='573' u='c' c='_ZNK4llvm16AVRMCCodeEmitter21getBinaryCodeForInstrERKNS_6MCInstERNS_15SmallVectorImplINS_7MCFixupEEERKNS_15MCSubtargetInfoE'/>
<use f='llvm/build/lib/Target/AVR/AVRGenMCCodeEmitter.inc' l='587' u='c' c='_ZNK4llvm16AVRMCCodeEmitter21getBinaryCodeForInstrERKNS_6MCInstERNS_15SmallVectorImplINS_7MCFixupEEERKNS_15MCSubtargetInfoE'/>
<doc f='llvm/llvm/lib/Target/AVR/MCTargetDesc/AVRMCCodeEmitter.cpp' l='130'>/// Encodes a `memri` operand.
/// The operand is 7-bits.
/// * The lower 6 bits is the immediate
/// * The upper bit is the pointer register bit (Z=0,Y=1)</doc>
<doc f='llvm/llvm/lib/Target/AVR/MCTargetDesc/AVRMCCodeEmitter.h' l='60'>/// Encodes a `register+immediate` operand for `LDD`/`STD`.</doc>
