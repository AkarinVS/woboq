<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='1165' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildAtomicRMW(unsigned int Opcode, const llvm::DstOp &amp; OldValRes, const llvm::SrcOp &amp; Addr, const llvm::SrcOp &amp; Val, llvm::MachineMemOperand &amp; MMO)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='1152'>/// Build and insert `OldValRes&lt;def&gt; = G_ATOMICRMW_&lt;Opcode&gt; Addr, Val, MMO`.
  ///
  /// Atomically read-modify-update the value at \p Addr with \p Val. Puts the
  /// original value from \p Addr in \p OldValRes. The modification is
  /// determined by the opcode.
  ///
  /// \pre setBasicBlock or setMI must have been called.
  /// \pre \p OldValRes must be a generic virtual register.
  /// \pre \p Addr must be a generic virtual register with pointer type.
  /// \pre \p OldValRes, and \p Val must be generic virtual registers of the
  ///      same type.
  ///
  /// \return a MachineInstrBuilder for the newly created instruction.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp' l='2780' u='c' c='_ZN4llvm12IRTranslator18translateAtomicRMWERKNS_4UserERNS_16MachineIRBuilderE'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='816' ll='838' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildAtomicRMW(unsigned int Opcode, const llvm::DstOp &amp; OldValRes, const llvm::SrcOp &amp; Addr, const llvm::SrcOp &amp; Val, llvm::MachineMemOperand &amp; MMO)'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='843' u='c' c='_ZN4llvm16MachineIRBuilder18buildAtomicRMWXchgENS_8RegisterES1_S1_RNS_17MachineMemOperandE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='849' u='c' c='_ZN4llvm16MachineIRBuilder17buildAtomicRMWAddENS_8RegisterES1_S1_RNS_17MachineMemOperandE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='855' u='c' c='_ZN4llvm16MachineIRBuilder17buildAtomicRMWSubENS_8RegisterES1_S1_RNS_17MachineMemOperandE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='861' u='c' c='_ZN4llvm16MachineIRBuilder17buildAtomicRMWAndENS_8RegisterES1_S1_RNS_17MachineMemOperandE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='867' u='c' c='_ZN4llvm16MachineIRBuilder18buildAtomicRMWNandENS_8RegisterES1_S1_RNS_17MachineMemOperandE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='874' u='c' c='_ZN4llvm16MachineIRBuilder16buildAtomicRMWOrENS_8RegisterES1_S1_RNS_17MachineMemOperandE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='880' u='c' c='_ZN4llvm16MachineIRBuilder17buildAtomicRMWXorENS_8RegisterES1_S1_RNS_17MachineMemOperandE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='886' u='c' c='_ZN4llvm16MachineIRBuilder17buildAtomicRMWMaxENS_8RegisterES1_S1_RNS_17MachineMemOperandE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='892' u='c' c='_ZN4llvm16MachineIRBuilder17buildAtomicRMWMinENS_8RegisterES1_S1_RNS_17MachineMemOperandE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='898' u='c' c='_ZN4llvm16MachineIRBuilder18buildAtomicRMWUmaxENS_8RegisterES1_S1_RNS_17MachineMemOperandE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='904' u='c' c='_ZN4llvm16MachineIRBuilder18buildAtomicRMWUminENS_8RegisterES1_S1_RNS_17MachineMemOperandE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='912' u='c' c='_ZN4llvm16MachineIRBuilder18buildAtomicRMWFAddERKNS_5DstOpERKNS_5SrcOpES6_RNS_17MachineMemOperandE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='919' u='c' c='_ZN4llvm16MachineIRBuilder18buildAtomicRMWFSubERKNS_5DstOpERKNS_5SrcOpES6_RNS_17MachineMemOperandE'/>
