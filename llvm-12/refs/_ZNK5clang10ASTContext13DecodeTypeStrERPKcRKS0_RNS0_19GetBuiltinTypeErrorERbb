<dec f='llvm/clang/include/clang/AST/ASTContext.h' l='2060' type='clang::QualType clang::ASTContext::DecodeTypeStr(const char *&amp; Str, const clang::ASTContext &amp; Context, ASTContext::GetBuiltinTypeError &amp; Error, bool &amp; RequireICE, bool AllowTypeModifiers) const'/>
<def f='llvm/clang/lib/AST/ASTContext.cpp' l='10408' ll='10412' type='clang::QualType clang::ASTContext::DecodeTypeStr(const char *&amp; Str, const clang::ASTContext &amp; Context, clang::ASTContext::GetBuiltinTypeError &amp; Error, bool &amp; RequireICE, bool AllowTypeModifiers) const'/>
<doc f='llvm/clang/lib/AST/ASTContext.cpp' l='10402'>// On some targets such as PowerPC, some of the builtins are defined with custom
// type decriptors for target-dependent types. These descriptors are decoded in
// other functions, but it may be useful to be able to fall back to default
// descriptor decoding to define builtins mixing target-dependent and target-
// independent types. This function allows decoding one type descriptor with
// default decoding.</doc>
<use f='llvm/clang/lib/Sema/SemaChecking.cpp' l='3227' u='c' c='_ZL23DecodePPCMMATypeFromStrRN5clang10ASTContextERPKcRj'/>
