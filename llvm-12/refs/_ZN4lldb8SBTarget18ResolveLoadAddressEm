<dec f='llvm/lldb/include/lldb/API/SBTarget.h' l='493' type='lldb::SBAddress lldb::SBTarget::ResolveLoadAddress(lldb::addr_t vm_addr)'/>
<use f='llvm/build/tools/lldb/bindings/python/LLDBWrapPython.cpp' l='55453' u='c' c='_ZL33_wrap_SBTarget_ResolveLoadAddressP7_objectS0_'/>
<doc f='llvm/lldb/include/lldb/API/SBTarget.h' l='482'>/// Resolve a current load address into a section offset address.
  ///
  /// \param[in] vm_addr
  ///     A virtual address from the current process state that is to
  ///     be translated into a section offset address.
  ///
  /// \return
  ///     An SBAddress which will be valid if \a vm_addr was
  ///     successfully resolved into a section offset address, or an
  ///     invalid SBAddress if \a vm_addr doesn&apos;t resolve to a section
  ///     in a module.</doc>
<use f='llvm/lldb/source/API/SBAddress.cpp' l='135' u='c' c='_ZN4lldb9SBAddress14SetLoadAddressEmRNS_8SBTargetE'/>
<def f='llvm/lldb/source/API/SBTarget.cpp' l='623' ll='640' type='lldb::SBAddress lldb::SBTarget::ResolveLoadAddress(lldb::addr_t vm_addr)'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='624' u='a' c='_ZN4lldb8SBTarget18ResolveLoadAddressEm'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='624' u='a' c='_ZN4lldb8SBTarget18ResolveLoadAddressEm'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='2152' u='c' c='_ZN4lldb8SBTarget15GetInstructionsEmPKvm'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='2165' u='c' c='_ZN4lldb8SBTarget25GetInstructionsWithFlavorEmPKcPKvm'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='2499' u='a' c='_ZN12lldb_private5repro15RegisterMethodsERNS0_8RegistryE'/>
