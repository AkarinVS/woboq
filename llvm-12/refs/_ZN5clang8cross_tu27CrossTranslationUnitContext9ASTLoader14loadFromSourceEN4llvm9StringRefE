<dec f='llvm/clang/include/clang/CrossTU/CrossTranslationUnit.h' l='255' type='clang::cross_tu::CrossTranslationUnitContext::LoadResultTy clang::cross_tu::CrossTranslationUnitContext::ASTLoader::loadFromSource(llvm::StringRef Identifier)'/>
<use f='llvm/clang/lib/CrossTU/CrossTranslationUnit.cpp' l='529' u='c' c='_ZN5clang8cross_tu27CrossTranslationUnitContext9ASTLoader4loadEN4llvm9StringRefE'/>
<def f='llvm/clang/lib/CrossTU/CrossTranslationUnit.cpp' l='557' ll='588' type='CrossTranslationUnitContext::LoadResultTy clang::cross_tu::CrossTranslationUnitContext::ASTLoader::loadFromSource(llvm::StringRef SourceFilePath)'/>
<doc f='llvm/clang/lib/CrossTU/CrossTranslationUnit.cpp' l='546'>/// Load the AST from a source-file, which is supposed to be located inside the
/// YAML formatted invocation list file under the filesystem path specified by
/// \p InvocationList. The invocation list should contain absolute paths.
/// \p SourceFilePath is the absolute path of the source file that contains the
/// function definition the analysis is looking for. The Index is built by the
/// \p clang-extdef-mapping tool, which is also supposed to be generating
/// absolute paths.
///
/// Proper diagnostic emission requires absolute paths, so even if a future
/// change introduces the handling of relative paths, this must be taken into
/// consideration.</doc>
<doc f='llvm/clang/include/clang/CrossTU/CrossTranslationUnit.h' l='254'>/// Loads an AST from a source-file.</doc>
