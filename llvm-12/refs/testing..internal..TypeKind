<def f='llvm/llvm/utils/unittest/googlemock/include/gmock/internal/gmock-internal-utils.h' l='128' ll='130'/>
<use f='llvm/llvm/utils/unittest/googlemock/include/gmock/internal/gmock-internal-utils.h' l='186'/>
<use f='llvm/llvm/utils/unittest/googlemock/include/gmock/internal/gmock-internal-utils.h' l='186'/>
<use f='llvm/llvm/utils/unittest/googlemock/include/gmock/internal/gmock-internal-utils.h' l='171'/>
<use f='llvm/llvm/utils/unittest/googlemock/include/gmock/internal/gmock-internal-utils.h' l='171'/>
<use f='llvm/llvm/utils/unittest/googlemock/include/gmock/gmock-matchers.h' l='656' macro='1' c='_ZN7testing19SafeMatcherCastImpl4CastERKNS_7MatcherITL0__EE'/>
<use f='llvm/llvm/utils/unittest/googlemock/include/gmock/gmock-matchers.h' l='657' macro='1' c='_ZN7testing19SafeMatcherCastImpl4CastERKNS_7MatcherITL0__EE'/>
<doc f='llvm/llvm/utils/unittest/googlemock/include/gmock/internal/gmock-internal-utils.h' l='123'>// In what follows, we use the term &quot;kind&quot; to indicate whether a type
// is bool, an integer type (excluding bool), a floating-point type,
// or none of them.  This categorization is useful for determining
// when a matcher argument type can be safely converted to another
// type in the implementation of SafeMatcherCast.</doc>
