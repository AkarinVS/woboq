<dec f='llvm/lldb/include/lldb/API/SBValue.h' l='265' type='bool lldb::SBValue::MightHaveChildren()'/>
<use f='llvm/build/tools/lldb/bindings/python/LLDBWrapPython.cpp' l='76554' u='c' c='_ZL31_wrap_SBValue_MightHaveChildrenP7_objectS0_'/>
<doc f='llvm/lldb/include/lldb/API/SBValue.h' l='251'>/// Find out if a SBValue might have children.
  ///
  /// This call is much more efficient than GetNumChildren() as it
  /// doesn&apos;t need to complete the underlying type. This is designed
  /// to be used in a UI environment in order to detect if the
  /// disclosure triangle should be displayed or not.
  ///
  /// This function returns true for class, union, structure,
  /// pointers, references, arrays and more. Again, it does so without
  /// doing any expensive type completion.
  ///
  /// \return
  ///     Returns \b true if the SBValue might have children, or \b
  ///     false otherwise.</doc>
<def f='llvm/lldb/source/API/SBValue.cpp' l='955' ll='965' type='bool lldb::SBValue::MightHaveChildren()'/>
<use f='llvm/lldb/source/API/SBValue.cpp' l='956' u='a' c='_ZN4lldb7SBValue17MightHaveChildrenEv'/>
<use f='llvm/lldb/source/API/SBValue.cpp' l='956' u='a' c='_ZN4lldb7SBValue17MightHaveChildrenEv'/>
<use f='llvm/lldb/source/API/SBValue.cpp' l='1625' u='a' c='_ZN12lldb_private5repro15RegisterMethodsERNS0_8RegistryE'/>
<use f='llvm/lldb/tools/lldb-vscode/JSONUtils.cpp' l='980' u='c' c='_ZN11lldb_vscode14CreateVariableEN4lldb7SBValueEllb'/>
<use f='llvm/lldb/tools/lldb-vscode/lldb-vscode.cpp' l='1158' u='c' c='_ZN12_GLOBAL__N_116request_evaluateERKN4llvm4json6ObjectE'/>
<use f='llvm/lldb/tools/lldb-vscode/lldb-vscode.cpp' l='2716' u='c' c='_ZN12_GLOBAL__N_119request_setVariableERKN4llvm4json6ObjectE'/>
<use f='llvm/lldb/tools/lldb-vscode/lldb-vscode.cpp' l='2740' u='c' c='_ZN12_GLOBAL__N_119request_setVariableERKN4llvm4json6ObjectE'/>
<use f='llvm/lldb/tools/lldb-vscode/lldb-vscode.cpp' l='2892' u='c' c='_ZN12_GLOBAL__N_117request_variablesERKN4llvm4json6ObjectE'/>
