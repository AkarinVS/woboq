<dec f='llvm/llvm/include/llvm/Support/MemoryBuffer.h' l='201' type='static std::unique_ptr&lt;WritableMemoryBuffer&gt; llvm::WritableMemoryBuffer::getNewMemBuffer(size_t Size, const llvm::Twine &amp; BufferName = &quot;&quot;)'/>
<doc f='llvm/llvm/include/llvm/Support/MemoryBuffer.h' l='197'>/// Allocate a new zero-initialized MemoryBuffer of the specified size. Note
  /// that the caller need not initialize the memory allocated by this method.
  /// The memory is owned by the MemoryBuffer object.</doc>
<use f='llvm/clang/lib/Lex/ScratchBuffer.cpp' l='77' u='c' c='_ZN5clang13ScratchBuffer18AllocScratchBufferEj'/>
<use f='llvm/lld/COFF/DriverUtils.cpp' l='462' u='c' c='_ZN3lld4coffL32createMemoryBufferForManifestResEm'/>
<use f='llvm/llvm/lib/Object/WindowsResource.cpp' l='647' u='c' c='_ZN4llvm6object25WindowsResourceCOFFWriterC1ENS_4COFF12MachineTypesERKNS0_21WindowsResourceParserERNS_5ErrorE'/>
<def f='llvm/llvm/lib/Support/MemoryBuffer.cpp' l='313' ll='320' type='static std::unique_ptr&lt;WritableMemoryBuffer&gt; llvm::WritableMemoryBuffer::getNewMemBuffer(size_t Size, const llvm::Twine &amp; BufferName = &quot;&quot;)'/>
<use f='llvm/llvm/tools/llvm-objcopy/Buffer.cpp' l='64' u='c' c='_ZN4llvm7objcopy9MemBuffer8allocateEm'/>
<use f='llvm/llvm/unittests/Support/MemoryBufferTest.cpp' l='211' u='c' c='_ZN12_GLOBAL__N_130MemoryBufferTest_make_new_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/MemoryBufferTest.cpp' l='217' u='c' c='_ZN12_GLOBAL__N_130MemoryBufferTest_make_new_Test8TestBodyEv'/>
