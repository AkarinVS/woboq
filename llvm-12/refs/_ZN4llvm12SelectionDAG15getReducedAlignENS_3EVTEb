<dec f='llvm/llvm/include/llvm/CodeGen/SelectionDAG.h' l='1674' type='llvm::Align llvm::SelectionDAG::getReducedAlign(llvm::EVT VT, bool UseABI)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/SelectionDAG.h' l='1670'>/// In most cases this function returns the ABI alignment for a given type,
  /// except for illegal vector types where the alignment exceeds that of the
  /// stack. In such cases we attempt to break the vector down to a legal type
  /// and return the ABI alignment for that instead.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.cpp' l='897' u='c' c='_ZN4llvm16DAGTypeLegalizer20CreateStackStoreLoadENS_7SDValueENS_3EVTE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.cpp' l='898' u='c' c='_ZN4llvm16DAGTypeLegalizer20CreateStackStoreLoadENS_7SDValueENS_3EVTE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp' l='162' u='c' c='_ZN4llvm16DAGTypeLegalizer17ExpandRes_BITCASTEPNS_6SDNodeERNS_7SDValueES4_'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp' l='163' u='c' c='_ZN4llvm16DAGTypeLegalizer17ExpandRes_BITCASTEPNS_6SDNodeERNS_7SDValueES4_'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp' l='1278' u='c' c='_ZN4llvm16DAGTypeLegalizer28SplitVecRes_INSERT_SUBVECTOREPNS_6SDNodeERNS_7SDValueES4_'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp' l='1580' u='c' c='_ZN4llvm16DAGTypeLegalizer29SplitVecRes_INSERT_VECTOR_ELTEPNS_6SDNodeERNS_7SDValueES4_'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp' l='2421' u='c' c='_ZN4llvm16DAGTypeLegalizer29SplitVecOp_EXTRACT_VECTOR_ELTEPNS_6SDNodeE'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='2103' ll='2129' type='llvm::Align llvm::SelectionDAG::getReducedAlign(llvm::EVT VT, bool UseABI)'/>
