<dec f='include/pthread.h' l='719' type='int __sigsetjmp(struct __jmp_buf_tag * __env, int __savemask)'/>
<dec f='include/setjmp.h' l='54' type='int __sigsetjmp(struct __jmp_buf_tag * __env, int __savemask)'/>
<doc f='include/setjmp.h' l='51'>/* Store the calling environment in ENV, also saving the
   signal mask if SAVEMASK is nonzero.  Return 0.
   This is the internal name for `sigsetjmp&apos;.  */</doc>
<dec f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='598' type='int __sigsetjmp(void * env)'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_platform_linux.cpp' l='451' macro='1' u='c' c='__tsan::call_pthread_cancel_with_cleanup'/>
