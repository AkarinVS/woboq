<def f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafety.h' l='210' ll='211' type='void clang::threadSafety::ThreadSafetyHandler::handleNegativeNotHeld(const clang::NamedDecl * D, clang::threadSafety::ThreadSafetyHandler::Name LockName, clang::SourceLocation Loc)'/>
<use f='llvm/clang/lib/Analysis/ThreadSafety.cpp' l='1660' u='c' c='_ZN12_GLOBAL__N_112BuildLockset18warnIfMutexNotHeldEPKN5clang9NamedDeclEPKNS1_4ExprENS1_12threadSafety10AccessKindEPS5_NS8_22ProtectedOperationKindEN42126717'/>
<doc f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafety.h' l='205'>/// Warn when calling a function that a negative capability is not held.
  /// \param D -- The decl for the function requiring the negative capability.
  /// \param LockName -- The name for the lock expression, to be printed in the
  /// diagnostic.
  /// \param Loc -- The location of the protected operation.</doc>
<ovr f='llvm/clang/lib/Sema/AnalysisBasedWarnings.cpp' l='1973' c='_ZN5clang12threadSafety12_GLOBAL__N_120ThreadSafetyReporter21handleNegativeNotHeldEPKNS_9NamedDeclEN4llvm9StringRefENS_14SourceLocationE'/>
