<dec f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='650' type='std::vector&lt;LoopToScevMapT&gt; &amp;'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1015' u='w' c='_ZN5polly20VectorBlockGeneratorC1ERNS_14BlockGeneratorERSt6vectorIN4llvm8DenseMapIPKNS4_4LoopEPKNS4_4SCEVENS4_12DenseMapInfoIS8_EENS4_6detail12DenseMa6490690'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1032' u='m' c='_ZN5polly20VectorBlockGenerator14getVectorValueERNS_8ScopStmtEPN4llvm5ValueERNS3_8DenseMapINS3_11AssertingVHIS4_EES8_NS3_12DenseMapInfoIS8_EENS3_6deta7029145'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1059' u='m' c='_ZN5polly20VectorBlockGenerator21generateStrideOneLoadERNS_8ScopStmtEPN4llvm8LoadInstERNS3_11SmallVectorINS3_8DenseMapINS3_11AssertingVHINS3_5ValueEEE11499097'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1086' u='m' c='_ZN5polly20VectorBlockGenerator22generateStrideZeroLoadERNS_8ScopStmtEPN4llvm8LoadInstERNS3_8DenseMapINS3_11AssertingVHINS3_5ValueEEES9_NS3_12DenseMap13314154'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1115' u='m' c='_ZN5polly20VectorBlockGenerator25generateUnknownStrideLoadERNS_8ScopStmtEPN4llvm8LoadInstERNS3_11SmallVectorINS3_8DenseMapINS3_11AssertingVHINS3_5Valu1105067'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1137' u='m' c='_ZN5polly20VectorBlockGenerator12generateLoadERNS_8ScopStmtEPN4llvm8LoadInstERNS3_8DenseMapINS3_11AssertingVHINS3_5ValueEEES9_NS3_12DenseMapInfoIS9_EE10253938'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1206' u='m' c='_ZN5polly20VectorBlockGenerator9copyStoreERNS_8ScopStmtEPN4llvm9StoreInstERNS3_8DenseMapINS3_11AssertingVHINS3_5ValueEEES9_NS3_12DenseMapInfoIS9_EENS312679127'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1218' u='m' c='_ZN5polly20VectorBlockGenerator9copyStoreERNS_8ScopStmtEPN4llvm9StoreInstERNS3_8DenseMapINS3_11AssertingVHINS3_5ValueEEES9_NS3_12DenseMapInfoIS9_EENS312679127'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1274' u='m' c='_ZN5polly20VectorBlockGenerator18copyInstScalarizedERNS_8ScopStmtEPN4llvm11InstructionERNS3_8DenseMapINS3_11AssertingVHINS3_5ValueEEES9_NS3_12DenseMap15883421'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1290' u='m' c='_ZN5polly20VectorBlockGenerator14getVectorWidthEv'/>
<offset>704</offset>
<doc f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='634'>// This is a vector of loop-&gt;scev maps.  The first map is used for the first
  // vector lane, ...
  // Each map, contains information about Instructions in the old ScoP, which
  // are recalculated in the new SCoP. When copying the basic block, we replace
  // all references to the old instructions with their recalculated values.
  //
  // For example, when the code generator produces this AST:
  //
  //   for (int c1 = 0; c1 &lt;= 1023; c1 += 1)
  //     for (int c2 = 0; c2 &lt;= 1023; c2 += VF)
  //       for (int lane = 0; lane &lt;= VF; lane += 1)
  //         Stmt(c2 + lane + 3, c1);
  //
  // VLTS[lane] contains a map:
  //   &quot;outer loop in the old loop nest&quot; -&gt; SCEV(&quot;c2 + lane + 3&quot;),
  //   &quot;inner loop in the old loop nest&quot; -&gt; SCEV(&quot;c1&quot;).</doc>
