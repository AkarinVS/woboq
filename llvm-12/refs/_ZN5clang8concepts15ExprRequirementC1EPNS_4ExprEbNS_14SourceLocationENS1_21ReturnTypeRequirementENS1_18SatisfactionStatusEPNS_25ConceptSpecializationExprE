<dec f='llvm/clang/include/clang/AST/ExprConcepts.h' l='347' type='void clang::concepts::ExprRequirement::ExprRequirement(clang::Expr * E, bool IsSimple, clang::SourceLocation NoexceptLoc, clang::concepts::ExprRequirement::ReturnTypeRequirement Req, clang::concepts::ExprRequirement::SatisfactionStatus Status, clang::ConceptSpecializationExpr * SubstitutedConstraintExpr = nullptr)'/>
<doc f='llvm/clang/include/clang/AST/ExprConcepts.h' l='340'>/// \brief Construct a compound requirement.
  /// \param E the expression which is checked by this requirement.
  /// \param IsSimple whether this was a simple requirement in source.
  /// \param NoexceptLoc the location of the noexcept keyword, if it was
  /// specified, otherwise an empty location.
  /// \param Req the requirement for the type of the checked expression.
  /// \param Status the satisfaction status of this requirement.</doc>
<def f='llvm/clang/lib/Sema/SemaConcept.cpp' l='1015' ll='1031' type='void clang::concepts::ExprRequirement::ExprRequirement(clang::Expr * E, bool IsSimple, clang::SourceLocation NoexceptLoc, clang::concepts::ExprRequirement::ReturnTypeRequirement Req, clang::concepts::ExprRequirement::SatisfactionStatus Status, clang::ConceptSpecializationExpr * SubstitutedConstraintExpr = nullptr)'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='8643' u='c' c='_ZN5clang4Sema20BuildExprRequirementEPNS_4ExprEbNS_14SourceLocationENS_8concepts15ExprRequirement21ReturnTypeRequirementE'/>
<use f='llvm/clang/lib/Serialization/ASTReaderStmt.cpp' l='894' u='c' c='_ZN5clang13ASTStmtReader17VisitRequiresExprEPNS_12RequiresExprE'/>
