<dec f='llvm/compiler-rt/lib/fuzzer/FuzzerMerge.h' l='74' type='void fuzzer::CrashResistantMerge(const Vector&lt;std::string&gt; &amp; Args, const Vector&lt;fuzzer::SizedFile&gt; &amp; OldCorpus, const Vector&lt;fuzzer::SizedFile&gt; &amp; NewCorpus, Vector&lt;std::string&gt; * NewFiles, const Set&lt;uint32_t&gt; &amp; InitialFeatures, Set&lt;uint32_t&gt; * NewFeatures, const Set&lt;uint32_t&gt; &amp; InitialCov, Set&lt;uint32_t&gt; * NewCov, const std::string &amp; CFPath, bool Verbose)'/>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerDriver.cpp' l='523' u='c' c='_ZN6fuzzer5MergeEPNS_6FuzzerERNS_14FuzzingOptionsERKNSt8__Fuzzer6vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS_16fuzzer_allocatorISB_EEEESG_PKc'/>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerFork.cpp' l='214' u='c' c='_ZN6fuzzer9GlobalEnv14RunOneMergeJobEPNS_7FuzzJobE'/>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerFork.cpp' l='317' u='c' c='_ZN6fuzzer12FuzzWithForkERNS_6RandomERKNS_14FuzzingOptionsERKNSt8__Fuzzer6vectorINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_16fuz4385586'/>
<def f='llvm/compiler-rt/lib/fuzzer/FuzzerMerge.cpp' l='300' ll='400' type='void fuzzer::CrashResistantMerge(const Vector&lt;std::string&gt; &amp; Args, const Vector&lt;fuzzer::SizedFile&gt; &amp; OldCorpus, const Vector&lt;fuzzer::SizedFile&gt; &amp; NewCorpus, Vector&lt;std::string&gt; * NewFiles, const Set&lt;uint32_t&gt; &amp; InitialFeatures, Set&lt;uint32_t&gt; * NewFeatures, const Set&lt;uint32_t&gt; &amp; InitialCov, Set&lt;uint32_t&gt; * NewCov, const std::string &amp; CFPath, bool V)'/>
<doc f='llvm/compiler-rt/lib/fuzzer/FuzzerMerge.cpp' l='299'>// Outer process. Does not call the target code and thus should not fail.</doc>
