<dec f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_libignore.h' l='46' type='bool __sanitizer::LibIgnore::IsIgnored(__sanitizer::uptr pc, bool * pc_in_ignored_lib) const'/>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_libignore.h' l='90' ll='102' type='bool __sanitizer::LibIgnore::IsIgnored(__sanitizer::uptr pc, bool * pc_in_ignored_lib) const'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_libignore.h' l='42'>// Checks whether the provided PC belongs to one of the ignored libraries or
  // the PC should be ignored because it belongs to an non-instrumented module
  // (when ignore_noninstrumented_modules=1). Also returns true via
  // &quot;pc_in_ignored_lib&quot; if the PC is in an ignored library, false otherwise.</doc>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_external.cpp' l='67' u='c' c='__tsan::ExternalAccess'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='257' u='c' c='__tsan::ScopedInterceptor::ScopedInterceptor'/>
