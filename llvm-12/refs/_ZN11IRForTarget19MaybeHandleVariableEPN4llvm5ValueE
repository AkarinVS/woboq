<dec f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.h' l='329' type='bool IRForTarget::MaybeHandleVariable(llvm::Value * value)'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.h' l='316'>/// A function-level pass to find all external variables and functions
  /// used in the IR.  Each found external variable is added to the struct,
  /// and each external function is resolved in place, its call replaced with
  /// a call to a function pointer whose value is the address of the function
  /// in the target process.

  /// Handle a single externally-defined variable
  ///
  /// \param[in] value
  ///     The variable.
  ///
  /// \return
  ///     True on success; false otherwise</doc>
<def f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='1180' ll='1272' type='bool IRForTarget::MaybeHandleVariable(llvm::Value * llvm_value_ptr)'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='1193' u='c' c='_ZN11IRForTarget19MaybeHandleVariableEPN4llvm5ValueE'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='1316' u='c' c='_ZN11IRForTarget24MaybeHandleCallArgumentsEPN4llvm8CallInstE'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='1461' u='c' c='_ZN11IRForTarget16ResolveExternalsERN4llvm8FunctionE'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='1179'>// This function does not report errors; its callers are responsible.</doc>
