<dec f='llvm/llvm/include/llvm/Transforms/Utils/UnrollLoop.h' l='116' type='void llvm::simplifyLoopAfterUnroll(llvm::Loop * L, bool SimplifyIVs, llvm::LoopInfo * LI, llvm::ScalarEvolution * SE, llvm::DominatorTree * DT, llvm::AssumptionCache * AC, const llvm::TargetTransformInfo * TTI)'/>
<def f='llvm/llvm/lib/Transforms/Utils/LoopUnroll.cpp' l='205' ll='243' type='void llvm::simplifyLoopAfterUnroll(llvm::Loop * L, bool SimplifyIVs, llvm::LoopInfo * LI, llvm::ScalarEvolution * SE, llvm::DominatorTree * DT, llvm::AssumptionCache * AC, const llvm::TargetTransformInfo * TTI)'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnroll.cpp' l='896' u='c' c='_ZN4llvm10UnrollLoopEPNS_4LoopENS_17UnrollLoopOptionsEPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheEPKNS_19TargetTrans5476875'/>
<doc f='llvm/llvm/lib/Transforms/Utils/LoopUnroll.cpp' l='202'>/// Perform some cleanup and simplifications on loops after unrolling. It is
/// useful to simplify the IV&apos;s in the new loop, as well as do a quick
/// simplify/dce pass of the instructions.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp' l='596' u='c' c='_ZN4llvm16UnrollAndJamLoopEPNS_4LoopEjjjbPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheEPKNS_19TargetTransformInfoEPNS_8684078'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp' l='597' u='c' c='_ZN4llvm16UnrollAndJamLoopEPNS_4LoopEjjjbPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheEPKNS_19TargetTransformInfoEPNS_8684078'/>
