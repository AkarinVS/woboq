<dec f='llvm/lldb/include/lldb/Core/UserSettingsController.h' l='81' type='static const char * lldb_private::Properties::GetExperimentalSettingsName()'/>
<doc f='llvm/lldb/include/lldb/Core/UserSettingsController.h' l='74'>// We sometimes need to introduce a setting to enable experimental features,
  // but then we don&apos;t want the setting for these to cause errors when the
  // setting goes away.  Add a sub-topic of the settings using this
  // experimental name, and two things will happen.  One is that settings that
  // don&apos;t find the name will not be treated as errors.  Also, if you decide to
  // keep the settings just move them into the containing properties, and we
  // will auto-forward the experimental settings to the real one.</doc>
<def f='llvm/lldb/source/Core/UserSettingsController.cpp' l='104' type='static const char * lldb_private::Properties::GetExperimentalSettingsName()'/>
<use f='llvm/lldb/source/Core/UserSettingsController.cpp' l='110' u='c' c='_ZN12lldb_private10Properties21IsSettingExperimentalEN4llvm9StringRefE'/>
<use f='llvm/lldb/source/Interpreter/OptionValueProperties.cpp' l='139' u='c' c='_ZNK12lldb_private21OptionValueProperties11GetSubValueEPKNS_16ExecutionContextEN4llvm9StringRefEbRNS_6StatusE'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='138' u='c' c='_ZN40ProcessExperimentalOptionValuePropertiesC1Ev'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='170' u='c' c='_ZN12lldb_private17ProcessPropertiesC1EPNS_7ProcessE'/>
<use f='llvm/lldb/source/Target/Target.cpp' l='3661' u='c' c='_ZN39TargetExperimentalOptionValuePropertiesC1Ev'/>
<use f='llvm/lldb/source/Target/Target.cpp' l='3708' u='c' c='_ZN12lldb_private16TargetPropertiesC1EPNS_6TargetE'/>
<use f='llvm/lldb/source/Target/Target.cpp' l='3719' u='c' c='_ZN12lldb_private16TargetPropertiesC1EPNS_6TargetE'/>
