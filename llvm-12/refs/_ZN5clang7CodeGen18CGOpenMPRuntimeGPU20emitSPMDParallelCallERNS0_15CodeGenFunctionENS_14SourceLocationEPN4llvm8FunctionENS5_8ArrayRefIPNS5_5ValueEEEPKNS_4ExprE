<dec f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.h' l='174' type='void clang::CodeGen::CGOpenMPRuntimeGPU::emitSPMDParallelCall(clang::CodeGen::CodeGenFunction &amp; CGF, clang::SourceLocation Loc, llvm::Function * OutlinedFn, ArrayRef&lt;llvm::Value *&gt; CapturedVars, const clang::Expr * IfCond)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.h' l='163'>/// Emits code for parallel or serial call of the \a OutlinedFn with
  /// variables captured in a record which address is stored in \a
  /// CapturedStruct.
  /// This call is for a parallel directive within an SPMD target directive.
  /// \param OutlinedFn Outlined function to be run in parallel threads. Type of
  /// this function is void(*)(kmp_int32 *, kmp_int32, struct context_vars*).
  /// \param CapturedVars A pointer to the record with the references to
  /// variables used in \a OutlinedFn function.
  /// \param IfCond Condition in the associated &apos;if&apos; clause, if it was
  /// specified, nullptr otherwise.
  ///</doc>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='2082' u='c' c='_ZN5clang7CodeGen18CGOpenMPRuntimeGPU16emitParallelCallERNS0_15CodeGenFunctionENS_14SourceLocationEPN4llvm8FunctionENS5_8ArrayRefIPNS5_5ValueEEEPKNS_4ExprE'/>
<def f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp' l='2270' ll='2328' type='void clang::CodeGen::CGOpenMPRuntimeGPU::emitSPMDParallelCall(clang::CodeGen::CodeGenFunction &amp; CGF, clang::SourceLocation Loc, llvm::Function * OutlinedFn, ArrayRef&lt;llvm::Value *&gt; CapturedVars, const clang::Expr * IfCond)'/>
