<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerHelper.h' l='334' type='llvm::LegalizerHelper::LegalizeResult llvm::LegalizerHelper::bitcastInsertVectorElt(llvm::MachineInstr &amp; MI, unsigned int TypeIdx, llvm::LLT CastTy)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerHelper.h' l='333'>/// Perform Bitcast legalize action on G_INSERT_VECTOR_ELT.</doc>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='2598' ll='2660' type='LegalizerHelper::LegalizeResult llvm::LegalizerHelper::bitcastInsertVectorElt(llvm::MachineInstr &amp; MI, unsigned int TypeIdx, llvm::LLT CastTy)'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='2852' u='c' c='_ZN4llvm15LegalizerHelper7bitcastERNS_12MachineInstrEjNS_3LLTE'/>
<doc f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='2593'>/// Perform a G_INSERT_VECTOR_ELT in a different sized vector element. If this
/// is increasing the element size, perform the indexing in the target element
/// type, and use bit operations to insert at the element position. This is
/// intended for architectures that can dynamically index the register file and
/// want to force indexing in the native register size.</doc>
