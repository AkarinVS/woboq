<dec f='llvm/lldb/include/lldb/Host/common/NativeProcessProtocol.h' l='305' type='llvm::Expected&lt;std::unique_ptr&lt;NativeProcessProtocol&gt; &gt; lldb_private::NativeProcessProtocol::Factory::Attach(lldb::pid_t pid, lldb_private::NativeProcessProtocol::NativeDelegate &amp; native_delegate, lldb_private::MainLoop &amp; mainloop) const'/>
<doc f='llvm/lldb/include/lldb/Host/common/NativeProcessProtocol.h' l='286'>/// Attach to an existing process.
    ///
    /// \param[in] pid
    ///     pid of the process locatable
    ///
    /// \param[in] native_delegate
    ///     The delegate that will receive messages regarding the
    ///     inferior.  Must outlive the NativeProcessProtocol
    ///     instance.
    ///
    /// \param[in] mainloop
    ///     The mainloop instance with which the process can register
    ///     callbacks. Must outlive the NativeProcessProtocol
    ///     instance.
    ///
    /// \return
    ///     A NativeProcessProtocol shared pointer if the operation succeeded or
    ///     an error object if it failed.</doc>
<ovr f='llvm/lldb/source/Plugins/Process/Linux/NativeProcessLinux.cpp' l='264' c='_ZNK12lldb_private13process_linux18NativeProcessLinux7Factory6AttachEmRNS_21NativeProcessProtocol14NativeDelegateERNS_8MainLoopE'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerLLGS.cpp' l='316' u='c' c='_ZN12lldb_private18process_gdb_remote32GDBRemoteCommunicationServerLLGS15AttachToProcessEm'/>
