<dec f='llvm/lldb/include/lldb/Symbol/ObjectFile.h' l='181' type='static lldb::ObjectFileSP lldb_private::ObjectFile::FindPlugin(const lldb::ModuleSP &amp; module_sp, const lldb::ProcessSP &amp; process_sp, lldb::addr_t header_addr, lldb::DataBufferSP &amp; file_data_sp)'/>
<doc f='llvm/lldb/include/lldb/Symbol/ObjectFile.h' l='166'>/// Find a ObjectFile plug-in that can parse a file in memory.
  ///
  /// Scans all loaded plug-in interfaces that implement versions of the
  /// ObjectFile plug-in interface and returns the first instance that can
  /// parse the file.
  ///
  /// \param[in] module_sp
  ///     The parent module that owns this object file.
  ///
  /// \param[in] process_sp
  ///     A shared pointer to the process whose memory space contains
  ///     an object file. This will be stored as a std::weak_ptr.
  ///
  /// \param[in] header_addr
  ///     The address of the header for the object file in memory.</doc>
<use f='llvm/lldb/source/Core/Module.cpp' l='318' u='c' c='_ZN12lldb_private6Module19GetMemoryObjectFileERKSt10shared_ptrINS_7ProcessEEmRNS_6StatusEm'/>
<def f='llvm/lldb/source/Symbol/ObjectFile.cpp' l='148' ll='181' type='static lldb::ObjectFileSP lldb_private::ObjectFile::FindPlugin(const lldb::ModuleSP &amp; module_sp, const lldb::ProcessSP &amp; process_sp, lldb::addr_t header_addr, lldb::DataBufferSP &amp; data_sp)'/>
