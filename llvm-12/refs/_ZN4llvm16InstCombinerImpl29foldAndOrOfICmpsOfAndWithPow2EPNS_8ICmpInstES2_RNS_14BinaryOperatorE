<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='351' type='llvm::Value * llvm::InstCombinerImpl::foldAndOrOfICmpsOfAndWithPow2(llvm::ICmpInst * LHS, llvm::ICmpInst * RHS, llvm::BinaryOperator &amp; Logic)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='799' ll='836' type='llvm::Value * llvm::InstCombinerImpl::foldAndOrOfICmpsOfAndWithPow2(llvm::ICmpInst * LHS, llvm::ICmpInst * RHS, llvm::BinaryOperator &amp; Logic)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1132' u='c' c='_ZN4llvm16InstCombinerImpl14foldAndOfICmpsEPNS_8ICmpInstES2_RNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='2301' u='c' c='_ZN4llvm16InstCombinerImpl13foldOrOfICmpsEPNS_8ICmpInstES2_RNS_14BinaryOperatorE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='797'>// Fold (iszero(A &amp; K1) | iszero(A &amp; K2)) -&gt; (A &amp; (K1 | K2)) != (K1 | K2)
// Fold (!iszero(A &amp; K1) &amp; !iszero(A &amp; K2)) -&gt; (A &amp; (K1 | K2)) == (K1 | K2)</doc>
