<dec f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.h' l='1001' type='bool llvm::AArch64TargetLowering::isUsedByReturnOnly(llvm::SDNode * N, llvm::SDValue &amp; Chain) const'/>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3936' c='_ZNK4llvm14TargetLowering18isUsedByReturnOnlyEPNS_6SDNodeERNS_7SDValueE'/>
<def f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='15899' ll='15930' type='bool llvm::AArch64TargetLowering::isUsedByReturnOnly(llvm::SDNode * N, llvm::SDValue &amp; Chain) const'/>
<doc f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='15895'>// Check if the return value is used as only a return value, as otherwise
// we can&apos;t perform a tail-call. In particular, we need to check for
// target ISD nodes that are returns and any other &quot;odd&quot; constructs
// that the generic analysis code won&apos;t necessarily catch.</doc>
