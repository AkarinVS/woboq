<dec f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_posix.h' l='32' type='__sanitizer::uptr __sanitizer::internal_open(const char * filename, int flags)'/>
<dec f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_posix.h' l='33' type='__sanitizer::uptr __sanitizer::internal_open(const char * filename, int flags, __sanitizer::u32 mode)'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_posix.h' l='30'>// I/O
// Don&apos;t use directly, use __sanitizer::OpenFile() instead.</doc>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='198' ll='204' type='__sanitizer::uptr __sanitizer::internal_open(const char * filename, int flags)'/>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='206' ll='213' type='__sanitizer::uptr __sanitizer::internal_open(const char * filename, int flags, __sanitizer::u32 mode)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='908' u='c' c='__sanitizer::ThreadLister::ThreadLister'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux.cpp' l='2280' u='c' c='__sanitizer::GetRandom'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_posix.cpp' l='162' u='c' c='__sanitizer::OpenFile'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_posix.cpp' l='357' u='c' c='__sanitizer::GetNamedMappingFd'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_platform_linux.cpp' l='175' u='c' c='__tsan::MapRodata'/>
