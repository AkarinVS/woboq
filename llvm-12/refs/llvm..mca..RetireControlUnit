<inh f='llvm/llvm/include/llvm/MCA/HardwareUnits/HardwareUnit.h' l='21' c='llvm::mca::HardwareUnit'/>
<def f='llvm/llvm/include/llvm/MCA/HardwareUnits/RetireControlUnit.h' l='36' ll='107'/>
<use f='llvm/llvm/include/llvm/MCA/Stages/DispatchStage.h' l='55'/>
<use f='llvm/llvm/include/llvm/MCA/Stages/DispatchStage.h' l='69' c='_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE'/>
<use f='llvm/llvm/include/llvm/MCA/Stages/RetireStage.h' l='29'/>
<use f='llvm/llvm/include/llvm/MCA/Stages/RetireStage.h' l='37' c='_ZN4llvm3mca11RetireStageC1ERNS0_17RetireControlUnitERNS0_12RegisterFileERNS0_10LSUnitBaseE'/>
<use f='llvm/llvm/lib/MCA/Context.cpp' l='35' c='_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE'/>
<size>56</size>
<doc f='llvm/llvm/include/llvm/MCA/HardwareUnits/RetireControlUnit.h' l='25'>/// This class tracks which instructions are in-flight (i.e., dispatched but not
/// retired) in the OoO backend.
//
/// This class checks on every cycle if/which instructions can be retired.
/// Instructions are retired in program order.
/// In the event of an instruction being retired, the pipeline that owns
/// this RetireControlUnit (RCU) gets notified.
///
/// On instruction retired, register updates are all architecturally
/// committed, and any physicall registers previously allocated for the
/// retired instruction are freed.</doc>
<mbr r='llvm::mca::RetireControlUnit::NextAvailableSlotIdx' o='64' t='unsigned int'/>
<mbr r='llvm::mca::RetireControlUnit::CurrentInstructionSlotIdx' o='96' t='unsigned int'/>
<mbr r='llvm::mca::RetireControlUnit::NumROBEntries' o='128' t='unsigned int'/>
<mbr r='llvm::mca::RetireControlUnit::AvailableEntries' o='160' t='unsigned int'/>
<mbr r='llvm::mca::RetireControlUnit::MaxRetirePerCycle' o='192' t='unsigned int'/>
<mbr r='llvm::mca::RetireControlUnit::Queue' o='256' t='std::vector&lt;RUToken&gt;'/>
<fun r='_ZNK4llvm3mca17RetireControlUnit17normalizeQuantityEj'/>
<fun r='_ZNK4llvm3mca17RetireControlUnit18computeNextSlotIdxEv'/>
<fun r='_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE'/>
<fun r='_ZNK4llvm3mca17RetireControlUnit7isEmptyEv'/>
<fun r='_ZNK4llvm3mca17RetireControlUnit11isAvailableEj'/>
<fun r='_ZNK4llvm3mca17RetireControlUnit20getMaxRetirePerCycleEv'/>
<fun r='_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE'/>
<fun r='_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv'/>
<fun r='_ZNK4llvm3mca17RetireControlUnit13peekNextTokenEv'/>
<fun r='_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv'/>
<fun r='_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj'/>
<use f='llvm/llvm/lib/MCA/Stages/DispatchStage.cpp' l='30' c='_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE'/>
<size>56</size>
