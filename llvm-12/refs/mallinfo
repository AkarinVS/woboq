<def f='llvm/compiler-rt/lib/asan/asan_malloc_linux.cpp' l='212' macro='1' type='struct fake_mallinfo mallinfo()'/>
<def f='llvm/compiler-rt/lib/hwasan/hwasan_interceptors.cpp' l='201' macro='1' type='__sanitizer::__sanitizer_struct_mallinfo mallinfo()'/>
<def f='llvm/compiler-rt/lib/lsan/lsan_interceptors.cpp' l='162' macro='1' type='struct fake_mallinfo mallinfo()'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_interceptors.cpp' l='167' u='a' c='__lsan::InitializeInterceptors'/>
<def f='llvm/compiler-rt/lib/memprof/memprof_malloc_linux.cpp' l='194' macro='1' type='struct fake_mallinfo mallinfo()'/>
<def f='llvm/compiler-rt/lib/msan/msan_interceptors.cpp' l='253' macro='1' type='void mallinfo(__sanitizer::__sanitizer_struct_mallinfo * sret)'/>
<use f='llvm/compiler-rt/lib/msan/msan_interceptors.cpp' l='262' u='a' c='__msan::InitializeInterceptors'/>
<doc f='llvm/compiler-rt/lib/msan/msan_interceptors.cpp' l='249'>// This function actually returns a struct by value, but we can&apos;t unpoison a
// temporary! The following is equivalent on all supported platforms but
// aarch64 (which uses a different register for sret value).  We have a test
// to confirm that.</doc>
<def f='include/malloc.h' l='86' ll='98'/>
<dec f='include/malloc.h' l='101' type='struct mallinfo mallinfo()'/>
<use f='include/malloc.h' l='101' c='mallinfo'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cpp' l='1207'/>
<size>40</size>
<doc f='include/malloc.h' l='84'>/* SVID2/XPG mallinfo structure */</doc>
<doc f='include/malloc.h' l='100'>/* Returns a copy of the updated current mallinfo. */</doc>
<mbr r='mallinfo::arena' o='0' t='int'/>
<mbr r='mallinfo::ordblks' o='32' t='int'/>
<mbr r='mallinfo::smblks' o='64' t='int'/>
<mbr r='mallinfo::hblks' o='96' t='int'/>
<mbr r='mallinfo::hblkhd' o='128' t='int'/>
<mbr r='mallinfo::usmblks' o='160' t='int'/>
<mbr r='mallinfo::fsmblks' o='192' t='int'/>
<mbr r='mallinfo::uordblks' o='224' t='int'/>
<mbr r='mallinfo::fordblks' o='256' t='int'/>
<mbr r='mallinfo::keepcost' o='288' t='int'/>
<def f='llvm/compiler-rt/lib/scudo/standalone/wrappers_c.inc' l='39' ll='55' macro='1' type='struct __scudo_mallinfo mallinfo()'/>
<use f='llvm/llvm/lib/Support/Unix/Process.inc' l='93' c='_ZN4llvm3sys7Process14GetMallocUsageEv'/>
<use f='llvm/llvm/lib/Support/Unix/Process.inc' l='94' u='c' c='_ZN4llvm3sys7Process14GetMallocUsageEv'/>
<size>40</size>
