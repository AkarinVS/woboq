<dec f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationClient.h' l='216' type='int lldb_private::process_gdb_remote::GDBRemoteCommunicationClient::SetWorkingDir(const lldb_private::FileSpec &amp; working_dir)'/>
<doc f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationClient.h' l='205'>/// Sets the working directory to \a path for a process that will
  /// be launched with the &apos;A&apos; packet for non platform based
  /// connections. If this packet is sent to a GDB server that
  /// implements the platform, it will change the current working
  /// directory for the platform process.
  ///
  /// \param[in] working_dir
  ///     The path to a directory to use when launching our process
  ///
  /// \return
  ///     Zero if the for success, or an error code for failure.</doc>
<use f='llvm/lldb/source/Plugins/Platform/gdb-server/PlatformRemoteGDBServer.cpp' l='275' u='c' c='_ZN12lldb_private19platform_gdb_server23PlatformRemoteGDBServer25SetRemoteWorkingDirectoryERKNS_8FileSpecE'/>
<use f='llvm/lldb/source/Plugins/Platform/gdb-server/PlatformRemoteGDBServer.cpp' l='335' u='c' c='_ZN12lldb_private19platform_gdb_server23PlatformRemoteGDBServer13ConnectRemoteERNS_4ArgsE'/>
<use f='llvm/lldb/source/Plugins/Platform/gdb-server/PlatformRemoteGDBServer.cpp' l='416' u='c' c='_ZN12lldb_private19platform_gdb_server23PlatformRemoteGDBServer13LaunchProcessERNS_17ProcessLaunchInfoE'/>
<def f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationClient.cpp' l='1858' ll='1876' type='int lldb_private::process_gdb_remote::GDBRemoteCommunicationClient::SetWorkingDir(const lldb_private::FileSpec &amp; working_dir)'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='870' u='c' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote8DoLaunchEPNS_6ModuleERNS_17ProcessLaunchInfoE'/>
