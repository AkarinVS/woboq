<dec f='llvm/lldb/include/lldb/Expression/IRExecutionUnit.h' l='281' type='uint8_t * lldb_private::IRExecutionUnit::MemoryManager::allocateDataSection(uintptr_t Size, unsigned int Alignment, unsigned int SectionID, llvm::StringRef SectionName, bool IsReadOnly)'/>
<doc f='llvm/lldb/include/lldb/Expression/IRExecutionUnit.h' l='265'>/// Allocate space for data, and add it to the m_spaceBlocks map
    ///
    /// \param[in] Size
    ///     The size of the area.
    ///
    /// \param[in] Alignment
    ///     The required alignment of the area.
    ///
    /// \param[in] SectionID
    ///     A unique identifier for the section.
    ///
    /// \param[in] IsReadOnly
    ///     Flag indicating the section is read-only.
    ///
    /// \return
    ///     Allocated space.</doc>
<inh f='llvm/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h' l='126' c='_ZN4llvm20SectionMemoryManager19allocateDataSectionEmjjNS_9StringRefEb'/>
<def f='llvm/lldb/source/Expression/IRExecutionUnit.cpp' l='612' ll='641' type='uint8_t * lldb_private::IRExecutionUnit::MemoryManager::allocateDataSection(uintptr_t Size, unsigned int Alignment, unsigned int SectionID, llvm::StringRef SectionName, bool IsReadOnly)'/>
