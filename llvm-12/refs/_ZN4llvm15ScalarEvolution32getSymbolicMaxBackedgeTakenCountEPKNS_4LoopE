<def f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='800' ll='802' type='const llvm::SCEV * llvm::ScalarEvolution::getSymbolicMaxBackedgeTakenCount(const llvm::Loop * L)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='796'>/// When successful, this returns a SCEV that is greater than or equal
  /// to (i.e. a &quot;conservative over-approximation&quot;) of the value returend by
  /// getBackedgeTakenCount.  If such a value cannot be computed, it returns the
  /// SCEVCouldNotCompute object.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5815' u='c' c='_ZN4llvm15ScalarEvolution11getRangeRefEPKNS_4SCEVENS0_13RangeSignHintE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='1429' u='c' c='_ZN12_GLOBAL__N_114IndVarSimplify17optimizeLoopExitsEPN4llvm4LoopERNS1_12SCEVExpanderE'/>
