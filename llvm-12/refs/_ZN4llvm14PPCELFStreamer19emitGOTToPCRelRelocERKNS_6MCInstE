<dec f='llvm/llvm/lib/Target/PowerPC/MCTargetDesc/PPCELFStreamer.h' l='46' type='void llvm::PPCELFStreamer::emitGOTToPCRelReloc(const llvm::MCInst &amp; Inst)'/>
<use f='llvm/llvm/lib/Target/PowerPC/MCTargetDesc/PPCELFStreamer.cpp' l='104' u='c' c='_ZN4llvm14PPCELFStreamer15emitInstructionERKNS_6MCInstERKNS_15MCSubtargetInfoE'/>
<def f='llvm/llvm/lib/Target/PowerPC/MCTargetDesc/PPCELFStreamer.cpp' l='139' ll='170' type='void llvm::PPCELFStreamer::emitGOTToPCRelReloc(const llvm::MCInst &amp; Inst)'/>
<doc f='llvm/llvm/lib/Target/PowerPC/MCTargetDesc/PPCELFStreamer.cpp' l='128'>// This linker time GOT PC Relative optimization relocation will look like this:
//   pld &lt;reg&gt; symbol@got@pcrel
// &lt;Label###&gt;:
//   .reloc Label###-8,R_PPC64_PCREL_OPT,.-(Label###-8)
//   load &lt;loadedreg&gt;, 0(&lt;reg&gt;)
// The reason we place the label after the PLDpc instruction is that there
// may be an alignment nop before it since prefixed instructions must not
// cross a 64-byte boundary (please see
// PPCELFStreamer::emitPrefixedInstruction()). When referring to the
// label, we subtract the width of a prefixed instruction (8 bytes) to ensure
// we refer to the PLDpc.</doc>
