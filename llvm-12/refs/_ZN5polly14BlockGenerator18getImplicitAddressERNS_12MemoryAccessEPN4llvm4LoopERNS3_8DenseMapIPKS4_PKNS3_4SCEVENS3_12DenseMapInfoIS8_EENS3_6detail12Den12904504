<dec f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='529' type='llvm::Value * polly::BlockGenerator::getImplicitAddress(polly::MemoryAccess &amp; Access, llvm::Loop * L, llvm::LoopToScevMapT &amp; LTS, polly::ValueMapT &amp; BBMap, isl_id_to_ast_expr * NewAccesses)'/>
<def f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='294' ll='304' type='llvm::Value * polly::BlockGenerator::getImplicitAddress(polly::MemoryAccess &amp; Access, llvm::Loop * L, llvm::LoopToScevMapT &amp; LTS, polly::ValueMapT &amp; BBMap, isl_id_to_ast_expr * NewAccesses)'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='573' u='c' c='_ZN5polly14BlockGenerator19generateScalarLoadsERNS_8ScopStmtERN4llvm8DenseMapIPKNS3_4LoopEPKNS3_4SCEVENS3_12DenseMapInfoIS7_EENS3_6detail12DenseMapPai15049066'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='788' u='c' c='_ZN5polly14BlockGenerator20generateScalarStoresERNS_8ScopStmtERN4llvm8DenseMapIPKNS3_4LoopEPKNS3_4SCEVENS3_12DenseMapInfoIS7_EENS3_6detail12DenseMapPa9229264'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1723' u='c' c='_ZN5polly15RegionGenerator20generateScalarStoresERNS_8ScopStmtERN4llvm8DenseMapIPKNS3_4LoopEPKNS3_4SCEVENS3_12DenseMapInfoIS7_EENS3_6detail12DenseMapP5777383'/>
<doc f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='511'>/// Generate the pointer value that is accesses by @p Access.
  ///
  /// For write accesses, generate the target address. For read accesses,
  /// generate the source address.
  /// The access can be either an array access or a scalar access. In the first
  /// case, the returned address will point to an element into that array. In
  /// the scalar case, an alloca is used.
  /// If a new AccessRelation is set for the MemoryAccess, the new relation will
  /// be used.
  ///
  /// @param Access      The access to generate a pointer for.
  /// @param L           The innermost loop that surrounds the statement.
  /// @param LTS         A mapping from loops virtual canonical induction
  ///                    variable to their new values.
  /// @param BBMap       A mapping from old values to their new values.
  /// @param NewAccesses A map from memory access ids to new ast expressions.
  ///
  /// @return The generated address.</doc>
