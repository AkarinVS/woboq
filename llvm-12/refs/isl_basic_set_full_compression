<dec f='llvm/polly/lib/External/isl/isl_morph.h' l='78' type='isl_morph * isl_basic_set_full_compression(isl_basic_map * bset)'/>
<use f='llvm/polly/lib/External/isl/isl_bound.c' l='137' u='c' c='unwrapped_guarded_poly_bound'/>
<def f='llvm/polly/lib/External/isl/isl_morph.c' l='766' ll='788' type='isl_morph * isl_basic_set_full_compression(isl_basic_map * bset)'/>
<doc f='llvm/polly/lib/External/isl/isl_morph.c' l='759'>/* We detect all the equalities first to avoid implicit equalities
 * being discovered during the computations.  In particular,
 * the compression on the variables could expose additional stride
 * constraints on the parameters.  This would result in existentially
 * quantified variables after applying the resulting morph, which
 * in turn could break invariants of the calling functions.
 */</doc>
<use f='llvm/polly/lib/External/isl/isl_polynomial.c' l='4876' u='c' c='isl_basic_set_multiplicative_call'/>
<use f='llvm/polly/lib/External/isl/isl_vertices.c' l='333' u='c' c='lower_dim_vertices'/>
