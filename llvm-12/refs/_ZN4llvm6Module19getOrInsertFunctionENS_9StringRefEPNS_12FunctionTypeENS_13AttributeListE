<dec f='llvm/llvm/include/llvm/IR/Module.h' l='349' type='llvm::FunctionCallee llvm::Module::getOrInsertFunction(llvm::StringRef Name, llvm::FunctionType * T, llvm::AttributeList AttributeList)'/>
<doc f='llvm/llvm/include/llvm/IR/Module.h' l='334'>/// @}
/// @name Function Accessors
/// @{

  /// Look up the specified function in the module symbol table. Four
  /// possibilities:
  ///   1. If it does not exist, add a prototype for the function and return it.
  ///   2. Otherwise, if the existing function has the correct prototype, return
  ///      the existing function.
  ///   3. Finally, the function exists but has the wrong prototype: return the
  ///      function with a constantexpr cast to the right prototype.
  ///
  /// In all cases, the returned value is a FunctionCallee wrapper around the
  /// &apos;FunctionType *T&apos; passed in, as well as a &apos;Value*&apos; either of the Function or
  /// the bitcast to the function.</doc>
<use f='llvm/llvm/lib/CodeGen/AtomicExpandPass.cpp' l='1811' u='c' c='_ZN12_GLOBAL__N_112AtomicExpand23expandAtomicOpToLibcallEPN4llvm11InstructionEjNS1_5AlignEPNS1_5ValueES6_S6_NS1_14AtomicOrderingES7_NS1_8ArrayRefINS1_5RTLIB7LibcallEEE'/>
<def f='llvm/llvm/lib/IR/Module.cpp' l='143' ll='165' type='llvm::FunctionCallee llvm::Module::getOrInsertFunction(llvm::StringRef Name, llvm::FunctionType * Ty, llvm::AttributeList AttributeList)'/>
<use f='llvm/llvm/lib/IR/Module.cpp' l='168' u='c' c='_ZN4llvm6Module19getOrInsertFunctionENS_9StringRefEPNS_12FunctionTypeE'/>
<doc f='llvm/llvm/lib/IR/Module.cpp' l='134'>//===----------------------------------------------------------------------===//
// Methods for easy access to the functions in the module.
//

// getOrInsertFunction - Look up the specified function in the module symbol
// table.  If it does not exist, add a prototype for the function and return
// it.  This is nice because it allows most passes to get away with not handling
// the symbol table directly for this common task.
//</doc>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULibFunc.cpp' l='990' u='c' c='_ZN4llvm13AMDGPULibFunc19getOrInsertFunctionEPNS_6ModuleERKS0_'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUPrintfRuntimeBinding.cpp' l='329' u='c' c='_ZN12_GLOBAL__N_130AMDGPUPrintfRuntimeBindingImpl17lowerPrintfForGpuERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/R600OpenCLImageTypeLoweringPass.cpp' l='335' u='c' c='_ZN12_GLOBAL__N_131R600OpenCLImageTypeLoweringPass16transformKernelsERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCLowerMASSVEntries.cpp' l='142' u='c' c='_ZN12_GLOBAL__N_120PPCLowerMASSVEntries14lowerMASSVCallEPN4llvm8CallInstERNS1_8FunctionERNS1_6ModuleEPKNS1_12PPCSubtargetE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp' l='990' u='c' c='_ZN12_GLOBAL__N_117DataFlowSanitizer26initializeRuntimeFunctionsERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp' l='1003' u='c' c='_ZN12_GLOBAL__N_117DataFlowSanitizer26initializeRuntimeFunctionsERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp' l='1014' u='c' c='_ZN12_GLOBAL__N_117DataFlowSanitizer26initializeRuntimeFunctionsERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp' l='1024' u='c' c='_ZN12_GLOBAL__N_117DataFlowSanitizer26initializeRuntimeFunctionsERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp' l='1033' u='c' c='_ZN12_GLOBAL__N_117DataFlowSanitizer26initializeRuntimeFunctionsERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/GCOVProfiling.cpp' l='1069' u='c' c='_ZN12_GLOBAL__N_112GCOVProfiler16getStartFileFuncEPKN4llvm17TargetLibraryInfoE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/GCOVProfiling.cpp' l='1098' u='c' c='_ZN12_GLOBAL__N_112GCOVProfiler15getEmitArcsFuncEPKN4llvm17TargetLibraryInfoE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp' l='612' u='c' c='_ZL29getOrInsertValueProfilingCallRN4llvm6ModuleERKNS_17TargetLibraryInfoEN12_GLOBAL__N_122ValueProfilingCallTypeE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ModuleUtils.cpp' l='116' u='c' c='_ZN4llvm28declareSanitizerInitFunctionERNS_6ModuleENS_9StringRefENS_8ArrayRefIPNS_4TypeEEE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ModuleUtils.cpp' l='144' u='c' c='_ZN4llvm35createSanitizerCtorAndInitFunctionsERNS_6ModuleENS_9StringRefES2_NS_8ArrayRefIPNS_4TypeEEENS3_IPNS_5ValueEEES2_'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='2453' u='c' c='_ZN4llvm17LibCallSimplifier14optimizePrintFEPNS_8CallInstERNS_13IRBuilderBaseE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='2465' u='c' c='_ZN4llvm17LibCallSimplifier14optimizePrintFEPNS_8CallInstERNS_13IRBuilderBaseE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='2575' u='c' c='_ZN4llvm17LibCallSimplifier15optimizeSPrintFEPNS_8CallInstERNS_13IRBuilderBaseE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='2587' u='c' c='_ZN4llvm17LibCallSimplifier15optimizeSPrintFEPNS_8CallInstERNS_13IRBuilderBaseE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='2750' u='c' c='_ZN4llvm17LibCallSimplifier15optimizeFPrintFEPNS_8CallInstERNS_13IRBuilderBaseE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='2762' u='c' c='_ZN4llvm17LibCallSimplifier15optimizeFPrintFEPNS_8CallInstERNS_13IRBuilderBaseE'/>
