<dec f='llvm/llvm/include/llvm/Analysis/LoopCacheAnalysis.h' l='186' type='void llvm::CacheCost::CacheCost(const llvm::LoopVectorTy &amp; Loops, const llvm::LoopInfo &amp; LI, llvm::ScalarEvolution &amp; SE, llvm::TargetTransformInfo &amp; TTI, llvm::AAResults &amp; AA, llvm::DependenceInfo &amp; DI, Optional&lt;unsigned int&gt; TRT = None)'/>
<def f='llvm/llvm/lib/Analysis/LoopCacheAnalysis.cpp' l='481' ll='497' type='void llvm::CacheCost::CacheCost(const llvm::LoopVectorTy &amp; Loops, const llvm::LoopInfo &amp; LI, llvm::ScalarEvolution &amp; SE, llvm::TargetTransformInfo &amp; TTI, llvm::AAResults &amp; AA, llvm::DependenceInfo &amp; DI, Optional&lt;unsigned int&gt; TRT = None)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopCacheAnalysis.h' l='182'>/// Construct a CacheCost object for the loop nest described by \p Loops.
  /// The optional parameter \p TRT can be used to specify the max. distance
  /// between array elements accessed in a loop so that the elements are
  /// classified to have temporal reuse.</doc>
