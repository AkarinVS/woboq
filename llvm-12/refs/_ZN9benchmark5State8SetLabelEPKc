<dec f='llvm/llvm/utils/benchmark/include/benchmark/benchmark.h' l='569' type='void benchmark::State::SetLabel(const char * label)'/>
<use f='llvm/llvm/utils/benchmark/include/benchmark/benchmark.h' l='572' u='c' c='_ZN9benchmark5State8SetLabelERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<doc f='llvm/llvm/utils/benchmark/include/benchmark/benchmark.h' l='557'>// If this routine is called, the specified label is printed at the
  // end of the benchmark report line for the currently executing
  // benchmark.  Example:
  //  static void BM_Compress(benchmark::State&amp; state) {
  //    ...
  //    double compress = input_size / output_size;
  //    state.SetLabel(StrFormat(&quot;compress:%.1f%%&quot;, 100.0*compression));
  //  }
  // Produces output that looks like:
  //  BM_Compress   50         50   14115038  compress:27.3%
  //
  // REQUIRES: a benchmark has exited its benchmarking loop.</doc>
<def f='llvm/llvm/utils/benchmark/src/benchmark.cc' l='362' ll='365' type='void benchmark::State::SetLabel(const char * label)'/>
