<dec f='llvm/lldb/include/lldb/Target/Trace.h' l='145' type='void lldb_private::Trace::DumpTraceInstructions(lldb_private::Thread &amp; thread, lldb_private::Stream &amp; s, size_t count, size_t end_position, bool raw)'/>
<doc f='llvm/lldb/include/lldb/Target/Trace.h' l='123'>/// Dump \a count instructions of the given thread&apos;s trace ending at the
  /// given \a end_position position.
  ///
  /// The instructions are printed along with their indices or positions, which
  /// are increasing chronologically. This means that the \a index 0 represents
  /// the oldest instruction of the trace chronologically.
  ///
  /// \param[in] thread
  ///     The thread whose trace will be dumped.
  ///
  /// \param[in] s
  ///     The stream object where the instructions are printed.
  ///
  /// \param[in] count
  ///     The number of instructions to print.
  ///
  /// \param[in] end_position
  ///     The position of the last instruction to print.
  ///
  /// \param[in] raw
  ///     Dump only instruction addresses without disassembly nor symbol
  ///     information.</doc>
<use f='llvm/lldb/source/Commands/CommandObjectThread.cpp' l='2193' u='c' c='_ZN34CommandObjectTraceDumpInstructions15HandleOneThreadEmRN12lldb_private19CommandReturnObjectE'/>
<def f='llvm/lldb/source/Target/Trace.cpp' l='205' ll='268' type='void lldb_private::Trace::DumpTraceInstructions(lldb_private::Thread &amp; thread, lldb_private::Stream &amp; s, size_t count, size_t end_position, bool raw)'/>
