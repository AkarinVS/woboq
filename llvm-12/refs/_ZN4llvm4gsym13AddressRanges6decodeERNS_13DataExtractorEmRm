<dec f='llvm/llvm/include/llvm/DebugInfo/GSYM/Range.h' l='110' type='void llvm::gsym::AddressRanges::decode(llvm::DataExtractor &amp; Data, uint64_t BaseAddr, uint64_t &amp; Offset)'/>
<doc f='llvm/llvm/include/llvm/DebugInfo/GSYM/Range.h' l='106'>/// Address ranges are decoded and encoded to be relative to a base address.
  /// See the AddressRange comment for the encode and decode methods for full
  /// details.
  /// @{</doc>
<use f='llvm/llvm/lib/DebugInfo/GSYM/InlineInfo.cpp' l='112' u='c' c='_ZL6lookupRKN4llvm4gsym10GsymReaderERNS_13DataExtractorERmmmRSt6vectorINS0_14SourceLocationESaIS8_EERNS_5ErrorE'/>
<use f='llvm/llvm/lib/DebugInfo/GSYM/InlineInfo.cpp' l='185' u='c' c='_ZL6decodeRN4llvm13DataExtractorERmm'/>
<def f='llvm/llvm/lib/DebugInfo/GSYM/Range.cpp' l='103' ll='112' type='void llvm::gsym::AddressRanges::decode(llvm::DataExtractor &amp; Data, uint64_t BaseAddr, uint64_t &amp; Offset)'/>
<use f='llvm/llvm/unittests/DebugInfo/GSYM/GSYMTest.cpp' l='777' u='c' c='_ZL34TestAddressRangeEncodeDecodeHelperRKN4llvm4gsym13AddressRangesEm'/>
