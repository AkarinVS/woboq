<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='3180' macro='1' type='__sanitizer::__sanitizer_dirent * opendir(const char * path)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='3218' u='a' c='_ZL28InitializeCommonInterceptorsv'/>
<dec f='include/dirent.h' l='134' type='DIR * opendir(const char * __name)'/>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerIOPosix.cpp' l='61' u='c' c='_ZN6fuzzer23ListFilesInDirRecursiveERKNSt8__Fuzzer12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPlPNS0_6vectorIS6_NS_16fuzzer_allocatorIS6_EEEEb'/>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerIOPosix.cpp' l='87' u='c' c='_ZN6fuzzer19IterateDirRecursiveERKNSt8__Fuzzer12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPFvS8_ESA_SA_'/>
<doc f='include/dirent.h' l='129'>/* Open a directory stream on NAME.
   Return a DIR stream on the directory, or NULL if it could not be opened.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</doc>
<use f='llvm/libcxx/src/filesystem/directory_iterator.cpp' l='196' u='c' c='_ZNSt3__14__fs10filesystem12__dir_streamC1ERKNS1_4pathENS1_17directory_optionsERNS_10error_codeE'/>
<use f='llvm/lldb/source/Host/linux/Host.cpp' l='227' u='c' c='_ZN12lldb_private4Host17FindProcessesImplERKNS_24ProcessInstanceInfoMatchERSt6vectorINS_19ProcessInstanceInfoESaIS5_EE'/>
<use f='llvm/lldb/source/Host/linux/Host.cpp' l='279' u='c' c='_ZN12lldb_private4Host18FindProcessThreadsEmRSt3mapImbSt4lessImESaISt4pairIKmbEEE'/>
<use f='llvm/llvm/lib/Support/Unix/Path.inc' l='881' u='c' c='_ZN4llvm3sys2fs6detail28directory_iterator_constructERNS2_12DirIterStateENS_9StringRefEb'/>
