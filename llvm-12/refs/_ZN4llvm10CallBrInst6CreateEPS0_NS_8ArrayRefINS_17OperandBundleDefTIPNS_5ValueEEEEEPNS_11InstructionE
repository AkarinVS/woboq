<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='4053' type='static llvm::CallBrInst * llvm::CallBrInst::Create(llvm::CallBrInst * CBI, ArrayRef&lt;llvm::OperandBundleDef&gt; Bundles, llvm::Instruction * InsertPt = nullptr)'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='4047'>/// Create a clone of \p CBI with a different set of operand bundles and
  /// insert it before \p InsertPt.
  ///
  /// The returned callbr instruction is identical to \p CBI in every way
  /// except that the operand bundles for the new instruction are set to the
  /// operand bundles in \p Bundles.</doc>
<use f='llvm/llvm/lib/IR/Instructions.cpp' l='259' u='c' c='_ZN4llvm8CallBase6CreateEPS0_NS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEEPNS_11InstructionE'/>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='914' ll='927' type='static llvm::CallBrInst * llvm::CallBrInst::Create(llvm::CallBrInst * CBI, ArrayRef&lt;llvm::OperandBundleDef&gt; OpB, llvm::Instruction * InsertPt = nullptr)'/>
