<def f='llvm/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporter.h' l='388' ll='393' type='void clang::ento::PathSensitiveBugReport::PathSensitiveBugReport(const clang::ento::BugType &amp; bt, llvm::StringRef desc, const clang::ento::ExplodedNode * errorNode, clang::ento::PathDiagnosticLocation LocationToUnique, const clang::Decl * DeclToUnique)'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporter.h' l='381'>/// Create a PathSensitiveBugReport with a custom uniqueing location.
  ///
  /// The reports that have the same report location, description, bug type, and
  /// ranges are uniqued - only one of the equivalent reports will be presented
  /// to the user. This method allows to rest the location which should be used
  /// for uniquing reports. For example, memory leaks checker, could set this to
  /// the allocation site, rather then the location where the bug is reported.</doc>
