<inh f='llvm/llvm/include/llvm/IR/PassManager.h' l='374' c='llvm::PassInfoMixin'/>
<def f='llvm/llvm/include/llvm/Transforms/Scalar/JumpThreading.h' l='79' ll='176'/>
<use f='llvm/llvm/include/llvm/Transforms/Scalar/JumpThreading.h' l='79'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='680' c='_ZN4llvm11PassBuilder35buildFunctionSimplificationPipelineENS0_17OptimizationLevelENS_18ThinOrFullLTOPhaseE'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='799' c='_ZN4llvm11PassBuilder35buildFunctionSimplificationPipelineENS0_17OptimizationLevelENS_18ThinOrFullLTOPhaseE'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='1691' c='_ZN4llvm11PassBuilder23buildLTODefaultPipelineENS0_17OptimizationLevelEPNS_18ModuleSummaryIndexE'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='1758' c='_ZN4llvm11PassBuilder23buildLTODefaultPipelineENS0_17OptimizationLevelEPNS_18ModuleSummaryIndexE'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='259' c='_ZN4llvm11PassBuilder15parseModulePassERNS_11PassManagerINS_6ModuleENS_15AnalysisManagerIS2_JEEEJEEERKNS0_15PipelineElementE'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='259' c='_ZN4llvm11PassBuilder14parseCGSCCPassERNS_11PassManagerINS_13LazyCallGraph3SCCENS_15AnalysisManagerIS3_JRS2_EEEJS5_RNS_17CGSCCUpdateResultEEEERKNS0_15PipelineElementE'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='259' c='_ZN4llvm11PassBuilder17parseFunctionPassERNS_11PassManagerINS_8FunctionENS_15AnalysisManagerIS2_JEEEJEEERKNS0_15PipelineElementE'/>
<size>232</size>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar/JumpThreading.h' l='64'>/// This pass performs &apos;jump threading&apos;, which looks at blocks that have
/// multiple predecessors and multiple successors.  If one or more of the
/// predecessors of the block can be proven to always jump to one of the
/// successors, we forward the edge from the predecessor to the successor by
/// duplicating the contents of this block.
///
/// An example of when this can occur is code like this:
///
///   if () { ...
///     X = 4;
///   }
///   if (X &lt; 3) {
///
/// In this case, the unconditional branch at the end of the first if can be
/// revectored to the false side of the second if.</doc>
<mbr r='llvm::JumpThreadingPass::TLI' o='0' t='llvm::TargetLibraryInfo *'/>
<mbr r='llvm::JumpThreadingPass::LVI' o='64' t='llvm::LazyValueInfo *'/>
<mbr r='llvm::JumpThreadingPass::AA' o='128' t='llvm::AAResults *'/>
<mbr r='llvm::JumpThreadingPass::DTU' o='192' t='llvm::DomTreeUpdater *'/>
<mbr r='llvm::JumpThreadingPass::BFI' o='256' t='std::unique_ptr&lt;BlockFrequencyInfo&gt;'/>
<mbr r='llvm::JumpThreadingPass::BPI' o='320' t='std::unique_ptr&lt;BranchProbabilityInfo&gt;'/>
<mbr r='llvm::JumpThreadingPass::HasProfileData' o='384' t='bool'/>
<mbr r='llvm::JumpThreadingPass::HasGuards' o='392' t='bool'/>
<mbr r='llvm::JumpThreadingPass::LoopHeaders' o='448' t='SmallPtrSet&lt;const llvm::BasicBlock *, 16&gt;'/>
<mbr r='llvm::JumpThreadingPass::BBDupThreshold' o='1728' t='unsigned int'/>
<mbr r='llvm::JumpThreadingPass::DefaultBBDupThreshold' o='1760' t='unsigned int'/>
<mbr r='llvm::JumpThreadingPass::InsertFreezeWhenUnfoldingSelect' o='1792' t='bool'/>
<fun r='_ZN4llvm17JumpThreadingPassC1Ebi'/>
<fun r='_ZN4llvm17JumpThreadingPass7runImplERNS_8FunctionEPNS_17TargetLibraryInfoEPNS_13LazyValueInfoEPNS_9AAResultsEPNS_14DomTreeUpdaterEbSt10unique_ptrINS_16218292'/>
<fun r='_ZN4llvm17JumpThreadingPass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<fun r='_ZN4llvm17JumpThreadingPass13releaseMemoryEv'/>
<fun r='_ZN4llvm17JumpThreadingPass15findLoopHeadersERNS_8FunctionE'/>
<fun r='_ZN4llvm17JumpThreadingPass12processBlockEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass32maybeMergeBasicBlockIntoOnlyPredEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass9updateSSAEPNS_10BasicBlockES2_RNS_8DenseMapIPNS_11InstructionEPNS_5ValueENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEE'/>
<fun r='_ZN4llvm17JumpThreadingPass17cloneInstructionsENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb0ELb0EvEELb0ELb0EEES6_PNS_10BasicBlockES8_'/>
<fun r='_ZN4llvm17JumpThreadingPass13tryThreadEdgeEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EES2_'/>
<fun r='_ZN4llvm17JumpThreadingPass10threadEdgeEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EES2_'/>
<fun r='_ZN4llvm17JumpThreadingPass32duplicateCondBranchOnPHIIntoPredEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EE'/>
<fun r='_ZN4llvm17JumpThreadingPass35computeValueKnownInPredecessorsImplEPNS_5ValueEPNS_10BasicBlockERNS_15SmallVectorImplISt4pairIPNS_8ConstantES4_EEENS_13ju121927'/>
<fun r='_ZN4llvm17JumpThreadingPass31computeValueKnownInPredecessorsEPNS_5ValueEPNS_10BasicBlockERNS_15SmallVectorImplISt4pairIPNS_8ConstantES4_EEENS_13jumpth13564311'/>
<fun r='_ZN4llvm17JumpThreadingPass25evaluateOnPredecessorEdgeEPNS_10BasicBlockES2_PNS_5ValueE'/>
<fun r='_ZN4llvm17JumpThreadingPass32maybethreadThroughTwoBasicBlocksEPNS_10BasicBlockEPNS_5ValueE'/>
<fun r='_ZN4llvm17JumpThreadingPass27threadThroughTwoBasicBlocksEPNS_10BasicBlockES2_S2_S2_'/>
<fun r='_ZN4llvm17JumpThreadingPass22processThreadableEdgesEPNS_5ValueEPNS_10BasicBlockENS_13jumpthreading18ConstantPreferenceEPNS_11InstructionE'/>
<fun r='_ZN4llvm17JumpThreadingPass18processBranchOnPHIEPNS_7PHINodeE'/>
<fun r='_ZN4llvm17JumpThreadingPass18processBranchOnXOREPNS_14BinaryOperatorE'/>
<fun r='_ZN4llvm17JumpThreadingPass23processImpliedConditionEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass30simplifyPartiallyRedundantLoadEPNS_8LoadInstE'/>
<fun r='_ZN4llvm17JumpThreadingPass17unfoldSelectInstrEPNS_10BasicBlockES2_PNS_10SelectInstEPNS_7PHINodeEj'/>
<fun r='_ZN4llvm17JumpThreadingPass17tryToUnfoldSelectEPNS_7CmpInstEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass17tryToUnfoldSelectEPNS_10SwitchInstEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass25tryToUnfoldSelectInCurrBBEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass13processGuardsEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass11threadGuardEPNS_10BasicBlockEPNS_13IntrinsicInstEPNS_10BranchInstE'/>
<fun r='_ZN4llvm17JumpThreadingPass15splitBlockPredsEPNS_10BasicBlockENS_8ArrayRefIS2_EEPKc'/>
<fun r='_ZN4llvm17JumpThreadingPass28updateBlockFreqAndEdgeWeightEPNS_10BasicBlockES2_S2_S2_'/>
<fun r='_ZN4llvm17JumpThreadingPass24doesBlockHaveProfileDataEPNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='137'/>
<size>232</size>
<fun r='_ZN4llvm17JumpThreadingPassC1Ebi'/>
<fun r='_ZN4llvm17JumpThreadingPass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<fun r='_ZN4llvm17JumpThreadingPass7runImplERNS_8FunctionEPNS_17TargetLibraryInfoEPNS_13LazyValueInfoEPNS_9AAResultsEPNS_14DomTreeUpdaterEbSt10unique_ptrINS_16218292'/>
<fun r='_ZN4llvm17JumpThreadingPass15findLoopHeadersERNS_8FunctionE'/>
<fun r='_ZN4llvm17JumpThreadingPass35computeValueKnownInPredecessorsImplEPNS_5ValueEPNS_10BasicBlockERNS_15SmallVectorImplISt4pairIPNS_8ConstantES4_EEENS_13ju121927'/>
<fun r='_ZN4llvm17JumpThreadingPass12processBlockEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass23processImpliedConditionEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass30simplifyPartiallyRedundantLoadEPNS_8LoadInstE'/>
<fun r='_ZN4llvm17JumpThreadingPass25evaluateOnPredecessorEdgeEPNS_10BasicBlockES2_PNS_5ValueE'/>
<fun r='_ZN4llvm17JumpThreadingPass22processThreadableEdgesEPNS_5ValueEPNS_10BasicBlockENS_13jumpthreading18ConstantPreferenceEPNS_11InstructionE'/>
<fun r='_ZN4llvm17JumpThreadingPass18processBranchOnPHIEPNS_7PHINodeE'/>
<fun r='_ZN4llvm17JumpThreadingPass18processBranchOnXOREPNS_14BinaryOperatorE'/>
<fun r='_ZN4llvm17JumpThreadingPass32maybeMergeBasicBlockIntoOnlyPredEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass9updateSSAEPNS_10BasicBlockES2_RNS_8DenseMapIPNS_11InstructionEPNS_5ValueENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEE'/>
<fun r='_ZN4llvm17JumpThreadingPass17cloneInstructionsENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb0ELb0EvEELb0ELb0EEES6_PNS_10BasicBlockES8_'/>
<fun r='_ZN4llvm17JumpThreadingPass32maybethreadThroughTwoBasicBlocksEPNS_10BasicBlockEPNS_5ValueE'/>
<fun r='_ZN4llvm17JumpThreadingPass27threadThroughTwoBasicBlocksEPNS_10BasicBlockES2_S2_S2_'/>
<fun r='_ZN4llvm17JumpThreadingPass13tryThreadEdgeEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EES2_'/>
<fun r='_ZN4llvm17JumpThreadingPass10threadEdgeEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EES2_'/>
<fun r='_ZN4llvm17JumpThreadingPass15splitBlockPredsEPNS_10BasicBlockENS_8ArrayRefIS2_EEPKc'/>
<fun r='_ZN4llvm17JumpThreadingPass24doesBlockHaveProfileDataEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass28updateBlockFreqAndEdgeWeightEPNS_10BasicBlockES2_S2_S2_'/>
<fun r='_ZN4llvm17JumpThreadingPass32duplicateCondBranchOnPHIIntoPredEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EE'/>
<fun r='_ZN4llvm17JumpThreadingPass17unfoldSelectInstrEPNS_10BasicBlockES2_PNS_10SelectInstEPNS_7PHINodeEj'/>
<fun r='_ZN4llvm17JumpThreadingPass17tryToUnfoldSelectEPNS_10SwitchInstEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass17tryToUnfoldSelectEPNS_7CmpInstEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass25tryToUnfoldSelectInCurrBBEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass13processGuardsEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17JumpThreadingPass11threadGuardEPNS_10BasicBlockEPNS_13IntrinsicInstEPNS_10BranchInstE'/>
