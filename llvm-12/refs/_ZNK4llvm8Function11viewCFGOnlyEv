<dec f='llvm/llvm/include/llvm/IR/Function.h' l='848' type='void llvm::Function::viewCFGOnly() const'/>
<doc f='llvm/llvm/include/llvm/IR/Function.h' l='843'>/// viewCFGOnly - This function is meant for use from the debugger.  It works
  /// just like viewCFG, but it does not include the contents of basic blocks
  /// into the nodes, just the label.  If you are only interested in the CFG
  /// this can make the graph smaller.
  ///</doc>
<use f='llvm/llvm/include/llvm/LinkAllPasses.h' l='236' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<use f='llvm/llvm/lib/Analysis/Analysis.cpp' l='138' u='c' c='LLVMViewFunctionCFGOnly'/>
<def f='llvm/llvm/lib/Analysis/CFGPrinter.cpp' l='258' type='void llvm::Function::viewCFGOnly() const'/>
<doc f='llvm/llvm/lib/Analysis/CFGPrinter.cpp' l='253'>/// viewCFGOnly - This function is meant for use from the debugger.  It works
/// just like viewCFG, but it does not include the contents of basic blocks
/// into the nodes, just the label.  If you are only interested in the CFG
/// this can make the graph smaller.
///</doc>
