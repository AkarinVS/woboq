<dec f='llvm/llvm/include/llvm/Option/OptTable.h' l='202' type='llvm::opt::Arg * llvm::opt::OptTable::ParseOneArg(const llvm::opt::ArgList &amp; Args, unsigned int &amp; Index, unsigned int FlagsToInclude = 0, unsigned int FlagsToExclude = 0) const'/>
<doc f='llvm/llvm/include/llvm/Option/OptTable.h' l='188'>/// Parse a single argument; returning the new argument and
  /// updating Index.
  ///
  /// \param [in,out] Index - The current parsing position in the argument
  /// string list; on return this will be the index of the next argument
  /// string to parse.
  /// \param [in] FlagsToInclude - Only parse options with any of these flags.
  /// Zero is the default which includes all flags.
  /// \param [in] FlagsToExclude - Don&apos;t parse options with this flag.  Zero
  /// is the default and means exclude nothing.
  ///
  /// \return The parsed argument, or 0 if the argument is missing values
  /// (in which case Index still points at the conceptual next argument string
  /// to parse).</doc>
<use f='llvm/clang/lib/Driver/ToolChain.cpp' l='1198' u='c' c='_ZNK5clang6driver9ToolChain25TranslateOpenMPTargetArgsERKN4llvm3opt14DerivedArgListEbRNS2_15SmallVectorImplIPNS3_3ArgEEE'/>
<use f='llvm/clang/lib/Driver/ToolChain.cpp' l='1238' u='c' c='_ZNK5clang6driver9ToolChain18TranslateXarchArgsERKN4llvm3opt14DerivedArgListERPNS3_3ArgEPS4_PNS2_15SmallVectorImplIS8_EE'/>
<use f='llvm/clang/lib/Tooling/InterpolatingCompilationDatabase.cpp' l='162' u='c' c='_ZN5clang7tooling12_GLOBAL__N_119TransferableCommandC1ENS0_14CompileCommandE'/>
<def f='llvm/llvm/lib/Option/OptTable.cpp' l='391' ll='449' type='llvm::opt::Arg * llvm::opt::OptTable::ParseOneArg(const llvm::opt::ArgList &amp; Args, unsigned int &amp; Index, unsigned int FlagsToInclude = 0, unsigned int FlagsToExclude = 0) const'/>
<use f='llvm/llvm/lib/Option/OptTable.cpp' l='478' u='c' c='_ZNK4llvm3opt8OptTable9ParseArgsENS_8ArrayRefIPKcEERjS6_jj'/>
