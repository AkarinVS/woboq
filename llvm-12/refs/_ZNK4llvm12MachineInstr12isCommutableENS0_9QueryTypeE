<def f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1013' ll='1015' type='bool llvm::MachineInstr::isCommutable(llvm::MachineInstr::QueryType Type = IgnoreBundle) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='999'>//===--------------------------------------------------------------------===//
  // Flags that indicate whether an instruction can be modified by a method.
  //===--------------------------------------------------------------------===//

  /// Return true if this may be a 2- or 3-address
  /// instruction (of the form &quot;X = op Y, Z, ...&quot;), which produces the same
  /// result if Y and Z are exchanged.  If this flag is set, then the
  /// TargetInstrInfo::commuteInstruction method may be used to hack on the
  /// instruction.
  ///
  /// Note that this flag may be set on instructions that are only commutable
  /// sometimes.  In these cases, the call to commuteInstruction will fail.
  /// Also note that some instructions require non-trivial modification to
  /// commute them.</doc>
<use f='llvm/llvm/lib/CodeGen/MachineCSE.cpp' l='541' u='c' c='_ZN12_GLOBAL__N_110MachineCSE15ProcessBlockCSEEPN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/RegisterCoalescer.cpp' l='830' u='c' c='_ZN12_GLOBAL__N_117RegisterCoalescer24removeCopyByCommutingDefERKN4llvm13CoalescerPairEPNS1_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp' l='582' u='c' c='_ZN4llvm17ScheduleDAGInstrs10initSUnitsEv'/>
<use f='llvm/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp' l='1064' u='c' c='_ZN12_GLOBAL__N_125TwoAddressInstructionPass21tryInstructionCommuteEPN4llvm12MachineInstrEjjbj'/>
<use f='llvm/llvm/lib/Target/AMDGPU/GCNDPPCombine.cpp' l='506' u='c' c='_ZNK12_GLOBAL__N_113GCNDPPCombine13combineDPPMovERN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIFoldOperands.cpp' l='1078' u='c' c='_ZL17tryConstantFoldOpRN4llvm19MachineRegisterInfoEPKNS_11SIInstrInfoEPNS_12MachineInstrEPNS_14MachineOperandE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='4552' u='c' c='_ZNK4llvm11SIInstrInfo20legalizeOperandsVOP2ERNS_19MachineRegisterInfoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIOptimizeExecMasking.cpp' l='424' u='c' c='_ZN12_GLOBAL__N_121SIOptimizeExecMasking20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIShrinkInstructions.cpp' l='104' u='c' c='_ZL14foldImmediatesRN4llvm12MachineInstrEPKNS_11SIInstrInfoERNS_19MachineRegisterInfoEb'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIShrinkInstructions.cpp' l='724' u='c' c='_ZN12_GLOBAL__N_120SIShrinkInstructions20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1251' u='c' c='_ZNK4llvm16SystemZInstrInfo21foldMemoryOperandImplERNS_15MachineFunctionERNS_12MachineInstrENS_8ArrayRefIjEENS_26MachineInstrBundleIteratorIS3_Lb0EEEi15416259'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZRegisterInfo.cpp' l='98' u='c' c='_ZNK4llvm19SystemZRegisterInfo21getRegAllocationHintsENS_8RegisterENS_8ArrayRefItEERNS_15SmallVectorImplItEERKNS_15MachineFunctionEPKNS_10VirtRegMapEPKNS_13LiveRegMatrixE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZRegisterInfo.cpp' l='104' u='c' c='_ZNK4llvm19SystemZRegisterInfo21getRegAllocationHintsENS_8RegisterENS_8ArrayRefItEERNS_15SmallVectorImplItEERKNS_15MachineFunctionEPKNS_10VirtRegMapEPKNS_13LiveRegMatrixE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZShortenInst.cpp' l='360' u='c' c='_ZN12_GLOBAL__N_118SystemZShortenInst12processBlockERN4llvm17MachineBasicBlockE'/>
