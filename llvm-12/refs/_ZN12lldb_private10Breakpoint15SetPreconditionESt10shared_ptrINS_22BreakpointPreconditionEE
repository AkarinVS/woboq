<def f='llvm/lldb/include/lldb/Breakpoint/Breakpoint.h' l='547' ll='549' type='void lldb_private::Breakpoint::SetPrecondition(lldb::BreakpointPreconditionSP precondition_sp)'/>
<doc f='llvm/lldb/include/lldb/Breakpoint/Breakpoint.h' l='537'>/// Set a pre-condition filter that overrides all user provided
  /// filters/callbacks etc.
  ///
  /// Used to define fancy breakpoints that can do dynamic hit detection
  /// without taking up the condition slot - which really belongs to the user
  /// anyway...
  ///
  /// The Precondition should not continue the target, it should return true
  /// if the condition says to stop and false otherwise.
  ///</doc>
<use f='llvm/lldb/source/Target/LanguageRuntime.cpp' l='253' u='c' c='_ZN12lldb_private15LanguageRuntime25CreateExceptionBreakpointERNS_6TargetEN4lldb12LanguageTypeEbbb'/>
