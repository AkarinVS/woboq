<dec f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='84' type='bool llvm::DeleteDeadPHIs(llvm::BasicBlock * BB, const llvm::TargetLibraryInfo * TLI = nullptr, llvm::MemorySSAUpdater * MSSAU = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='80'>/// Examine each PHI in the given block and delete it if it is dead. Also
/// recursively delete any operands that become dead as a result. This includes
/// tracing the def-use list from the PHI to see if it is ultimately unused or
/// if it reaches an unused cycle. Return true if any PHIs were deleted.</doc>
<use f='llvm/llvm/lib/CodeGen/HardwareLoops.cpp' l='341' u='c' c='_ZN12_GLOBAL__N_112HardwareLoop6CreateEv'/>
<use f='llvm/llvm/lib/Target/ARM/MVETailPredication.cpp' l='418' u='c' c='_ZN12_GLOBAL__N_118MVETailPredication24TryConvertActiveLaneMaskEPN4llvm5ValueE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp' l='703' u='c' c='_ZN12_GLOBAL__N_120PPCLoopInstrFormPrep14updateFormPrepEPN4llvm4LoopERNS1_11SmallVectorINS_6BucketELj16EEE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp' l='725' u='c' c='_ZN12_GLOBAL__N_120PPCLoopInstrFormPrep12dispFormPrepEPN4llvm4LoopERNS1_11SmallVectorINS_6BucketELj16EEENS_9InstrFormE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='1893' u='c' c='_ZN12_GLOBAL__N_114IndVarSimplify3runEPN4llvm4LoopE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp' l='1496' u='c' c='_ZN12_GLOBAL__N_110LoopReroll14DAGRootTracker7replaceEPKN4llvm4SCEVE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp' l='5853' u='c' c='_ZL18ReduceLoopStrengthPN4llvm4LoopERNS_7IVUsersERNS_15ScalarEvolutionERNS_13DominatorTreeERNS_8LoopInfoERKNS_19TargetTransformInfoERNS_15AssumptionCa13130389'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp' l='5866' u='c' c='_ZL18ReduceLoopStrengthPN4llvm4LoopERNS_7IVUsersERNS_15ScalarEvolutionERNS_13DominatorTreeERNS_8LoopInfoERKNS_19TargetTransformInfoERNS_15AssumptionCa13130389'/>
<def f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='158' ll='172' type='bool llvm::DeleteDeadPHIs(llvm::BasicBlock * BB, const llvm::TargetLibraryInfo * TLI = nullptr, llvm::MemorySSAUpdater * MSSAU = nullptr)'/>
