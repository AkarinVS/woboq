<dec f='llvm/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h' l='278' type='void llvm::mca::DependencyGraph::getCriticalSequence(SmallVectorImpl&lt;const llvm::mca::DependencyEdge *&gt; &amp; Seq) const'/>
<def f='llvm/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp' l='263' ll='284' type='void llvm::mca::DependencyGraph::getCriticalSequence(SmallVectorImpl&lt;const llvm::mca::DependencyEdge *&gt; &amp; Seq) const'/>
<use f='llvm/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp' l='303' u='c' c='_ZNK4llvm3mca18BottleneckAnalysis21printCriticalSequenceERNS_11raw_ostreamE'/>
<doc f='llvm/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h' l='275'>// Returns a sequence of edges representing the critical sequence based on the
  // simulated run. It assumes that the graph has already been finalized (i.e.
  // method `finalizeGraph()` has already been called on this graph).</doc>
