<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='897' ll='908' type='bool llvm::InformationCache::getPotentiallyReachable(const llvm::Instruction &amp; From, const llvm::Instruction &amp; To)'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2633' u='c' c='_ZNK4llvm14AAReachability18isAssumedReachableERNS_10AttributorERKNS_11InstructionES5_'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2641' u='c' c='_ZNK4llvm14AAReachability16isKnownReachableERNS_10AttributorERKNS_11InstructionES5_'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='895'>/// Return if \p To is potentially reachable form \p From or not
  /// If the same query was answered, return cached result</doc>
