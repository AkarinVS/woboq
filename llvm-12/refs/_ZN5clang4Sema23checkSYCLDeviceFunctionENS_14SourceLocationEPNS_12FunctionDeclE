<dec f='llvm/clang/include/clang/Sema/Sema.h' l='12791' type='bool clang::Sema::checkSYCLDeviceFunction(clang::SourceLocation Loc, clang::FunctionDecl * Callee)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='12778'>/// Check whether we&apos;re allowed to call Callee from the current context.
  ///
  /// - If the call is never allowed in a semantically-correct program
  ///   emits an error and returns false.
  ///
  /// - If the call is allowed in semantically-correct programs, but only if
  ///   it&apos;s never codegen&apos;ed, creates a deferred diagnostic to be emitted if
  ///   and when the caller is codegen&apos;ed, and returns true.
  ///
  /// - Otherwise, returns true without emitting any diagnostics.
  ///
  /// Adds Callee to DeviceCallGraph if we don&apos;t know if its caller will be
  /// codegen&apos;ed yet.</doc>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='15065' u='c' c='_ZN5clang4Sema21BuildCXXConstructExprENS_14SourceLocationENS_8QualTypeEPNS_18CXXConstructorDeclEbN4llvm15MutableArrayRefIPNS_4ExprEEEbbbbjNS_11SourceRangeE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='297' u='c' c='_ZN5clang4Sema17DiagnoseUseOfDeclEPNS_9NamedDeclEN4llvm8ArrayRefINS_14SourceLocationEEEPKNS_17ObjCInterfaceDeclEbbPS7_'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='16842' u='c' c='_ZN5clang4Sema22MarkFunctionReferencedENS_14SourceLocationEPNS_12FunctionDeclEb'/>
<def f='llvm/clang/lib/Sema/SemaSYCL.cpp' l='35' ll='49' type='bool clang::Sema::checkSYCLDeviceFunction(clang::SourceLocation Loc, clang::FunctionDecl * Callee)'/>
