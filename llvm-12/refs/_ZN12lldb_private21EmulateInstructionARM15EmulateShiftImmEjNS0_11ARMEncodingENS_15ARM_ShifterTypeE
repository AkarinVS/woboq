<dec f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.h' l='447' type='bool lldb_private::EmulateInstructionARM::EmulateShiftImm(const uint32_t opcode, const lldb_private::EmulateInstructionARM::ARMEncoding encoding, lldb_private::ARM_ShifterType shift_type)'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='3550' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateASRImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='3598' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateLSLImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='3646' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateLSRImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='3694' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateRORImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='3744' u='c' c='_ZN12lldb_private21EmulateInstructionARM10EmulateRRXEjNS0_11ARMEncodingE'/>
<def f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='3747' ll='3835' type='bool lldb_private::EmulateInstructionARM::EmulateShiftImm(const uint32_t opcode, const lldb_private::EmulateInstructionARM::ARMEncoding encoding, lldb_private::ARM_ShifterType shift_type)'/>
<doc f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.h' l='446'>// Helper method for ASR, LSL, LSR, ROR (immediate), and RRX</doc>
