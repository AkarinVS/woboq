<use f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h' l='391' u='c' c='_ZN5clang4ento7SMTConv13getSymBinExprERSt10shared_ptrIN4llvm9SMTSolverEERNS_10ASTContextEPKNS0_13BinarySymExprEPbPNS_8QualTypeE'/>
<use f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h' l='405' u='c' c='_ZN5clang4ento7SMTConv13getSymBinExprERSt10shared_ptrIN4llvm9SMTSolverEERNS_10ASTContextEPKNS0_13BinarySymExprEPbPNS_8QualTypeE'/>
<use f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h' l='411' u='c' c='_ZN5clang4ento7SMTConv13getSymBinExprERSt10shared_ptrIN4llvm9SMTSolverEERNS_10ASTContextEPKNS0_13BinarySymExprEPbPNS_8QualTypeE'/>
<use f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h' l='413' u='c' c='_ZN5clang4ento7SMTConv13getSymBinExprERSt10shared_ptrIN4llvm9SMTSolverEERNS_10ASTContextEPKNS0_13BinarySymExprEPbPNS_8QualTypeE'/>
<def f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h' l='422' ll='459' type='static llvm::SMTExprRef clang::ento::SMTConv::getSymExpr(llvm::SMTSolverRef &amp; Solver, clang::ASTContext &amp; Ctx, clang::ento::SymbolRef Sym, clang::QualType * RetTy, bool * hasComparison)'/>
<use f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h' l='439' u='c' c='_ZN5clang4ento7SMTConv10getSymExprERSt10shared_ptrIN4llvm9SMTSolverEERNS_10ASTContextEPKNS0_7SymExprEPNS_8QualTypeEPb'/>
<use f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h' l='473' u='c' c='_ZN5clang4ento7SMTConv7getExprERSt10shared_ptrIN4llvm9SMTSolverEERNS_10ASTContextEPKNS0_7SymExprEPNS_8QualTypeEPb'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConv.h' l='420'>// Recursive implementation to unpack and generate symbolic expression.
  // Sets the hasComparison and RetTy parameters. See getExpr().</doc>
