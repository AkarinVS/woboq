<dec f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.h' l='182' type='void llvm::SystemZInstrInfo::expandRIEPseudo(llvm::MachineInstr &amp; MI, unsigned int LowOpcode, unsigned int LowOpcodeK, unsigned int HighOpcode) const'/>
<def f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='151' ll='170' type='void llvm::SystemZInstrInfo::expandRIEPseudo(llvm::MachineInstr &amp; MI, unsigned int LowOpcode, unsigned int LowOpcodeK, unsigned int HighOpcode) const'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1460' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<doc f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='147'>// MI is a three-operand RIE-style pseudo instruction.  Replace it with
// LowOpcodeK if the registers are both low GR32s, otherwise use a move
// followed by HighOpcode or LowOpcode, depending on whether the target
// is a high or low GR32.</doc>
