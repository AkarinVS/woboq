<dec f='llvm/clang/include/clang/Sema/Sema.h' l='6126' type='bool clang::Sema::CheckCXXThisCapture(clang::SourceLocation Loc, bool Explicit = false, bool BuildAndDiagnose = true, const unsigned int *const FunctionScopeIndexToStopAt = nullptr, bool ByCopy = false)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='6111'>/// Make sure the value of &apos;this&apos; is actually available in the current
  /// context, if it is a potentially evaluated context.
  ///
  /// \param Loc The location at which the capture of &apos;this&apos; occurs.
  ///
  /// \param Explicit Whether &apos;this&apos; is explicitly captured in a lambda
  /// capture list.
  ///
  /// \param FunctionScopeIndexToStopAt If non-null, it points to the index
  /// of the FunctionScopeInfo stack beyond which we do not attempt to capture.
  /// This is useful when enclosing lambdas must speculatively capture
  /// &apos;this&apos; that may or may not be used in certain specializations of
  /// a nested generic lambda (depending on whether the name resolves to
  /// a non-static member function or a static function).
  /// \return returns &apos;true&apos; if failed, &apos;false&apos; if success.</doc>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2178' u='c' c='_ZN5clang4Sema29DiagnoseDependentMemberLookupERNS_12LookupResultE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='6300' u='c' c='_ZL71tryImplicitlyCaptureThisIfImplicitMemberFunctionAccessWithDependentArgsRN5clang4SemaEPKNS_20UnresolvedMemberExprENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='6301' u='c' c='_ZL71tryImplicitlyCaptureThisIfImplicitMemberFunctionAccessWithDependentArgsRN5clang4SemaEPKNS_20UnresolvedMemberExprENS_14SourceLocationE'/>
<def f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='1233' ll='1343' type='bool clang::Sema::CheckCXXThisCapture(clang::SourceLocation Loc, const bool Explicit = false, bool BuildAndDiagnose = true, const unsigned int *const FunctionScopeIndexToStopAt = nullptr, const bool ByCopy = false)'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='1364' u='c' c='_ZN5clang4Sema18MarkThisReferencedEPNS_11CXXThisExprE'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='7939' u='c' c='_ZL57CheckIfAnyEnclosingLambdasMustCaptureAnyPotentialCapturesPN5clang4ExprEPNS_4sema15LambdaScopeInfoERNS_4SemaE'/>
<use f='llvm/clang/lib/Sema/SemaLambda.cpp' l='217' u='c' c='_ZN5clang51getStackIndexOfNearestEnclosingCaptureCapableLambdaEN4llvm8ArrayRefIPKNS_4sema17FunctionScopeInfoEEEPNS_7VarDeclERNS_4SemaE'/>
<use f='llvm/clang/lib/Sema/SemaLambda.cpp' l='1030' u='c' c='_ZN5clang4Sema28ActOnStartOfLambdaDefinitionERNS_16LambdaIntroducerERNS_10DeclaratorEPNS_5ScopeE'/>
<use f='llvm/clang/lib/Sema/SemaLambda.cpp' l='1078' u='c' c='_ZN5clang4Sema28ActOnStartOfLambdaDefinitionERNS_16LambdaIntroducerERNS_10DeclaratorEPNS_5ScopeE'/>
<use f='llvm/clang/lib/Sema/SemaOpenMP.cpp' l='4394' u='c' c='_ZN5clang4Sema23tryCaptureOpenMPLambdasEPNS_9ValueDeclE'/>
