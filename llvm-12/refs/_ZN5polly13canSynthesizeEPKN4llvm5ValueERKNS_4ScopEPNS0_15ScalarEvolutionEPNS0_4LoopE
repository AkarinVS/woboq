<dec f='llvm/polly/include/polly/Support/ScopHelper.h' l='498' type='bool polly::canSynthesize(const llvm::Value * V, const polly::Scop &amp; S, llvm::ScalarEvolution * SE, llvm::Loop * Scope)'/>
<doc f='llvm/polly/include/polly/Support/ScopHelper.h' l='485'>/// Check whether a value an be synthesized by the code generator.
///
/// Some value will be recalculated only from information that is code generated
/// from the polyhedral representation. For such instructions we do not need to
/// ensure that their operands are available during code generation.
///
/// @param V The value to check.
/// @param S The current SCoP.
/// @param SE The scalar evolution database.
/// @param Scope Location where the value would by synthesized.
/// @return If the instruction I can be regenerated from its
///         scalar evolution representation, return true,
///         otherwise return false.</doc>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='1090' u='c' c='_ZN5polly11ScopBuilder16buildPHIAccessesEPNS_8ScopStmtEPN4llvm7PHINodeEPNS3_6RegionEb'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='1934' u='c' c='_ZN5polly11ScopBuilder15shouldModelInstEPN4llvm11InstructionEPNS1_4LoopE'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='353' u='c' c='_ZN5polly14BlockGenerator19canSyntheziseInStmtERNS_8ScopStmtEPN4llvm11InstructionE'/>
<use f='llvm/polly/lib/CodeGen/IslNodeBuilder.cpp' l='218' u='c' c='_ZL21findReferencesInBlockR17SubtreeReferencesPKN5polly8ScopStmtEPN4llvm10BasicBlockE'/>
<def f='llvm/polly/lib/Support/ScopHelper.cpp' l='649' ll='661' type='bool polly::canSynthesize(const llvm::Value * V, const polly::Scop &amp; S, llvm::ScalarEvolution * SE, llvm::Loop * Scope)'/>
<use f='llvm/polly/lib/Support/VirtualInstruction.cpp' l='68' u='c' c='_ZN5polly10VirtualUse6createEPNS_4ScopEPNS_8ScopStmtEPN4llvm4LoopEPNS5_5ValueEb'/>
