<inh f='llvm/lld/wasm/Symbols.h' l='44' c='lld::wasm::Symbol'/>
<def f='llvm/lld/wasm/Symbols.h' l='428' ll='448'/>
<ovr f='llvm/lld/wasm/Symbols.h' l='450' c='lld::wasm::DefinedEvent'/>
<use f='llvm/lld/wasm/Symbols.h' l='450'/>
<use f='llvm/lld/wasm/InputFiles.h' l='152' c='_ZNK3lld4wasm7ObjFile14getEventSymbolEj'/>
<size>64</size>
<doc f='llvm/lld/wasm/Symbols.h' l='416'>// Wasm events are features that suspend the current execution and transfer the
// control flow to a corresponding handler. Currently the only supported event
// kind is exceptions.
//
// Event tags are values to distinguish different events. For exceptions, they
// can be used to distinguish different language&apos;s exceptions, i.e., all C++
// exceptions have the same tag. Wasm can generate code capable of doing
// different handling actions based on the tag of caught exceptions.
//
// A single EventSymbol object represents a single tag. C++ exception event
// symbol is a weak symbol generated in every object file in which exceptions
// are used, and has name &apos;__cpp_exception&apos; for linking.</doc>
<fun r='_ZN3lld4wasm11EventSymbol7classofEPKNS0_6SymbolE'/>
<fun r='_ZNK3lld4wasm11EventSymbol12getEventTypeEv'/>
<fun r='_ZNK3lld4wasm11EventSymbol13getEventIndexEv'/>
<fun r='_ZN3lld4wasm11EventSymbol13setEventIndexEj'/>
<fun r='_ZNK3lld4wasm11EventSymbol13hasEventIndexEv'/>
<mbr r='lld::wasm::EventSymbol::signature' o='320' t='const llvm::wasm::WasmSignature *'/>
<fun r='_ZN3lld4wasm11EventSymbolC1EN4llvm9StringRefENS0_6Symbol4KindEjPNS0_9InputFileEPKNS2_4wasm13WasmEventTypeEPKNS8_13WasmSignatureE'/>
<mbr r='lld::wasm::EventSymbol::eventType' o='384' t='const llvm::wasm::WasmEventType *'/>
<mbr r='lld::wasm::EventSymbol::eventIndex' o='448' t='uint32_t'/>
<use f='llvm/lld/wasm/InputFiles.cpp' l='532' c='_ZNK3lld4wasm7ObjFile14getEventSymbolEj'/>
<use f='llvm/lld/wasm/InputFiles.cpp' l='533' c='_ZNK3lld4wasm7ObjFile14getEventSymbolEj'/>
<size>64</size>
<use f='llvm/lld/wasm/SymbolTable.cpp' l='176' c='_ZN3lld4wasmL14checkEventTypeEPKNS0_6SymbolEPKNS0_9InputFileEPKN4llvm4wasm13WasmEventTypeEPKNS8_13WasmSignatureE'/>
<use f='llvm/lld/wasm/SymbolTable.cpp' l='177' c='_ZN3lld4wasmL14checkEventTypeEPKNS0_6SymbolEPKNS0_9InputFileEPKN4llvm4wasm13WasmEventTypeEPKNS8_13WasmSignatureE'/>
<use f='llvm/lld/wasm/SymbolTable.cpp' l='182' c='_ZN3lld4wasmL14checkEventTypeEPKNS0_6SymbolEPKNS0_9InputFileEPKN4llvm4wasm13WasmEventTypeEPKNS8_13WasmSignatureE'/>
<size>64</size>
<use f='llvm/lld/wasm/Symbols.cpp' l='103' c='_ZNK3lld4wasm6Symbol11getWasmTypeEv'/>
<use f='llvm/lld/wasm/Symbols.cpp' l='350' c='_ZN3lld4wasm12DefinedEventC1EN4llvm9StringRefEjPNS0_9InputFileEPNS0_10InputEventE'/>
<size>64</size>
<fun r='_ZNK3lld4wasm11EventSymbol13getEventIndexEv'/>
<fun r='_ZN3lld4wasm11EventSymbol13setEventIndexEj'/>
<fun r='_ZNK3lld4wasm11EventSymbol13hasEventIndexEv'/>
<use f='llvm/lld/wasm/SyntheticSections.cpp' l='119' c='_ZN3lld4wasm13ImportSection9addImportEPNS0_6SymbolE'/>
<use f='llvm/lld/wasm/SyntheticSections.cpp' l='170' c='_ZN3lld4wasm13ImportSection9writeBodyEv'/>
<use f='llvm/lld/wasm/SyntheticSections.cpp' l='457' c='_ZN3lld4wasm14LinkingSection9writeBodyEv'/>
<size>64</size>
<use f='llvm/lld/wasm/Writer.cpp' l='686' c='_ZN3lld4wasm12_GLOBAL__N_16Writer14calculateTypesEv'/>
<size>64</size>
