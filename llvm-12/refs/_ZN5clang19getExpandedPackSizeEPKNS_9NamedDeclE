<def f='llvm/clang/include/clang/AST/DeclTemplate.h' l='3367' ll='3384' type='Optional&lt;unsigned int&gt; clang::getExpandedPackSize(const clang::NamedDecl * Param)'/>
<doc f='llvm/clang/include/clang/AST/DeclTemplate.h' l='3356'>/// Check whether the template parameter is a pack expansion, and if so,
/// determine the number of parameters produced by that expansion. For instance:
///
/// \code
/// template&lt;typename ...Ts&gt; struct A {
///   template&lt;Ts ...NTs, template&lt;Ts&gt; class ...TTs, typename ...Us&gt; struct B;
/// };
/// \endcode
///
/// In \c A&lt;int,int&gt;::B, \c NTs and \c TTs have expanded pack size 2, and \c Us
/// is not a pack expansion, so returns an empty Optional.</doc>
<use f='llvm/clang/lib/AST/DeclTemplate.cpp' l='105' u='c' c='_ZNK5clang21TemplateParameterList23getMinRequiredArgumentsEv'/>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='5657' u='c' c='_ZN5clang4Sema25CheckTemplateArgumentListEPNS_12TemplateDeclENS_14SourceLocationERNS_24TemplateArgumentListInfoEbRN4llvm15SmallVectorImplINS_16TemplateArgumentEEEbPb'/>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='5689' u='c' c='_ZN5clang4Sema25CheckTemplateArgumentListEPNS_12TemplateDeclENS_14SourceLocationERNS_24TemplateArgumentListInfoEbRN4llvm15SmallVectorImplINS_16TemplateArgumentEEEbPb'/>
<use f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='717' u='c' c='_ZN12_GLOBAL__N_118PackDeductionScope7addPackEj'/>
<use f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='955' u='c' c='_ZN12_GLOBAL__N_118PackDeductionScope6finishEv'/>
<use f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='3275' u='c' c='_ZN5clang4Sema35SubstituteExplicitTemplateArgumentsEPNS_20FunctionTemplateDeclERNS_24TemplateArgumentListInfoERN4llvm15SmallVectorImplINS_23DeducedTem2257364'/>
