<dec f='llvm/clang/lib/AST/Linkage.h' l='106' type='clang::LinkageInfo clang::LinkageComputer::getLVForTemplateArgumentList(ArrayRef&lt;clang::TemplateArgument&gt; Args, clang::LVComputationKind computation)'/>
<def f='llvm/clang/lib/AST/Decl.cpp' l='318' ll='360' type='clang::LinkageInfo clang::LinkageComputer::getLVForTemplateArgumentList(ArrayRef&lt;clang::TemplateArgument&gt; Args, clang::LVComputationKind computation)'/>
<use f='llvm/clang/lib/AST/Decl.cpp' l='353' u='c' c='_ZN5clang15LinkageComputer28getLVForTemplateArgumentListEN4llvm8ArrayRefINS_16TemplateArgumentEEENS_17LVComputationKindE'/>
<use f='llvm/clang/lib/AST/Decl.cpp' l='365' u='c' c='_ZN5clang15LinkageComputer28getLVForTemplateArgumentListERKNS_20TemplateArgumentListENS_17LVComputationKindE'/>
<doc f='llvm/clang/lib/AST/Decl.cpp' l='313'>/// Get the most restrictive linkage for the types and
/// declarations in the given template argument list.
///
/// Note that we don&apos;t take an LVComputationKind because we always
/// want to honor the visibility of template arguments in the same way.</doc>
