<dec f='llvm/lldb/include/lldb/Expression/UserExpression.h' l='58' type='void lldb_private::UserExpression::UserExpression(lldb_private::ExecutionContextScope &amp; exe_scope, llvm::StringRef expr, llvm::StringRef prefix, lldb::LanguageType language, lldb_private::Expression::ResultType desired_type, const lldb_private::EvaluateExpressionOptions &amp; options)'/>
<doc f='llvm/lldb/include/lldb/Expression/UserExpression.h' l='45'>/// Constructor
  ///
  /// \param[in] expr
  ///     The expression to parse.
  ///
  /// \param[in] language
  ///     If not eLanguageTypeUnknown, a language to use when parsing
  ///     the expression.  Currently restricted to those languages
  ///     supported by Clang.
  ///
  /// \param[in] desired_type
  ///     If not eResultTypeAny, the type to use for the expression
  ///     result.</doc>
<use f='llvm/lldb/source/Expression/LLVMUserExpression.cpp' l='46' u='c' c='_ZN12lldb_private18LLVMUserExpressionC1ERNS_21ExecutionContextScopeEN4llvm9StringRefES4_N4lldb12LanguageTypeENS_10Expression10ResultTypeERKNS_25EvaluateExpressionOptionsE'/>
<def f='llvm/lldb/source/Expression/UserExpression.cpp' l='51' ll='58' type='void lldb_private::UserExpression::UserExpression(lldb_private::ExecutionContextScope &amp; exe_scope, llvm::StringRef expr, llvm::StringRef prefix, lldb::LanguageType language, lldb_private::Expression::ResultType desired_type, const lldb_private::EvaluateExpressionOptions &amp; options)'/>
