<dec f='llvm/polly/lib/External/ppcg/gpu_group.h' l='32' type='isl_map *'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='790' u='r' c='group_tagged_access_relation'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='2649' u='r' c='group_tagged_writes'/>
<offset>192</offset>
<doc f='llvm/polly/lib/External/ppcg/gpu_group.h' l='22'>/* The following fields are use during the construction of the groups.
	 * access is the combined access relation relative to the private
	 * memory tiling.  In particular, the domain of the map corresponds
	 * to the first thread_depth dimensions of the kernel schedule.
	 * write is set if any access in the group is a write.
	 * exact_write is set if all writes are definite writes.
	 * slice is set if there is at least one access in the group
	 * that refers to more than one element
	 * &quot;min_depth&quot; is the minimum of the tile depths and thread_depth.
	 */</doc>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='55' u='r' c='gpu_array_ref_group_access_relation'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='850' u='w' c='populate_array_references'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='876' u='r' c='gpu_array_ref_group_free'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='891' u='r' c='accesses_overlap'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='891' u='r' c='accesses_overlap'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='912' u='r' c='join_groups'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='918' u='w' c='join_groups'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='918' u='r' c='join_groups'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='919' u='r' c='join_groups'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='1013' u='r' c='shared_access'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='1282' u='r' c='depth_accesses_overlap'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='1285' u='r' c='depth_accesses_overlap'/>
<use f='llvm/polly/lib/External/ppcg/gpu_group.c' l='1797' u='r' c='gpu_array_ref_group_compute_tiling'/>
