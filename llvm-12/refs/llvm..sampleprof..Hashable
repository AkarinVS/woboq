<def f='llvm/llvm/tools/llvm-profgen/PerfReader.h' l='90' ll='113'/>
<use f='llvm/llvm/tools/llvm-profgen/PerfReader.h' l='97' c='_ZNK4llvm10sampleprof8Hashable4HashclERKNS0_8HashableIT_EE'/>
<use f='llvm/llvm/tools/llvm-profgen/PerfReader.h' l='106' c='_ZNK4llvm10sampleprof8Hashable5EqualclERKNS0_8HashableIT_EES8_'/>
<use f='llvm/llvm/tools/llvm-profgen/PerfReader.h' l='106' c='_ZNK4llvm10sampleprof8Hashable5EqualclERKNS0_8HashableIT_EES8_'/>
<use f='llvm/llvm/tools/llvm-profgen/PerfReader.h' l='194'/>
<use f='llvm/llvm/tools/llvm-profgen/PerfReader.h' l='195'/>
<use f='llvm/llvm/tools/llvm-profgen/PerfReader.h' l='195'/>
<use f='llvm/llvm/tools/llvm-profgen/PerfReader.h' l='379'/>
<use f='llvm/llvm/tools/llvm-profgen/PerfReader.h' l='380'/>
<use f='llvm/llvm/tools/llvm-profgen/PerfReader.h' l='380'/>
<use f='llvm/llvm/tools/llvm-profgen/PerfReader.cpp' l='123' c='_ZN4llvm10sampleprof15VirtualUnwinder23collectSamplesFromFrameEPNS0_11UnwindState13ProfiledFrameERT_'/>
<use f='llvm/llvm/tools/llvm-profgen/PerfReader.cpp' l='564' c='_ZN4llvm10sampleprof10PerfReader17parseHybridSampleERNS0_11TraceStreamE'/>
<doc f='llvm/llvm/tools/llvm-profgen/PerfReader.h' l='80'>// Hash interface for generic data of type T
// Data should implement a \fn getHashCode and a \fn isEqual
// Currently getHashCode is non-virtual to avoid the overhead of calling vtable,
// i.e we explicitly calculate hash of derived class, assign to base class&apos;s
// HashCode. This also provides the flexibility for calculating the hash code
// incrementally(like rolling hash) during frame stack unwinding since unwinding
// only changes the leaf of frame stack. \fn isEqual is a virtual function,
// which will have perf overhead. In the future, if we redesign a better hash
// function, then we can just skip this or switch to non-virtual function(like
// just ignore comparision if hash conflicts probabilities is low)</doc>
<mbr r='llvm::sampleprof::Hashable::Data' t='std::shared_ptr&lt;T&gt;'/>
<fun r='_ZN4llvm10sampleprof8HashableC1ERKSt10shared_ptrIT_E'/>
<fun r='_ZNK4llvm10sampleprof8Hashable6getPtrEv'/>
