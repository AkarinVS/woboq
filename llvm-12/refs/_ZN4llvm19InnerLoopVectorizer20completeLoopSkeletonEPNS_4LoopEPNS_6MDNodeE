<dec f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='760' type='llvm::BasicBlock * llvm::InnerLoopVectorizer::completeLoopSkeleton(llvm::Loop * L, llvm::MDNode * OrigLoopID)'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='3452' ll='3509' type='llvm::BasicBlock * llvm::InnerLoopVectorizer::completeLoopSkeleton(llvm::Loop * L, llvm::MDNode * OrigLoopID)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='3593' u='c' c='_ZN4llvm19InnerLoopVectorizer28createVectorizedLoopSkeletonEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7918' u='c' c='_ZN4llvm26EpilogueVectorizerMainLoop36createEpilogueVectorizedLoopSkeletonEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8077' u='c' c='_ZN4llvm30EpilogueVectorizerEpilogueLoop36createEpilogueVectorizedLoopSkeletonEv'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='756'>/// Complete the loop skeleton by adding debug MDs, creating appropriate
  /// conditional branches in the middle block, preparing the builder and
  /// running the verifier. Take in the vector loop \p L as argument, and return
  /// the preheader of the completed vector loop.</doc>
