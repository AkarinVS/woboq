<dec f='llvm/polly/lib/External/isl/isl_bound.h' l='20' type='isl_pw_qpolynomial_fold * isl_qpolynomial_cst_bound(isl_basic_map * bset, isl_qpolynomial * poly, enum isl_fold type, isl_bool * tight)'/>
<use f='llvm/polly/lib/External/isl/isl_bernstein.c' l='383' u='c' c='bernstein_coefficients_base'/>
<use f='llvm/polly/lib/External/isl/isl_bernstein.c' l='389' u='c' c='bernstein_coefficients_base'/>
<def f='llvm/polly/lib/External/isl/isl_bound.c' l='24' ll='38' type='isl_pw_qpolynomial_fold * isl_qpolynomial_cst_bound(isl_basic_map * bset, isl_qpolynomial * poly, enum isl_fold type, isl_bool * tight)'/>
<use f='llvm/polly/lib/External/isl/isl_bound.c' l='70' u='c' c='add_constant_poly'/>
<doc f='llvm/polly/lib/External/isl/isl_bound.c' l='19'>/* Given a polynomial &quot;poly&quot; that is constant in terms
 * of the domain variables, construct a polynomial reduction
 * of type &quot;type&quot; that is equal to &quot;poly&quot; on &quot;bset&quot;,
 * with the domain projected onto the parameters.
 */</doc>
