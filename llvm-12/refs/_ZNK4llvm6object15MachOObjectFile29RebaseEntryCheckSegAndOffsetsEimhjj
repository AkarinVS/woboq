<def f='llvm/llvm/include/llvm/Object/MachO.h' l='433' ll='440' type='const char * llvm::object::MachOObjectFile::RebaseEntryCheckSegAndOffsets(int32_t SegIndex, uint64_t SegOffset, uint8_t PointerSize, uint32_t Count = 1, uint32_t Skip = 0) const'/>
<doc f='llvm/llvm/include/llvm/Object/MachO.h' l='427'>// Given a SegIndex, SegOffset, and PointerSize, verify a valid section exists
  // that fully contains a pointer at that location. Multiple fixups in a rebase
  // (such as with the REBASE_OPCODE_DO_*_TIMES* opcodes) can be tested via the
  // Count and Skip parameters.
  //
  // This is used by MachORebaseEntry::moveNext() to validate a MachORebaseEntry</doc>
<use f='llvm/llvm/lib/Object/MachOObjectFile.cpp' l='3208' u='c' c='_ZN4llvm6object16MachORebaseEntry8moveNextEv'/>
<use f='llvm/llvm/lib/Object/MachOObjectFile.cpp' l='3233' u='c' c='_ZN4llvm6object16MachORebaseEntry8moveNextEv'/>
<use f='llvm/llvm/lib/Object/MachOObjectFile.cpp' l='3249' u='c' c='_ZN4llvm6object16MachORebaseEntry8moveNextEv'/>
<use f='llvm/llvm/lib/Object/MachOObjectFile.cpp' l='3271' u='c' c='_ZN4llvm6object16MachORebaseEntry8moveNextEv'/>
<use f='llvm/llvm/lib/Object/MachOObjectFile.cpp' l='3303' u='c' c='_ZN4llvm6object16MachORebaseEntry8moveNextEv'/>
<use f='llvm/llvm/lib/Object/MachOObjectFile.cpp' l='3332' u='c' c='_ZN4llvm6object16MachORebaseEntry8moveNextEv'/>
<use f='llvm/llvm/lib/Object/MachOObjectFile.cpp' l='3374' u='c' c='_ZN4llvm6object16MachORebaseEntry8moveNextEv'/>
