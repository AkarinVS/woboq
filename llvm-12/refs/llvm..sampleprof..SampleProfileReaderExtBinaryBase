<inh f='llvm/llvm/include/llvm/ProfileData/SampleProfReader.h' l='516' c='llvm::sampleprof::SampleProfileReaderBinary'/>
<def f='llvm/llvm/include/llvm/ProfileData/SampleProfReader.h' l='623' ll='706'/>
<ovr f='llvm/llvm/include/llvm/ProfileData/SampleProfReader.h' l='708' c='llvm::sampleprof::SampleProfileReaderExtBinary'/>
<use f='llvm/llvm/include/llvm/ProfileData/SampleProfReader.h' l='708'/>
<use f='llvm/llvm/include/llvm/ProfileData/SampleProfReader.h' l='719' c='_ZN4llvm10sampleprof28SampleProfileReaderExtBinaryC1ESt10unique_ptrINS_12MemoryBufferESt14default_deleteIS3_EERNS_11LLVMContextENS0_19SampleProfileFormatE'/>
<size>336</size>
<doc f='llvm/llvm/include/llvm/ProfileData/SampleProfReader.h' l='604'>/// SampleProfileReaderExtBinaryBase/SampleProfileWriterExtBinaryBase defines
/// the basic structure of the extensible binary format.
/// The format is organized in sections except the magic and version number
/// at the beginning. There is a section table before all the sections, and
/// each entry in the table describes the entry type, start, size and
/// attributes. The format in each section is defined by the section itself.
///
/// It is easy to add a new section while maintaining the backward
/// compatibility of the profile. Nothing extra needs to be done. If we want
/// to extend an existing section, like add cache misses information in
/// addition to the sample count in the profile body, we can add a new section
/// with the extension and retire the existing section, and we could choose
/// to keep the parser of the old section if we want the reader to be able
/// to read both new and old format profile.
///
/// SampleProfileReaderExtBinary/SampleProfileWriterExtBinary define the
/// commonly used sections of a profile in extensible binary format. It is
/// possible to define other types of profile inherited from
/// SampleProfileReaderExtBinaryBase/SampleProfileWriterExtBinaryBase.</doc>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase17decompressSectionEPKhmRS3_Rm'/>
<mbr r='llvm::sampleprof::SampleProfileReaderExtBinaryBase::Allocator' o='1024' t='llvm::BumpPtrAllocator'/>
<mbr r='llvm::sampleprof::SampleProfileReaderExtBinaryBase::SecHdrTable' o='1792' t='std::vector&lt;SecHdrTableEntry&gt;'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase20readSecHdrTableEntryEj'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase15readSecHdrTableEv'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase16readFuncMetadataEv'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase19readFuncOffsetTableEv'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase16readFuncProfilesEv'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase16readMD5NameTableEv'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase16readNameTableSecEb'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase21readProfileSymbolListEv'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase10readHeaderEv'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase13verifySPMagicEm'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase14readOneSectionEPKhmRKNS0_16SecHdrTableEntryE'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase17readCustomSectionERKNS0_16SecHdrTableEntryE'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase19readStringFromTableEv'/>
<mbr r='llvm::sampleprof::SampleProfileReaderExtBinaryBase::ProfSymList' o='1984' t='std::unique_ptr&lt;ProfileSymbolList&gt;'/>
<mbr r='llvm::sampleprof::SampleProfileReaderExtBinaryBase::FuncOffsetTable' o='2048' t='DenseMap&lt;llvm::StringRef, uint64_t&gt;'/>
<mbr r='llvm::sampleprof::SampleProfileReaderExtBinaryBase::FuncsToUse' o='2240' t='DenseSet&lt;llvm::StringRef&gt;'/>
<mbr r='llvm::sampleprof::SampleProfileReaderExtBinaryBase::UseAllFuncs' o='2432' t='bool'/>
<mbr r='llvm::sampleprof::SampleProfileReaderExtBinaryBase::FixedLengthMD5' o='2440' t='bool'/>
<mbr r='llvm::sampleprof::SampleProfileReaderExtBinaryBase::MD5NameMemStart' o='2496' t='const uint8_t *'/>
<mbr r='llvm::sampleprof::SampleProfileReaderExtBinaryBase::MD5StringBuf' o='2560' t='std::unique_ptr&lt;std::vector&lt;std::string&gt; &gt;'/>
<mbr r='llvm::sampleprof::SampleProfileReaderExtBinaryBase::SkipFlatProf' o='2624' t='bool'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBaseC1ESt10unique_ptrINS_12MemoryBufferESt14default_deleteIS3_EERNS_11LLVMContextENS0_19SampleProfileFormatE'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase8readImplEv'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase14getSectionSizeENS0_7SecTypeE'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase11getFileSizeEv'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase15dumpSectionInfoERNS_11raw_ostreamE'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase16collectFuncsFromERKNS_6ModuleE'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase6useMD5Ev'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase20getProfileSymbolListEv'/>
<fun r='_ZN4llvm10sampleprof32SampleProfileReaderExtBinaryBase15setSkipFlatProfEb'/>
