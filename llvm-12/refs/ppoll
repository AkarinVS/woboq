<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='3964' macro='1' type='int ppoll(__sanitizer::__sanitizer_pollfd * fds, __sanitizer::__sanitizer_nfds_t nfds, void * timeout_ts, __sanitizer::__sanitizer_sigset_t * sigmask)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='3977' u='a' c='_ZL28InitializeCommonInterceptorsv'/>
<dec f='include/sys/poll.h' l='63' type='int ppoll(struct pollfd * __fds, nfds_t __nfds, const struct timespec * __timeout, const __sigset_t * __ss)'/>
<doc f='include/sys/poll.h' l='57'>/* Like poll, but before waiting the threads signal mask is replaced
   with that specified in the fourth parameter.  For better usability,
   the timeout value is specified using a TIMESPEC object.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<use f='llvm/lldb/source/Host/common/MainLoop.cpp' l='212' u='c' c='_ZN12lldb_private8MainLoop7RunImpl4PollEv'/>
