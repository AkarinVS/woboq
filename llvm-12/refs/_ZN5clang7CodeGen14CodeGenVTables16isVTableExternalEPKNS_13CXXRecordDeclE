<dec f='llvm/clang/lib/CodeGen/CGVTables.h' l='144' type='bool clang::CodeGen::CodeGenVTables::isVTableExternal(const clang::CXXRecordDecl * RD)'/>
<def f='llvm/clang/lib/CodeGen/CGVTables.cpp' l='1125' ll='1154' type='bool clang::CodeGen::CodeGenVTables::isVTableExternal(const clang::CXXRecordDecl * RD)'/>
<use f='llvm/clang/lib/CodeGen/CGVTables.cpp' l='1162' u='c' c='_ZL38shouldEmitVTableAtEndOfTranslationUnitRN5clang7CodeGen13CodeGenModuleEPKNS_13CXXRecordDeclE'/>
<doc f='llvm/clang/lib/CodeGen/CGVTables.cpp' l='1115'>/// At this point in the translation unit, does it appear that can we
/// rely on the vtable being defined elsewhere in the program?
///
/// The response is really only definitive when called at the end of
/// the translation unit.
///
/// The only semantic restriction here is that the object file should
/// not contain a vtable definition when that vtable is defined
/// strongly elsewhere.  Otherwise, we&apos;d just like to avoid emitting
/// vtables when unnecessary.</doc>
<use f='llvm/clang/lib/CodeGen/ItaniumCXXABI.cpp' l='3288' u='c' c='_ZL31ShouldUseExternalRTTIDescriptorRN5clang7CodeGen13CodeGenModuleENS_8QualTypeE'/>
