<dec f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='54' type='void llvm::DeleteDeadBlock(llvm::BasicBlock * BB, llvm::DomTreeUpdater * DTU = nullptr, bool KeepOneInputPHIs = false)'/>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='581' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare13runOnFunctionERN4llvm8FunctionE'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='53'>/// Delete the specified block, which must have no predecessors.</doc>
<use f='llvm/llvm/lib/CodeGen/WasmEHPrepare.cpp' l='174' u='c' c='_ZL23eraseDeadBBsAndChildrenRKT_PN4llvm14DomTreeUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='453' u='c' c='_ZN4llvm17JumpThreadingPass7runImplERNS_8FunctionEPNS_17TargetLibraryInfoEPNS_13LazyValueInfoEPNS_9AAResultsEPNS_14DomTreeUpdaterEbSt10unique_ptrINS_16218292'/>
<def f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='88' ll='91' type='void llvm::DeleteDeadBlock(llvm::BasicBlock * BB, llvm::DomTreeUpdater * DTU = nullptr, bool KeepOneInputPHIs = false)'/>
<use f='llvm/llvm/lib/Transforms/Utils/CloneFunction.cpp' l='681' u='c' c='_ZN4llvm25CloneAndPruneIntoFromInstEPNS_8FunctionEPKS0_PKNS_11InstructionERNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigISA_NS_3sys232165'/>
<use f='llvm/llvm/lib/Transforms/Utils/LowerSwitch.cpp' l='544' u='c' c='_ZN12_GLOBAL__N_111LowerSwitchERN4llvm8FunctionEPNS0_13LazyValueInfoEPNS0_15AssumptionCacheE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='6503' u='c' c='_ZN12_GLOBAL__N_114SimplifyCFGOpt16simplifyOnceImplEPN4llvm10BasicBlockE'/>
