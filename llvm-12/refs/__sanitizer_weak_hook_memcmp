<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='831' macro='1' type='void __sanitizer_weak_hook_memcmp(__sanitizer::uptr called_pc, const void * s1, const void * s2, __sanitizer::uptr n, int result)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='859' u='c' c='_Z23MemcmpInterceptorCommonPvPFiPKvS1_mES1_S1_m'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='865' u='c' c='_Z23MemcmpInterceptorCommonPvPFiPKvS1_mES1_S1_m'/>
<dec f='llvm/compiler-rt/lib/fuzzer/FuzzerInterceptors.cpp' l='123' type='void __sanitizer_weak_hook_memcmp(void * called_pc, const void * s1, const void * s2, size_t n, int result)'/>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerInterceptors.cpp' l='154' u='c' c='bcmp'/>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerInterceptors.cpp' l='162' u='c' c='memcmp'/>
<doc f='llvm/compiler-rt/lib/fuzzer/FuzzerInterceptors.cpp' l='121'>// Weak hooks forward-declared to avoid dependency on
// &lt;sanitizer/common_interface_defs.h&gt;.</doc>
<def f='llvm/compiler-rt/lib/fuzzer/FuzzerTracePC.cpp' l='607' ll='614' macro='1' type='void __sanitizer_weak_hook_memcmp(void * caller_pc, const void * s1, const void * s2, size_t n, int result)'/>
