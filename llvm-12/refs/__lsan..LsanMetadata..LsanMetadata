<dec f='llvm/compiler-rt/lib/lsan/lsan_common.h' l='261' type='void __lsan::LsanMetadata::LsanMetadata(__sanitizer::uptr chunk)'/>
<def f='llvm/compiler-rt/lib/asan/asan_allocator.cpp' l='1132' ll='1135' type='void __lsan::LsanMetadata::LsanMetadata(__sanitizer::uptr chunk)'/>
<doc f='llvm/compiler-rt/lib/lsan/lsan_common.h' l='260'>// Constructor accepts address of user-visible chunk.</doc>
<def f='llvm/compiler-rt/lib/lsan/lsan_allocator.cpp' l='269' ll='272' type='void __lsan::LsanMetadata::LsanMetadata(__sanitizer::uptr chunk)'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='201' u='c' c='__lsan::ScanRangeForPointers'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='266' u='c' c='__lsan::ProcessThreadRegistry'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='432' u='c' c='__lsan::FloodFillTag'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='442' u='c' c='__lsan::MarkIndirectlyLeakedCb'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='452' u='c' c='__lsan::IgnoredSuppressedCb'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='472' u='c' c='__lsan::CollectIgnoredCb'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='501' u='c' c='__lsan::MarkInvalidPCCb'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='582' u='c' c='__lsan::ResetTagsCb'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.cpp' l='598' u='c' c='__lsan::CollectLeaksCb'/>
