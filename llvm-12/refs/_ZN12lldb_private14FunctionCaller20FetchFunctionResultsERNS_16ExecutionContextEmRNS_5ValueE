<dec f='llvm/lldb/include/lldb/Expression/FunctionCaller.h' l='250' type='bool lldb_private::FunctionCaller::FetchFunctionResults(lldb_private::ExecutionContext &amp; exe_ctx, lldb::addr_t args_addr, lldb_private::Value &amp; ret_value)'/>
<def f='llvm/lldb/source/Expression/FunctionCaller.cpp' l='262' ll='300' type='bool lldb_private::FunctionCaller::FetchFunctionResults(lldb_private::ExecutionContext &amp; exe_ctx, lldb::addr_t args_addr, lldb_private::Value &amp; ret_value)'/>
<use f='llvm/lldb/source/Expression/FunctionCaller.cpp' l='387' u='c' c='_ZN12lldb_private14FunctionCaller15ExecuteFunctionERNS_16ExecutionContextEPmRKNS_25EvaluateExpressionOptionsERNS_17DiagnosticManagerERNS_5ValueE'/>
<doc f='llvm/lldb/include/lldb/Expression/FunctionCaller.h' l='237'>/// Get the result of the function from its struct
  ///
  /// \param[in] exe_ctx
  ///     The execution context to retrieve the result from.
  ///
  /// \param[in] args_addr
  ///     The address of the argument struct.
  ///
  /// \param[out] ret_value
  ///     The value returned by the function.
  ///
  /// \return
  ///     True on success; false otherwise.</doc>
<use f='llvm/lldb/source/Plugins/LanguageRuntime/ObjC/AppleObjCRuntime/AppleThreadPlanStepThroughObjCTrampoline.cpp' l='135' u='c' c='_ZN12lldb_private40AppleThreadPlanStepThroughObjCTrampoline10ShouldStopEPNS_5EventE'/>
