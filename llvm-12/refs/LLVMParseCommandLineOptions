<dec f='llvm/llvm/include/llvm-c/Support.h' l='39' type='void LLVMParseCommandLineOptions(int argc, const char *const * argv, const char * Overview)'/>
<use f='llvm/llvm/examples/OrcV2Examples/OrcV2CBindingsAddObjectFile/OrcV2CBindingsAddObjectFile.c' l='61' u='c' c='main'/>
<doc f='llvm/llvm/include/llvm-c/Support.h' l='31'>/**
 * This function parses the given arguments using the LLVM command line parser.
 * Note that the only stable thing about this function is its signature; you
 * cannot rely on any particular set of command line arguments being interpreted
 * the same way across LLVM versions.
 *
 * @see llvm::cl::ParseCommandLineOptions()
 */</doc>
<use f='llvm/llvm/examples/OrcV2Examples/OrcV2CBindingsBasicUsage/OrcV2CBindingsBasicUsage.c' l='75' u='c' c='main'/>
<use f='llvm/llvm/examples/OrcV2Examples/OrcV2CBindingsReflectProcessSymbols/OrcV2CBindingsReflectProcessSymbols.c' l='120' u='c' c='main'/>
<use f='llvm/llvm/examples/OrcV2Examples/OrcV2CBindingsRemovableCode/OrcV2CBindingsRemovableCode.c' l='75' u='c' c='main'/>
<def f='llvm/llvm/lib/Support/CommandLine.cpp' l='2613' ll='2617' type='void LLVMParseCommandLineOptions(int argc, const char *const * argv, const char * Overview)'/>
