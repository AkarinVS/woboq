<dec f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='93' type='static llvm::ConstantRange llvm::ConstantRange::fromKnownBits(const llvm::KnownBits &amp; Known, bool IsSigned)'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='90'>/// Initialize a range based on a known bits constraint. The IsSigned flag
  /// indicates whether the constant range should not wrap in the signed or
  /// unsigned domain.</doc>
<use f='llvm/llvm/lib/Analysis/LazyValueInfo.cpp' l='1161' u='c' c='_ZL25getValueFromICmpConditionPN4llvm5ValueEPNS_8ICmpInstEb'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4470' u='c' c='_ZL38computeConstantRangeIncludingKnownBitsPKN4llvm5ValueEbRKNS_10DataLayoutEjPNS_15AssumptionCacheEPKNS_11InstructionEPKNS_13DominatorTreeEPNS_25Opti10733203'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4485' u='c' c='_ZN4llvm29computeOverflowForUnsignedMulEPKNS_5ValueES2_RKNS_10DataLayoutEPNS_15AssumptionCacheEPKNS_11InstructionEPKNS_13DominatorTreeEb'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4486' u='c' c='_ZN4llvm29computeOverflowForUnsignedMulEPKNS_5ValueES2_RKNS_10DataLayoutEPNS_15AssumptionCacheEPKNS_11InstructionEPKNS_13DominatorTreeEb'/>
<def f='llvm/llvm/lib/IR/ConstantRange.cpp' l='58' ll='76' type='static llvm::ConstantRange llvm::ConstantRange::fromKnownBits(const llvm::KnownBits &amp; Known, bool IsSigned)'/>
<use f='llvm/llvm/lib/Transforms/Utils/LowerSwitch.cpp' l='402' u='c' c='_ZN12_GLOBAL__N_117ProcessSwitchInstEPN4llvm10SwitchInstERNS0_15SmallPtrSetImplIPNS0_10BasicBlockEEEPNS0_15AssumptionCacheEPNS0_13LazyValueInfoE'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='2195' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='2196' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='2205' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='2206' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='2212' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='2213' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='2219' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='2220' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='2247' u='c' c='_ZN12_GLOBAL__N_146ConstantRangeTest_FromKnownBitsExhaustive_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='2248' u='c' c='_ZN12_GLOBAL__N_146ConstantRangeTest_FromKnownBitsExhaustive_Test8TestBodyEv'/>
