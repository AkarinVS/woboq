<use f='llvm/compiler-rt/lib/asan/asan_thread.h' l='119' u='c' c='__asan::AsanThread::fake_stack'/>
<dec f='llvm/compiler-rt/lib/asan/asan_thread.h' l='143' type='__asan::FakeStack * __asan::AsanThread::AsyncSignalSafeLazyInitFakeStack()'/>
<def f='llvm/compiler-rt/lib/asan/asan_thread.cpp' l='193' ll='219' type='__asan::FakeStack * __asan::AsanThread::AsyncSignalSafeLazyInitFakeStack()'/>
<use f='llvm/compiler-rt/lib/asan/asan_thread.cpp' l='243' u='c' c='__asan::AsanThread::Init'/>
<doc f='llvm/compiler-rt/lib/asan/asan_thread.cpp' l='191'>// We want to create the FakeStack lazily on the first use, but not earlier
// than the stack size is known and the procedure has to be async-signal safe.</doc>
