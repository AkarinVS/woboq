<dec f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='1721' type='bool llvm::AbstractState::isAtFixpoint() const'/>
<ovr f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='1774' c='_ZNK4llvm16IntegerStateBase12isAtFixpointEv'/>
<ovr f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2076' c='_ZNK4llvm17IntegerRangeState12isAtFixpointEv'/>
<ovr f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2891' c='_ZNK4llvm10DerefState12isAtFixpointEv'/>
<ovr f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3535' c='_ZNK4llvm20PotentialValuesState12isAtFixpointEv'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='1719'>/// Return if this abstract state is fixed, thus does not need to be updated
  /// if information changes as it cannot change itself.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='254' u='c' c='_ZN4llvm17AbstractAttribute6updateERNS_10AttributorE'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='1041' u='c' c='_ZN4llvm10Attributor15runTillFixpointEv'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='1080' u='c' c='_ZN4llvm10Attributor15runTillFixpointEv'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='1124' u='c' c='_ZN4llvm10Attributor18manifestAttributesEv'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='1429' u='c' c='_ZN4llvm10Attributor8updateAAERNS_17AbstractAttributeE'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='1931' u='c' c='_ZN4llvm10Attributor16recordDependenceERKNS_17AbstractAttributeES3_NS_10DepClassTyE'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='2218' u='c' c='_ZN4llvmlsERNS_11raw_ostreamERKNS_13AbstractStateE'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='870' c='_ZNK12_GLOBAL__N_120AAReturnedValuesImpl12isAtFixpointEv'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='4371' u='c' c='_ZN12_GLOBAL__N_115AANoCaptureImpl10updateImplERN4llvm10AttributorE'/>
