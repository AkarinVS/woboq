<def f='llvm/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp' l='279' ll='288'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp' l='292' c='_ZL9handleUseRKN4llvm12MachineInstrERKNS_14MachineOperandER7LOHInfo'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp' l='327' c='_ZL13handleClobberR7LOHInfo'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp' l='336' c='_ZL16handleMiddleInstRKN4llvm12MachineInstrER7LOHInfoS4_'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp' l='337' c='_ZL16handleMiddleInstRKN4llvm12MachineInstrER7LOHInfoS4_'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp' l='385' c='_ZL10handleADRPRKN4llvm12MachineInstrERNS_19AArch64FunctionInfoER7LOHInfoPS5_'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp' l='385' c='_ZL10handleADRPRKN4llvm12MachineInstrERNS_19AArch64FunctionInfoER7LOHInfoPS5_'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp' l='405' c='_ZL10handleADRPRKN4llvm12MachineInstrERNS_19AArch64FunctionInfoER7LOHInfoPS5_'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp' l='467' c='_ZL20handleRegMaskClobberPKjtP7LOHInfo'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp' l='475' c='_ZL16handleNormalInstRKN4llvm12MachineInstrEP7LOHInfo'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp' l='521' c='_ZN12_GLOBAL__N_117AArch64CollectLOH20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<size>32</size>
<doc f='llvm/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp' l='276'>/// State tracked per register.
/// The main algorithm walks backwards over a basic block maintaining this
/// datastructure for each tracked general purpose register.</doc>
