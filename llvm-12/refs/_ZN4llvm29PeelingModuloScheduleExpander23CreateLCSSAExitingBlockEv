<dec f='llvm/llvm/include/llvm/CodeGen/ModuloSchedule.h' l='355' type='llvm::MachineBasicBlock * llvm::PeelingModuloScheduleExpander::CreateLCSSAExitingBlock()'/>
<doc f='llvm/llvm/include/llvm/CodeGen/ModuloSchedule.h' l='352'>/// Create a poor-man&apos;s LCSSA by cloning only the PHIs from the kernel block
  /// to a block dominated by all prologs and epilogs. This allows us to treat
  /// the loop exiting block as any other kernel clone.</doc>
<use f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='1746' u='c' c='_ZN4llvm29PeelingModuloScheduleExpander20peelPrologAndEpilogsEv'/>
<def f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='1842' ll='1883' type='llvm::MachineBasicBlock * llvm::PeelingModuloScheduleExpander::CreateLCSSAExitingBlock()'/>
