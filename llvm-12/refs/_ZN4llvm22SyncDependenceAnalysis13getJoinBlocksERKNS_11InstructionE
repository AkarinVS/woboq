<dec f='llvm/llvm/include/llvm/Analysis/SyncDependenceAnalysis.h' l='75' type='const llvm::ControlDivergenceDesc &amp; llvm::SyncDependenceAnalysis::getJoinBlocks(const llvm::Instruction &amp; Term)'/>
<use f='llvm/llvm/lib/Analysis/DivergenceAnalysis.cpp' l='300' u='c' c='_ZN4llvm18DivergenceAnalysis24analyzeControlDivergenceERKNS_11InstructionE'/>
<doc f='llvm/llvm/include/llvm/Analysis/SyncDependenceAnalysis.h' l='66'>/// \brief Computes divergent join points and loop exits caused by branch
  /// divergence in \p Term.
  ///
  /// The set of blocks which are reachable by disjoint paths from \p Term.
  /// The set also contains loop exits if there two disjoint paths:
  /// one from \p Term to the loop exit and another from \p Term to the loop
  /// header. Those exit blocks are added to the returned set.
  /// If L is the parent loop of \p Term and an exit of L is in the returned
  /// set then L is a divergent loop.</doc>
<def f='llvm/llvm/lib/Analysis/SyncDependenceAnalysis.cpp' l='434' ll='461' type='const llvm::ControlDivergenceDesc &amp; llvm::SyncDependenceAnalysis::getJoinBlocks(const llvm::Instruction &amp; Term)'/>
