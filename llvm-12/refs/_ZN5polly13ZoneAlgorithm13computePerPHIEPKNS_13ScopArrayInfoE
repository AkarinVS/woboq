<dec f='llvm/polly/include/polly/ZoneAlgo.h' l='220' type='isl::union_map polly::ZoneAlgorithm::computePerPHI(const polly::ScopArrayInfo * SAI)'/>
<use f='llvm/polly/lib/Transform/DeLICM.cpp' l='870' u='c' c='_ZN12_GLOBAL__N_110DeLICMImpl9tryMapPHIEPKN5polly13ScopArrayInfoEN3isl12noexceptions3mapE'/>
<doc f='llvm/polly/include/polly/ZoneAlgo.h' l='211'>/// For each &apos;execution&apos; of a PHINode, get the incoming block that was
  /// executed before.
  ///
  /// For each PHI instance we can directly determine which was the incoming
  /// block, and hence derive which value the PHI has.
  ///
  /// @param SAI The ScopArrayInfo representing the PHI&apos;s storage.
  ///
  /// @return { DomainPHIRead[] -&gt; DomainPHIWrite[] }</doc>
<def f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='535' ll='587' type='isl::union_map polly::ZoneAlgorithm::computePerPHI(const polly::ScopArrayInfo * SAI)'/>
<use f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='1037' u='c' c='_ZN5polly13ZoneAlgorithm21computeNormalizedPHIsEv'/>
