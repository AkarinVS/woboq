<dec f='llvm/llvm/tools/llvm-dwarfdump/llvm-dwarfdump.h' l='35' type='bool llvm::dwarfdump::collectStatsForObjectFile(object::ObjectFile &amp; Obj, llvm::DWARFContext &amp; DICtx, const llvm::Twine &amp; Filename, llvm::raw_ostream &amp; OS)'/>
<def f='llvm/llvm/tools/llvm-dwarfdump/Statistics.cpp' l='554' ll='728' type='bool llvm::dwarfdump::collectStatsForObjectFile(llvm::object::ObjectFile &amp; Obj, llvm::DWARFContext &amp; DICtx, const llvm::Twine &amp; Filename, llvm::raw_ostream &amp; OS)'/>
<doc f='llvm/llvm/tools/llvm-dwarfdump/Statistics.cpp' l='544'>/// \}

/// Collect debug info quality metrics for an entire DIContext.
///
/// Do the impossible and reduce the quality of the debug info down to a few
/// numbers. The idea is to condense the data into numbers that can be tracked
/// over time to identify trends in newer compiler versions and gauge the effect
/// of particular optimizations. The raw numbers themselves are not particularly
/// useful, only the delta between compiling the same program with different
/// compilers is.</doc>
<use f='llvm/llvm/tools/llvm-dwarfdump/llvm-dwarfdump.cpp' l='682' u='r' c='main'/>
