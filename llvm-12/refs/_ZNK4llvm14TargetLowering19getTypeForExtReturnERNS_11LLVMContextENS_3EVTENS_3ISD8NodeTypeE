<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3967' ll='3971' type='llvm::EVT llvm::TargetLowering::getTypeForExtReturn(llvm::LLVMContext &amp; Context, llvm::EVT VT, ISD::NodeType ) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3961'>/// Return the type that should be used to zero or sign extend a
  /// zeroext/signext integer return value.  FIXME: Some C calling conventions
  /// require the return type to be promoted, but this is not true all the time,
  /// e.g. i1/i8/i16 on x86/x86_64. It is also not necessary for non-C calling
  /// conventions. The frontend should handle this and include all of the
  /// necessary information.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='1872' u='c' c='_ZN4llvm19SelectionDAGBuilder8visitRetERKNS_10ReturnInstE'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp' l='686' c='_ZNK4llvm20AMDGPUTargetLowering19getTypeForExtReturnERNS_11LLVMContextENS_3EVTENS_3ISD8NodeTypeE'/>
<ovr f='llvm/llvm/lib/Target/Mips/MipsISelLowering.cpp' l='4011' c='_ZNK4llvm18MipsTargetLowering19getTypeForExtReturnERNS_11LLVMContextENS_3EVTENS_3ISD8NodeTypeE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='2916' c='_ZNK4llvm17X86TargetLowering19getTypeForExtReturnERNS_11LLVMContextENS_3EVTENS_3ISD8NodeTypeE'/>
