<dec f='llvm/llvm/include/llvm/Analysis/TargetTransformInfo.h' l='400' type='llvm::Value * llvm::TargetTransformInfo::rewriteIntrinsicWithAddressSpace(llvm::IntrinsicInst * II, llvm::Value * OldV, llvm::Value * NewV) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/TargetTransformInfo.h' l='395'>/// Rewrite intrinsic call \p II such that \p OldV will be replaced with \p
  /// NewV, which has a different address space. This should happen for every
  /// operand index that collectFlatAddressOperands returned for the intrinsic.
  /// \returns nullptr if the intrinsic was not handled. Otherwise, returns the
  /// new value (which may be the original \p II with modified operands).</doc>
<def f='llvm/llvm/lib/Analysis/TargetTransformInfo.cpp' l='314' ll='317' type='llvm::Value * llvm::TargetTransformInfo::rewriteIntrinsicWithAddressSpace(llvm::IntrinsicInst * II, llvm::Value * OldV, llvm::Value * NewV) const'/>
<use f='llvm/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp' l='357' u='c' c='_ZNK12_GLOBAL__N_122InferAddressSpacesImpl24rewriteIntrinsicOperandsEPN4llvm13IntrinsicInstEPNS1_5ValueES5_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp' l='562' u='c' c='_ZNK12_GLOBAL__N_122InferAddressSpacesImpl35cloneInstructionWithNewAddressSpaceEPN4llvm11InstructionEjRKNS1_8ValueMapIPKNS1_5ValueENS1_14WeakTrackingV15312398'/>
