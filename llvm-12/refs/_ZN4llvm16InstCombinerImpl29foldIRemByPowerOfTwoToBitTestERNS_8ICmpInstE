<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='654' type='llvm::Instruction * llvm::InstCombinerImpl::foldIRemByPowerOfTwoToBitTest(llvm::ICmpInst &amp; I)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='1306' ll='1321' type='llvm::Instruction * llvm::InstCombinerImpl::foldIRemByPowerOfTwoToBitTest(llvm::ICmpInst &amp; I)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='1373' u='c' c='_ZN4llvm16InstCombinerImpl16foldICmpWithZeroERNS_8ICmpInstE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='1302'>/// If we have:
///   icmp eq/ne (urem/srem %x, %y), 0
/// iff %y is a power-of-two, we can replace this with a bit test:
///   icmp eq/ne (and %x, (add %y, -1)), 0</doc>
