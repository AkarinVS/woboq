<def f='llvm/clang/include/clang/AST/CommentBriefParser.h' l='29' ll='48'/>
<size>40</size>
<doc f='llvm/clang/include/clang/AST/CommentBriefParser.h' l='22'>/// A very simple comment parser that extracts &quot;a brief description&quot;.
///
/// Due to a variety of comment styles, it considers the following as &quot;a brief
/// description&quot;, in order of priority:
/// \li a \or \\short command,
/// \li the first paragraph,
/// \li a \\result or \\return or \\returns paragraph.</doc>
<mbr r='clang::comments::BriefParser::L' o='0' t='clang::comments::Lexer &amp;'/>
<mbr r='clang::comments::BriefParser::Traits' o='64' t='const clang::comments::CommandTraits &amp;'/>
<mbr r='clang::comments::BriefParser::Tok' o='128' t='clang::comments::Token'/>
<fun r='_ZN5clang8comments11BriefParser12ConsumeTokenEv'/>
<fun r='_ZN5clang8comments11BriefParserC1ERNS0_5LexerERKNS0_13CommandTraitsE'/>
<fun r='_ZN5clang8comments11BriefParser5ParseB5cxx11Ev'/>
<fun r='_ZN5clang8comments11BriefParserC1ERNS0_5LexerERKNS0_13CommandTraitsE'/>
<fun r='_ZN5clang8comments11BriefParser5ParseB5cxx11Ev'/>
<use f='llvm/clang/lib/AST/RawCommentList.cpp' l='191' c='_ZNK5clang10RawComment16extractBriefTextERKNS_10ASTContextE'/>
<size>40</size>
