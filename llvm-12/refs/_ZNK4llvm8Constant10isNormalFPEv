<dec f='llvm/llvm/include/llvm/IR/Constant.h' l='88' type='bool llvm::Constant::isNormalFP() const'/>
<doc f='llvm/llvm/include/llvm/IR/Constant.h' l='85'>/// Return true if this is a normal (as opposed to denormal, infinity, nan,
  /// or zero) floating-point scalar constant or a vector constant with all
  /// normal elements. See APFloat::isNormal.</doc>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='241' ll='253' type='bool llvm::Constant::isNormalFP() const'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='472' u='c' c='_ZN4llvm16InstCombinerImpl9visitFMulERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='478' u='c' c='_ZN4llvm16InstCombinerImpl9visitFMulERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='484' u='c' c='_ZN4llvm16InstCombinerImpl9visitFMulERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='1230' u='c' c='_ZL23foldFDivConstantDivisorRN4llvm14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='1238' u='c' c='_ZL23foldFDivConstantDivisorRN4llvm14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='1272' u='c' c='_ZL24foldFDivConstantDividendRN4llvm14BinaryOperatorE'/>
