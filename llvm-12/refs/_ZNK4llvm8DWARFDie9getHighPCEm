<dec f='llvm/llvm/include/llvm/DebugInfo/DWARF/DWARFDie.h' l='204' type='Optional&lt;uint64_t&gt; llvm::DWARFDie::getHighPC(uint64_t LowPC) const'/>
<doc f='llvm/llvm/include/llvm/DebugInfo/DWARF/DWARFDie.h' l='194'>/// Get the DW_AT_high_pc attribute value as an address.
  ///
  /// In DWARF version 4 and later the high PC can be encoded as an offset from
  /// the DW_AT_low_pc. This function takes care of extracting the value as an
  /// address or offset and adds it to the low PC if needed and returns the
  /// value as an optional in case the DIE doesn&apos;t have a DW_AT_high_pc
  /// attribute.
  ///
  /// \param LowPC the low PC that might be needed to calculate the high PC.
  /// \returns an optional address value for the attribute.</doc>
<use f='llvm/llvm/lib/DWARFLinker/DWARFLinker.cpp' l='499' u='c' c='_ZN4llvm11DWARFLinker23shouldKeepSubprogramDIEERNS_12AddressesMapERSt3mapImNS_19ObjFileAddressRangeESt4lessImESaISt4pairIKmS4_EEERKNS_8DWARFDieERKNS_912791029'/>
<def f='llvm/llvm/lib/DebugInfo/DWARF/DWARFDie.cpp' l='426' ll='441' type='Optional&lt;uint64_t&gt; llvm::DWARFDie::getHighPC(uint64_t LowPC) const'/>
<use f='llvm/llvm/lib/DebugInfo/DWARF/DWARFDie.cpp' l='449' u='c' c='_ZNK4llvm8DWARFDie15getLowAndHighPCERmS1_S1_'/>
<use f='llvm/llvm/unittests/DebugInfo/DWARF/DWARFDebugInfoTest.cpp' l='909' u='c' c='_ZN12_GLOBAL__N_113TestAddressesEv'/>
<use f='llvm/llvm/unittests/DebugInfo/DWARF/DWARFDebugInfoTest.cpp' l='926' u='c' c='_ZN12_GLOBAL__N_113TestAddressesEv'/>
<use f='llvm/llvm/unittests/DebugInfo/DWARF/DWARFDebugInfoTest.cpp' l='958' u='c' c='_ZN12_GLOBAL__N_113TestAddressesEv'/>
