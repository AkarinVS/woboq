<dec f='llvm/compiler-rt/lib/asan/asan_internal.h' l='94' type='void __asan::UnpoisonStack(__sanitizer::uptr bottom, __sanitizer::uptr top, const char * type)'/>
<doc f='llvm/compiler-rt/lib/asan/asan_internal.h' l='90'>// asan_rtl.cpp
// Unpoison a region containing a stack.
// Performs a sanity check and warns if the bounds don&apos;t look right.
// The warning contains the type string to identify the stack type.</doc>
<use f='llvm/compiler-rt/lib/asan/asan_posix.cpp' l='54' u='c' c='__asan::PlatformUnpoisonStacks'/>
<use f='llvm/compiler-rt/lib/asan/asan_posix.cpp' l='64' u='c' c='__asan::PlatformUnpoisonStacks'/>
<def f='llvm/compiler-rt/lib/asan/asan_rtl.cpp' l='555' ll='572' type='void __asan::UnpoisonStack(__sanitizer::uptr bottom, __sanitizer::uptr top, const char * type)'/>
<use f='llvm/compiler-rt/lib/asan/asan_rtl.cpp' l='594' u='c' c='__asan::UnpoisonDefaultStack'/>
