<def f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='810' ll='812' type='bool llvm::IntervalMapImpl::Path::valid() const'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='917' u='c' c='_ZN4llvm15IntervalMapImpl4Path17legalizeForInsertEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1354' u='c' c='_ZNK4llvm11IntervalMap14const_iterator5validEv'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1806' u='c' c='_ZN4llvm11IntervalMap8iterator10treeInsertET_S2_T0_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1889' u='c' c='_ZN4llvm11IntervalMap8iterator9treeEraseEb'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1946' u='c' c='_ZN4llvm11IntervalMap8iterator9eraseNodeEj'/>
<doc f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='809'>/// valid - Return true if path is at a valid node, not at end().</doc>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='53' u='c' c='_ZN4llvm15IntervalMapImpl4Path8moveLeftEj'/>
