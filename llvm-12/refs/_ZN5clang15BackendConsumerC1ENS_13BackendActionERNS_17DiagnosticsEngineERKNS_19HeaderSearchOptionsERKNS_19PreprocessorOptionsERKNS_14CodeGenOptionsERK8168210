<def f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='161' ll='180' type='void clang::BackendConsumer::BackendConsumer(clang::BackendAction Action, clang::DiagnosticsEngine &amp; Diags, const clang::HeaderSearchOptions &amp; HeaderSearchOpts, const clang::PreprocessorOptions &amp; PPOpts, const clang::CodeGenOptions &amp; CodeGenOpts, const clang::TargetOptions &amp; TargetOpts, const clang::LangOptions &amp; LangOpts, SmallVector&lt;clang::BackendConsumer::LinkModule, 4&gt; LinkModules, llvm::LLVMContext &amp; C, clang::CoverageSourceInfo * CoverageInfo = nullptr)'/>
<use f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='1120' u='c' c='_ZN5clang13CodeGenAction13ExecuteActionEv'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='158'>// This constructor is used in installing an empty BackendConsumer
    // to use the clang diagnostic handler for IR input files. It avoids
    // initializing the OS field.</doc>
