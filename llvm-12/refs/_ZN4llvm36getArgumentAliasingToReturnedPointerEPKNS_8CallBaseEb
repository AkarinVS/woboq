<dec f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='350' type='const llvm::Value * llvm::getArgumentAliasingToReturnedPointer(const llvm::CallBase * Call, bool MustPreserveNullness)'/>
<use f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='355' u='c' c='_ZN4llvm36getArgumentAliasingToReturnedPointerEPNS_8CallBaseEb'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='346'>/// This function returns call pointer argument that is considered the same by
  /// aliasing rules. You CAN&apos;T use it to replace one value with another. If
  /// \p MustPreserveNullness is true, the call must preserve the nullness of
  /// the pointer.</doc>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='470' u='c' c='_ZN4llvm13BasicAAResult22DecomposeGEPExpressionEPKNS_5ValueERKNS_10DataLayoutEPNS_15AssumptionCacheEPNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Analysis/Loads.cpp' l='113' u='c' c='_ZL34isDereferenceableAndAlignedPointerPKN4llvm5ValueENS_5AlignERKNS_5APIntERKNS_10DataLayoutEPKNS_11InstructionEPKNS_13DominatorTreeERNS_15SmallPtrSetImplIS2_EEj'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='2274' u='c' c='_ZL14isKnownNonZeroPKN4llvm5ValueERKNS_5APIntEjRKN12_GLOBAL__N_15QueryE'/>
<def f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4077' ll='4089' type='const llvm::Value * llvm::getArgumentAliasingToReturnedPointer(const llvm::CallBase * Call, bool MustPreserveNullness)'/>
