<def f='llvm/clang/include/clang/AST/OpenMPClause.h' l='6570' ll='6587' type='void clang::OMPFromClause::OMPFromClause(ArrayRef&lt;clang::OpenMPMotionModifierKind&gt; TheMotionModifiers, ArrayRef&lt;clang::SourceLocation&gt; TheMotionModifiersLoc, clang::NestedNameSpecifierLoc MapperQualifierLoc, clang::DeclarationNameInfo MapperIdInfo, const clang::OMPVarListLocTy &amp; Locs, const clang::OMPMappableExprListSizeTy &amp; Sizes)'/>
<doc f='llvm/clang/include/clang/AST/OpenMPClause.h' l='6555'>/// Build clause with number of variables \a NumVars.
  ///
  /// \param TheMotionModifiers Motion-modifiers.
  /// \param TheMotionModifiersLoc Locations of motion-modifiers.
  /// \param MapperQualifierLoc C++ nested name specifier for the associated
  /// user-defined mapper.
  /// \param MapperIdInfo The identifier of associated user-defined mapper.
  /// \param Locs Locations needed to build a mappable clause. It includes 1)
  /// StartLoc: starting location of the clause (the clause keyword); 2)
  /// LParenLoc: location of &apos;(&apos;; 3) EndLoc: ending location of the clause.
  /// \param Sizes All required sizes to build a mappable clause. It includes 1)
  /// NumVars: number of expressions listed in this clause; 2)
  /// NumUniqueDeclarations: number of unique base declarations in this clause;
  /// 3) NumComponentLists: number of component lists in this clause; and 4)
  /// NumComponents: total number of expression components in the clause.</doc>
<use f='llvm/clang/lib/AST/OpenMPClause.cpp' l='1175' u='c' c='_ZN5clang13OMPFromClause6CreateERKNS_10ASTContextERKNS_15OMPVarListLocTyEN4llvm8ArrayRefIPNS_4ExprEEENS8_IPNS_9ValueDeclEEENS8_INS7_11SmallVectorINS_28357283'/>
