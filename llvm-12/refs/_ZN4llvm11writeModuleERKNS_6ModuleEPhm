<dec f='llvm/llvm/include/llvm/FuzzMutate/FuzzerCLI.h' l='69' type='size_t llvm::writeModule(const llvm::Module &amp; M, uint8_t * Dest, size_t MaxSize)'/>
<doc f='llvm/llvm/include/llvm/FuzzMutate/FuzzerCLI.h' l='62'>/// Fuzzer friendly interface for the llvm bitcode printer.
///
/// \param M Module to print
/// \param Dest Location to store serialized module
/// \param MaxSize Size of the destination buffer
/// \return Number of bytes that were written. When module size exceeds MaxSize
///         returns 0 and leaves Dest unchanged.</doc>
<def f='llvm/llvm/lib/FuzzMutate/FuzzerCLI.cpp' l='190' ll='200' type='size_t llvm::writeModule(const llvm::Module &amp; M, uint8_t * Dest, size_t MaxSize)'/>
<use f='llvm/llvm/tools/llvm-isel-fuzzer/llvm-isel-fuzzer.cpp' l='80' u='c' c='LLVMFuzzerCustomMutator'/>
