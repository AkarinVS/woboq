<dec f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetThreadItemInfoHandler.h' l='95' type='lldb::addr_t lldb_private::AppleGetThreadItemInfoHandler::SetupGetThreadItemInfoFunction(lldb_private::Thread &amp; thread, lldb_private::ValueList &amp; get_thread_item_info_arglist)'/>
<def f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetThreadItemInfoHandler.cpp' l='137' ll='214' type='lldb::addr_t lldb_private::AppleGetThreadItemInfoHandler::SetupGetThreadItemInfoFunction(lldb_private::Thread &amp; thread, lldb_private::ValueList &amp; get_thread_item_info_arglist)'/>
<use f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetThreadItemInfoHandler.cpp' l='320' u='c' c='_ZN12lldb_private29AppleGetThreadItemInfoHandler17GetThreadItemInfoERNS_6ThreadEmmmRNS_6StatusE'/>
<doc f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetThreadItemInfoHandler.cpp' l='123'>// Compile our __lldb_backtrace_recording_get_thread_item_info() function (from
// the source above in g_get_thread_item_info_function_code) if we don&apos;t find
// that function in the inferior already with USE_BUILTIN_FUNCTION defined.
// (e.g. this would be the case for testing.)
//
// Insert the __lldb_backtrace_recording_get_thread_item_info into the inferior
// process if needed.
//
// Write the get_thread_item_info_arglist into the inferior&apos;s memory space to
// prepare for the call.
//
// Returns the address of the arguments written down in the inferior process,
// which can be used to make the function call.</doc>
