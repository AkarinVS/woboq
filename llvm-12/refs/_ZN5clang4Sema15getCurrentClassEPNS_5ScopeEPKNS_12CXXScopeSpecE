<dec f='llvm/clang/include/clang/Sema/Sema.h' l='6882' type='clang::CXXRecordDecl * clang::Sema::getCurrentClass(clang::Scope * S, const clang::CXXScopeSpec * SS)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='6879'>//===--------------------------------------------------------------------===//
  // C++ Classes
  //</doc>
<def f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='2363' ll='2375' type='clang::CXXRecordDecl * clang::Sema::getCurrentClass(clang::Scope * , const clang::CXXScopeSpec * SS)'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='2383' u='c' c='_ZN5clang4Sema18isCurrentClassNameERKNS_14IdentifierInfoEPNS_5ScopeEPKNS_12CXXScopeSpecE'/>
<doc f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='2355'>/// Get the class that is directly named by the current context. This is the
/// class for which an unqualified-id in this scope could name a constructor
/// or destructor.
///
/// If the scope specifier denotes a class, this will be that class.
/// If the scope specifier is empty, this will be the class whose
/// member-specification we are currently within. Otherwise, there
/// is no such class.</doc>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='87' u='c' c='_ZN5clang4Sema18getConstructorNameERNS_14IdentifierInfoENS_14SourceLocationEPNS_5ScopeERNS_12CXXScopeSpecEb'/>
