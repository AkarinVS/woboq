<dec f='llvm/llvm/include/llvm/IR/Value.h' l='482' type='void llvm::Value::dropDroppableUses(llvm::function_ref&lt;bool (const Use *)&gt; ShouldDrop = [](const llvm::Use *) {
    return true;
})'/>
<doc f='llvm/llvm/include/llvm/IR/Value.h' l='475'>/// Remove every uses that can safely be removed.
  ///
  /// This will remove for example uses in llvm.assume.
  /// This should be used when performing want to perform a tranformation but
  /// some Droppable uses pervent it.
  /// This function optionally takes a filter to only remove some droppable
  /// uses.</doc>
<def f='llvm/llvm/lib/IR/Value.cpp' l='184' ll='192' type='void llvm::Value::dropDroppableUses(llvm::function_ref&lt;bool (const Use *)&gt; ShouldDrop = [](const llvm::Use *) {
    return true;
})'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='1301' u='c' c='_ZN4llvm10Attributor9cleanupIREv'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='2908' u='c' c='_ZN12_GLOBAL__N_116AAIsDeadArgument8manifestERN4llvm10AttributorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='3548' u='c' c='_ZL20TryToSinkInstructionPN4llvm11InstructionEPNS_10BasicBlockE'/>
<use f='llvm/llvm/unittests/Analysis/AssumeBundleQueriesTest.cpp' l='183' u='c' c='_ZN40AssumeQueryAPI_hasAttributeInAssume_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/AssumeBundleQueriesTest.cpp' l='184' u='c' c='_ZN40AssumeQueryAPI_hasAttributeInAssume_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/AssumeBundleQueriesTest.cpp' l='185' u='c' c='_ZN40AssumeQueryAPI_hasAttributeInAssume_Test8TestBodyEv'/>
