<def f='llvm/lldb/include/lldb/Host/ProcessRunLock.h' l='25' ll='81'/>
<use f='llvm/lldb/include/lldb/Host/ProcessRunLock.h' l='43' c='_ZN12lldb_private14ProcessRunLock16ProcessRunLocker7TryLockEPS0_'/>
<use f='llvm/lldb/include/lldb/Host/ProcessRunLock.h' l='67'/>
<use f='llvm/lldb/include/lldb/Host/ProcessRunLock.h' l='79' c='_ZN12lldb_private14ProcessRunLockC1ERKS0_'/>
<use f='llvm/lldb/include/lldb/Host/ProcessRunLock.h' l='80' c='_ZN12lldb_private14ProcessRunLockaSERKS0_'/>
<use f='llvm/lldb/include/lldb/Host/ProcessRunLock.h' l='80' c='_ZN12lldb_private14ProcessRunLockaSERKS0_'/>
<use f='llvm/lldb/include/lldb/Target/Process.h' l='2314' c='_ZN12lldb_private7Process10GetRunLockEv'/>
<use f='llvm/lldb/include/lldb/Target/Process.h' l='2818'/>
<use f='llvm/lldb/include/lldb/Target/Process.h' l='2819'/>
<size>64</size>
<doc f='llvm/lldb/include/lldb/Host/ProcessRunLock.h' l='20'>/// \class ProcessRunLock ProcessRunLock.h &quot;lldb/Host/ProcessRunLock.h&quot;
/// A class used to prevent the process from starting while other
/// threads are accessing its data, and prevent access to its data while it is
/// running.</doc>
<fun r='_ZN12lldb_private14ProcessRunLockC1Ev'/>
<fun r='_ZN12lldb_private14ProcessRunLockD1Ev'/>
<fun r='_ZN12lldb_private14ProcessRunLock11ReadTryLockEv'/>
<fun r='_ZN12lldb_private14ProcessRunLock10ReadUnlockEv'/>
<fun r='_ZN12lldb_private14ProcessRunLock10SetRunningEv'/>
<fun r='_ZN12lldb_private14ProcessRunLock13TrySetRunningEv'/>
<fun r='_ZN12lldb_private14ProcessRunLock10SetStoppedEv'/>
<mbr r='lldb_private::ProcessRunLock::m_rwlock' o='0' t='lldb::rwlock_t'/>
<mbr r='lldb_private::ProcessRunLock::m_running' o='448' t='bool'/>
<fun r='_ZN12lldb_private14ProcessRunLockC1ERKS0_'/>
<fun r='_ZN12lldb_private14ProcessRunLockaSERKS0_'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='5518' c='_ZN12lldb_private7Process10GetRunLockEv'/>
<size>64</size>
