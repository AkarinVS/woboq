<dec f='llvm/lldb/include/lldb/Core/ModuleList.h' l='183' type='void lldb_private::ModuleList::Destroy()'/>
<doc f='llvm/lldb/include/lldb/Core/ModuleList.h' l='177'>/// Clear the object&apos;s state.
  ///
  /// Clears the list of modules and releases a reference to each module
  /// object and if the reference count goes to zero, the module will be
  /// deleted. Also release all memory that might be held by any collection
  /// classes (like std::vector)</doc>
<def f='llvm/lldb/source/Core/ModuleList.cpp' l='338' type='void lldb_private::ModuleList::Destroy()'/>
