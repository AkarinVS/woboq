<dec f='llvm/lldb/include/lldb/Utility/SelectHelper.h' l='29' type='void SelectHelper::SetTimeout(const std::chrono::microseconds &amp; timeout)'/>
<use f='llvm/lldb/source/Host/common/Editline.cpp' l='185' u='c' c='_Z14IsInputPendingP8_IO_FILE'/>
<doc f='llvm/lldb/include/lldb/Utility/SelectHelper.h' l='25'>// Call SetTimeout() before calling SelectHelper::Select() to set the timeout
  // based on the current time + the timeout. This allows multiple calls to
  // SelectHelper::Select() without having to worry about the absolute timeout
  // as this class manages to set the relative timeout correctly.</doc>
<use f='llvm/lldb/source/Host/posix/ConnectionFileDescriptorPosix.cpp' l='567' u='c' c='_ZN12lldb_private24ConnectionFileDescriptor14BytesAvailableERKNS_7TimeoutISt5ratioILl1ELl1000000EEEEPNS_6StatusE'/>
<use f='llvm/lldb/source/Host/posix/PipePosix.cpp' l='266' u='c' c='_ZN12lldb_private9PipePosix15ReadWithTimeoutEPvmRKNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEERm'/>
<use f='llvm/lldb/source/Host/posix/PipePosix.cpp' l='297' u='c' c='_ZN12lldb_private9PipePosix5WriteEPKvmRm'/>
<def f='llvm/lldb/source/Utility/SelectHelper.cpp' l='44' ll='47' type='void SelectHelper::SetTimeout(const std::chrono::microseconds &amp; timeout)'/>
