<dec f='llvm/llvm/include/llvm/Analysis/LoopNestAnalysis.h' l='66' type='static const llvm::BasicBlock &amp; llvm::LoopNest::skipEmptyBlockUntil(const llvm::BasicBlock * From, const llvm::BasicBlock * End)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopNestAnalysis.h' l='63'>/// Recursivelly traverse all empty &apos;single successor&apos; basic blocks of \p From
  /// (if there are any). Return the last basic block found or \p End if it was
  /// reached during the search.</doc>
<def f='llvm/llvm/lib/Analysis/LoopNestAnalysis.cpp' l='208' ll='231' type='static const llvm::BasicBlock &amp; llvm::LoopNest::skipEmptyBlockUntil(const llvm::BasicBlock * From, const llvm::BasicBlock * End)'/>
<use f='llvm/llvm/lib/Analysis/LoopNestAnalysis.cpp' l='281' u='c' c='_ZL19checkLoopsStructureRKN4llvm4LoopES2_RNS_15ScalarEvolutionE'/>
<use f='llvm/llvm/lib/Analysis/LoopNestAnalysis.cpp' l='302' u='c' c='_ZL19checkLoopsStructureRKN4llvm4LoopES2_RNS_15ScalarEvolutionE'/>
<use f='llvm/llvm/lib/Analysis/LoopNestAnalysis.cpp' l='304' u='c' c='_ZL19checkLoopsStructureRKN4llvm4LoopES2_RNS_15ScalarEvolutionE'/>
<use f='llvm/llvm/lib/Analysis/LoopNestAnalysis.cpp' l='339' u='c' c='_ZL19checkLoopsStructureRKN4llvm4LoopES2_RNS_15ScalarEvolutionE'/>
