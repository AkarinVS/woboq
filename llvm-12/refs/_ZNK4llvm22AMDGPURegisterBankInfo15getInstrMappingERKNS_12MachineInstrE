<dec f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.h' l='182' type='const llvm::RegisterBankInfo::InstructionMapping &amp; llvm::AMDGPURegisterBankInfo::getInstrMapping(const llvm::MachineInstr &amp; MI) const'/>
<inh f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegisterBankInfo.h' l='682' c='_ZNK4llvm16RegisterBankInfo15getInstrMappingERKNS_12MachineInstrE'/>
<def f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='3396' ll='4467' type='const RegisterBankInfo::InstructionMapping &amp; llvm::AMDGPURegisterBankInfo::getInstrMapping(const llvm::MachineInstr &amp; MI) const'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='3387'>///
/// This function must return a legal mapping, because
/// AMDGPURegisterBankInfo::getInstrAlternativeMappings() is not called
/// in RegBankSelect::Mode::Fast.  Any mapping that would cause a
/// VGPR to SGPR generated is illegal.
///
// Operands that must be SGPRs must accept potentially divergent VGPRs as
// legal. These will be dealt with in applyMappingImpl.
//</doc>
