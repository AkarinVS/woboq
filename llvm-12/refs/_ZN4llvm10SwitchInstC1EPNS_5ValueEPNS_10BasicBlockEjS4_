<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='3179' type='void llvm::SwitchInst::SwitchInst(llvm::Value * Value, llvm::BasicBlock * Default, unsigned int NumCases, llvm::BasicBlock * InsertAtEnd)'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='3357' u='c' c='_ZN4llvm10SwitchInst6CreateEPNS_5ValueEPNS_10BasicBlockEjS4_'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='3175'>/// Create a new switch instruction, specifying a value to switch on and a
  /// default destination. The number of additional cases can be specified here
  /// to make memory allocation more efficient. This constructor also
  /// auto-inserts at the end of the specified BasicBlock.</doc>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='4001' ll='4006' type='void llvm::SwitchInst::SwitchInst(llvm::Value * Value, llvm::BasicBlock * Default, unsigned int NumCases, llvm::BasicBlock * InsertAtEnd)'/>
<doc f='llvm/llvm/lib/IR/Instructions.cpp' l='3997'>/// SwitchInst ctor - Create a new switch instruction, specifying a value to
/// switch on and a default destination.  The number of additional cases can
/// be specified here to make memory allocation more efficient.  This
/// constructor also autoinserts at the end of the specified BasicBlock.</doc>
