<dec f='llvm/llvm/include/llvm/IR/Module.h' l='162' type='static bool llvm::Module::isValidModuleFlag(const llvm::MDNode &amp; ModFlag, llvm::Module::ModFlagBehavior &amp; MFB, llvm::MDString *&amp; Key, llvm::Metadata *&amp; Val)'/>
<doc f='llvm/llvm/include/llvm/IR/Module.h' l='160'>/// Check if the given module flag metadata represents a valid module flag,
  /// and store the flag behavior, the key string and the value metadata.</doc>
<def f='llvm/llvm/lib/IR/Module.cpp' l='287' ll='299' type='static bool llvm::Module::isValidModuleFlag(const llvm::MDNode &amp; ModFlag, llvm::Module::ModFlagBehavior &amp; MFB, llvm::MDString *&amp; Key, llvm::Metadata *&amp; Val)'/>
<use f='llvm/llvm/lib/IR/Module.cpp' l='311' u='c' c='_ZNK4llvm6Module22getModuleFlagsMetadataERNS_15SmallVectorImplINS0_15ModuleFlagEntryEEE'/>
<use f='llvm/llvm/lib/IR/Module.cpp' l='383' u='c' c='_ZN4llvm6Module13setModuleFlagENS0_15ModFlagBehaviorENS_9StringRefEPNS_8MetadataE'/>
