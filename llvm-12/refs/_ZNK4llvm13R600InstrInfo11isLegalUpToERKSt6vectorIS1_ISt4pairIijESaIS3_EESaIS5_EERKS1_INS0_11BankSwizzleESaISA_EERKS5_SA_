<dec f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.h' l='122' type='unsigned int llvm::R600InstrInfo::isLegalUpTo(const std::vector&lt;std::vector&lt;std::pair&lt;int, unsigned int&gt; &gt; &gt; &amp; IGSrcs, const std::vector&lt;R600InstrInfo::BankSwizzle&gt; &amp; Swz, const std::vector&lt;std::pair&lt;int, unsigned int&gt; &gt; &amp; TransSrcs, R600InstrInfo::BankSwizzle TransSwz) const'/>
<def f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp' l='406' ll='450' type='unsigned int llvm::R600InstrInfo::isLegalUpTo(const std::vector&lt;std::vector&lt;std::pair&lt;int, unsigned int&gt; &gt; &gt; &amp; IGSrcs, const std::vector&lt;R600InstrInfo::BankSwizzle&gt; &amp; Swz, const std::vector&lt;std::pair&lt;int, unsigned int&gt; &gt; &amp; TransSrcs, R600InstrInfo::BankSwizzle TransSwz) const'/>
<use f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp' l='482' u='c' c='_ZNK4llvm13R600InstrInfo24FindSwizzleForVectorSlotERKSt6vectorIS1_ISt4pairIijESaIS3_EESaIS5_EERS1_INS0_11BankSwizzleESaISA_EERKS5_SA_'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp' l='403'>/// returns how many MIs (whose inputs are represented by IGSrcs) can be packed
/// in the same Instruction Group while meeting read port limitations given a
/// Swz swizzle sequence.</doc>
