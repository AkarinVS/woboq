<dec f='include/unistd.h' l='1124' type='char * crypt(const char * __key, const char * __salt)'/>
<dec f='include/crypt.h' l='36' type='char * crypt(const char * __phrase, const char * __salt)'/>
<doc f='include/unistd.h' l='1119'>/* One-way hash PHRASE, returning a string suitable for storage in the
   user database.  SALT selects the one-way function to use, and
   ensures that no two users&apos; hashes are the same, even if they use
   the same passphrase.  The return value points to static storage
   which will be overwritten by the next call to crypt.  */</doc>
<doc f='include/crypt.h' l='31'>/* One-way hash PHRASE, returning a string suitable for storage in the
   user database.  SALT selects the one-way function to use, and
   ensures that no two users&apos; hashes are the same, even if they use
   the same passphrase.  The return value points to static storage
   which will be overwritten by the next call to crypt.  */</doc>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='9818' macro='1' type='char * crypt(char * key, char * salt)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_interceptors.inc' l='9828' u='a' c='_ZL28InitializeCommonInterceptorsv'/>
