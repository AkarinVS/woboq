<dec f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2852' type='std::map&lt;int64_t, uint64_t&gt;'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2875' c='_ZN4llvm10DerefState37computeKnownDerefBytesFromAccessedMapEv'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2925' u='m' c='_ZN4llvm10DerefState16addAccessedBytesElm'/>
<offset>192</offset>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2846'>/// Map representing for accessed memory offsets and sizes.
  /// A key is Offset and a value is size.
  /// If there is a load/store instruction something like,
  ///   p[offset] = v;
  /// (offset, sizeof(v)) will be inserted to this map.
  /// std::map is used because we want to iterate keys in ascending order.</doc>
