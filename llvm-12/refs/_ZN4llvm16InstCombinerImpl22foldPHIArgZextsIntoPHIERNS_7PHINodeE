<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='623' type='llvm::Instruction * llvm::InstCombinerImpl::foldPHIArgZextsIntoPHI(llvm::PHINode &amp; PN)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='749' ll='818' type='llvm::Instruction * llvm::InstCombinerImpl::foldPHIArgZextsIntoPHI(llvm::PHINode &amp; Phi)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='1306' u='c' c='_ZN4llvm16InstCombinerImpl12visitPHINodeERNS_7PHINodeE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='746'>/// TODO: This function could handle other cast types, but then it might
/// require special-casing a cast from the &apos;i1&apos; type. See the comment in
/// FoldPHIArgOpIntoPHI() about pessimizing illegal integer types.</doc>
