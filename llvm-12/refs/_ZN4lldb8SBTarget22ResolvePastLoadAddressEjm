<dec f='llvm/lldb/include/lldb/API/SBTarget.h' l='515' type='lldb::SBAddress lldb::SBTarget::ResolvePastLoadAddress(uint32_t stop_id, lldb::addr_t vm_addr)'/>
<use f='llvm/build/tools/lldb/bindings/python/LLDBWrapPython.cpp' l='55495' u='c' c='_ZL37_wrap_SBTarget_ResolvePastLoadAddressP7_objectS0_'/>
<doc f='llvm/lldb/include/lldb/API/SBTarget.h' l='495'>/// Resolve a current load address into a section offset address
  /// using the process stop ID to identify a time in the past.
  ///
  /// \param[in] stop_id
  ///     Each time a process stops, the process stop ID integer gets
  ///     incremented. These stop IDs are used to identify past times
  ///     and can be used in history objects as a cheap way to store
  ///     the time at which the sample was taken. Specifying
  ///     UINT32_MAX will always resolve the address using the
  ///     currently loaded sections.
  ///
  /// \param[in] vm_addr
  ///     A virtual address from the current process state that is to
  ///     be translated into a section offset address.
  ///
  /// \return
  ///     An SBAddress which will be valid if \a vm_addr was
  ///     successfully resolved into a section offset address, or an
  ///     invalid SBAddress if \a vm_addr doesn&apos;t resolve to a section
  ///     in a module.</doc>
<def f='llvm/lldb/source/API/SBTarget.cpp' l='659' ll='677' type='lldb::SBAddress lldb::SBTarget::ResolvePastLoadAddress(uint32_t stop_id, lldb::addr_t vm_addr)'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='661' u='a' c='_ZN4lldb8SBTarget22ResolvePastLoadAddressEjm'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='661' u='a' c='_ZN4lldb8SBTarget22ResolvePastLoadAddressEjm'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='2503' u='a' c='_ZN12lldb_private5repro15RegisterMethodsERNS0_8RegistryE'/>
