<inh f='llvm/clang/include/clang/Analysis/FlowSensitive/DataflowWorklist.h' l='22' c='clang::DataflowWorklistBase'/>
<def f='llvm/clang/include/clang/Analysis/FlowSensitive/DataflowWorklist.h' l='79' ll='90'/>
<use f='llvm/clang/lib/Analysis/CalledOnceCheck.cpp' l='671' c='_ZN12_GLOBAL__N_117CalledOnceChecker5checkEv'/>
<size>216</size>
<doc f='llvm/clang/include/clang/Analysis/FlowSensitive/DataflowWorklist.h' l='76'>/// A worklist implementation for backward dataflow analysis. The enqueued
/// block will be dequeued in post order. The worklist cannot contain the same
/// block multiple times at once.</doc>
<fun r='_ZN5clang24BackwardDataflowWorklistC1ERKNS_3CFGERNS_19AnalysisDeclContextE'/>
<fun r='_ZN5clang24BackwardDataflowWorklist19enqueuePredecessorsEPKNS_8CFGBlockE'/>
<use f='llvm/clang/lib/Analysis/LiveVariables.cpp' l='512' c='_ZN5clang13LiveVariables15computeLivenessERNS_19AnalysisDeclContextEb'/>
<size>216</size>
<use f='llvm/clang/unittests/Analysis/CFGTest.cpp' l='257' c='_ZN5clang8analysis12_GLOBAL__N_118CFG_Worklists_Test8TestBodyEv'/>
<size>216</size>
