<dec f='llvm/llvm/lib/Transforms/Vectorize/VPRecipeBuilder.h' l='64' type='llvm::VPRecipeBase * llvm::VPRecipeBuilder::tryToWidenMemory(llvm::Instruction * I, llvm::VFRange &amp; Range, llvm::VPlanPtr &amp; Plan)'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8267' ll='8301' type='llvm::VPRecipeBase * llvm::VPRecipeBuilder::tryToWidenMemory(llvm::Instruction * I, llvm::VFRange &amp; Range, llvm::VPlanPtr &amp; Plan)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8551' u='c' c='_ZN4llvm15VPRecipeBuilder22tryToCreateWidenRecipeEPNS_11InstructionERNS_7VFRangeERSt10unique_ptrINS_5VPlanESt14default_deleteIS6_EE'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/VPRecipeBuilder.h' l='61'>/// Check if the load or store instruction \p I should widened for \p
  /// Range.Start and potentially masked. Such instructions are handled by a
  /// recipe that takes an additional VPInstruction for the mask.</doc>
