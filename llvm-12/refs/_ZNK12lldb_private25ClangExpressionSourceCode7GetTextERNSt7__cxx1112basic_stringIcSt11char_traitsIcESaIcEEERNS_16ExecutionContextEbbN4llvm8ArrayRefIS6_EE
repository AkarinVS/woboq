<dec f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionSourceCode.h' l='64' type='bool lldb_private::ClangExpressionSourceCode::GetText(std::string &amp; text, lldb_private::ExecutionContext &amp; exe_ctx, bool add_locals, bool force_add_all_locals, llvm::ArrayRef&lt;std::string&gt; modules) const'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionSourceCode.h' l='52'>/// Generates the source code that will evaluate the expression.
  ///
  /// \param text output parameter containing the source code string.
  /// \param exe_ctx The execution context in which the expression will be
  ///        evaluated.
  /// \param add_locals True iff local variables should be injected into the
  ///        expression source code.
  /// \param force_add_all_locals True iff all local variables should be
  ///        injected even if they are not used in the expression.
  /// \param modules A list of (C++) modules that the expression should import.
  ///
  /// \return true iff the source code was successfully generated.</doc>
<def f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionSourceCode.cpp' l='295' ll='470' type='bool lldb_private::ClangExpressionSourceCode::GetText(std::string &amp; text, lldb_private::ExecutionContext &amp; exe_ctx, bool add_locals, bool force_add_all_locals, llvm::ArrayRef&lt;std::string&gt; modules) const'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangUserExpression.cpp' l='428' u='c' c='_ZN12lldb_private19ClangUserExpression16CreateSourceCodeERNS_17DiagnosticManagerERNS_16ExecutionContextESt6vectorINSt7__cxx1112basic_stringIcSt11char_15975822'/>
