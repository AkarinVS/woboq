<dec f='llvm/polly/include/polly/ScopInfo.h' l='692' type='void polly::MemoryAccess::wrapConstantDimensions()'/>
<doc f='llvm/polly/include/polly/ScopInfo.h' l='679'>/// Carry index overflows of dimensions with constant size to the next higher
  /// dimension.
  ///
  /// For dimensions that have constant size, modulo the index by the size and
  /// add up the carry (floored division) to the next higher dimension. This is
  /// how overflow is defined in row-major order.
  /// It happens e.g. when ScalarEvolution computes the offset to the base
  /// pointer and would algebraically sum up all lower dimensions&apos; indices of
  /// constant size.
  ///
  /// Example:
  ///   float (*A)[4];
  ///   A[1][6] -&gt; A[2][2]</doc>
<def f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='417' ll='467' type='void polly::MemoryAccess::wrapConstantDimensions()'/>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='516' u='c' c='_ZN5polly12MemoryAccess20updateDimensionalityEv'/>
