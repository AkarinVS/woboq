<def f='llvm/llvm/include/llvm/Support/GenericDomTree.h' l='603' ll='609' type='void llvm::DominatorTreeBase::deleteEdge(NodeT * From, NodeT * To)'/>
<doc f='llvm/llvm/include/llvm/Support/GenericDomTree.h' l='593'>/// Inform the dominator tree about a CFG edge deletion and update the tree.
  ///
  /// This function has to be called just after making the update on the actual
  /// CFG. An internal functions checks if the edge doesn&apos;t exist in the CFG in
  /// DEBUG mode. There cannot be any other updates that the
  /// dominator tree doesn&apos;t know about.
  ///
  /// Note that for postdominators it automatically takes care of deleting
  /// a reverse edge internally (so there&apos;s no need to swap the parameters).
  ///</doc>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='378' u='c' c='_ZN4llvm14DomTreeUpdater10deleteEdgeEPNS_10BasicBlockES2_'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='380' u='c' c='_ZN4llvm14DomTreeUpdater10deleteEdgeEPNS_10BasicBlockES2_'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='399' u='c' c='_ZN4llvm14DomTreeUpdater17deleteEdgeRelaxedEPNS_10BasicBlockES2_'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='401' u='c' c='_ZN4llvm14DomTreeUpdater17deleteEdgeRelaxedEPNS_10BasicBlockES2_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopFlatten.cpp' l='550' u='c' c='_ZL17DoFlattenLoopPairR11FlattenInfoPN4llvm13DominatorTreeEPNS1_8LoopInfoEPNS1_15ScalarEvolutionEPNS1_15AssumptionCacheEPKNS1_19TargetTransformInfoE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp' l='532' u='c' c='_ZL21unswitchTrivialBranchRN4llvm4LoopERNS_10BranchInstERNS_13DominatorTreeERNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_16MemorySSAUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp' l='642' u='c' c='_ZN12_GLOBAL__N_110LoopRotate10rotateLoopEPN4llvm4LoopEb'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='426' u='c' c='_ZN54DominatorTree_DeletingEdgesIntroducesUnreachables_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='427' u='c' c='_ZN54DominatorTree_DeletingEdgesIntroducesUnreachables_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='519' u='c' c='_ZN54DominatorTree_DeletingEdgesIntroducesInfiniteLoop_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='521' u='c' c='_ZN54DominatorTree_DeletingEdgesIntroducesInfiniteLoop_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='608' u='c' c='_ZN55DominatorTree_DeletingEdgesIntroducesInfiniteLoop2_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='609' u='c' c='_ZN55DominatorTree_DeletingEdgesIntroducesInfiniteLoop2_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='892' u='c' c='_ZN34DominatorTree_DeleteReachable_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='894' u='c' c='_ZN34DominatorTree_DeleteReachable_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='918' u='c' c='_ZN36DominatorTree_DeleteUnreachable_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='920' u='c' c='_ZN36DominatorTree_DeleteUnreachable_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='951' u='c' c='_ZN31DominatorTree_InsertDelete_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='952' u='c' c='_ZN31DominatorTree_InsertDelete_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='989' u='c' c='_ZN41DominatorTree_InsertDeleteExhaustive_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='990' u='c' c='_ZN41DominatorTree_InsertDeleteExhaustive_Test8TestBodyEv'/>
