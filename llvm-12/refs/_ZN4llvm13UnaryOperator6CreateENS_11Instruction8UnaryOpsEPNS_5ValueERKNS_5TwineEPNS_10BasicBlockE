<dec f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='132' type='static llvm::UnaryOperator * llvm::UnaryOperator::Create(llvm::Instruction::UnaryOps Op, llvm::Value * S, const llvm::Twine &amp; Name, llvm::BasicBlock * InsertAtEnd)'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='128'>/// Construct a unary instruction, given the opcode and an operand.
  /// Also automatically insert this instruction to the end of the
  /// BasicBlock specified.
  ///</doc>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='2396' ll='2402' type='static llvm::UnaryOperator * llvm::UnaryOperator::Create(llvm::Instruction::UnaryOps Op, llvm::Value * S, const llvm::Twine &amp; Name, llvm::BasicBlock * InsertAtEnd)'/>
