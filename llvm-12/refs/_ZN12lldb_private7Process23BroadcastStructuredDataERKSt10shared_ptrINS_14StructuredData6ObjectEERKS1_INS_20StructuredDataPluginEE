<dec f='llvm/lldb/include/lldb/Target/Process.h' l='2442' type='void lldb_private::Process::BroadcastStructuredData(const StructuredData::ObjectSP &amp; object_sp, const lldb::StructuredDataPluginSP &amp; plugin_sp)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='2429'>/// Broadcasts the given structured data object from the given plugin.
  ///
  /// StructuredDataPlugin instances can use this to optionally broadcast any
  /// of their data if they want to make it available for clients.  The data
  /// will come in on the structured data event bit
  /// (eBroadcastBitStructuredData).
  ///
  /// \param[in] object_sp
  ///     The structured data object to broadcast.
  ///
  /// \param[in] plugin_sp
  ///     The plugin that will be reported in the event&apos;s plugin
  ///     parameter.</doc>
<use f='llvm/lldb/source/Plugins/StructuredData/DarwinLog/StructuredDataDarwinLog.cpp' l='1130' u='c' c='_ZN12lldb_private23StructuredDataDarwinLog29HandleArrivalOfStructuredDataERNS_7ProcessENS_11ConstStringERKSt10shared_ptrINS_14StructuredData6ObjectEE'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='4182' ll='4187' type='void lldb_private::Process::BroadcastStructuredData(const StructuredData::ObjectSP &amp; object_sp, const lldb::StructuredDataPluginSP &amp; plugin_sp)'/>
