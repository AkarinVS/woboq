<dec f='llvm/llvm/include/llvm/Support/Signals.h' l='55' type='void llvm::sys::PrintStackTrace(llvm::raw_ostream &amp; OS, int Depth = 0)'/>
<doc f='llvm/llvm/include/llvm/Support/Signals.h' l='52'>/// Print the stack trace using the given \c raw_ostream object.
  /// \param Depth refers to the number of stackframes to print. If not
  ///        specified, the entire frame is printed.</doc>
<use f='llvm/clang/tools/libclang/CIndex.cpp' l='9142' u='c' c='_ZN5clang7cxindex6LoggerD1Ev'/>
<use f='llvm/lldb/source/Core/Module.cpp' l='1205' u='c' c='_ZN12lldb_private6Module26LogMessageVerboseBacktraceEPNS_3LogEPKcz'/>
<use f='llvm/lldb/source/Plugins/TypeSystem/Clang/TypeSystemClang.cpp' l='4615' u='c' c='_ZN12lldb_private15TypeSystemClang10GetBitSizeEPvPNS_21ExecutionContextScopeE'/>
<use f='llvm/lldb/source/Utility/LLDBAssert.cpp' l='33' u='c' c='_ZN12lldb_private11lldb_assertEbPKcS1_S1_j'/>
<use f='llvm/lldb/source/Utility/Log.cpp' l='311' u='c' c='_ZN12lldb_private3Log11WriteHeaderERN4llvm11raw_ostreamENS1_9StringRefES4_'/>
<def f='llvm/llvm/lib/Support/Unix/Signals.inc' l='558' ll='628' type='void llvm::sys::PrintStackTrace(llvm::raw_ostream &amp; OS, int Depth = 0)'/>
<use f='llvm/llvm/lib/Support/Unix/Signals.inc' l='631' u='c' c='_ZL28PrintStackTraceSignalHandlerPv'/>
<doc f='llvm/llvm/lib/Support/Unix/Signals.inc' l='553'>// In the case of a program crash or fault, print out a stack trace so that the
// user has an indication of why and where we died.
//
// On glibc systems we have the &apos;backtrace&apos; function, which works nicely, but
// doesn&apos;t demangle symbols.</doc>
<use f='llvm/llvm/unittests/Support/CrashRecoveryTest.cpp' l='108' u='c' c='_ZN40CrashRecoveryTest_LimitedStackTrace_Test8TestBodyEv'/>
