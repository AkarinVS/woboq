<def f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='214' ll='223' type='bool llvm::SplitCriticalEdge(llvm::BasicBlock * Succ, llvm::pred_iterator PI, const llvm::CriticalEdgeSplittingOptions &amp; Options = llvm::CriticalEdgeSplittingOptions())'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='210'>/// If the edge from *PI to BB is not critical, return false. Otherwise, split
/// all edges between the two blocks and return true. This updates all of the
/// same analyses as the other SplitCriticalEdge function. If P is specified, it
/// updates the analyses described above.</doc>
