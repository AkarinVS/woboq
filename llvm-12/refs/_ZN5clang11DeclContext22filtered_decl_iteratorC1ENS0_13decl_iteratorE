<def f='llvm/clang/include/clang/AST/DeclBase.h' l='2196' ll='2198' type='void clang::DeclContext::filtered_decl_iterator::filtered_decl_iterator&lt;SpecificDecl, Acceptable&gt;(DeclContext::decl_iterator C)'/>
<use f='llvm/clang/include/clang/AST/DeclObjC.h' l='986' u='c' c='_ZNK5clang17ObjCContainerDecl14instprop_beginEv'/>
<use f='llvm/clang/include/clang/AST/DeclObjC.h' l='990' u='c' c='_ZNK5clang17ObjCContainerDecl12instprop_endEv'/>
<use f='llvm/clang/include/clang/AST/DeclObjC.h' l='1003' u='c' c='_ZNK5clang17ObjCContainerDecl15classprop_beginEv'/>
<use f='llvm/clang/include/clang/AST/DeclObjC.h' l='1007' u='c' c='_ZNK5clang17ObjCContainerDecl13classprop_endEv'/>
<use f='llvm/clang/include/clang/AST/DeclObjC.h' l='1037' u='c' c='_ZNK5clang17ObjCContainerDecl14instmeth_beginEv'/>
<use f='llvm/clang/include/clang/AST/DeclObjC.h' l='1041' u='c' c='_ZNK5clang17ObjCContainerDecl12instmeth_endEv'/>
<use f='llvm/clang/include/clang/AST/DeclObjC.h' l='1054' u='c' c='_ZNK5clang17ObjCContainerDecl15classmeth_beginEv'/>
<use f='llvm/clang/include/clang/AST/DeclObjC.h' l='1058' u='c' c='_ZNK5clang17ObjCContainerDecl13classmeth_endEv'/>
<doc f='llvm/clang/include/clang/AST/DeclBase.h' l='2188'>/// filtered_decl_iterator - Construct a new iterator over a
    /// subset of the declarations the range [C,
    /// end-of-declarations). If A is non-NULL, it is a pointer to a
    /// member function of SpecificDecl that should return true for
    /// all of the SpecificDecl instances that will be in the subset
    /// of iterators. For example, if you want Objective-C instance
    /// methods, SpecificDecl will be ObjCMethodDecl and A will be
    /// &amp;ObjCMethodDecl::isInstanceMethod.</doc>
