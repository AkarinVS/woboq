<dec f='llvm/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h' l='578' type='llvm::CallInst * llvm::OpenMPIRBuilder::createOMPAlloc(const llvm::OpenMPIRBuilder::LocationDescription &amp; Loc, llvm::Value * Size, llvm::Value * Allocator, std::string Name = &quot;&quot;)'/>
<doc f='llvm/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h' l='570'>/// Create a runtime call for kmpc_Alloc
  ///
  /// \param Loc The insert and source location description.
  /// \param Size Size of allocated memory space
  /// \param Allocator Allocator information instruction
  /// \param Name Name of call Instruction for OMP_alloc
  ///
  /// \returns CallInst to the OMP_Alloc call</doc>
<use f='llvm/clang/lib/CodeGen/CGStmtOpenMP.cpp' l='1617' u='c' c='_ZN5clang7CodeGen15CodeGenFunction19OMPBuilderCBHelpers25getAddressOfLocalVariableERS1_PKNS_7VarDeclE'/>
<def f='llvm/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp' l='1683' ll='1697' type='llvm::CallInst * llvm::OpenMPIRBuilder::createOMPAlloc(const llvm::OpenMPIRBuilder::LocationDescription &amp; Loc, llvm::Value * Size, llvm::Value * Allocator, std::string Name = &quot;&quot;)'/>
