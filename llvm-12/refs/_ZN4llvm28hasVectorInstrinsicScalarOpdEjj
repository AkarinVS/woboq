<dec f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='323' type='bool llvm::hasVectorInstrinsicScalarOpd(Intrinsic::ID ID, unsigned int ScalarOpdIdx)'/>
<use f='llvm/llvm/lib/Analysis/ConstantFolding.cpp' l='2973' u='c' c='_ZN12_GLOBAL__N_122ConstantFoldVectorCallEN4llvm9StringRefEjPNS0_10VectorTypeENS0_8ArrayRefIPNS0_8ConstantEEERKNS0_10DataLayoutEPKNS0_17TargetLibraryInfoEPKNS0_8CallBaseE'/>
<doc f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='322'>/// Identifies if the vector form of the intrinsic has a scalar operand.</doc>
<def f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='99' ll='115' type='bool llvm::hasVectorInstrinsicScalarOpd(Intrinsic::ID ID, unsigned int ScalarOpdIdx)'/>
<doc f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='98'>/// Identifies if the vector form of the intrinsic has a scalar operand.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalarizer.cpp' l='563' u='c' c='_ZN12_GLOBAL__N_117ScalarizerVisitor9splitCallERN4llvm8CallInstE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='747' u='c' c='_ZN4llvm25LoopVectorizationLegality18canVectorizeInstrsEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4910' u='c' c='_ZN4llvm19InnerLoopVectorizer20widenCallInstructionERNS_8CallInstEPNS_7VPValueERNS_6VPUserERNS_16VPTransformStateE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='500' u='c' c='_ZL23InTreeUserNeedToExtractPN4llvm5ValueEPNS_11InstructionEPNS_17TargetLibraryInfoE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='3205' u='c' c='_ZN4llvm13slpvectorizer7BoUpSLP13buildTree_recENS_8ArrayRefIPNS_5ValueEEEjRKNS1_8EdgeInfoE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='3224' u='c' c='_ZN4llvm13slpvectorizer7BoUpSLP13buildTree_recENS_8ArrayRefIPNS_5ValueEEEjRKNS1_8EdgeInfoE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='4728' u='c' c='_ZN4llvm13slpvectorizer7BoUpSLP13vectorizeTreeEPNS1_9TreeEntryE'/>
