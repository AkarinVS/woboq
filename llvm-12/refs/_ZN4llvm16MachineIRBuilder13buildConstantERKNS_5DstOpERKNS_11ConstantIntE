<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='775' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildConstant(const llvm::DstOp &amp; Res, const llvm::ConstantInt &amp; Val)'/>
<ovr f='llvm/llvm/lib/CodeGen/GlobalISel/CSEMIRBuilder.cpp' l='234' c='_ZN4llvm13CSEMIRBuilder13buildConstantERKNS_5DstOpERKNS_11ConstantIntE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/CSEMIRBuilder.cpp' l='238' u='c' c='_ZN4llvm13CSEMIRBuilder13buildConstantERKNS_5DstOpERKNS_11ConstantIntE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/CSEMIRBuilder.cpp' l='257' u='c' c='_ZN4llvm13CSEMIRBuilder13buildConstantERKNS_5DstOpERKNS_11ConstantIntE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='765'>/// Build and insert \p Res = G_CONSTANT \p Val
  ///
  /// G_CONSTANT is an integer constant with the specified size and value. \p
  /// Val will be extended or truncated to the size of \p Reg.
  ///
  /// \pre setBasicBlock or setMI must have been called.
  /// \pre \p Res must be a generic virtual register with scalar or pointer
  ///      type.
  ///
  /// \return The newly created instruction.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp' l='2880' u='c' c='_ZN4llvm12IRTranslator9translateERKNS_8ConstantENS_8RegisterE'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='243' ll='262' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildConstant(const llvm::DstOp &amp; Res, const llvm::ConstantInt &amp; Val)'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='269' u='c' c='_ZN4llvm16MachineIRBuilder13buildConstantERKNS_5DstOpEl'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='301' u='c' c='_ZN4llvm16MachineIRBuilder13buildConstantERKNS_5DstOpERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMLegalizerInfo.cpp' l='463' u='c' c='_ZNK4llvm16ARMLegalizerInfo14legalizeCustomERNS_15LegalizerHelperERNS_12MachineInstrE'/>
