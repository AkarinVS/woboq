<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h' l='122' type='bool'/>
<offset>32</offset>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h' l='117'>/// This call is a pre-C++17 elidable constructor that we failed to elide
  /// because we failed to compute the target region into which
  /// this constructor would have been ultimately elided. Analysis that
  /// we perform in this case is still correct but it behaves differently,
  /// as if copy elision is disabled.</doc>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCXX.cpp' l='259' u='w' c='_ZN5clang4ento10ExprEngine30computeObjectUnderConstructionEPKNS_4ExprEN4llvm18IntrusiveRefCntPtrIKNS0_12ProgramStateEEEPKNS_15LocationContextEPKNS_19C4817017'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCXX.cpp' l='412' u='r' c='_ZN5clang4ento10ExprEngine30updateObjectsUnderConstructionENS0_4SValEPKNS_4ExprEN4llvm18IntrusiveRefCntPtrIKNS0_12ProgramStateEEEPKNS_15LocationContex9399940'/>
