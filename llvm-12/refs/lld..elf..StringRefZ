<def f='llvm/lld/ELF/Symbols.h' l='49' ll='55'/>
<use f='llvm/lld/ELF/Symbols.h' l='244' c='_ZN3lld3elf6SymbolC1ENS1_4KindEPNS0_9InputFileENS0_10StringRefZEhhh'/>
<use f='llvm/lld/ELF/Symbols.h' l='298' c='_ZN3lld3elf7DefinedC1EPNS0_9InputFileENS0_10StringRefZEhhhmmPNS0_11SectionBaseE'/>
<use f='llvm/lld/ELF/Symbols.h' l='333' c='_ZN3lld3elf12CommonSymbolC1EPNS0_9InputFileENS0_10StringRefZEhhhmm'/>
<use f='llvm/lld/ELF/Symbols.h' l='346' c='_ZN3lld3elf9UndefinedC1EPNS0_9InputFileENS0_10StringRefZEhhhj'/>
<size>16</size>
<doc f='llvm/lld/ELF/Symbols.h' l='43'>// This is a StringRef-like container that doesn&apos;t run strlen().
//
// ELF string tables contain a lot of null-terminated strings. Most of them
// are not necessary for the linker because they are names of local symbols,
// and the linker doesn&apos;t use local symbol names for name resolution. So, we
// use this class to represents strings read from string tables.</doc>
<fun r='_ZN3lld3elf10StringRefZC1EPKc'/>
<fun r='_ZN3lld3elf10StringRefZC1EN4llvm9StringRefE'/>
<mbr r='lld::elf::StringRefZ::data' o='0' t='const char *'/>
<mbr r='lld::elf::StringRefZ::size' o='64' t='const uint32_t'/>
<use f='llvm/lld/ELF/InputFiles.cpp' l='1122' c='_ZN3lld3elf7ObjFile17initializeSymbolsEv'/>
<use f='llvm/lld/ELF/InputFiles.cpp' l='1149' c='_ZN3lld3elf7ObjFile17initializeSymbolsEv'/>
<size>16</size>
