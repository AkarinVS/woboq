<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='2791' type='bool llvm::PHINode::hasConstantOrUndefValue() const'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='2788'>/// Whether the specified PHI node always merges
  /// together the same value, assuming undefs are equal to a unique
  /// non-undef value.</doc>
<use f='llvm/llvm/lib/Analysis/DivergenceAnalysis.cpp' l='283' u='c' c='_ZN4llvm18DivergenceAnalysis20taintAndPushPhiNodesERKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/LegacyDivergenceAnalysis.cpp' l='175' u='c' c='_ZN12_GLOBAL__N_120DivergencePropagator21exploreSyncDependencyEPN4llvm11InstructionE'/>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='168' ll='179' type='bool llvm::PHINode::hasConstantOrUndefValue() const'/>
<doc f='llvm/llvm/lib/IR/Instructions.cpp' l='163'>/// hasConstantOrUndefValue - Whether the specified PHI node always merges
/// together the same value, assuming that undefs result in the same value as
/// non-undefs.
/// Unlike \ref hasConstantValue, this does not return a value because the
/// unique non-undef incoming value need not dominate the PHI node.</doc>
