<def f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRDynamicChecks.cpp' l='131' ll='306'/>
<ovr f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRDynamicChecks.cpp' l='308' c='ValidPointerChecker'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRDynamicChecks.cpp' l='308'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRDynamicChecks.cpp' l='312' c='_ZN19ValidPointerCheckerC1ERN4llvm6ModuleESt10shared_ptrIN12lldb_private15UtilityFunctionEE'/>
<ovr f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRDynamicChecks.cpp' l='366' c='ObjcObjectChecker'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRDynamicChecks.cpp' l='366'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRDynamicChecks.cpp' l='370' c='_ZN17ObjcObjectCheckerC1ERN4llvm6ModuleESt10shared_ptrIN12lldb_private15UtilityFunctionEE'/>
<size>72</size>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRDynamicChecks.cpp' l='105'>/// \class Instrumenter IRDynamicChecks.cpp
/// Finds and instruments individual LLVM IR instructions
///
/// When instrumenting LLVM IR, it is frequently desirable to first search for
/// instructions, and then later modify them.  This way iterators remain
/// intact, and multiple passes can look at the same code base without
/// treading on each other&apos;s toes.
///
/// The Instrumenter class implements this functionality.  A client first
/// calls Inspect on a function, which populates a list of instructions to be
/// instrumented.  Then, later, when all passes&apos; Inspect functions have been
/// called, the client calls Instrument, which adds the desired
/// instrumentation.
///
/// A subclass of Instrumenter must override InstrumentInstruction, which
/// is responsible for adding whatever instrumentation is necessary.
///
/// A subclass of Instrumenter may override:
///
/// - InspectInstruction [default: does nothing]
///
/// - InspectBasicBlock [default: iterates through the instructions in a
///   basic block calling InspectInstruction]
///
/// - InspectFunction [default: iterates through the basic blocks in a
///   function calling InspectBasicBlock]</doc>
<fun r='_ZN12InstrumenterD1Ev'/>
<fun r='_ZN12Instrumenter21InstrumentInstructionEPN4llvm11InstructionE'/>
<fun r='_ZN12Instrumenter18InspectInstructionERN4llvm11InstructionE'/>
<fun r='_ZN12Instrumenter17InspectBasicBlockERN4llvm10BasicBlockE'/>
<fun r='_ZN12Instrumenter15InspectFunctionERN4llvm8FunctionE'/>
