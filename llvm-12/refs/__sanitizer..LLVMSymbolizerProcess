<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_internal.h' l='149'/>
<inh f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_internal.h' l='85' c='__sanitizer::SymbolizerProcess'/>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='240' ll='289'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='292' c='__sanitizer::LLVMSymbolizer::LLVMSymbolizer'/>
<size>16424</size>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='230'>// For now we assume the following protocol:
// For each request of the form
//   &lt;module_name&gt; &lt;module_offset&gt;
// passed to STDIN, external symbolizer prints to STDOUT response:
//   &lt;function_name&gt;
//   &lt;file_name&gt;:&lt;line_number&gt;:&lt;column_number&gt;
//   &lt;function_name&gt;
//   &lt;file_name&gt;:&lt;line_number&gt;:&lt;column_number&gt;
//   ...
//   &lt;empty line&gt;</doc>
<fun r='__sanitizer::LLVMSymbolizerProcess::LLVMSymbolizerProcess'/>
<fun r='__sanitizer::LLVMSymbolizerProcess::ReachedEndOfOutput'/>
<fun r='__sanitizer::LLVMSymbolizerProcess::GetArgV'/>
