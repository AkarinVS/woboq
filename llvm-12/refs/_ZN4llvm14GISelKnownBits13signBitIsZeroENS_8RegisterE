<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/GISelKnownBits.h' l='83' type='bool llvm::GISelKnownBits::signBitIsZero(llvm::Register Op)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/GISelKnownBits.h' l='81'>/// \return true if the sign bit of Op is known to be zero.  We use this
  /// predicate to simplify operations downstream.</doc>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/GISelKnownBits.cpp' l='74' ll='78' type='bool llvm::GISelKnownBits::signBitIsZero(llvm::Register R)'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp' l='3698' u='c' c='_ZNK4llvm25AMDGPUInstructionSelector23selectMUBUFScratchOffenERNS_14MachineOperandE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp' l='3740' u='c' c='_ZNK4llvm25AMDGPUInstructionSelector15isDSOffsetLegalENS_8RegisterEl'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp' l='3756' u='c' c='_ZNK4llvm25AMDGPUInstructionSelector16isDSOffset2LegalENS_8RegisterEllj'/>
<use f='llvm/llvm/unittests/CodeGen/GlobalISel/KnownBitsTest.cpp' l='320' u='c' c='_ZN41AArch64GISelMITest_TestSignBitIsZero_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/GlobalISel/KnownBitsTest.cpp' l='321' u='c' c='_ZN41AArch64GISelMITest_TestSignBitIsZero_Test8TestBodyEv'/>
