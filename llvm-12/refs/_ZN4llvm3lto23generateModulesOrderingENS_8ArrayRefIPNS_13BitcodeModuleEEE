<dec f='llvm/llvm/include/llvm/LTO/LTO.h' l='96' type='std::vector&lt;int&gt; llvm::lto::generateModulesOrdering(ArrayRef&lt;llvm::BitcodeModule *&gt; R)'/>
<doc f='llvm/llvm/include/llvm/LTO/LTO.h' l='94'>/// Produces a container ordering for optimal multi-threaded processing. Returns
/// ordered indices to elements in the input array.</doc>
<use f='llvm/llvm/lib/LTO/LTO.cpp' l='1483' u='c' c='_ZN4llvm3lto3LTO10runThinLTOESt8functionIFSt10unique_ptrINS0_18NativeObjectStreamESt14default_deleteIS4_EEjEES2_IFS9_jNS_9StringRefEEERKNS_8DenseSetIm13847797'/>
<def f='llvm/llvm/lib/LTO/LTO.cpp' l='1534' ll='1544' type='std::vector&lt;int&gt; llvm::lto::generateModulesOrdering(ArrayRef&lt;llvm::BitcodeModule *&gt; R)'/>
<doc f='llvm/llvm/lib/LTO/LTO.cpp' l='1531'>// Compute the ordering we will process the inputs: the rough heuristic here
// is to sort them per size so that the largest module get schedule as soon as
// possible. This is purely a compile-time optimization.</doc>
<use f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='1067' u='c' c='_ZN4llvm20ThinLTOCodeGenerator3runEv'/>
