<dec f='llvm/clang/lib/Format/FormatTokenLexer.h' l='40' type='void clang::format::FormatTokenLexer::FormatTokenLexer(const clang::SourceManager &amp; SourceMgr, clang::FileID ID, unsigned int Column, const clang::format::FormatStyle &amp; Style, encoding::Encoding Encoding, llvm::SpecificBumpPtrAllocator&lt;FormatToken&gt; &amp; Allocator, clang::IdentifierTable &amp; IdentTable)'/>
<def f='llvm/clang/lib/Format/FormatTokenLexer.cpp' l='25' ll='59' type='void clang::format::FormatTokenLexer::FormatTokenLexer(const clang::SourceManager &amp; SourceMgr, clang::FileID ID, unsigned int Column, const clang::format::FormatStyle &amp; Style, encoding::Encoding Encoding, llvm::SpecificBumpPtrAllocator&lt;FormatToken&gt; &amp; Allocator, clang::IdentifierTable &amp; IdentTable)'/>
<use f='llvm/clang/lib/Format/MacroExpander.cpp' l='140' u='c' c='_ZN5clang6format13MacroExpander15parseDefinitionERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/clang/lib/Format/TokenAnalyzer.cpp' l='69' u='c' c='_ZN5clang6format13TokenAnalyzer7processEv'/>
<use f='llvm/clang/unittests/Format/TestLexer.h' l='106' u='c' c='_ZN5clang6format9TestLexer11getNewLexerEN4llvm9StringRefE'/>
