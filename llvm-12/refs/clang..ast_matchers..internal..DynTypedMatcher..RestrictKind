<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchersInternal.h' l='361' u='w' c='_ZN5clang12ast_matchers8internal15DynTypedMatcherC1EPNS1_16MatcherInterfaceIT_EE'/>
<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchersInternal.h' l='444' u='r' c='_ZNK5clang12ast_matchers8internal15DynTypedMatcher5getIDEv'/>
<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchersInternal.h' l='491' u='w' c='_ZN5clang12ast_matchers8internal15DynTypedMatcherC1ENS_11ASTNodeKindES3_N4llvm18IntrusiveRefCntPtrINS1_19DynMatcherInterfaceEEE'/>
<dec f='llvm/clang/include/clang/ASTMatchers/ASTMatchersInternal.h' l='501' type='clang::ASTNodeKind'/>
<offset>64</offset>
<doc f='llvm/clang/include/clang/ASTMatchers/ASTMatchersInternal.h' l='497'>/// A potentially stricter node kind.
  ///
  /// It allows to perform implicit and dynamic cast of matchers without
  /// needing to change \c Implementation.</doc>
<use f='llvm/clang/lib/ASTMatchers/ASTMatchersInternal.cpp' l='220' u='r' c='_ZN5clang12ast_matchers8internal15DynTypedMatcher17constructVariadicENS2_16VariadicOperatorENS_11ASTNodeKindESt6vectorIS2_SaIS2_EE'/>
<use f='llvm/clang/lib/ASTMatchers/ASTMatchersInternal.cpp' l='255' u='w' c='_ZN5clang12ast_matchers8internal15DynTypedMatcher26constructRestrictedWrapperERKS2_NS_11ASTNodeKindE'/>
<use f='llvm/clang/lib/ASTMatchers/ASTMatchersInternal.cpp' l='276' u='m' c='_ZNK5clang12ast_matchers8internal15DynTypedMatcher19canMatchNodesOfKindENS_11ASTNodeKindE'/>
<use f='llvm/clang/lib/ASTMatchers/ASTMatchersInternal.cpp' l='282' u='w' c='_ZNK5clang12ast_matchers8internal15DynTypedMatcher9dynCastToENS_11ASTNodeKindE'/>
<use f='llvm/clang/lib/ASTMatchers/ASTMatchersInternal.cpp' l='282' u='r' c='_ZNK5clang12ast_matchers8internal15DynTypedMatcher9dynCastToENS_11ASTNodeKindE'/>
<use f='llvm/clang/lib/ASTMatchers/ASTMatchersInternal.cpp' l='303' u='m' c='_ZNK5clang12ast_matchers8internal15DynTypedMatcher7matchesERKNS_12DynTypedNodeEPNS1_14ASTMatchFinderEPNS1_21BoundNodesTreeBuilderE'/>
