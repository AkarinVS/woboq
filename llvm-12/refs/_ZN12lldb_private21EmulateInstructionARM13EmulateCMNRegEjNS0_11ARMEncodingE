<dec f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.h' l='657' type='bool lldb_private::EmulateInstructionARM::EmulateCMNReg(const uint32_t opcode, const lldb_private::EmulateInstructionARM::ARMEncoding encoding)'/>
<def f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='3338' ll='3400' type='bool lldb_private::EmulateInstructionARM::EmulateCMNReg(const uint32_t opcode, const lldb_private::EmulateInstructionARM::ARMEncoding encoding)'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='13038' u='a' c='_ZN12lldb_private21EmulateInstructionARM26GetARMOpcodeForInstructionEjj'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='13495' u='a' c='_ZN12lldb_private21EmulateInstructionARM28GetThumbOpcodeForInstructionEjj'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='13497' u='a' c='_ZN12lldb_private21EmulateInstructionARM28GetThumbOpcodeForInstructionEjj'/>
<doc f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='3335'>// Compare Negative (register) adds a register value and an optionally-shifted
// register value. It updates the condition flags based on the result, and
// discards the result.</doc>
<doc f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.h' l='656'>// A8.6.33 CMN (register)</doc>
