<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='408' ll='412' type='llvm::MachineInstr * llvm::TargetInstrInfo::convertToThreeAddress(MachineFunction::iterator &amp; MFI, llvm::MachineInstr &amp; MI, llvm::LiveVariables * LV) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='398'>/// This method must be implemented by targets that
  /// set the M_CONVERTIBLE_TO_3_ADDR flag.  When this flag is set, the target
  /// may be able to convert a two-address instruction into one or more true
  /// three-address instructions on demand.  This allows the X86 target (for
  /// example) to convert ADD and SHL instructions into LEA instructions if they
  /// would require register copies due to two-addressness.
  ///
  /// This method returns a null pointer if the transformation cannot be
  /// performed, otherwise it returns the last new instruction.
  ///</doc>
<use f='llvm/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp' l='590' u='c' c='_ZN12_GLOBAL__N_125TwoAddressInstructionPass18convertInstTo3AddrERN4llvm26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEES5_NS1_8RegisterES6_j'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='2980' c='_ZNK4llvm11SIInstrInfo21convertToThreeAddressERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_17MachineBasicBlockELb0ELb0EvEELb0ELb0EEERNS_12M1961135'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='176' c='_ZNK4llvm16ARMBaseInstrInfo21convertToThreeAddressERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_17MachineBasicBlockELb0ELb0EvEELb0ELb0EEERN6036177'/>
<ovr f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='945' c='_ZNK4llvm16SystemZInstrInfo21convertToThreeAddressERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_17MachineBasicBlockELb0ELb0EvEELb0ELb0EEERN690392'/>
<ovr f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='1376' c='_ZNK4llvm12X86InstrInfo21convertToThreeAddressERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_17MachineBasicBlockELb0ELb0EvEELb0ELb0EEERNS_1210476418'/>
