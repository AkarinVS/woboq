<def f='llvm/polly/lib/External/isl/isl_scheduler.c' l='361' ll='396'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='377'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='400' c='graph_init_table'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='428' c='graph_find_node'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='449' c='is_node'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='466' c='graph_edge_table_add'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='488' c='graph_edge_tables_add'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='505' c='graph_init_edge_tables'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='524' c='graph_find_edge_entry'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='545' c='graph_find_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='564' c='graph_has_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='590' c='graph_find_matching_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='615' c='graph_remove_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='640' c='graph_has_any_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='666' c='graph_has_validity_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='682' c='graph_alloc'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='715' c='clear_node'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='733' c='graph_free'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='765' c='init_n_maxvar'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='785' c='compute_max_row'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1193' c='add_node'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1263' c='extract_node'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1299'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1416' c='find_domain_node'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1432' c='find_range_node'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1484' c='extract_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1561' c='graph_init'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1635' c='node_follows_weak'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1648' c='node_follows_strong'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1656' c='detect_ccs'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1688' c='detect_sccs'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1698' c='detect_wccs'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1706' c='cmp_scc'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1715' c='sort_sccs'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1838' c='intra_coefficients'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='1886' c='inter_coefficients'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2002' c='intra_dim_map'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2042' c='inter_dim_map'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2109' c='add_intra_validity_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2146' c='add_inter_validity_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2223' c='add_intra_proximity_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2302' c='add_inter_proximity_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2356' c='add_all_validity_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2402' c='add_all_proximity_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2588' c='count_map_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2639' c='count_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2664' c='count_bound_constant_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2681' c='add_bound_constant_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2718' c='count_bound_coefficient_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2763' c='node_add_coefficient_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2832' c='add_bound_coefficient_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2855' c='add_sum_constraint'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2879' c='add_param_sum_constraint'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2907' c='add_var_sum_constraint'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='2963' c='setup_lp'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3028' c='check_conflict'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3062' c='needs_row'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3110' c='solve_lp'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3176' c='update_schedule'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3390' c='update_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3502' c='unconditionalize_adjacent_validity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3554' c='update_edges'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3605' c='next_band'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3614' c='isl_sched_graph_domain'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3646' c='extract_sccs'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3666' c='extract_split'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3685' c='copy_nodes'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3686' c='copy_nodes'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3733' c='copy_edges'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3734' c='copy_edges'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3797' c='compute_maxvar'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3820' c='extract_sub_graph'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3823' c='extract_sub_graph'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3856' c='compute_schedule'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3858' c='compute_schedule_wcc'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3873' c='compute_sub_schedule'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3878' c='compute_sub_schedule'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3913' c='reset_band'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='3952' c='compute_split_schedule'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4002' c='insert_current_band'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4053' c='compute_next_band'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4089' c='add_intra_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4134' c='add_inter_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4211' c='graph_find_compressed_node'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4253'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4320' c='add_all_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4408' c='setup_carry_lp'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4465' c='compute_component_schedule'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4485' c='split_scaled'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4591' c='is_any_trivial'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4779' c='non_neg_lexmin'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4895'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='4929' c='union_drop_coalescing_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5125' c='collect_validity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5186' c='collect_intra_validity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5236' c='collect_inter_validity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5268' c='compute_carrying_sol_coef'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5307' c='compute_carrying_sol'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5381' c='carry'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5424' c='carry_fallback'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5436' c='carry_feautrier'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5446' c='carry_dependences'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5457' c='carry_coincidence'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5475' c='sort_statements'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5517' c='has_validity_edges'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5540' c='need_feautrier_step'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5560' c='compute_schedule_wcc_feautrier'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5567' c='clear_local_edges'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5578' c='need_condition_check'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5596' c='has_any_coincidence'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5627' c='is_violated'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5658' c='has_adjacent_true_conditions'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5711' c='has_violated_conditional_constraint'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5791' c='compute_schedule_finish_band'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5857' c='compute_schedule_wcc_band'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5926' c='compute_schedule_wcc_whole'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5963'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5964'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5979' c='clustering_init'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5984' c='clustering_init'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5984' c='clustering_init'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5985' c='clustering_init'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='5985' c='clustering_init'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6031' c='bad_cluster'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6061' c='find_proximity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6108'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6126' c='cluster_follows'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6161' c='mark_merge_sccs'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6218' c='cluster_space'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6242' c='collect_domain'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6269' c='collect_cluster_map'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6419' c='collect_constraints'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6449' c='init_merge_graph'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6450' c='init_merge_graph'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6489' c='compute_maxvar_max_slack'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6529' c='limit_maxvar_to_slack'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6571' c='adjust_maxvar_to_slack'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6595' c='get_n_coincident'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6615' c='ok_to_merge_coincident'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6651' c='extract_node_transformation'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6780' c='has_bounded_distances'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6781' c='has_bounded_distances'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6848' c='ok_to_merge_proximity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6849' c='ok_to_merge_proximity'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6893' c='ok_to_merge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6894' c='ok_to_merge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='6964' c='transform'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7009' c='merge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7070' c='try_merge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7073' c='try_merge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7109' c='any_no_merge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7151' c='merge_clusters_along_edge'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7217' c='copy_partial'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7249' c='node_follows_strong_or_same_cluster'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7271' c='extract_clusters'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7315' c='compute_weights'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7384' c='finish_bands_clustering'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7429' c='compute_schedule_wcc_clustering'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7481' c='compute_schedule_wcc'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7523' c='compute_component_schedule'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7571' c='compute_schedule'/>
<use f='llvm/polly/lib/External/isl/isl_scheduler.c' l='7612' c='isl_schedule_constraints_compute_schedule'/>
<size>192</size>
<doc f='llvm/polly/lib/External/isl/isl_scheduler.c' l='304'>/* Internal information about the dependence graph used during
 * the construction of the schedule.
 *
 * intra_hmap is a cache, mapping dependence relations to their dual,
 *	for dependences from a node to itself, possibly without
 *	coefficients for the parameters
 * intra_hmap_param is a cache, mapping dependence relations to their dual,
 *	for dependences from a node to itself, including coefficients
 *	for the parameters
 * inter_hmap is a cache, mapping dependence relations to their dual,
 *	for dependences between distinct nodes
 * if compression is involved then the key for these maps
 * is the original, uncompressed dependence relation, while
 * the value is the dual of the compressed dependence relation.
 *
 * n is the number of nodes
 * node is the list of nodes
 * maxvar is the maximal number of variables over all nodes
 * max_row is the allocated number of rows in the schedule
 * n_row is the current (maximal) number of linearly independent
 *	rows in the node schedules
 * n_total_row is the current number of rows in the node schedules
 * band_start is the starting row in the node schedules of the current band
 * root is set to the original dependence graph from which this graph
 *	is derived through splitting.  If this graph is not the result of
 *	splitting, then the root field points to the graph itself.
 *
 * sorted contains a list of node indices sorted according to the
 *	SCC to which a node belongs
 *
 * n_edge is the number of edges
 * edge is the list of edges
 * max_edge contains the maximal number of edges of each type;
 *	in particular, it contains the number of edges in the inital graph.
 * edge_table contains pointers into the edge array, hashed on the source
 *	and sink spaces; there is one such table for each type;
 *	a given edge may be referenced from more than one table
 *	if the corresponding relation appears in more than one of the
 *	sets of dependences; however, for each type there is only
 *	a single edge between a given pair of source and sink space
 *	in the entire graph
 *
 * node_table contains pointers into the node array, hashed on the space tuples
 *
 * region contains a list of variable sequences that should be non-trivial
 *
 * lp contains the (I)LP problem used to obtain new schedule rows
 *
 * src_scc and dst_scc are the source and sink SCCs of an edge with
 *	conflicting constraints
 *
 * scc represents the number of components
 * weak is set if the components are weakly connected
 *
 * max_weight is used during clustering and represents the maximal
 * weight of the relevant proximity edges.
 */</doc>
