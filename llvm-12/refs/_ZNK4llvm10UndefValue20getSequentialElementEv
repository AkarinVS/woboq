<dec f='llvm/llvm/include/llvm/IR/Constants.h' l='1371' type='llvm::UndefValue * llvm::UndefValue::getSequentialElement() const'/>
<doc f='llvm/llvm/include/llvm/IR/Constants.h' l='1369'>/// If this Undef has array or vector type, return a undef with the right
  /// element type.</doc>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='1086' ll='1090' type='llvm::UndefValue * llvm::UndefValue::getSequentialElement() const'/>
<use f='llvm/llvm/lib/IR/Constants.cpp' l='1098' u='c' c='_ZNK4llvm10UndefValue15getElementValueEPNS_8ConstantE'/>
<use f='llvm/llvm/lib/IR/Constants.cpp' l='1104' u='c' c='_ZNK4llvm10UndefValue15getElementValueEj'/>
<doc f='llvm/llvm/lib/IR/Constants.cpp' l='1082'>//===----------------------------------------------------------------------===//
//                         UndefValue Implementation
//===----------------------------------------------------------------------===//</doc>
