<def f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='1887' ll='1904' type='bool llvm::slpvectorizer::BoUpSLP::isAliased(const llvm::MemoryLocation &amp; Loc1, llvm::Instruction * Inst1, llvm::Instruction * Inst2)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='5407' u='c' c='_ZN4llvm13slpvectorizer7BoUpSLP15BlockScheduling21calculateDependenciesEPNS1_12ScheduleDataEbPS1_'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='1883'>/// Checks if two instructions may access the same memory.
  ///
  /// \p Loc1 is the location of \p Inst1. It is passed explicitly because it
  /// is invariant in the calling loop.</doc>
