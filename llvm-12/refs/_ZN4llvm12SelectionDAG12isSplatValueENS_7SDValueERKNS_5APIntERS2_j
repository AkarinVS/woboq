<dec f='llvm/llvm/include/llvm/CodeGen/SelectionDAG.h' l='1839' type='bool llvm::SelectionDAG::isSplatValue(llvm::SDValue V, const llvm::APInt &amp; DemandedElts, llvm::APInt &amp; UndefElts, unsigned int Depth = 0)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/SelectionDAG.h' l='1832'>/// Test whether \p V has a splatted value for all the demanded elements.
  ///
  /// On success \p UndefElts will indicate the elements that have UNDEF
  /// values instead of the splat value, this is only guaranteed to be correct
  /// for \p DemandedElts.
  ///
  /// NOTE: The function will return true for a demanded splat of UNDEF values.</doc>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='2412' ll='2511' type='bool llvm::SelectionDAG::isSplatValue(llvm::SDValue V, const llvm::APInt &amp; DemandedElts, llvm::APInt &amp; UndefElts, unsigned int Depth = 0)'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='2437' u='c' c='_ZN4llvm12SelectionDAG12isSplatValueENS_7SDValueERKNS_5APIntERS2_j'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='2438' u='c' c='_ZN4llvm12SelectionDAG12isSplatValueENS_7SDValueERKNS_5APIntERS2_j'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='2447' u='c' c='_ZN4llvm12SelectionDAG12isSplatValueENS_7SDValueERKNS_5APIntERS2_j'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='2502' u='c' c='_ZN4llvm12SelectionDAG12isSplatValueENS_7SDValueERKNS_5APIntERS2_j'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='2524' u='c' c='_ZN4llvm12SelectionDAG12isSplatValueENS_7SDValueEb'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='2541' u='c' c='_ZN4llvm12SelectionDAG20getSplatSourceVectorENS_7SDValueERi'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='2408'>/// isSplatValue - Return true if the vector V has the same value
/// across all DemandedElts. For scalable vectors it does not make
/// sense to specify which elements are demanded or undefined, therefore
/// they are simply ignored.</doc>
<use f='llvm/llvm/unittests/CodeGen/AArch64SelectionDAGTest.cpp' l='313' u='c' c='_ZN4llvm60AArch64SelectionDAGTest_isSplatValue_Fixed_BUILD_VECTOR_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/AArch64SelectionDAGTest.cpp' l='317' u='c' c='_ZN4llvm60AArch64SelectionDAGTest_isSplatValue_Fixed_BUILD_VECTOR_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/AArch64SelectionDAGTest.cpp' l='340' u='c' c='_ZN4llvm67AArch64SelectionDAGTest_isSplatValue_Fixed_ADD_of_BUILD_VECTOR_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/AArch64SelectionDAGTest.cpp' l='344' u='c' c='_ZN4llvm67AArch64SelectionDAGTest_isSplatValue_Fixed_ADD_of_BUILD_VECTOR_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/AArch64SelectionDAGTest.cpp' l='363' u='c' c='_ZN4llvm63AArch64SelectionDAGTest_isSplatValue_Scalable_SPLAT_VECTOR_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/AArch64SelectionDAGTest.cpp' l='367' u='c' c='_ZN4llvm63AArch64SelectionDAGTest_isSplatValue_Scalable_SPLAT_VECTOR_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/AArch64SelectionDAGTest.cpp' l='390' u='c' c='_ZN4llvm70AArch64SelectionDAGTest_isSplatValue_Scalable_ADD_of_SPLAT_VECTOR_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/AArch64SelectionDAGTest.cpp' l='394' u='c' c='_ZN4llvm70AArch64SelectionDAGTest_isSplatValue_Scalable_ADD_of_SPLAT_VECTOR_Test8TestBodyEv'/>
