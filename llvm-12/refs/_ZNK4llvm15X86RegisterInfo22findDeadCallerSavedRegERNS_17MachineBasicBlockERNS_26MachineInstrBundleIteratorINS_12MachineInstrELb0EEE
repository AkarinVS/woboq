<dec f='llvm/llvm/lib/Target/X86/X86RegisterInfo.h' l='131' type='unsigned int llvm::X86RegisterInfo::findDeadCallerSavedReg(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator &amp; MBBI) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86RegisterInfo.h' l='128'>/// findDeadCallerSavedReg - Return a caller-saved register that isn&apos;t live
  /// when it reaches the &quot;return&quot; instruction. We can then pop a stack object
  /// to this register without worry about clobbering it.</doc>
<use f='llvm/llvm/lib/Target/X86/X86FrameLowering.cpp' l='238' u='c' c='_ZNK4llvm16X86FrameLowering12emitSPUpdateERNS_17MachineBasicBlockERNS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEERKNS_8DebugLocElb'/>
<use f='llvm/llvm/lib/Target/X86/X86FrameLowering.cpp' l='295' u='c' c='_ZNK4llvm16X86FrameLowering12emitSPUpdateERNS_17MachineBasicBlockERNS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEERKNS_8DebugLocElb'/>
<use f='llvm/llvm/lib/Target/X86/X86LoadValueInjectionRetHardening.cpp' l='82' u='c' c='_ZN12_GLOBAL__N_137X86LoadValueInjectionRetHardeningPass20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<def f='llvm/llvm/lib/Target/X86/X86RegisterInfo.cpp' l='789' ll='836' type='unsigned int llvm::X86RegisterInfo::findDeadCallerSavedReg(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator &amp; MBBI) const'/>
