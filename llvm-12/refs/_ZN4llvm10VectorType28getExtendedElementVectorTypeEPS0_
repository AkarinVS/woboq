<def f='llvm/llvm/include/llvm/IR/DerivedTypes.h' l='460' ll='464' type='static llvm::VectorType * llvm::VectorType::getExtendedElementVectorType(llvm::VectorType * VTy)'/>
<use f='llvm/llvm/include/llvm/IR/DerivedTypes.h' l='568' u='c' c='_ZN4llvm15FixedVectorType28getExtendedElementVectorTypeEPS0_'/>
<use f='llvm/llvm/include/llvm/IR/DerivedTypes.h' l='618' u='c' c='_ZN4llvm18ScalableVectorType28getExtendedElementVectorTypeEPS0_'/>
<use f='llvm/llvm/include/llvm/IR/DerivedTypes.h' l='699' u='c' c='_ZNK4llvm4Type15getExtendedTypeEv'/>
<doc f='llvm/llvm/include/llvm/IR/DerivedTypes.h' l='458'>/// This static method is like getInteger except that the element types are
  /// twice as wide as the elements in the input type.</doc>
<use f='llvm/llvm/lib/IR/Function.cpp' l='1146' u='c' c='_ZL15DecodeFixedTypeRN4llvm8ArrayRefINS_9Intrinsic13IITDescriptorEEENS0_IPNS_4TypeEEERNS_11LLVMContextE'/>
<use f='llvm/llvm/lib/IR/Function.cpp' l='1363' u='c' c='_ZL18matchIntrinsicTypePN4llvm4TypeERNS_8ArrayRefINS_9Intrinsic13IITDescriptorEEERNS_15SmallVectorImplIS1_EERNS7_ISt4pairIS1_S5_EEEb'/>
<use f='llvm/llvm/unittests/IR/VectorTypesTest.cpp' l='93' u='c' c='_ZN12_GLOBAL__N_132VectorTypesTest_FixedLength_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/VectorTypesTest.cpp' l='188' u='c' c='_ZN12_GLOBAL__N_129VectorTypesTest_Scalable_Test8TestBodyEv'/>
