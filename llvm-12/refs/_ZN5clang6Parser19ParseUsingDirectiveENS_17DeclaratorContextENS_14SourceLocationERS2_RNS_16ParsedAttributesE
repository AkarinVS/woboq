<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2965' type='clang::Decl * clang::Parser::ParseUsingDirective(clang::DeclaratorContext Context, clang::SourceLocation UsingLoc, clang::SourceLocation &amp; DeclEnd, clang::ParsedAttributes &amp; attrs)'/>
<use f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='495' u='c' c='_ZN5clang6Parser32ParseUsingDirectiveOrDeclarationENS_17DeclaratorContextERKNS0_18ParsedTemplateInfoERNS_14SourceLocationERNS0_25ParsedAttributesWithRangeE'/>
<def f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='518' ll='582' type='clang::Decl * clang::Parser::ParseUsingDirective(clang::DeclaratorContext Context, clang::SourceLocation UsingLoc, clang::SourceLocation &amp; DeclEnd, clang::ParsedAttributes &amp; attrs)'/>
<doc f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='508'>/// ParseUsingDirective - Parse C++ using-directive, assumes
/// that current token is &apos;namespace&apos; and &apos;using&apos; was already parsed.
///
///       using-directive: [C++ 7.3.p4: namespace.udir]
///        &apos;using&apos; &apos;namespace&apos; ::[opt] nested-name-specifier[opt]
///                 namespace-name ;
/// [GNU] using-directive:
///        &apos;using&apos; &apos;namespace&apos; ::[opt] nested-name-specifier[opt]
///                 namespace-name attributes[opt] ;
///</doc>
