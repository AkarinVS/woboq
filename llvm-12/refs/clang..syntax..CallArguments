<use f='llvm/build/tools/clang/include/clang/Tooling/Syntax/NodeClasses.inc' l='116' c='_ZN5clang6syntax14CallExpression12getArgumentsEv'/>
<use f='llvm/build/tools/clang/include/clang/Tooling/Syntax/NodeClasses.inc' l='117' c='_ZN5clang6syntax14CallExpression12getArgumentsEv'/>
<use f='llvm/build/tools/clang/include/clang/Tooling/Syntax/NodeClasses.inc' l='119' c='_ZNK5clang6syntax14CallExpression12getArgumentsEv'/>
<use f='llvm/build/tools/clang/include/clang/Tooling/Syntax/NodeClasses.inc' l='120' c='_ZNK5clang6syntax14CallExpression12getArgumentsEv'/>
<inh f='llvm/clang/include/clang/Tooling/Syntax/Tree.h' l='284' c='clang::syntax::List'/>
<def f='llvm/clang/include/clang/Tooling/Syntax/Nodes.h' l='151' ll='157'/>
<use f='llvm/clang/lib/Tooling/Syntax/BuildTree.cpp' l='1164' c='_ZN12_GLOBAL__N_116BuildTreeVisitor18buildCallArgumentsEN4llvm14iterator_rangeIN5clang4Stmt12CastIteratorINS3_4ExprEPS6_PS4_EEEE'/>
<use f='llvm/clang/lib/Tooling/Syntax/BuildTree.cpp' l='1175' c='_ZN12_GLOBAL__N_116BuildTreeVisitor18buildCallArgumentsEN4llvm14iterator_rangeIN5clang4Stmt12CastIteratorINS3_4ExprEPS6_PS4_EEEE'/>
<size>48</size>
<doc f='llvm/clang/include/clang/Tooling/Syntax/Nodes.h' l='146'>/// Models arguments of a function call.
///   call-arguments:
///     delimited_list(expression, &apos;,&apos;)
/// Note: This construct is a simplification of the grammar rule for
/// `expression-list`, that is used in the definition of `call-expression`</doc>
<fun r='_ZN5clang6syntax13CallArgumentsC1Ev'/>
<fun r='_ZN5clang6syntax13CallArguments7classofEPKNS0_4NodeE'/>
<fun r='_ZN5clang6syntax13CallArguments12getArgumentsEv'/>
<fun r='_ZN5clang6syntax13CallArguments21getArgumentsAndCommasEv'/>
<fun r='_ZN5clang6syntax13CallArguments7classofEPKNS0_4NodeE'/>
<use f='llvm/clang/lib/Tooling/Syntax/Synthesis.cpp' l='187' c='_ZN12_GLOBAL__N_112allocateTreeERN5clang6syntax5ArenaENS1_8NodeKindE'/>
<size>48</size>
