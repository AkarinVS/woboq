<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='671' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildZExt(const llvm::DstOp &amp; Res, const llvm::SrcOp &amp; Op)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='659'>/// Build and insert \p Res = G_ZEXT \p Op
  ///
  /// G_ZEXT produces a register of the specified width, with bits 0 to
  /// sizeof(\p Ty) * 8 set to \p Op. The remaining bits are 0. For a vector
  /// register, each element is extended individually.
  ///
  /// \pre setBasicBlock or setMI must have been called.
  /// \pre \p Res must be a generic virtual register with scalar or vector type.
  /// \pre \p Op must be a generic virtual register with scalar or vector type.
  /// \pre \p Op must be smaller than \p Res
  ///
  /// \return The newly created instruction.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/CallLowering.cpp' l='756' u='c' c='_ZN4llvm12CallLowering12ValueHandler14extendRegisterENS_8RegisterERNS_11CCValAssignEj'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp' l='1870' u='c' c='_ZN4llvm14CombinerHelper23applyCombineShlOfExtendERNS_12MachineInstrERKNS_15RegisterImmPairE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp' l='2053' u='c' c='_ZN4llvm14CombinerHelper29applyCombineUnmergeZExtToZExtERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='974' u='c' c='_ZN4llvm15LegalizerHelper12narrowScalarERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='1414' u='c' c='_ZN4llvm15LegalizerHelper22widenScalarMergeValuesERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='1422' u='c' c='_ZN4llvm15LegalizerHelper22widenScalarMergeValuesERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='1818' u='c' c='_ZN4llvm15LegalizerHelper23widenScalarAddSubShlSatERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='1877' u='c' c='_ZN4llvm15LegalizerHelper11widenScalarERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='2574' u='c' c='_ZL19buildBitFieldInsertRN4llvm16MachineIRBuilderENS_8RegisterES2_S2_'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='2742' u='c' c='_ZN4llvm15LegalizerHelper9lowerLoadERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='3018' u='c' c='_ZN4llvm15LegalizerHelper5lowerERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='3047' u='c' c='_ZN4llvm15LegalizerHelper5lowerERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='4443' u='c' c='_ZN4llvm15LegalizerHelper17multiplyRegistersERNS_15SmallVectorImplINS_8RegisterEEENS_8ArrayRefIS2_EES6_NS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='4448' u='c' c='_ZN4llvm15LegalizerHelper17multiplyRegistersERNS_15SmallVectorImplINS_8RegisterEEENS_8ArrayRefIS2_EES6_NS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='5222' u='c' c='_ZN4llvm15LegalizerHelper11lowerFPTOSIERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='5289' u='c' c='_ZN4llvm15LegalizerHelper23lowerFPTRUNC_F64_TO_F16ERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='5318' u='c' c='_ZN4llvm15LegalizerHelper23lowerFPTRUNC_F64_TO_F16ERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='5329' u='c' c='_ZN4llvm15LegalizerHelper23lowerFPTRUNC_F64_TO_F16ERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='5333' u='c' c='_ZN4llvm15LegalizerHelper23lowerFPTRUNC_F64_TO_F16ERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='5445' u='c' c='_ZN4llvm15LegalizerHelper14lowerFCopySignERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='5581' u='c' c='_ZN4llvm15LegalizerHelper16lowerMergeValuesERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='5587' u='c' c='_ZN4llvm15LegalizerHelper16lowerMergeValuesERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='5867' u='c' c='_ZN4llvm15LegalizerHelper11lowerInsertERNS_12MachineInstrE'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='414' ll='417' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildZExt(const llvm::DstOp &amp; Res, const llvm::SrcOp &amp; Op)'/>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64CallLowering.cpp' l='315' u='c' c='_ZNK4llvm19AArch64CallLowering11lowerReturnERNS_16MachineIRBuilderEPKNS_5ValueENS_8ArrayRefINS_8RegisterEEERNS_20FunctionLoweringInfoES7_'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='2180' u='c' c='_ZNK4llvm22AMDGPURegisterBankInfo16applyMappingImplERKNS_16RegisterBankInfo14OperandsMapperE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='2214' u='c' c='_ZNK4llvm22AMDGPURegisterBankInfo16applyMappingImplERKNS_16RegisterBankInfo14OperandsMapperE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='2266' u='c' c='_ZNK4llvm22AMDGPURegisterBankInfo16applyMappingImplERKNS_16RegisterBankInfo14OperandsMapperE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='2635' u='c' c='_ZNK4llvm22AMDGPURegisterBankInfo16applyMappingImplERKNS_16RegisterBankInfo14OperandsMapperE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='2638' u='c' c='_ZNK4llvm22AMDGPURegisterBankInfo16applyMappingImplERKNS_16RegisterBankInfo14OperandsMapperE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsCallLowering.cpp' l='298' u='c' c='_ZN12_GLOBAL__N_124MipsOutgoingValueHandler14extendRegisterEN4llvm8RegisterERKNS1_11CCValAssignE'/>
<use f='llvm/llvm/unittests/CodeGen/GlobalISel/PatternMatchTest.cpp' l='280' u='c' c='_ZN12_GLOBAL__N_141AArch64GISelMITest_MatchExtendsTrunc_Test8TestBodyEv'/>
