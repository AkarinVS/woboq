<dec f='llvm/lldb/include/lldb/Symbol/SymbolContext.h' l='265' type='bool lldb_private::SymbolContext::GetFunctionMethodInfo(lldb::LanguageType &amp; language, bool &amp; is_instance_method, lldb_private::ConstString &amp; language_object_name)'/>
<doc f='llvm/lldb/include/lldb/Symbol/SymbolContext.h' l='248'>/// If this symbol context represents a function that is a method, return
  /// true and provide information about the method.
  ///
  /// \param[out] language
  ///     If \b true is returned, the language for the method.
  ///
  /// \param[out] is_instance_method
  ///     If \b true is returned, \b true if this is a instance method,
  ///     \b false if this is a static/class function.
  ///
  /// \param[out] language_object_name
  ///     If \b true is returned, the name of the artificial variable
  ///     for the language (&quot;this&quot; for C++, &quot;self&quot; for ObjC).
  ///
  /// \return
  ///     \b True if this symbol context represents a function that
  ///     is a method of a class, \b false otherwise.</doc>
<def f='llvm/lldb/source/Symbol/SymbolContext.cpp' l='548' ll='561' type='bool lldb_private::SymbolContext::GetFunctionMethodInfo(lldb::LanguageType &amp; language, bool &amp; is_instance_method, lldb_private::ConstString &amp; language_object_name)'/>
<use f='llvm/lldb/source/Target/StackFrame.cpp' l='553' u='c' c='_ZN12lldb_private10StackFrame33GetValueForVariableExpressionPathEN4llvm9StringRefEN4lldb16DynamicValueTypeEjRSt10shared_ptrINS_8VariableEERNS_6StatusE'/>
