<dec f='llvm/llvm/include/llvm/Analysis/MemorySSAUpdater.h' l='257' type='void llvm::MemorySSAUpdater::moveAllAccesses(llvm::BasicBlock * From, llvm::BasicBlock * To, llvm::Instruction * Start)'/>
<doc f='llvm/llvm/include/llvm/Analysis/MemorySSAUpdater.h' l='255'>// Move all memory accesses from `From` to `To` starting at `Start`.
  // Restrictions apply, see public wrappers of this method.</doc>
<def f='llvm/llvm/lib/Analysis/MemorySSAUpdater.cpp' l='1215' ll='1248' type='void llvm::MemorySSAUpdater::moveAllAccesses(llvm::BasicBlock * From, llvm::BasicBlock * To, llvm::Instruction * Start)'/>
<use f='llvm/llvm/lib/Analysis/MemorySSAUpdater.cpp' l='1255' u='c' c='_ZN4llvm16MemorySSAUpdater24moveAllAfterSpliceBlocksEPNS_10BasicBlockES2_PNS_11InstructionE'/>
<use f='llvm/llvm/lib/Analysis/MemorySSAUpdater.cpp' l='1265' u='c' c='_ZN4llvm16MemorySSAUpdater23moveAllAfterMergeBlocksEPNS_10BasicBlockES2_PNS_11InstructionE'/>
<doc f='llvm/llvm/lib/Analysis/MemorySSAUpdater.cpp' l='1214'>// All accesses in To used to be in From. Move to end and update access lists.</doc>
