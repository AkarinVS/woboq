<dec f='llvm/lldb/include/lldb/Host/File.h' l='86' type='lldb_private::Status lldb_private::File::Read(void * buf, size_t &amp; num_bytes)'/>
<doc f='llvm/lldb/include/lldb/Host/File.h' l='73'>/// Read bytes from a file from the current file position into buf.
  ///
  /// NOTE: This function is NOT thread safe. Use the read function
  /// that takes an &quot;off_t &amp;offset&quot; to ensure correct operation in multi-
  /// threaded environments.
  ///
  /// \param[in,out] num_bytes
  ///    Pass in the size of buf.  Read will pass out the number
  ///    of bytes read.   Zero bytes read with no error indicates
  ///    EOF.
  ///
  /// \return
  ///    success, ENOTSUP, or another error.</doc>
<use f='llvm/lldb/source/API/SBFile.cpp' l='68' u='c' c='_ZN4lldb6SBFile4ReadEPhmPm'/>
<use f='llvm/lldb/source/Core/IOHandler.cpp' l='375' u='c' c='_ZN12lldb_private17IOHandlerEditline7GetLineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERb'/>
<inh f='llvm/lldb/include/lldb/Utility/IOObject.h' l='35' c='_ZN12lldb_private8IOObject4ReadEPvRm'/>
<def f='llvm/lldb/source/Host/common/File.cpp' l='100' ll='102' type='lldb_private::Status lldb_private::File::Read(void * buf, size_t &amp; num_bytes)'/>
<ovr f='llvm/lldb/source/Host/common/File.cpp' l='480' c='_ZN12lldb_private10NativeFile4ReadEPvRm'/>
<use f='llvm/lldb/source/Host/common/FileCache.cpp' l='110' u='c' c='_ZN12lldb_private9FileCache8ReadFileEmmPvmRNS_6StatusE'/>
<ovr f='llvm/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.cpp' l='1320' c='_ZN12_GLOBAL__N_116BinaryPythonFile4ReadEPvRm'/>
<ovr f='llvm/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.cpp' l='1374' c='_ZN12_GLOBAL__N_114TextPythonFile4ReadEPvRm'/>
<use f='llvm/lldb/source/Target/Platform.cpp' l='1256' u='c' c='_ZN12lldb_private8Platform7PutFileERKNS_8FileSpecES3_jj'/>
