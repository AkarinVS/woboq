<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CombinerHelper.h' l='234' type='bool llvm::CombinerHelper::tryCombineMemCpyFamily(llvm::MachineInstr &amp; MI, unsigned int MaxLen = 0)'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp' l='1444' ll='1491' type='bool llvm::CombinerHelper::tryCombineMemCpyFamily(llvm::MachineInstr &amp; MI, unsigned int MaxLen = 0)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CombinerHelper.h' l='204'>/// Optimize memcpy intrinsics et al, e.g. constant len calls.
  /// /p MaxLen if non-zero specifies the max length of a mem libcall to inline.
  ///
  /// For example (pre-indexed):
  ///
  ///     $addr = G_PTR_ADD $base, $offset
  ///     [...]
  ///     $val = G_LOAD $addr
  ///     [...]
  ///     $whatever = COPY $addr
  ///
  /// --&gt;
  ///
  ///     $val, $addr = G_INDEXED_LOAD $base, $offset, 1 (IsPre)
  ///     [...]
  ///     $whatever = COPY $addr
  ///
  /// or (post-indexed):
  ///
  ///     G_STORE $val, $base
  ///     [...]
  ///     $addr = G_PTR_ADD $base, $offset
  ///     [...]
  ///     $whatever = COPY $addr
  ///
  /// --&gt;
  ///
  ///     $addr = G_INDEXED_STORE $val, $base, $offset
  ///     [...]
  ///     $whatever = COPY $addr</doc>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64PreLegalizerCombiner.cpp' l='114' u='c' c='_ZNK12_GLOBAL__N_131AArch64PreLegalizerCombinerInfo7combineERN4llvm19GISelChangeObserverERNS1_12MachineInstrERNS1_16MachineIRBuilderE'/>
