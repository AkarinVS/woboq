<dec f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3202' type='Optional&lt;llvm::Type *&gt; llvm::AAPrivatizablePtr::getPrivatizableType() const'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3200'>/// Return the type we can choose for a private copy of the underlying
  /// value. None means it is not clear yet, nullptr means there is none.</doc>
<ovr f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='5238' c='_ZNK12_GLOBAL__N_121AAPrivatizablePtrImpl19getPrivatizableTypeEv'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='5284' u='c' c='_ZN12_GLOBAL__N_125AAPrivatizablePtrArgument24identifyPrivatizableTypeERN4llvm10AttributorE'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='5403' u='c' c='_ZN12_GLOBAL__N_125AAPrivatizablePtrArgument10updateImplERN4llvm10AttributorE'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='5449' u='c' c='_ZN12_GLOBAL__N_125AAPrivatizablePtrArgument10updateImplERN4llvm10AttributorE'/>
