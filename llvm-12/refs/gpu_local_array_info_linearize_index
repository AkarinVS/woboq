<dec f='llvm/polly/lib/External/ppcg/gpu.h' l='146' type='isl_ast_expr * gpu_local_array_info_linearize_index(struct gpu_local_array_info * array, isl_ast_expr * expr)'/>
<def f='llvm/polly/lib/External/ppcg/gpu.c' l='1736' ll='1786' type='isl_ast_expr * gpu_local_array_info_linearize_index(struct gpu_local_array_info * array, isl_ast_expr * expr)'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='1750' u='c' c='gpu_local_array_info_linearize_index'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='1824' u='c' c='transform_expr'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='1955' u='c' c='create_access_leaf'/>
<doc f='llvm/polly/lib/External/ppcg/gpu.c' l='1701'>/* Linearize the index expression &quot;expr&quot; based on the array bounds
 * of &quot;array&quot;.
 *
 * That is, transform expression
 *
 *	A[i_0][i_1]...[i_n]
 *
 * to
 *
 *	A[(..((i_0 * b_1 + i_1) ... ) * b_n + i_n]
 *
 * where b_0, b_1, ..., b_n are the bounds on the array.
 *
 * If the base of &quot;expr&quot; is a member access, then the linearization needs
 * to be applied to the structure argument of this member access.
 *
 * In the base case, if &quot;expr&quot; has no arguments (other than the name of
 * the array), then we are passing an entire array to a function.
 * In this case, there is nothing to linearize.
 * Note that at this point an expression with no arguments can
 * only be an entire array because the scalar case and
 * the case of single struct are handled by the caller.
 *
 * If the number of specified index expressions in &quot;expr&quot;
 * is smaller than the dimension of the accessed array,
 * then the missing i_j also do not appear in the linearized expression.
 * Furthermore, since such an expression does not refer to a single
 * element while the default linearized expression would refer to
 * a single element, we return the expression
 *
 *	A + (..((i_0 * b_1 + i_1) ... ) * b_l + i_l)
 *
 * instead.  Note that because of the special case handling above,
 * we can assume here that there is at least one index expression.
 */</doc>
