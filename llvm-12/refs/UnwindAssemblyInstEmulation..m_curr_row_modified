<use f='llvm/lldb/source/Plugins/UnwindAssembly/InstEmulation/UnwindAssemblyInstEmulation.h' l='70' u='w' c='_ZN27UnwindAssemblyInstEmulationC1ERKN12lldb_private8ArchSpecEPNS0_18EmulateInstructionE'/>
<dec f='llvm/lldb/source/Plugins/UnwindAssembly/InstEmulation/UnwindAssemblyInstEmulation.h' l='148' type='bool'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/InstEmulation/UnwindAssemblyInstEmulation.cpp' l='142' u='w' c='_ZN27UnwindAssemblyInstEmulation36GetNonCallSiteUnwindPlanFromAssemblyERN12lldb_private12AddressRangeEPhmRNS0_10UnwindPlanE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/InstEmulation/UnwindAssemblyInstEmulation.cpp' l='271' u='r' c='_ZN27UnwindAssemblyInstEmulation36GetNonCallSiteUnwindPlanFromAssemblyERN12lldb_private12AddressRangeEPhmRNS0_10UnwindPlanE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/InstEmulation/UnwindAssemblyInstEmulation.cpp' l='483' u='w' c='_ZN27UnwindAssemblyInstEmulation11WriteMemoryEPN12lldb_private18EmulateInstructionERKNS1_7ContextEmPKvm'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/InstEmulation/UnwindAssemblyInstEmulation.cpp' l='591' u='w' c='_ZN27UnwindAssemblyInstEmulation13WriteRegisterEPN12lldb_private18EmulateInstructionERKNS1_7ContextEPKNS0_12RegisterInfoERKNS0_13RegisterValueE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/InstEmulation/UnwindAssemblyInstEmulation.cpp' l='627' u='w' c='_ZN27UnwindAssemblyInstEmulation13WriteRegisterEPN12lldb_private18EmulateInstructionERKNS1_7ContextEPKNS0_12RegisterInfoERKNS0_13RegisterValueE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/InstEmulation/UnwindAssemblyInstEmulation.cpp' l='638' u='w' c='_ZN27UnwindAssemblyInstEmulation13WriteRegisterEPN12lldb_private18EmulateInstructionERKNS1_7ContextEPKNS0_12RegisterInfoERKNS0_13RegisterValueE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/InstEmulation/UnwindAssemblyInstEmulation.cpp' l='657' u='w' c='_ZN27UnwindAssemblyInstEmulation13WriteRegisterEPN12lldb_private18EmulateInstructionERKNS1_7ContextEPKNS0_12RegisterInfoERKNS0_13RegisterValueE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/InstEmulation/UnwindAssemblyInstEmulation.cpp' l='670' u='w' c='_ZN27UnwindAssemblyInstEmulation13WriteRegisterEPN12lldb_private18EmulateInstructionERKNS1_7ContextEPKNS0_12RegisterInfoERKNS0_13RegisterValueE'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/InstEmulation/UnwindAssemblyInstEmulation.cpp' l='681' u='w' c='_ZN27UnwindAssemblyInstEmulation13WriteRegisterEPN12lldb_private18EmulateInstructionERKNS1_7ContextEPKNS0_12RegisterInfoERKNS0_13RegisterValueE'/>
<offset>2752</offset>
<doc f='llvm/lldb/source/Plugins/UnwindAssembly/InstEmulation/UnwindAssemblyInstEmulation.h' l='141'>// While processing the instruction stream, we need to communicate some state
  // change
  // information up to the higher level loop that makes decisions about how to
  // push
  // the unwind instructions for the UnwindPlan we&apos;re constructing.

  // The instruction we&apos;re processing updated the UnwindPlan::Row contents</doc>
