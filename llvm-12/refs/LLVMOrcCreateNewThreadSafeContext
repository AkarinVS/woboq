<dec f='llvm/llvm/include/llvm-c/Orc.h' l='471' type='LLVMOrcThreadSafeContextRef LLVMOrcCreateNewThreadSafeContext()'/>
<doc f='llvm/llvm/include/llvm-c/Orc.h' l='463'>/**
 * Create a ThreadSafeContext containing a new LLVMContext.
 *
 * Ownership of the underlying ThreadSafeContext data is shared: Clients
 * can and should dispose of their ThreadSafeContext as soon as they no longer
 * need to refer to it directly. Other references (e.g. from ThreadSafeModules)
 * will keep the data alive as long as it is needed.
 */</doc>
<use f='llvm/llvm/examples/OrcV2Examples/OrcV2CBindingsBasicUsage/OrcV2CBindingsBasicUsage.c' l='27' u='c' c='createDemoModule'/>
<use f='llvm/llvm/examples/OrcV2Examples/OrcV2CBindingsReflectProcessSymbols/OrcV2CBindingsReflectProcessSymbols.c' l='50' u='c' c='createDemoModule'/>
<use f='llvm/llvm/examples/OrcV2Examples/OrcV2CBindingsRemovableCode/OrcV2CBindingsRemovableCode.c' l='27' u='c' c='createDemoModule'/>
<def f='llvm/llvm/lib/ExecutionEngine/Orc/OrcV2CBindings.cpp' l='333' ll='335' type='LLVMOrcThreadSafeContextRef LLVMOrcCreateNewThreadSafeContext()'/>
