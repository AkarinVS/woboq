<dec f='llvm/clang/include/clang/Lex/Lexer.h' l='243' type='void clang::Lexer::resetExtendedTokenMode()'/>
<doc f='llvm/clang/include/clang/Lex/Lexer.h' l='237'>/// Sets the extended token mode back to its initial value, according to the
  /// language options and preprocessor. This controls whether the lexer
  /// produces comment and whitespace tokens.
  ///
  /// This requires the lexer to have an associated preprocessor. A standalone
  /// lexer has nothing to reset to.</doc>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='143' u='c' c='_ZN5clang5LexerC1ENS_6FileIDERKN4llvm15MemoryBufferRefERNS_12PreprocessorE'/>
<def f='llvm/clang/lib/Lex/Lexer.cpp' l='166' ll='172' type='void clang::Lexer::resetExtendedTokenMode()'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='2750' u='c' c='_ZN5clang5Lexer12LexEndOfFileERNS_5TokenEPKc'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='3285' u='c' c='_ZN5clang5Lexer16LexTokenInternalERNS_5TokenEb'/>
<use f='llvm/clang/lib/Lex/PPDirectives.cpp' l='480' u='c' c='_ZN5clang12Preprocessor28SkipExcludedConditionalBlockENS_14SourceLocationES1_bbS1_'/>
<use f='llvm/clang/lib/Lex/PPDirectives.cpp' l='496' u='c' c='_ZN5clang12Preprocessor28SkipExcludedConditionalBlockENS_14SourceLocationES1_bbS1_'/>
<use f='llvm/clang/lib/Lex/PPDirectives.cpp' l='513' u='c' c='_ZN5clang12Preprocessor28SkipExcludedConditionalBlockENS_14SourceLocationES1_bbS1_'/>
<use f='llvm/clang/lib/Lex/PPDirectives.cpp' l='617' u='c' c='_ZN5clang12Preprocessor28SkipExcludedConditionalBlockENS_14SourceLocationES1_bbS1_'/>
