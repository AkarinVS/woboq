<dec f='llvm/llvm/include/llvm/Analysis/AssumeBundleQueries.h' l='136' type='bool llvm::isAssumeWithEmptyBundle(llvm::CallInst &amp; Assume)'/>
<doc f='llvm/llvm/include/llvm/Analysis/AssumeBundleQueries.h' l='128'>/// Return true iff the operand bundles of the provided llvm.assume doesn&apos;t
/// contain any valuable information. This is true when:
///  - The operand bundle is empty
///  - The operand bundle only contains information about dropped values or
///    constant folded values.
///
/// the argument to the call of llvm.assume may still be useful even if the
/// function returned true.</doc>
<def f='llvm/llvm/lib/Analysis/AssumeBundleQueries.cpp' l='134' ll='142' type='bool llvm::isAssumeWithEmptyBundle(llvm::CallInst &amp; CI)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='1548' u='c' c='_ZN4llvm16InstCombinerImpl13visitCallInstERNS_8CallInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='1638' u='c' c='_ZN4llvm3GVN22processAssumeIntrinsicEPNS_13IntrinsicInstE'/>
<use f='llvm/llvm/lib/Transforms/Utils/AssumeBundleBuilder.cpp' l='347' u='c' c='_ZN12_GLOBAL__N_114AssumeSimplify10RunCleanupEb'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='459' u='c' c='_ZN4llvm31wouldInstructionBeTriviallyDeadEPNS_11InstructionEPKNS_17TargetLibraryInfoE'/>
