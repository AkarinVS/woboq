<dec f='llvm/lldb/include/lldb/Target/Process.h' l='644' type='lldb_private::UtilityFunction * lldb_private::Process::GetLoadImageUtilityFunction(lldb_private::Platform * platform, llvm::function_ref&lt;std::unique_ptr&lt;UtilityFunction&gt; ()&gt; factory)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='617'>// FUTURE WORK: GetLoadImageUtilityFunction are the first use we&apos;ve
  // had of having other plugins cache data in the Process.  This is handy for
  // long-living plugins - like the Platform - which manage interactions whose
  // lifetime is governed by the Process lifetime.  If we find we need to do
  // this more often, we should construct a general solution to the problem.
  // The consensus suggestion was that we have a token based registry in the
  // Process. Some undecided questions are  (1) who manages the tokens.  It&apos;s
  // probably best that you add the element  and get back a token that
  // represents it.  That will avoid collisions.  But there may be some utility
  // in the registerer controlling the token? (2) whether the thing added
  // should be simply owned by Process, and just go away when it does (3)
  // whether the registree should be notified of the Process&apos; demise.
  //
  // We are postponing designing this till we have at least a second use case.
  /// Get the cached UtilityFunction that assists in loading binary images
  /// into the process.
  ///
  /// \param[in] platform
  ///     The platform fetching the UtilityFunction.
  /// \param[in] factory
  ///     A function that will be called only once per-process in a
  ///     thread-safe way to create the UtilityFunction if it has not
  ///     been initialized yet.
  ///
  /// \return
  ///     The cached utility function or null if the platform is not the
  ///     same as the target&apos;s platform.</doc>
<use f='llvm/lldb/source/Plugins/Platform/POSIX/PlatformPOSIX.cpp' l='717' u='c' c='_ZN13PlatformPOSIX11DoLoadImageEPN12lldb_private7ProcessERKNS0_8FileSpecEPKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_EERNS0_6StatusEPS3_'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='5955' ll='5963' type='lldb_private::UtilityFunction * lldb_private::Process::GetLoadImageUtilityFunction(lldb_private::Platform * platform, llvm::function_ref&lt;std::unique_ptr&lt;UtilityFunction&gt; ()&gt; factory)'/>
