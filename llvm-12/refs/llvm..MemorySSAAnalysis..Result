<def f='llvm/llvm/include/llvm/Analysis/MemorySSA.h' l='930' ll='939'/>
<use f='llvm/llvm/include/llvm/Analysis/MemorySSA.h' l='941' c='_ZN4llvm17MemorySSAAnalysis3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/Analysis/MemorySSA.h' l='927'>// Wrap MemorySSA result to ensure address stability of internal MemorySSA
  // pointers after construction.  Use a wrapper class instead of plain
  // unique_ptr&lt;MemorySSA&gt; to avoid build breakage on MSVC.</doc>
<fun r='_ZN4llvm17MemorySSAAnalysis6ResultC1EOSt10unique_ptrINS_9MemorySSAESt14default_deleteIS3_EE'/>
<fun r='_ZN4llvm17MemorySSAAnalysis6Result7getMSSAEv'/>
<mbr r='llvm::MemorySSAAnalysis::Result::MSSA' o='0' t='std::unique_ptr&lt;MemorySSA&gt;'/>
<fun r='_ZN4llvm17MemorySSAAnalysis6Result10invalidateERNS_8FunctionERKNS_17PreservedAnalysesERNS_15AnalysisManagerIS2_JEE11InvalidatorE'/>
<use f='llvm/llvm/lib/Analysis/MemorySSA.cpp' l='2330' c='_ZN4llvm17MemorySSAAnalysis3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<use f='llvm/llvm/lib/Analysis/MemorySSA.cpp' l='2334' c='_ZN4llvm17MemorySSAAnalysis3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<size>8</size>
<fun r='_ZN4llvm17MemorySSAAnalysis6Result10invalidateERNS_8FunctionERKNS_17PreservedAnalysesERNS_15AnalysisManagerIS2_JEE11InvalidatorE'/>
