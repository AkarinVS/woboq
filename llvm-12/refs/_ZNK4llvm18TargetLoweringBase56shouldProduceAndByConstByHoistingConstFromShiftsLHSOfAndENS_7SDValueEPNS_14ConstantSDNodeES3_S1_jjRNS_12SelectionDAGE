<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='734' ll='757' type='bool llvm::TargetLoweringBase::shouldProduceAndByConstByHoistingConstFromShiftsLHSOfAnd(llvm::SDValue X, llvm::ConstantSDNode * XC, llvm::ConstantSDNode * CC, llvm::SDValue Y, unsigned int OldShiftOpcode, unsigned int NewShiftOpcode, llvm::SelectionDAG &amp; DAG) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='727'>/// Given the pattern
  ///   (X &amp; (C l&gt;&gt;/&lt;&lt; Y)) ==/!= 0
  /// return true if it should be transformed into:
  ///   ((X &lt;&lt;/l&gt;&gt; Y) &amp; C) ==/!= 0
  /// WARNING: if &apos;X&apos; is a constant, the fold may deadlock!
  /// FIXME: we could avoid passing XC, but we can&apos;t use isConstOrConstSplat()
  ///        here because it can end up being not linked in.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='3325' u='c' c='_ZNK4llvm14TargetLowering49optimizeSetCCByHoistingAndByConstFromLogicalShiftENS_3EVTENS_7SDValueES2_NS_3ISD8CondCodeERNS0_15DAGCombinerInfoERKNS_5SDLocE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='16562' c='_ZNK4llvm21AArch64TargetLowering56shouldProduceAndByConstByHoistingConstFromShiftsLHSOfAndENS_7SDValueEPNS_14ConstantSDNodeES3_S1_jjRNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='16567' u='c' c='_ZNK4llvm21AArch64TargetLowering56shouldProduceAndByConstByHoistingConstFromShiftsLHSOfAndENS_7SDValueEPNS_14ConstantSDNodeES3_S1_jjRNS_12SelectionDAGE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='5420' c='_ZNK4llvm17X86TargetLowering56shouldProduceAndByConstByHoistingConstFromShiftsLHSOfAndENS_7SDValueEPNS_14ConstantSDNodeES3_S1_jjRNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='5425' u='c' c='_ZNK4llvm17X86TargetLowering56shouldProduceAndByConstByHoistingConstFromShiftsLHSOfAndENS_7SDValueEPNS_14ConstantSDNodeES3_S1_jjRNS_12SelectionDAGE'/>
