<dec f='llvm/clang/include/clang/Sema/Sema.h' l='10253' type='void clang::Sema::ActOnStartOfFunctionDefinitionInOpenMPDeclareVariantScope(clang::Scope * S, clang::Declarator &amp; D, clang::MultiTemplateParamsArg TemplateParameterLists, SmallVectorImpl&lt;clang::FunctionDecl *&gt; &amp; Bases)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='10249'>/// The declarator \p D defines a function in the scope \p S which is nested
  /// in an `omp begin/end declare variant` scope. In this method we create a
  /// declaration for \p D and rename \p D according to the OpenMP context
  /// selector of the surrounding scope. Return all base functions in \p Bases.</doc>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='13840' u='c' c='_ZN5clang4Sema23ActOnStartOfFunctionDefEPNS_5ScopeERNS_10DeclaratorEN4llvm15MutableArrayRefIPNS_21TemplateParameterListEEEPNS0_12SkipBodyInfoE'/>
<def f='llvm/clang/lib/Sema/SemaOpenMP.cpp' l='6029' ll='6108' type='void clang::Sema::ActOnStartOfFunctionDefinitionInOpenMPDeclareVariantScope(clang::Scope * S, clang::Declarator &amp; D, clang::MultiTemplateParamsArg TemplateParamLists, SmallVectorImpl&lt;clang::FunctionDecl *&gt; &amp; Bases)'/>
