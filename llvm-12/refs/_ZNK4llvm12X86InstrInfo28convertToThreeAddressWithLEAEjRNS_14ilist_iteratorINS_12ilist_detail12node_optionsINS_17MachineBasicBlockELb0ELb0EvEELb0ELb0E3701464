<dec f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='590' type='llvm::MachineInstr * llvm::X86InstrInfo::convertToThreeAddressWithLEA(unsigned int MIOpc, MachineFunction::iterator &amp; MFI, llvm::MachineInstr &amp; MI, llvm::LiveVariables * LV, bool Is8BitOp) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='587'>/// This is a helper for convertToThreeAddress for 8 and 16-bit instructions.
  /// We use 32-bit LEA to form 3-address code by promoting to a 32-bit
  /// super-register and then truncating back down to a 8/16-bit sub-register.</doc>
<def f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='1244' ll='1363' type='llvm::MachineInstr * llvm::X86InstrInfo::convertToThreeAddressWithLEA(unsigned int MIOpc, MachineFunction::iterator &amp; MFI, llvm::MachineInstr &amp; MI, llvm::LiveVariables * LV, bool Is8BitOp) const'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='1462' u='c' c='_ZNK4llvm12X86InstrInfo21convertToThreeAddressERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_17MachineBasicBlockELb0ELb0EvEELb0ELb0EEERNS_1210476418'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='1515' u='c' c='_ZNK4llvm12X86InstrInfo21convertToThreeAddressERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_17MachineBasicBlockELb0ELb0EvEELb0ELb0EEERNS_1210476418'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='1559' u='c' c='_ZNK4llvm12X86InstrInfo21convertToThreeAddressERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_17MachineBasicBlockELb0ELb0EvEELb0ELb0EEERNS_1210476418'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='1600' u='c' c='_ZNK4llvm12X86InstrInfo21convertToThreeAddressERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_17MachineBasicBlockELb0ELb0EvEELb0ELb0EEERNS_1210476418'/>
