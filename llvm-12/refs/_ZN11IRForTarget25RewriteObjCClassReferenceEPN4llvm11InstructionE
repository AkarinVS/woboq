<dec f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.h' l='282' type='bool IRForTarget::RewriteObjCClassReference(llvm::Instruction * class_load)'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.h' l='271'>/// A basic block-level pass to find all Objective-C class references that
  /// use the old-style Objective-C runtime and rewrite them to use
  /// class_getClass instead of statically allocated class references.

  /// Replace a single old-style class reference
  ///
  /// \param[in] class_load
  ///     The load of the statically-allocated selector.
  ///
  /// \return
  ///     True on success; false otherwise</doc>
<def f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='921' ll='1036' type='bool IRForTarget::RewriteObjCClassReference(llvm::Instruction * class_load)'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='1051' u='c' c='_ZN11IRForTarget26RewriteObjCClassReferencesERN4llvm10BasicBlockE'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='920'>// This function does not report errors; its callers are responsible.</doc>
