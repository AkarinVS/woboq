<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1617' ll='1622' type='bool llvm::TargetLoweringBase::allowsMisalignedMemoryAccesses(llvm::LLT , unsigned int AddrSpace = 0, llvm::Align Alignment = llvm::Align(1), MachineMemOperand::Flags Flags = MachineMemOperand::MONone, bool *  = nullptr) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1616'>/// LLT handling variant.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp' l='1032' u='c' c='_ZL29findGISelOptimalMemOpLoweringRSt6vectorIN4llvm3LLTESaIS1_EEjRKNS0_5MemOpEjjRKNS0_13AttributeListERKNS0_14TargetLoweringE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='1687' c='_ZNK4llvm21AArch64TargetLowering30allowsMisalignedMemoryAccessesENS_3LLTEjNS_5AlignENS_17MachineMemOperand5FlagsEPb'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIISelLowering.h' l='275' c='_ZNK4llvm16SITargetLowering30allowsMisalignedMemoryAccessesENS_3LLTEjNS_5AlignENS_17MachineMemOperand5FlagsEPb'/>
