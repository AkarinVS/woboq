<def f='llvm/llvm/include/llvm/Analysis/BasicAliasAnalysis.h' l='294' ll='306'/>
<size>408</size>
<doc f='llvm/llvm/include/llvm/Analysis/BasicAliasAnalysis.h' l='291'>/// This class is a functor to be used in legacy module or SCC passes for
/// computing AA results for a function. We store the results in fields so that
/// they live long enough to be queried, but we re-use them each time.</doc>
<mbr r='llvm::LegacyAARGetter::P' o='0' t='llvm::Pass &amp;'/>
<mbr r='llvm::LegacyAARGetter::BAR' o='64' t='Optional&lt;llvm::BasicAAResult&gt;'/>
<mbr r='llvm::LegacyAARGetter::AAR' o='2688' t='Optional&lt;llvm::AAResults&gt;'/>
<fun r='_ZN4llvm15LegacyAARGetterC1ERNS_4PassE'/>
<fun r='_ZN4llvm15LegacyAARGetterclERNS_8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp' l='1126' c='_ZN12_GLOBAL__N_112ArgPromotion8runOnSCCERN4llvm12CallGraphSCCE'/>
<size>408</size>
<use f='llvm/llvm/lib/Transforms/IPO/FunctionAttrs.cpp' l='1605' c='_ZN12_GLOBAL__N_132PostOrderFunctionAttrsLegacyPass8runOnSCCERN4llvm12CallGraphSCCE'/>
<size>408</size>
<use f='llvm/llvm/lib/Transforms/IPO/Inliner.cpp' l='545' c='_ZN4llvm17LegacyInlinerBase11inlineCallsERNS_12CallGraphSCCE'/>
<size>408</size>
<use f='llvm/llvm/lib/Transforms/IPO/ThinLTOBitcodeWriter.cpp' l='513' c='_ZN12_GLOBAL__N_119WriteThinLTOBitcode11runOnModuleERN4llvm6ModuleE'/>
<size>408</size>
<use f='llvm/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp' l='712' c='_ZN12_GLOBAL__N_118WholeProgramDevirt11runOnModuleERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp' l='715' c='_ZN12_GLOBAL__N_118WholeProgramDevirt11runOnModuleERN4llvm6ModuleE'/>
<size>408</size>
