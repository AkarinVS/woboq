<def f='llvm/llvm/lib/Target/ARM/MVETailPredUtils.h' l='132' ll='153' type='void llvm::RevertLoopEnd(llvm::MachineInstr * MI, const llvm::TargetInstrInfo * TII, unsigned int BrOpc = ARM::t2Bcc, bool SkipCmp = false)'/>
<doc f='llvm/llvm/lib/Target/ARM/MVETailPredUtils.h' l='131'>// Generate a subs, or sub and cmp, and a branch instead of an LE.</doc>
<use f='llvm/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp' l='1367' u='c' c='_ZNK12_GLOBAL__N_119ARMLowOverheadLoops13RevertLoopEndEPN4llvm12MachineInstrEb'/>
<use f='llvm/llvm/lib/Target/ARM/MVEVPTOptimisationsPass.cpp' l='202' u='c' c='_ZN12_GLOBAL__N_119MVEVPTOptimisations12MergeLoopEndEPN4llvm11MachineLoopE'/>
