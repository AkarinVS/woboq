<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/GISelKnownBits.h' l='77' ll='79' type='bool llvm::GISelKnownBits::maskedValueIsZero(llvm::Register Val, const llvm::APInt &amp; Mask)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/GISelKnownBits.h' l='74'>/// \return true if &apos;V &amp; Mask&apos; is known to be zero in DemandedElts. We use
  /// this predicate to simplify operations downstream.
  /// Mask is known to be zero for bits that V cannot have.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/GISelKnownBits.cpp' l='77' u='c' c='_ZN4llvm14GISelKnownBits13signBitIsZeroENS_8RegisterE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUPostLegalizerCombiner.cpp' l='172' u='c' c='_ZN33AMDGPUPostLegalizerCombinerHelper17matchUCharToFloatERN4llvm12MachineInstrE'/>
