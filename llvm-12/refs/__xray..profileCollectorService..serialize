<dec f='llvm/compiler-rt/lib/xray/xray_profile_collector.h' l='58' type='void __xray::profileCollectorService::serialize()'/>
<def f='llvm/compiler-rt/lib/xray/xray_profile_collector.cpp' l='232' ll='303' type='void __xray::profileCollectorService::serialize()'/>
<doc f='llvm/compiler-rt/lib/xray/xray_profile_collector.h' l='43'>/// The serialize will process all FunctionCallTrie instances in memory, and
/// turn those into specifically formatted blocks, each describing the
/// function call trie&apos;s contents in a compact form. In memory, this looks
/// like the following layout:
///
///   - block size (32 bits)
///   - block number (32 bits)
///   - thread id (64 bits)
///   - list of records:
///     - function ids in leaf to root order, terminated by
///       0 (32 bits per function id)
///     - call count (64 bit)
///     - cumulative local time (64 bit)
///     - record delimiter (64 bit, 0x0)
///</doc>
<use f='llvm/compiler-rt/lib/xray/xray_profiling.cpp' l='344' u='c' c='__xray::profilingFinalize'/>
