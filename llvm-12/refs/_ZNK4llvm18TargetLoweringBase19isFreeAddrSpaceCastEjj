<dec f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1798' type='bool llvm::TargetLoweringBase::isFreeAddrSpaceCast(unsigned int SrcAS, unsigned int DestAS) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1795'>/// Returns true if a cast from SrcAS to DestAS is &quot;cheap&quot;, such that e.g. we
  /// are happy to sink it into basic blocks. A cast may be free, but not
  /// necessarily a no-op. e.g. a free truncate from a 64-bit to 32-bit pointer.</doc>
<use f='llvm/llvm/include/llvm/CodeGen/BasicTTIImpl.h' l='799' u='c' c='_ZN4llvm16BasicTTIImplBase16getCastInstrCostEjPNS_4TypeES2_NS_19TargetTransformInfo15CastContextHintENS3_14TargetCostKindEPKNS_11InstructionE'/>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='1249' u='c' c='_ZL26OptimizeNoopCopyExpressionPN4llvm8CastInstERKNS_14TargetLoweringERKNS_10DataLayoutE'/>
<def f='llvm/llvm/lib/CodeGen/TargetLoweringBase.cpp' l='927' ll='930' type='bool llvm::TargetLoweringBase::isFreeAddrSpaceCast(unsigned int SrcAS, unsigned int DestAS) const'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIISelLowering.cpp' l='1518' c='_ZNK4llvm16SITargetLowering19isFreeAddrSpaceCastEjj'/>
