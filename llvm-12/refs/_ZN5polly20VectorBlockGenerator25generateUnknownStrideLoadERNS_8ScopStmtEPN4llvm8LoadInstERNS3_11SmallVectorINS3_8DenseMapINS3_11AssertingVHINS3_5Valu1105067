<dec f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='721' type='llvm::Value * polly::VectorBlockGenerator::generateUnknownStrideLoad(polly::ScopStmt &amp; Stmt, llvm::LoadInst * Load, polly::BlockGenerator::VectorValueMapT &amp; ScalarMaps, isl_id_to_ast_expr * NewAccesses)'/>
<def f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1103' ll='1123' type='llvm::Value * polly::VectorBlockGenerator::generateUnknownStrideLoad(polly::ScopStmt &amp; Stmt, llvm::LoadInst * Load, polly::BlockGenerator::VectorValueMapT &amp; ScalarMaps, isl_id_to_ast_expr * NewAccesses)'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1155' u='c' c='_ZN5polly20VectorBlockGenerator12generateLoadERNS_8ScopStmtEPN4llvm8LoadInstERNS3_8DenseMapINS3_11AssertingVHINS3_5ValueEEES9_NS3_12DenseMapInfoIS9_EE10253938'/>
<doc f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='707'>/// Load a vector from scalars distributed in memory
  ///
  /// In case some scalars a distributed randomly in memory. Create a vector
  /// by loading each scalar and by inserting one after the other into the
  /// vector.
  ///
  /// %scalar_1= load double* %p_1
  /// %vec_1 = insertelement &lt;2 x double&gt; undef, double %scalar_1, i32 0
  /// %scalar 2 = load double* %p_2
  /// %vec_2 = insertelement &lt;2 x double&gt; %vec_1, double %scalar_1, i32 1
  ///
  /// @param NewAccesses A map from memory access ids to new ast expressions,
  ///                    which may contain new access expressions for certain
  ///                    memory accesses.</doc>
