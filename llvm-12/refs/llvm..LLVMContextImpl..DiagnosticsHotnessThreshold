<dec f='llvm/llvm/lib/IR/LLVMContextImpl.h' l='1346' type='Optional&lt;uint64_t&gt;'/>
<offset>832</offset>
<doc f='llvm/llvm/lib/IR/LLVMContextImpl.h' l='1328'>/// The minimum hotness value a diagnostic needs in order to be included in
  /// optimization diagnostics.
  ///
  /// The threshold is an Optional value, which maps to one of the 3 states:
  /// 1). 0            =&gt; threshold disabled. All emarks will be printed.
  /// 2). positive int =&gt; manual threshold by user. Remarks with hotness exceed
  ///                     threshold will be printed.
  /// 3). None         =&gt; &apos;auto&apos; threshold by user. The actual value is not
  ///                     available at command line, but will be synced with
  ///                     hotness threhold from profile summary during
  ///                     compilation.
  ///
  /// State 1 and 2 are considered as terminal states. State transition is
  /// only allowed from 3 to 2, when the threshold is first synced with profile
  /// summary. This ensures that the threshold is set only once and stays
  /// constant.
  ///
  /// If threshold option is not specified, it is disabled (0) by default.</doc>
<use f='llvm/llvm/lib/IR/LLVMContext.cpp' l='150' u='w' c='_ZN4llvm11LLVMContext30setDiagnosticsHotnessThresholdENS_8OptionalImEE'/>
<use f='llvm/llvm/lib/IR/LLVMContext.cpp' l='154' u='m' c='_ZNK4llvm11LLVMContext30getDiagnosticsHotnessThresholdEv'/>
<use f='llvm/llvm/lib/IR/LLVMContext.cpp' l='158' u='m' c='_ZNK4llvm11LLVMContext39isDiagnosticsHotnessThresholdSetFromPSIEv'/>
