<dec f='llvm/clang/include/clang/Parse/Parser.h' l='3141' type='clang::Parser::DeclGroupPtrTy clang::Parser::ParseOpenMPDeclareReductionDirective(clang::AccessSpecifier AS)'/>
<doc f='llvm/clang/include/clang/Parse/Parser.h' l='3140'>/// Parse &apos;omp declare reduction&apos; construct.</doc>
<def f='llvm/clang/lib/Parse/ParseOpenMP.cpp' l='273' ll='435' type='Parser::DeclGroupPtrTy clang::Parser::ParseOpenMPDeclareReductionDirective(clang::AccessSpecifier AS)'/>
<use f='llvm/clang/lib/Parse/ParseOpenMP.cpp' l='1979' u='c' c='_ZN5clang6Parser42ParseOpenMPDeclarativeDirectiveWithExtDeclERNS_15AccessSpecifierERNS0_25ParsedAttributesWithRangeEbNS_17TypeSpecifierTypeEPNS_4DeclE'/>
<use f='llvm/clang/lib/Parse/ParseOpenMP.cpp' l='2349' u='c' c='_ZN5clang6Parser43ParseOpenMPDeclarativeOrExecutableDirectiveENS0_17ParsedStmtContextE'/>
<doc f='llvm/clang/lib/Parse/ParseOpenMP.cpp' l='263'>/// Parse &apos;omp declare reduction&apos; construct.
///
///       declare-reduction-directive:
///        annot_pragma_openmp &apos;declare&apos; &apos;reduction&apos;
///        &apos;(&apos; &lt;reduction_id&gt; &apos;:&apos; &lt;type&gt; {&apos;,&apos; &lt;type&gt;} &apos;:&apos; &lt;expression&gt; &apos;)&apos;
///        [&apos;initializer&apos; &apos;(&apos; (&apos;omp_priv&apos; &apos;=&apos; &lt;expression&gt;)|&lt;function_call&gt; &apos;)&apos;]
///        annot_pragma_openmp_end
/// &lt;reduction_id&gt; is either a base language identifier or one of the following
/// operators: &apos;+&apos;, &apos;-&apos;, &apos;*&apos;, &apos;&amp;&apos;, &apos;|&apos;, &apos;^&apos;, &apos;&amp;&amp;&apos; and &apos;||&apos;.
///</doc>
