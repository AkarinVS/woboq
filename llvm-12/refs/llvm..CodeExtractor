<def f='llvm/llvm/include/llvm/Transforms/Utils/CodeExtractor.h' l='85' ll='231'/>
<use f='llvm/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp' l='139' c='_ZN4llvm15OpenMPIRBuilder8finalizeEb'/>
<use f='llvm/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp' l='693' c='_ZN4llvm15OpenMPIRBuilder14createParallelERKNS0_19LocationDescriptionENS_13IRBuilderBase11InsertPointENS_12function_refIFvS5_S5_RNS_10BasicBlockEEEENS2523171'/>
<size>144</size>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/CodeExtractor.h' l='72'>/// Utility class for extracting code into a new function.
  ///
  /// This utility provides a simple interface for extracting some sequence of
  /// code into its own function, replacing it with a call to that function. It
  /// also provides various methods to query about the nature and result of
  /// such a transformation.
  ///
  /// The rough algorithm used is:
  /// 1) Find both the inputs and outputs for the extracted region.
  /// 2) Pass the inputs as arguments, remapping them within the extracted
  ///    function to arguments.
  /// 3) Add allocas for any scalar outputs, adding all of the outputs&apos; allocas
  ///    as arguments, and inserting stores to the arguments for any scalars.</doc>
<mbr r='llvm::CodeExtractor::DT' o='0' t='llvm::DominatorTree *const'/>
<mbr r='llvm::CodeExtractor::AggregateArgs' o='64' t='const bool'/>
<mbr r='llvm::CodeExtractor::BFI' o='128' t='llvm::BlockFrequencyInfo *'/>
<mbr r='llvm::CodeExtractor::BPI' o='192' t='llvm::BranchProbabilityInfo *'/>
<mbr r='llvm::CodeExtractor::AC' o='256' t='llvm::AssumptionCache *'/>
<mbr r='llvm::CodeExtractor::AllowVarArgs' o='320' t='bool'/>
<mbr r='llvm::CodeExtractor::Blocks' o='384' t='SetVector&lt;llvm::BasicBlock *&gt;'/>
<mbr r='llvm::CodeExtractor::NumExitBlocks' o='768' t='unsigned int'/>
<mbr r='llvm::CodeExtractor::RetTy' o='832' t='llvm::Type *'/>
<mbr r='llvm::CodeExtractor::Suffix' o='896' t='std::string'/>
<fun r='_ZN4llvm13CodeExtractorC1ENS_8ArrayRefIPNS_10BasicBlockEEEPNS_13DominatorTreeEbPNS_18BlockFrequencyInfoEPNS_21BranchProbabilityInfoEPNS_15AssumptionCa14458893'/>
<fun r='_ZN4llvm13CodeExtractorC1ERNS_13DominatorTreeERNS_4LoopEbPNS_18BlockFrequencyInfoEPNS_21BranchProbabilityInfoEPNS_15AssumptionCacheENSt7__cxx1112basic639635'/>
<fun r='_ZN4llvm13CodeExtractor17extractCodeRegionERKNS_26CodeExtractorAnalysisCacheE'/>
<fun r='_ZN4llvm13CodeExtractor21verifyAssumptionCacheERKNS_8FunctionES3_PNS_15AssumptionCacheE'/>
<fun r='_ZNK4llvm13CodeExtractor10isEligibleEv'/>
<fun r='_ZNK4llvm13CodeExtractor17findInputsOutputsERNS_9SetVectorIPNS_5ValueESt6vectorIS3_SaIS3_EENS_8DenseSetIS3_NS_12DenseMapInfoIS3_EEEEEESC_RKSB_'/>
<fun r='_ZNK4llvm13CodeExtractor34isLegalToShrinkwrapLifetimeMarkersERKNS_26CodeExtractorAnalysisCacheEPNS_11InstructionE'/>
<fun r='_ZNK4llvm13CodeExtractor11findAllocasERKNS_26CodeExtractorAnalysisCacheERNS_9SetVectorIPNS_5ValueESt6vectorIS6_SaIS6_EENS_8DenseSetIS6_NS_12DenseMapIn10943304'/>
<fun r='_ZN4llvm13CodeExtractor28findOrCreateBlockForHoistingEPNS_10BasicBlockE'/>
<fun r='_ZNK4llvm13CodeExtractor18getLifetimeMarkersERKNS_26CodeExtractorAnalysisCacheEPNS_11InstructionEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm13CodeExtractor25severSplitPHINodesOfEntryERPNS_10BasicBlockE'/>
<fun r='_ZN4llvm13CodeExtractor25severSplitPHINodesOfExitsERKNS_15SmallPtrSetImplIPNS_10BasicBlockEEE'/>
<fun r='_ZN4llvm13CodeExtractor17splitReturnBlocksEv'/>
<fun r='_ZN4llvm13CodeExtractor17constructFunctionERKNS_9SetVectorIPNS_5ValueESt6vectorIS3_SaIS3_EENS_8DenseSetIS3_NS_12DenseMapInfoIS3_EEEEEESD_PNS_10BasicBl12867068'/>
<fun r='_ZN4llvm13CodeExtractor18moveCodeToFunctionEPNS_8FunctionE'/>
<fun r='_ZN4llvm13CodeExtractor33calculateNewCallTerminatorWeightsEPNS_10BasicBlockERNS_8DenseMapIS2_NS_14BlockFrequencyENS_12DenseMapInfoIS2_EENS_6detail12De2699329'/>
<fun r='_ZN4llvm13CodeExtractor26emitCallAndSwitchStatementEPNS_8FunctionEPNS_10BasicBlockERNS_9SetVectorIPNS_5ValueESt6vectorIS7_SaIS7_EENS_8DenseSetIS7_NS_13687995'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/IROutliner.h' l='101'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/IROutliner.h' l='290'/>
<size>144</size>
<use f='llvm/llvm/lib/Transforms/IPO/BlockExtractor.cpp' l='225' c='_ZN12_GLOBAL__N_114BlockExtractor11runOnModuleERN4llvm6ModuleE'/>
<size>144</size>
<use f='llvm/llvm/lib/Transforms/IPO/HotColdSplitting.cpp' l='352' c='_ZN4llvm16HotColdSplitting17extractColdRegionERKNS_11SmallVectorIPNS_10BasicBlockELj0EEERKNS_26CodeExtractorAnalysisCacheERNS_13DominatorTreeEPNS_18Bl3633580'/>
<size>144</size>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='520' c='_ZL25getCodeExtractorArgumentsRN4llvm16OutlinableRegionERSt6vectorIjSaIjEERNS_8DenseSetIjNS_12DenseMapInfoIjEEEERNS_8DenseMapIPNS_5ValueESD_NS7_ISD_EE4299138'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='1582' c='_ZN4llvm10IROutliner9doOutlineERNS_6ModuleE'/>
<size>144</size>
<use f='llvm/llvm/lib/Transforms/IPO/LoopExtractor.cpp' l='249' c='_ZN12_GLOBAL__N_113LoopExtractor11extractLoopEPN4llvm4LoopERNS1_8LoopInfoERNS1_13DominatorTreeE'/>
<size>144</size>
<use f='llvm/llvm/lib/Transforms/IPO/PartialInlining.cpp' l='1158' c='_ZN12_GLOBAL__N_118PartialInlinerImpl14FunctionCloner30doMultiRegionFunctionOutliningEv'/>
<use f='llvm/llvm/lib/Transforms/IPO/PartialInlining.cpp' l='1240' c='_ZN12_GLOBAL__N_118PartialInlinerImpl14FunctionCloner31doSingleRegionFunctionOutliningEv'/>
<size>144</size>
<use f='llvm/llvm/unittests/Transforms/Utils/CodeExtractorTest.cpp' l='62' c='_ZN12_GLOBAL__N_127CodeExtractor_ExitStub_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/CodeExtractorTest.cpp' l='113' c='_ZN12_GLOBAL__N_143CodeExtractor_ExitPHIOnePredFromRegion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/CodeExtractorTest.cpp' l='188' c='_ZN12_GLOBAL__N_152CodeExtractor_StoreOutputInvokeResultAfterEHPad_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/CodeExtractorTest.cpp' l='223' c='_ZN12_GLOBAL__N_152CodeExtractor_StoreOutputInvokeResultInExitStub_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/CodeExtractorTest.cpp' l='275' c='_ZN12_GLOBAL__N_154CodeExtractor_ExtractAndInvalidateAssumptionCache_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/CodeExtractorTest.cpp' l='319' c='_ZN12_GLOBAL__N_160CodeExtractor_RemoveBitcastUsesFromOuterLifetimeMarkers_Test8TestBodyEv'/>
<size>144</size>
