<dec f='llvm/libcxxabi/src/demangle/ItaniumDemangle.h' l='2540' type='(anonymous namespace)::itanium_demangle::Node * (anonymous namespace)::itanium_demangle::AbstractManglingParser::parseUnresolvedName()'/>
<def f='llvm/libcxxabi/src/demangle/ItaniumDemangle.h' l='3336' ll='3422' type='(anonymous namespace)::itanium_demangle::Node * (anonymous namespace)::itanium_demangle::AbstractManglingParser::parseUnresolvedName()'/>
<doc f='llvm/libcxxabi/src/demangle/ItaniumDemangle.h' l='2539'>/// Parse the &lt;unresolved-name&gt; production.</doc>
<doc f='llvm/libcxxabi/src/demangle/ItaniumDemangle.h' l='3325'>// &lt;unresolved-name&gt;
//  extension        ::= srN &lt;unresolved-type&gt; [&lt;template-args&gt;] &lt;unresolved-qualifier-level&gt;* E &lt;base-unresolved-name&gt;
//                   ::= [gs] &lt;base-unresolved-name&gt;                     # x or (with &quot;gs&quot;) ::x
//                   ::= [gs] sr &lt;unresolved-qualifier-level&gt;+ E &lt;base-unresolved-name&gt;
//                                                                       # A::x, N::y, A&lt;T&gt;::z; &quot;gs&quot; means leading &quot;::&quot;
//                   ::= sr &lt;unresolved-type&gt; &lt;base-unresolved-name&gt;     # T::x / decltype(p)::x
//  extension        ::= sr &lt;unresolved-type&gt; &lt;template-args&gt; &lt;base-unresolved-name&gt;
//                                                                       # T::N::x /decltype(p)::N::x
//  (ignored)        ::= srN &lt;unresolved-type&gt;  &lt;unresolved-qualifier-level&gt;+ E &lt;base-unresolved-name&gt;
//
// &lt;unresolved-qualifier-level&gt; ::= &lt;simple-id&gt;</doc>
