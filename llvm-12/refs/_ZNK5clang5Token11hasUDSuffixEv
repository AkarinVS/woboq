<def f='llvm/clang/include/clang/Lex/Token.h' l='293' type='bool clang::Token::hasUDSuffix() const'/>
<doc f='llvm/clang/include/clang/Lex/Token.h' l='291'>/// Return true if this token is a string or character literal which
  /// has a ud-suffix.</doc>
<use f='llvm/clang/lib/Lex/ModuleMap.cpp' l='1577' u='c' c='_ZN5clang15ModuleMapParser12consumeTokenEv'/>
<use f='llvm/clang/lib/Lex/PPDirectives.cpp' l='1188' u='c' c='_ZN5clang12Preprocessor19HandleLineDirectiveEv'/>
<use f='llvm/clang/lib/Lex/PPDirectives.cpp' l='1338' u='c' c='_ZN5clang12Preprocessor20HandleDigitDirectiveERNS_5TokenE'/>
<use f='llvm/clang/lib/Lex/PPDirectives.cpp' l='1421' u='c' c='_ZN5clang12Preprocessor24HandleIdentSCCSDirectiveERNS_5TokenE'/>
<use f='llvm/clang/lib/Lex/PPExpressions.cpp' l='360' u='c' c='_ZL13EvaluateValueRN12_GLOBAL__N_17PPValueERN5clang5TokenER14DefinedTrackerbRNS2_12PreprocessorE'/>
<use f='llvm/clang/lib/Lex/Pragma.cpp' l='237' u='c' c='_ZN5clang12Preprocessor13Handle_PragmaERNS_5TokenE'/>
<use f='llvm/clang/lib/Lex/Pragma.cpp' l='572' u='c' c='_ZN5clang12Preprocessor25ParsePragmaPushOrPopMacroERNS_5TokenE'/>
<use f='llvm/clang/lib/Lex/Pragma.cpp' l='755' u='c' c='_ZL22LexModuleNameComponentRN5clang12PreprocessorERNS_5TokenERSt4pairIPNS_14IdentifierInfoENS_14SourceLocationEEb'/>
<use f='llvm/clang/lib/Lex/Pragma.cpp' l='1080' u='c' c='_ZN12_GLOBAL__N_118PragmaDebugHandler12HandlePragmaERN5clang12PreprocessorENS1_16PragmaIntroducerERNS1_5TokenE'/>
<use f='llvm/clang/lib/Lex/Preprocessor.cpp' l='1336' u='c' c='_ZN5clang12Preprocessor22FinishLexStringLiteralERNS_5TokenERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcb'/>
<use f='llvm/clang/lib/Lex/TokenConcatenation.cpp' l='241' u='c' c='_ZNK5clang18TokenConcatenation11AvoidConcatERKNS_5TokenES3_S3_'/>
<use f='llvm/clang/lib/Parse/ParseTentative.cpp' l='917' u='c' c='_ZN5clang6Parser18TryParseOperatorIdEv'/>
