<dec f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetItemInfoHandler.h' l='96' type='lldb::addr_t lldb_private::AppleGetItemInfoHandler::SetupGetItemInfoFunction(lldb_private::Thread &amp; thread, lldb_private::ValueList &amp; get_item_info_arglist)'/>
<def f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetItemInfoHandler.cpp' l='128' ll='209' type='lldb::addr_t lldb_private::AppleGetItemInfoHandler::SetupGetItemInfoFunction(lldb_private::Thread &amp; thread, lldb_private::ValueList &amp; get_item_info_arglist)'/>
<use f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetItemInfoHandler.cpp' l='315' u='c' c='_ZN12lldb_private23AppleGetItemInfoHandler11GetItemInfoERNS_6ThreadEmmmRNS_6StatusE'/>
<doc f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetItemInfoHandler.cpp' l='114'>// Compile our __lldb_backtrace_recording_get_item_info() function (from the
// source above in g_get_item_info_function_code) if we don&apos;t find that
// function in the inferior already with USE_BUILTIN_FUNCTION defined.  (e.g.
// this would be the case for testing.)
//
// Insert the __lldb_backtrace_recording_get_item_info into the inferior
// process if needed.
//
// Write the get_item_info_arglist into the inferior&apos;s memory space to prepare
// for the call.
//
// Returns the address of the arguments written down in the inferior process,
// which can be used to make the function call.</doc>
