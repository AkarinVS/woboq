<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='364' ll='371' type='llvm::Instruction * llvm::InstCombinerImpl::InsertNewInstBefore(llvm::Instruction * New, llvm::Instruction &amp; Old)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='376' u='c' c='_ZN4llvm16InstCombinerImpl17InsertNewInstWithEPNS_11InstructionERS1_'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='360'>/// Inserts an instruction \p New before instruction \p Old
  ///
  /// Also adds the new instruction to the worklist and returns \p New so that
  /// it is suitable for use as the return from the visitation patterns.</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='2411' u='c' c='_ZN4llvm16InstCombinerImpl26transformConstExprCastCallERNS_8CallBaseE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='2414' u='c' c='_ZN4llvm16InstCombinerImpl26transformConstExprCastCallERNS_8CallBaseE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='2417' u='c' c='_ZN4llvm16InstCombinerImpl26transformConstExprCastCallERNS_8CallBaseE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='204' u='c' c='_ZL23simplifyAllocaArraySizeRN4llvm16InstCombinerImplERNS_10AllocaInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='1546' u='c' c='_ZN4llvm16InstCombinerImpl23mergeStoreIntoSuccessorERNS_9StoreInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='1555' u='c' c='_ZN4llvm16InstCombinerImpl23mergeStoreIntoSuccessorERNS_9StoreInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='251' u='c' c='_ZN4llvm16InstCombinerImpl19foldIntegerTypedPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='288' u='c' c='_ZN4llvm16InstCombinerImpl19foldIntegerTypedPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='291' u='c' c='_ZN4llvm16InstCombinerImpl19foldIntegerTypedPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='330' u='c' c='_ZN4llvm16InstCombinerImpl39foldPHIArgInsertValueInstructionIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='368' u='c' c='_ZN4llvm16InstCombinerImpl40foldPHIArgExtractValueInstructionIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='427' u='c' c='_ZN4llvm16InstCombinerImpl22foldPHIArgBinOpIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='435' u='c' c='_ZN4llvm16InstCombinerImpl22foldPHIArgBinOpIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='554' u='c' c='_ZN4llvm16InstCombinerImpl20foldPHIArgGEPIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='732' u='c' c='_ZN4llvm16InstCombinerImpl21foldPHIArgLoadIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='816' u='c' c='_ZN4llvm16InstCombinerImpl22foldPHIArgZextsIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='904' u='c' c='_ZN4llvm16InstCombinerImpl19foldPHIArgOpIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='1118' u='c' c='_ZN4llvm16InstCombinerImpl13foldOpIntoPhiERNS_11InstructionEPNS_7PHINodeE'/>
