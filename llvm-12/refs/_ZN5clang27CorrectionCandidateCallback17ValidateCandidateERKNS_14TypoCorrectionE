<dec f='llvm/clang/include/clang/Sema/TypoCorrection.h' l='301' type='bool clang::CorrectionCandidateCallback::ValidateCandidate(const clang::TypoCorrection &amp; candidate)'/>
<use f='llvm/clang/include/clang/Sema/TypoCorrection.h' l='310' u='c' c='_ZN5clang27CorrectionCandidateCallback13RankCandidateERKNS_14TypoCorrectionE'/>
<ovr f='llvm/clang/include/clang/Sema/TypoCorrection.h' l='368' c='_ZN5clang13DeclFilterCCC17ValidateCandidateERKNS_14TypoCorrectionE'/>
<ovr f='llvm/clang/include/clang/Sema/TypoCorrection.h' l='408' c='_ZN5clang19NoTypoCorrectionCCC17ValidateCandidateERKNS_14TypoCorrectionE'/>
<doc f='llvm/clang/include/clang/Sema/TypoCorrection.h' l='291'>/// Simple predicate used by the default RankCandidate to
  /// determine whether to return an edit distance of 0 or InvalidDistance.
  /// This can be overridden by validators that only need to determine if a
  /// candidate is viable, without ranking potentially viable candidates.
  /// Only ValidateCandidate or RankCandidate need to be overridden by a
  /// callback wishing to check the viability of correction candidates.
  /// The default predicate always returns true if the candidate is not a type
  /// name or keyword, true for types if WantTypeSpecifiers is true, and true
  /// for keywords if WantTypeSpecifiers, WantExpressionKeywords,
  /// WantCXXNamedCasts, WantRemainingKeywords, or WantObjCSuper is true.</doc>
<ovr f='llvm/clang/lib/Parse/ParseExpr.cpp' l='700' c='_ZN12_GLOBAL__N_125CastExpressionIdValidator17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<use f='llvm/clang/lib/Parse/ParseExpr.cpp' l='708' u='c' c='_ZN12_GLOBAL__N_125CastExpressionIdValidator17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Parse/ParseStmt.cpp' l='132' c='_ZN12_GLOBAL__N_118StatementFilterCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<use f='llvm/clang/lib/Parse/ParseStmt.cpp' l='140' u='c' c='_ZN12_GLOBAL__N_118StatementFilterCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Parse/ParseTentative.cpp' l='1119' c='_ZN12_GLOBAL__N_117TentativeParseCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<use f='llvm/clang/lib/Parse/ParseTentative.cpp' l='1127' u='c' c='_ZN12_GLOBAL__N_117TentativeParseCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaCXXScopeSpec.cpp' l='438' c='_ZN12_GLOBAL__N_131NestedNameSpecifierValidatorCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaDecl.cpp' l='79' c='_ZN12_GLOBAL__N_120TypeNameValidatorCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaDecl.cpp' l='8195' c='_ZN12_GLOBAL__N_125DifferentNameValidatorCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='4100' c='_ZN12_GLOBAL__N_126MemInitializerValidatorCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='11341' c='_ZN12_GLOBAL__N_121NamespaceValidatorCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='11865' c='_ZN12_GLOBAL__N_117UsingValidatorCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaDeclObjC.cpp' l='510' c='_ZN12_GLOBAL__N_125ObjCInterfaceValidatorCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaDeclObjC.cpp' l='1354' c='_ZN12_GLOBAL__N_133ObjCTypeArgOrProtocolValidatorCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaExprMember.cpp' l='604' c='_ZN12_GLOBAL__N_128RecordMemberExprValidatorCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaExprObjC.cpp' l='2271' c='_ZN12_GLOBAL__N_123ObjCInterfaceOrSuperCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaInit.cpp' l='2318' c='_ZN12_GLOBAL__N_128FieldInitializerValidatorCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<def f='llvm/clang/lib/Sema/SemaLookup.cpp' l='5156' ll='5186' type='bool clang::CorrectionCandidateCallback::ValidateCandidate(const clang::TypoCorrection &amp; candidate)'/>
<ovr f='llvm/clang/lib/Sema/SemaLookup.cpp' l='5200' c='_ZN5clang21FunctionCallFilterCCC17ValidateCandidateERKNS_14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaOpenMP.cpp' l='2743' c='_ZN12_GLOBAL__N_116VarDeclFilterCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaOpenMP.cpp' l='2765' c='_ZN12_GLOBAL__N_122VarOrFuncDeclFilterCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='674' c='_ZZN5clang4Sema34diagnoseExprIntendedAsTemplateNameEPNS_5ScopeENS_12ActionResultIPNS_4ExprELb1EEENS_14SourceLocationES7_EN23TemplateCandidateFilter17V8997005'/>
<ovr f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='3851' c='_ZZN5clang4Sema32resolveAssumedTemplateNameAsTypeEPNS_5ScopeERNS_12TemplateNameENS_14SourceLocationEbEN17CandidateCallback17ValidateCandidateERKNS_14TypoCorrectionE'/>
<ovr f='llvm/clang/lib/Sema/SemaTemplateVariadic.cpp' l='978' c='_ZN12_GLOBAL__N_125ParameterPackValidatorCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
