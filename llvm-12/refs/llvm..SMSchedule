<use f='llvm/llvm/include/llvm/CodeGen/MachinePipeliner.h' l='258' c='_ZN4llvm17SwingSchedulerDAG16applyInstrChangeEPNS_12MachineInstrERNS_10SMScheduleE'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachinePipeliner.h' l='296' c='_ZN4llvm17SwingSchedulerDAG16schedulePipelineERNS_10SMScheduleE'/>
<def f='llvm/llvm/include/llvm/CodeGen/MachinePipeliner.h' l='488' ll='594'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='562' c='_ZN4llvm17SwingSchedulerDAG8scheduleEv'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='2044' c='_ZN4llvm17SwingSchedulerDAG16schedulePipelineERNS_10SMScheduleE'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='2246' c='_ZN4llvm17SwingSchedulerDAG16applyInstrChangeEPNS_12MachineInstrERNS_10SMScheduleE'/>
<size>424</size>
<doc f='llvm/llvm/include/llvm/CodeGen/MachinePipeliner.h' l='480'>/// This class represents the scheduled code.  The main data structure is a
/// map from scheduled cycle to instructions.  During scheduling, the
/// data structure explicitly represents all stages/iterations.   When
/// the algorithm finshes, the schedule is collapsed into a single stage,
/// which represents instructions from different loop iterations.
///
/// The SMS algorithm allows negative values for cycles, so the first cycle
/// in the schedule is the smallest cycle value.</doc>
<mbr r='llvm::SMSchedule::ScheduledInstrs' o='0' t='DenseMap&lt;int, std::deque&lt;SUnit *&gt; &gt;'/>
<mbr r='llvm::SMSchedule::InstrToCycle' o='192' t='std::map&lt;SUnit *, int&gt;'/>
<mbr r='llvm::SMSchedule::FirstCycle' o='576' t='int'/>
<mbr r='llvm::SMSchedule::LastCycle' o='608' t='int'/>
<mbr r='llvm::SMSchedule::InitiationInterval' o='640' t='int'/>
<mbr r='llvm::SMSchedule::ST' o='704' t='const llvm::TargetSubtargetInfo &amp;'/>
<mbr r='llvm::SMSchedule::MRI' o='768' t='llvm::MachineRegisterInfo &amp;'/>
<mbr r='llvm::SMSchedule::ProcItinResources' o='832' t='llvm::ResourceManager'/>
<fun r='_ZN4llvm10SMScheduleC1EPNS_15MachineFunctionE'/>
<fun r='_ZN4llvm10SMSchedule5resetEv'/>
<fun r='_ZN4llvm10SMSchedule21setInitiationIntervalEi'/>
<fun r='_ZNK4llvm10SMSchedule13getFirstCycleEv'/>
<fun r='_ZNK4llvm10SMSchedule13getFinalCycleEv'/>
<fun r='_ZN4llvm10SMSchedule20earliestCycleInChainERKNS_4SDepE'/>
<fun r='_ZN4llvm10SMSchedule18latestCycleInChainERKNS_4SDepE'/>
<fun r='_ZN4llvm10SMSchedule12computeStartEPNS_5SUnitEPiS3_S3_S3_iPNS_17SwingSchedulerDAGE'/>
<fun r='_ZN4llvm10SMSchedule6insertEPNS_5SUnitEiii'/>
<fun r='_ZN4llvm10SMSchedule18isScheduledAtStageEPNS_5SUnitEj'/>
<fun r='_ZNK4llvm10SMSchedule14stageScheduledEPNS_5SUnitE'/>
<fun r='_ZNK4llvm10SMSchedule14cycleScheduledEPNS_5SUnitE'/>
<fun r='_ZN4llvm10SMSchedule16getMaxStageCountEv'/>
<fun r='_ZN4llvm10SMSchedule15getInstructionsEi'/>
<fun r='_ZN4llvm10SMSchedule15isValidScheduleEPNS_17SwingSchedulerDAGE'/>
<fun r='_ZN4llvm10SMSchedule16finalizeScheduleEPNS_17SwingSchedulerDAGE'/>
<fun r='_ZN4llvm10SMSchedule15orderDependenceEPNS_17SwingSchedulerDAGEPNS_5SUnitERSt5dequeIS4_SaIS4_EE'/>
<fun r='_ZN4llvm10SMSchedule13isLoopCarriedEPNS_17SwingSchedulerDAGERNS_12MachineInstrE'/>
<fun r='_ZN4llvm10SMSchedule21isLoopCarriedDefOfUseEPNS_17SwingSchedulerDAGEPNS_12MachineInstrERNS_14MachineOperandE'/>
<fun r='_ZNK4llvm10SMSchedule5printERNS_11raw_ostreamE'/>
<fun r='_ZNK4llvm10SMSchedule4dumpEv'/>
<fun r='_ZN4llvm10SMSchedule6insertEPNS_5SUnitEiii'/>
<fun r='_ZN4llvm10SMSchedule20earliestCycleInChainERKNS_4SDepE'/>
<fun r='_ZN4llvm10SMSchedule18latestCycleInChainERKNS_4SDepE'/>
<fun r='_ZN4llvm10SMSchedule12computeStartEPNS_5SUnitEPiS3_S3_S3_iPNS_17SwingSchedulerDAGE'/>
<fun r='_ZN4llvm10SMSchedule15orderDependenceEPNS_17SwingSchedulerDAGEPNS_5SUnitERSt5dequeIS4_SaIS4_EE'/>
<fun r='_ZN4llvm10SMSchedule13isLoopCarriedEPNS_17SwingSchedulerDAGERNS_12MachineInstrE'/>
<fun r='_ZN4llvm10SMSchedule21isLoopCarriedDefOfUseEPNS_17SwingSchedulerDAGEPNS_12MachineInstrERNS_14MachineOperandE'/>
<fun r='_ZN4llvm10SMSchedule15isValidScheduleEPNS_17SwingSchedulerDAGE'/>
<fun r='_ZN4llvm10SMSchedule16finalizeScheduleEPNS_17SwingSchedulerDAGE'/>
