<dec f='llvm/lldb/include/lldb/Target/Process.h' l='1792' type='bool lldb_private::Process::GetLoadAddressPermissions(lldb::addr_t load_addr, uint32_t &amp; permissions)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='1773'>/// Attempt to get the attributes for a region of memory in the process.
  ///
  /// It may be possible for the remote debug server to inspect attributes for
  /// a region of memory in the process, such as whether there is a valid page
  /// of memory at a given address or whether that page is
  /// readable/writable/executable by the process.
  ///
  /// \param[in] load_addr
  ///     The address of interest in the process.
  ///
  /// \param[out] permissions
  ///     If this call returns successfully, this bitmask will have
  ///     its Permissions bits set to indicate whether the region is
  ///     readable/writable/executable.  If this call fails, the
  ///     bitmask values are undefined.
  ///
  /// \return
  ///     Returns true if it was able to determine the attributes of the
  ///     memory region.  False if not.</doc>
<def f='llvm/lldb/source/Target/Process.cpp' l='2355' ll='2378' type='bool lldb_private::Process::GetLoadAddressPermissions(lldb::addr_t load_addr, uint32_t &amp; permissions)'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='342' u='c' c='_ZN12lldb_private21RegisterContextUnwind24InitializeNonZerothFrameEv'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='401' u='c' c='_ZN12lldb_private21RegisterContextUnwind24InitializeNonZerothFrameEv'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='730' u='c' c='_ZN12lldb_private21RegisterContextUnwind25GetFullUnwindPlanForFrameEv'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='1909' u='c' c='_ZN12lldb_private21RegisterContextUnwind16ReadFrameAddressEN4lldb12RegisterKindERNS_10UnwindPlan3Row7FAValueERm'/>
<use f='llvm/lldb/source/Target/ThreadPlanStepOut.cpp' l='127' u='c' c='_ZN12lldb_private17ThreadPlanStepOutC1ERNS_6ThreadEPNS_13SymbolContextEbbNS_4VoteES5_jNS_8LazyBoolEbb'/>
