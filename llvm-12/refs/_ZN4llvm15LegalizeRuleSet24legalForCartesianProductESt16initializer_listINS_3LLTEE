<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='570' ll='572' type='llvm::LegalizeRuleSet &amp; llvm::LegalizeRuleSet::legalForCartesianProduct(std::initializer_list&lt;LLT&gt; Types)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='568'>/// The instruction is legal when type indexes 0 and 1 are both in the given
  /// list. That is, the type pair is in the cartesian product of the list.</doc>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp' l='427' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp' l='434' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp' l='476' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp' l='642' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/X86/X86LegalizerInfo.cpp' l='235' u='c' c='_ZN4llvm16X86LegalizerInfo21setLegalizerInfo64bitEv'/>
<use f='llvm/llvm/lib/Target/X86/X86LegalizerInfo.cpp' l='242' u='c' c='_ZN4llvm16X86LegalizerInfo21setLegalizerInfo64bitEv'/>
