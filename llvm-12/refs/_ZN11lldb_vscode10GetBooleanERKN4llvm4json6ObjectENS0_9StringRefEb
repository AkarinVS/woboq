<dec f='llvm/lldb/tools/lldb-vscode/JSONUtils.h' l='92' type='bool lldb_vscode::GetBoolean(const llvm::json::Object &amp; obj, llvm::StringRef key, bool fail_value)'/>
<doc f='llvm/lldb/tools/lldb-vscode/JSONUtils.h' l='79'>/// Extract the boolean value for the specified key from the
/// specified object.
///
/// \param[in] obj
///     A JSON object that we will attempt to extract the value from
///
/// \param[in] key
///     The key to use when extracting the value
///
/// \return
///     The boolean value for the specified \a key, or \a fail_value
///     if there is no key that matches or if the value is not a
///     boolean value of an integer.</doc>
<def f='llvm/lldb/tools/lldb-vscode/JSONUtils.cpp' l='73' ll='80' type='bool lldb_vscode::GetBoolean(const llvm::json::Object &amp; obj, llvm::StringRef key, bool fail_value)'/>
<use f='llvm/lldb/tools/lldb-vscode/JSONUtils.cpp' l='86' u='c' c='_ZN11lldb_vscode10GetBooleanEPKN4llvm4json6ObjectENS0_9StringRefEb'/>
