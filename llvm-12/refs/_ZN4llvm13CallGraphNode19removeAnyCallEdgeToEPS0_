<dec f='llvm/llvm/include/llvm/Analysis/CallGraph.h' l='268' type='void llvm::CallGraphNode::removeAnyCallEdgeTo(llvm::CallGraphNode * Callee)'/>
<doc f='llvm/llvm/include/llvm/Analysis/CallGraph.h' l='263'>/// Removes all call edges from this node to the specified callee
  /// function.
  ///
  /// This takes more time to execute than removeCallEdgeTo, so it should not
  /// be used unless necessary.</doc>
<def f='llvm/llvm/lib/Analysis/CallGraph.cpp' l='232' ll='240' type='void llvm::CallGraphNode::removeAnyCallEdgeTo(llvm::CallGraphNode * Callee)'/>
<doc f='llvm/llvm/lib/Analysis/CallGraph.cpp' l='229'>// removeAnyCallEdgeTo - This method removes any call edges from this node to
// the specified callee function.  This takes more time to execute than
// removeCallEdgeTo, so it should not be used unless necessary.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/Inliner.cpp' l='571' u='c' c='_ZN4llvm17LegacyInlinerBase19removeDeadFunctionsERNS_9CallGraphEb'/>
<use f='llvm/llvm/lib/Transforms/Utils/CallGraphUpdater.cpp' l='36' u='c' c='_ZN4llvm16CallGraphUpdater8finalizeEv'/>
