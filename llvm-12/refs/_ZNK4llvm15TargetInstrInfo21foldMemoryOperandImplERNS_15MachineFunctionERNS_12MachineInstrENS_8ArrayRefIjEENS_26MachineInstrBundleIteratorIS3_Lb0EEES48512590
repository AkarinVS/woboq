<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1184' ll='1189' type='llvm::MachineInstr * llvm::TargetInstrInfo::foldMemoryOperandImpl(llvm::MachineFunction &amp; MF, llvm::MachineInstr &amp; MI, ArrayRef&lt;unsigned int&gt; Ops, MachineBasicBlock::iterator InsertPt, llvm::MachineInstr &amp; LoadMI, llvm::LiveIntervals * LIS = nullptr) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1179'>/// Target-dependent implementation for foldMemoryOperand.
  /// Target-independent code in foldMemoryOperand will
  /// take care of adding a MachineMemOperand to the newly created instruction.
  /// The instruction and any auxiliary instructions necessary will be inserted
  /// at InsertPt.</doc>
<use f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='682' u='c' c='_ZNK4llvm15TargetInstrInfo17foldMemoryOperandERNS_12MachineInstrENS_8ArrayRefIjEES2_PNS_13LiveIntervalsE'/>
<ovr f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1326' c='_ZNK4llvm16SystemZInstrInfo21foldMemoryOperandImplERNS_15MachineFunctionERNS_12MachineInstrENS_8ArrayRefIjEENS_26MachineInstrBundleIteratorIS3_Lb0EEES12865589'/>
<ovr f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='5980' c='_ZNK4llvm12X86InstrInfo21foldMemoryOperandImplERNS_15MachineFunctionERNS_12MachineInstrENS_8ArrayRefIjEENS_26MachineInstrBundleIteratorIS3_Lb0EEES4_PNS_13LiveIntervalsE'/>
