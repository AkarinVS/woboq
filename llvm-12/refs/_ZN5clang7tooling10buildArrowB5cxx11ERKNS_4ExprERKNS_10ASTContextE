<dec f='llvm/clang/include/clang/Tooling/Transformer/SourceCodeBuilders.h' l='80' type='llvm::Optional&lt;std::string&gt; clang::tooling::buildArrow(const clang::Expr &amp; E, const clang::ASTContext &amp; Context)'/>
<def f='llvm/clang/lib/Tooling/Transformer/SourceCodeBuilders.cpp' l='139' ll='160' type='llvm::Optional&lt;std::string&gt; clang::tooling::buildArrow(const clang::Expr &amp; E, const clang::ASTContext &amp; Context)'/>
<doc f='llvm/clang/include/clang/Tooling/Transformer/SourceCodeBuilders.h' l='74'>/// Adds an arrow to the end of the given expression, but adds parentheses
/// when needed by the syntax, and simplifies to `.` when possible, e.g.:
///
///  `x` becomes `x-&gt;`
///  `&amp;a` becomes `a.`
///  `a+b` becomes `(a+b)-&gt;`</doc>
<use f='llvm/clang/lib/Tooling/Transformer/Stencil.cpp' l='328' u='c' c='_ZN12_GLOBAL__N_18evalDataERKNS_10AccessDataERKN5clang12ast_matchers11MatchFinder11MatchResultEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/clang/unittests/Tooling/SourceCodeBuildersTest.cpp' l='212' u='r' c='_ZN12_GLOBAL__N_145SourceCodeBuildersTest_BuildArrowPointer_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/SourceCodeBuildersTest.cpp' l='216' u='r' c='_ZN12_GLOBAL__N_150SourceCodeBuildersTest_BuildArrowValueAddress_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/SourceCodeBuildersTest.cpp' l='220' u='r' c='_ZN12_GLOBAL__N_163SourceCodeBuildersTest_BuildArrowValueAddressIgnoresParens_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/SourceCodeBuildersTest.cpp' l='224' u='r' c='_ZN12_GLOBAL__N_153SourceCodeBuildersTest_BuildArrowBinaryOperation_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/SourceCodeBuildersTest.cpp' l='228' u='r' c='_ZN12_GLOBAL__N_160SourceCodeBuildersTest_BuildArrowValueAddressWithParens_Test8TestBodyEv'/>
