<dec f='llvm/llvm/include/llvm/Support/FileSystem.h' l='981' type='Expected&lt;size_t&gt; llvm::sys::fs::readNativeFile(llvm::sys::fs::file_t FileHandle, MutableArrayRef&lt;char&gt; Buf)'/>
<doc f='llvm/llvm/include/llvm/Support/FileSystem.h' l='974'>/// Reads \p Buf.size() bytes from \p FileHandle into \p Buf. Returns the number
/// of bytes actually read. On Unix, this is equivalent to `return ::read(FD,
/// Buf.data(), Buf.size())`, with error reporting. Returns 0 when reaching EOF.
///
/// @param FileHandle File to read from.
/// @param Buf Buffer to read into.
/// @returns The number of bytes read, or error.</doc>
<use f='llvm/llvm/lib/Support/MemoryBuffer.cpp' l='231' u='c' c='_ZL24getMemoryBufferForStreamiRKN4llvm5TwineE'/>
<def f='llvm/llvm/lib/Support/Unix/Path.inc' l='1069' ll='1080' type='Expected&lt;size_t&gt; llvm::sys::fs::readNativeFile(llvm::sys::fs::file_t FD, MutableArrayRef&lt;char&gt; Buf)'/>
<use f='llvm/llvm/unittests/Support/Path.cpp' l='1822' u='c' c='_ZN12_GLOBAL__N_134FileSystemTest_readNativeFile_Test8TestBodyEv'/>
