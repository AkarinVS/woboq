<dec f='llvm/lldb/include/lldb/Core/Module.h' l='859' type='bool lldb_private::Module::RemapSourceFile(llvm::StringRef path, std::string &amp; new_path) const'/>
<doc f='llvm/lldb/include/lldb/Core/Module.h' l='844'>/// Remaps a source file given \a path into \a new_path.
  ///
  /// Remaps \a path if any source remappings match. This function does NOT
  /// stat the file system so it can be used in tight loops where debug info
  /// is being parsed.
  ///
  /// \param[in] path
  ///     The original source file path to try and remap.
  ///
  /// \param[out] new_path
  ///     The newly remapped filespec that is may or may not exist.
  ///
  /// \return
  ///     /b true if \a path was successfully located and \a new_path
  ///     is filled in with a new source path, \b false otherwise.</doc>
<def f='llvm/lldb/source/Core/Module.cpp' l='1601' ll='1605' type='bool lldb_private::Module::RemapSourceFile(llvm::StringRef path, std::string &amp; new_path) const'/>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/SymbolFileDWARF.cpp' l='242' u='c' c='_ZL29ParseSupportFilesFromPrologueRKSt10shared_ptrIN12lldb_private6ModuleEERKN4llvm14DWARFDebugLine8PrologueENS5_3sys4path5StyleENS5_9StringRefE'/>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/SymbolFileDWARF.cpp' l='673' u='c' c='_ZL20MakeAbsoluteAndRemapRN12lldb_private8FileSpecER9DWARFUnitRKSt10shared_ptrINS_6ModuleEE'/>
