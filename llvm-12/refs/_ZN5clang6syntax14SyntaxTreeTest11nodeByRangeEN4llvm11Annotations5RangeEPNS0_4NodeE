<dec f='llvm/clang/unittests/Tooling/Syntax/TreeTestBase.h' l='39' type='syntax::Node * clang::syntax::SyntaxTreeTest::nodeByRange(llvm::Annotations::Range R, syntax::Node * Root)'/>
<use f='llvm/clang/unittests/Tooling/Syntax/BuildTreeTest.cpp' l='63' u='c' c='_ZN12_GLOBAL__N_119BuildSyntaxTreeTest26treeDumpEqualOnAnnotationsEN4llvm9StringRefENS1_8ArrayRefIS2_EE'/>
<doc f='llvm/clang/unittests/Tooling/Syntax/TreeTestBase.h' l='37'>/// Finds the deepest node in the tree that covers exactly \p R.
  /// FIXME: implement this efficiently and move to public syntax tree API.</doc>
<use f='llvm/clang/unittests/Tooling/Syntax/MutationsTest.cpp' l='48' u='c'/>
<def f='llvm/clang/unittests/Tooling/Syntax/TreeTestBase.cpp' l='161' ll='178' type='syntax::Node * clang::syntax::SyntaxTreeTest::nodeByRange(llvm::Annotations::Range R, syntax::Node * Root)'/>
<use f='llvm/clang/unittests/Tooling/Syntax/TreeTestBase.cpp' l='174' u='c' c='_ZN5clang6syntax14SyntaxTreeTest11nodeByRangeEN4llvm11Annotations5RangeEPNS0_4NodeE'/>
