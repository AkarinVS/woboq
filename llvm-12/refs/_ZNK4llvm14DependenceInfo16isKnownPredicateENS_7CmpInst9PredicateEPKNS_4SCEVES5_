<dec f='llvm/llvm/include/llvm/Analysis/DependenceAnalysis.h' l='560' type='bool llvm::DependenceInfo::isKnownPredicate(ICmpInst::Predicate Pred, const llvm::SCEV * X, const llvm::SCEV * Y) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/DependenceAnalysis.h' l='556'>/// isKnownPredicate - Compare X and Y using the predicate Pred.
    /// Basically a wrapper for SCEV::isKnownPredicate,
    /// but tries harder, especially in the presence of sign and zero
    /// extensions and symbolics.</doc>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='457' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='459' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='486' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='491' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='493' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='500' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='572' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='574' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<def f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='966' ll='1008' type='bool llvm::DependenceInfo::isKnownPredicate(ICmpInst::Predicate Pred, const llvm::SCEV * X, const llvm::SCEV * Y) const'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1103' u='c' c='_ZNK4llvm14DependenceInfo7testZIVEPKNS_4SCEVES3_RNS_14FullDependenceE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1107' u='c' c='_ZNK4llvm14DependenceInfo7testZIVEPKNS_4SCEVES3_RNS_14FullDependenceE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1173' u='c' c='_ZNK4llvm14DependenceInfo13strongSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1349' u='c' c='_ZNK4llvm14DependenceInfo19weakCrossingSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintERS3_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1355' u='c' c='_ZNK4llvm14DependenceInfo19weakCrossingSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintERS3_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1709' u='c' c='_ZNK4llvm14DependenceInfo18weakZeroSrcSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1731' u='c' c='_ZNK4llvm14DependenceInfo18weakZeroSrcSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1736' u='c' c='_ZNK4llvm14DependenceInfo18weakZeroSrcSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1818' u='c' c='_ZNK4llvm14DependenceInfo18weakZeroDstSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1840' u='c' c='_ZNK4llvm14DependenceInfo18weakZeroDstSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1845' u='c' c='_ZNK4llvm14DependenceInfo18weakZeroDstSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2050' u='c' c='_ZNK4llvm14DependenceInfo16symbolicRDIVtestEPKNS_4SCEVES3_S3_S3_PKNS_4LoopES6_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2059' u='c' c='_ZNK4llvm14DependenceInfo16symbolicRDIVtestEPKNS_4SCEVES3_S3_S3_PKNS_4LoopES6_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2073' u='c' c='_ZNK4llvm14DependenceInfo16symbolicRDIVtestEPKNS_4SCEVES3_S3_S3_PKNS_4LoopES6_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2094' u='c' c='_ZNK4llvm14DependenceInfo16symbolicRDIVtestEPKNS_4SCEVES3_S3_S3_PKNS_4LoopES6_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2111' u='c' c='_ZNK4llvm14DependenceInfo16symbolicRDIVtestEPKNS_4SCEVES3_S3_S3_PKNS_4LoopES6_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2120' u='c' c='_ZNK4llvm14DependenceInfo16symbolicRDIVtestEPKNS_4SCEVES3_S3_S3_PKNS_4LoopES6_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2707' u='c' c='_ZNK4llvm14DependenceInfo10testBoundsEhjPNS0_9BoundInfoEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2710' u='c' c='_ZNK4llvm14DependenceInfo10testBoundsEhjPNS0_9BoundInfoEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2745' u='c' c='_ZNK4llvm14DependenceInfo13findBoundsALLEPNS0_15CoefficientInfoES2_PNS0_9BoundInfoEj'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2748' u='c' c='_ZNK4llvm14DependenceInfo13findBoundsALLEPNS0_15CoefficientInfoES2_PNS0_9BoundInfoEj'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3143' u='c' c='_ZN4llvm14DependenceInfo13propagateLineERPKNS_4SCEVES4_RNS0_10ConstraintERb'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3225' u='c' c='_ZNK4llvm14DependenceInfo15updateDirectionERNS_10Dependence7DVEntryERKNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3230' u='c' c='_ZNK4llvm14DependenceInfo15updateDirectionERNS_10Dependence7DVEntryERKNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3235' u='c' c='_ZNK4llvm14DependenceInfo15updateDirectionERNS_10Dependence7DVEntryERKNS0_10ConstraintE'/>
<doc f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='956'>// A wrapper around SCEV::isKnownPredicate.
// Looks for cases where we&apos;re interested in comparing for equality.
// If both X and Y have been identically sign or zero extended,
// it strips off the (confusing) extensions before invoking
// SCEV::isKnownPredicate. Perhaps, someday, the ScalarEvolution package
// will be similarly updated.
//
// If SCEV::isKnownPredicate can&apos;t prove the predicate,
// we try simple subtraction, which seems to help in some cases
// involving symbolics.</doc>
