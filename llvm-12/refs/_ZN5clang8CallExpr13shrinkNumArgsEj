<def f='llvm/clang/include/clang/AST/Expr.h' l='2942' ll='2946' type='void clang::CallExpr::shrinkNumArgs(unsigned int NewNumArgs)'/>
<doc f='llvm/clang/include/clang/AST/Expr.h' l='2936'>/// Reduce the number of arguments in this call expression. This is used for
  /// example during error recovery to drop extra arguments. There is no way
  /// to perform the opposite because: 1.) We don&apos;t track how much storage
  /// we have for the argument array 2.) This would potentially require growing
  /// the argument array, something we cannot support since the arguments are
  /// stored in a trailing array.</doc>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='5846' u='c' c='_ZN5clang4Sema23ConvertArgumentsForCallEPNS_8CallExprEPNS_4ExprEPNS_12FunctionDeclEPKNS_17FunctionProtoTypeEN4llvm8ArrayRefIS4_EENS_14SourceLocationEb'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='6635' u='c' c='_ZN5clang4Sema21BuildResolvedCallExprEPNS_4ExprEPNS_9NamedDeclENS_14SourceLocationEN4llvm8ArrayRefIS2_EES5_S2_bNS_8CallExpr11ADLCallKindE'/>
