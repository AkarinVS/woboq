<def f='llvm/lldb/source/Plugins/Process/Utility/LinuxPTraceDefines_arm64sve.h' l='190' type='const uint32_t'/>
<use f='llvm/lldb/source/Plugins/Process/Utility/LinuxPTraceDefines_arm64sve.h' l='285' u='r' c='_ZN12lldb_private3sve10PTraceSizeEtt'/>
<use f='llvm/lldb/source/Plugins/Process/elf-core/RegisterContextPOSIXCore_arm64.cpp' l='90' u='r' c='_ZN30RegisterContextCorePOSIX_arm6418CalculateSVEOffsetEPKN12lldb_private12RegisterInfoE'/>
<use f='llvm/lldb/source/Plugins/Process/elf-core/RegisterContextPOSIXCore_arm64.cpp' l='139' u='r' c='_ZN30RegisterContextCorePOSIX_arm6412ReadRegisterEPKN12lldb_private12RegisterInfoERNS0_13RegisterValueE'/>
<use f='llvm/lldb/source/Plugins/Process/elf-core/RegisterContextPOSIXCore_arm64.cpp' l='145' u='r' c='_ZN30RegisterContextCorePOSIX_arm6412ReadRegisterEPKN12lldb_private12RegisterInfoERNS0_13RegisterValueE'/>
<doc f='llvm/lldb/source/Plugins/Process/Utility/LinuxPTraceDefines_arm64sve.h' l='180'>/*
 * (flags &amp; ptrace_regs_mask) == ptrace_regs_fpsimd case:
 *
 * The payload starts at offset PTraceFPSIMDOffset, and is of type
 * struct user_fpsimd_state.  Additional data might be appended in the
 * future: use PTraceFPSIMDSize(vq, flags) to compute the total size.
 * PTraceFPSIMDSize(vq, flags) will never be less than
 * sizeof(struct user_fpsimd_state).
 */</doc>
