<dec f='llvm/llvm/include/llvm/Support/Threading.h' l='68' type='void llvm::llvm_execute_on_thread(void (*)(void *) UserFn, void * UserData, llvm::Optional&lt;unsigned int&gt; StackSizeInBytes = llvm::None)'/>
<doc f='llvm/llvm/include/llvm/Support/Threading.h' l='57'>/// Execute the given \p UserFn on a separate thread, passing it the provided \p
/// UserData and waits for thread completion.
///
/// This function does not guarantee that the code will actually be executed
/// on a separate thread or honoring the requested stack size, but tries to do
/// so where system support is available.
///
/// \param UserFn - The callback to execute.
/// \param UserData - An argument to pass to the callback function.
/// \param StackSizeInBytes - A requested size (in bytes) for the thread stack
/// (or None for default)</doc>
<use f='llvm/clang/tools/libclang/CIndex.cpp' l='6722' u='c' c='clang_executeOnThread'/>
<use f='llvm/llvm/lib/Support/CrashRecoveryContext.cpp' l='503' u='c' c='_ZN4llvm20CrashRecoveryContext17RunSafelyOnThreadENS_12function_refIFvvEEEj'/>
<def f='llvm/llvm/lib/Support/Threading.cpp' l='117' ll='123' type='void llvm::llvm_execute_on_thread(void (*)(void *) Fn, void * UserData, llvm::Optional&lt;unsigned int&gt; StackSizeInBytes = llvm::None)'/>
<use f='llvm/llvm/unittests/Support/Threading.cpp' l='74' u='c' c='_ZN12_GLOBAL__N_130Threading_RunOnThreadSync_Test8TestBodyEv'/>
