<dec f='llvm/clang/include/clang/Format/Format.h' l='169' type='clang::format::FormatStyle::AlignConsecutiveStyle'/>
<use f='llvm/clang/include/clang/Format/Format.h' l='3034' u='r' c='_ZNK5clang6format11FormatStyleeqERKS1_'/>
<use f='llvm/clang/include/clang/Format/Format.h' l='3034' u='r' c='_ZNK5clang6format11FormatStyleeqERKS1_'/>
<offset>64</offset>
<doc f='llvm/clang/include/clang/Format/Format.h' l='101'>/// Style of aligning consecutive macro definitions.
  ///
  /// ``Consecutive`` will result in formattings like:
  /// \code
  ///   #define SHORT_NAME       42
  ///   #define LONGER_NAME      0x007f
  ///   #define EVEN_LONGER_NAME (2)
  ///   #define foo(x)           (x * x)
  ///   #define bar(y, z)        (y + z)
  /// \endcode
  ///
  /// Possible values:
  ///
  /// * ``ACS_None`` (in configuration: ``None``)
  ///    Do not align macro definitions on consecutive lines.
  ///
  /// * ``ACS_Consecutive`` (in configuration: ``Consecutive``)
  ///    Align macro definitions on consecutive lines. This will result in
  ///    formattings like:
  ///    \code
  ///      #define SHORT_NAME       42
  ///      #define LONGER_NAME      0x007f
  ///      #define EVEN_LONGER_NAME (2)
  ///
  ///      #define foo(x) (x * x)
  ///      /* some comment */
  ///      #define bar(y, z) (y + z)
  ///    \endcode
  ///
  /// * ``ACS_AcrossEmptyLines`` (in configuration: ``AcrossEmptyLines``)
  ///    Same as ACS_Consecutive, but also spans over empty lines, e.g.
  ///    \code
  ///      #define SHORT_NAME       42
  ///      #define LONGER_NAME      0x007f
  ///      #define EVEN_LONGER_NAME (2)
  ///
  ///      #define foo(x)           (x * x)
  ///      /* some comment */
  ///      #define bar(y, z) (y + z)
  ///    \endcode
  ///
  /// * ``ACS_AcrossComments`` (in configuration: ``AcrossComments``)
  ///    Same as ACS_Consecutive, but also spans over lines only containing
  ///    comments, e.g.
  ///    \code
  ///      #define SHORT_NAME       42
  ///      #define LONGER_NAME      0x007f
  ///      #define EVEN_LONGER_NAME (2)
  ///
  ///      #define foo(x)    (x * x)
  ///      /* some comment */
  ///      #define bar(y, z) (y + z)
  ///    \endcode
  ///
  /// * ``ACS_AcrossEmptyLinesAndComments``
  ///   (in configuration: ``AcrossEmptyLinesAndComments``)
  ///
  ///    Same as ACS_Consecutive, but also spans over lines only containing
  ///    comments and empty lines, e.g.
  ///    \code
  ///      #define SHORT_NAME       42
  ///      #define LONGER_NAME      0x007f
  ///      #define EVEN_LONGER_NAME (2)
  ///
  ///      #define foo(x)           (x * x)
  ///      /* some comment */
  ///      #define bar(y, z)        (y + z)
  ///    \endcode</doc>
<use f='llvm/clang/lib/Format/Format.cpp' l='473' u='a' c='_ZN4llvm4yaml13MappingTraitsIN5clang6format11FormatStyleEE7mappingERNS0_2IOERS4_'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='892' u='w' c='_ZN5clang6format12getLLVMStyleENS0_11FormatStyle12LanguageKindE'/>
<use f='llvm/clang/lib/Format/WhitespaceManager.cpp' l='544' u='r' c='_ZN5clang6format17WhitespaceManager22alignConsecutiveMacrosEv'/>
<use f='llvm/clang/lib/Format/WhitespaceManager.cpp' l='597' u='r' c='_ZN5clang6format17WhitespaceManager22alignConsecutiveMacrosEv'/>
<use f='llvm/clang/lib/Format/WhitespaceManager.cpp' l='598' u='r' c='_ZN5clang6format17WhitespaceManager22alignConsecutiveMacrosEv'/>
<use f='llvm/clang/lib/Format/WhitespaceManager.cpp' l='605' u='r' c='_ZN5clang6format17WhitespaceManager22alignConsecutiveMacrosEv'/>
<use f='llvm/clang/lib/Format/WhitespaceManager.cpp' l='607' u='r' c='_ZN5clang6format17WhitespaceManager22alignConsecutiveMacrosEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='12782' u='w' c='_ZN5clang6format12_GLOBAL__N_138FormatTest_AlignConsecutiveMacros_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='12806' u='w' c='_ZN5clang6format12_GLOBAL__N_138FormatTest_AlignConsecutiveMacros_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='12846' u='w' c='_ZN5clang6format12_GLOBAL__N_138FormatTest_AlignConsecutiveMacros_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='12860' u='w' c='_ZN5clang6format12_GLOBAL__N_138FormatTest_AlignConsecutiveMacros_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='12875' u='w' c='_ZN5clang6format12_GLOBAL__N_138FormatTest_AlignConsecutiveMacros_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='12933' u='w' c='_ZN5clang6format12_GLOBAL__N_138FormatTest_AlignConsecutiveMacros_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='12971' u='w' c='_ZN5clang6format12_GLOBAL__N_138FormatTest_AlignConsecutiveMacros_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13022' u='w' c='_ZN5clang6format12_GLOBAL__N_159FormatTest_AlignConsecutiveAssignmentsAcrossEmptyLines_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13227' u='w' c='_ZN5clang6format12_GLOBAL__N_157FormatTest_AlignConsecutiveAssignmentsAcrossComments_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13314' u='w' c='_ZN5clang6format12_GLOBAL__N_170FormatTest_AlignConsecutiveAssignmentsAcrossEmptyLinesAndComments_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13629' u='w' c='_ZN5clang6format12_GLOBAL__N_143FormatTest_AlignConsecutiveAssignments_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='13911' u='w' c='_ZN5clang6format12_GLOBAL__N_144FormatTest_AlignConsecutiveDeclarations_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15564' u='w' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15565' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15565' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15567' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15567' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15570' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15570' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15572' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15572' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15575' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15575' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15577' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15577' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
