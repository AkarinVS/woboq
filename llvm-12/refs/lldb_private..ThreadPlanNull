<inh f='llvm/lldb/include/lldb/Target/ThreadPlan.h' l='281' c='lldb_private::ThreadPlan'/>
<def f='llvm/lldb/include/lldb/Target/ThreadPlan.h' l='584' ll='612'/>
<use f='llvm/lldb/include/lldb/Target/ThreadPlan.h' l='610' c='_ZN12lldb_private14ThreadPlanNullC1ERKS0_'/>
<use f='llvm/lldb/include/lldb/Target/ThreadPlan.h' l='611' c='_ZN12lldb_private14ThreadPlanNullaSERKS0_'/>
<use f='llvm/lldb/include/lldb/Target/ThreadPlan.h' l='611' c='_ZN12lldb_private14ThreadPlanNullaSERKS0_'/>
<size>224</size>
<doc f='llvm/lldb/include/lldb/Target/ThreadPlan.h' l='578'>// ThreadPlanNull:
// Threads are assumed to always have at least one plan on the plan stack. This
// is put on the plan stack when a thread is destroyed so that if you
// accidentally access a thread after it is destroyed you won&apos;t crash. But
// asking questions of the ThreadPlanNull is definitely an error.</doc>
<fun r='_ZN12lldb_private14ThreadPlanNullC1ERNS_6ThreadE'/>
<fun r='_ZN12lldb_private14ThreadPlanNullD1Ev'/>
<fun r='_ZN12lldb_private14ThreadPlanNull14GetDescriptionEPNS_6StreamEN4lldb16DescriptionLevelE'/>
<fun r='_ZN12lldb_private14ThreadPlanNull12ValidatePlanEPNS_6StreamE'/>
<fun r='_ZN12lldb_private14ThreadPlanNull10ShouldStopEPNS_5EventE'/>
<fun r='_ZN12lldb_private14ThreadPlanNull15MischiefManagedEv'/>
<fun r='_ZN12lldb_private14ThreadPlanNull8WillStopEv'/>
<fun r='_ZN12lldb_private14ThreadPlanNull10IsBasePlanEv'/>
<fun r='_ZN12lldb_private14ThreadPlanNull13OkayToDiscardEv'/>
<fun r='_ZN12lldb_private14ThreadPlanNull9GetStatusEv'/>
<fun r='_ZN12lldb_private14ThreadPlanNull18DoPlanExplainsStopEPNS_5EventE'/>
<fun r='_ZN12lldb_private14ThreadPlanNull15GetPlanRunStateEv'/>
<fun r='_ZN12lldb_private14ThreadPlanNullC1ERKS0_'/>
<fun r='_ZN12lldb_private14ThreadPlanNullaSERKS0_'/>
<use f='llvm/lldb/source/Target/ThreadPlanStack.cpp' l='35' c='_ZN12lldb_private15ThreadPlanStackC1ERKNS_6ThreadEb'/>
<use f='llvm/lldb/source/Target/ThreadPlanStack.cpp' l='122' c='_ZN12lldb_private15ThreadPlanStack15ThreadDestroyedEPNS_6ThreadE'/>
<size>224</size>
