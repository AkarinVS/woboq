<dec f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='637' type='bool llvm::isGuaranteedNotToBeUndefOrPoison(const llvm::Value * V, llvm::AssumptionCache * AC = nullptr, const llvm::Instruction * CtxI = nullptr, const llvm::DominatorTree * DT = nullptr, unsigned int Depth = 0)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='628'>/// Return true if this function can prove that V does not have undef bits
  /// and is never poison. If V is an aggregate value or vector, check whether
  /// all elements (except padding) are not undef or poison.
  /// Note that this is different from canCreateUndefOrPoison because the
  /// function assumes Op&apos;s operands are not poison/undef.
  ///
  /// If CtxI and DT are specified this method performs flow-sensitive analysis
  /// and returns true if it is guaranteed to be never undef or poison
  /// immediately before the CtxI.</doc>
<use f='llvm/llvm/lib/Analysis/ConstantFolding.cpp' l='1095' u='c' c='_ZN12_GLOBAL__N_128ConstantFoldInstOperandsImplEPKN4llvm5ValueEjNS0_8ArrayRefIPNS0_8ConstantEEERKNS0_10DataLayoutEPKNS0_17TargetLibraryInfoE'/>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='4224' u='c' c='_ZL18SimplifySelectInstPN4llvm5ValueES1_S1_RKNS_13SimplifyQueryEj'/>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='4228' u='c' c='_ZL18SimplifySelectInstPN4llvm5ValueES1_S1_RKNS_13SimplifyQueryEj'/>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='4251' u='c' c='_ZL18SimplifySelectInstPN4llvm5ValueES1_S1_RKNS_13SimplifyQueryEj'/>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='4254' u='c' c='_ZL18SimplifySelectInstPN4llvm5ValueES1_S1_RKNS_13SimplifyQueryEj'/>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='5781' u='c' c='_ZL18SimplifyFreezeInstPN4llvm5ValueERKNS_13SimplifyQueryE'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4828' u='c' c='_ZL13impliesPoisonPKN4llvm5ValueES2_j'/>
<def f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4984' ll='4989' type='bool llvm::isGuaranteedNotToBeUndefOrPoison(const llvm::Value * V, llvm::AssumptionCache * AC = nullptr, const llvm::Instruction * CtxI = nullptr, const llvm::DominatorTree * DT = nullptr, unsigned int Depth = 0)'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='7907' u='c' c='_ZN12_GLOBAL__N_113AANoUndefImpl10initializeERN4llvm10AttributorE'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='7924' u='c' c='_ZN12_GLOBAL__N_113AANoUndefImpl15followUseInMBECERN4llvm10AttributorEPKNS1_3UseEPKNS1_11InstructionERNS1_12BooleanStateE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1095' u='c' c='_ZL27foldAndOrOfICmpsWithConstEqPN4llvm8ICmpInstES1_RNS_14BinaryOperatorERNS_9IRBuilderINS_12TargetFolderENS_25IRBuilderCallbackInserterEEERKNS_13SimplifyQueryE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='1116' u='c' c='_ZN4llvm16InstCombinerImpl26foldSelectValueEquivalenceERNS_10SelectInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='1138' u='c' c='_ZN4llvm16InstCombinerImpl26foldSelectValueEquivalenceERNS_10SelectInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='1084' u='c' c='_ZN4llvm16InstCombinerImpl13foldOpIntoPhiERNS_11InstructionEPNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DivRemPairs.cpp' l='318' u='c' c='_ZL14optimizeDivRemRN4llvm8FunctionERKNS_19TargetTransformInfoERKNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DivRemPairs.cpp' l='325' u='c' c='_ZL14optimizeDivRemRN4llvm8FunctionERKNS_19TargetTransformInfoERKNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2907' u='c' c='_ZN4llvm17JumpThreadingPass25tryToUnfoldSelectInCurrBBEPNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SCCP.cpp' l='2117' u='c' c='_ZN4llvm9runIPSCCPERNS_6ModuleERKNS_10DataLayoutESt8functionIFRKNS_17TargetLibraryInfoERNS_8FunctionEEENS_12function_refIFNS_20AnalysisResultsForFnESA_EEE'/>
<use f='llvm/llvm/lib/Transforms/Utils/CanonicalizeFreezeInLoops.cpp' l='112' u='c' c='_ZN12_GLOBAL__N_129CanonicalizeFreezeInLoopsImpl29InsertFreezeAndForgetFromSCEVERN4llvm3UseE'/>
<use f='llvm/llvm/lib/Transforms/Utils/CanonicalizeFreezeInLoops.cpp' l='179' u='c' c='_ZN12_GLOBAL__N_129CanonicalizeFreezeInLoopsImpl3runEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueTrackingTest.cpp' l='933' u='c' c='_ZN55ValueTrackingTest_isGuaranteedNotToBeUndefOrPoison_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueTrackingTest.cpp' l='933' u='c' c='_ZN55ValueTrackingTest_isGuaranteedNotToBeUndefOrPoison_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueTrackingTest.cpp' l='934' u='c' c='_ZN55ValueTrackingTest_isGuaranteedNotToBeUndefOrPoison_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueTrackingTest.cpp' l='934' u='c' c='_ZN55ValueTrackingTest_isGuaranteedNotToBeUndefOrPoison_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueTrackingTest.cpp' l='935' u='c' c='_ZN55ValueTrackingTest_isGuaranteedNotToBeUndefOrPoison_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueTrackingTest.cpp' l='935' u='c' c='_ZN55ValueTrackingTest_isGuaranteedNotToBeUndefOrPoison_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueTrackingTest.cpp' l='947' u='c' c='_ZN55ValueTrackingTest_isGuaranteedNotToBeUndefOrPoison_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueTrackingTest.cpp' l='953' u='c' c='_ZN55ValueTrackingTest_isGuaranteedNotToBeUndefOrPoison_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueTrackingTest.cpp' l='959' u='c' c='_ZN55ValueTrackingTest_isGuaranteedNotToBeUndefOrPoison_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueTrackingTest.cpp' l='986' u='c' c='_ZN62ValueTrackingTest_isGuaranteedNotToBeUndefOrPoison_assume_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueTrackingTest.cpp' l='987' u='c' c='_ZN62ValueTrackingTest_isGuaranteedNotToBeUndefOrPoison_assume_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/ValueTrackingTest.cpp' l='988' u='c' c='_ZN62ValueTrackingTest_isGuaranteedNotToBeUndefOrPoison_assume_Test8TestBodyEv'/>
