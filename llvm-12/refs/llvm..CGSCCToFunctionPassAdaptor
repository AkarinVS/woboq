<inh f='llvm/llvm/include/llvm/IR/PassManager.h' l='374' c='llvm::PassInfoMixin'/>
<def f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='459' ll='488'/>
<use f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='460'/>
<use f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='467' c='_ZN4llvm26CGSCCToFunctionPassAdaptorC1EOS0_'/>
<use f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='470' c='_ZN4llvm4swapERNS_26CGSCCToFunctionPassAdaptorES1_'/>
<use f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='471' c='_ZN4llvm4swapERNS_26CGSCCToFunctionPassAdaptorES1_'/>
<use f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='475' c='_ZN4llvm26CGSCCToFunctionPassAdaptoraSES0_'/>
<use f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='475' c='_ZN4llvm26CGSCCToFunctionPassAdaptoraSES0_'/>
<use f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='493' c='_ZN4llvm32createCGSCCToFunctionPassAdaptorET_'/>
<use f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='498' c='_ZN4llvm32createCGSCCToFunctionPassAdaptorET_'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='451'>/// Adaptor that maps from a SCC to its functions.
///
/// Designed to allow composition of a FunctionPass(Manager) and
/// a CGSCCPassManager. Note that if this pass is constructed with a pointer
/// to a \c CGSCCAnalysisManager it will run the
/// \c FunctionAnalysisManagerCGSCCProxy analysis prior to running the function
/// pass over the SCC to enable a \c FunctionAnalysisManager to be used
/// within this run safely.</doc>
<fun r='_ZN4llvm26CGSCCToFunctionPassAdaptorC1ESt10unique_ptrINS_6detail11PassConceptINS_8FunctionENS_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EE'/>
<fun r='_ZN4llvm26CGSCCToFunctionPassAdaptorC1EOS0_'/>
<fun r='_ZN4llvm26CGSCCToFunctionPassAdaptoraSES0_'/>
<fun r='_ZN4llvm26CGSCCToFunctionPassAdaptor3runERNS_13LazyCallGraph3SCCERNS_15AnalysisManagerIS2_JRS1_EEES5_RNS_17CGSCCUpdateResultE'/>
<fun r='_ZN4llvm26CGSCCToFunctionPassAdaptor10isRequiredEv'/>
<mbr r='llvm::CGSCCToFunctionPassAdaptor::Pass' o='0' t='std::unique_ptr&lt;PassConceptT&gt;'/>
