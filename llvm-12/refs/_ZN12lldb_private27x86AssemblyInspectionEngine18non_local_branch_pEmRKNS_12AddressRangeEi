<dec f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.h' l='119' type='bool lldb_private::x86AssemblyInspectionEngine::non_local_branch_p(const lldb::addr_t current_func_text_offset, const lldb_private::AddressRange &amp; func_range, const int instruction_length)'/>
<def f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='841' ll='851' type='bool lldb_private::x86AssemblyInspectionEngine::non_local_branch_p(const lldb::addr_t current_func_text_offset, const lldb_private::AddressRange &amp; func_range, const int instruction_length)'/>
<use f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='1238' u='c' c='_ZN12lldb_private27x86AssemblyInspectionEngine36GetNonCallSiteUnwindPlanFromAssemblyEPhmRNS_12AddressRangeERNS_10UnwindPlanE'/>
<doc f='llvm/lldb/source/Plugins/UnwindAssembly/x86/x86AssemblyInspectionEngine.cpp' l='837'>// Returns true if this instruction is a inter-function branch or jump - a
// branch/jump to another function.
// Cannot predict where a jump through a register value (&quot;jmpq *%rax&quot;)
// will go, so it will return false on that instruction.</doc>
