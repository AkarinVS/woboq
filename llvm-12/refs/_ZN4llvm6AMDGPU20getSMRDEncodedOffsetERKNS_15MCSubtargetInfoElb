<dec f='llvm/llvm/lib/Target/AMDGPU/Utils/AMDGPUBaseInfo.h' l='826' type='Optional&lt;int64_t&gt; llvm::AMDGPU::getSMRDEncodedOffset(const llvm::MCSubtargetInfo &amp; ST, int64_t ByteOffset, bool IsBuffer)'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/Utils/AMDGPUBaseInfo.h' l='822'>/// \returns The encoding that will be used for \p ByteOffset in the
/// SMRD offset field, or None if it won&apos;t fit. On GFX9 and GFX10
/// S_LOAD instructions have a signed offset, on other subtargets it is
/// unsigned. S_BUFFER has an unsigned offset for all subtargets.</doc>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp' l='1953' u='c' c='_ZNK12_GLOBAL__N_118AMDGPUDAGToDAGISel16SelectSMRDOffsetEN4llvm7SDValueERS2_Rb'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp' l='2065' u='c' c='_ZNK12_GLOBAL__N_118AMDGPUDAGToDAGISel19SelectSMRDBufferImmEN4llvm7SDValueERS2_'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp' l='3347' u='c' c='_ZNK4llvm25AMDGPUInstructionSelector13selectSmrdImmERNS_14MachineOperandE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp' l='4242' u='c' c='_ZNK4llvm25AMDGPUInstructionSelector19selectSMRDBufferImmERNS_14MachineOperandE'/>
<def f='llvm/llvm/lib/Target/AMDGPU/Utils/AMDGPUBaseInfo.cpp' l='1631' ll='1646' type='Optional&lt;int64_t&gt; llvm::AMDGPU::getSMRDEncodedOffset(const llvm::MCSubtargetInfo &amp; ST, int64_t ByteOffset, bool IsBuffer)'/>
