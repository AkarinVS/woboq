<def f='llvm/clang/lib/AST/Interp/Integral.h' l='56' ll='257'/>
<use f='llvm/clang/lib/AST/Interp/Integral.h' l='77' c='_ZN5clang6interp8IntegralC1ENS0_8IntegralIXTL0__EXTL0_0_EEE'/>
<use f='llvm/clang/lib/AST/Interp/Integral.h' l='98' c='_ZNK5clang6interp8IntegralcvNS0_8IntegralIXTL0__EXTL0_0_EEEEv'/>
<use f='llvm/clang/lib/AST/Interp/Integral.h' l='99' c='_ZNK5clang6interp8IntegralcvNS0_8IntegralIXTL0__EXTL0_0_EEEEv'/>
<use f='llvm/clang/lib/AST/Interp/Integral.h' l='117' c='_ZNK5clang6interp8Integral10toUnsignedEv'/>
<use f='llvm/clang/lib/AST/Interp/Integral.h' l='118' c='_ZNK5clang6interp8Integral10toUnsignedEv'/>
<use f='llvm/clang/lib/AST/Interp/Integral.h' l='165' c='_ZN5clang6interp8Integral4fromENS0_8IntegralIXTL0__EXTL0_0_EEE'/>
<use f='llvm/clang/lib/AST/Interp/Integral.h' l='169' c='_ZN5clang6interp8Integral4fromENS0_8IntegralILj0EXTL0__EEE'/>
<use f='llvm/clang/lib/AST/Interp/Integral.h' l='260' c='_ZN5clang6interplsERN4llvm11raw_ostreamENS0_8IntegralIXT_EXT0_EEE'/>
<use f='llvm/clang/lib/AST/Interp/Boolean.h' l='94' c='_ZN5clang6interp7Boolean4fromENS0_8IntegralIXT_EXT0_EEE'/>
<use f='llvm/clang/lib/AST/Interp/Boolean.h' l='99' c='_ZN5clang6interp7Boolean4fromENS0_8IntegralILj0EXT_EEE'/>
<use f='llvm/clang/lib/AST/Interp/PrimType.h' l='42'/>
<use f='llvm/clang/lib/AST/Interp/PrimType.h' l='43'/>
<use f='llvm/clang/lib/AST/Interp/PrimType.h' l='44'/>
<use f='llvm/clang/lib/AST/Interp/PrimType.h' l='45'/>
<use f='llvm/clang/lib/AST/Interp/PrimType.h' l='46'/>
<use f='llvm/clang/lib/AST/Interp/PrimType.h' l='47'/>
<use f='llvm/clang/lib/AST/Interp/PrimType.h' l='48'/>
<use f='llvm/clang/lib/AST/Interp/PrimType.h' l='49'/>
<doc f='llvm/clang/lib/AST/Interp/Integral.h' l='51'>/// Wrapper around numeric types.
///
/// These wrappers are required to shared an interface between APSint and
/// builtin primitive numeral types, while optimising for storage and
/// allowing methods operating on primitive type to compile to fast code.</doc>
<mbr r='clang::interp::Integral::V' t='clang::interp::Integral::T'/>
<smbr r='clang::interp::Integral::Min' t='const auto'/>
<smbr r='clang::interp::Integral::Max' t='const auto'/>
<fun r='_ZN5clang6interp8IntegralC1ETL0__'/>
<fun r='_ZN5clang6interp8IntegralC1Ev'/>
<fun r='_ZN5clang6interp8IntegralC1ENS0_8IntegralIXTL0__EXTL0_0_EEE'/>
<fun r='_ZN5clang6interp8IntegralC1ERKN4llvm6APSIntE'/>
<fun r='_ZNK5clang6interp8IntegralltENS0_8IntegralIXT_EXT0_EEE'/>
<fun r='_ZNK5clang6interp8IntegralgtENS0_8IntegralIXT_EXT0_EEE'/>
<fun r='_ZNK5clang6interp8IntegralleENS0_8IntegralIXT_EXT0_EEE'/>
<fun r='_ZNK5clang6interp8IntegralgeENS0_8IntegralIXT_EXT0_EEE'/>
<fun r='_ZNK5clang6interp8IntegraleqENS0_8IntegralIXT_EXT0_EEE'/>
<fun r='_ZNK5clang6interp8IntegralneENS0_8IntegralIXT_EXT0_EEE'/>
<fun r='_ZNK5clang6interp8IntegralgtEj'/>
<fun r='_ZNK5clang6interp8IntegralngEv'/>
<fun r='_ZNK5clang6interp8IntegralcoEv'/>
<fun r='_ZNK5clang6interp8IntegralcvNS0_8IntegralIXTL0__EXTL0_0_EEEEv'/>
<fun r='_ZNK5clang6interp8IntegralcvjEv'/>
<fun r='_ZNK5clang6interp8IntegralcvlEv'/>
<fun r='_ZNK5clang6interp8IntegralcvmEv'/>
<fun r='_ZNK5clang6interp8Integral8toAPSIntEv'/>
<fun r='_ZNK5clang6interp8Integral8toAPSIntEj'/>
<fun r='_ZNK5clang6interp8Integral9toAPValueEv'/>
<fun r='_ZNK5clang6interp8Integral10toUnsignedEv'/>
<fun r='_ZN5clang6interp8Integral8bitWidthEv'/>
<fun r='_ZNK5clang6interp8Integral6isZeroEv'/>
<fun r='_ZNK5clang6interp8Integral5isMinEv'/>
<fun r='_ZNK5clang6interp8Integral10isMinusOneEv'/>
<fun r='_ZN5clang6interp8Integral8isSignedEv'/>
<fun r='_ZNK5clang6interp8Integral10isNegativeEv'/>
<fun r='_ZNK5clang6interp8Integral10isPositiveEv'/>
<fun r='_ZNK5clang6interp8Integral7compareERKNS0_8IntegralIXT_EXT0_EEE'/>
<fun r='_ZNK5clang6interp8Integral17countLeadingZerosEv'/>
<fun r='_ZNK5clang6interp8Integral8truncateEj'/>
<fun r='_ZNK5clang6interp8Integral5printERN4llvm11raw_ostreamE'/>
<fun r='_ZN5clang6interp8Integral3minEj'/>
<fun r='_ZN5clang6interp8Integral3maxEj'/>
<fun r='_ZN5clang6interp8Integral4fromETL0__'/>
<fun r='_ZN5clang6interp8Integral4fromENS0_8IntegralIXTL0__EXTL0_0_EEE'/>
<fun r='_ZN5clang6interp8Integral4fromENS0_8IntegralILj0EXTL0__EEE'/>
<fun r='_ZN5clang6interp8Integral4zeroEv'/>
<fun r='_ZN5clang6interp8Integral4fromETL0__j'/>
<fun r='_ZN5clang6interp8Integral7inRangeElj'/>
<fun r='_ZN5clang6interp8Integral9incrementENS0_8IntegralIXT_EXT0_EEEPS4_'/>
<fun r='_ZN5clang6interp8Integral9decrementENS0_8IntegralIXT_EXT0_EEEPS4_'/>
<fun r='_ZN5clang6interp8Integral3addENS0_8IntegralIXT_EXT0_EEES4_jPS4_'/>
<fun r='_ZN5clang6interp8Integral3subENS0_8IntegralIXT_EXT0_EEES4_jPS4_'/>
<fun r='_ZN5clang6interp8Integral3mulENS0_8IntegralIXT_EXT0_EEES4_jPS4_'/>
<fun r='_ZN5clang6interp8Integral10CheckAddUBETL0__S2_RS2_'/>
<fun r='_ZN5clang6interp8Integral10CheckAddUBETL0__S2_RS2_'/>
<fun r='_ZN5clang6interp8Integral10CheckSubUBETL0__S2_RS2_'/>
<fun r='_ZN5clang6interp8Integral10CheckSubUBETL0__S2_RS2_'/>
<fun r='_ZN5clang6interp8Integral10CheckMulUBETL0__S2_RS2_'/>
<fun r='_ZN5clang6interp8Integral10CheckMulUBETL0__S2_RS2_'/>
<fun r='_ZN5clang6interp8Integral10CheckRangeEl'/>
<fun r='_ZN5clang6interp8Integral10CheckRangeEl'/>
