<def f='llvm/lldb/include/lldb/Symbol/CompilerDecl.h' l='37' ll='38' type='void lldb_private::CompilerDecl::CompilerDecl(lldb_private::TypeSystem * type_system, void * decl)'/>
<doc f='llvm/lldb/include/lldb/Symbol/CompilerDecl.h' l='33'>/// Creates a CompilerDecl with the given TypeSystem and opaque pointer.
  ///
  /// This constructor should only be called from the respective TypeSystem
  /// implementation.</doc>
<use f='llvm/lldb/source/Plugins/TypeSystem/Clang/TypeSystemClang.h' l='476' u='c' c='_ZN12lldb_private15TypeSystemClang15GetCompilerDeclEPN5clang4DeclE'/>
