<use f='llvm/clang/include/clang/AST/ASTContext.h' l='2221' u='c' c='_ZNK5clang10ASTContext21getPreferredTypeAlignENS_8QualTypeE'/>
<dec f='llvm/clang/include/clang/AST/ASTContext.h' l='2223' type='unsigned int clang::ASTContext::getPreferredTypeAlign(const clang::Type * T) const'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='1739' u='c' c='_ZNK5clang10ASTContext12getDeclAlignEPKNS_4DeclEb'/>
<def f='llvm/clang/lib/AST/ASTContext.cpp' l='2416' ll='2458' type='unsigned int clang::ASTContext::getPreferredTypeAlign(const clang::Type * T) const'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='2424' u='c' c='_ZNK5clang10ASTContext21getPreferredTypeAlignEPKNS_4TypeE'/>
<doc f='llvm/clang/lib/AST/ASTContext.cpp' l='2411'>/// getPreferredTypeAlign - Return the &quot;preferred&quot; alignment of the specified
/// type for the current target in bits.  This can be different than the ABI
/// alignment in cases where it is beneficial for performance or backwards
/// compatibility preserving to overalign a data type. (Note: despite the name,
/// the preferred alignment is ABI-impacting, and not an optimization.)</doc>
<use f='llvm/clang/lib/AST/ExprConstant.cpp' l='8853' u='c' c='_ZL14GetAlignOfTypeRN12_GLOBAL__N_18EvalInfoEN5clang8QualTypeENS2_20UnaryExprOrTypeTraitE'/>
<use f='llvm/clang/lib/CodeGen/CGObjCMac.cpp' l='6996' u='c' c='_ZN12_GLOBAL__N_122CGObjCNonFragileABIMac12EmitIvarListEPKN5clang22ObjCImplementationDeclE'/>
