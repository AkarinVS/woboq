<def f='llvm/lldb/include/lldb/Interpreter/CommandObject.h' l='181' ll='184' type='bool lldb_private::CommandObject::LoadSubCommand(llvm::StringRef cmd_name, const lldb::CommandObjectSP &amp; command_obj)'/>
<doc f='llvm/lldb/include/lldb/Interpreter/CommandObject.h' l='178'>// this is needed in order to allow the SBCommand class to transparently try
  // and load subcommands - it will fail on anything but a multiword command,
  // but it avoids us doing type checkings and casts</doc>
<use f='llvm/lldb/source/API/SBCommandInterpreter.cpp' l='702' u='c' c='_ZN4lldb9SBCommand19AddMultiwordCommandEPKcS2_'/>
<use f='llvm/lldb/source/API/SBCommandInterpreter.cpp' l='746' u='c' c='_ZN4lldb9SBCommand10AddCommandEPKcPNS_24SBCommandPluginInterfaceES2_S2_S2_'/>
<ovr f='llvm/lldb/source/Commands/CommandObjectMultiword.cpp' l='68' c='_ZN12lldb_private22CommandObjectMultiword14LoadSubCommandEN4llvm9StringRefERKSt10shared_ptrINS_13CommandObjectEE'/>
<ovr f='llvm/lldb/source/Commands/CommandObjectMultiword.cpp' l='349' c='_ZN12lldb_private18CommandObjectProxy14LoadSubCommandEN4llvm9StringRefERKSt10shared_ptrINS_13CommandObjectEE'/>
<use f='llvm/lldb/source/Commands/CommandObjectMultiword.cpp' l='353' u='c' c='_ZN12lldb_private18CommandObjectProxy14LoadSubCommandEN4llvm9StringRefERKSt10shared_ptrINS_13CommandObjectEE'/>
<use f='llvm/lldb/source/Plugins/StructuredData/DarwinLog/StructuredDataDarwinLog.cpp' l='1384' u='c' c='_ZN12lldb_private23StructuredDataDarwinLog18DebuggerInitializeERNS_8DebuggerE'/>
<use f='llvm/lldb/source/Target/LanguageRuntime.cpp' l='285' u='c' c='_ZN12lldb_private15LanguageRuntime18InitializeCommandsEPNS_13CommandObjectE'/>
<use f='llvm/lldb/source/Target/StructuredDataPlugin.cpp' l='60' u='c' c='_ZN12lldb_private20StructuredDataPlugin31InitializeBasePluginForDebuggerERNS_8DebuggerE'/>
