<dec f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.h' l='579' type='void lldb_private::ClangExpressionDeclMap::AddOneFunction(lldb_private::NameSearchContext &amp; context, lldb_private::Function * fun, lldb_private::Symbol * sym)'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.cpp' l='1285' u='c' c='_ZN12lldb_private22ClangExpressionDeclMap14LookupFunctionERNS_17NameSearchContextESt10shared_ptrINS_6ModuleEENS_11ConstStringERKNS_19CompilerDeclContextE'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.cpp' l='1317' u='c' c='_ZN12lldb_private22ClangExpressionDeclMap14LookupFunctionERNS_17NameSearchContextESt10shared_ptrINS_6ModuleEENS_11ConstStringERKNS_19CompilerDeclContextE'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.cpp' l='1320' u='c' c='_ZN12lldb_private22ClangExpressionDeclMap14LookupFunctionERNS_17NameSearchContextESt10shared_ptrINS_6ModuleEENS_11ConstStringERKNS_19CompilerDeclContextE'/>
<def f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.cpp' l='1721' ll='1890' type='void lldb_private::ClangExpressionDeclMap::AddOneFunction(lldb_private::NameSearchContext &amp; context, lldb_private::Function * function, lldb_private::Symbol * symbol)'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionDeclMap.h' l='565'>/// Use the NameSearchContext to generate a Decl for the given function.
  /// (Functions are not placed in the Tuple list.)  Can handle both fully
  /// typed functions and generic functions.
  ///
  /// \param[in] context
  ///     The NameSearchContext to use when constructing the Decl.
  ///
  /// \param[in] fun
  ///     The Function that needs to be created.  If non-NULL, this is
  ///     a fully-typed function.
  ///
  /// \param[in] sym
  ///     The Symbol that corresponds to a function that needs to be
  ///     created with generic type (unitptr_t foo(...)).</doc>
