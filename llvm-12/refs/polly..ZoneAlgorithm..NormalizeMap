<dec f='llvm/polly/include/polly/ZoneAlgo.h' l='151' type='isl::union_map'/>
<offset>2112</offset>
<doc f='llvm/polly/include/polly/ZoneAlgo.h' l='127'>/// For computed PHIs, contains the ValInst they stand for.
  ///
  /// To show an example, assume the following PHINode:
  ///
  ///   Stmt:
  ///     %phi = phi double [%val1, %bb1], [%val2, %bb2]
  ///
  /// It&apos;s ValInst is:
  ///
  ///   { [Stmt[i] -&gt; phi[]] }
  ///
  /// The value %phi will be either %val1 or %val2, depending on whether in
  /// iteration i %bb1 or %bb2 has been executed before. In SCoPs, this can be
  /// determined at compile-time, and the result stored in #NormalizeMap. For
  /// the previous example, it could be:
  ///
  ///   { [Stmt[i] -&gt; phi[]] -&gt; [Stmt[0] -&gt; val1[]];
  ///     [Stmt[i] -&gt; phi[]] -&gt; [Stmt[i] -&gt; val2[]] : i &gt; 0 }
  ///
  /// Only ValInsts in #ComputedPHIs are present in this map. Other values are
  /// assumed to represent themselves. This is to avoid adding lots of identity
  /// entries to this map.
  ///
  /// { PHIValInst[] -&gt; IncomingValInst[] }</doc>
<use f='llvm/polly/lib/Transform/ForwardOpTree.cpp' l='366' u='m' c='_ZN12_GLOBAL__N_117ForwardOpTreeImpl18computeKnownValuesEv'/>
<use f='llvm/polly/lib/Transform/ForwardOpTree.cpp' l='370' u='w' c='_ZN12_GLOBAL__N_117ForwardOpTreeImpl18computeKnownValuesEv'/>
<use f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='884' u='r' c='_ZN5polly13ZoneAlgorithm21makeNormalizedValInstEPN4llvm5ValueEPNS_8ScopStmtEPNS1_4LoopEb'/>
<use f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='972' u='w' c='_ZN5polly13ZoneAlgorithm13computeCommonEv'/>
<use f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='1085' u='w' c='_ZN5polly13ZoneAlgorithm21computeNormalizedPHIsEv'/>
