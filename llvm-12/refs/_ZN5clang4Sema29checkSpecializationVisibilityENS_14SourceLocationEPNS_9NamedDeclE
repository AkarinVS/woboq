<dec f='llvm/clang/include/clang/Sema/Sema.h' l='2912' type='void clang::Sema::checkSpecializationVisibility(clang::SourceLocation Loc, clang::NamedDecl * Spec)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='2909'>/// We&apos;ve found a use of a templated declaration that would trigger an
  /// implicit instantiation. Check that any relevant explicit specializations
  /// and partial specializations are visible, and diagnose if not.</doc>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='16836' u='c' c='_ZN5clang4Sema22MarkFunctionReferencedENS_14SourceLocationEPNS_12FunctionDeclEb'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='18137' u='c' c='_ZL23DoMarkVarDeclReferencedRN5clang4SemaENS_14SourceLocationEPNS_7VarDeclEPNS_4ExprE'/>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='4490' u='c' c='_ZN5clang4Sema18CheckVarTemplateIdEPNS_15VarTemplateDeclENS_14SourceLocationES3_RKNS_24TemplateArgumentListInfoE'/>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='4611' u='c' c='_ZN5clang4Sema18CheckVarTemplateIdEPNS_15VarTemplateDeclENS_14SourceLocationES3_RKNS_24TemplateArgumentListInfoE'/>
<def f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='11075' ll='11080' type='void clang::Sema::checkSpecializationVisibility(clang::SourceLocation Loc, clang::NamedDecl * Spec)'/>
<use f='llvm/clang/lib/Sema/SemaType.cpp' l='8527' u='c' c='_ZN5clang4Sema23RequireCompleteTypeImplENS_14SourceLocationENS_8QualTypeENS0_16CompleteTypeKindEPNS0_13TypeDiagnoserE'/>
