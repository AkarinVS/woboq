<dec f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.h' l='186' type='void llvm::SystemZInstrInfo::expandLOCPseudo(llvm::MachineInstr &amp; MI, unsigned int LowOpcode, unsigned int HighOpcode) const'/>
<def f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='187' ll='192' type='void llvm::SystemZInstrInfo::expandLOCPseudo(llvm::MachineInstr &amp; MI, unsigned int LowOpcode, unsigned int HighOpcode) const'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1380' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1384' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='1400' u='c' c='_ZNK4llvm16SystemZInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<doc f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='184'>// MI is a load-on-condition pseudo instruction with a single register
// (source or destination) operand.  Replace it with LowOpcode if the
// register is a low GR32 and HighOpcode if the register is a high GR32.</doc>
