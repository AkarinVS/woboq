<def f='llvm/polly/lib/External/isl/isl_map_lexopt_templ.c' l='86' macro='1' type='isl_pw_multi_aff * basic_map_partial_lexopt_pw_multi_aff(isl_basic_map * bmap, isl_map * dom, isl_map ** empty, unsigned int flags)'/>
<use f='llvm/polly/lib/External/isl/isl_map.c' l='7150' u='c' c='isl_map_partial_lexopt_aligned_pw_multi_aff'/>
<use f='llvm/polly/lib/External/isl/isl_map.c' l='7159' u='c' c='isl_map_partial_lexopt_aligned_pw_multi_aff'/>
<doc f='llvm/polly/lib/External/isl/isl_map_lexopt_templ.c' l='69'>/* Given a basic map &quot;bmap&quot;, compute the lexicographically minimal
 * (or maximal) image element for each domain element in dom.
 * If empty is not NULL, then set *empty to those elements in dom
 * that do not have an image element.
 * If &quot;flags&quot; includes ISL_OPT_FULL, then &quot;dom&quot; is NULL and the optimum
 * should be computed over the domain of &quot;bmap&quot;.  &quot;empty&quot; is also NULL
 * in this case.
 *
 * We first make sure the basic sets in dom are disjoint and then
 * simply collect the results over each of the basic sets separately.
 * We could probably improve the efficiency a bit by moving the union
 * domain down into the parametric integer programming.
 *
 * If a full optimum is being computed (i.e., &quot;flags&quot; includes ISL_OPT_FULL),
 * then no domain is given and there is then also no need to consider
 * the disjuncts of the domain.
 */</doc>
<def f='llvm/polly/lib/External/isl/isl_tab_lexopt_templ.c' l='149' macro='1' type='isl_pw_multi_aff * basic_map_partial_lexopt_pw_multi_aff(isl_basic_map * bmap, isl_basic_map * dom, isl_map ** empty, int max)'/>
<use f='llvm/polly/lib/External/isl/isl_tab_lexopt_templ.c' l='221' macro='1' u='c' c='isl_tab_basic_map_partial_lexopt_pw_multi_aff'/>
<use f='llvm/polly/lib/External/isl/isl_tab_lexopt_templ.c' l='230' macro='1' u='c' c='isl_tab_basic_map_partial_lexopt_pw_multi_aff'/>
