<inh f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_internal.h' l='108' c='__sanitizer::SymbolizerProcess::GetArgV'/>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='254' ll='288' type='void __sanitizer::LLVMSymbolizerProcess::GetArgV(const char * path_to_binary, const char *(&amp;)[6] argv) const'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='252'>// When adding a new architecture, don&apos;t forget to also update
  // script/asan_symbolize.py and sanitizer_common.h.</doc>
