<def f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='205' ll='242'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='223' c='_ZN5clang13ASTDeclReader18FindExistingResultC1EOS1_'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='231' c='_ZN5clang13ASTDeclReader18FindExistingResultaSEOS1_'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='231' c='_ZN5clang13ASTDeclReader18FindExistingResultaSEOS1_'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='246' c='_ZN5clang13ASTDeclReader12findExistingEPNS_9NamedDeclE'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='2525' c='_ZN5clang13ASTDeclReader17mergeRedeclarableEPNS_12RedeclarableIT_EERNS0_18RedeclarableResultEj'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='2671' c='_ZN5clang13ASTDeclReader14mergeMergeableEPNS_9MergeableIT_EE'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='3418' c='_ZN5clang13ASTDeclReader12findExistingEPNS_9NamedDeclE'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='3425' c='_ZN5clang13ASTDeclReader12findExistingEPNS_9NamedDeclE'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='3437' c='_ZN5clang13ASTDeclReader12findExistingEPNS_9NamedDeclE'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='3449' c='_ZN5clang13ASTDeclReader12findExistingEPNS_9NamedDeclE'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='3481' c='_ZN5clang13ASTDeclReader12findExistingEPNS_9NamedDeclE'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='3489' c='_ZN5clang13ASTDeclReader12findExistingEPNS_9NamedDeclE'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='3494' c='_ZN5clang13ASTDeclReader12findExistingEPNS_9NamedDeclE'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='3507' c='_ZN5clang13ASTDeclReader12findExistingEPNS_9NamedDeclE'/>
<size>40</size>
<doc f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='200'>/// Class used to capture the result of searching for an existing
    /// declaration of a specific kind and name, along with the ability
    /// to update the place where this result was found (the declaration
    /// chain hanging off an identifier or the DeclContext we searched in)
    /// if requested.</doc>
