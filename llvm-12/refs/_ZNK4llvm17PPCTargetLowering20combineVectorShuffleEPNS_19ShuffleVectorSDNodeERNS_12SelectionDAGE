<dec f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.h' l='1262' type='llvm::SDValue llvm::PPCTargetLowering::combineVectorShuffle(llvm::ShuffleVectorSDNode * SVN, llvm::SelectionDAG &amp; DAG) const'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='9256' u='c' c='_ZNK4llvm17PPCTargetLowering19LowerVECTOR_SHUFFLEENS_7SDValueERNS_12SelectionDAGE'/>
<def f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='13942' ll='14053' type='llvm::SDValue llvm::PPCTargetLowering::combineVectorShuffle(llvm::ShuffleVectorSDNode * SVN, llvm::SelectionDAG &amp; DAG) const'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='14164' u='c' c='_ZNK4llvm17PPCTargetLowering17PerformDAGCombineEPNS_6SDNodeERNS_14TargetLowering15DAGCombinerInfoE'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='13934'>// On little endian subtargets, combine shuffles such as:
// vector_shuffle&lt;16,1,17,3,18,5,19,7,20,9,21,11,22,13,23,15&gt;, &lt;zero&gt;, %b
// into:
// vector_shuffle&lt;16,0,17,1,18,2,19,3,20,4,21,5,22,6,23,7&gt;, &lt;zero&gt;, %b
// because the latter can be matched to a single instruction merge.
// Furthermore, SCALAR_TO_VECTOR on little endian always involves a permute
// to put the value into element zero. Adjust the shuffle mask so that the
// vector can remain in permuted form (to prevent a swap prior to a shuffle).</doc>
