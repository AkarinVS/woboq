<dec f='llvm/llvm/lib/Target/AVR/MCTargetDesc/AVRMCCodeEmitter.h' l='66' type='unsigned int llvm::AVRMCCodeEmitter::encodeComplement(const llvm::MCInst &amp; MI, unsigned int OpNo, SmallVectorImpl&lt;llvm::MCFixup&gt; &amp; Fixups, const llvm::MCSubtargetInfo &amp; STI) const'/>
<def f='llvm/llvm/lib/Target/AVR/MCTargetDesc/AVRMCCodeEmitter.cpp' l='170' ll='178' type='unsigned int llvm::AVRMCCodeEmitter::encodeComplement(const llvm::MCInst &amp; MI, unsigned int OpNo, SmallVectorImpl&lt;llvm::MCFixup&gt; &amp; Fixups, const llvm::MCSubtargetInfo &amp; STI) const'/>
<doc f='llvm/llvm/lib/Target/AVR/MCTargetDesc/AVRMCCodeEmitter.h' l='65'>/// Takes the complement of a number (~0 - val).</doc>
