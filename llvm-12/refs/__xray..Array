<def f='llvm/compiler-rt/lib/xray/xray_segmented_array.h' l='33' ll='639'/>
<use f='llvm/compiler-rt/lib/xray/xray_segmented_array.h' l='645'/>
<use f='llvm/compiler-rt/lib/xray/xray_segmented_array.h' l='645'/>
<use f='llvm/compiler-rt/lib/xray/xray_segmented_array.h' l='646'/>
<use f='llvm/compiler-rt/lib/xray/xray_segmented_array.h' l='646'/>
<use f='llvm/compiler-rt/lib/xray/xray_function_call_trie.h' l='103'/>
<use f='llvm/compiler-rt/lib/xray/xray_function_call_trie.h' l='128'/>
<use f='llvm/compiler-rt/lib/xray/xray_function_call_trie.h' l='129'/>
<use f='llvm/compiler-rt/lib/xray/xray_function_call_trie.h' l='130'/>
<use f='llvm/compiler-rt/lib/xray/xray_function_call_trie.h' l='489' c='__xray::FunctionCallTrie::deepCopyInto'/>
<use f='llvm/compiler-rt/lib/xray/xray_function_call_trie.h' l='548' c='__xray::FunctionCallTrie::mergeInto'/>
<use f='llvm/compiler-rt/lib/xray/xray_profile_collector.cpp' l='67'/>
<use f='llvm/compiler-rt/lib/xray/xray_profile_collector.cpp' l='88'/>
<use f='llvm/compiler-rt/lib/xray/xray_profile_collector.cpp' l='149'/>
<use f='llvm/compiler-rt/lib/xray/xray_profile_collector.cpp' l='162'/>
<use f='llvm/compiler-rt/lib/xray/xray_profile_collector.cpp' l='169' c='__xray::profileCollectorService::(anonymousnamespace)::populateRecords'/>
<doc f='llvm/compiler-rt/lib/xray/xray_segmented_array.h' l='27'>/// The Array type provides an interface similar to std::vector&lt;...&gt; but does
/// not shrink in size. Once constructed, elements can be appended but cannot be
/// removed. The implementation is heavily dependent on the contract provided by
/// the Allocator type, in that all memory will be released when the Allocator
/// is destroyed. When an Array is destroyed, it will destroy elements in the
/// backing store but will not free the memory.</doc>
<smbr r='__xray::Array::AlignedElementStorageSize' t='const uint64_t'/>
<smbr r='__xray::Array::SegmentControlBlockSize' t='const uint64_t'/>
<smbr r='__xray::Array::SegmentSize' t='const uint64_t'/>
<smbr r='__xray::Array::ElementsPerSegment' t='const uint64_t'/>
<smbr r='__xray::Array::SentinelSegment' t='__xray::Array::Segment'/>
<mbr r='__xray::Array::Alloc' t='__xray::Array::AllocatorType *'/>
<mbr r='__xray::Array::Head' t='__xray::Array::Segment *'/>
<mbr r='__xray::Array::Tail' t='__xray::Array::Segment *'/>
<mbr r='__xray::Array::Freelist' t='__xray::Array::Segment *'/>
<mbr r='__xray::Array::Size' t='uint64_t'/>
<fun r='__xray::Array::NewSegment'/>
<fun r='__xray::Array::InitHeadAndTail'/>
<fun r='__xray::Array::AppendNewSegment'/>
<fun r='__xray::Array::Array{T}'/>
<fun r='__xray::Array::Array{T}'/>
<fun r='__xray::Array::Array{T}'/>
<fun r='__xray::Array::operator='/>
<fun r='__xray::Array::Array{T}'/>
<fun r='__xray::Array::operator='/>
<fun r='__xray::Array::~Array{T}'/>
<fun r='__xray::Array::empty'/>
<fun r='__xray::Array::allocator'/>
<fun r='__xray::Array::size'/>
<fun r='__xray::Array::AppendEmplace'/>
<fun r='__xray::Array::Append'/>
<fun r='__xray::Array::operator[]'/>
<fun r='__xray::Array::front'/>
<fun r='__xray::Array::back'/>
<fun r='__xray::Array::find_element'/>
<fun r='__xray::Array::trim'/>
<fun r='__xray::Array::begin'/>
<fun r='__xray::Array::end'/>
<fun r='__xray::Array::cbegin'/>
<fun r='__xray::Array::cend'/>
<smbr r='__xray::Array::SentinelSegment' t='typename Array&lt;T&gt;::Segment'/>
