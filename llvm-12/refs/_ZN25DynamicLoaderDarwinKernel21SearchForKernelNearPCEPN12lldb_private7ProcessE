<dec f='llvm/lldb/source/Plugins/DynamicLoader/Darwin-Kernel/DynamicLoaderDarwinKernel.h' l='274' type='static lldb::addr_t DynamicLoaderDarwinKernel::SearchForKernelNearPC(lldb_private::Process * process)'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/Darwin-Kernel/DynamicLoaderDarwinKernel.cpp' l='200' u='c' c='_ZN25DynamicLoaderDarwinKernel21SearchForDarwinKernelEPN12lldb_private7ProcessE'/>
<def f='llvm/lldb/source/Plugins/DynamicLoader/Darwin-Kernel/DynamicLoaderDarwinKernel.cpp' l='293' ll='345' type='static lldb::addr_t DynamicLoaderDarwinKernel::SearchForKernelNearPC(lldb_private::Process * process)'/>
<doc f='llvm/lldb/source/Plugins/DynamicLoader/Darwin-Kernel/DynamicLoaderDarwinKernel.cpp' l='288'>// If the kernel is currently executing when lldb attaches, and we don&apos;t have a
// better way of finding the kernel&apos;s load address, try searching backwards
// from the current pc value looking for the kernel&apos;s Mach header in memory.
// Returns the address of the kernel if one was found, else
// LLDB_INVALID_ADDRESS.</doc>
