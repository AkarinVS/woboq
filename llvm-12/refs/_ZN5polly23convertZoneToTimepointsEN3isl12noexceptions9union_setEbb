<dec f='llvm/polly/include/polly/Support/ISLTools.h' l='415' type='isl::union_set polly::convertZoneToTimepoints(isl::union_set Zone, bool InclStart, bool InclEnd)'/>
<doc f='llvm/polly/include/polly/Support/ISLTools.h' l='370'>/// Convert a zone (range between timepoints) to timepoints.
///
/// A zone represents the time between (integer) timepoints, but not the
/// timepoints themselves. This function can be used to determine whether a
/// timepoint lies within a zone.
///
/// For instance, the range (1,3), representing the time between 1 and 3, is
/// represented by the zone
///
/// { [i] : 1 &lt; i &lt;= 3 }
///
/// The set of timepoints that lie completely within this range is
///
/// { [i] : 1 &lt; i &lt; 3 }
///
/// A typical use-case is the range in which a value written by a store is
/// available until it is overwritten by another value. If the write is at
/// timepoint 1 and its value is overwritten by another value at timepoint 3,
/// the value is available between those timepoints: timepoint 2 in this
/// example.
///
///
/// When InclStart is true, the range is interpreted left-inclusive, i.e. adds
/// the timepoint 1 to the result:
///
/// { [i] : 1 &lt;= i &lt; 3 }
///
/// In the use-case mentioned above that means that the value written at
/// timepoint 1 is already available in timepoint 1 (write takes place before
/// any read of it even if executed at the same timepoint)
///
/// When InclEnd is true, the range is interpreted right-inclusive, i.e. adds
/// the timepoint 3 to the result:
///
/// { [i] : 1 &lt; i &lt;= 3 }
///
/// In the use-case mentioned above that means that although the value is
/// overwritten in timepoint 3, the old value is still available at timepoint 3
/// (write takes place after any read even if executed at the same timepoint)
///
/// @param Zone      { Zone[] }
/// @param InclStart Include timepoints adjacent to the beginning of a zone.
/// @param InclEnd   Include timepoints adjacent to the ending of a zone.
///
/// @return { Scatter[] }</doc>
<def f='llvm/polly/lib/Support/ISLTools.cpp' l='391' ll='404' type='isl::union_set polly::convertZoneToTimepoints(isl::union_set Zone, bool InclStart, bool InclEnd)'/>
<use f='llvm/polly/lib/Transform/DeLICM.cpp' l='423' u='c' c='_ZN12_GLOBAL__N_19Knowledge13isConflictingERKS0_S2_PN4llvm11raw_ostreamEj'/>
<use f='llvm/polly/lib/Transform/DeLICM.cpp' l='456' u='c' c='_ZN12_GLOBAL__N_19Knowledge13isConflictingERKS0_S2_PN4llvm11raw_ostreamEj'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='980' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='981' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='982' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='983' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='986' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='988' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='990' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='992' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='996' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='998' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='1000' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='1002' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='1007' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='1010' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='1013' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='1015' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='1019' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='1021' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='1023' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='1025' u='c' c='_ZN12_GLOBAL__N_135DeLICM_convertZoneToTimepoints_Test8TestBodyEv'/>
