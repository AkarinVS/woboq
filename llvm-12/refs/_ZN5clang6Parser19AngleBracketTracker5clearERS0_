<def f='llvm/clang/include/clang/Parse/Parser.h' l='370' ll='373' type='void clang::Parser::AngleBracketTracker::clear(clang::Parser &amp; P)'/>
<use f='llvm/clang/include/clang/Parse/Parser.h' l='589' u='c' c='_ZN5clang6Parser12ConsumeParenEv'/>
<use f='llvm/clang/include/clang/Parse/Parser.h' l='604' u='c' c='_ZN5clang6Parser14ConsumeBracketEv'/>
<use f='llvm/clang/include/clang/Parse/Parser.h' l='620' u='c' c='_ZN5clang6Parser12ConsumeBraceEv'/>
<doc f='llvm/clang/include/clang/Parse/Parser.h' l='367'>/// Mark the current potential missing template location as having been
    /// handled (this happens if we pass a &quot;corresponding&quot; &apos;&gt;&apos; or &apos;&gt;&gt;&apos; token
    /// or leave a bracket scope).</doc>
<use f='llvm/clang/include/clang/Parse/RAIIObjectsForParser.h' l='352' u='c' c='_ZN5clang25ParenBraceBracketBalancerD1Ev'/>
<use f='llvm/clang/lib/Parse/ParseTemplate.cpp' l='1805' u='c' c='_ZN5clang6Parser35checkPotentialAngleBracketDelimiterERKNS0_19AngleBracketTracker3LocERKNS_5TokenE'/>
<use f='llvm/clang/lib/Parse/ParseTemplate.cpp' l='1817' u='c' c='_ZN5clang6Parser35checkPotentialAngleBracketDelimiterERKNS0_19AngleBracketTracker3LocERKNS_5TokenE'/>
<use f='llvm/clang/lib/Parse/ParseTemplate.cpp' l='1826' u='c' c='_ZN5clang6Parser35checkPotentialAngleBracketDelimiterERKNS0_19AngleBracketTracker3LocERKNS_5TokenE'/>
