<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2443' type='bool llvm::AANoUnwind::isAssumedNoUnwind() const'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='2442'>/// Returns true if nounwind is assumed.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='712' u='c' c='_ZN12_GLOBAL__N_114AANoUnwindImpl10updateImplERN4llvm10AttributorE'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='2810' u='c' c='_ZN12_GLOBAL__N_117AAIsDeadValueImpl23isAssumedSideEffectFreeERN4llvm10AttributorEPNS1_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='3251' u='c' c='_ZN12_GLOBAL__N_123identifyAliveSuccessorsERN4llvm10AttributorERKNS0_10InvokeInstERNS0_17AbstractAttributeERNS0_15SmallVectorImplIPKNS0_11InstructionEEE'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='4359' u='c' c='_ZN12_GLOBAL__N_115AANoCaptureImpl10updateImplERN4llvm10AttributorE'/>
