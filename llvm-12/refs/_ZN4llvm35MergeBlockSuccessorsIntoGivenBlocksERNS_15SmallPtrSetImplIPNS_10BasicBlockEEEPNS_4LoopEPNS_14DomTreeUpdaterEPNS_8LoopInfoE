<dec f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='107' type='bool llvm::MergeBlockSuccessorsIntoGivenBlocks(SmallPtrSetImpl&lt;llvm::BasicBlock *&gt; &amp; MergeBlocks, llvm::Loop * L = nullptr, llvm::DomTreeUpdater * DTU = nullptr, llvm::LoopInfo * LI = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='100'>/// Merge block(s) sucessors, if possible. Return true if at least two
/// of the blocks were merged together.
/// In order to merge, each block must be terminated by an unconditional
/// branch. If L is provided, then the blocks merged into their predecessors
/// must be in L. In addition, This utility calls on another utility:
/// MergeBlockIntoPredecessor. Blocks are successfully merged when the call to
/// MergeBlockIntoPredecessor returns true.</doc>
<def f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='317' ll='340' type='bool llvm::MergeBlockSuccessorsIntoGivenBlocks(SmallPtrSetImpl&lt;llvm::BasicBlock *&gt; &amp; MergeBlocks, llvm::Loop * L = nullptr, llvm::DomTreeUpdater * DTU = nullptr, llvm::LoopInfo * LI = nullptr)'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp' l='588' u='c' c='_ZN4llvm16UnrollAndJamLoopEPNS_4LoopEjjjbPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheEPKNS_19TargetTransformInfoEPNS_8684078'/>
