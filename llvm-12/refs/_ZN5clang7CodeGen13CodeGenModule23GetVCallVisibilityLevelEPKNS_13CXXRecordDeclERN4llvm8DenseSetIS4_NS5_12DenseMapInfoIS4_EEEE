<dec f='llvm/clang/lib/CodeGen/CodeGenModule.h' l='1343' type='llvm::GlobalObject::VCallVisibility clang::CodeGen::CodeGenModule::GetVCallVisibilityLevel(const clang::CXXRecordDecl * RD, llvm::DenseSet&lt;const CXXRecordDecl *&gt; &amp; Visited)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenModule.h' l='1336'>/// Returns the vcall visibility of the given type. This is the scope in which
  /// a virtual function call could be made which ends up being dispatched to a
  /// member function of this class. This scope can be wider than the visibility
  /// of the class itself when the class has a more-visible dynamic base class.
  /// The client should pass in an empty Visited set, which is used to prevent
  /// redundant recursive processing.</doc>
<def f='llvm/clang/lib/CodeGen/CGVTables.cpp' l='1229' ll='1261' type='llvm::GlobalObject::VCallVisibility clang::CodeGen::CodeGenModule::GetVCallVisibilityLevel(const clang::CXXRecordDecl * RD, llvm::DenseSet&lt;const CXXRecordDecl *&gt; &amp; Visited)'/>
<use f='llvm/clang/lib/CodeGen/CGVTables.cpp' l='1252' u='c' c='_ZN5clang7CodeGen13CodeGenModule23GetVCallVisibilityLevelEPKNS_13CXXRecordDeclERN4llvm8DenseSetIS4_NS5_12DenseMapInfoIS4_EEEE'/>
<use f='llvm/clang/lib/CodeGen/CGVTables.cpp' l='1258' u='c' c='_ZN5clang7CodeGen13CodeGenModule23GetVCallVisibilityLevelEPKNS_13CXXRecordDeclERN4llvm8DenseSetIS4_NS5_12DenseMapInfoIS4_EEEE'/>
<use f='llvm/clang/lib/CodeGen/CGVTables.cpp' l='1329' u='c' c='_ZN5clang7CodeGen13CodeGenModule22EmitVTableTypeMetadataEPKNS_13CXXRecordDeclEPN4llvm14GlobalVariableERKNS_12VTableLayoutE'/>
<use f='llvm/clang/lib/CodeGen/MicrosoftCXXABI.cpp' l='1657' u='c' c='_ZN12_GLOBAL__N_115MicrosoftCXXABI22emitVTableTypeMetadataERKN5clang8VPtrInfoEPKNS1_13CXXRecordDeclEPN4llvm14GlobalVariableE'/>
