<dec f='llvm/llvm/include/llvm/IR/DebugInfo.h' l='39' type='bool llvm::StripDebugInfo(llvm::Module &amp; M)'/>
<doc f='llvm/llvm/include/llvm/IR/DebugInfo.h' l='34'>/// Strip debug info in the module if it exists.
///
/// To do this, we remove all calls to the debugger intrinsics and any named
/// metadata for debugging. We also remove debug locations for instructions.
/// Return true if module is modified.</doc>
<use f='llvm/llvm/lib/IR/AutoUpgrade.cpp' l='4028' u='c' c='_ZN4llvm16UpgradeDebugInfoERNS_6ModuleE'/>
<def f='llvm/llvm/lib/IR/DebugInfo.cpp' l='358' ll='386' type='bool llvm::StripDebugInfo(llvm::Module &amp; M)'/>
<use f='llvm/llvm/lib/IR/DebugInfo.cpp' l='781' u='c' c='LLVMStripModuleDebugInfo'/>
<use f='llvm/llvm/lib/LTO/LTOCodeGenerator.cpp' l='517' u='c' c='_ZN4llvm16LTOCodeGenerator22verifyMergedModuleOnceEv'/>
<use f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='183' u='c' c='_ZN12_GLOBAL__N_118verifyLoadedModuleERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/IPO/StripSymbols.cpp' l='242' u='c' c='_ZN12_GLOBAL__N_112StripSymbols11runOnModuleERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/IPO/StripSymbols.cpp' l='395' u='c' c='_ZN4llvm16StripSymbolsPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE'/>
<use f='llvm/llvm/lib/Transforms/IPO/ThinLTOBitcodeWriter.cpp' l='287' u='c' c='_ZN12_GLOBAL__N_127splitAndWriteThinLTOBitcodeERN4llvm11raw_ostreamEPS1_NS0_12function_refIFRNS0_9AAResultsERNS0_8FunctionEEEERNS0_6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/IPO/ThinLTOBitcodeWriter.cpp' l='420' u='c' c='_ZN12_GLOBAL__N_127splitAndWriteThinLTOBitcodeERN4llvm11raw_ostreamEPS1_NS0_12function_refIFRNS0_9AAResultsERNS0_8FunctionEEEERNS0_6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/Utils/Debugify.cpp' l='226' u='c' c='_ZN4llvm21stripDebugifyMetadataERNS_6ModuleE'/>
<use f='llvm/llvm/tools/bugpoint/CrashDebugger.cpp' l='1317' u='r' c='_ZL11DebugACrashRN4llvm9BugDriverEPFbRKS0_PNS_6ModuleEE'/>
<use f='llvm/llvm/tools/opt/opt.cpp' l='629' u='c' c='main'/>
