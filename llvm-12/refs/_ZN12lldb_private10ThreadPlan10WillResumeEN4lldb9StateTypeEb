<dec f='llvm/lldb/include/lldb/Target/ThreadPlan.h' l='386' type='bool lldb_private::ThreadPlan::WillResume(lldb::StateType resume_state, bool current_plan)'/>
<doc f='llvm/lldb/include/lldb/Target/ThreadPlan.h' l='384'>// This is the wrapper for DoWillResume that does generic ThreadPlan logic,
  // then calls DoWillResume.</doc>
<use f='llvm/lldb/source/Target/Thread.cpp' l='711' u='c' c='_ZN12lldb_private6Thread12ShouldResumeEN4lldb9StateTypeE'/>
<use f='llvm/lldb/source/Target/Thread.cpp' l='714' u='c' c='_ZN12lldb_private6Thread12ShouldResumeEN4lldb9StateTypeE'/>
<def f='llvm/lldb/source/Target/ThreadPlan.cpp' l='115' ll='143' type='bool lldb_private::ThreadPlan::WillResume(lldb::StateType resume_state, bool current_plan)'/>
