<def f='llvm/llvm/include/llvm/IR/Instructions.h' l='815' type='void llvm::AtomicRMWInst::setVolatile(bool V)'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='813'>/// Specify whether this is a volatile RMW or not.
  ///</doc>
<use f='llvm/clang/lib/CodeGen/CGAtomic.cpp' l='680' u='c' c='_ZL12EmitAtomicOpRN5clang7CodeGen15CodeGenFunctionEPNS_10AtomicExprENS0_7AddressES5_S5_S5_PN4llvm5ValueES8_mNS6_14AtomicOrderingEh'/>
<use f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='3771' u='c' c='_ZN5clang7CodeGen15CodeGenFunction15EmitBuiltinExprENS_10GlobalDeclEjPKNS_8CallExprENS0_15ReturnValueSlotE'/>
<use f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='3799' u='c' c='_ZN5clang7CodeGen15CodeGenFunction15EmitBuiltinExprENS_10GlobalDeclEjPKNS_8CallExprENS0_15ReturnValueSlotE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='7574' u='c' c='_ZN4llvm8LLParser14parseAtomicRMWERPNS_11InstructionERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitcodeReader.cpp' l='5151' u='c' c='_ZN12_GLOBAL__N_113BitcodeReader17parseFunctionBodyEPN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='3705' u='c' c='LLVMSetVolatile'/>
<use f='llvm/llvm/lib/IR/Instructions.cpp' l='4357' u='c' c='_ZNK4llvm13AtomicRMWInst9cloneImplEv'/>
