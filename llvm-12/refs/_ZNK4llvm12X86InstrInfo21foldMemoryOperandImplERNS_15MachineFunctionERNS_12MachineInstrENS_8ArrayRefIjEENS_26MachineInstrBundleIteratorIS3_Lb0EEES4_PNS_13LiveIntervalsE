<dec f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='389' type='llvm::MachineInstr * llvm::X86InstrInfo::foldMemoryOperandImpl(llvm::MachineFunction &amp; MF, llvm::MachineInstr &amp; MI, ArrayRef&lt;unsigned int&gt; Ops, MachineBasicBlock::iterator InsertPt, llvm::MachineInstr &amp; LoadMI, llvm::LiveIntervals * LIS = nullptr) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='386'>/// foldMemoryOperand - Same as the previous version except it allows folding
  /// of any load and store from / to any address, not just from a specific
  /// stack slot.</doc>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1184' c='_ZNK4llvm15TargetInstrInfo21foldMemoryOperandImplERNS_15MachineFunctionERNS_12MachineInstrENS_8ArrayRefIjEENS_26MachineInstrBundleIteratorIS3_Lb0EEES48512590'/>
<def f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='5980' ll='6155' type='llvm::MachineInstr * llvm::X86InstrInfo::foldMemoryOperandImpl(llvm::MachineFunction &amp; MF, llvm::MachineInstr &amp; MI, ArrayRef&lt;unsigned int&gt; Ops, MachineBasicBlock::iterator InsertPt, llvm::MachineInstr &amp; LoadMI, llvm::LiveIntervals * LIS = nullptr) const'/>
