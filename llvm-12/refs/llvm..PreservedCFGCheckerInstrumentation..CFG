<def f='llvm/llvm/include/llvm/Passes/StandardInstrumentations.h' l='102' ll='130'/>
<use f='llvm/llvm/include/llvm/Passes/StandardInstrumentations.h' l='115' c='_ZNK4llvm34PreservedCFGCheckerInstrumentation3CFGeqERKS1_'/>
<use f='llvm/llvm/include/llvm/Passes/StandardInstrumentations.h' l='128' c='_ZN4llvm34PreservedCFGCheckerInstrumentation3CFG9printDiffERNS_11raw_ostreamERKS1_S5_'/>
<use f='llvm/llvm/include/llvm/Passes/StandardInstrumentations.h' l='129' c='_ZN4llvm34PreservedCFGCheckerInstrumentation3CFG9printDiffERNS_11raw_ostreamERKS1_S5_'/>
<use f='llvm/llvm/include/llvm/Passes/StandardInstrumentations.h' l='132'/>
<size>56</size>
<doc f='llvm/llvm/include/llvm/Passes/StandardInstrumentations.h' l='94'>// CFG is a map BB -&gt; {(Succ, Multiplicity)}, where BB is a non-leaf basic
  // block, {(Succ, Multiplicity)} set of all pairs of the block&apos;s successors
  // and the multiplicity of the edge (BB-&gt;Succ). As the mapped sets are
  // unordered the order of successors is not tracked by the CFG. In other words
  // this allows basic block successors to be swapped by a pass without
  // reporting a CFG change. CFG can be guarded by basic block tracking pointers
  // in the Graph (BBGuard). That is if any of the block is deleted or RAUWed
  // then the CFG is treated poisoned and no block pointer of the Graph is used.</doc>
<mbr r='llvm::PreservedCFGCheckerInstrumentation::CFG::BBGuards' o='0' t='Optional&lt;DenseMap&lt;intptr_t, llvm::PreservedCFGCheckerInstrumentation::CFG::BBGuard&gt; &gt;'/>
<mbr r='llvm::PreservedCFGCheckerInstrumentation::CFG::Graph' o='256' t='DenseMap&lt;const llvm::BasicBlock *, DenseMap&lt;const llvm::BasicBlock *, unsigned int&gt; &gt;'/>
<fun r='_ZN4llvm34PreservedCFGCheckerInstrumentation3CFGC1EPKNS_8FunctionEb'/>
<fun r='_ZNK4llvm34PreservedCFGCheckerInstrumentation3CFGeqERKS1_'/>
<fun r='_ZNK4llvm34PreservedCFGCheckerInstrumentation3CFG10isPoisonedEv'/>
<fun r='_ZN4llvm34PreservedCFGCheckerInstrumentation3CFG9printDiffERNS_11raw_ostreamERKS1_S5_'/>
<use f='llvm/llvm/lib/Passes/StandardInstrumentations.cpp' l='721' c='_ZN4llvm34PreservedCFGCheckerInstrumentation3CFG9printDiffERNS_11raw_ostreamERKS1_S5_'/>
<use f='llvm/llvm/lib/Passes/StandardInstrumentations.cpp' l='722' c='_ZN4llvm34PreservedCFGCheckerInstrumentation3CFG9printDiffERNS_11raw_ostreamERKS1_S5_'/>
<use f='llvm/llvm/lib/Passes/StandardInstrumentations.cpp' l='726' c='_ZN4llvm34PreservedCFGCheckerInstrumentation3CFG9printDiffERNS_11raw_ostreamERKS1_S5_'/>
<use f='llvm/llvm/lib/Passes/StandardInstrumentations.cpp' l='798' c='_ZN4llvm34PreservedCFGCheckerInstrumentation17registerCallbacksERNS_28PassInstrumentationCallbacksE'/>
<use f='llvm/llvm/lib/Passes/StandardInstrumentations.cpp' l='822' c='_ZN4llvm34PreservedCFGCheckerInstrumentation17registerCallbacksERNS_28PassInstrumentationCallbacksE'/>
<size>56</size>
<fun r='_ZN4llvm34PreservedCFGCheckerInstrumentation3CFGC1EPKNS_8FunctionEb'/>
<fun r='_ZN4llvm34PreservedCFGCheckerInstrumentation3CFG9printDiffERNS_11raw_ostreamERKS1_S5_'/>
