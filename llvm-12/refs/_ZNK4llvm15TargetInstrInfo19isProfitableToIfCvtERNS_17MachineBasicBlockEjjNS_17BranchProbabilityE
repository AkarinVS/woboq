<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='782' ll='786' type='bool llvm::TargetInstrInfo::isProfitableToIfCvt(llvm::MachineBasicBlock &amp; MBB, unsigned int NumCycles, unsigned int ExtraPredCycles, llvm::BranchProbability Probability) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='777'>/// Return true if it&apos;s profitable to predicate
  /// instructions with accumulated instruction latency of &quot;NumCycles&quot;
  /// of the specified basic block, where the probability of the instructions
  /// being executed is given by Probability, and Confidence is a measure
  /// of our confidence that it will be properly predicted.</doc>
<use f='llvm/llvm/lib/CodeGen/EarlyIfConversion.cpp' l='1090' u='c' c='_ZN12_GLOBAL__N_117EarlyIfPredicator15shouldConvertIfEv'/>
<use f='llvm/llvm/lib/CodeGen/IfConversion.cpp' l='289' u='c' c='_ZNK12_GLOBAL__N_111IfConverter18MeetIfcvtSizeLimitERN4llvm17MachineBasicBlockEjjNS1_17BranchProbabilityE'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp' l='877' c='_ZNK4llvm13R600InstrInfo19isProfitableToIfCvtERNS_17MachineBasicBlockEjjNS_17BranchProbabilityE'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='2083' c='_ZNK4llvm16ARMBaseInstrInfo19isProfitableToIfCvtERNS_17MachineBasicBlockEjjNS_17BranchProbabilityE'/>
<ovr f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='775' c='_ZNK4llvm16HexagonInstrInfo19isProfitableToIfCvtERNS_17MachineBasicBlockEjjNS_17BranchProbabilityE'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.h' l='481' c='_ZNK4llvm12PPCInstrInfo19isProfitableToIfCvtERNS_17MachineBasicBlockEjjNS_17BranchProbabilityE'/>
<ovr f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='684' c='_ZNK4llvm16SystemZInstrInfo19isProfitableToIfCvtERNS_17MachineBasicBlockEjjNS_17BranchProbabilityE'/>
