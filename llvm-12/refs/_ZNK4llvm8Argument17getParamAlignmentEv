<dec f='llvm/llvm/include/llvm/IR/Argument.h' l='100' type='unsigned int llvm::Argument::getParamAlignment() const'/>
<doc f='llvm/llvm/include/llvm/IR/Argument.h' l='97'>/// If this is a byval or inalloca argument, return its alignment.
  /// FIXME: Remove this function once transition to Align is over.
  /// Use getParamAlign() instead.</doc>
<use f='llvm/llvm/lib/Analysis/MemoryBuiltins.cpp' l='697' u='c' c='_ZN4llvm23ObjectSizeOffsetVisitor13visitArgumentERNS_8ArgumentE'/>
<use f='llvm/llvm/lib/CodeGen/SafeStack.cpp' l='532' u='c' c='_ZN12_GLOBAL__N_19SafeStack30moveStaticAllocasToUnsafeStackERN4llvm9IRBuilderINS1_14ConstantFolderENS1_24IRBuilderDefaultInserterEEERNS1_8FunctionENS116559678'/>
<def f='llvm/llvm/lib/IR/Function.cpp' l='189' ll='192' type='unsigned int llvm::Argument::getParamAlignment() const'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULowerKernelArguments.cpp' l='203' u='c' c='_ZN12_GLOBAL__N_126AMDGPULowerKernelArguments13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp' l='1701' u='c' c='_ZN12_GLOBAL__N_122MemorySanitizerVisitor9getShadowEPN4llvm5ValueE'/>
<use f='llvm/llvm/lib/Transforms/Utils/InlineFunction.cpp' l='1282' u='c' c='_ZL23AddAlignmentAssumptionsRN4llvm8CallBaseERNS_18InlineFunctionInfoE'/>
