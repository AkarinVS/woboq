<def f='llvm/llvm/include/llvm/CodeGen/MachineBasicBlock.h' l='101' ll='108'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachineBasicBlock.h' l='133'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachineBasicBlock.h' l='363' c='_ZN4llvm17MachineBasicBlock9addLiveInENS_10MCRegisterENS_11LaneBitmaskE'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachineBasicBlock.h' l='365' c='_ZN4llvm17MachineBasicBlock9addLiveInERKNS0_16RegisterMaskPairE'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineBasicBlock.h' l='98'>/// Pair of physical register and lane mask.
  /// This is not simply a std::pair typedef because the members should be named
  /// clearly as they both have an integer type.</doc>
<mbr r='llvm::MachineBasicBlock::RegisterMaskPair::PhysReg' o='0' t='llvm::MCPhysReg'/>
<mbr r='llvm::MachineBasicBlock::RegisterMaskPair::LaneMask' o='64' t='llvm::LaneBitmask'/>
<fun r='_ZN4llvm17MachineBasicBlock16RegisterMaskPairC1EtNS_11LaneBitmaskE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='371' c='_ZN4llvm12BranchFolder23replaceTailWithBranchToENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEERNS_17MachineBasicBlockE'/>
<size>16</size>
<use f='llvm/llvm/lib/CodeGen/BranchRelaxation.cpp' l='455' c='_ZN12_GLOBAL__N_116BranchRelaxation24fixupUnconditionalBranchERN4llvm12MachineInstrE'/>
<size>16</size>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp' l='3228' c='_ZN4llvm12IRTranslator20runOnMachineFunctionERNS_15MachineFunctionE'/>
<size>16</size>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='541' c='_ZN4llvm17MachineBasicBlock12removeLiveInEtNS_11LaneBitmaskE'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='559' c='_ZNK4llvm17MachineBasicBlock8isLiveInEtNS_11LaneBitmaskE'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='565' c='_ZN4llvm17MachineBasicBlock17sortUniqueLiveInsEv'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='565' c='_ZN4llvm17MachineBasicBlock17sortUniqueLiveInsEv'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='1477' c='_ZNK4llvm17MachineBasicBlock23computeRegisterLivenessEPKNS_18TargetRegisterInfoENS_10MCRegisterENS_26MachineInstrBundleIteratorIKNS_12MachineInstrELb0EEEj'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='1536' c='_ZNK4llvm17MachineBasicBlock23computeRegisterLivenessEPKNS_18TargetRegisterInfoENS_10MCRegisterENS_26MachineInstrBundleIteratorIKNS_12MachineInstrELb0EEEj'/>
<size>16</size>
<use f='llvm/llvm/lib/CodeGen/MachineVerifier.cpp' l='2545' c='_ZN12_GLOBAL__N_115MachineVerifier25visitMachineFunctionAfterEv'/>
<size>16</size>
<use f='llvm/llvm/lib/CodeGen/RegAllocFast.cpp' l='484' c='_ZN12_GLOBAL__N_112RegAllocFast13reloadAtBeginERN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocFast.cpp' l='1429' c='_ZN12_GLOBAL__N_112RegAllocFast18allocateBasicBlockERN4llvm17MachineBasicBlockE'/>
<size>16</size>
<use f='llvm/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp' l='2443' c='_ZN12_GLOBAL__N_118ARMConstantIslands26adjustJTTargetBlockForwardEPN4llvm17MachineBasicBlockES3_'/>
<size>16</size>
<use f='llvm/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp' l='999' c='_ZN12_GLOBAL__N_115LowOverheadLoop16ValidateLiveOutsEv'/>
<size>16</size>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonCFGOptimizer.cpp' l='223' c='_ZN12_GLOBAL__N_119HexagonCFGOptimizer20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonCFGOptimizer.cpp' l='225' c='_ZN12_GLOBAL__N_119HexagonCFGOptimizer20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<size>16</size>
<use f='llvm/llvm/lib/Target/X86/X86FrameLowering.cpp' l='153' c='_ZL11isEAXLiveInRN4llvm17MachineBasicBlockE'/>
<size>16</size>
