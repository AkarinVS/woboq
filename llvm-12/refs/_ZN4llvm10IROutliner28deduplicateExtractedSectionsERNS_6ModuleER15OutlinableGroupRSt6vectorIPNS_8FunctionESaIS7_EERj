<dec f='llvm/llvm/include/llvm/Transforms/IPO/IROutliner.h' l='258' type='void llvm::IROutliner::deduplicateExtractedSections(llvm::Module &amp; M, OutlinableGroup &amp; CurrentGroup, std::vector&lt;Function *&gt; &amp; FuncsToRemove, unsigned int &amp; OutlinedFunctionNum)'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/IROutliner.h' l='249'>/// For the similarities found, and the extracted sections, create a single
  /// outlined function with appropriate output blocks as necessary.
  ///
  /// \param [in] M - The module to outline from
  /// \param [in] CurrentGroup - The set of extracted sections to consolidate.
  /// \param [in,out] FuncsToRemove - List of functions to remove from the
  /// module after outlining is completed.
  /// \param [in,out] OutlinedFunctionNum - the number of new outlined
  /// functions.</doc>
<def f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='1189' ll='1223' type='void llvm::IROutliner::deduplicateExtractedSections(llvm::Module &amp; M, OutlinableGroup &amp; CurrentGroup, std::vector&lt;Function *&gt; &amp; FuncsToRemove, unsigned int &amp; OutlinedFunctionNum)'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='1675' u='c' c='_ZN4llvm10IROutliner9doOutlineERNS_6ModuleE'/>
