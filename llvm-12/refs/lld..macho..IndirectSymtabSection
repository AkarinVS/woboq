<inh f='llvm/lld/MachO/SyntheticSections.h' l='70' c='lld::macho::LinkEditSection'/>
<def f='llvm/lld/MachO/SyntheticSections.h' l='467' ll='477'/>
<size>96</size>
<doc f='llvm/lld/MachO/SyntheticSections.h' l='457'>// The indirect symbol table is a list of 32-bit integers that serve as indices
// into the (actual) symbol table. The indirect symbol table is a
// concatenation of several sub-arrays of indices, each sub-array belonging to
// a separate section. The starting offset of each sub-array is stored in the
// reserved1 header field of the respective section.
//
// These sub-arrays provide symbol information for sections that store
// contiguous sequences of symbol references. These references can be pointers
// (e.g. those in the GOT and TLVP sections) or assembly sequences (e.g.
// function stubs).</doc>
<fun r='_ZN3lld5macho21IndirectSymtabSectionC1Ev'/>
<fun r='_ZN3lld5macho21IndirectSymtabSection16finalizeContentsEv'/>
<fun r='_ZNK3lld5macho21IndirectSymtabSection13getNumSymbolsEv'/>
<fun r='_ZNK3lld5macho21IndirectSymtabSection10getRawSizeEv'/>
<fun r='_ZNK3lld5macho21IndirectSymtabSection8isNeededEv'/>
<fun r='_ZNK3lld5macho21IndirectSymtabSection7writeToEPh'/>
<use f='llvm/lld/MachO/Writer.cpp' l='64'/>
<use f='llvm/lld/MachO/Writer.cpp' l='118' c='_ZN12_GLOBAL__N_110LCDysymtabC1EPN3lld5macho13SymtabSectionEPNS2_21IndirectSymtabSectionE'/>
<use f='llvm/lld/MachO/Writer.cpp' l='140'/>
<use f='llvm/lld/MachO/Writer.cpp' l='643' c='_ZN12_GLOBAL__N_16Writer20createOutputSectionsEv'/>
<size>96</size>
