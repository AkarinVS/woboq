<dec f='include/stdlib.h' l='574' type='void * valloc(size_t __size)'/>
<doc f='include/stdlib.h' l='573'>/* Allocate SIZE bytes on a page boundary.  The storage cannot be freed.  */</doc>
<def f='llvm/compiler-rt/lib/asan/asan_malloc_linux.cpp' l='230' macro='1' type='void * valloc(__sanitizer::uptr size)'/>
<def f='llvm/compiler-rt/lib/hwasan/hwasan_interceptors.cpp' l='189' macro='1' type='void * valloc(SIZE_T size)'/>
<def f='llvm/compiler-rt/lib/lsan/lsan_interceptors.cpp' l='104' macro='1' type='void * valloc(__sanitizer::uptr size)'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_interceptors.cpp' l='517' u='a' c='__lsan::InitializeInterceptors'/>
<def f='llvm/compiler-rt/lib/memprof/memprof_malloc_linux.cpp' l='210' macro='1' type='void * valloc(__sanitizer::uptr size)'/>
<def f='llvm/compiler-rt/lib/msan/msan_interceptors.cpp' l='206' macro='1' type='void * valloc(SIZE_T size)'/>
<use f='llvm/compiler-rt/lib/msan/msan_interceptors.cpp' l='1602' u='a' c='__msan::InitializeInterceptors'/>
<dec f='include/malloc.h' l='69' type='void * valloc(size_t __size)'/>
<doc f='include/malloc.h' l='68'>/* Allocate SIZE bytes on a page boundary.  */</doc>
<def f='llvm/compiler-rt/lib/scudo/scudo_malloc.cpp' l='39' ll='41' macro='1' type='void * valloc(size_t size)'/>
<def f='llvm/compiler-rt/lib/scudo/standalone/wrappers_c.inc' l='134' ll='137' macro='1' type='void * valloc(size_t size)'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='803' macro='1' type='void * valloc(__sanitizer::uptr sz)'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='2706' u='a' c='__tsan::InitializeInterceptors'/>
