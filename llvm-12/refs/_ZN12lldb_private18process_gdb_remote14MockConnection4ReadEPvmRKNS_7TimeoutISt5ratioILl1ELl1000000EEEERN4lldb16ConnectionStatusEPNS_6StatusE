<inh f='llvm/lldb/include/lldb/Utility/Connection.h' l='118' c='_ZN12lldb_private10Connection4ReadEPvmRKNS_7TimeoutISt5ratioILl1ELl1000000EEEERN4lldb16ConnectionStatusEPNS_6StatusE'/>
<def f='llvm/lldb/unittests/Process/gdb-remote/GDBRemoteTestUtils.h' l='32' macro='1' type='::testing::internal::Function&lt;size_t (void *, size_t, const Timeout&lt;std::micro&gt; &amp;, lldb::ConnectionStatus &amp;, Status *)&gt;::Result lldb_private::process_gdb_remote::MockConnection::Read(::testing::internal::Function&lt;size_t (void *, size_t, const Timeout&lt;std::micro&gt; &amp;, lldb::ConnectionStatus &amp;, Status *)&gt;::Argument1 gmock_a1, ::testing::internal::Function&lt;size_t (void *, size_t, const Timeout&lt;std::micro&gt; &amp;, lldb::ConnectionStatus &amp;, Status *)&gt;::Argument2 gmock_a2, ::testing::internal::Function&lt;size_t (void *, size_t, const Timeout&lt;std::micro&gt; &amp;, lldb::ConnectionStatus &amp;, Status *)&gt;::Argument3 gmock_a3, ::testing::internal::Function&lt;size_t (void *, size_t, const Timeout&lt;std::micro&gt; &amp;, lldb::ConnectionStatus &amp;, Status *)&gt;::Argument4 gmock_a4, ::testing::internal::Function&lt;size_t (void *, size_t, const Timeout&lt;std::micro&gt; &amp;, lldb::ConnectionStatus &amp;, Status *)&gt;::Argument5 gmock_a5)'/>
