<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1868' type='llvm::Constant * llvm::ScalarEvolution::getConstantEvolutionLoopExitValue(llvm::PHINode * PN, const llvm::APInt &amp; BEs, const llvm::Loop * L)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1865'>/// If we know that the specified Phi is in the header of its containing
  /// loop, we know the loop executes a constant number of times, and the PHI
  /// node is just a recurrence involving constants, fold it.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='8185' ll='8266' type='llvm::Constant * llvm::ScalarEvolution::getConstantEvolutionLoopExitValue(llvm::PHINode * PN, const llvm::APInt &amp; BEs, const llvm::Loop * L)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='8517' u='c' c='_ZN4llvm15ScalarEvolution18computeSCEVAtScopeEPKNS_4SCEVEPKNS_4LoopE'/>
<doc f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='8181'>/// getConstantEvolutionLoopExitValue - If we know that the specified Phi is
/// in the header of its containing loop, we know the loop executes a
/// constant number of times, and the PHI node is just a recurrence
/// involving constants, fold it.</doc>
