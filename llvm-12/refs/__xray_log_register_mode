<dec f='llvm/compiler-rt/include/xray/xray_log_interface.h' l='231' type='XRayLogRegisterStatus __xray_log_register_mode(const char * Mode, XRayLogImpl Impl)'/>
<use f='llvm/compiler-rt/lib/xray/xray_basic_logging.cpp' l='472' u='c' c='__xray::basicLogDynamicInitializer'/>
<doc f='llvm/compiler-rt/include/xray/xray_log_interface.h' l='218'>/// This function registers a logging implementation against a &quot;mode&quot;
/// identifier. This allows multiple modes to be registered, and chosen at
/// runtime using the same mode identifier through
/// `__xray_log_select_mode(...)`.
///
/// We treat the Mode identifier as a null-terminated byte string, as the
/// identifier used when retrieving the log impl.
///
/// Returns:
///   - XRAY_REGISTRATION_OK on success.
///   - XRAY_DUPLICATE_MODE when an implementation is already associated with
///     the provided Mode; does not update the already-registered
///     implementation.</doc>
<use f='llvm/compiler-rt/lib/xray/xray_fdr_logging.cpp' l='734' u='c' c='__xray::fdrLogDynamicInitializer'/>
<def f='llvm/compiler-rt/lib/xray/xray_log_interface.cpp' l='63' ll='82' type='XRayLogRegisterStatus __xray_log_register_mode(const char * Mode, XRayLogImpl Impl)'/>
<use f='llvm/compiler-rt/lib/xray/xray_profiling.cpp' l='503' u='c' c='__xray::profilingDynamicInitializer'/>
