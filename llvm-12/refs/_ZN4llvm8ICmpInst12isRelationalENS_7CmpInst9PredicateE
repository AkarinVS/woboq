<def f='llvm/llvm/include/llvm/IR/Instructions.h' l='1289' ll='1291' type='static bool llvm::ICmpInst::isRelational(llvm::CmpInst::Predicate P)'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='1287'>/// Return true if the predicate is relational (not EQ or NE).
  ///</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9575' u='c' c='_ZN4llvm15ScalarEvolution29getMonotonicPredicateTypeImplEPKNS_14SCEVAddRecExprENS_7CmpInst9PredicateE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9678' u='c' c='_ZN4llvm15ScalarEvolution45getLoopInvariantExitCondDuringFirstIterationsENS_7CmpInst9PredicateEPKNS_4SCEVES5_PKNS_4LoopEPKNS_11InstructionES5_'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='10673' u='c' c='_ZL30IsKnownPredicateViaAddRecStartRN4llvm15ScalarEvolutionENS_7CmpInst9PredicateEPKNS_4SCEVES6_'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='82' u='c' c='_ZL10isSignTestRN4llvm7CmpInst9PredicateERKNS_5APIntE'/>
