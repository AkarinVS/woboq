<dec f='llvm/llvm/include/llvm/Analysis/AliasSetTracker.h' l='412' type='void llvm::AliasSetTracker::copyValue(llvm::Value * From, llvm::Value * To)'/>
<doc f='llvm/llvm/include/llvm/Analysis/AliasSetTracker.h' l='408'>/// This method should be used whenever a preexisting value in the program is
  /// copied or cloned, introducing a new value.  Note that it is ok for clients
  /// that use this method to introduce the same value multiple times: if the
  /// tracker already knows about a value, it will ignore the request.</doc>
<def f='llvm/llvm/lib/Analysis/AliasSetTracker.cpp' l='584' ll='600' type='void llvm::AliasSetTracker::copyValue(llvm::Value * From, llvm::Value * To)'/>
<use f='llvm/llvm/lib/Analysis/AliasSetTracker.cpp' l='724' u='c' c='_ZN4llvm15AliasSetTracker13ASTCallbackVH19allUsesReplacedWithEPNS_5ValueE'/>
<doc f='llvm/llvm/lib/Analysis/AliasSetTracker.cpp' l='579'>// copyValue - This method should be used whenever a preexisting value in the
// program is copied or cloned, introducing a new value.  Note that it is ok for
// clients that use this method to introduce the same value multiple times: if
// the tracker already knows about a value, it will ignore the request.
//</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='867' u='c' c='_ZN4llvm11hoistRegionEPNS_15DomTreeNodeBaseINS_10BasicBlockEEEPNS_9AAResultsEPNS_8LoopInfoEPNS_13DominatorTreeEPNS_18BlockFrequencyInfoEPNS_17TargetLi16094382'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='1903' u='c' c='_ZNK12_GLOBAL__N_112LoopPromoter20replaceLoadWithValueEPN4llvm8LoadInstEPNS1_5ValueE'/>
