<dec f='llvm/llvm/lib/Target/Hexagon/BitTracker.h' l='477' type='bool llvm::BitTracker::MachineEvaluator::evaluate(const llvm::MachineInstr &amp; BI, const llvm::BitTracker::CellMapType &amp; Inputs, llvm::BitTracker::BranchTargetList &amp; Targets, bool &amp; FallsThru) const'/>
<use f='llvm/llvm/lib/Target/Hexagon/BitTracker.cpp' l='932' u='c' c='_ZN4llvm10BitTracker17visitBranchesFromERKNS_12MachineInstrE'/>
<doc f='llvm/llvm/lib/Target/Hexagon/BitTracker.h' l='473'>// Evaluate a branch, given the cell map with the input values. Fill out
  // a list of all possible branch targets and indicate (through a flag)
  // whether the branch could fall-through. Return &quot;true&quot; if this information
  // has been successfully computed, &quot;false&quot; otherwise.</doc>
<ovr f='llvm/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp' l='980' c='_ZNK4llvm16HexagonEvaluator8evaluateERKNS_12MachineInstrERKSt3mapIjNS_10BitTracker12RegisterCellESt4lessIjESaISt4pairIKjS6_EEERNS_9SetVectorIPKNS_17Ma13480709'/>
