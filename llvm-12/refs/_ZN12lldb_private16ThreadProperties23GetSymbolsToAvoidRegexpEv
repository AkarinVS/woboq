<dec f='llvm/lldb/include/lldb/Target/Thread.h' l='47' type='const lldb_private::RegularExpression * lldb_private::ThreadProperties::GetSymbolsToAvoidRegexp()'/>
<doc f='llvm/lldb/include/lldb/Target/Thread.h' l='40'>/// The regular expression returned determines symbols that this
  /// thread won&apos;t stop in during &quot;step-in&quot; operations.
  ///
  /// \return
  ///    A pointer to a regular expression to compare against symbols,
  ///    or nullptr if all symbols are allowed.
  ///</doc>
<use f='llvm/lldb/source/Core/Disassembler.cpp' l='251' u='c' c='_ZN12lldb_private12Disassembler34ElideMixedSourceAndDisassemblyLineERKNS_16ExecutionContextERKNS_13SymbolContextERNS0_10SourceLineE'/>
<def f='llvm/lldb/source/Target/Thread.cpp' l='117' ll='120' type='const lldb_private::RegularExpression * lldb_private::ThreadProperties::GetSymbolsToAvoidRegexp()'/>
<use f='llvm/lldb/source/Target/ThreadPlanStepInRange.cpp' l='333' u='c' c='_ZN12lldb_private21ThreadPlanStepInRange25FrameMatchesAvoidCriteriaEv'/>
