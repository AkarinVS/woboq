<dec f='llvm/lldb/include/lldb/Core/Address.h' l='365' type='bool lldb_private::Address::ResolveFunctionScope(lldb_private::SymbolContext &amp; sym_ctx, lldb_private::AddressRange * addr_range_ptr = nullptr)'/>
<doc f='llvm/lldb/include/lldb/Core/Address.h' l='351'>/// Resolve this address to its containing function and optionally get
  /// that function&apos;s address range.
  ///
  /// \param[out] sym_ctx
  ///     The symbol context describing the function in which this address lies
  ///
  /// \parm[out] addr_range_ptr
  ///     Pointer to the AddressRange to fill in with the function&apos;s address
  ///     range.  Caller may pass null if they don&apos;t need the address range.
  ///
  /// \return
  ///     Returns \b false if the function/symbol could not be resolved
  ///     or if the address range was requested and could not be resolved;
  ///     returns \b true otherwise.</doc>
<def f='llvm/lldb/source/Core/Address.cpp' l='265' ll='280' type='bool lldb_private::Address::ResolveFunctionScope(lldb_private::SymbolContext &amp; sym_ctx, lldb_private::AddressRange * addr_range_ptr = nullptr)'/>
<doc f='llvm/lldb/source/Core/Address.cpp' l='264'>/// if &quot;addr_range_ptr&quot; is not NULL, then fill in with the address range of the function.</doc>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='155' u='c' c='_ZN12lldb_private21RegisterContextUnwind21InitializeZerothFrameEv'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='435' u='c' c='_ZN12lldb_private21RegisterContextUnwind24InitializeNonZerothFrameEv'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='489' u='c' c='_ZN12lldb_private21RegisterContextUnwind24InitializeNonZerothFrameEv'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='1791' u='c' c='_ZN12lldb_private21RegisterContextUnwind38PropagateTrapHandlerFlagFromUnwindPlanESt10shared_ptrINS_10UnwindPlanEE'/>
