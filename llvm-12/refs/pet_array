<def f='llvm/polly/lib/External/pet/include/pet.h' l='454' ll='466'/>
<use f='llvm/polly/lib/External/pet/include/pet.h' l='524'/>
<use f='llvm/polly/lib/External/ppcg/print.h' l='34' c='ppcg_print_declaration'/>
<size>64</size>
<doc f='llvm/polly/lib/External/pet/include/pet.h' l='431'>/* context holds constraints on the parameter that ensure that
 * this array has a valid (i.e., non-negative) size
 *
 * extent holds constraints on the indices
 *
 * value_bounds holds constraints on the elements of the array
 * and may be NULL if no such constraints were specified by the user
 *
 * element_size is the size in bytes of each array element
 * element_type is the type of the array elements.
 * element_is_record is set if this type is a record type.
 *
 * live_out is set if the array appears in a live-out pragma
 *
 * if uniquely_defined is set then the array is written by a single access
 * such that any element that is ever read
 * is known to be assigned exactly once before the read
 *
 * declared is set if the array was declared somewhere inside the scop.
 * exposed is set if the declared array is visible outside the scop.
 * outer is set if the type of the array elements is a record and
 * the fields of this record are represented by separate pet_array structures.
 */</doc>
<mbr r='pet_array::context' o='0' t='isl_set *'/>
<mbr r='pet_array::extent' o='64' t='isl_set *'/>
<mbr r='pet_array::value_bounds' o='128' t='isl_set *'/>
<mbr r='pet_array::element_type' o='192' t='char *'/>
<mbr r='pet_array::element_is_record' o='256' t='int'/>
<mbr r='pet_array::element_size' o='288' t='int'/>
<mbr r='pet_array::live_out' o='320' t='int'/>
<mbr r='pet_array::uniquely_defined' o='352' t='int'/>
<mbr r='pet_array::declared' o='384' t='int'/>
<mbr r='pet_array::exposed' o='416' t='int'/>
<mbr r='pet_array::outer' o='448' t='int'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='111' c='compute_extent'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='186' c='extract_array_info'/>
<size>64</size>
<use f='llvm/polly/lib/External/ppcg/ppcg.c' l='148' c='collect_names'/>
<size>64</size>
<use f='llvm/polly/lib/External/ppcg/print.c' l='400' c='ppcg_print_declaration'/>
<use f='llvm/polly/lib/External/ppcg/print.c' l='430' c='print_declarations'/>
<size>64</size>
