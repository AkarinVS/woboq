<dec f='llvm/lldb/source/Plugins/ABI/AArch64/ABIMacOSX_arm64.h' l='35' type='bool ABIMacOSX_arm64::RegisterIsVolatile(const lldb_private::RegisterInfo * reg_info)'/>
<inh f='llvm/lldb/include/lldb/Target/ABI.h' l='102' c='_ZN12lldb_private3ABI18RegisterIsVolatileEPKNS_12RegisterInfoE'/>
<def f='llvm/lldb/source/Plugins/ABI/AArch64/ABIMacOSX_arm64.cpp' l='409' ll='486' type='bool ABIMacOSX_arm64::RegisterIsVolatile(const lldb_private::RegisterInfo * reg_info)'/>
<doc f='llvm/lldb/source/Plugins/ABI/AArch64/ABIMacOSX_arm64.cpp' l='399'>// AAPCS64 (Procedure Call Standard for the ARM 64-bit Architecture) says
// registers x19 through x28 and sp are callee preserved. v8-v15 are non-
// volatile (and specifically only the lower 8 bytes of these regs), the rest
// of the fp/SIMD registers are volatile.
//
// v. https://github.com/ARM-software/abi-aa/blob/master/aapcs64/

// We treat x29 as callee preserved also, else the unwinder won&apos;t try to
// retrieve fp saves.</doc>
