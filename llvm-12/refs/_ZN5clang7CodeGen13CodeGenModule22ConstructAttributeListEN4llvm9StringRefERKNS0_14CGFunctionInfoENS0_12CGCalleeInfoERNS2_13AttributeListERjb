<dec f='llvm/clang/lib/CodeGen/CodeGenModule.h' l='1166' type='void clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef Name, const clang::CodeGen::CGFunctionInfo &amp; Info, clang::CodeGen::CGCalleeInfo CalleeInfo, llvm::AttributeList &amp; Attrs, unsigned int &amp; CallingConv, bool AttrOnCallSite)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenModule.h' l='1156'>/// Get the LLVM attributes and calling convention to use for a particular
  /// function type.
  ///
  /// \param Name - The function name.
  /// \param Info - The function type information.
  /// \param CalleeInfo - The callee information these attributes are being
  /// constructed for. If valid, the attributes applied to this decl may
  /// contribute to the function attributes and calling convention.
  /// \param Attrs [out] - On return, the attribute list to use.
  /// \param CallingConv [out] - On return, the LLVM calling convention to use.</doc>
<def f='llvm/clang/lib/CodeGen/CGCall.cpp' l='1926' ll='2391' type='void clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef Name, const clang::CodeGen::CGFunctionInfo &amp; FI, clang::CodeGen::CGCalleeInfo CalleeInfo, llvm::AttributeList &amp; AttrList, unsigned int &amp; CallingConv, bool AttrOnCallSite)'/>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='5017' u='c' c='_ZN5clang7CodeGen15CodeGenFunction8EmitCallERKNS0_14CGFunctionInfoERKNS0_8CGCalleeENS0_15ReturnValueSlotERKNS0_11CallArgListEPPN4llvm8CallBaseENS_14SourceLocationE'/>
<doc f='llvm/clang/lib/CodeGen/CGCall.cpp' l='1909'>/// Construct the IR attribute list of a function or call.
///
/// When adding an attribute, please consider where it should be handled:
///
///   - getDefaultFunctionAttributes is for attributes that are essentially
///     part of the global target configuration (but perhaps can be
///     overridden on a per-function basis).  Adding attributes there
///     will cause them to also be set in frontends that build on Clang&apos;s
///     target-configuration logic, as well as for code defined in library
///     modules such as CUDA&apos;s libdevice.
///
///   - ConstructAttributeList builds on top of getDefaultFunctionAttributes
///     and adds declaration-specific, convention-specific, and
///     frontend-specific logic.  The last is of particular importance:
///     attributes that restrict how the frontend generates code must be
///     added here rather than getDefaultFunctionAttributes.
///</doc>
<use f='llvm/clang/lib/CodeGen/CGVTables.cpp' l='429' u='c' c='_ZN5clang7CodeGen15CodeGenFunction17EmitMustTailThunkENS_10GlobalDeclEPN4llvm5ValueENS3_14FunctionCalleeE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='1393' u='c' c='_ZN5clang7CodeGen13CodeGenModule25SetLLVMFunctionAttributesENS_10GlobalDeclERKNS0_14CGFunctionInfoEPN4llvm8FunctionE'/>
