<def f='llvm/compiler-rt/lib/scudo/standalone/vector.h' l='20' ll='100'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/vector.h' l='102'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/vector.h' l='104' c='_ZN5scudo6VectorC1Ev'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/vector.h' l='106' c='_ZN5scudo6VectorC1Em'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/vector.h' l='109' c='_ZN5scudo6VectorD1Ev'/>
<doc f='llvm/compiler-rt/lib/scudo/standalone/vector.h' l='18'>// A low-level vector based on map. May incur a significant memory overhead for
// small vectors. The current implementation supports only POD types.</doc>
<fun r='_ZN5scudo12VectorNoCtor4initEm'/>
<fun r='_ZN5scudo12VectorNoCtor7destroyEv'/>
<fun r='_ZN5scudo12VectorNoCtorixEm'/>
<fun r='_ZNK5scudo12VectorNoCtorixEm'/>
<fun r='_ZN5scudo12VectorNoCtor9push_backERKT_'/>
<fun r='_ZN5scudo12VectorNoCtor4backEv'/>
<fun r='_ZN5scudo12VectorNoCtor8pop_backEv'/>
<fun r='_ZNK5scudo12VectorNoCtor4sizeEv'/>
<fun r='_ZNK5scudo12VectorNoCtor4dataEv'/>
<fun r='_ZN5scudo12VectorNoCtor4dataEv'/>
<fun r='_ZNK5scudo12VectorNoCtor8capacityEv'/>
<fun r='_ZN5scudo12VectorNoCtor7reserveEm'/>
<fun r='_ZN5scudo12VectorNoCtor6resizeEm'/>
<fun r='_ZN5scudo12VectorNoCtor5clearEv'/>
<fun r='_ZNK5scudo12VectorNoCtor5emptyEv'/>
<fun r='_ZNK5scudo12VectorNoCtor5beginEv'/>
<fun r='_ZN5scudo12VectorNoCtor5beginEv'/>
<fun r='_ZNK5scudo12VectorNoCtor3endEv'/>
<fun r='_ZN5scudo12VectorNoCtor3endEv'/>
<fun r='_ZN5scudo12VectorNoCtor10reallocateEm'/>
<mbr r='scudo::VectorNoCtor::Data' t='T *'/>
<mbr r='scudo::VectorNoCtor::CapacityBytes' t='scudo::uptr'/>
<mbr r='scudo::VectorNoCtor::Size' t='scudo::uptr'/>
