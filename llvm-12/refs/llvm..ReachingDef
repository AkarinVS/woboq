<def f='llvm/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h' l='40' ll='49'/>
<use f='llvm/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h' l='42'/>
<use f='llvm/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h' l='52'/>
<use f='llvm/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h' l='55' c='_ZN4llvm21PointerLikeTypeTraitsINS_11ReachingDefEE16getAsVoidPointerERKS1_'/>
<use f='llvm/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h' l='59' c='_ZN4llvm21PointerLikeTypeTraitsINS_11ReachingDefEE18getFromVoidPointerEPv'/>
<use f='llvm/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h' l='60' c='_ZN4llvm21PointerLikeTypeTraitsINS_11ReachingDefEE18getFromVoidPointerEPv'/>
<use f='llvm/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h' l='63' c='_ZN4llvm21PointerLikeTypeTraitsINS_11ReachingDefEE18getFromVoidPointerEPKv'/>
<use f='llvm/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h' l='64' c='_ZN4llvm21PointerLikeTypeTraitsINS_11ReachingDefEE18getFromVoidPointerEPKv'/>
<use f='llvm/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h' l='97'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h' l='36'>/// Thin wrapper around &quot;int&quot; used to store reaching definitions,
/// using an encoding that makes it compatible with TinyPtrVector.
/// The 0th LSB is forced zero (and will be used for pointer union tagging),
/// The 1st LSB is forced one (to make sure the value is non-zero).</doc>
<mbr r='llvm::ReachingDef::Encoded' o='0' t='uintptr_t'/>
<fun r='_ZN4llvm11ReachingDefC1Em'/>
<fun r='_ZN4llvm11ReachingDefC1EDn'/>
<fun r='_ZN4llvm11ReachingDefC1Ei'/>
<fun r='_ZNK4llvm11ReachingDefcviEv'/>
