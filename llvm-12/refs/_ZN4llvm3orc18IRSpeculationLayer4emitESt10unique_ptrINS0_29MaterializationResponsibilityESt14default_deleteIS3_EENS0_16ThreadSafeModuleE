<dec f='llvm/llvm/include/llvm/ExecutionEngine/Orc/Speculation.h' l='184' type='void llvm::orc::IRSpeculationLayer::emit(std::unique_ptr&lt;MaterializationResponsibility&gt; R, llvm::orc::ThreadSafeModule TSM)'/>
<inh f='llvm/llvm/include/llvm/ExecutionEngine/Orc/Layer.h' l='108' c='_ZN4llvm3orc7IRLayer4emitESt10unique_ptrINS0_29MaterializationResponsibilityESt14default_deleteIS3_EENS0_16ThreadSafeModuleE'/>
<def f='llvm/llvm/lib/ExecutionEngine/Orc/Speculation.cpp' l='58' ll='140' type='void llvm::orc::IRSpeculationLayer::emit(std::unique_ptr&lt;MaterializationResponsibility&gt; R, llvm::orc::ThreadSafeModule TSM)'/>
<doc f='llvm/llvm/lib/ExecutionEngine/Orc/Speculation.cpp' l='55'>// If two modules, share the same LLVMContext, different threads must
// not access them concurrently without locking the associated LLVMContext
// this implementation follows this contract.</doc>
