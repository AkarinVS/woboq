<dec f='llvm/llvm/lib/Target/X86/X86ISelLowering.h' l='953' type='llvm::SDValue llvm::X86TargetLowering::getNegatedExpression(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG, bool LegalOperations, bool ForCodeSize, llvm::TargetLoweringBase::NegatibleCost &amp; Cost, unsigned int Depth) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86ISelLowering.h' l='950'>/// Return the newly negated expression if the cost is not expensive and
    /// set the cost in \p Cost to indicate that if it is cheaper or neutral to
    /// do the negation.</doc>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3616' c='_ZNK4llvm14TargetLowering20getNegatedExpressionENS_7SDValueERNS_12SelectionDAGEbbRNS_18TargetLoweringBase13NegatibleCostEj'/>
<def f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='46556' ll='46615' type='llvm::SDValue llvm::X86TargetLowering::getNegatedExpression(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG, bool LegalOperations, bool ForCodeSize, llvm::TargetLoweringBase::NegatibleCost &amp; Cost, unsigned int Depth) const'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='46607' u='c' c='_ZNK4llvm17X86TargetLowering20getNegatedExpressionENS_7SDValueERNS_12SelectionDAGEbbRNS_18TargetLoweringBase13NegatibleCostEj'/>
