<dec f='llvm/polly/lib/External/isl/isl_ast_graft_private.h' l='61' type='isl_ast_graft_list * isl_ast_graft_list_merge(isl_ast_graft_list * list1, isl_ast_graft_list * list2, isl_ast_build * build)'/>
<use f='llvm/polly/lib/External/isl/isl_ast_codegen.c' l='4800' u='c' c='generate_components'/>
<def f='llvm/polly/lib/External/isl/isl_ast_graft.c' l='1238' ll='1320' type='isl_ast_graft_list * isl_ast_graft_list_merge(isl_ast_graft_list * list1, isl_ast_graft_list * list2, isl_ast_build * build)'/>
<doc f='llvm/polly/lib/External/isl/isl_ast_graft.c' l='1216'>/* Merge the given two lists into a single list of grafts,
 * merging grafts with the same guard into a single graft.
 *
 * &quot;list2&quot; has been sorted using isl_ast_graft_list_sort.
 * &quot;list1&quot; may be the result of a previous call to isl_ast_graft_list_merge
 * and may therefore not be completely sorted.
 *
 * The elements in &quot;list2&quot; need to be executed after those in &quot;list1&quot;,
 * but if the guard of a graft in &quot;list2&quot; is disjoint from the guards
 * of some final elements in &quot;list1&quot;, then it can be moved up to before
 * those final elements.
 *
 * In particular, we look at each element g of &quot;list2&quot; in turn
 * and move it up beyond elements of &quot;list1&quot; that would be sorted
 * after g as long as each of these elements has a guard that is disjoint
 * from that of g.
 *
 * We do not allow the second or any later element of &quot;list2&quot; to be moved
 * before a previous elements of &quot;list2&quot; even if the reason that
 * that element didn&apos;t move up further was that its guard was not disjoint
 * from that of the previous element in &quot;list1&quot;.
 */</doc>
