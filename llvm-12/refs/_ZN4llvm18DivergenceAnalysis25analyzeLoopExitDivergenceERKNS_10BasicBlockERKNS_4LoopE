<dec f='llvm/llvm/include/llvm/Analysis/DivergenceAnalysis.h' l='102' type='void llvm::DivergenceAnalysis::analyzeLoopExitDivergence(const llvm::BasicBlock &amp; DivExit, const llvm::Loop &amp; OuterDivLoop)'/>
<def f='llvm/llvm/lib/Analysis/DivergenceAnalysis.cpp' l='191' ll='243' type='void llvm::DivergenceAnalysis::analyzeLoopExitDivergence(const llvm::BasicBlock &amp; DivExit, const llvm::Loop &amp; OuterDivLoop)'/>
<use f='llvm/llvm/lib/Analysis/DivergenceAnalysis.cpp' l='263' u='c' c='_ZN4llvm18DivergenceAnalysis27propagateLoopExitDivergenceERKNS_10BasicBlockERKNS_4LoopE'/>
<doc f='llvm/llvm/lib/Analysis/DivergenceAnalysis.cpp' l='189'>// marks all users of loop-carried values of the loop headed by LoopHeader as
// divergent</doc>
<doc f='llvm/llvm/include/llvm/Analysis/DivergenceAnalysis.h' l='101'>/// \brief Internal implementation function for propagateLoopExitDivergence.</doc>
