<dec f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.h' l='1150' type='llvm::SDValue llvm::PPCTargetLowering::LowerBUILD_VECTOR(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG) const'/>
<def f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='8591' ll='8849' type='llvm::SDValue llvm::PPCTargetLowering::LowerBUILD_VECTOR(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG) const'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='10357' u='c' c='_ZNK4llvm17PPCTargetLowering14LowerOperationENS_7SDValueERNS_12SelectionDAGE'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='8586'>// If this is a case we can&apos;t handle, return null and let the default
// expansion code take care of it.  If we CAN select this case, and if it
// selects to a single instruction, return Op.  Otherwise, if we can codegen
// this case more efficiently than a constant pool load, lower it to the
// sequence of ops that should be used.</doc>
