<dec f='llvm/lldb/include/lldb/Expression/FunctionCaller.h' l='176' type='bool lldb_private::FunctionCaller::WriteFunctionArguments(lldb_private::ExecutionContext &amp; exe_ctx, lldb::addr_t &amp; args_addr_ref, lldb_private::ValueList &amp; arg_values, lldb_private::DiagnosticManager &amp; diagnostic_manager)'/>
<use f='llvm/lldb/source/Expression/FunctionCaller.cpp' l='118' u='c' c='_ZN12lldb_private14FunctionCaller22WriteFunctionArgumentsERNS_16ExecutionContextERmRNS_17DiagnosticManagerE'/>
<def f='llvm/lldb/source/Expression/FunctionCaller.cpp' l='125' ll='209' type='bool lldb_private::FunctionCaller::WriteFunctionArguments(lldb_private::ExecutionContext &amp; exe_ctx, lldb::addr_t &amp; args_addr_ref, lldb_private::ValueList &amp; arg_values, lldb_private::DiagnosticManager &amp; diagnostic_manager)'/>
<doc f='llvm/lldb/source/Expression/FunctionCaller.cpp' l='122'>// FIXME: Assure that the ValueList we were passed in is consistent with the one
// that defined this function.</doc>
<doc f='llvm/lldb/include/lldb/Expression/FunctionCaller.h' l='156'>/// Insert an argument struct with a non-default function address and non-
  /// default argument values
  ///
  /// \param[in] exe_ctx
  ///     The execution context to insert the function and its arguments
  ///     into.
  ///
  /// \param[in,out] args_addr_ref
  ///     The address of the structure to write the arguments into.  May
  ///     be LLDB_INVALID_ADDRESS; if it is, a new structure is allocated
  ///     and args_addr_ref is pointed at it.
  ///
  /// \param[in] arg_values
  ///     The values of the function&apos;s arguments.
  ///
  /// \param[in] diagnostic_manager
  ///     The diagnostic manager to report errors to.
  ///
  /// \return
  ///     True on success; false otherwise.</doc>
<use f='llvm/lldb/source/Plugins/LanguageRuntime/ObjC/AppleObjCRuntime/AppleObjCRuntime.cpp' l='182' u='c' c='_ZN12lldb_private16AppleObjCRuntime20GetObjectDescriptionERNS_6StreamERNS_5ValueEPNS_21ExecutionContextScopeE'/>
<use f='llvm/lldb/source/Plugins/LanguageRuntime/ObjC/AppleObjCRuntime/AppleObjCRuntimeV2.cpp' l='1412' u='c' c='_ZN12lldb_private18AppleObjCRuntimeV231UpdateISAToDescriptorMapDynamicER16RemoteNXMapTable'/>
<use f='llvm/lldb/source/Plugins/LanguageRuntime/ObjC/AppleObjCRuntime/AppleObjCRuntimeV2.cpp' l='1689' u='c' c='_ZN12lldb_private18AppleObjCRuntimeV235UpdateISAToDescriptorMapSharedCacheEv'/>
<use f='llvm/lldb/source/Plugins/LanguageRuntime/ObjC/AppleObjCRuntime/AppleObjCTrampolineHandler.cpp' l='855' u='c' c='_ZN12lldb_private26AppleObjCTrampolineHandler21SetupDispatchFunctionERNS_6ThreadERNS_9ValueListE'/>
<use f='llvm/lldb/source/Plugins/Platform/POSIX/PlatformPOSIX.cpp' l='863' u='c' c='_ZN13PlatformPOSIX11DoLoadImageEPN12lldb_private7ProcessERKNS0_8FileSpecEPKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_EERNS0_6StatusEPS3_'/>
<use f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetItemInfoHandler.cpp' l='198' u='c' c='_ZN12lldb_private23AppleGetItemInfoHandler24SetupGetItemInfoFunctionERNS_6ThreadERNS_9ValueListE'/>
<use f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetPendingItemsHandler.cpp' l='197' u='c' c='_ZN12lldb_private27AppleGetPendingItemsHandler28SetupGetPendingItemsFunctionERNS_6ThreadERNS_9ValueListE'/>
<use f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetQueuesHandler.cpp' l='204' u='c' c='_ZN12lldb_private21AppleGetQueuesHandler22SetupGetQueuesFunctionERNS_6ThreadERNS_9ValueListE'/>
<use f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetThreadItemInfoHandler.cpp' l='204' u='c' c='_ZN12lldb_private29AppleGetThreadItemInfoHandler30SetupGetThreadItemInfoFunctionERNS_6ThreadERNS_9ValueListE'/>
