<dec f='llvm/clang/include/clang/Lex/Preprocessor.h' l='2285' type='static bool clang::Preprocessor::checkModuleIsAvailable(const clang::LangOptions &amp; LangOpts, const clang::TargetInfo &amp; TargetInfo, clang::DiagnosticsEngine &amp; Diags, clang::Module * M)'/>
<doc f='llvm/clang/include/clang/Lex/Preprocessor.h' l='2282'>/// Check that the given module is available, producing a diagnostic if not.
  /// \return \c true if the check failed (because the module is not available).
  ///         \c false if the module appears to be usable.</doc>
<use f='llvm/clang/lib/Frontend/CompilerInstance.cpp' l='1989' u='c' c='_ZN5clang16CompilerInstance10loadModuleENS_14SourceLocationEN4llvm8ArrayRefISt4pairIPNS_14IdentifierInfoES1_EEENS_6Module18NameVisibilityKindEb'/>
<use f='llvm/clang/lib/Frontend/FrontendAction.cpp' l='482' u='c' c='_ZL20prepareToBuildModuleRN5clang16CompilerInstanceEN4llvm9StringRefE'/>
<def f='llvm/clang/lib/Lex/PPDirectives.cpp' l='1648' ll='1672' type='static bool clang::Preprocessor::checkModuleIsAvailable(const clang::LangOptions &amp; LangOpts, const clang::TargetInfo &amp; TargetInfo, clang::DiagnosticsEngine &amp; Diags, clang::Module * M)'/>
<use f='llvm/clang/lib/Lex/PPDirectives.cpp' l='1968' u='c' c='_ZN5clang12Preprocessor27HandleHeaderIncludeOrImportENS_14SourceLocationERNS_5TokenES3_S1_PKNS_15DirectoryLookupEPKNS_9FileEntryE'/>
<use f='llvm/clang/lib/Lex/Pragma.cpp' l='1632' u='c' c='_ZN12_GLOBAL__N_124PragmaModuleBeginHandler12HandlePragmaERN5clang12PreprocessorENS1_16PragmaIntroducerERNS1_5TokenE'/>
