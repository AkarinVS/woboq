<dec f='llvm/clang/include/clang/Basic/DiagnosticIDs.h' l='188' type='unsigned int clang::DiagnosticIDs::getCustomDiagID(clang::DiagnosticIDs::Level L, llvm::StringRef FormatString)'/>
<use f='llvm/clang/include/clang/Basic/Diagnostic.h' l='825' u='c' c='_ZN5clang17DiagnosticsEngine15getCustomDiagIDENS0_5LevelERAT__Kc'/>
<doc f='llvm/clang/include/clang/Basic/DiagnosticIDs.h' l='179'>/// Return an ID for a diagnostic with the specified format string and
  /// level.
  ///
  /// If this is the first request for this diagnostic, it is registered and
  /// created, otherwise the existing ID is returned.

  // FIXME: Replace this function with a create-only facilty like
  // createCustomDiagIDFromFormatString() to enforce safe usage. At the time of
  // writing, nearly all callers of this function were invalid.</doc>
<def f='llvm/clang/lib/Basic/DiagnosticIDs.cpp' l='414' ll='418' type='unsigned int clang::DiagnosticIDs::getCustomDiagID(clang::DiagnosticIDs::Level L, llvm::StringRef FormatString)'/>
<doc f='llvm/clang/lib/Basic/DiagnosticIDs.cpp' l='408'>/// getCustomDiagID - Return an ID for a diagnostic with the specified message
/// and level.  If this is the first request for this diagnostic, it is
/// registered and created, otherwise the existing ID is returned.
///
/// \param FormatString A fixed diagnostic format string that will be hashed and
/// mapped to a unique DiagID.</doc>
