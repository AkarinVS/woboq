<dec f='llvm/lldb/include/lldb/Target/Target.h' l='936' type='bool lldb_private::Target::ModuleIsExcludedForUnconstrainedSearches(const lldb_private::FileSpec &amp; module_spec)'/>
<doc f='llvm/lldb/include/lldb/Target/Target.h' l='921'>/// Return whether this FileSpec corresponds to a module that should be
  /// considered for general searches.
  ///
  /// This API will be consulted by the SearchFilterForUnconstrainedSearches
  /// and any module that returns \b true will not be searched.  Note the
  /// SearchFilterForUnconstrainedSearches is the search filter that
  /// gets used in the CreateBreakpoint calls when no modules is provided.
  ///
  /// The target call at present just consults the Platform&apos;s call of the
  /// same name.
  ///
  /// \param[in] module_spec
  ///     Path to the module.
  ///
  /// \return \b true if the module should be excluded, \b false otherwise.</doc>
<use f='llvm/lldb/source/Core/SearchFilter.cpp' l='372' u='c' c='_ZN12lldb_private36SearchFilterForUnconstrainedSearches12ModulePassesERKNS_8FileSpecE'/>
<def f='llvm/lldb/source/Target/Target.cpp' l='1656' ll='1676' type='bool lldb_private::Target::ModuleIsExcludedForUnconstrainedSearches(const lldb_private::FileSpec &amp; module_file_spec)'/>
