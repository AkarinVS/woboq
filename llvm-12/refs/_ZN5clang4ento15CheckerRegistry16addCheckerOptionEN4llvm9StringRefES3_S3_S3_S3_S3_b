<dec f='llvm/clang/include/clang/StaticAnalyzer/Frontend/CheckerRegistry.h' l='154' type='void clang::ento::CheckerRegistry::addCheckerOption(llvm::StringRef OptionType, llvm::StringRef CheckerFullName, llvm::StringRef OptionName, llvm::StringRef DefaultValStr, llvm::StringRef Description, llvm::StringRef DevelopmentStatus, bool IsHidden = false)'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Frontend/CheckerRegistry.h' l='145'>/// Registers an option to a given checker. A checker option will always have
  /// the following format:
  ///   CheckerFullName:OptionName=Value
  /// And can be specified from the command line like this:
  ///   -analyzer-config CheckerFullName:OptionName=Value
  ///
  /// Options for unknown checkers, or unknown options for a given checker, or
  /// invalid value types for that given option are reported as an error in
  /// non-compatibility mode.</doc>
<use f='llvm/clang/lib/Analysis/plugins/CheckerOptionHandling/CheckerOptionHandling.cpp' l='35' u='c' c='clang_registerCheckers'/>
<def f='llvm/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp' l='450' ll='460' type='void clang::ento::CheckerRegistry::addCheckerOption(llvm::StringRef OptionType, llvm::StringRef CheckerFullName, llvm::StringRef OptionName, llvm::StringRef DefaultValStr, llvm::StringRef Description, llvm::StringRef DevelopmentStatus, bool IsHidden = false)'/>
