<dec f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='1351' type='bool llvm::Attributor::isAssumedDead(const llvm::Instruction &amp; I, const llvm::AbstractAttribute * QueryingAA, const llvm::AAIsDead * LivenessAA, bool CheckBBLivenessOnly = false, llvm::DepClassTy DepClass = DepClassTy::OPTIONAL)'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='1348'>/// Return true if \p I is assumed dead.
  ///
  /// If \p LivenessAA is not provided it is queried.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='603' u='c' c='_ZN4llvm10Attributor13isAssumedDeadERKNS_3UseEPKNS_17AbstractAttributeEPKNS_8AAIsDeadEbNS_10DepClassTyE'/>
<def f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='611' ll='645' type='bool llvm::Attributor::isAssumedDead(const llvm::Instruction &amp; I, const llvm::AbstractAttribute * QueryingAA, const llvm::AAIsDead * FnLivenessAA, bool CheckBBLivenessOnly = false, llvm::DepClassTy DepClass = DepClassTy::OPTIONAL)'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='653' u='c' c='_ZN4llvm10Attributor13isAssumedDeadERKNS_10IRPositionEPKNS_17AbstractAttributeEPKNS_8AAIsDeadEbNS_10DepClassTyE'/>
