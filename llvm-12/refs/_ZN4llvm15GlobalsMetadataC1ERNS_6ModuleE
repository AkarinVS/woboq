<dec f='llvm/llvm/include/llvm/Transforms/Instrumentation/AddressSanitizer.h' l='51' type='void llvm::GlobalsMetadata::GlobalsMetadata(llvm::Module &amp; M)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Instrumentation/AddressSanitizer.h' l='50'>/// Create an initialized GlobalsMetadata instance.</doc>
<use f='llvm/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp' l='569' u='c' c='_ZN12_GLOBAL__N_130ASanGlobalsMetadataWrapperPass11runOnModuleERN4llvm6ModuleE'/>
<def f='llvm/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp' l='1129' ll='1157' type='void llvm::GlobalsMetadata::GlobalsMetadata(llvm::Module &amp; M)'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp' l='1163' u='c' c='_ZN4llvm27ASanGlobalsMetadataAnalysis3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE'/>
<doc f='llvm/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp' l='1126'>// FIXME: It would be cleaner to instead attach relevant metadata to the globals
// we want to sanitize instead and reading this metadata on each pass over a
// function instead of reading module level metadata at first.</doc>
