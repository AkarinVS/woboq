<dec f='llvm/llvm/include/llvm/Transforms/Utils/IntegerDivision.h' l='68' type='bool llvm::expandDivisionUpTo64Bits(llvm::BinaryOperator * Div)'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUCodeGenPrepare.cpp' l='1173' u='c' c='_ZNK12_GLOBAL__N_120AMDGPUCodeGenPrepare14expandDivRem64ERN4llvm14BinaryOperatorE'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/IntegerDivision.h' l='64'>/// Generate code to divide two integers, replacing Div with the generated
  /// code. Uses ExpandDivision with a 64bit Div.
  ///
  /// Replace Rem with generated code.</doc>
<def f='llvm/llvm/lib/Transforms/Utils/IntegerDivision.cpp' l='631' ll='673' type='bool llvm::expandDivisionUpTo64Bits(llvm::BinaryOperator * Div)'/>
<doc f='llvm/llvm/lib/Transforms/Utils/IntegerDivision.cpp' l='626'>/// Generate code to divide two integers of bitwidth up to 64 bits. Uses the
/// above routines and extends the inputs/truncates the outputs to operate
/// in 64 bits.
///
/// Replace Div with emulation code.</doc>
