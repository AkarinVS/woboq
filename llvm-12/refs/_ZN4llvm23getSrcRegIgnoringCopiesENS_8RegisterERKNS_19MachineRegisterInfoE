<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/Utils.h' l='186' type='llvm::Register llvm::getSrcRegIgnoringCopies(llvm::Register Reg, const llvm::MachineRegisterInfo &amp; MRI)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/Utils.h' l='182'>/// Find the source register for \p Reg, folding away any trivial copies. It
/// will be an output register of the instruction that getDefIgnoringCopies
/// returns. May return an invalid register if \p Reg is not a generic virtual
/// register.</doc>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/Utils.cpp' l='396' ll='401' type='llvm::Register llvm::getSrcRegIgnoringCopies(llvm::Register Reg, const llvm::MachineRegisterInfo &amp; MRI)'/>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp' l='2071' u='c' c='_ZN12_GLOBAL__N_126AArch64InstructionSelector30contractCrossBankCopyIntoStoreERN4llvm12MachineInstrERNS1_19MachineRegisterInfoE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp' l='3558' u='c' c='_ZNK4llvm25AMDGPUInstructionSelector17selectGlobalSAddrERNS_14MachineOperandE'/>
