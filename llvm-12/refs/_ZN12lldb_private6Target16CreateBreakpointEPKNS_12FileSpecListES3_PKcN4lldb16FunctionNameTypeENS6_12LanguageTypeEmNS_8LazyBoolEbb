<dec f='llvm/lldb/include/lldb/Target/Target.h' l='658' type='lldb::BreakpointSP lldb_private::Target::CreateBreakpoint(const lldb_private::FileSpecList * containingModules, const lldb_private::FileSpecList * containingSourceFiles, const char * func_name, lldb::FunctionNameType func_name_type_mask, lldb::LanguageType language, lldb::addr_t offset, lldb_private::LazyBool skip_prologue, bool internal, bool request_hardware)'/>
<doc f='llvm/lldb/include/lldb/Target/Target.h' l='653'>// Use this to create a function breakpoint by name in containingModule, or
  // all modules if it is nullptr When &quot;skip_prologue is set to
  // eLazyBoolCalculate, we use the current target setting, else we use the
  // values passed in. func_name_type_mask is or&apos;ed values from the
  // FunctionNameType enum.</doc>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='839' u='c' c='_ZN4lldb8SBTarget22BreakpointCreateByNameEPKcS2_'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='843' u='c' c='_ZN4lldb8SBTarget22BreakpointCreateByNameEPKcS2_'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='899' u='c' c='_ZN4lldb8SBTarget22BreakpointCreateByNameEPKcjNS_12LanguageTypeERKNS_14SBFileSpecListES6_'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/Darwin-Kernel/DynamicLoaderDarwinKernel.cpp' l='1480' u='c' c='_ZN25DynamicLoaderDarwinKernel33SetNotificationBreakpointIfNeededEv'/>
<use f='llvm/lldb/source/Plugins/StructuredData/DarwinLog/StructuredDataDarwinLog.cpp' l='1639' u='c' c='_ZN12lldb_private23StructuredDataDarwinLog21AddInitCompletionHookERNS_7ProcessE'/>
<def f='llvm/lldb/source/Target/Target.cpp' l='421' ll='442' type='lldb::BreakpointSP lldb_private::Target::CreateBreakpoint(const lldb_private::FileSpecList * containingModules, const lldb_private::FileSpecList * containingSourceFiles, const char * func_name, lldb::FunctionNameType func_name_type_mask, lldb::LanguageType language, lldb::addr_t offset, lldb_private::LazyBool skip_prologue, bool internal, bool hardware)'/>
