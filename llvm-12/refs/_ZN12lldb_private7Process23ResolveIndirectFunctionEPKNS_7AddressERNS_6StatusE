<dec f='llvm/lldb/include/lldb/Target/Process.h' l='1709' type='lldb::addr_t lldb_private::Process::ResolveIndirectFunction(const lldb_private::Address * address, lldb_private::Status &amp; error)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='1698'>/// Resolve dynamically loaded indirect functions.
  ///
  /// \param[in] address
  ///     The load address of the indirect function to resolve.
  ///
  /// \param[out] error
  ///     An error value in case the resolve fails.
  ///
  /// \return
  ///     The address of the resolved function.
  ///     LLDB_INVALID_ADDRESS if the resolution failed.</doc>
<use f='llvm/lldb/source/Core/Address.cpp' l='342' u='c' c='_ZNK12lldb_private7Address22GetCallableLoadAddressEPNS_6TargetEb'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderDarwin.cpp' l='993' u='c' c='_ZN12lldb_private19DynamicLoaderDarwin28GetStepThroughTrampolinePlanERNS_6ThreadEb'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='1589' u='c' c='_ZN12lldb_private7Process20CreateBreakpointSiteERKSt10shared_ptrINS_18BreakpointLocationEEb'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='5573' ll='5599' type='lldb::addr_t lldb_private::Process::ResolveIndirectFunction(const lldb_private::Address * address, lldb_private::Status &amp; error)'/>
