<dec f='llvm/lldb/include/lldb/Host/Host.h' l='206' type='static lldb_private::Status lldb_private::Host::RunShellCommand(llvm::StringRef command, const lldb_private::FileSpec &amp; working_dir, int * status_ptr, int * signo_ptr, std::string * command_output, const Timeout&lt;std::micro&gt; &amp; timeout, bool run_in_shell = true, bool hide_stderr = false)'/>
<doc f='llvm/lldb/include/lldb/Host/Host.h' l='198'>/// Run a shell command.
  /// \arg command  shouldn&apos;t be empty
  /// \arg working_dir Pass empty FileSpec to use the current working directory
  /// \arg status_ptr  Pass NULL if you don&apos;t want the process exit status
  /// \arg signo_ptr   Pass NULL if you don&apos;t want the signal that caused the
  ///                  process to exit
  /// \arg command_output  Pass NULL if you don&apos;t want the command output
  /// \arg hide_stderr if this is false, redirect stderr to stdout</doc>
<def f='llvm/lldb/source/Host/common/Host.cpp' l='470' ll='478' type='static lldb_private::Status lldb_private::Host::RunShellCommand(llvm::StringRef command, const lldb_private::FileSpec &amp; working_dir, int * status_ptr, int * signo_ptr, std::string * command_output_ptr, const Timeout&lt;std::micro&gt; &amp; timeout, bool run_in_shell = true, bool hide_stderr = false)'/>
<use f='llvm/lldb/source/Plugins/Platform/MacOSX/PlatformDarwin.cpp' l='1155' u='c' c='_ZL18GetXcodeSelectPathv'/>
<use f='llvm/lldb/source/Plugins/Platform/POSIX/PlatformPOSIX.cpp' l='138' u='c' c='_ZN13PlatformPOSIX7PutFileERKN12lldb_private8FileSpecES3_jj'/>
<use f='llvm/lldb/source/Plugins/Platform/POSIX/PlatformPOSIX.cpp' l='195' u='c' c='_ZN13PlatformPOSIX7GetFileERKN12lldb_private8FileSpecES3_'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerCommon.cpp' l='744' u='c' c='_ZN12lldb_private18process_gdb_remote34GDBRemoteCommunicationServerCommon22Handle_qPlatform_shellER24StringExtractorGDBRemote'/>
