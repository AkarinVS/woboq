<dec f='llvm/lldb/include/lldb/Utility/DataEncoder.h' l='74' type='void lldb_private::DataEncoder::DataEncoder(const lldb::DataBufferSP &amp; data_sp, lldb::ByteOrder byte_order, uint8_t addr_size)'/>
<doc f='llvm/lldb/include/lldb/Utility/DataEncoder.h' l='59'>/// Construct with shared data.
  ///
  /// Copies the data shared pointer which adds a reference to the contained
  /// in \a data_sp. The shared data reference is reference counted to ensure
  /// the data lives as long as anyone still has a valid shared pointer to the
  /// data in \a data_sp.
  ///
  /// \param[in] data_sp
  ///     A shared pointer to data.
  ///
  /// \param[in] byte_order
  ///     A byte order of the data that we are extracting from.
  ///
  /// \param[in] addr_size
  ///     A new address byte size value.</doc>
<use f='llvm/lldb/source/Plugins/Platform/Android/AdbClient.cpp' l='592' u='c' c='_ZN12lldb_private16platform_android9AdbClient11SyncService15SendSyncRequestEPKcjPKv'/>
<def f='llvm/lldb/source/Utility/DataEncoder.cpp' l='43' ll='48' type='void lldb_private::DataEncoder::DataEncoder(const lldb::DataBufferSP &amp; data_sp, lldb::ByteOrder endian, uint8_t addr_size)'/>
<doc f='llvm/lldb/source/Utility/DataEncoder.cpp' l='39'>// Make a shared pointer reference to the shared data in &quot;data_sp&quot; and set the
// endian swapping setting to &quot;swap&quot;, and the address size to &quot;addr_size&quot;. The
// shared data reference will ensure the data lives as long as any DataEncoder
// objects exist that have a reference to this data.</doc>
<use f='llvm/lldb/unittests/Process/POSIX/NativeProcessELFTest.cpp' l='39' u='c' c='_ZN12_GLOBAL__N_114CreateAuxvDataERNS_14MockProcessELFEN4llvm8ArrayRefISt4pairIN9AuxVector9EntryTypeEjEEE'/>
