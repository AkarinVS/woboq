<dec f='llvm/clang/include/clang/Basic/TargetInfo.h' l='387' type='clang::TransferrableTargetInfo::RealType clang::TargetInfo::getRealTypeByWidth(unsigned int BitWidth, bool ExplicitIEEE) const'/>
<doc f='llvm/clang/include/clang/Basic/TargetInfo.h' l='381'>/// Return floating point type with specified width. On PPC, there are
  /// three possible types for 128-bit floating point: &quot;PPC double-double&quot;,
  /// IEEE 754R quad precision, and &quot;long double&quot; (which under the covers
  /// is represented as one of those two). At this time, there is no support
  /// for an explicit &quot;PPC double-double&quot; type (i.e. __ibm128) so we only
  /// need to differentiate between &quot;long double&quot; and IEEE quad precision.</doc>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='10929' u='c' c='_ZNK5clang10ASTContext22getRealTypeForBitwidthEjb'/>
<def f='llvm/clang/lib/Basic/TargetInfo.cpp' l='271' ll='297' type='TargetInfo::RealType clang::TargetInfo::getRealTypeByWidth(unsigned int BitWidth, bool ExplicitIEEE) const'/>
