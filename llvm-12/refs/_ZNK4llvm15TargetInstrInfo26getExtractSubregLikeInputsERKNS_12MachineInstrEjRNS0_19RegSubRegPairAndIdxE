<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1213' ll='1217' type='bool llvm::TargetInstrInfo::getExtractSubregLikeInputs(const llvm::MachineInstr &amp; MI, unsigned int DefIdx, llvm::TargetInstrInfo::RegSubRegPairAndIdx &amp; InputReg) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1205'>/// Target-dependent implementation of getExtractSubregInputs.
  ///
  /// \returns true if it is possible to build the equivalent
  /// EXTRACT_SUBREG inputs with the pair \p MI, \p DefIdx. False otherwise.
  ///
  /// \pre MI.isExtractSubregLike().
  ///
  /// \see TargetInstrInfo::getExtractSubregInputs.</doc>
<use f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='1320' u='c' c='_ZNK4llvm15TargetInstrInfo22getExtractSubregInputsERKNS_12MachineInstrEjRNS0_19RegSubRegPairAndIdxE'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='5363' c='_ZNK4llvm16ARMBaseInstrInfo26getExtractSubregLikeInputsERKNS_12MachineInstrEjRNS_15TargetInstrInfo19RegSubRegPairAndIdxE'/>
