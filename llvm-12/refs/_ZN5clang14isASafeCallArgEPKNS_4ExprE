<dec f='llvm/clang/lib/StaticAnalyzer/Checkers/WebKit/ASTUtils.h' l='66' type='bool clang::isASafeCallArg(const clang::Expr * E)'/>
<def f='llvm/clang/lib/StaticAnalyzer/Checkers/WebKit/ASTUtils.cpp' l='82' ll='93' type='bool clang::isASafeCallArg(const clang::Expr * E)'/>
<doc f='llvm/clang/lib/StaticAnalyzer/Checkers/WebKit/ASTUtils.h' l='60'>/// For \p E referring to a ref-countable/-counted pointer/reference we return
/// whether it&apos;s a safe call argument. Examples: function parameter or
/// this-pointer. The logic relies on the set of recursive rules we enforce for
/// WebKit codebase.
///
/// \returns Whether \p E is a safe call arugment.</doc>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/WebKit/UncountedCallArgsChecker.cpp' l='113' u='c' c='_ZNK12_GLOBAL__N_124UncountedCallArgsChecker13visitCallExprEPKN5clang8CallExprE'/>
