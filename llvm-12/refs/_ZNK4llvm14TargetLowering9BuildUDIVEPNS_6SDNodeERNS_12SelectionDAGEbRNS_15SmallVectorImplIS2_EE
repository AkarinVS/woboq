<dec f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='4221' type='llvm::SDValue llvm::TargetLowering::BuildUDIV(llvm::SDNode * N, llvm::SelectionDAG &amp; DAG, bool IsAfterLegalization, SmallVectorImpl&lt;llvm::SDNode *&gt; &amp; Created) const'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='22093' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner9BuildUDIVEPN4llvm6SDNodeE'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='5196' ll='5333' type='llvm::SDValue llvm::TargetLowering::BuildUDIV(llvm::SDNode * N, llvm::SelectionDAG &amp; DAG, bool IsAfterLegalization, SmallVectorImpl&lt;llvm::SDNode *&gt; &amp; Created) const'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='5192'>/// Given an ISD::UDIV node expressing a divide by constant,
/// return a DAG expression to select that will generate the same value by
/// multiplying by a magic number.
/// Ref: &quot;Hacker&apos;s Delight&quot; or &quot;The PowerPC Compiler Writer&apos;s Guide&quot;.</doc>
