<def f='llvm/clang/lib/Lex/PPExpressions.cpp' l='87' ll='99'/>
<use f='llvm/clang/lib/Lex/PPExpressions.cpp' l='102' c='_ZL15EvaluateDefinedRN12_GLOBAL__N_17PPValueERN5clang5TokenER14DefinedTrackerbRNS2_12PreprocessorE'/>
<use f='llvm/clang/lib/Lex/PPExpressions.cpp' l='229' c='_ZL13EvaluateValueRN12_GLOBAL__N_17PPValueERN5clang5TokenER14DefinedTrackerbRNS2_12PreprocessorE'/>
<use f='llvm/clang/lib/Lex/PPExpressions.cpp' l='603' c='_ZL24EvaluateDirectiveSubExprRN12_GLOBAL__N_17PPValueEjRN5clang5TokenEbRbRNS2_12PreprocessorE'/>
<use f='llvm/clang/lib/Lex/PPExpressions.cpp' l='798' c='_ZL24EvaluateDirectiveSubExprRN12_GLOBAL__N_17PPValueEjRN5clang5TokenEbRbRNS2_12PreprocessorE'/>
<use f='llvm/clang/lib/Lex/PPExpressions.cpp' l='863' c='_ZN5clang12Preprocessor27EvaluateDirectiveExpressionERPNS_14IdentifierInfoE'/>
<size>24</size>
<doc f='llvm/clang/lib/Lex/PPExpressions.cpp' l='80'>/// DefinedTracker - This struct is used while parsing expressions to keep track
/// of whether !defined(X) has been seen.
///
/// With this simple scheme, we handle the basic forms:
///    !defined(X)   and !defined X
/// but we also trivially handle (silly) stuff like:
///    !!!defined(X) and +!defined(X) and !+!+!defined(X) and !(defined(X)).</doc>
