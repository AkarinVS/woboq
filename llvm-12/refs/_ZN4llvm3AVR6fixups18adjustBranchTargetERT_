<def f='llvm/llvm/lib/Target/AVR/MCTargetDesc/AVRFixupKinds.h' l='141' type='void llvm::AVR::fixups::adjustBranchTarget(T &amp; val)'/>
<doc f='llvm/llvm/lib/Target/AVR/MCTargetDesc/AVRFixupKinds.h' l='135'>/// Adjusts the value of a branch target.
/// All branch targets in AVR are rightshifted by 1 to take advantage
/// of the fact that all instructions are aligned to addresses of size
/// 2, so bit 0 of an address is always 0. This gives us another bit
/// of precision.
/// \param [in,out] val The target to adjust.</doc>
<use f='llvm/llvm/lib/Target/AVR/MCTargetDesc/AVRAsmBackend.cpp' l='84' u='c' c='_ZN6adjustL12adjustBranchEjRKN4llvm7MCFixupERmPNS0_9MCContextE'/>
<use f='llvm/llvm/lib/Target/AVR/MCTargetDesc/AVRAsmBackend.cpp' l='95' u='c' c='_ZN6adjustL20adjustRelativeBranchEjRKN4llvm7MCFixupERmPNS0_9MCContextE'/>
<use f='llvm/llvm/lib/Target/AVR/MCTargetDesc/AVRMCCodeEmitter.cpp' l='109' u='c' c='_ZNK4llvm16AVRMCCodeEmitter21encodeRelCondBrTargetERKNS_6MCInstEjRNS_15SmallVectorImplINS_7MCFixupEEERKNS_15MCSubtargetInfoE'/>
<use f='llvm/llvm/lib/Target/AVR/MCTargetDesc/AVRMCCodeEmitter.cpp' l='219' u='c' c='_ZNK4llvm16AVRMCCodeEmitter16encodeCallTargetERKNS_6MCInstEjRNS_15SmallVectorImplINS_7MCFixupEEERKNS_15MCSubtargetInfoE'/>
