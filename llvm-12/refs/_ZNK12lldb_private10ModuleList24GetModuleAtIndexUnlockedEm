<dec f='llvm/lldb/include/lldb/Core/ModuleList.h' l='226' type='lldb::ModuleSP lldb_private::ModuleList::GetModuleAtIndexUnlocked(size_t idx) const'/>
<doc f='llvm/lldb/include/lldb/Core/ModuleList.h' l='214'>/// Get the module shared pointer for the module at index \a idx without
  /// acquiring the ModuleList mutex.  This MUST already have been acquired
  /// with ModuleList::GetMutex and locked for this call to be safe.
  ///
  /// \param[in] idx
  ///     An index into this module collection.
  ///
  /// \return
  ///     A shared pointer to a Module which can contain NULL if
  ///     \a idx is out of range.
  ///
  /// \see ModuleList::GetSize()</doc>
<use f='llvm/lldb/source/Commands/CommandObjectTarget.cpp' l='3058' u='c' c='_ZN30CommandObjectTargetModulesList9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Core/ModuleList.cpp' l='356' u='c' c='_ZNK12lldb_private10ModuleList16GetModuleAtIndexEm'/>
<def f='llvm/lldb/source/Core/ModuleList.cpp' l='359' ll='364' type='lldb::ModuleSP lldb_private::ModuleList::GetModuleAtIndexUnlocked(size_t idx) const'/>
