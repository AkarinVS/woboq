<dec f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='1517' type='bool llvm::slpvectorizer::BoUpSLP::canReuseExtract(ArrayRef&lt;llvm::Value *&gt; VL, llvm::Value * OpValue, SmallVectorImpl&lt;unsigned int&gt; &amp; CurrentOrder) const'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='2782' u='c' c='_ZN4llvm13slpvectorizer7BoUpSLP13buildTree_recENS_8ArrayRefIPNS_5ValueEEEjRKNS1_8EdgeInfoE'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='3341' ll='3406' type='bool llvm::slpvectorizer::BoUpSLP::canReuseExtract(ArrayRef&lt;llvm::Value *&gt; VL, llvm::Value * OpValue, SmallVectorImpl&lt;unsigned int&gt; &amp; CurrentOrder) const'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='1512'>/// \returns true if the ExtractElement/ExtractValue instructions in \p VL can
  /// be vectorized to use the original vector (or aggregate &quot;bitcast&quot; to a
  /// vector) and sets \p CurrentOrder to the identity permutation; otherwise
  /// returns false, setting \p CurrentOrder to either an empty vector or a
  /// non-identity permutation that allows to reuse extract instructions.</doc>
