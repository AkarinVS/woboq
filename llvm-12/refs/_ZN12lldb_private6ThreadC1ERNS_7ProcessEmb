<dec f='llvm/lldb/include/lldb/Target/Thread.h' l='144' type='void lldb_private::Thread::Thread(lldb_private::Process &amp; process, lldb::tid_t tid, bool use_invalid_index_id = false)'/>
<doc f='llvm/lldb/include/lldb/Target/Thread.h' l='133'>/// Constructor
  ///
  /// \param [in] use_invalid_index_id
  ///     Optional parameter, defaults to false.  The only subclass that
  ///     is likely to set use_invalid_index_id == true is the HistoryThread
  ///     class.  In that case, the Thread we are constructing represents
  ///     a thread from earlier in the program execution.  We may have the
  ///     tid of the original thread that they represent but we don&apos;t want
  ///     to reuse the IndexID of that thread, or create a new one.  If a
  ///     client wants to know the original thread&apos;s IndexID, they should use
  ///     Thread::GetExtendedBacktraceOriginatingIndexID().</doc>
<use f='llvm/lldb/source/Plugins/Process/Utility/HistoryThread.cpp' l='30' u='c' c='_ZN12lldb_private13HistoryThreadC1ERNS_7ProcessEmSt6vectorImSaImEEb'/>
<use f='llvm/lldb/source/Plugins/Process/Utility/ThreadMemory.cpp' l='25' u='c' c='_ZN12ThreadMemoryC1ERN12lldb_private7ProcessEmRKSt10shared_ptrINS0_11ValueObjectEE'/>
<use f='llvm/lldb/source/Plugins/Process/Utility/ThreadMemory.cpp' l='31' u='c' c='_ZN12ThreadMemoryC1ERN12lldb_private7ProcessEmN4llvm9StringRefES4_m'/>
<use f='llvm/lldb/source/Plugins/Process/elf-core/ThreadElfCore.cpp' l='48' u='c' c='_ZN13ThreadElfCoreC1ERN12lldb_private7ProcessERK10ThreadData'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/ThreadGDBRemote.cpp' l='37' u='c' c='_ZN12lldb_private18process_gdb_remote15ThreadGDBRemoteC1ERNS_7ProcessEm'/>
<use f='llvm/lldb/source/Plugins/Process/mach-core/ThreadMachCore.cpp' l='34' u='c' c='_ZN14ThreadMachCoreC1ERN12lldb_private7ProcessEm'/>
<use f='llvm/lldb/source/Plugins/Process/minidump/ThreadMinidump.cpp' l='38' u='c' c='_ZN12lldb_private8minidump14ThreadMinidumpC1ERNS_7ProcessERKN4llvm8minidump6ThreadENS4_8ArrayRefIhEE'/>
<def f='llvm/lldb/source/Target/Thread.cpp' l='223' ll='243' type='void lldb_private::Thread::Thread(lldb_private::Process &amp; process, lldb::tid_t tid, bool use_invalid_index_id = false)'/>
<use f='llvm/lldb/include/lldb/Target/ThreadTrace.h' l='35' u='c' c='_ZN12lldb_private11ThreadTraceC1ERNS_7ProcessEmRKNS_8FileSpecE'/>
