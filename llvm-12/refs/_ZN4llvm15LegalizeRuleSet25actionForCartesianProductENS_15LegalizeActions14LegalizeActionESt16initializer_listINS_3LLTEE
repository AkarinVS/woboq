<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='486' ll='491' type='llvm::LegalizeRuleSet &amp; llvm::LegalizeRuleSet::actionForCartesianProduct(llvm::LegalizeActions::LegalizeAction Action, std::initializer_list&lt;LLT&gt; Types)'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='571' u='c' c='_ZN4llvm15LegalizeRuleSet24legalForCartesianProductESt16initializer_listINS_3LLTEE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='692' u='c' c='_ZN4llvm15LegalizeRuleSet26libcallForCartesianProductESt16initializer_listINS_3LLTEE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='784' u='c' c='_ZN4llvm15LegalizeRuleSet25customForCartesianProductESt16initializer_listINS_3LLTEE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='483'>/// Use the given action when type indexes 0 and 1 are both in the given list.
  /// That is, the type pair is in the cartesian product of the list.
  /// Action should not be an action that requires mutation.</doc>
