<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.h' l='84' u='c' c='_ZN8gwp_asan20GuardedPoolAllocator12shouldSampleEv'/>
<dec f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.h' l='225' type='uint32_t gwp_asan::GuardedPoolAllocator::getRandomUnsigned32()'/>
<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.cpp' l='94' u='c' c='_ZN8gwp_asan20GuardedPoolAllocator4initERKNS_7options7OptionsE'/>
<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.cpp' l='170' u='c' c='_ZN8gwp_asan20GuardedPoolAllocator8allocateEm'/>
<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.cpp' l='269' u='c' c='_ZN8gwp_asan20GuardedPoolAllocator11reserveSlotEv'/>
<def f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.cpp' l='280' ll='287' type='uint32_t gwp_asan::GuardedPoolAllocator::getRandomUnsigned32()'/>
<doc f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.h' l='223'>// xorshift (32-bit output), extremely fast PRNG that uses arithmetic
  // operations only. Seeded using platform-specific mechanisms by initPRNG().</doc>
