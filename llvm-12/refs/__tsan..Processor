<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_mman.h' l='24' c='__tsan::AllocatorProcStart'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_mman.h' l='25' c='__tsan::AllocatorProcFinish'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.h' l='71' c='__tsan::SyncVar::Reset'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.h' l='116' c='__tsan::MetaMap::FreeBlock'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.h' l='117' c='__tsan::MetaMap::FreeRange'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.h' l='118' c='__tsan::MetaMap::ResetRange'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.h' l='127' c='__tsan::MetaMap::OnProcIdle'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='342' ll='352'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='429'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='431' c='__tsan::ThreadState::proc'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='787' c='__tsan::ProcCreate'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='788' c='__tsan::ProcDestroy'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='789' c='__tsan::ProcWire'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='790' c='__tsan::ProcUnwire'/>
<size>113096</size>
<doc f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.h' l='334'>// A Processor represents a physical thread, or a P for Go.
// It is used to store internal resources like allocate cache, and does not
// participate in race-detection logic (invisible to end user).
// In C++ it is tied to an OS thread just like ThreadState, however ideally
// it should be tied to a CPU (this way we will have fewer allocator caches).
// In Go it is tied to a P, so there are significantly fewer Processor&apos;s than
// ThreadState&apos;s (which are tied to Gs).
// A ThreadState must be wired with a Processor to handle events.</doc>
<mbr r='__tsan::Processor::thr' o='0' t='__tsan::ThreadState *'/>
<mbr r='__tsan::Processor::alloc_cache' o='64' t='__tsan::AllocatorCache'/>
<mbr r='__tsan::Processor::internal_alloc_cache' o='449600' t='__sanitizer::InternalAllocatorCache'/>
<mbr r='__tsan::Processor::block_cache' o='892224' t='__tsan::DenseSlabAllocCache'/>
<mbr r='__tsan::Processor::sync_cache' o='896384' t='__tsan::DenseSlabAllocCache'/>
<mbr r='__tsan::Processor::clock_cache' o='900544' t='__tsan::DenseSlabAllocCache'/>
<mbr r='__tsan::Processor::dd_pt' o='904704' t='__sanitizer::DDPhysicalThread *'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='890' c='__tsan::DestroyThreadState'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='950' c='__tsan_thread_start_func'/>
<size>113096</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_mman.cpp' l='71'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_mman.cpp' l='132' c='__tsan::AllocatorProcStart'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_mman.cpp' l='137' c='__tsan::AllocatorProcFinish'/>
<size>113096</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl.cpp' l='385' c='__tsan::Initialize'/>
<size>113096</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_proc.cpp' l='20' c='__tsan::ProcCreate'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_proc.cpp' l='21' c='__tsan::ProcCreate'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_proc.cpp' l='22' c='__tsan::ProcCreate'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_proc.cpp' l='23' c='__tsan::ProcCreate'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_proc.cpp' l='23' c='__tsan::ProcCreate'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_proc.cpp' l='33' c='__tsan::ProcDestroy'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_proc.cpp' l='46' c='__tsan::ProcWire'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_proc.cpp' l='53' c='__tsan::ProcUnwire'/>
<size>113096</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_thread.cpp' l='428' c='__tsan::FiberSwitchImpl'/>
<size>113096</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.cpp' l='38' c='__tsan::SyncVar::Reset'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.cpp' l='73' c='__tsan::MetaMap::FreeBlock'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.cpp' l='82' c='__tsan::MetaMap::FreeRange'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.cpp' l='121' c='__tsan::MetaMap::ResetRange'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.cpp' l='291' c='__tsan::MetaMap::OnProcIdle'/>
<size>113096</size>
