<dec f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='1214' type='static llvm::CallBase * llvm::CallBase::Create(llvm::CallBase * CB, ArrayRef&lt;llvm::OperandBundleDef&gt; Bundles, llvm::Instruction * InsertPt = nullptr)'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='1208'>/// Create a clone of \p CB with a different set of operand bundles and
  /// insert it before \p InsertPt.
  ///
  /// The returned call instruction is identical \p CB in every way except that
  /// the operand bundles for the new instruction are set to the operand bundles
  /// in \p Bundles.</doc>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='251' ll='263' type='static llvm::CallBase * llvm::CallBase::Create(llvm::CallBase * CB, ArrayRef&lt;llvm::OperandBundleDef&gt; Bundles, llvm::Instruction * InsertPt = nullptr)'/>
<doc f='llvm/llvm/lib/IR/Instructions.cpp' l='247'>//===----------------------------------------------------------------------===//
//                        CallBase Implementation
//===----------------------------------------------------------------------===//</doc>
<use f='llvm/llvm/lib/Transforms/CFGuard/CFGuard.cpp' l='209' u='c' c='_ZN12_GLOBAL__N_17CFGuard21insertCFGuardDispatchEPN4llvm8CallBaseE'/>
<use f='llvm/llvm/lib/Transforms/IPO/GlobalOpt.cpp' l='2329' u='c' c='_ZL18RemovePreallocatedPN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Utils/InlineFunction.cpp' l='1906' u='c' c='_ZN4llvm14InlineFunctionERNS_8CallBaseERNS_18InlineFunctionInfoEPNS_9AAResultsEbPNS_8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Utils/InlineFunction.cpp' l='2204' u='c' c='_ZN4llvm14InlineFunctionERNS_8CallBaseERNS_18InlineFunctionInfoEPNS_9AAResultsEbPNS_8FunctionE'/>
<use f='llvm/llvm/tools/llvm-reduce/deltas/ReduceOperandBundles.cpp' l='93' u='c' c='_ZL36maybeRewriteCallWithDifferentBundlesPN4llvm8CallBaseENS_8ArrayRefIjEE'/>
