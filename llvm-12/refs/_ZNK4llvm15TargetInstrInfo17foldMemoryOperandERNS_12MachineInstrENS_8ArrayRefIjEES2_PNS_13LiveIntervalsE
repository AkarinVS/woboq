<dec f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1069' type='llvm::MachineInstr * llvm::TargetInstrInfo::foldMemoryOperand(llvm::MachineInstr &amp; MI, ArrayRef&lt;unsigned int&gt; Ops, llvm::MachineInstr &amp; LoadMI, llvm::LiveIntervals * LIS = nullptr) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1067'>/// Same as the previous version except it allows folding of any load and
  /// store from / to any address, not just from a specific stack slot.</doc>
<use f='llvm/llvm/lib/CodeGen/InlineSpiller.cpp' l='890' u='c' c='_ZN12_GLOBAL__N_113InlineSpiller17foldMemoryOperandEN4llvm8ArrayRefISt4pairIPNS1_12MachineInstrEjEEES5_'/>
<use f='llvm/llvm/lib/CodeGen/LiveRangeEdit.cpp' l='229' u='c' c='_ZN4llvm13LiveRangeEdit10foldAsLoadEPNS_12LiveIntervalERNS_15SmallVectorImplIPNS_12MachineInstrEEE'/>
<def f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='655' ll='701' type='llvm::MachineInstr * llvm::TargetInstrInfo::foldMemoryOperand(llvm::MachineInstr &amp; MI, ArrayRef&lt;unsigned int&gt; Ops, llvm::MachineInstr &amp; LoadMI, llvm::LiveIntervals * LIS = nullptr) const'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='4446' u='c' c='_ZNK4llvm12X86InstrInfo17optimizeLoadInstrERNS_12MachineInstrEPKNS_19MachineRegisterInfoERNS_8RegisterERPS1_'/>
