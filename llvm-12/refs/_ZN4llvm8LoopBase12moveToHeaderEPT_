<def f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='443' ll='455' type='void llvm::LoopBase::moveToHeader(BlockT * BB)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='441'>/// This method is used to move BB (which must be part of this loop) to be the
  /// loop header of the loop (the block that dominates all others).</doc>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='767' u='c' c='_ZL25UpdateAnalysisInformationPN4llvm10BasicBlockES1_NS_8ArrayRefIS1_EEPNS_14DomTreeUpdaterEPNS_13DominatorTreeEPNS_8LoopInfoEPNS_16MemorySSAUpdaterEbRb'/>
<use f='llvm/llvm/lib/Transforms/Utils/CloneFunction.cpp' l='824' u='c' c='_ZN4llvm22cloneLoopWithPreheaderEPNS_10BasicBlockES1_PNS_4LoopERNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS7_NS_3sys10SmartMute9109125'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp' l='569' u='c' c='_ZN12_GLOBAL__N_110LoopRotate10rotateLoopEPN4llvm4LoopEb'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopSimplify.cpp' l='304' u='c' c='_ZL18separateNestedLoopPN4llvm4LoopEPNS_10BasicBlockEPNS_13DominatorTreeEPNS_8LoopInfoEPNS_15ScalarEvolutionEbPNS_15AssumptionCacheEPNS_16MemorySSAUpdaterE'/>
