<dec f='llvm/llvm/include/llvm/Bitstream/BitCodes.h' l='55' type='2'/>
<doc f='llvm/llvm/include/llvm/Bitstream/BitCodes.h' l='50'>/// DEFINE_ABBREV - Defines an abbrev for the current block.  It consists
    /// of a vbr5 for # operand infos.  Each operand info is emitted with a
    /// single bit to indicate if it is a literal encoding.  If so, the value is
    /// emitted with a vbr8.  If not, the encoding is emitted as 3 bits followed
    /// by the info value as a vbr5 if needed.</doc>
<use f='llvm/llvm/include/llvm/Bitstream/BitstreamReader.h' l='424' u='r' c='_ZN4llvm15BitstreamCursor7advanceEj'/>
<use f='llvm/llvm/include/llvm/Bitstream/BitstreamWriter.h' l='555' u='r' c='_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE'/>
<use f='llvm/clang/lib/Frontend/SerializedDiagnosticReader.cpp' l='145' c='_ZN5clang16serialized_diags26SerializedDiagnosticReader22skipUntilRecordOrBlockERN4llvm15BitstreamCursorERj'/>
<use f='llvm/clang/lib/Serialization/ASTReader.cpp' l='1641' u='r' c='_ZN5clang9ASTReader16ReadBlockAbbrevsERN4llvm15BitstreamCursorEjPm'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitcodeAnalyzer.cpp' l='835' u='r' c='_ZN4llvm15BitcodeAnalyzer10parseBlockEjjNS_8OptionalINS_13BCDumpOptionsEEENS1_INS_9StringRefEEE'/>
<use f='llvm/llvm/lib/Bitstream/Reader/BitstreamReader.cpp' l='433' u='r' c='_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb'/>
