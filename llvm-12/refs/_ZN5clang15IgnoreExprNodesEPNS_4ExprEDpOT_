<def f='llvm/clang/include/clang/AST/IgnoreExpr.h' l='33' ll='40' type='clang::Expr * clang::IgnoreExprNodes(clang::Expr * E, FnTys &amp;&amp;... Fns)'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='2756' u='c' c='_ZN5clang4Expr14IgnoreImpCastsEv'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='2760' u='c' c='_ZN5clang4Expr11IgnoreCastsEv'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='2764' u='c' c='_ZN5clang4Expr14IgnoreImplicitEv'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='2768' u='c' c='_ZN5clang4Expr23IgnoreImplicitAsWrittenEv'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='2772' u='c' c='_ZN5clang4Expr12IgnoreParensEv'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='2776' u='c' c='_ZN5clang4Expr19IgnoreParenImpCastsEv'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='2781' u='c' c='_ZN5clang4Expr16IgnoreParenCastsEv'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='2793' u='c' c='_ZN5clang4Expr22IgnoreParenLValueCastsEv'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='2798' u='c' c='_ZN5clang4Expr20IgnoreParenBaseCastsEv'/>
<doc f='llvm/clang/include/clang/AST/IgnoreExpr.h' l='30'>/// Given an expression E and functions Fn_1,...,Fn_n : Expr * -&gt; Expr *,
/// Recursively apply each of the functions to E until reaching a fixed point.
/// Note that a null E is valid; in this case nothing is done.</doc>
<use f='llvm/clang/lib/Tooling/Syntax/BuildTree.cpp' l='80' u='c' c='_ZL14IgnoreImplicitPN5clang4ExprE'/>
