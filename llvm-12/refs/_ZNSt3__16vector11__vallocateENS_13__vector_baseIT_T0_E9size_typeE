<dec f='llvm/build/include/c++/v1/vector' l='804' type='void std::__1::vector::__vallocate(std::__1::vector::size_type __n)'/>
<def f='llvm/build/include/c++/v1/vector' l='987' ll='996' type='void std::__1::vector::__vallocate(std::__1::vector::size_type __n)'/>
<use f='llvm/build/include/c++/v1/vector' l='1126' u='c' c='_ZNSt3__16vectorC1ENS_13__vector_baseIT_T0_E9size_typeE'/>
<use f='llvm/build/include/c++/v1/vector' l='1141' u='c' c='_ZNSt3__16vectorC1ENS_13__vector_baseIT_T0_E9size_typeERKS3_'/>
<use f='llvm/build/include/c++/v1/vector' l='1155' u='c' c='_ZNSt3__16vectorC1ENS_13__vector_baseIT_T0_E9size_typeERKS2_'/>
<use f='llvm/build/include/c++/v1/vector' l='1169' u='c' c='_ZNSt3__16vectorC1ENS_13__vector_baseIT_T0_E9size_typeERKS2_RKS3_'/>
<use f='llvm/build/include/c++/v1/vector' l='1223' u='c' c='_ZNSt3__16vectorC1ETL0__NS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIS1_EE5valuesr16is_constructibleIT_NS_15iterator_traitsIS1_E9referenceEEE5valueES1_E4typeE'/>
<use f='llvm/build/include/c++/v1/vector' l='1243' u='c' c='_ZNSt3__16vectorC1ETL0__S1_RKT0_PNS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIS1_EE5valuesr16is_constructibleIT_NS_15iterator_traitsIS1_E9referenceEEE5valueEvE4typeE'/>
<use f='llvm/build/include/c++/v1/vector' l='1258' u='c' c='_ZNSt3__16vectorC1ERKNS_6vectorIT_T0_EE'/>
<use f='llvm/build/include/c++/v1/vector' l='1273' u='c' c='_ZNSt3__16vectorC1ERKNS_6vectorIT_T0_EERKS3_'/>
<use f='llvm/build/include/c++/v1/vector' l='1334' u='c' c='_ZNSt3__16vectorC1ESt16initializer_listIT_E'/>
<use f='llvm/build/include/c++/v1/vector' l='1349' u='c' c='_ZNSt3__16vectorC1ESt16initializer_listIT_ERKT0_'/>
<use f='llvm/build/include/c++/v1/vector' l='1460' u='c' c='_ZNSt3__16vector6assignETL0__S1_'/>
<use f='llvm/build/include/c++/v1/vector' l='1482' u='c' c='_ZNSt3__16vector6assignENS_13__vector_baseIT_T0_E9size_typeENS4_15const_referenceE'/>
<doc f='llvm/build/include/c++/v1/vector' l='980'>//  Allocate space for __n objects
//  throws length_error if __n &gt; max_size()
//  throws (probably bad_alloc) if memory run out
//  Precondition:  __begin_ == __end_ == __end_cap() == 0
//  Precondition:  __n &gt; 0
//  Postcondition:  capacity() == __n
//  Postcondition:  size() == 0</doc>
