<dec f='llvm/polly/include/polly/ZoneAlgo.h' l='334' type='isl::map polly::ZoneAlgorithm::makeValInst(llvm::Value * Val, polly::ScopStmt * UserStmt, llvm::Loop * Scope, bool IsCertain = true)'/>
<use f='llvm/polly/lib/Transform/DeLICM.cpp' l='795' u='c' c='_ZN12_GLOBAL__N_110DeLICMImpl11makeValInstEPN4llvm5ValueEPN5polly8ScopStmtEPNS1_4LoopEb'/>
<doc f='llvm/polly/include/polly/ZoneAlgo.h' l='306'>/// Create a mapping from a statement instance to the instance of an
  /// llvm::Value that can be used in there.
  ///
  /// Although LLVM IR uses single static assignment, llvm::Values can have
  /// different contents in loops, when they get redefined in the last
  /// iteration. This function tries to get the statement instance of the
  /// previous definition, relative to a user.
  ///
  /// Example:
  /// for (int i = 0; i &lt; N; i += 1) {
  /// DEF:
  ///    int v = A[i];
  /// USE:
  ///    use(v);
  ///  }
  ///
  /// The value instance used by statement instance USE[i] is DEF[i]. Hence,
  /// makeValInst returns:
  ///
  /// { USE[i] -&gt; [DEF[i] -&gt; v[]] : 0 &lt;= i &lt; N }
  ///
  /// @param Val       The value to get the instance of.
  /// @param UserStmt  The statement that uses @p Val. Can be nullptr.
  /// @param Scope     Loop the using instruction resides in.
  /// @param IsCertain Pass true if the definition of @p Val is a
  ///                  MUST_WRITE or false if the write is conditional.
  ///
  /// @return { DomainUse[] -&gt; ValInst[] }</doc>
<use f='llvm/polly/lib/Transform/ForwardOpTree.cpp' l='512' u='c' c='_ZN12_GLOBAL__N_117ForwardOpTreeImpl16forwardKnownLoadEPN5polly8ScopStmtEPN4llvm11InstructionES3_PNS4_4LoopES3_S8_'/>
<use f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='401' u='c' c='_ZN5polly13ZoneAlgorithm18addArrayReadAccessEPNS_12MemoryAccessE'/>
<def f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='753' ll='837' type='isl::map polly::ZoneAlgorithm::makeValInst(llvm::Value * Val, polly::ScopStmt * UserStmt, llvm::Loop * Scope, bool IsCertain = true)'/>
<use f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='882' u='c' c='_ZN5polly13ZoneAlgorithm21makeNormalizedValInstEPN4llvm5ValueEPNS_8ScopStmtEPNS1_4LoopEb'/>
<use f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='1042' u='c' c='_ZN5polly13ZoneAlgorithm21computeNormalizedPHIsEv'/>
<use f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='1058' u='c' c='_ZN5polly13ZoneAlgorithm21computeNormalizedPHIsEv'/>
