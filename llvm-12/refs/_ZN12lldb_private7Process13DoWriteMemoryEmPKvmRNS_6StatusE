<def f='llvm/lldb/include/lldb/Target/Process.h' l='1554' ll='1560' type='size_t lldb_private::Process::DoWriteMemory(lldb::addr_t vm_addr, const void * buf, size_t size, lldb_private::Status &amp; error)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='1536'>/// Actually do the writing of memory to a process.
  ///
  /// \param[in] vm_addr
  ///     A virtual load address that indicates where to start writing
  ///     memory to.
  ///
  /// \param[in] buf
  ///     A byte buffer that is at least \a size bytes long that
  ///     contains the data to write.
  ///
  /// \param[in] size
  ///     The number of bytes to write.
  ///
  /// \param[out] error
  ///     An error value in case the memory write fails.
  ///
  /// \return
  ///     The number of bytes that were actually written.</doc>
<ovr f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='2899' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote13DoWriteMemoryEmPKvmRNS_6StatusE'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='1736' u='c' c='_ZN12lldb_private7Process24EnableSoftwareBreakpointEPNS_14BreakpointSiteE'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='1800' u='c' c='_ZN12lldb_private7Process25DisableSoftwareBreakpointEPNS_14BreakpointSiteE'/>
<use f='llvm/lldb/source/Target/Process.cpp' l='2096' u='c' c='_ZN12lldb_private7Process18WriteMemoryPrivateEmPKvmRNS_6StatusE'/>
