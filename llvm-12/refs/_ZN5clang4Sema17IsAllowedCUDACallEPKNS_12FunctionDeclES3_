<def f='llvm/clang/include/clang/Sema/Sema.h' l='12034' ll='12037' type='bool clang::Sema::IsAllowedCUDACall(const clang::FunctionDecl * Caller, const clang::FunctionDecl * Callee)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='12029'>/// Determines whether Caller may invoke Callee, based on their CUDA
  /// host/device attributes.  Returns false if the call is not allowed.
  ///
  /// Note: Will return true for CFP_WrongSide calls.  These may appear in
  /// semantically correct CUDA programs, but only if they&apos;re never codegen&apos;ed.</doc>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6427' u='c' c='_ZN5clang4Sema20AddOverloadCandidateEPNS_12FunctionDeclENS_14DeclAccessPairEN4llvm8ArrayRefIPNS_4ExprEEERNS_20OverloadCandidateSetEbbbbNS_8CallExpr11A15764687'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6938' u='c' c='_ZN5clang4Sema18AddMethodCandidateEPNS_13CXXMethodDeclENS_14DeclAccessPairEPNS_13CXXRecordDeclENS_8QualTypeENS_4Expr14ClassificationEN4llvm8ArrayRefIP1005297'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='12062' u='c' c='_ZN12_GLOBAL__N_125AddressOfFunctionResolver30AddMatchingNonTemplateFunctionEPN5clang9NamedDeclERKNS1_14DeclAccessPairE'/>
