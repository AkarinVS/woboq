<dec f='llvm/lldb/include/lldb/Target/TargetList.h' l='81' type='lldb_private::Status lldb_private::TargetList::CreateTarget(lldb_private::Debugger &amp; debugger, llvm::StringRef user_exe_path, llvm::StringRef triple_str, lldb_private::LoadDependentFiles get_dependent_modules, const lldb_private::OptionGroupPlatform * platform_options, lldb::TargetSP &amp; target_sp)'/>
<doc f='llvm/lldb/include/lldb/Target/TargetList.h' l='45'>/// Create a new Target.
  ///
  /// Clients must use this function to create a Target. This allows
  /// a global list of targets to be maintained in a central location
  /// so signal handlers and other global functions can use it to
  /// locate an appropriate target to deliver asynchronous information
  /// to.
  ///
  /// \param[in] debugger
  ///     The debugger to associate this target with
  ///
  /// \param[in] user_exe_path
  ///     The main executable file for a debug target. This value
  ///     can be empty and the file can be set later using:
  ///     Target::SetExecutableModule (ModuleSP&amp;)
  ///
  /// \param[in] triple_str
  ///     A target triple string to be used for the target. This can
  ///     be nullptr if the triple is not known or when attaching to a
  ///     process.
  ///
  /// \param[in] get_dependent_modules
  ///     Track down the dependent modules for an executable and
  ///     load those into the module list.
  ///
  /// \param[in] platform_options
  ///     A pointer to the platform options to use when creating this
  ///     target. If this value is nullptr, then the currently selected
  ///     platform will be used.
  ///
  /// \param[out] target_sp
  ///     A shared pointer to a target that will be filled in if
  ///     this call is successful.
  ///
  /// \return
  ///     An error object that indicates success or failure</doc>
<use f='llvm/lldb/source/API/SBDebugger.cpp' l='745' u='c' c='_ZN4lldb10SBDebugger12CreateTargetEPKcS2_S2_bRNS_7SBErrorE'/>
<use f='llvm/lldb/source/API/SBDebugger.cpp' l='779' u='c' c='_ZN4lldb10SBDebugger35CreateTargetWithFileAndTargetTripleEPKcS2_'/>
<use f='llvm/lldb/source/API/SBDebugger.cpp' l='811' u='c' c='_ZN4lldb10SBDebugger27CreateTargetWithFileAndArchEPKcS2_'/>
<use f='llvm/lldb/source/API/SBDebugger.cpp' l='848' u='c' c='_ZN4lldb10SBDebugger12CreateTargetEPKc'/>
<use f='llvm/lldb/source/Commands/CommandObjectProcess.cpp' l='359' u='c' c='_ZN26CommandObjectProcessAttach9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Commands/CommandObjectTarget.cpp' l='316' u='c' c='_ZN25CommandObjectTargetCreate9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Plugins/Platform/POSIX/PlatformPOSIX.cpp' l='369' u='c' c='_ZN13PlatformPOSIX6AttachERN12lldb_private17ProcessAttachInfoERNS0_8DebuggerEPNS0_6TargetERNS0_6StatusE'/>
<use f='llvm/lldb/source/Plugins/Platform/POSIX/PlatformPOSIX.cpp' l='449' u='c' c='_ZN13PlatformPOSIX12DebugProcessERN12lldb_private17ProcessLaunchInfoERNS0_8DebuggerEPNS0_6TargetERNS0_6StatusE'/>
<use f='llvm/lldb/source/Plugins/Platform/Windows/PlatformWindows.cpp' l='267' u='c' c='_ZN12lldb_private15PlatformWindows6AttachERNS_17ProcessAttachInfoERNS_8DebuggerEPNS_6TargetERNS_6StatusE'/>
<use f='llvm/lldb/source/Plugins/Platform/gdb-server/PlatformRemoteGDBServer.cpp' l='491' u='c' c='_ZN12lldb_private19platform_gdb_server23PlatformRemoteGDBServer12DebugProcessERNS_17ProcessLaunchInfoERNS_8DebuggerEPNS_6TargetERNS_6StatusE'/>
<use f='llvm/lldb/source/Plugins/Platform/gdb-server/PlatformRemoteGDBServer.cpp' l='575' u='c' c='_ZN12lldb_private19platform_gdb_server23PlatformRemoteGDBServer6AttachERNS_17ProcessAttachInfoERNS_8DebuggerEPNS_6TargetERNS_6StatusE'/>
<use f='llvm/lldb/source/Target/Platform.cpp' l='1826' u='c' c='_ZN12lldb_private8Platform16DoConnectProcessEN4llvm9StringRefES2_RNS_8DebuggerEPNS_6StreamEPNS_6TargetERNS_6StatusE'/>
<def f='llvm/lldb/source/Target/TargetList.cpp' l='45' ll='58' type='lldb_private::Status lldb_private::TargetList::CreateTarget(lldb_private::Debugger &amp; debugger, llvm::StringRef user_exe_path, llvm::StringRef triple_str, lldb_private::LoadDependentFiles load_dependent_files, const lldb_private::OptionGroupPlatform * platform_options, lldb::TargetSP &amp; target_sp)'/>
<use f='llvm/lldb/source/Target/TraceSessionFileParser.cpp' l='115' u='c' c='_ZN12lldb_private22TraceSessionFileParser12ParseProcessERKNS0_11JSONProcessE'/>
<use f='llvm/lldb/tools/lldb-test/lldb-test.cpp' l='290' u='c' c='_ZN4opts12createTargetERN12lldb_private8DebuggerERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
