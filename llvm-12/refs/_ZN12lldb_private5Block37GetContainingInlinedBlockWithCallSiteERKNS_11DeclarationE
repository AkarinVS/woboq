<dec f='llvm/lldb/include/lldb/Symbol/Block.h' l='188' type='lldb_private::Block * lldb_private::Block::GetContainingInlinedBlockWithCallSite(const lldb_private::Declaration &amp; find_call_site)'/>
<doc f='llvm/lldb/include/lldb/Symbol/Block.h' l='174'>//------------------------------------------------------------------
  /// Get the inlined block at the given call site that contains this block.
  ///
  /// @param[in] find_call_site
  ///     a declaration with the file and line of the call site to find.
  ///
  /// @return
  ///     If this block contains inlined function info and is at the call
  ///     site given by the file and line at the given \b declaration, then
  ///     it will return this block, otherwise the parent blocks will be
  ///     searched to see if any is at the call site. nullptr will be returned
  ///     if no block is found at the call site.
  //------------------------------------------------------------------</doc>
<def f='llvm/lldb/source/Symbol/Block.cpp' l='214' ll='227' type='lldb_private::Block * lldb_private::Block::GetContainingInlinedBlockWithCallSite(const lldb_private::Declaration &amp; find_call_site)'/>
<use f='llvm/lldb/source/Symbol/LineEntry.cpp' l='236' u='c' c='_ZNK12lldb_private9LineEntry33GetSameLineContiguousAddressRangeEb'/>
