<dec f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='446' type='LazyCallGraph::SCC &amp; llvm::updateCGAndAnalysisManagerForCGSCCPass(llvm::LazyCallGraph &amp; G, LazyCallGraph::SCC &amp; C, LazyCallGraph::Node &amp; N, llvm::CGSCCAnalysisManager &amp; AM, llvm::CGSCCUpdateResult &amp; UR, llvm::FunctionAnalysisManager &amp; FAM)'/>
<doc f='llvm/llvm/include/llvm/Analysis/CGSCCPassManager.h' l='440'>/// Helper to update the call graph after running a CGSCC pass.
///
/// CGSCC passes can only mutate the call graph in specific ways. This
/// routine provides a helper that updates the call graph in those ways
/// including returning whether any changes were made and populating a CG
/// update result struct for the overall CGSCC walk.</doc>
<def f='llvm/llvm/lib/Analysis/CGSCCPassManager.cpp' l='1228' ll='1234' type='LazyCallGraph::SCC &amp; llvm::updateCGAndAnalysisManagerForCGSCCPass(llvm::LazyCallGraph &amp; G, LazyCallGraph::SCC &amp; InitialC, LazyCallGraph::Node &amp; N, llvm::CGSCCAnalysisManager &amp; AM, llvm::CGSCCUpdateResult &amp; UR, llvm::FunctionAnalysisManager &amp; FAM)'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/CoroSplit.cpp' l='1806' u='c' c='_ZL34updateCallGraphAfterCoroutineSplitRN4llvm13LazyCallGraph4NodeERKNS_4coro5ShapeERKNS_15SmallVectorImplIPNS_8FunctionEEERNS0_3SCCERS0_RNS_15Analysi11823215'/>
<use f='llvm/llvm/lib/Transforms/IPO/Inliner.cpp' l='917' u='c' c='_ZN4llvm11InlinerPass3runERNS_13LazyCallGraph3SCCERNS_15AnalysisManagerIS2_JRS1_EEES5_RNS_17CGSCCUpdateResultE'/>
<use f='llvm/llvm/lib/Transforms/Utils/CallGraphUpdater.cpp' l='95' u='c' c='_ZN4llvm16CallGraphUpdater17reanalyzeFunctionERNS_8FunctionE'/>
