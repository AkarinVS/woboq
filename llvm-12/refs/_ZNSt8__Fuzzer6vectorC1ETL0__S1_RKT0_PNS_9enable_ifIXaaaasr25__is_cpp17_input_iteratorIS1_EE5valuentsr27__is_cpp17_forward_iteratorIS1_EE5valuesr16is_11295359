<dec f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_x86_64/include/c++/v1/vector' l='530' type='void std::__Fuzzer::vector::vector&lt;_Tp, _Alloc&gt;(_InputIterator __first, _InputIterator __last, const std::__Fuzzer::vector::allocator_type &amp; __a, typename enable_if&lt;__is_cpp17_input_iterator&lt;_InputIterator&gt;::value &amp;&amp; !__is_cpp17_forward_iterator&lt;_InputIterator&gt;::value &amp;&amp; is_constructible&lt;value_type, typename iterator_traits&lt;_InputIterator&gt;::reference&gt;::value&gt;::type *  = 0)'/>
<def f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_x86_64/include/c++/v1/vector' l='1191' ll='1206' type='void std::__Fuzzer::vector::vector&lt;_Tp, _Alloc&gt;(_InputIterator __first, _InputIterator __last, const std::__Fuzzer::vector::allocator_type &amp; __a, typename enable_if&lt;__is_cpp17_input_iterator&lt;_InputIterator&gt;::value &amp;&amp; !__is_cpp17_forward_iterator&lt;_InputIterator&gt;::value &amp;&amp; is_constructible&lt;value_type, typename iterator_traits&lt;_InputIterator&gt;::reference&gt;::value&gt;::type *  = 0)'/>
<dec f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_i386/include/c++/v1/vector' l='530' type='void std::__Fuzzer::vector::vector&lt;_Tp, _Alloc&gt;(_InputIterator __first, _InputIterator __last, const std::__Fuzzer::vector::allocator_type &amp; __a, typename enable_if&lt;__is_cpp17_input_iterator&lt;_InputIterator&gt;::value &amp;&amp; !__is_cpp17_forward_iterator&lt;_InputIterator&gt;::value &amp;&amp; is_constructible&lt;value_type, typename iterator_traits&lt;_InputIterator&gt;::reference&gt;::value&gt;::type *  = 0)'/>
<def f='llvm/build/projects/compiler-rt/lib/fuzzer/libcxx_fuzzer_i386/include/c++/v1/vector' l='1191' ll='1206' type='void std::__Fuzzer::vector::vector&lt;_Tp, _Alloc&gt;(_InputIterator __first, _InputIterator __last, const std::__Fuzzer::vector::allocator_type &amp; __a, typename enable_if&lt;__is_cpp17_input_iterator&lt;_InputIterator&gt;::value &amp;&amp; !__is_cpp17_forward_iterator&lt;_InputIterator&gt;::value &amp;&amp; is_constructible&lt;value_type, typename iterator_traits&lt;_InputIterator&gt;::reference&gt;::value&gt;::type *  = 0)'/>
