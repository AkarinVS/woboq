<dec f='llvm/llvm/include/llvm/CodeGen/Passes.h' l='72' type='llvm::MachineFunctionPass * llvm::createResetMachineFunctionPass(bool EmitFallbackDiag, bool AbortOnFailedISel)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/Passes.h' l='67'>/// This pass resets a MachineFunction when it has the FailedISel property
  /// as if it was just created.
  /// If EmitFallbackDiag is true, the pass will emit a
  /// DiagnosticInfoISelFallback for every MachineFunction it resets.
  /// If AbortOnFailedISel is true, abort compilation instead of resetting.</doc>
<def f='llvm/llvm/lib/CodeGen/ResetMachineFunctionPass.cpp' l='86' ll='90' type='llvm::MachineFunctionPass * llvm::createResetMachineFunctionPass(bool EmitFallbackDiag = false, bool AbortOnFailedISel = false)'/>
<use f='llvm/llvm/lib/CodeGen/TargetPassConfig.cpp' l='1019' u='c' c='_ZN4llvm16TargetPassConfig17addCoreISelPassesEv'/>
