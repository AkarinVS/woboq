<dec f='llvm/lldb/include/lldb/API/SBDebugger.h' l='329' type='void lldb::SBDebugger::RunCommandInterpreter(bool auto_handle_events, bool spawn_thread, lldb::SBCommandInterpreterRunOptions &amp; options, int &amp; num_errors, bool &amp; quit_requested, bool &amp; stopped_for_crash)'/>
<use f='llvm/build/tools/lldb/bindings/python/LLDBWrapPython.cpp' l='23693' u='c' c='_ZL38_wrap_SBDebugger_RunCommandInterpreterP7_objectS0_'/>
<doc f='llvm/lldb/include/lldb/API/SBDebugger.h' l='306'>/// Run the command interpreter.
  ///
  /// \param[in] auto_handle_events
  ///     If true, automatically handle resulting events. This takes precedence
  ///     and overrides the corresponding option in
  ///     SBCommandInterpreterRunOptions.
  ///
  /// \param[in] spawn_thread
  ///     If true, start a new thread for IO handling. This takes precedence
  ///     and overrides the corresponding option in
  ///     SBCommandInterpreterRunOptions.
  ///
  /// \param[in] options
  ///     Parameter collection of type SBCommandInterpreterRunOptions.
  ///
  /// \param[out] num_errors
  ///     The number of errors.
  ///
  /// \param[out] quit_requested
  ///     Whether a quit was requested.
  ///
  /// \param[out] stopped_for_crash
  ///     Whether the interpreter stopped for a crash.</doc>
<def f='llvm/lldb/source/API/SBDebugger.cpp' l='1182' ll='1207' type='void lldb::SBDebugger::RunCommandInterpreter(bool auto_handle_events, bool spawn_thread, lldb::SBCommandInterpreterRunOptions &amp; options, int &amp; num_errors, bool &amp; quit_requested, bool &amp; stopped_for_crash)'/>
<use f='llvm/lldb/source/API/SBDebugger.cpp' l='1189' u='a' c='_ZN4lldb10SBDebugger21RunCommandInterpreterEbbRNS_30SBCommandInterpreterRunOptionsERiRbS4_'/>
<use f='llvm/lldb/source/API/SBDebugger.cpp' l='1189' u='a' c='_ZN4lldb10SBDebugger21RunCommandInterpreterEbbRNS_30SBCommandInterpreterRunOptionsERiRbS4_'/>
<use f='llvm/lldb/source/API/SBDebugger.cpp' l='1795' u='a' c='_ZN12lldb_private5repro15RegisterMethodsERNS0_8RegistryE'/>
