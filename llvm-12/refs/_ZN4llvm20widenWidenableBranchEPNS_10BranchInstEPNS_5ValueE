<dec f='llvm/llvm/include/llvm/Transforms/Utils/GuardUtils.h' l='35' type='void llvm::widenWidenableBranch(llvm::BranchInst * WidenableBR, llvm::Value * NewCond)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/GuardUtils.h' l='32'>/// Given a branch we know is widenable (defined per Analysis/GuardUtils.h),
/// widen it such that condition &apos;NewCond&apos; is also known to hold on the taken
/// path.  Branch remains widenable after transform.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='1171' u='c' c='_ZN12_GLOBAL__N_115LoopPredication18predicateLoopExitsEPN4llvm4LoopERNS1_12SCEVExpanderE'/>
<def f='llvm/llvm/lib/Transforms/Utils/GuardUtils.cpp' l='82' ll='106' type='void llvm::widenWidenableBranch(llvm::BranchInst * WidenableBR, llvm::Value * NewCond)'/>
