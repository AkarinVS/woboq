<dec f='llvm/llvm/include/llvm/Analysis/RegionInfo.h' l='354' type='void llvm::RegionBase::replaceExitRecursive(llvm::RegionBase::BlockT * NewExit)'/>
<doc f='llvm/llvm/include/llvm/Analysis/RegionInfo.h' l='347'>/// Recursively replace the exit basic block of the region.
  ///
  /// This function replaces the exit basic block with a new basic block. It
  /// also updates all child regions that have the same exit basic block as
  /// this region.
  ///
  /// @param NewExit The new exit basic block.</doc>
<def f='llvm/llvm/include/llvm/Analysis/RegionInfoImpl.h' l='85' ll='101' type='void llvm::RegionBase::replaceExitRecursive(llvm::RegionBase::BlockT * NewExit)'/>
<use f='llvm/polly/lib/CodeGen/Utils.cpp' l='124' u='c' c='_ZN5polly24executeScopConditionallyERNS_4ScopEPN4llvm5ValueERNS2_13DominatorTreeERNS2_10RegionInfoERNS2_8LoopInfoE'/>
<use f='llvm/polly/lib/Support/ScopHelper.cpp' l='142' u='c' c='_ZL18simplifyRegionExitPN4llvm6RegionEPNS_13DominatorTreeEPNS_8LoopInfoEPNS_10RegionInfoE'/>
