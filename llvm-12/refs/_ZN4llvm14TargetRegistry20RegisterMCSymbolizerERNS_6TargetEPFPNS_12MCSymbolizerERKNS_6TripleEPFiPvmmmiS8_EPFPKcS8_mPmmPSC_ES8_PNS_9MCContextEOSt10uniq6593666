<def f='llvm/llvm/include/llvm/Support/TargetRegistry.h' l='905' ll='907' type='static void llvm::TargetRegistry::RegisterMCSymbolizer(llvm::Target &amp; T, Target::MCSymbolizerCtorTy Fn)'/>
<doc f='llvm/llvm/include/llvm/Support/TargetRegistry.h' l='896'>/// RegisterMCSymbolizer - Register an MCSymbolizer
  /// implementation for the given target.
  ///
  /// Clients are responsible for ensuring that registration doesn&apos;t occur
  /// while another thread is attempting to access the registry. Typically
  /// this is done by initializing all targets at program startup.
  ///
  /// @param T - The target being registered.
  /// @param Fn - A function to construct an MCSymbolizer for the target.</doc>
<use f='llvm/llvm/lib/Target/AArch64/Disassembler/AArch64Disassembler.cpp' l='300' u='c' c='LLVMInitializeAArch64Disassembler'/>
<use f='llvm/llvm/lib/Target/AArch64/Disassembler/AArch64Disassembler.cpp' l='302' u='c' c='LLVMInitializeAArch64Disassembler'/>
<use f='llvm/llvm/lib/Target/AArch64/Disassembler/AArch64Disassembler.cpp' l='306' u='c' c='LLVMInitializeAArch64Disassembler'/>
<use f='llvm/llvm/lib/Target/AArch64/Disassembler/AArch64Disassembler.cpp' l='311' u='c' c='LLVMInitializeAArch64Disassembler'/>
<use f='llvm/llvm/lib/Target/AArch64/Disassembler/AArch64Disassembler.cpp' l='315' u='c' c='LLVMInitializeAArch64Disassembler'/>
<use f='llvm/llvm/lib/Target/AMDGPU/Disassembler/AMDGPUDisassembler.cpp' l='1623' u='c' c='LLVMInitializeAMDGPUDisassembler'/>
