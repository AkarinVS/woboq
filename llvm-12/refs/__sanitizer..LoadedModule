<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='759' ll='814'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='824' c='__sanitizer::ListOfModules::begin'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='825' c='__sanitizer::ListOfModules::begin'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='826' c='__sanitizer::ListOfModules::end'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='827' c='__sanitizer::ListOfModules::end'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='829' c='__sanitizer::ListOfModules::operator[]'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='844'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_procmaps.h' l='50' c='__sanitizer::MemoryMappedSegment::AddAddressRanges'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_procmaps.h' l='81' c='__sanitizer::MemoryMappingLayout::DumpListOfModules'/>
<size>72</size>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='757'>// Represents a binary loaded into virtual memory (e.g. this can be an
// executable or a shared object).</doc>
<fun r='__sanitizer::LoadedModule::LoadedModule'/>
<fun r='__sanitizer::LoadedModule::set'/>
<fun r='__sanitizer::LoadedModule::set'/>
<fun r='__sanitizer::LoadedModule::clear'/>
<fun r='__sanitizer::LoadedModule::addAddressRange'/>
<fun r='__sanitizer::LoadedModule::containsAddress'/>
<fun r='__sanitizer::LoadedModule::full_name'/>
<fun r='__sanitizer::LoadedModule::base_address'/>
<fun r='__sanitizer::LoadedModule::max_executable_address'/>
<fun r='__sanitizer::LoadedModule::arch'/>
<fun r='__sanitizer::LoadedModule::uuid'/>
<fun r='__sanitizer::LoadedModule::instrumented'/>
<fun r='__sanitizer::LoadedModule::ranges'/>
<mbr r='__sanitizer::LoadedModule::full_name_' o='0' t='char *'/>
<mbr r='__sanitizer::LoadedModule::base_address_' o='64' t='__sanitizer::uptr'/>
<mbr r='__sanitizer::LoadedModule::max_executable_address_' o='128' t='__sanitizer::uptr'/>
<mbr r='__sanitizer::LoadedModule::arch_' o='192' t='__sanitizer::ModuleArch'/>
<mbr r='__sanitizer::LoadedModule::uuid_' o='224' t='__sanitizer::u8 [16]'/>
<mbr r='__sanitizer::LoadedModule::instrumented_' o='352' t='bool'/>
<mbr r='__sanitizer::LoadedModule::ranges_' o='384' t='IntrusiveList&lt;__sanitizer::LoadedModule::AddressRange&gt;'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer.h' l='149' c='__sanitizer::Symbolizer::FindModuleForAddress'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common.h' l='249' c='__lsan::GetLinker'/>
<size>72</size>
<use f='llvm/compiler-rt/lib/lsan/lsan_common_linux.cpp' l='31'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common_linux.cpp' l='32'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common_linux.cpp' l='34' c='__lsan::IsLinker'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common_linux.cpp' l='56' c='__lsan::InitializePlatformSpecificModules'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common_linux.cpp' l='60' c='__lsan::InitializePlatformSpecificModules'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common_linux.cpp' l='62' c='__lsan::InitializePlatformSpecificModules'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_common_linux.cpp' l='107' c='__lsan::GetLinker'/>
<size>72</size>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux_libcdep.cpp' l='573'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux_libcdep.cpp' l='589' c='__sanitizer::dl_iterate_phdr_cb'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux_libcdep.cpp' l='622' c='__sanitizer::procmapsInit'/>
<size>72</size>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_procmaps_common.cpp' l='66' c='__sanitizer::MemoryMappedSegment::AddAddressRanges'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_procmaps_common.cpp' l='121' c='__sanitizer::MemoryMappingLayout::DumpListOfModules'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_procmaps_common.cpp' l='141' c='__sanitizer::MemoryMappingLayout::DumpListOfModules'/>
<size>48</size>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='178' c='__sanitizer::Symbolizer::FindModuleNameAndOffsetForAddress'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='194' c='__sanitizer::SearchForModule'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='204' c='__sanitizer::Symbolizer::FindModuleForAddress'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='210' c='__sanitizer::Symbolizer::FindModuleForAddress'/>
<size>72</size>
<use f='llvm/compiler-rt/lib/stats/stats.cpp' l='65' c='_ZN12_GLOBAL__N_117WriteModuleReportEPPN11__sanitizer10StatModuleE'/>
<size>48</size>
