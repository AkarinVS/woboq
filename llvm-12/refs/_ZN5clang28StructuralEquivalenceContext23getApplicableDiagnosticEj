<dec f='llvm/clang/include/clang/AST/ASTStructuralEquivalence.h' l='122' type='unsigned int clang::StructuralEquivalenceContext::getApplicableDiagnostic(unsigned int ErrorDiagnostic)'/>
<doc f='llvm/clang/include/clang/AST/ASTStructuralEquivalence.h' l='120'>// If ErrorOnTagTypeMismatch is set, return the the error, otherwise get the
  // relevant warning for the input error diagnostic.</doc>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1252' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_9FieldDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1267' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_9FieldDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1365' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_10RecordDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1451' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_10RecordDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1471' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_10RecordDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1486' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_10RecordDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1507' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_10RecordDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1519' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_10RecordDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1532' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_10RecordDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1543' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_10RecordDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1564' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_10RecordDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1580' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_10RecordDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1622' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_8EnumDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1638' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_8EnumDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1652' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_8EnumDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1671' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_21TemplateParameterListES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1684' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_21TemplateParameterListES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1706' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_20TemplateTypeParmDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1724' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_23NonTypeTemplateParmDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1737' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_23NonTypeTemplateParmDeclES3_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1755' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextEPNS_24TemplateTemplateParmDeclES3_'/>
<def f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='1947' ll='1991' type='unsigned int clang::StructuralEquivalenceContext::getApplicableDiagnostic(unsigned int ErrorDiagnostic)'/>
