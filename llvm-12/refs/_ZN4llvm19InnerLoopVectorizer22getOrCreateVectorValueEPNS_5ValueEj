<dec f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='553' type='llvm::Value * llvm::InnerLoopVectorizer::getOrCreateVectorValue(llvm::Value * V, unsigned int Part)'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2367' ll='2443' type='llvm::Value * llvm::InnerLoopVectorizer::getOrCreateVectorValue(llvm::Value * V, unsigned int Part)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2467' u='c' c='_ZN4llvm19InnerLoopVectorizer22getOrCreateScalarValueEPNS_5ValueERKNS_11VPIterationE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='3800' u='c' c='_ZN4llvm19InnerLoopVectorizer26truncateToMinimalBitwidthsEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='3911' u='c' c='_ZN4llvm19InnerLoopVectorizer26truncateToMinimalBitwidthsEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4071' u='c' c='_ZN4llvm19InnerLoopVectorizer23fixFirstOrderRecurrenceEPNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4109' u='c' c='_ZN4llvm19InnerLoopVectorizer23fixFirstOrderRecurrenceEPNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4148' u='c' c='_ZN4llvm19InnerLoopVectorizer23fixFirstOrderRecurrenceEPNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4189' u='c' c='_ZN4llvm19InnerLoopVectorizer12fixReductionEPNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4202' u='c' c='_ZN4llvm19InnerLoopVectorizer12fixReductionEPNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4203' u='c' c='_ZN4llvm19InnerLoopVectorizer12fixReductionEPNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4245' u='c' c='_ZN4llvm19InnerLoopVectorizer12fixReductionEPNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4368' u='c' c='_ZN4llvm19InnerLoopVectorizer23clearReductionWrapFlagsERNS_20RecurrenceDescriptorE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4501' u='c' c='_ZN4llvm19InnerLoopVectorizer19fixNonInductionPHIsEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8932' u='c' c='_ZN4llvm24LoopVectorizationPlanner13VPCallbackILV23getOrCreateVectorValuesEPNS_5ValueEj'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='532'>/// getOrCreateVectorValue and getOrCreateScalarValue coordinate to generate a
  /// vector or scalar value on-demand if one is not yet available. When
  /// vectorizing a loop, we visit the definition of an instruction before its
  /// uses. When visiting the definition, we either vectorize or scalarize the
  /// instruction, creating an entry for it in the corresponding map. (In some
  /// cases, such as induction variables, we will create both vector and scalar
  /// entries.) Then, as we encounter uses of the definition, we derive values
  /// for each scalar or vector use unless such a value is already available.
  /// For example, if we scalarize a definition and one of its uses is vector,
  /// we build the required vector on-demand with an insertelement sequence
  /// when visiting the use. Otherwise, if the use is scalar, we can use the
  /// existing scalar definition.
  ///
  /// Return a value in the new loop corresponding to \p V from the original
  /// loop at unroll index \p Part. If the value has already been vectorized,
  /// the corresponding vector entry in VectorLoopValueMap is returned. If,
  /// however, the value has a scalar entry in VectorLoopValueMap, we construct
  /// a new vector value on-demand by inserting the scalar values into a vector
  /// with an insertelement sequence. If the value has been neither vectorized
  /// nor scalarized, it must be loop invariant, so we simply broadcast the
  /// value into a vector.</doc>
