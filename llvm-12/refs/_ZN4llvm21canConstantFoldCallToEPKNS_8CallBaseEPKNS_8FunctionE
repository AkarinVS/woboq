<dec f='llvm/llvm/include/llvm/Analysis/ConstantFolding.h' l='150' type='bool llvm::canConstantFoldCallTo(const llvm::CallBase * Call, const llvm::Function * F)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ConstantFolding.h' l='148'>/// canConstantFoldCallTo - Return true if its even possible to fold a call to
/// the specified function.</doc>
<use f='llvm/llvm/lib/Analysis/ConstantFolding.cpp' l='1099' u='c' c='_ZN12_GLOBAL__N_128ConstantFoldInstOperandsImplEPKN4llvm5ValueEjNS0_8ArrayRefIPNS0_8ConstantEEERKNS0_10DataLayoutEPKNS0_17TargetLibraryInfoE'/>
<def f='llvm/llvm/lib/Analysis/ConstantFolding.cpp' l='1444' ll='1663' type='bool llvm::canConstantFoldCallTo(const llvm::CallBase * Call, const llvm::Function * F)'/>
<doc f='llvm/llvm/lib/Analysis/ConstantFolding.cpp' l='1440'>//===----------------------------------------------------------------------===//
//  Constant Folding for Calls
//</doc>
<use f='llvm/llvm/lib/Analysis/InlineCost.cpp' l='1794' u='c' c='_ZN12_GLOBAL__N_112CallAnalyzer16simplifyCallSiteEPN4llvm8FunctionERNS1_8CallBaseE'/>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='5736' u='c' c='_ZL19tryConstantFoldCallPN4llvm8CallBaseERKNS_13SimplifyQueryE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='8030' u='c' c='_ZL15CanConstantFoldPKN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SCCP.cpp' l='1214' u='c' c='_ZN12_GLOBAL__N_110SCCPSolver21handleCallOverdefinedERN4llvm8CallBaseE'/>
