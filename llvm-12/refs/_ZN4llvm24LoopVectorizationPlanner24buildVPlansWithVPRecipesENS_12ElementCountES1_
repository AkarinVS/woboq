<dec f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationPlanner.h' l='319' type='void llvm::LoopVectorizationPlanner::buildVPlansWithVPRecipes(llvm::ElementCount MinVF, llvm::ElementCount MaxVF)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7661' u='c' c='_ZN4llvm24LoopVectorizationPlanner4planENS_12ElementCountEj'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7682' u='c' c='_ZN4llvm24LoopVectorizationPlanner4planENS_12ElementCountEj'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8591' ll='8623' type='void llvm::LoopVectorizationPlanner::buildVPlansWithVPRecipes(llvm::ElementCount MinVF, llvm::ElementCount MaxVF)'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationPlanner.h' l='316'>/// Build VPlans for power-of-2 VF&apos;s between \p MinVF and \p MaxVF inclusive,
  /// according to the information gathered by Legal when it checked if it is
  /// legal to vectorize the loop. This method creates VPlans using VPRecipes.</doc>
