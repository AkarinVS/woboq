<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='693' type='bool llvm::TargetLoweringBase::hasBitTest(llvm::SDValue X, llvm::SDValue Y) const'/>
<use f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='738' u='c' c='_ZNK4llvm18TargetLoweringBase56shouldProduceAndByConstByHoistingConstFromShiftsLHSOfAndENS_7SDValueEPNS_14ConstantSDNodeES3_S1_jjRNS_12SelectionDAGE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='689'>/// Return true if the target has a bit-test instruction:
  ///   (X &amp; (1 &lt;&lt; Y)) ==/!= 0
  /// This knowledge can be used to prevent breaking the pattern,
  /// or creating it if it could be recognized.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='5750' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner8visitANDEPN4llvm6SDNodeE'/>
<ovr f='llvm/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp' l='2043' c='_ZNK4llvm21HexagonTargetLowering10hasBitTestENS_7SDValueES1_'/>
<ovr f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='5415' c='_ZNK4llvm17X86TargetLowering10hasBitTestENS_7SDValueES1_'/>
