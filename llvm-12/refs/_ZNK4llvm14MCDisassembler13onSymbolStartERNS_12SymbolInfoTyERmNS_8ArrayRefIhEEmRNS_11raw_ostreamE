<dec f='llvm/llvm/include/llvm/MC/MCDisassembler/MCDisassembler.h' l='154' type='Optional&lt;llvm::MCDisassembler::DecodeStatus&gt; llvm::MCDisassembler::onSymbolStart(llvm::SymbolInfoTy &amp; Symbol, uint64_t &amp; Size, ArrayRef&lt;uint8_t&gt; Bytes, uint64_t Address, llvm::raw_ostream &amp; CStream) const'/>
<doc f='llvm/llvm/include/llvm/MC/MCDisassembler/MCDisassembler.h' l='130'>/// Used to perform separate target specific disassembly for a particular
  /// symbol. May parse any prelude that precedes instructions after the
  /// start of a symbol, or the entire symbol.
  /// This is used for example by WebAssembly to decode preludes.
  ///
  /// Base implementation returns None. So all targets by default ignore to
  /// treat symbols separately.
  ///
  /// \param Symbol   - The symbol.
  /// \param Size     - The number of bytes consumed.
  /// \param Address  - The address, in the memory space of region, of the first
  ///                   byte of the symbol.
  /// \param Bytes    - A reference to the actual bytes at the symbol location.
  /// \param CStream  - The stream to print comments and annotations on.
  /// \return         - MCDisassembler::Success if bytes are decoded
  ///                   successfully. Size must hold the number of bytes that
  ///                   were decoded.
  ///                 - MCDisassembler::Fail if the bytes are invalid. Size
  ///                   must hold the number of bytes that were decoded before
  ///                   failing. The target must print nothing. This can be
  ///                   done by buffering the output if needed.
  ///                 - None if the target doesn&apos;t want to handle the symbol
  ///                   separately. Value of Size is ignored in this case.</doc>
<def f='llvm/llvm/lib/MC/MCDisassembler/MCDisassembler.cpp' l='19' ll='24' type='Optional&lt;MCDisassembler::DecodeStatus&gt; llvm::MCDisassembler::onSymbolStart(llvm::SymbolInfoTy &amp; Symbol, uint64_t &amp; Size, ArrayRef&lt;uint8_t&gt; Bytes, uint64_t Address, llvm::raw_ostream &amp; CStream) const'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/Disassembler/AMDGPUDisassembler.cpp' l='1540' c='_ZNK4llvm18AMDGPUDisassembler13onSymbolStartERNS_12SymbolInfoTyERmNS_8ArrayRefIhEEmRNS_11raw_ostreamE'/>
<ovr f='llvm/llvm/lib/Target/WebAssembly/Disassembler/WebAssemblyDisassembler.cpp' l='124' c='_ZNK12_GLOBAL__N_123WebAssemblyDisassembler13onSymbolStartERN4llvm12SymbolInfoTyERmNS1_8ArrayRefIhEEmRNS1_11raw_ostreamE'/>
<use f='llvm/llvm/tools/llvm-objdump/llvm-objdump.cpp' l='1889' u='c' c='_ZL17disassembleObjectPKN4llvm6TargetEPKNS_6object10ObjectFileERNS_9MCContextEPNS_14MCDisassemblerESA_PKNS_15MCInstrAnalysisEPNS_13MCInstPrinterEPKNS_16388604'/>
