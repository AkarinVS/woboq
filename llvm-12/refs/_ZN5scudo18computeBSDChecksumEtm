<def f='llvm/compiler-rt/lib/scudo/standalone/checksum.h' l='40' ll='47' type='scudo::u16 scudo::computeBSDChecksum(scudo::u16 Sum, scudo::uptr Data)'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/chunk.h' l='40' u='c' c='_ZN5scudo15computeChecksumEjmPmm'/>
<use f='llvm/compiler-rt/lib/scudo/standalone/chunk.h' l='42' u='c' c='_ZN5scudo15computeChecksumEjmPmm'/>
<doc f='llvm/compiler-rt/lib/scudo/standalone/checksum.h' l='36'>// BSD checksum, unlike a software CRC32, doesn&apos;t use any array lookup. We save
// significantly on memory accesses, as well as 1K of CRC32 table, on platforms
// that do no support hardware CRC32. The checksum itself is 16-bit, which is at
// odds with CRC32, but enough for our needs.</doc>
