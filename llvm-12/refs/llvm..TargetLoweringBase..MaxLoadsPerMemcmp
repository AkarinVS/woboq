<use f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1587' u='r' c='_ZNK4llvm18TargetLoweringBase22getMaxExpandSizeMemcmpEb'/>
<dec f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3089' type='unsigned int'/>
<offset>1222400</offset>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3078'>/// \brief Specify maximum number of load instructions per memcmp call.
  ///
  /// When lowering \@llvm.memcmp this field specifies the maximum number of
  /// pairs of load operations that may be substituted for a call to memcmp.
  /// Targets must set this value based on the cost threshold for that target.
  /// Targets should assume that the memcmp will be done using as many of the
  /// largest load operations first, followed by smaller ones, if necessary, per
  /// alignment restrictions. For example, loading 7 bytes on a 32-bit machine
  /// with 32-bit alignment would result in one 4-byte load, a one 2-byte load
  /// and one 1-byte load. This only applies to copying a constant array of
  /// constant size.</doc>
<use f='llvm/llvm/lib/CodeGen/TargetLoweringBase.cpp' l='689' u='w' c='_ZN4llvm18TargetLoweringBaseC1ERKNS_13TargetMachineE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='905' u='w' c='_ZN4llvm21AArch64TargetLoweringC1ERKNS_13TargetMachineERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='1401' u='w' c='_ZN4llvm17PPCTargetLoweringC1ERKNS_16PPCTargetMachineERKNS_12PPCSubtargetE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='1403' u='w' c='_ZN4llvm17PPCTargetLoweringC1ERKNS_16PPCTargetMachineERKNS_12PPCSubtargetE'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='2063' u='w' c='_ZN4llvm17X86TargetLoweringC1ERKNS_16X86TargetMachineERKNS_12X86SubtargetE'/>
