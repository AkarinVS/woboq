<dec f='llvm/lldb/include/lldb/Breakpoint/BreakpointResolver.h' l='205' type='void lldb_private::BreakpointResolver::SetSCMatchesByLine(lldb_private::SearchFilter &amp; filter, lldb_private::SymbolContextList &amp; sc_list, bool skip_prologue, llvm::StringRef log_ident, uint32_t line = 0, uint32_t column = 0)'/>
<doc f='llvm/lldb/include/lldb/Breakpoint/BreakpointResolver.h' l='198'>/// Takes a symbol context list of matches which supposedly represent the
  /// same file and line number in a CU, and find the nearest actual line
  /// number that matches, and then filter down the matching addresses to
  /// unique entries, and skip the prologue if asked to do so, and then set
  /// breakpoint locations in this breakpoint for all the resultant addresses.
  /// When \p column is nonzero the \p line and \p column args are used to
  /// filter the results to find the first breakpoint &gt;= (line, column).</doc>
<def f='llvm/lldb/source/Breakpoint/BreakpointResolver.cpp' l='201' ll='289' type='void lldb_private::BreakpointResolver::SetSCMatchesByLine(lldb_private::SearchFilter &amp; filter, lldb_private::SymbolContextList &amp; sc_list, bool skip_prologue, llvm::StringRef log_ident, uint32_t line = 0, uint32_t column = 0)'/>
<use f='llvm/lldb/source/Breakpoint/BreakpointResolverFileLine.cpp' l='249' u='c' c='_ZN12lldb_private26BreakpointResolverFileLine14SearchCallbackERNS_12SearchFilterERNS_13SymbolContextEPNS_7AddressE'/>
<use f='llvm/lldb/source/Breakpoint/BreakpointResolverFileRegex.cpp' l='141' u='c' c='_ZN12lldb_private27BreakpointResolverFileRegex14SearchCallbackERNS_12SearchFilterERNS_13SymbolContextEPNS_7AddressE'/>
