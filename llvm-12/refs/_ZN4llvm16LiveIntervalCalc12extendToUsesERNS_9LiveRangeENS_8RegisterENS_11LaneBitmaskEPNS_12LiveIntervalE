<dec f='llvm/llvm/include/llvm/CodeGen/LiveIntervalCalc.h' l='39' type='void llvm::LiveIntervalCalc::extendToUses(llvm::LiveRange &amp; LR, llvm::Register Reg, llvm::LaneBitmask LaneMask, llvm::LiveInterval * LI = nullptr)'/>
<use f='llvm/llvm/include/llvm/CodeGen/LiveIntervalCalc.h' l='55' u='c' c='_ZN4llvm16LiveIntervalCalc12extendToUsesERNS_9LiveRangeENS_10MCRegisterE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/LiveIntervalCalc.h' l='29'>/// Extend the live range of @p LR to reach all uses of Reg.
  ///
  /// If @p LR is a main range, or if @p LI is null, then all uses must be
  /// jointly dominated by the definitions from @p LR. If @p LR is a subrange
  /// of the live interval @p LI, corresponding to lane mask @p LaneMask,
  /// all uses must be jointly dominated by the definitions from @p LR
  /// together with definitions of other lanes where @p LR becomes undefined
  /// (via &lt;def,read-undef&gt; operands).
  /// If @p LR is a main range, the @p LaneMask should be set to ~0, i.e.
  /// LaneBitmask::getAll().</doc>
<use f='llvm/llvm/lib/CodeGen/LiveIntervalCalc.cpp' l='106' u='c' c='_ZN4llvm16LiveIntervalCalc9calculateERNS_12LiveIntervalEb'/>
<use f='llvm/llvm/lib/CodeGen/LiveIntervalCalc.cpp' l='112' u='c' c='_ZN4llvm16LiveIntervalCalc9calculateERNS_12LiveIntervalEb'/>
<use f='llvm/llvm/lib/CodeGen/LiveIntervalCalc.cpp' l='130' u='c' c='_ZN4llvm16LiveIntervalCalc31constructMainRangeFromSubrangesERNS_12LiveIntervalE'/>
<def f='llvm/llvm/lib/CodeGen/LiveIntervalCalc.cpp' l='145' ll='205' type='void llvm::LiveIntervalCalc::extendToUses(llvm::LiveRange &amp; LR, llvm::Register Reg, llvm::LaneBitmask Mask, llvm::LiveInterval * LI = nullptr)'/>
