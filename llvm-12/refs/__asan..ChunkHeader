<def f='llvm/compiler-rt/lib/asan/asan_allocator.cpp' l='88' ll='127'/>
<ovr f='llvm/compiler-rt/lib/asan/asan_allocator.cpp' l='129' c='__asan::ChunkBase'/>
<use f='llvm/compiler-rt/lib/asan/asan_allocator.cpp' l='129'/>
<use f='llvm/compiler-rt/lib/asan/asan_allocator.cpp' l='142'/>
<use f='llvm/compiler-rt/lib/asan/asan_allocator.cpp' l='421' c='__asan::Allocator::ComputeRZLog'/>
<size>16</size>
<doc f='llvm/compiler-rt/lib/asan/asan_allocator.cpp' l='70'>// The memory chunk allocated from the underlying allocator looks like this:
// L L L L L L H H U U U U U U R R
//   L -- left redzone words (0 or more bytes)
//   H -- ChunkHeader (16 bytes), which is also a part of the left redzone.
//   U -- user memory.
//   R -- right redzone (0 or more bytes)
// ChunkBase consists of ChunkHeader and other bytes that overlap with user
// memory.

// If the left redzone is greater than the ChunkHeader size we store a magic
// value in the first uptr word of the memory block and store the address of
// ChunkBase in the next uptr.
// M B L L L L L L L L L  H H U U U U U U
//   |                    ^
//   ---------------------|
//   M -- magic value kAllocBegMagic
//   B -- address of ChunkHeader pointing to the first &apos;H&apos;</doc>
