<dec f='llvm/lldb/include/lldb/Symbol/ObjectFile.h' l='220' type='static bool lldb_private::ObjectFile::SplitArchivePathWithObject(llvm::StringRef path_with_object, lldb_private::FileSpec &amp; archive_file, lldb_private::ConstString &amp; archive_object, bool must_exist)'/>
<doc f='llvm/lldb/include/lldb/Symbol/ObjectFile.h' l='197'>/// Split a path into a file path with object name.
  ///
  /// For paths like &quot;/tmp/foo.a(bar.o)&quot; we often need to split a path up into
  /// the actual path name and into the object name so we can make a valid
  /// object file from it.
  ///
  /// \param[in] path_with_object
  ///     A path that might contain an archive path with a .o file
  ///     specified in parens in the basename of the path.
  ///
  /// \param[out] archive_file
  ///     If \b true is returned, \a file_spec will be filled in with
  ///     the path to the archive.
  ///
  /// \param[out] archive_object
  ///     If \b true is returned, \a object will be filled in with
  ///     the name of the object inside the archive.
  ///
  /// \return
  ///     \b true if the path matches the pattern of archive + object
  ///     and \a archive_file and \a archive_object are modified,
  ///     \b false otherwise and \a archive_file and \a archive_object
  ///     are guaranteed to be remain unchanged.</doc>
<use f='llvm/lldb/source/Plugins/SymbolFile/DWARF/SymbolFileDWARFDebugMap.cpp' l='439' u='c' c='_ZN23SymbolFileDWARFDebugMap23GetModuleByCompUnitInfoEPNS_15CompileUnitInfoE'/>
<use f='llvm/lldb/source/Symbol/ObjectFile.cpp' l='95' u='c' c='_ZN12lldb_private10ObjectFile10FindPluginERKSt10shared_ptrINS_6ModuleEEPKNS_8FileSpecEmmRS1_INS_10DataBufferEERm'/>
<def f='llvm/lldb/source/Symbol/ObjectFile.cpp' l='553' ll='569' type='static bool lldb_private::ObjectFile::SplitArchivePathWithObject(llvm::StringRef path_with_object, lldb_private::FileSpec &amp; archive_file, lldb_private::ConstString &amp; archive_object, bool must_exist)'/>
