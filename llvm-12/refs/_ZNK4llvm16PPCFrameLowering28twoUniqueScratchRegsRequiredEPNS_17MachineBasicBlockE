<dec f='llvm/llvm/lib/Target/PowerPC/PPCFrameLowering.h' l='66' type='bool llvm::PPCFrameLowering::twoUniqueScratchRegsRequired(llvm::MachineBasicBlock * MBB) const'/>
<def f='llvm/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp' l='531' ll='546' type='bool llvm::PPCFrameLowering::twoUniqueScratchRegsRequired(llvm::MachineBasicBlock * MBB) const'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp' l='552' u='c' c='_ZNK4llvm16PPCFrameLowering16canUseAsPrologueERKNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp' l='685' u='c' c='_ZNK4llvm16PPCFrameLowering12emitPrologueERNS_15MachineFunctionERNS_17MachineBasicBlockE'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp' l='524'>// We need a scratch register for spilling LR and for spilling CR. By default,
// we use two scratch registers to hide latency. However, if only one scratch
// register is available, we can adjust for that by not overlapping the spill
// code. However, if we need to realign the stack (i.e. have a base pointer)
// and the stack frame is large, we need two scratch registers.
// Also, stack probe requires two scratch registers, one for old sp, one for
// large frame and large probe size.</doc>
