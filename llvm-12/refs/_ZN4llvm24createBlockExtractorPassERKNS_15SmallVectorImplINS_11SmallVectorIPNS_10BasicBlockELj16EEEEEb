<dec f='llvm/llvm/include/llvm/Transforms/IPO.h' l='192' type='llvm::ModulePass * llvm::createBlockExtractorPass(const SmallVectorImpl&lt;SmallVector&lt;llvm::BasicBlock *, 16&gt; &gt; &amp; GroupsOfBlocksToExtract, bool EraseFunctions)'/>
<def f='llvm/llvm/lib/Transforms/IPO/BlockExtractor.cpp' l='113' ll='118' type='llvm::ModulePass * llvm::createBlockExtractorPass(const SmallVectorImpl&lt;SmallVector&lt;llvm::BasicBlock *, 16&gt; &gt; &amp; GroupsOfBlocksToExtract, bool EraseFunctions)'/>
<use f='llvm/llvm/tools/llvm-extract/llvm-extract.cpp' l='361' u='c' c='main'/>
