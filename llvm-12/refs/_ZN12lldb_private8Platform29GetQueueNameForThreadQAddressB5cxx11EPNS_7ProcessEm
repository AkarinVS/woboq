<def f='llvm/lldb/include/lldb/Target/Platform.h' l='680' ll='683' type='std::string lldb_private::Platform::GetQueueNameForThreadQAddress(lldb_private::Process * process, lldb::addr_t dispatch_qaddr)'/>
<doc f='llvm/lldb/include/lldb/Target/Platform.h' l='661'>/// Locate a queue name given a thread&apos;s qaddr
  ///
  /// On a system using libdispatch (&quot;Grand Central Dispatch&quot;) style queues, a
  /// thread may be associated with a GCD queue or not, and a queue may be
  /// associated with multiple threads. The process/thread must provide a way
  /// to find the &quot;dispatch_qaddr&quot; for each thread, and from that
  /// dispatch_qaddr this Platform method will locate the queue name and
  /// provide that.
  ///
  /// \param[in] process
  ///     A process is required for reading memory.
  ///
  /// \param[in] dispatch_qaddr
  ///     The dispatch_qaddr for this thread.
  ///
  /// \return
  ///     The name of the queue, if there is one.  An empty string
  ///     means that this thread is not associated with a dispatch
  ///     queue.</doc>
