<def f='llvm/llvm/include/llvm/CodeGen/ModuloSchedule.h' l='279' ll='367'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='639' c='_ZN4llvm17SwingSchedulerDAG8scheduleEv'/>
<size>496</size>
<doc f='llvm/llvm/include/llvm/CodeGen/ModuloSchedule.h' l='277'>/// A reimplementation of ModuloScheduleExpander. It works by generating a
/// standalone kernel loop and peeling out the prologs and epilogs.</doc>
<fun r='_ZN4llvm29PeelingModuloScheduleExpanderC1ERNS_15MachineFunctionERNS_14ModuloScheduleEPNS_13LiveIntervalsE'/>
<fun r='_ZN4llvm29PeelingModuloScheduleExpander6expandEv'/>
<fun r='_ZN4llvm29PeelingModuloScheduleExpander37validateAgainstModuloScheduleExpanderEv'/>
<mbr r='llvm::PeelingModuloScheduleExpander::Schedule' o='0' t='llvm::ModuloSchedule &amp;'/>
<mbr r='llvm::PeelingModuloScheduleExpander::MF' o='64' t='llvm::MachineFunction &amp;'/>
<mbr r='llvm::PeelingModuloScheduleExpander::ST' o='128' t='const llvm::TargetSubtargetInfo &amp;'/>
<mbr r='llvm::PeelingModuloScheduleExpander::MRI' o='192' t='llvm::MachineRegisterInfo &amp;'/>
<mbr r='llvm::PeelingModuloScheduleExpander::TII' o='256' t='const llvm::TargetInstrInfo *'/>
<mbr r='llvm::PeelingModuloScheduleExpander::LIS' o='320' t='llvm::LiveIntervals *'/>
<mbr r='llvm::PeelingModuloScheduleExpander::BB' o='384' t='llvm::MachineBasicBlock *'/>
<mbr r='llvm::PeelingModuloScheduleExpander::Preheader' o='448' t='llvm::MachineBasicBlock *'/>
<mbr r='llvm::PeelingModuloScheduleExpander::Prologs' o='512' t='SmallVector&lt;llvm::MachineBasicBlock *, 4&gt;'/>
<mbr r='llvm::PeelingModuloScheduleExpander::Epilogs' o='896' t='SmallVector&lt;llvm::MachineBasicBlock *, 4&gt;'/>
<mbr r='llvm::PeelingModuloScheduleExpander::LiveStages' o='1280' t='DenseMap&lt;llvm::MachineBasicBlock *, llvm::BitVector&gt;'/>
<mbr r='llvm::PeelingModuloScheduleExpander::AvailableStages' o='1472' t='DenseMap&lt;llvm::MachineBasicBlock *, llvm::BitVector&gt;'/>
<mbr r='llvm::PeelingModuloScheduleExpander::PhiNodeLoopIteration' o='1664' t='DenseMap&lt;llvm::MachineInstr *, unsigned int&gt;'/>
<mbr r='llvm::PeelingModuloScheduleExpander::CanonicalMIs' o='1856' t='DenseMap&lt;llvm::MachineInstr *, llvm::MachineInstr *&gt;'/>
<mbr r='llvm::PeelingModuloScheduleExpander::BlockMIs' o='2048' t='DenseMap&lt;std::pair&lt;MachineBasicBlock *, MachineInstr *&gt;, llvm::MachineInstr *&gt;'/>
<mbr r='llvm::PeelingModuloScheduleExpander::PeeledFront' o='2240' t='std::deque&lt;MachineBasicBlock *&gt;'/>
<mbr r='llvm::PeelingModuloScheduleExpander::PeeledBack' o='2880' t='std::deque&lt;MachineBasicBlock *&gt;'/>
<mbr r='llvm::PeelingModuloScheduleExpander::IllegalPhisToDelete' o='3520' t='SmallVector&lt;llvm::MachineInstr *, 4&gt;'/>
<fun r='_ZN4llvm29PeelingModuloScheduleExpander13rewriteKernelEv'/>
<fun r='_ZN4llvm29PeelingModuloScheduleExpander10peelKernelENS_17LoopPeelDirectionE'/>
<fun r='_ZN4llvm29PeelingModuloScheduleExpander18filterInstructionsEPNS_17MachineBasicBlockEi'/>
<fun r='_ZN4llvm29PeelingModuloScheduleExpander22moveStageBetweenBlocksEPNS_17MachineBasicBlockES2_j'/>
<fun r='_ZN4llvm29PeelingModuloScheduleExpander20peelPrologAndEpilogsEv'/>
<fun r='_ZN4llvm29PeelingModuloScheduleExpander23getEquivalentRegisterInENS_8RegisterEPNS_17MachineBasicBlockE'/>
<fun r='_ZN4llvm29PeelingModuloScheduleExpander13rewriteUsesOfEPNS_12MachineInstrE'/>
<fun r='_ZN4llvm29PeelingModuloScheduleExpander13fixupBranchesEv'/>
<fun r='_ZN4llvm29PeelingModuloScheduleExpander23CreateLCSSAExitingBlockEv'/>
<fun r='_ZN4llvm29PeelingModuloScheduleExpander8getStageEPNS_12MachineInstrE'/>
<fun r='_ZN4llvm29PeelingModuloScheduleExpander18getPhiCanonicalRegEPNS_12MachineInstrES2_'/>
<mbr r='llvm::PeelingModuloScheduleExpander::LoopInfo' o='3904' t='std::unique_ptr&lt;TargetInstrInfo::PipelinerLoopInfo&gt;'/>
