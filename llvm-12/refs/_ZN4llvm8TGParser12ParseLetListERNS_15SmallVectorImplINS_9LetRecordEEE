<dec f='llvm/llvm/lib/TableGen/TGParser.h' l='227' type='void llvm::TGParser::ParseLetList(SmallVectorImpl&lt;llvm::LetRecord&gt; &amp; Result)'/>
<def f='llvm/llvm/lib/TableGen/TGParser.cpp' l='3269' ll='3304' type='void llvm::TGParser::ParseLetList(SmallVectorImpl&lt;llvm::LetRecord&gt; &amp; Result)'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='3318' u='c' c='_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE'/>
<doc f='llvm/llvm/lib/TableGen/TGParser.cpp' l='3263'>/// ParseLetList - Parse a non-empty list of assignment expressions into a list
/// of LetRecords.
///
///   LetList ::= LetItem (&apos;,&apos; LetItem)*
///   LetItem ::= ID OptionalRangeList &apos;=&apos; Value
///</doc>
