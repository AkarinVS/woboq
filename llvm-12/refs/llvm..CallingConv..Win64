<dec f='llvm/llvm/include/llvm/IR/CallingConv.h' l='164' type='79'/>
<doc f='llvm/llvm/include/llvm/IR/CallingConv.h' l='156'>/// The C convention as implemented on Windows/x86-64 and
    /// AArch64. This convention differs from the more common
    /// \c X86_64_SysV convention in a number of ways, most notably in
    /// that XMM registers used to pass arguments are shadowed by GPRs,
    /// and vice versa.
    /// On AArch64, this is identical to the normal C (AAPCS) calling
    /// convention for normal functions, but floats are passed in integer
    /// registers to variadic functions.</doc>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='54' u='r' c='_ZN5clang7CodeGen12CodeGenTypes27ClangCallConvToLLVMCallConvENS_11CallingConvE'/>
<use f='llvm/clang/lib/CodeGen/TargetInfo.cpp' l='3855' u='r' c='_ZNK12_GLOBAL__N_113X86_64ABIInfo11computeInfoERN5clang7CodeGen14CGFunctionInfoE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='2127' u='r' c='_ZN4llvm8LLParser24parseOptionalCallingConvERj'/>
<use f='llvm/llvm/lib/IR/AsmWriter.cpp' l='387' c='_ZL16PrintCallingConvjRN4llvm11raw_ostreamE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64Subtarget.h' l='570' c='_ZNK4llvm16AArch64Subtarget18isCallingConvWin64Ej'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp' l='2600' u='r' c='_ZNK4llvm20AArch64FrameLowering20determineCalleeSavesERNS_15MachineFunctionERNS_9BitVectorEPNS_12RegScavengerE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='4527' c='_ZNK4llvm21AArch64TargetLowering17CCAssignFnForCallEjb'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='5031' u='r' c='_ZNK4llvm21AArch64TargetLowering33isEligibleForTailCallOptimizationENS_7SDValueEjbRKNS_15SmallVectorImplINS_3ISD9OutputArgEEERKNS2_IS1_EERKNS2_INS3_8I14855144'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='5032' u='r' c='_ZNK4llvm21AArch64TargetLowering33isEligibleForTailCallOptimizationENS_7SDValueEjbRKNS_15SmallVectorImplINS_3ISD9OutputArgEEERKNS2_IS1_EERKNS2_INS3_8I14855144'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='16511' u='r' c='_ZNK4llvm21AArch64TargetLowering21insertSSPDeclarationsERNS_6ModuleE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp' l='105' u='r' c='_ZNK4llvm19AArch64RegisterInfo18getCalleeSavedRegsEPKNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/X86/X86Subtarget.h' l='895' c='_ZNK4llvm12X86Subtarget18isCallingConvWin64Ej'/>
<use f='llvm/build/lib/Target/X86/X86GenCallingConv.inc' l='1318' u='r' c='_ZL9CC_X86_64jN4llvm3MVTES0_NS_11CCValAssign7LocInfoENS_3ISD10ArgFlagsTyERNS_7CCStateE'/>
<use f='llvm/build/lib/Target/X86/X86GenCallingConv.inc' l='3256' u='r' c='_ZL12RetCC_X86_64jN4llvm3MVTES0_NS_11CCValAssign7LocInfoENS_3ISD10ArgFlagsTyERNS_7CCStateE'/>
<use f='llvm/llvm/lib/Target/X86/X86FastISel.cpp' l='1196' u='r' c='_ZN12_GLOBAL__N_111X86FastISel12X86SelectRetEPKN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Target/X86/X86FastISel.cpp' l='3245' c='_ZN12_GLOBAL__N_111X86FastISel13fastLowerCallERN4llvm8FastISel16CallLoweringInfoE'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='3194' c='_ZL17mayTailCallThisCCj'/>
<use f='llvm/llvm/lib/Target/X86/X86RegisterInfo.cpp' l='233' u='r' c='_ZNK4llvm15X86RegisterInfo18getGPRsForTailCallERKNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/X86/X86RegisterInfo.cpp' l='348' c='_ZNK4llvm15X86RegisterInfo18getCalleeSavedRegsEPKNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/X86/X86RegisterInfo.cpp' l='466' c='_ZNK4llvm15X86RegisterInfo20getCallPreservedMaskERKNS_15MachineFunctionEj'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp' l='4319' u='r' c='_ZN12_GLOBAL__N_117VarArgAMD64Helper16visitVAStartInstERN4llvm11VAStartInstE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp' l='4326' u='r' c='_ZN12_GLOBAL__N_117VarArgAMD64Helper15visitVACopyInstERN4llvm10VACopyInstE'/>
