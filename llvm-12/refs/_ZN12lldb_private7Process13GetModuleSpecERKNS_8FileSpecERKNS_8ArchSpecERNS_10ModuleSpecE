<dec f='llvm/lldb/include/lldb/Target/Process.h' l='2346' type='bool lldb_private::Process::GetModuleSpec(const lldb_private::FileSpec &amp; module_file_spec, const lldb_private::ArchSpec &amp; arch, lldb_private::ModuleSpec &amp; module_spec)'/>
<doc f='llvm/lldb/include/lldb/Target/Process.h' l='2328'>/// Try to fetch the module specification for a module with the given file
  /// name and architecture. Process sub-classes have to override this method
  /// if they support platforms where the Platform object can&apos;t get the module
  /// spec for all module.
  ///
  /// \param[in] module_file_spec
  ///     The file name of the module to get specification for.
  ///
  /// \param[in] arch
  ///     The architecture of the module to get specification for.
  ///
  /// \param[out] module_spec
  ///     The fetched module specification if the return value is
  ///     \b true, unchanged otherwise.
  ///
  /// \return
  ///     Returns \b true if the module spec fetched successfully,
  ///     \b false otherwise.</doc>
<ovr f='llvm/lldb/source/Plugins/Process/gdb-remote/ProcessGDBRemote.cpp' l='4219' c='_ZN12lldb_private18process_gdb_remote16ProcessGDBRemote13GetModuleSpecERKNS_8FileSpecERKNS_8ArchSpecERNS_10ModuleSpecE'/>
<use f='llvm/lldb/source/Target/Platform.cpp' l='1555' u='c' c='_ZN12lldb_private8Platform21GetRemoteSharedModuleERKNS_10ModuleSpecEPNS_7ProcessERSt10shared_ptrINS_6ModuleEERKSt8functionIFNS_6StatusES3_EEPb'/>
<def f='llvm/lldb/source/Target/Process.cpp' l='5734' ll='5738' type='bool lldb_private::Process::GetModuleSpec(const lldb_private::FileSpec &amp; module_file_spec, const lldb_private::ArchSpec &amp; arch, lldb_private::ModuleSpec &amp; module_spec)'/>
