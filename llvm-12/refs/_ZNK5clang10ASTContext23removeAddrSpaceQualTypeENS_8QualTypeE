<dec f='llvm/clang/include/clang/AST/ASTContext.h' l='1116' type='clang::QualType clang::ASTContext::removeAddrSpaceQualType(clang::QualType T) const'/>
<doc f='llvm/clang/include/clang/AST/ASTContext.h' l='1111'>/// Remove any existing address space on the type and returns the type
  /// with qualifiers intact (or that&apos;s the idea anyway)
  ///
  /// The return type should be T with all prior qualifiers minus the address
  /// space.</doc>
<def f='llvm/clang/lib/AST/ASTContext.cpp' l='2926' ll='2958' type='clang::QualType clang::ASTContext::removeAddrSpaceQualType(clang::QualType T) const'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='2992' u='c' c='_ZNK5clang10ASTContext22removePtrSizeAddrSpaceENS_8QualTypeE'/>
<use f='llvm/clang/lib/Sema/SemaCast.cpp' l='2453' u='c' c='_ZL19TryAddressSpaceCastRN5clang4SemaERNS_12ActionResultIPNS_4ExprELb1EEENS_8QualTypeEbRjRNS_8CastKindE'/>
<use f='llvm/clang/lib/Sema/SemaCast.cpp' l='2455' u='c' c='_ZL19TryAddressSpaceCastRN5clang4SemaERNS_12ActionResultIPNS_4ExprELb1EEENS_8QualTypeEbRjRNS_8CastKindE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='15267' u='c' c='_ZL25RemoveAddressSpaceFromPtrRN5clang4SemaEPKNS_11PointerTypeE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2982' u='c' c='_ZN5clang4Sema29PerformObjectMemberConversionEPNS_4ExprEPNS_19NestedNameSpecifierEPNS_9NamedDeclES6_'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='4297' u='c' c='_ZN5clang4Sema25PerformImplicitConversionEPNS_4ExprENS_8QualTypeERKNS_26StandardConversionSequenceENS0_16AssignmentActionENS0_21CheckedConversionKindE'/>
<use f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='2244' u='c' c='_ZL34DeduceTemplateArgumentsByTypeMatchRN5clang4SemaEPNS_21TemplateParameterListENS_8QualTypeES4_RNS_4sema21TemplateDeductionInfoERN4llvm15SmallVector11610061'/>
<use f='llvm/clang/lib/Sema/SemaType.cpp' l='7002' u='c' c='_ZL32handleMSPointerTypeQualifierAttrRN12_GLOBAL__N_119TypeProcessingStateERN5clang10ParsedAttrERNS2_8QualTypeE'/>
