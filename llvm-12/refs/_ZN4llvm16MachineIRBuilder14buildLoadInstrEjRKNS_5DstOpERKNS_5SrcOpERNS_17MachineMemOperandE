<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='824' u='c' c='_ZN4llvm16MachineIRBuilder9buildLoadERKNS_5DstOpERKNS_5SrcOpERNS_17MachineMemOperandE'/>
<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='844' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildLoadInstr(unsigned int Opcode, const llvm::DstOp &amp; Res, const llvm::SrcOp &amp; Addr, llvm::MachineMemOperand &amp; MMO)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='835'>/// Build and insert `Res = &lt;opcode&gt; Addr, MMO`.
  ///
  /// Loads the value stored at \p Addr. Puts the result in \p Res.
  ///
  /// \pre setBasicBlock or setMI must have been called.
  /// \pre \p Res must be a generic virtual register.
  /// \pre \p Addr must be a generic virtual register with pointer type.
  ///
  /// \return a MachineInstrBuilder for the newly created instruction.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp' l='737' u='c' c='_ZN4llvm14CombinerHelper20applySextInRegOfLoadERNS_12MachineInstrERSt5tupleIJNS_8RegisterEjEE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='967' u='c' c='_ZN4llvm15LegalizerHelper12narrowScalarERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='2704' u='c' c='_ZN4llvm15LegalizerHelper9lowerLoadERNS_12MachineInstrE'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='345' ll='357' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildLoadInstr(unsigned int Opcode, const llvm::DstOp &amp; Res, const llvm::SrcOp &amp; Addr, llvm::MachineMemOperand &amp; MMO)'/>
