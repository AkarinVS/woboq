<dec f='llvm/clang/include/clang/Sema/DeclSpec.h' l='805' type='void clang::DeclSpec::Finish(clang::Sema &amp; S, const clang::PrintingPolicy &amp; Policy)'/>
<doc f='llvm/clang/include/clang/Sema/DeclSpec.h' l='802'>/// Finish - This does final analysis of the declspec, issuing diagnostics for
  /// things like &quot;_Imaginary&quot; (lacking an FP type).  After calling this method,
  /// DeclSpec is guaranteed self-consistent, even if an error occurred.</doc>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='3043' u='c' c='_ZN5clang6Parser26ParseDeclarationSpecifiersERNS_8DeclSpecERKNS0_18ParsedTemplateInfoENS_15AccessSpecifierENS0_15DeclSpecContextEPNS0_18LateParsedAttrListE'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='5563' u='c' c='_ZN5clang6Parser25ParseTypeQualifierListOptERNS_8DeclSpecEjbbN4llvm8OptionalINS3_12function_refIFvvEEEEE'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2178' u='c' c='_ZN5clang6Parser27ParseCXXSimpleTypeSpecifierERNS_8DeclSpecE'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2191' u='c' c='_ZN5clang6Parser27ParseCXXSimpleTypeSpecifierERNS_8DeclSpecE'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2269' u='c' c='_ZN5clang6Parser27ParseCXXSimpleTypeSpecifierERNS_8DeclSpecE'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2274' u='c' c='_ZN5clang6Parser27ParseCXXSimpleTypeSpecifierERNS_8DeclSpecE'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2279' u='c' c='_ZN5clang6Parser27ParseCXXSimpleTypeSpecifierERNS_8DeclSpecE'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2295' u='c' c='_ZN5clang6Parser24ParseCXXTypeSpecifierSeqERNS_8DeclSpecE'/>
<def f='llvm/clang/lib/Sema/DeclSpec.cpp' l='1113' ll='1433' type='void clang::DeclSpec::Finish(clang::Sema &amp; S, const clang::PrintingPolicy &amp; Policy)'/>
<doc f='llvm/clang/lib/Sema/DeclSpec.cpp' l='1109'>/// Finish - This does final analysis of the declspec, rejecting things like
/// &quot;_Imaginary&quot; (lacking an FP type).  This returns a diagnostic to issue or
/// diag::NUM_DIAGNOSTICS if there is no error.  After calling this method,
/// DeclSpec is guaranteed self-consistent, even if an error occurred.</doc>
