<use f='llvm/clang/lib/Format/ContinuationIndenter.h' l='211' u='w' c='_ZN5clang6format10ParenStateC1EPKNS0_11FormatTokenEjjbb'/>
<dec f='llvm/clang/lib/Format/ContinuationIndenter.h' l='332' type='bool'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.h' l='389' u='r' c='_ZNK5clang6format10ParenStateltERKS1_'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.h' l='389' u='r' c='_ZNK5clang6format10ParenStateltERKS1_'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.h' l='390' u='r' c='_ZNK5clang6format10ParenStateltERKS1_'/>
<offset>428</offset>
<doc f='llvm/clang/lib/Format/ContinuationIndenter.h' l='330'>/// The start of a nested block (e.g. lambda introducer in C++ or
  /// &quot;function&quot; in JavaScript) is not wrapped to a new line.</doc>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='306' u='r' c='_ZN5clang6format20ContinuationIndenter8canBreakERKNS0_9LineStateE'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='908' u='r' c='_ZN5clang6format20ContinuationIndenter17addTokenOnNewLineERNS0_9LineStateEb'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1273' u='r' c='_ZN5clang6format20ContinuationIndenter20moveStateToNextTokenERNS0_9LineStateEbb'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1276' u='w' c='_ZN5clang6format20ContinuationIndenter20moveStateToNextTokenERNS0_9LineStateEbb'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1282' u='w' c='_ZN5clang6format20ContinuationIndenter20moveStateToNextTokenERNS0_9LineStateEbb'/>
