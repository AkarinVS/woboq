<dec f='llvm/lldb/include/lldb/Target/RegisterContextUnwind.h' l='125' type='void lldb_private::RegisterContextUnwind::PropagateTrapHandlerFlagFromUnwindPlan(lldb::UnwindPlanSP unwind_plan)'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='540' u='c' c='_ZN12lldb_private21RegisterContextUnwind24InitializeNonZerothFrameEv'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='553' u='c' c='_ZN12lldb_private21RegisterContextUnwind24InitializeNonZerothFrameEv'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='1706' u='c' c='_ZN12lldb_private21RegisterContextUnwind21TryFallbackUnwindPlanEv'/>
<use f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='1750' u='c' c='_ZN12lldb_private21RegisterContextUnwind31ForceSwitchToFallbackUnwindPlanEv'/>
<def f='llvm/lldb/source/Target/RegisterContextUnwind.cpp' l='1759' ll='1804' type='void lldb_private::RegisterContextUnwind::PropagateTrapHandlerFlagFromUnwindPlan(lldb::UnwindPlanSP unwind_plan)'/>
<doc f='llvm/lldb/include/lldb/Target/RegisterContextUnwind.h' l='123'>/// Check if the given unwind plan indicates a signal trap handler, and
  /// update frame type and symbol context if so.</doc>
