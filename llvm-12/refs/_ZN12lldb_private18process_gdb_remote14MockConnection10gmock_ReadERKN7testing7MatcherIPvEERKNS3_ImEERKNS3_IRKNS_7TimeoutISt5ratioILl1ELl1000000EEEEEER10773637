<def f='llvm/lldb/unittests/Process/gdb-remote/GDBRemoteTestUtils.h' l='32' macro='1' type='::testing::MockSpec&lt;size_t (void *, size_t, const Timeout&lt;std::micro&gt; &amp;, lldb::ConnectionStatus &amp;, Status *)&gt; &amp; lldb_private::process_gdb_remote::MockConnection::gmock_Read(const ::testing::Matcher&lt; ::testing::internal::Function&lt;size_t (void *, size_t, const Timeout&lt;std::micro&gt; &amp;, lldb::ConnectionStatus &amp;, Status *)&gt;::Argument1&gt; &amp; gmock_a1, const ::testing::Matcher&lt; ::testing::internal::Function&lt;size_t (void *, size_t, const Timeout&lt;std::micro&gt; &amp;, lldb::ConnectionStatus &amp;, Status *)&gt;::Argument2&gt; &amp; gmock_a2, const ::testing::Matcher&lt; ::testing::internal::Function&lt;size_t (void *, size_t, const Timeout&lt;std::micro&gt; &amp;, lldb::ConnectionStatus &amp;, Status *)&gt;::Argument3&gt; &amp; gmock_a3, const ::testing::Matcher&lt; ::testing::internal::Function&lt;size_t (void *, size_t, const Timeout&lt;std::micro&gt; &amp;, lldb::ConnectionStatus &amp;, Status *)&gt;::Argument4&gt; &amp; gmock_a4, const ::testing::Matcher&lt; ::testing::internal::Function&lt;size_t (void *, size_t, const Timeout&lt;std::micro&gt; &amp;, lldb::ConnectionStatus &amp;, Status *)&gt;::Argument5&gt; &amp; gmock_a5)'/>
