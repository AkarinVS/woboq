<def f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningWorker.h' l='51' ll='80'/>
<use f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningTool.h' l='111'/>
<size>64</size>
<doc f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningWorker.h' l='45'>/// An individual dependency scanning worker that is able to run on its own
/// thread.
///
/// The worker computes the dependencies for the input files by preprocessing
/// sources either using a fast mode where the source files are minimized, or
/// using the regular processing run.</doc>
<fun r='_ZN5clang7tooling12dependencies24DependencyScanningWorkerC1ERNS1_25DependencyScanningServiceE'/>
<fun r='_ZN5clang7tooling12dependencies24DependencyScanningWorker19computeDependenciesERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm9StringRefE9479579'/>
<mbr r='clang::tooling::dependencies::DependencyScanningWorker::DiagOpts' o='0' t='IntrusiveRefCntPtr&lt;clang::DiagnosticOptions&gt;'/>
<mbr r='clang::tooling::dependencies::DependencyScanningWorker::PCHContainerOps' o='64' t='std::shared_ptr&lt;PCHContainerOperations&gt;'/>
<mbr r='clang::tooling::dependencies::DependencyScanningWorker::PPSkipMappings' o='192' t='std::unique_ptr&lt;ExcludedPreprocessorDirectiveSkipMapping&gt;'/>
<mbr r='clang::tooling::dependencies::DependencyScanningWorker::RealFS' o='256' t='llvm::IntrusiveRefCntPtr&lt;llvm::vfs::FileSystem&gt;'/>
<mbr r='clang::tooling::dependencies::DependencyScanningWorker::DepFS' o='320' t='llvm::IntrusiveRefCntPtr&lt;DependencyScanningWorkerFilesystem&gt;'/>
<mbr r='clang::tooling::dependencies::DependencyScanningWorker::Files' o='384' t='llvm::IntrusiveRefCntPtr&lt;FileManager&gt;'/>
<mbr r='clang::tooling::dependencies::DependencyScanningWorker::Format' o='448' t='clang::tooling::dependencies::ScanningOutputFormat'/>
