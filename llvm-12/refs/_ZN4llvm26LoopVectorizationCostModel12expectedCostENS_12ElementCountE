<dec f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1639' type='llvm::LoopVectorizationCostModel::VectorizationCostTy llvm::LoopVectorizationCostModel::expectedCost(llvm::ElementCount VF)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5781' u='c' c='_ZN4llvm26LoopVectorizationCostModel25selectVectorizationFactorENS_12ElementCountE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5801' u='c' c='_ZN4llvm26LoopVectorizationCostModel25selectVectorizationFactorENS_12ElementCountE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6152' u='c' c='_ZN4llvm26LoopVectorizationCostModel21selectInterleaveCountENS_12ElementCountEj'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6589' ll='6632' type='LoopVectorizationCostModel::VectorizationCostTy llvm::LoopVectorizationCostModel::expectedCost(llvm::ElementCount VF)'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1635'>/// Returns the expected execution cost. The unit of the cost does
  /// not matter because we use the &apos;cost&apos; units to compare different
  /// vector widths. The cost that is returned is *not* normalized by
  /// the factor width.</doc>
