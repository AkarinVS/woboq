<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='749' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildBrIndirect(llvm::Register Tgt)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='741'>/// Build and insert G_BRINDIRECT \p Tgt
  ///
  /// G_BRINDIRECT is an indirect branch to \p Tgt.
  ///
  /// \pre setBasicBlock or setMI must have been called.
  /// \pre \p Tgt must be a generic virtual register with pointer type.
  ///
  /// \return a MachineInstrBuilder for the newly created instruction.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp' l='1251' u='c' c='_ZN4llvm12IRTranslator19translateIndirectBrERKNS_4UserERNS_16MachineIRBuilderE'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='222' ll='225' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildBrIndirect(llvm::Register Tgt)'/>
