<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='2998' u='w' c='_ZN5clang12ast_matchers8internal29matcher_hasMemberName0MatcherC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<dec f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='2998' type='const std::string'/>
<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='2999' u='r' c='_ZNK5clang12ast_matchers8internal29matcher_hasMemberName0Matcher7matchesERKNS_27CXXDependentScopeMemberExprEPNS1_14ASTMatchFinderEPNS1_21BoundNodesTreeBuilderE'/>
<offset>128</offset>
<doc f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='2978'>/// Matches template-dependent, but known, member names.
///
/// In template declarations, dependent members are not resolved and so can
/// not be matched to particular named declarations.
///
/// This matcher allows to match on the known name of members.
///
/// Given
/// \code
///   template &lt;typename T&gt;
///   struct S {
///       void mem();
///   };
///   template &lt;typename T&gt;
///   void x() {
///       S&lt;T&gt; s;
///       s.mem();
///   }
/// \endcode
/// \c cxxDependentScopeMemberExpr(hasMemberName(&quot;mem&quot;)) matches `s.mem()`</doc>
