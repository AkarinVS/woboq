<dec f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h' l='49' type='static clang::tooling::dependencies::CachedFileSystemEntry clang::tooling::dependencies::CachedFileSystemEntry::createFileEntry(llvm::StringRef Filename, llvm::vfs::FileSystem &amp; FS, bool Minimize = true)'/>
<def f='llvm/clang/lib/Tooling/DependencyScanning/DependencyScanningFilesystem.cpp' l='18' ll='92' type='static clang::tooling::dependencies::CachedFileSystemEntry clang::tooling::dependencies::CachedFileSystemEntry::createFileEntry(llvm::StringRef Filename, llvm::vfs::FileSystem &amp; FS, bool Minimize = true)'/>
<use f='llvm/clang/lib/Tooling/DependencyScanning/DependencyScanningFilesystem.cpp' l='187' u='c' c='_ZN5clang7tooling12dependencies34DependencyScanningWorkerFilesystem26getOrCreateFileSystemEntryEN4llvm9StringRefE'/>
<doc f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h' l='41'>/// Create an entry that represents an opened source file with minimized or
  /// original contents.
  ///
  /// The filesystem opens the file even for `stat` calls open to avoid the
  /// issues with stat + open of minimized files that might lead to a
  /// mismatching size of the file. If file is not minimized, the full file is
  /// read and copied into memory to ensure that it&apos;s not memory mapped to avoid
  /// running out of file descriptors.</doc>
