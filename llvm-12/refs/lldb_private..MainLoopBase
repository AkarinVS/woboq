<def f='llvm/lldb/include/lldb/Host/MainLoopBase.h' l='31' ll='84'/>
<use f='llvm/lldb/include/lldb/Host/MainLoopBase.h' l='41'/>
<use f='llvm/lldb/include/lldb/Host/MainLoopBase.h' l='71' c='_ZN12lldb_private12MainLoopBase10ReadHandleC1ERS0_i'/>
<use f='llvm/lldb/include/lldb/Host/MainLoopBase.h' l='74'/>
<use f='llvm/lldb/include/lldb/Host/MainLoopBase.h' l='77'/>
<use f='llvm/lldb/include/lldb/Host/MainLoopBase.h' l='82' c='_ZN12lldb_private12MainLoopBaseC1ERKS0_'/>
<use f='llvm/lldb/include/lldb/Host/MainLoopBase.h' l='83' c='_ZN12lldb_private12MainLoopBaseaSERKS0_'/>
<use f='llvm/lldb/include/lldb/Host/MainLoopBase.h' l='83' c='_ZN12lldb_private12MainLoopBaseaSERKS0_'/>
<ovr f='llvm/lldb/include/lldb/Host/MainLoop.h' l='37' c='lldb_private::MainLoop'/>
<use f='llvm/lldb/include/lldb/Host/MainLoop.h' l='37'/>
<size>8</size>
<doc f='llvm/lldb/include/lldb/Host/MainLoopBase.h' l='19'>// The purpose of this class is to enable multiplexed processing of data from
// different sources without resorting to multi-threading. Clients can register
// IOObjects, which will be monitored for readability, and when they become
// ready, the specified callback will be invoked. Monitoring for writability is
// not supported, but can be easily added if needed.
//
// The RegisterReadObject function return a handle, which controls the duration
// of the monitoring. When this handle is destroyed, the callback is
// deregistered.
//
// This class simply defines the interface common for all platforms, actual
// implementations are platform-specific.</doc>
<fun r='_ZN12lldb_private12MainLoopBaseC1Ev'/>
<fun r='_ZN12lldb_private12MainLoopBaseD1Ev'/>
<fun r='_ZN12lldb_private12MainLoopBase18RegisterReadObjectERKSt10shared_ptrINS_8IOObjectEERKSt8functionIFvRS0_EERNS_6StatusE'/>
<fun r='_ZN12lldb_private12MainLoopBase3RunEv'/>
<fun r='_ZN12lldb_private12MainLoopBase18RequestTerminationEv'/>
<fun r='_ZN12lldb_private12MainLoopBase16CreateReadHandleERKSt10shared_ptrINS_8IOObjectEE'/>
<fun r='_ZN12lldb_private12MainLoopBase20UnregisterReadObjectEi'/>
<fun r='_ZN12lldb_private12MainLoopBaseC1ERKS0_'/>
<fun r='_ZN12lldb_private12MainLoopBaseaSERKS0_'/>
<use f='llvm/lldb/source/Host/common/TCPSocket.cpp' l='272' c='_ZN12lldb_private9TCPSocket6AcceptERPNS_6SocketE'/>
<size>8</size>
<use f='llvm/lldb/source/Plugins/Process/Linux/NativeProcessLinux.cpp' l='299' c='_ZN12lldb_private13process_linux18NativeProcessLinuxC1EiiRNS_21NativeProcessProtocol14NativeDelegateERKNS_8ArchSpecERNS_8MainLoopEN4llvm8ArrayRefIiEE'/>
<size>8</size>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerLLGS.cpp' l='1073' c='_ZN12lldb_private18process_gdb_remote32GDBRemoteCommunicationServerLLGS20InitializeConnectionESt10unique_ptrINS_10ConnectionESt14default_deleteIS3_EE'/>
<use f='llvm/lldb/source/Plugins/Process/gdb-remote/GDBRemoteCommunicationServerLLGS.cpp' l='1124' c='_ZN12lldb_private18process_gdb_remote32GDBRemoteCommunicationServerLLGS20StartSTDIOForwardingEv'/>
<size>8</size>
<use f='llvm/lldb/tools/lldb-server/lldb-gdbserver.cpp' l='96' c='_ZL14sighup_handlerRN12lldb_private12MainLoopBaseE'/>
<size>8</size>
<use f='llvm/lldb/unittests/Host/MainLoopTest.cpp' l='59' c='_ZN12_GLOBAL__N_112MainLoopTest13make_callbackEv'/>
<size>8</size>
