<dec f='llvm/polly/include/polly/Support/ISLTools.h' l='154' type='isl::set polly::singleton(isl::union_set USet, isl::space ExpectedSpace)'/>
<use f='llvm/polly/lib/Analysis/DependenceInfo.cpp' l='674' u='c' c='_ZNK5polly11Dependences15isValidScheduleERNS_4ScopERKN4llvm8DenseMapIPNS_8ScopStmtEN3isl12noexceptions3mapENS3_12DenseMapInfoIS6_EENS3_6detail12DenseMapPairIS6_S9_EEEE'/>
<doc f='llvm/polly/include/polly/Support/ISLTools.h' l='145'>/// If by construction an isl_union_set is known to contain only a single
/// isl_set, return it.
///
/// This function combines isl_set_from_union_set() and
/// isl_union_set_extract_set(). isl_map_from_union_set() fails if the set is
/// empty because it does not know which space it would be in.
/// isl_union_set_extract_set() on the other hand does not check whether there
/// is (at most) one isl_set in the union, i.e. how it has been constructed is
/// probably wrong.</doc>
<def f='llvm/polly/lib/Support/ISLTools.cpp' l='147' ll='158' type='isl::set polly::singleton(isl::union_set USet, isl::space ExpectedSpace)'/>
<use f='llvm/polly/lib/Transform/ZoneAlgo.cpp' l='569' u='c' c='_ZN5polly13ZoneAlgorithm13computePerPHIEPKNS_13ScopArrayInfoE'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='631' u='c' c='_ZN12_GLOBAL__N_123ISLTools_singleton_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='636' u='c' c='_ZN12_GLOBAL__N_123ISLTools_singleton_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='642' u='c' c='_ZN12_GLOBAL__N_123ISLTools_singleton_Test8TestBodyEv'/>
<use f='llvm/polly/unittests/Isl/IslTest.cpp' l='649' u='c' c='_ZN12_GLOBAL__N_123ISLTools_singleton_Test8TestBodyEv'/>
