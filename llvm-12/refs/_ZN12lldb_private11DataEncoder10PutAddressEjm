<dec f='llvm/lldb/include/lldb/Utility/DataEncoder.h' l='149' type='uint32_t lldb_private::DataEncoder::PutAddress(uint32_t offset, lldb::addr_t addr)'/>
<doc f='llvm/lldb/include/lldb/Utility/DataEncoder.h' l='131'>/// Encode an address in the existing buffer at \a offset bytes into the
  /// buffer.
  ///
  /// Encode a single address (honoring the m_addr_size member) to the data
  /// and return the next offset where subsequent data would go. pointed to by
  /// \a offset_ptr. The size of the extracted address comes from the \a
  /// m_addr_size member variable and should be set correctly prior to
  /// extracting any address values.
  ///
  /// \param[in] offset
  ///     The offset where to encode the address.
  ///
  /// \param[in] addr
  ///     The address to encode.
  ///
  /// \return
  ///     The next valid offset within data if the put operation
  ///     was successful, else UINT32_MAX to indicate the put failed.</doc>
<def f='llvm/lldb/source/Utility/DataEncoder.cpp' l='181' ll='183' type='uint32_t lldb_private::DataEncoder::PutAddress(uint32_t offset, lldb::addr_t addr)'/>
<use f='llvm/lldb/unittests/Process/POSIX/NativeProcessELFTest.cpp' l='42' u='c' c='_ZN12_GLOBAL__N_114CreateAuxvDataERNS_14MockProcessELFEN4llvm8ArrayRefISt4pairIN9AuxVector9EntryTypeEjEEE'/>
<use f='llvm/lldb/unittests/Process/POSIX/NativeProcessELFTest.cpp' l='43' u='c' c='_ZN12_GLOBAL__N_114CreateAuxvDataERNS_14MockProcessELFEN4llvm8ArrayRefISt4pairIN9AuxVector9EntryTypeEjEEE'/>
