<dec f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.h' l='459' type='void llvm::PPCInstrInfo::loadRegFromStackSlotNoUpd(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator MBBI, unsigned int DestReg, int FrameIndex, const llvm::TargetRegisterClass * RC, const llvm::TargetRegisterInfo * TRI) const'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.h' l='456'>// Emits a register reload without updating the register class for vector
  // registers. This ensures that when we reload a vector register the
  // element order in the register is the same as it was in memory.</doc>
<use f='llvm/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp' l='2503' u='c' c='_ZNK4llvm16PPCFrameLowering27restoreCalleeSavedRegistersERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEENS_15MutableA12816417'/>
<def f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='1979' ll='2002' type='void llvm::PPCInstrInfo::loadRegFromStackSlotNoUpd(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator MI, unsigned int DestReg, int FrameIdx, const llvm::TargetRegisterClass * RC, const llvm::TargetRegisterInfo * TRI) const'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='2018' u='c' c='_ZNK4llvm12PPCInstrInfo20loadRegFromStackSlotERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEENS_8RegisterEiPKNS_19Tar998684'/>
