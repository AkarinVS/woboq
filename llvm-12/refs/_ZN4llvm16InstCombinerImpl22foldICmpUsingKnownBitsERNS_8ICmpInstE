<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='647' type='llvm::Instruction * llvm::InstCombinerImpl::foldICmpUsingKnownBits(llvm::ICmpInst &amp; Cmp)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='4997' ll='5223' type='llvm::Instruction * llvm::InstCombinerImpl::foldICmpUsingKnownBits(llvm::ICmpInst &amp; I)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='5590' u='c' c='_ZN4llvm16InstCombinerImpl13visitICmpInstERNS_8ICmpInstE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='4995'>/// Try to fold the comparison based on range information we can get by checking
/// whether bits are known to be zero or one in the inputs.</doc>
