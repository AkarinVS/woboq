<dec f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='425' type='llvm::Register llvm::TargetRegisterInfo::lookThruSingleUseCopyChain(llvm::Register SrcReg, const llvm::MachineRegisterInfo * MRI) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='418'>/// Find the original SrcReg unless it is the target of a copy-like operation,
  /// in which case we chain backwards through all such operations to the
  /// ultimate source register. If a physical register is encountered, we stop
  /// the search.
  /// Return the original SrcReg if all the definitions in the chain only have
  /// one user and not a physical register.</doc>
<def f='llvm/llvm/lib/CodeGen/TargetRegisterInfo.cpp' l='536' ll='559' type='llvm::Register llvm::TargetRegisterInfo::lookThruSingleUseCopyChain(llvm::Register SrcReg, const llvm::MachineRegisterInfo * MRI) const'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='458' u='c' c='_ZNK4llvm12PPCInstrInfo14getFMAPatternsERNS_12MachineInstrERNS_15SmallVectorImplINS_22MachineCombinerPatternEEEb'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='460' u='c' c='_ZNK4llvm12PPCInstrInfo14getFMAPatternsERNS_12MachineInstrERNS_15SmallVectorImplINS_22MachineCombinerPatternEEEb'/>
