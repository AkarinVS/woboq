<use f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1338' u='c' c='_ZNK4llvm12MachineInstr15definesRegisterENS_8RegisterEPKNS_18TargetRegisterInfoE'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1346' u='c' c='_ZNK4llvm12MachineInstr16modifiesRegisterENS_8RegisterEPKNS_18TargetRegisterInfoE'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1354' u='c' c='_ZNK4llvm12MachineInstr17registerDefIsDeadENS_8RegisterEPKNS_18TargetRegisterInfoE'/>
<dec f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1388' type='int llvm::MachineInstr::findRegisterDefOperandIdx(llvm::Register Reg, bool isDead = false, bool Overlap = false, const llvm::TargetRegisterInfo * TRI = nullptr) const'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1398' u='c' c='_ZN4llvm12MachineInstr22findRegisterDefOperandENS_8RegisterEbbPKNS_18TargetRegisterInfoE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1382'>/// Returns the operand index that is a def of the specified register or
  /// -1 if it is not found. If isDead is true, defs that are not dead are
  /// skipped. If Overlap is true, then it also looks for defs that merely
  /// overlap the specified register. If TargetRegisterInfo is non-null,
  /// then it also checks if there is a def of a super-register.
  /// This may also return a register mask operand when Overlap is true.</doc>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='701' u='c' c='_ZN4llvm24AggressiveAntiDepBreaker25FindSuitableFreeRegistersEjRSt3mapIPKNS_19TargetRegisterClassEjSt4lessIS4_ESaISt4pairIKS4_jEEERS1_IjjS5_IjESaIS7_IKjjEEE'/>
<use f='llvm/llvm/lib/CodeGen/MachineCombiner.cpp' l='200' u='c' c='_ZN12_GLOBAL__N_115MachineCombiner8getDepthERN4llvm15SmallVectorImplIPNS1_12MachineInstrEEERNS1_8DenseMapIjjNS1_12DenseMapInfoIjEENS1_6detail12DenseMa222803'/>
<use f='llvm/llvm/lib/CodeGen/MachineCombiner.cpp' l='209' u='c' c='_ZN12_GLOBAL__N_115MachineCombiner8getDepthERN4llvm15SmallVectorImplIPNS1_12MachineInstrEEERNS1_8DenseMapIjjNS1_12DenseMapInfoIjEENS1_6detail12DenseMa222803'/>
<use f='llvm/llvm/lib/CodeGen/MachineCombiner.cpp' l='253' u='c' c='_ZN12_GLOBAL__N_115MachineCombiner10getLatencyEPN4llvm12MachineInstrES3_NS1_19MachineTraceMetrics5TraceE'/>
<def f='llvm/llvm/lib/CodeGen/MachineInstr.cpp' l='1033' ll='1057' type='int llvm::MachineInstr::findRegisterDefOperandIdx(llvm::Register Reg, bool isDead = false, bool Overlap = false, const llvm::TargetRegisterInfo * TRI = nullptr) const'/>
<doc f='llvm/llvm/lib/CodeGen/MachineInstr.cpp' l='1029'>/// findRegisterDefOperandIdx() - Returns the operand index that is a def of
/// the specified register or -1 if it is not found. If isDead is true, defs
/// that are not dead are skipped. If TargetRegisterInfo is non-null, then it
/// also checks if there is a def of a super-register.</doc>
<use f='llvm/llvm/lib/CodeGen/ModuloSchedule.cpp' l='1889' u='c' c='_ZN4llvm29PeelingModuloScheduleExpander23getEquivalentRegisterInENS_8RegisterEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/RegisterCoalescer.cpp' l='834' u='c' c='_ZN12_GLOBAL__N_117RegisterCoalescer24removeCopyByCommutingDefERKN4llvm13CoalescerPairEPNS1_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp' l='1241' u='c' c='_ZN12_GLOBAL__N_125TwoAddressInstructionPass23tryInstructionTransformERN4llvm26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEES5_jjjb'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='555' u='c' c='_ZL15canFoldIntoCSelRKN4llvm19MachineRegisterInfoEjPj'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='583' u='c' c='_ZL15canFoldIntoCSelRKN4llvm19MachineRegisterInfoEjPj'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='1438' u='c' c='_ZNK4llvm16AArch64InstrInfo20optimizeCompareInstrERNS_12MachineInstrENS_8RegisterES3_iiPKNS_19MachineRegisterInfoE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='4253' u='c' c='_ZL15getMaddPatternsRN4llvm12MachineInstrERNS_15SmallVectorImplINS_22MachineCombinerPatternEEE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='5855' u='c' c='_ZNK4llvm16AArch64InstrInfo18optimizeCondBranchERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64PostSelectOptimize.cpp' l='138' u='c' c='_ZN12_GLOBAL__N_125AArch64PostSelectOptimize16optimizeNZCVDefsERN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp' l='212' u='c' c='_ZNK4llvm13R600InstrInfo22definesAddressRegisterERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='5797' u='c' c='_ZNK4llvm11SIInstrInfo11lowerSelectERNS_14SmallSetVectorIPNS_12MachineInstrELj32EEERS2_PNS_20MachineDominatorTreeE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='6475' u='c' c='_ZNK4llvm11SIInstrInfo28addSCCDefUsersToVALUWorklistERNS_14MachineOperandERNS_12MachineInstrERNS_14SmallSetVectorIPS3_Lj32EEE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='1705' u='c' c='_ZNK4llvm16ARMBaseInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='4108' u='c' c='_ZL15getBundledDefMIPKN4llvm18TargetRegisterInfoEPKNS_12MachineInstrEjRjS6_'/>
<use f='llvm/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp' l='88' u='c' c='_ZL17isVectorPredicatePN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='4233' u='c' c='_ZNK4llvm16HexagonInstrInfo17getOperandLatencyEPKNS_18InstrItineraryDataERKNS_12MachineInstrEjS6_j'/>
