<def f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='220' ll='223' type='void llvm::VectorizerValueMap::resetVectorValue(llvm::Value * Key, unsigned int Part, llvm::Value * Vector)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2489' u='c' c='_ZN4llvm19InnerLoopVectorizer25packScalarIntoVectorValueEPNS_5ValueERKNS_11VPIterationE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='3899' u='c' c='_ZN4llvm19InnerLoopVectorizer26truncateToMinimalBitwidthsEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='3916' u='c' c='_ZN4llvm19InnerLoopVectorizer26truncateToMinimalBitwidthsEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4117' u='c' c='_ZN4llvm19InnerLoopVectorizer23fixFirstOrderRecurrenceEPNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4233' u='c' c='_ZN4llvm19InnerLoopVectorizer12fixReductionEPNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4279' u='c' c='_ZN4llvm19InnerLoopVectorizer12fixReductionEPNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='9147' u='c' c='_ZN4llvm19VPPredInstPHIRecipe7executeERNS_16VPTransformStateE'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='216'>/// Reset the vector value associated with \p Key for the given \p Part.
  /// This function can be used to update values that have already been
  /// vectorized. This is the case for &quot;fix-up&quot; operations including type
  /// truncation and the second phase of recurrence vectorization.</doc>
