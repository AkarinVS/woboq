<def f='llvm/lldb/include/lldb/Expression/UserExpression.h' l='111' ll='114' type='bool lldb_private::UserExpression::Complete(lldb_private::ExecutionContext &amp; exe_ctx, lldb_private::CompletionRequest &amp; request, unsigned int complete_pos)'/>
<doc f='llvm/lldb/include/lldb/Expression/UserExpression.h' l='90'>/// Attempts to find possible command line completions for the given
  /// (possible incomplete) user expression.
  ///
  /// \param[in] exe_ctx
  ///     The execution context to use when looking up entities that
  ///     are needed for parsing and completing (locations of functions, types
  ///     of variables, persistent variables, etc.)
  ///
  /// \param[out] request
  ///     The completion request to fill out. The completion should be a string
  ///     that would complete the current token at the cursor position.
  ///     Note that the string in the list replaces the current token
  ///     in the command line.
  ///
  /// \param[in] complete_pos
  ///     The position of the cursor inside the user expression string.
  ///     The completion process starts on the token that the cursor is in.
  ///
  /// \return
  ///     True if we added any completion results to the output;
  ///     false otherwise.</doc>
<use f='llvm/lldb/source/Commands/CommandObjectExpression.cpp' l='348' u='c' c='_ZN12lldb_private23CommandObjectExpression16HandleCompletionERNS_17CompletionRequestE'/>
<ovr f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangUserExpression.cpp' l='802' c='_ZN12lldb_private19ClangUserExpression8CompleteERNS_16ExecutionContextERNS_17CompletionRequestEj'/>
