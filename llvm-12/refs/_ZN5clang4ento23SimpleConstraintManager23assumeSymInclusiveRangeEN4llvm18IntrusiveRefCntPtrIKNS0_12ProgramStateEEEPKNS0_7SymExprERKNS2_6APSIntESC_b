<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SimpleConstraintManager.h' l='61' type='clang::ento::ProgramStateRef clang::ento::SimpleConstraintManager::assumeSymInclusiveRange(clang::ento::ProgramStateRef State, clang::ento::SymbolRef Sym, const llvm::APSInt &amp; From, const llvm::APSInt &amp; To, bool InRange)'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SimpleConstraintManager.h' l='57'>/// Given a symbolic expression within the range [From, To], assume that it is
  /// true/false and generate the new program state.
  /// This function is used to handle case ranges produced by a language
  /// extension for switch case statements.</doc>
<ovr f='llvm/clang/lib/StaticAnalyzer/Core/RangedConstraintManager.cpp' l='93' c='_ZN5clang4ento23RangedConstraintManager23assumeSymInclusiveRangeEN4llvm18IntrusiveRefCntPtrIKNS0_12ProgramStateEEEPKNS0_7SymExprERKNS2_6APSIntESC_b'/>
<ovr f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConstraintManager.h' l='63' c='_ZN5clang4ento20SMTConstraintManager23assumeSymInclusiveRangeEN4llvm18IntrusiveRefCntPtrIKNS0_12ProgramStateEEEPKNS0_7SymExprERKNS2_6APSIntESC_b'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/SimpleConstraintManager.cpp' l='106' u='c' c='_ZN5clang4ento23SimpleConstraintManager20assumeInclusiveRangeEN4llvm18IntrusiveRefCntPtrIKNS0_12ProgramStateEEENS0_6NonLocERKNS2_6APSIntESA_b'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/SimpleConstraintManager.cpp' l='117' u='c' c='_ZN5clang4ento23SimpleConstraintManager20assumeInclusiveRangeEN4llvm18IntrusiveRefCntPtrIKNS0_12ProgramStateEEENS0_6NonLocERKNS2_6APSIntESA_b'/>
