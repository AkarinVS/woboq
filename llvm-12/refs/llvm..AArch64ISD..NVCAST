<dec f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.h' l='275' type='486'/>
<doc f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.h' l='270'>/// Natural vector cast. ISD::BITCAST is not natural in the big-endian
  /// world w.r.t vectors; which causes additional REV instructions to be
  /// generated to compensate for the byte-swapping. But sometimes we do
  /// need to re-interpret the data in SIMD vector registers in big-endian
  /// mode without emitting such REV instructions.</doc>
<use f='llvm/build/lib/Target/AArch64/AArch64GenDAGISel.inc' l='149961' u='r' c='_ZN12_GLOBAL__N_119AArch64DAGToDAGISel10SelectCodeEPN4llvm6SDNodeE'/>
<use f='llvm/build/lib/Target/AArch64/AArch64GenDAGISel.inc' l='149961' u='r' c='_ZN12_GLOBAL__N_119AArch64DAGToDAGISel10SelectCodeEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='1884' c='_ZNK4llvm21AArch64TargetLowering17getTargetNodeNameEj'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='9083' u='r' c='_ZL18tryAdvSIMDModImm64jN4llvm7SDValueERNS_12SelectionDAGERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='9131' u='r' c='_ZL18tryAdvSIMDModImm32jN4llvm7SDValueERNS_12SelectionDAGERKNS_5APIntEPKS0_'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='9171' u='r' c='_ZL18tryAdvSIMDModImm16jN4llvm7SDValueERNS_12SelectionDAGERKNS_5APIntEPKS0_'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='9202' u='r' c='_ZL20tryAdvSIMDModImm321sjN4llvm7SDValueERNS_12SelectionDAGERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='9223' u='r' c='_ZL17tryAdvSIMDModImm8jN4llvm7SDValueERNS_12SelectionDAGERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='9254' u='r' c='_ZL18tryAdvSIMDModImmFPjN4llvm7SDValueERNS_12SelectionDAGERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='15656' c='_ZNK4llvm21AArch64TargetLowering17PerformDAGCombineEPNS_6SDNodeERNS_14TargetLowering15DAGCombinerInfoE'/>
