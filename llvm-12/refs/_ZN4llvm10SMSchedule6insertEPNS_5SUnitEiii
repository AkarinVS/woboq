<dec f='llvm/llvm/include/llvm/CodeGen/MachinePipeliner.h' l='546' type='bool llvm::SMSchedule::insert(llvm::SUnit * SU, int StartCycle, int EndCycle, int II)'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='2090' u='c' c='_ZN4llvm17SwingSchedulerDAG16schedulePipelineERNS_10SMScheduleE'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='2093' u='c' c='_ZN4llvm17SwingSchedulerDAG16schedulePipelineERNS_10SMScheduleE'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='2101' u='c' c='_ZN4llvm17SwingSchedulerDAG16schedulePipelineERNS_10SMScheduleE'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='2103' u='c' c='_ZN4llvm17SwingSchedulerDAG16schedulePipelineERNS_10SMScheduleE'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='2106' u='c' c='_ZN4llvm17SwingSchedulerDAG16schedulePipelineERNS_10SMScheduleE'/>
<def f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='2386' ll='2438' type='bool llvm::SMSchedule::insert(llvm::SUnit * SU, int StartCycle, int EndCycle, int II)'/>
<doc f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='2381'>/// Try to schedule the node at the specified StartCycle and continue
/// until the node is schedule or the EndCycle is reached.  This function
/// returns true if the node is scheduled.  This routine may search either
/// forward or backward for a place to insert the instruction based upon
/// the relative values of StartCycle and EndCycle.</doc>
