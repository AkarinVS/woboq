<dec f='llvm/lldb/include/lldb/Interpreter/CommandInterpreter.h' l='551' type='bool lldb_private::CommandInterpreter::SaveTranscript(lldb_private::CommandReturnObject &amp; result, llvm::Optional&lt;std::string&gt; output_file = llvm::None)'/>
<doc f='llvm/lldb/include/lldb/Interpreter/CommandInterpreter.h' l='542'>/// Save the current debugger session transcript to a file on disk.
  /// \param output_file
  ///     The file path to which the session transcript will be written. Since
  ///     the argument is optional, an arbitrary temporary file will be create
  ///     when no argument is passed.
  /// \param result
  ///     This is used to pass function output and error messages.
  /// \return \b true if the session transcript was successfully written to
  /// disk, \b false otherwise.</doc>
<use f='llvm/lldb/source/Commands/CommandObjectQuit.cpp' l='108' u='c' c='_ZN12lldb_private17CommandObjectQuit9DoExecuteERNS_4ArgsERNS_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Commands/CommandObjectSession.cpp' l='45' u='c' c='_ZN24CommandObjectSessionSave9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<def f='llvm/lldb/source/Interpreter/CommandInterpreter.cpp' l='2919' ll='2962' type='bool lldb_private::CommandInterpreter::SaveTranscript(lldb_private::CommandReturnObject &amp; result, llvm::Optional&lt;std::string&gt; output_file = llvm::None)'/>
