<dec f='llvm/polly/lib/External/isl/isl_bernstein.h' l='3' type='isl_stat isl_qpolynomial_bound_on_domain_bernstein(isl_basic_map * bset, isl_qpolynomial * poly, struct isl_bound * bound)'/>
<def f='llvm/polly/lib/External/isl/isl_bernstein.c' l='550' ll='583' type='isl_stat isl_qpolynomial_bound_on_domain_bernstein(isl_basic_map * bset, isl_qpolynomial * poly, struct isl_bound * bound)'/>
<doc f='llvm/polly/lib/External/isl/isl_bernstein.c' l='539'>/* Compute a bound on the polynomial defined over the parametric polytope
 * using bernstein expansion and store the result
 * in bound-&gt;pwf and bound-&gt;pwf_tight.
 *
 * If bernstein_recurse is set to ISL_BERNSTEIN_FACTORS, we check if
 * the polytope can be factorized and apply bernstein expansion recursively
 * on the factors.
 * If bernstein_recurse is set to ISL_BERNSTEIN_INTERVALS, we apply
 * bernstein expansion recursively on each dimension.
 * Otherwise, we apply bernstein expansion on the entire polytope.
 */</doc>
<use f='llvm/polly/lib/External/isl/isl_bound.c' l='110' u='c' c='compressed_guarded_poly_bound'/>
