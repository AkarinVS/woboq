<def f='llvm/compiler-rt/lib/fuzzer/FuzzerCorpus.h' l='74' ll='119' type='void fuzzer::InputInfo::UpdateEnergy(size_t GlobalNumberOfFeatures, bool ScalePerExecTime, std::chrono::microseconds AverageUnitExecutionTime)'/>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerCorpus.h' l='515' u='c' c='_ZN6fuzzer11InputCorpus24UpdateCorpusDistributionERNS_6RandomE'/>
<doc f='llvm/compiler-rt/lib/fuzzer/FuzzerCorpus.h' l='66'>// Assign more energy to a high-entropy seed, i.e., that reveals more
  // information about the globally rare features in the neighborhood of the
  // seed. Since we do not know the entropy of a seed that has never been
  // executed we assign fresh seeds maximum entropy and let II-&gt;Energy approach
  // the true entropy from above. If ScalePerExecTime is true, the computed
  // entropy is scaled based on how fast this input executes compared to the
  // average execution time of inputs. The faster an input executes, the more
  // energy gets assigned to the input.</doc>
