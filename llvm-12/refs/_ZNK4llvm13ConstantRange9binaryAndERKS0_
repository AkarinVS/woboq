<dec f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='427' type='llvm::ConstantRange llvm::ConstantRange::binaryAnd(const llvm::ConstantRange &amp; Other) const'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='425'>/// Return a new range representing the possible values resulting
  /// from a binary-and of a value in this range by a value in \p Other.</doc>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='818' u='c' c='_ZNK4llvm13ConstantRange8binaryOpENS_11Instruction9BinaryOpsERKS0_'/>
<def f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1268' ll='1281' type='llvm::ConstantRange llvm::ConstantRange::binaryAnd(const llvm::ConstantRange &amp; Other) const'/>
