<dec f='llvm/llvm/include/llvm/Bitcode/BitcodeWriter.h' l='129' type='void llvm::WriteBitcodeToFile(const llvm::Module &amp; M, llvm::raw_ostream &amp; Out, bool ShouldPreserveUseListOrder = false, const llvm::ModuleSummaryIndex * Index = nullptr, bool GenerateHash = false, llvm::ModuleHash * ModHash = nullptr)'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='1527' u='c' c='_ZL17runThinLTOBackendRN5clang17DiagnosticsEngineEPN4llvm18ModuleSummaryIndexEPNS2_6ModuleERKNS_19HeaderSearchOptionsERKNS_14CodeGenOptionsERKNS_13Tar13930536'/>
<doc f='llvm/llvm/include/llvm/Bitcode/BitcodeWriter.h' l='108'>/// Write the specified module to the specified raw output stream.
  ///
  /// For streams where it matters, the given stream should be in &quot;binary&quot;
  /// mode.
  ///
  /// If \c ShouldPreserveUseListOrder, encode the use-list order for each \a
  /// Value in \c M.  These will be reconstructed exactly when \a M is
  /// deserialized.
  ///
  /// If \c Index is supplied, the bitcode will contain the summary index
  /// (currently for use in ThinLTO optimization).
  ///
  /// \p GenerateHash enables hashing the Module and including the hash in the
  /// bitcode (currently for use in ThinLTO incremental build).
  ///
  /// If \p ModHash is non-null, when GenerateHash is true, the resulting
  /// hash is written into ModHash. When GenerateHash is false, that value
  /// is used as the hash instead of computing from the generated bitcode.
  /// Can be used to produce the same module hash for a minimized bitcode
  /// used just for the thin link as in the regular full bitcode that will
  /// be used in the backend.</doc>
<use f='llvm/clang/tools/clang-offload-wrapper/ClangOffloadWrapper.cpp' l='366' u='c' c='main'/>
<use f='llvm/lld/ELF/LTO.cpp' l='171' u='c' c='_ZL12createConfigv'/>
<use f='llvm/llvm/examples/BrainF/BrainFDriver.cpp' l='176' u='c' c='main'/>
<use f='llvm/llvm/examples/ModuleMaker/ModuleMaker.cpp' l='64' u='c' c='main'/>
<use f='llvm/llvm/lib/Bitcode/Writer/BitWriter.cpp' l='27' u='c' c='LLVMWriteBitcodeToFile'/>
<use f='llvm/llvm/lib/Bitcode/Writer/BitWriter.cpp' l='35' u='c' c='LLVMWriteBitcodeToFD'/>
<use f='llvm/llvm/lib/Bitcode/Writer/BitWriter.cpp' l='47' u='c' c='LLVMWriteBitcodeToMemoryBuffer'/>
<def f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp' l='4587' ll='4612' type='void llvm::WriteBitcodeToFile(const llvm::Module &amp; M, llvm::raw_ostream &amp; Out, bool ShouldPreserveUseListOrder = false, const llvm::ModuleSummaryIndex * Index = nullptr, bool GenerateHash = false, llvm::ModuleHash * ModHash = nullptr)'/>
<use f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp' l='4873' u='c' c='_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbRKSt6vectorIhSaIhEE'/>
<doc f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp' l='4586'>/// Write the specified module to the specified output stream.</doc>
<use f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriterPass.cpp' l='26' u='c' c='_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE'/>
<use f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriterPass.cpp' l='58' u='c' c='_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/CodeGen/ParallelCG.cpp' l='48' u='c' c='_ZN4llvm12splitCodeGenESt10unique_ptrINS_6ModuleESt14default_deleteIS1_EENS_8ArrayRefIPNS_17raw_pwrite_streamEEES8_RKSt8functionIFS0_INS_13TargetMachi9033602'/>
<use f='llvm/llvm/lib/CodeGen/ParallelCG.cpp' l='70' u='c' c='_ZN4llvm12splitCodeGenESt10unique_ptrINS_6ModuleESt14default_deleteIS1_EENS_8ArrayRefIPNS_17raw_pwrite_streamEEES8_RKSt8functionIFS0_INS_13TargetMachi9033602'/>
<use f='llvm/llvm/lib/FuzzMutate/FuzzerCLI.cpp' l='194' u='c' c='_ZN4llvm11writeModuleERKNS_6ModuleEPhm'/>
<use f='llvm/llvm/lib/LTO/LTOBackend.cpp' l='121' u='c' c='_ZN4llvm3lto6Config12addSaveTempsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb'/>
<use f='llvm/llvm/lib/LTO/LTOBackend.cpp' l='478' u='c' c='_ZL12splitCodeGenRKN4llvm3lto6ConfigEPNS_13TargetMachineESt8functionIFSt10unique_ptrINS0_18NativeObjectStreamESt14default_deleteIS8_EEjEEjS7_INS_6Modu4005855'/>
<use f='llvm/llvm/lib/LTO/LTOCodeGenerator.cpp' l='253' u='c' c='_ZN4llvm16LTOCodeGenerator18writeMergedModulesENS_9StringRefE'/>
<use f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='103' u='c' c='_ZN12_GLOBAL__N_115saveTempBitcodeERKN4llvm6ModuleENS0_9StringRefEjS4_'/>
<use f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='475' u='c' c='_ZN12_GLOBAL__N_120ProcessThinLTOModuleERN4llvm6ModuleERNS0_18ModuleSummaryIndexERNS0_9StringMapIPNS0_3lto9InputFileENS0_15MallocAllocatorEEERNS0_13Ta4806892'/>
<use f='llvm/llvm/lib/Transforms/IPO/ThinLTOBitcodeWriter.cpp' l='211' u='c' c='_ZN12_GLOBAL__N_127splitAndWriteThinLTOBitcodeERN4llvm11raw_ostreamEPS1_NS0_12function_refIFRNS0_9AAResultsERNS0_8FunctionEEEERNS0_6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/IPO/ThinLTOBitcodeWriter.cpp' l='216' u='c' c='_ZN12_GLOBAL__N_127splitAndWriteThinLTOBitcodeERN4llvm11raw_ostreamEPS1_NS0_12function_refIFRNS0_9AAResultsERNS0_8FunctionEEEERNS0_6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/IPO/ThinLTOBitcodeWriter.cpp' l='482' u='c' c='_ZN12_GLOBAL__N_119writeThinLTOBitcodeERN4llvm11raw_ostreamEPS1_NS0_12function_refIFRNS0_9AAResultsERNS0_8FunctionEEEERNS0_6ModuleEPKNS0_18ModuleSummaryIndexE'/>
<use f='llvm/llvm/tools/bugpoint/OptimizerDriver.cpp' l='54' u='c' c='_ZL21writeProgramToFileAuxRN4llvm14ToolOutputFileERKNS_6ModuleE'/>
<use f='llvm/llvm/tools/bugpoint/OptimizerDriver.cpp' l='71' u='c' c='_ZNK4llvm9BugDriver18writeProgramToFileEiRKNS_6ModuleE'/>
<use f='llvm/llvm/tools/bugpoint/OptimizerDriver.cpp' l='158' u='c' c='_ZNK4llvm9BugDriver9runPassesERNS_6ModuleERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EERS9_bbNS_8ArrayRefIS9_EE'/>
<use f='llvm/llvm/tools/llvm-as/llvm-as.cpp' l='104' u='c' c='_ZL15WriteOutputFilePKN4llvm6ModuleEPKNS_18ModuleSummaryIndexE'/>
<use f='llvm/llvm/tools/llvm-link/llvm-link.cpp' l='483' u='c' c='main'/>
<use f='llvm/llvm/tools/llvm-lto/llvm-lto.cpp' l='539' u='c' c='_ZN7thinltoL17writeModuleToFileERN4llvm6ModuleENS0_9StringRefE'/>
<use f='llvm/llvm/tools/llvm-modextract/llvm-modextract.cpp' l='72' u='c' c='main'/>
<use f='llvm/llvm/tools/llvm-opt-fuzzer/llvm-opt-fuzzer.cpp' l='86' u='c' c='LLVMFuzzerCustomMutator'/>
<use f='llvm/llvm/tools/llvm-split/llvm-split.cpp' l='69' u='c' c='main'/>
<use f='llvm/llvm/tools/verify-uselistorder/verify-uselistorder.cpp' l='132' u='c' c='_ZNK12_GLOBAL__N_18TempFile12writeBitcodeERKN4llvm6ModuleE'/>
<use f='llvm/llvm/unittests/Bitcode/BitReaderTest.cpp' l='47' u='c' c='_ZN12_GLOBAL__N_119writeModuleToBufferESt10unique_ptrIN4llvm6ModuleESt14default_deleteIS2_EERNS1_15SmallVectorImplIcEE'/>
