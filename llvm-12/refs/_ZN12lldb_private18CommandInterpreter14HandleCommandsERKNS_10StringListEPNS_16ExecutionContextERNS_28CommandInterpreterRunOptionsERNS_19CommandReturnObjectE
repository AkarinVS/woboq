<dec f='llvm/lldb/include/lldb/Interpreter/CommandInterpreter.h' l='327' type='void lldb_private::CommandInterpreter::HandleCommands(const lldb_private::StringList &amp; commands, lldb_private::ExecutionContext * context, lldb_private::CommandInterpreterRunOptions &amp; options, lldb_private::CommandReturnObject &amp; result)'/>
<doc f='llvm/lldb/include/lldb/Interpreter/CommandInterpreter.h' l='310'>/// Execute a list of commands in sequence.
  ///
  /// \param[in] commands
  ///    The list of commands to execute.
  /// \param[in,out] context
  ///    The execution context in which to run the commands. Can be nullptr in
  ///    which case the default
  ///    context will be used.
  /// \param[in] options
  ///    This object holds the options used to control when to stop, whether to
  ///    execute commands,
  ///    etc.
  /// \param[out] result
  ///    This is marked as succeeding with no output if all commands execute
  ///    safely,
  ///    and failed with some explanation if we aborted executing the commands
  ///    at some point.</doc>
<use f='llvm/lldb/source/Breakpoint/BreakpointOptions.cpp' l='652' u='c' c='_ZN12lldb_private17BreakpointOptions33BreakpointOptionsCallbackFunctionEPvPNS_24StoppointCallbackContextEmm'/>
<use f='llvm/lldb/source/Commands/CommandObjectWatchpointCommand.cpp' l='304' u='c' c='_ZN33CommandObjectWatchpointCommandAdd33WatchpointOptionsCallbackFunctionEPvPN12lldb_private24StoppointCallbackContextEm'/>
<def f='llvm/lldb/source/Interpreter/CommandInterpreter.cpp' l='2266' ll='2401' type='void lldb_private::CommandInterpreter::HandleCommands(const lldb_private::StringList &amp; commands, lldb_private::ExecutionContext * override_context, lldb_private::CommandInterpreterRunOptions &amp; options, lldb_private::CommandReturnObject &amp; result)'/>
<use f='llvm/lldb/source/Target/Target.cpp' l='3352' u='c' c='_ZN12lldb_private6Target19StopHookCommandLine10HandleStopERNS_16ExecutionContextESt10shared_ptrINS_6StreamEE'/>
