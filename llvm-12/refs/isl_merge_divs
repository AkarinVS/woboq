<dec f='llvm/polly/lib/External/isl/isl_local_space_private.h' l='34' type='isl_mat * isl_merge_divs(isl_mat * div1, isl_mat * div2, int * exp1, int * exp2)'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='1920' u='c' c='isl_aff_add'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='5956' u='c' c='isl_aff_align_divs'/>
<use f='llvm/polly/lib/External/isl/isl_coalesce.c' l='3446' u='c' c='coalesce_after_aligning_divs'/>
<use f='llvm/polly/lib/External/isl/isl_ilp.c' l='399' u='c' c='isl_basic_set_opt'/>
<def f='llvm/polly/lib/External/isl/isl_local_space.c' l='729' ll='775' type='isl_mat * isl_merge_divs(isl_mat * div1, isl_mat * div2, int * exp1, int * exp2)'/>
<use f='llvm/polly/lib/External/isl/isl_local_space.c' l='833' u='c' c='isl_local_space_intersect'/>
<doc f='llvm/polly/lib/External/isl/isl_local_space.c' l='721'>/* Combine the two lists of divs into a single list.
 * For each row i in div1, exp1[i] is set to the position of the corresponding
 * row in the result.  Similarly for div2 and exp2.
 * This function guarantees
 *	exp1[i] &gt;= i
 *	exp1[i+1] &gt; exp1[i]
 * For optimal merging, the two input list should have been sorted.
 */</doc>
<use f='llvm/polly/lib/External/isl/isl_lp.c' l='291' u='c' c='isl_basic_set_opt_lp_val_aligned'/>
<use f='llvm/polly/lib/External/isl/isl_polynomial.c' l='1651' u='c' c='with_merged_divs'/>
