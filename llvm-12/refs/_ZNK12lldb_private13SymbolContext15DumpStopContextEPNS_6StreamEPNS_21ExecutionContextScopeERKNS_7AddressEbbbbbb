<dec f='llvm/lldb/include/lldb/Symbol/SymbolContext.h' l='150' type='bool lldb_private::SymbolContext::DumpStopContext(lldb_private::Stream * s, lldb_private::ExecutionContextScope * exe_scope, const lldb_private::Address &amp; so_addr, bool show_fullpaths, bool show_module, bool show_inlined_frames, bool show_function_arguments, bool show_function_name, bool show_inline_callsite_line_info = true) const'/>
<doc f='llvm/lldb/include/lldb/Symbol/SymbolContext.h' l='102'>/// Dump the stop context in this object to a Stream.
  ///
  /// Dump the best description of this object to the stream. The information
  /// displayed depends on the amount and quality of the information in this
  /// context. If a module, function, file and line number are available, they
  /// will be dumped. If only a module and function or symbol name with offset
  /// is available, that will be output. Else just the address at which the
  /// target was stopped will be displayed.
  ///
  /// \param[in] s
  ///     The stream to which to dump the object description.
  ///
  /// \param[in] so_addr
  ///     The resolved section offset address.
  ///
  /// \param[in] show_fullpaths
  ///     When printing file paths (with the Module), whether the
  ///     base name of the Module should be printed or the full path.
  ///
  /// \param[in] show_module
  ///     Whether the module name should be printed followed by a
  ///     grave accent &quot;`&quot; character.
  ///
  /// \param[in] show_inlined_frames
  ///     If a given pc is in inlined function(s), whether the inlined
  ///     functions should be printed on separate lines in addition to
  ///     the concrete function containing the pc.
  ///
  /// \param[in] show_function_arguments
  ///     If false, this method will try to elide the function argument
  ///     types when printing the function name.  This may be ambiguous
  ///     for languages that have function overloading - but it may
  ///     make the &quot;function name&quot; too long to include all the argument
  ///     types.
  ///
  /// \param[in] show_function_name
  ///     Normally this should be true - the function/symbol name should
  ///     be printed.  In disassembly formatting, where we want a format
  ///     like &quot;&lt;*+36&gt;&quot;, this should be false and &quot;*&quot; will be printed
  ///     instead.
  ///
  /// \param[in] show_inline_callsite_line_info
  ///     When processing an inline block, the line info of the callsite
  ///     is dumped if this flag is \b true, otherwise the line info
  ///     of the actual inlined function is dumped.
  ///
  /// \return
  ///     \b true if some text was dumped, \b false otherwise.</doc>
<use f='llvm/lldb/source/Breakpoint/BreakpointLocation.cpp' l='515' u='c' c='_ZN12lldb_private18BreakpointLocation14GetDescriptionEPNS_6StreamEN4lldb16DescriptionLevelE'/>
<use f='llvm/lldb/source/Commands/CommandObjectSource.cpp' l='1098' u='c' c='_ZN23CommandObjectSourceList9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Core/Address.cpp' l='551' u='c' c='_ZNK12lldb_private7Address4DumpEPNS_6StreamEPNS_21ExecutionContextScopeENS0_9DumpStyleES5_j'/>
<use f='llvm/lldb/source/Core/Address.cpp' l='630' u='c' c='_ZNK12lldb_private7Address4DumpEPNS_6StreamEPNS_21ExecutionContextScopeENS0_9DumpStyleES5_j'/>
<use f='llvm/lldb/source/Core/Address.cpp' l='668' u='c' c='_ZNK12lldb_private7Address4DumpEPNS_6StreamEPNS_21ExecutionContextScopeENS0_9DumpStyleES5_j'/>
<def f='llvm/lldb/source/Symbol/SymbolContext.cpp' l='70' ll='186' type='bool lldb_private::SymbolContext::DumpStopContext(lldb_private::Stream * s, lldb_private::ExecutionContextScope * exe_scope, const lldb_private::Address &amp; addr, bool show_fullpaths, bool show_module, bool show_inlined_frames, bool show_function_arguments, bool show_function_name, bool show_inline_callsite_line_info = true) const'/>
<use f='llvm/lldb/source/Symbol/SymbolContext.cpp' l='146' u='c' c='_ZNK12lldb_private13SymbolContext15DumpStopContextEPNS_6StreamEPNS_21ExecutionContextScopeERKNS_7AddressEbbbbbb'/>
<use f='llvm/lldb/source/Symbol/Variable.cpp' l='190' u='c' c='_ZN12lldb_private8Variable15DumpDeclarationEPNS_6StreamEbb'/>
<use f='llvm/lldb/source/Target/StackFrame.cpp' l='1826' u='c' c='_ZN12lldb_private10StackFrame4DumpEPNS_6StreamEbb'/>
<use f='llvm/lldb/source/Target/Trace.cpp' l='125' u='c' c='_ZL17DumpSymbolContextRN12lldb_private6StreamERKNS_13SymbolContextERNS_6TargetERKNS_7AddressE'/>
<use f='llvm/lldb/tools/lldb-test/lldb-test.cpp' l='335' u='c' c='_ZN4opts10breakpointL9dumpStateERKN12lldb_private14BreakpointListERNS1_11LinePrinterE'/>
