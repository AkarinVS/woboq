<dec f='llvm/lld/MachO/SyntheticSections.h' l='366' type='uint32_t lld::macho::LazyBindingSection::encode(const lld::macho::DylibSymbol &amp; )'/>
<use f='llvm/lld/MachO/SyntheticSections.cpp' l='499' u='c' c='_ZN3lld5macho18LazyBindingSection16finalizeContentsEv'/>
<def f='llvm/lld/MachO/SyntheticSections.cpp' l='519' ll='543' type='uint32_t lld::macho::LazyBindingSection::encode(const lld::macho::DylibSymbol &amp; sym)'/>
<doc f='llvm/lld/MachO/SyntheticSections.cpp' l='513'>// Unlike the non-lazy binding section, the bind opcodes in this section aren&apos;t
// interpreted all at once. Rather, dyld will start interpreting opcodes at a
// given offset, typically only binding a single symbol before it finds a
// BIND_OPCODE_DONE terminator. As such, unlike in the non-lazy-binding case,
// we cannot encode just the differences between symbols; we have to emit the
// complete bind information for each symbol.</doc>
