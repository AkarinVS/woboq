<def f='llvm/llvm/include/llvm/MC/MCInstrDesc.h' l='303' type='bool llvm::MCInstrDesc::isIndirectBranch() const'/>
<use f='llvm/llvm/include/llvm/MC/MCInstrDesc.h' l='310' u='c' c='_ZNK4llvm11MCInstrDesc19isConditionalBranchEv'/>
<use f='llvm/llvm/include/llvm/MC/MCInstrDesc.h' l='318' u='c' c='_ZNK4llvm11MCInstrDesc21isUnconditionalBranchEv'/>
<doc f='llvm/llvm/include/llvm/MC/MCInstrDesc.h' l='301'>/// Return true if this is an indirect branch, such as a
  /// branch through a register.</doc>
<use f='llvm/llvm/include/llvm/MC/MCInstrAnalysis.h' l='50' u='c' c='_ZNK4llvm15MCInstrAnalysis16isIndirectBranchERKNS_6MCInstE'/>
<use f='llvm/llvm/lib/MC/MCInstrDesc.cpp' l='23' u='c' c='_ZNK4llvm11MCInstrDesc20mayAffectControlFlowERKNS_6MCInstERKNS_14MCRegisterInfoE'/>
<use f='llvm/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp' l='10654' u='c' c='_ZNK12_GLOBAL__N_112ARMAsmParser19isITBlockTerminatorERN4llvm6MCInstE'/>
<use f='llvm/llvm/lib/Target/RISCV/RISCVInstrInfo.cpp' l='296' u='c' c='_ZNK4llvm14RISCVInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<use f='llvm/llvm/lib/Target/RISCV/RISCVInstrInfo.cpp' l='312' u='c' c='_ZNK4llvm14RISCVInstrInfo13analyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb'/>
<use f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp' l='595' u='c' c='_ZNK12_GLOBAL__N_113X86AsmBackend9needAlignERKN4llvm6MCInstE'/>
<use f='llvm/llvm/tools/llvm-exegesis/lib/SerialSnippetGenerator.cpp' l='55' u='c' c='_ZN4llvm8exegesisL27computeAliasingInstructionsERKNS0_9LLVMStateEPKNS0_11InstructionEmRKNS_9BitVectorE'/>
<use f='llvm/llvm/tools/llvm-exegesis/llvm-exegesis.cpp' l='256' u='c' c='_ZN4llvm8exegesisL16generateSnippetsERKNS0_9LLVMStateEjRKNS_9BitVectorE'/>
