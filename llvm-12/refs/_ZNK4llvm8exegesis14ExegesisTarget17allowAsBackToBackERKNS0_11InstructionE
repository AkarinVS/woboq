<def f='llvm/llvm/tools/llvm-exegesis/lib/Target.h' l='131' ll='133' type='bool llvm::exegesis::ExegesisTarget::allowAsBackToBack(const llvm::exegesis::Instruction &amp; Instr) const'/>
<doc f='llvm/llvm/tools/llvm-exegesis/lib/Target.h' l='128'>// Returns true if this instruction is supported as a back-to-back
  // instructions.
  // FIXME: Eventually we should discover this dynamically.</doc>
<use f='llvm/llvm/tools/llvm-exegesis/lib/SerialSnippetGenerator.cpp' l='61' u='c' c='_ZN4llvm8exegesisL27computeAliasingInstructionsERKNS0_9LLVMStateEPKNS0_11InstructionEmRKNS_9BitVectorE'/>
<ovr f='llvm/llvm/tools/llvm-exegesis/lib/X86/Target.cpp' l='696' c='_ZNK4llvm8exegesis12_GLOBAL__N_117ExegesisX86Target17allowAsBackToBackERKNS0_11InstructionE'/>
<use f='llvm/llvm/unittests/tools/llvm-exegesis/X86/TargetTest.cpp' l='389' u='c' c='_ZN4llvm8exegesis12_GLOBAL__N_138Core2TargetTest_AllowAsBackToBack_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/tools/llvm-exegesis/X86/TargetTest.cpp' l='391' u='c' c='_ZN4llvm8exegesis12_GLOBAL__N_138Core2TargetTest_AllowAsBackToBack_Test8TestBodyEv'/>
