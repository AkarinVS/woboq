<def f='llvm/compiler-rt/lib/asan/asan_malloc_linux.cpp' l='236' macro='1' type='void * pvalloc(__sanitizer::uptr size)'/>
<def f='llvm/compiler-rt/lib/hwasan/hwasan_interceptors.cpp' l='199' macro='1' type='void * pvalloc(SIZE_T size)'/>
<def f='llvm/compiler-rt/lib/lsan/lsan_interceptors.cpp' l='179' macro='1' type='void * pvalloc(__sanitizer::uptr size)'/>
<use f='llvm/compiler-rt/lib/lsan/lsan_interceptors.cpp' l='184' u='a' c='__lsan::InitializeInterceptors'/>
<def f='llvm/compiler-rt/lib/memprof/memprof_malloc_linux.cpp' l='216' macro='1' type='void * pvalloc(__sanitizer::uptr size)'/>
<def f='llvm/compiler-rt/lib/msan/msan_interceptors.cpp' l='212' macro='1' type='void * pvalloc(SIZE_T size)'/>
<use f='llvm/compiler-rt/lib/msan/msan_interceptors.cpp' l='216' u='a' c='__msan::InitializeInterceptors'/>
<dec f='include/malloc.h' l='74' type='void * pvalloc(size_t __size)'/>
<doc f='include/malloc.h' l='72'>/* Equivalent to valloc(minimum-page-that-holds(n)), that is, round up
   __size to nearest pagesize. */</doc>
<def f='llvm/compiler-rt/lib/scudo/scudo_malloc.cpp' l='62' ll='64' macro='1' type='void * pvalloc(size_t size)'/>
<def f='llvm/compiler-rt/lib/scudo/standalone/wrappers_c.inc' l='107' ll='120' macro='1' type='void * pvalloc(size_t size)'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='812' macro='1' type='void * pvalloc(__sanitizer::uptr sz)'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='821' u='a' c='__tsan::InitializeInterceptors'/>
