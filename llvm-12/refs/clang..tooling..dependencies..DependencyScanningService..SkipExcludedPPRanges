<use f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningService.h' l='59' u='r' c='_ZNK5clang7tooling12dependencies25DependencyScanningService23canSkipExcludedPPRangesEv'/>
<dec f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningService.h' l='72' type='const bool'/>
<use f='llvm/clang/lib/Tooling/DependencyScanning/DependencyScanningService.cpp' l='19' u='w' c='_ZN5clang7tooling12dependencies25DependencyScanningServiceC1ENS1_12ScanningModeENS1_20ScanningOutputFormatEbb'/>
<offset>72</offset>
<doc f='llvm/clang/include/clang/Tooling/DependencyScanning/DependencyScanningService.h' l='69'>/// Set to true to use the preprocessor optimization that skips excluded PP
  /// ranges by bumping the buffer pointer in the lexer instead of lexing the
  /// tokens in the range until reaching the corresponding directive.</doc>
