<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='106' ll='118'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='115' c='_ZNK4llvm11InstrAspecteqERKS0_'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='1081' c='_ZN4llvm13LegalizerInfo9setActionERKNS_11InstrAspectENS_15LegalizeActions14LegalizeActionE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='1299' c='_ZNK4llvm13LegalizerInfo15getAspectActionERKNS_11InstrAspectE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='1450' c='_ZNK4llvm13LegalizerInfo21findScalarLegalActionERKNS_11InstrAspectE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='1454' c='_ZNK4llvm13LegalizerInfo21findVectorLegalActionERKNS_11InstrAspectE'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='103'>/// Legalization is decided based on an instruction&apos;s opcode, which type slot
/// we&apos;re considering, and what the existing type is. These aspects are gathered
/// together for convenience in the InstrAspect class.</doc>
<mbr r='llvm::InstrAspect::Opcode' o='0' t='unsigned int'/>
<mbr r='llvm::InstrAspect::Idx' o='32' t='unsigned int'/>
<mbr r='llvm::InstrAspect::Type' o='64' t='llvm::LLT'/>
<fun r='_ZN4llvm11InstrAspectC1EjNS_3LLTE'/>
<fun r='_ZN4llvm11InstrAspectC1EjjNS_3LLTE'/>
<fun r='_ZNK4llvm11InstrAspecteqERKS0_'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerInfo.cpp' l='389' c='_ZNK4llvm13LegalizerInfo15getAspectActionERKNS_11InstrAspectE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerInfo.cpp' l='623' c='_ZNK4llvm13LegalizerInfo21findScalarLegalActionERKNS_11InstrAspectE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerInfo.cpp' l='652' c='_ZNK4llvm13LegalizerInfo21findVectorLegalActionERKNS_11InstrAspectE'/>
<size>16</size>
