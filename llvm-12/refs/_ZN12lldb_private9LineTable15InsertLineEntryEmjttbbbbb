<dec f='llvm/lldb/include/lldb/Symbol/LineTable.h' l='70' type='void lldb_private::LineTable::InsertLineEntry(lldb::addr_t file_addr, uint32_t line, uint16_t column, uint16_t file_idx, bool is_start_of_statement, bool is_start_of_basic_block, bool is_prologue_end, bool is_epilogue_begin, bool is_terminal_entry)'/>
<doc f='llvm/lldb/include/lldb/Symbol/LineTable.h' l='57'>/// Adds a new line entry to this line table.
  ///
  /// All line entries are maintained in file address order.
  ///
  /// \param[in] line_entry
  ///     A const reference to a new line_entry to add to this line
  ///     table.
  ///
  /// \see Address::DumpStyle
  //  void
  //  AddLineEntry (const LineEntry&amp; line_entry);

  // Called when you can&apos;t guarantee the addresses are in increasing order</doc>
<def f='llvm/lldb/source/Symbol/LineTable.cpp' l='39' ll='59' type='void lldb_private::LineTable::InsertLineEntry(lldb::addr_t file_addr, uint32_t line, uint16_t column, uint16_t file_idx, bool is_start_of_statement, bool is_start_of_basic_block, bool is_prologue_end, bool is_epilogue_begin, bool is_terminal_entry)'/>
