<dec f='llvm/llvm/include/llvm/Transforms/Utils/CodeExtractor.h' l='228' type='llvm::CallInst * llvm::CodeExtractor::emitCallAndSwitchStatement(llvm::Function * newFunction, llvm::BasicBlock * newHeader, llvm::CodeExtractor::ValueSet &amp; inputs, llvm::CodeExtractor::ValueSet &amp; outputs)'/>
<def f='llvm/llvm/lib/Transforms/Utils/CodeExtractor.cpp' l='1119' ll='1382' type='llvm::CallInst * llvm::CodeExtractor::emitCallAndSwitchStatement(llvm::Function * newFunction, llvm::BasicBlock * codeReplacer, llvm::CodeExtractor::ValueSet &amp; inputs, llvm::CodeExtractor::ValueSet &amp; outputs)'/>
<use f='llvm/llvm/lib/Transforms/Utils/CodeExtractor.cpp' l='1715' u='c' c='_ZN4llvm13CodeExtractor17extractCodeRegionERKNS_26CodeExtractorAnalysisCacheE'/>
<doc f='llvm/llvm/lib/Transforms/Utils/CodeExtractor.cpp' l='1116'>/// emitCallAndSwitchStatement - This method sets up the caller side by adding
/// the call instruction, splitting any PHI nodes in the header block as
/// necessary.</doc>
