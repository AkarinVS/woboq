<inh f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='721' c='_ZNK4llvm18TargetRegisterInfo18getPointerRegClassERKNS_15MachineFunctionEj'/>
<def f='llvm/llvm/lib/Target/SystemZ/SystemZRegisterInfo.h' l='49' ll='53' type='const llvm::TargetRegisterClass * llvm::SystemZRegisterInfo::getPointerRegClass(const llvm::MachineFunction &amp; MF, unsigned int Kind = 0) const'/>
<doc f='llvm/llvm/lib/Target/SystemZ/SystemZRegisterInfo.h' l='46'>/// getPointerRegClass - Return the register class to use to hold pointers.
  /// This is currently only used by LOAD_STACK_GUARD, which requires a non-%r0
  /// register, hence ADDR64.</doc>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp' l='1715' u='c' c='_ZN12_GLOBAL__N_119SystemZDAGToDAGISel28SelectInlineAsmMemoryOperandERKN4llvm7SDValueEjRSt6vectorIS2_SaIS2_EE'/>
