<dec f='llvm/lldb/include/lldb/Host/ProcessLaunchInfo.h' l='112' type='static bool lldb_private::ProcessLaunchInfo::NoOpMonitorCallback(lldb::pid_t pid, bool exited, int signal, int status)'/>
<doc f='llvm/lldb/include/lldb/Host/ProcessLaunchInfo.h' l='109'>/// A Monitor callback which does not take any action on process events. Use
  /// this if you don&apos;t need to take any particular action when the process
  /// terminates, but you still need to reap it.</doc>
<def f='llvm/lldb/source/Host/common/ProcessLaunchInfo.cpp' l='182' ll='187' type='static bool lldb_private::ProcessLaunchInfo::NoOpMonitorCallback(lldb::pid_t pid, bool exited, int signal, int status)'/>
<use f='llvm/lldb/source/Plugins/Platform/MacOSX/PlatformDarwin.cpp' l='1244' u='a' c='_ZN14PlatformDarwin12DebugProcessERN12lldb_private17ProcessLaunchInfoERNS0_8DebuggerEPNS0_6TargetERNS0_6StatusE'/>
<use f='llvm/lldb/unittests/tools/lldb-server/tests/TestClient.cpp' l='105' u='a' c='_ZN10llgs_tests10TestClient12launchCustomEN4llvm9StringRefENS1_8ArrayRefIS2_EES4_'/>
