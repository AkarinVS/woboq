<dec f='llvm/llvm/include/llvm/Analysis/Loads.h' l='52' type='bool llvm::isDereferenceableAndAlignedPointer(const llvm::Value * V, llvm::Align Alignment, const llvm::APInt &amp; Size, const llvm::DataLayout &amp; DL, const llvm::Instruction * CtxI = nullptr, const llvm::DominatorTree * DT = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Analysis/Loads.h' l='48'>/// Returns true if V is always dereferenceable for Size byte with alignment
/// greater or equal than requested. If the context instruction is specified
/// performs context-sensitive analysis and returns true if the pointer is
/// dereferenceable at the specified instruction.</doc>
<def f='llvm/llvm/lib/Analysis/Loads.cpp' l='160' ll='173' type='bool llvm::isDereferenceableAndAlignedPointer(const llvm::Value * V, llvm::Align Alignment, const llvm::APInt &amp; Size, const llvm::DataLayout &amp; DL, const llvm::Instruction * CtxI = nullptr, const llvm::DominatorTree * DT = nullptr)'/>
<use f='llvm/llvm/lib/Analysis/Loads.cpp' l='194' u='c' c='_ZN4llvm34isDereferenceableAndAlignedPointerEPKNS_5ValueEPNS_4TypeENS_10MaybeAlignERKNS_10DataLayoutEPKNS_11InstructionEPKNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Analysis/Loads.cpp' l='251' u='c' c='_ZN4llvm33isDereferenceableAndAlignedInLoopEPNS_8LoadInstEPNS_4LoopERNS_15ScalarEvolutionERNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Analysis/Loads.cpp' l='283' u='c' c='_ZN4llvm33isDereferenceableAndAlignedInLoopEPNS_8LoadInstEPNS_4LoopERNS_15ScalarEvolutionERNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Analysis/Loads.cpp' l='304' u='c' c='_ZN4llvm27isSafeToLoadUnconditionallyEPNS_5ValueENS_5AlignERNS_5APIntERKNS_10DataLayoutEPNS_11InstructionEPKNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Analysis/Loads.cpp' l='560' u='c' c='_ZN4llvm25canReplacePointersIfEqualEPNS_5ValueES1_RKNS_10DataLayoutEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/CodeGen/MachineOperand.cpp' l='983' u='c' c='_ZNK4llvm18MachinePointerInfo17isDereferenceableEjRNS_11LLVMContextERKNS_10DataLayoutE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='166' u='c' c='_ZL30isDereferenceableForAllocaSizePKN4llvm5ValueEPKNS_10AllocaInstERKNS_10DataLayoutE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp' l='894' u='c' c='_ZN4llvm13MemCpyOptPass20performCallSlotOptznEPNS_11InstructionES2_PNS_5ValueES4_mNS_5AlignEPNS_8CallInstE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='157' u='c' c='_ZL20canTransformToMemCmpPN4llvm8CallInstEPNS_5ValueEmRKNS_10DataLayoutE'/>
