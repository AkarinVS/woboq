<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='425' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildDynStackAlloc(const llvm::DstOp &amp; Res, const llvm::SrcOp &amp; Size, llvm::Align Alignment)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='417'>/// Build and insert \p Res = G_DYN_STACKALLOC \p Size, \p Align
  ///
  /// G_DYN_STACKALLOC does a dynamic stack allocation and writes the address of
  /// the allocated memory into \p Res.
  /// \pre setBasicBlock or setMI must have been called.
  /// \pre \p Res must be a generic virtual register with pointer type.
  ///
  /// \return a MachineInstrBuilder for the newly created instruction.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp' l='2600' u='c' c='_ZN4llvm12IRTranslator15translateAllocaERKNS_4UserERNS_16MachineIRBuilderE'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='126' ll='135' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildDynStackAlloc(const llvm::DstOp &amp; Res, const llvm::SrcOp &amp; Size, llvm::Align Alignment)'/>
