<dec f='llvm/llvm/include/llvm/Analysis/CmpInstAnalysis.h' l='64' type='bool llvm::decomposeBitTestICmp(llvm::Value * LHS, llvm::Value * RHS, CmpInst::Predicate &amp; Pred, llvm::Value *&amp; X, llvm::APInt &amp; Mask, bool LookThroughTrunc = true)'/>
<def f='llvm/llvm/lib/Analysis/CmpInstAnalysis.cpp' l='66' ll='143' type='bool llvm::decomposeBitTestICmp(llvm::Value * LHS, llvm::Value * RHS, CmpInst::Predicate &amp; Pred, llvm::Value *&amp; X, llvm::APInt &amp; Mask, bool LookThruTrunc = true)'/>
<doc f='llvm/llvm/include/llvm/Analysis/CmpInstAnalysis.h' l='61'>/// Decompose an icmp into the form ((X &amp; Mask) pred 0) if possible. The
  /// returned predicate is either == or !=. Returns false if decomposition
  /// fails.</doc>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='4060' u='c' c='_ZL28simplifySelectWithFakeICmpEqPN4llvm5ValueES1_NS_7CmpInst9PredicateES1_S1_'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='252' u='c' c='_ZL20decomposeBitTestICmpPN4llvm5ValueES1_RNS_7CmpInst9PredicateERS1_S5_S5_'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='906' u='c' c='_ZL25foldSignedTruncationCheckPN4llvm8ICmpInstES1_RNS_11InstructionERNS_9IRBuilderINS_12TargetFolderENS_25IRBuilderCallbackInserterEEE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='155' u='c' c='_ZL17foldSelectICmpAndRN4llvm10SelectInstEPNS_8ICmpInstERNS_9IRBuilderINS_12TargetFolderENS_25IRBuilderCallbackInserterEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopIdiomRecognize.cpp' l='2013' u='c' c='_ZL28detectShiftUntilBitTestIdiomPN4llvm4LoopERPNS_5ValueES4_S4_S4_RPNS_11InstructionE'/>
