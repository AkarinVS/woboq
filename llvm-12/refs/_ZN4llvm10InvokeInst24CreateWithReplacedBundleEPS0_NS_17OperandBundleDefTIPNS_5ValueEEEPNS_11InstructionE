<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='3833' type='static llvm::InvokeInst * llvm::InvokeInst::CreateWithReplacedBundle(llvm::InvokeInst * II, llvm::OperandBundleDef Bundles, llvm::Instruction * InsertPt = nullptr)'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='3827'>/// Create a clone of \p II with a different set of operand bundles and
  /// insert it before \p InsertPt.
  ///
  /// The returned invoke instruction is identical to \p II in every way except
  /// that the operand bundle for the new instruction is set to the operand
  /// bundle in \p Bundle.</doc>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='833' ll='844' type='static llvm::InvokeInst * llvm::InvokeInst::CreateWithReplacedBundle(llvm::InvokeInst * II, llvm::OperandBundleDef OpB, llvm::Instruction * InsertPt = nullptr)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='1650' u='c' c='_ZN4llvm16InstCombinerImpl13visitCallInstERNS_8CallInstE'/>
