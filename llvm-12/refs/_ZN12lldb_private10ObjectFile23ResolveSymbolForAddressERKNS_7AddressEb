<def f='llvm/lldb/include/lldb/Symbol/ObjectFile.h' l='347' ll='357' type='lldb_private::Symbol * lldb_private::ObjectFile::ResolveSymbolForAddress(const lldb_private::Address &amp; so_addr, bool verify_unique)'/>
<doc f='llvm/lldb/include/lldb/Symbol/ObjectFile.h' l='336'>/// Appends a Symbol for the specified so_addr to the symbol table.
  ///
  /// If verify_unique is false, the symbol table is not searched to determine
  /// if a Symbol found at this address has already been added to the symbol
  /// table.  When verify_unique is true, this method resolves the Symbol as
  /// the first match in the SymbolTable and appends a Symbol only if
  /// required/found.
  ///
  /// \return
  ///     The resolved symbol or nullptr.  Returns nullptr if a
  ///     a Symbol could not be found for the specified so_addr.</doc>
<use f='llvm/lldb/source/Core/Module.cpp' l='511' u='c' c='_ZN12lldb_private6Module30ResolveSymbolContextForAddressERKNS_7AddressEN4lldb17SymbolContextItemERNS_13SymbolContextEb'/>
