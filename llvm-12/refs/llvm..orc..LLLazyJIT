<inh f='llvm/llvm/include/llvm/ExecutionEngine/Orc/LLJIT.h' l='37' c='llvm::orc::LLJIT'/>
<def f='llvm/llvm/include/llvm/ExecutionEngine/Orc/LLJIT.h' l='220' ll='249'/>
<use f='llvm/llvm/include/llvm/ExecutionEngine/Orc/LLJIT.h' l='386'/>
<use f='llvm/llvm/include/llvm/ExecutionEngine/Orc/LLJIT.h' l='436'/>
<size>584</size>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/Orc/LLJIT.h' l='218'>/// An extended version of LLJIT that supports lazy function-at-a-time
/// compilation of LLVM IR.</doc>
<fun r='_ZN4llvm3orc9LLLazyJIT20setPartitionFunctionESt8functionIFNS_8OptionalISt3setIPKNS_11GlobalValueESt4lessIS7_ESaIS7_EEEESB_EE'/>
<fun r='_ZN4llvm3orc9LLLazyJIT23getCompileOnDemandLayerEv'/>
<fun r='_ZN4llvm3orc9LLLazyJIT15addLazyIRModuleERNS0_8JITDylibENS0_16ThreadSafeModuleE'/>
<fun r='_ZN4llvm3orc9LLLazyJIT15addLazyIRModuleENS0_16ThreadSafeModuleE'/>
<fun r='_ZN4llvm3orc9LLLazyJITC1ERNS0_21LLLazyJITBuilderStateERNS_5ErrorE'/>
<mbr r='llvm::orc::LLLazyJIT::LCTMgr' o='4544' t='std::unique_ptr&lt;LazyCallThroughManager&gt;'/>
<mbr r='llvm::orc::LLLazyJIT::CODLayer' o='4608' t='std::unique_ptr&lt;CompileOnDemandLayer&gt;'/>
