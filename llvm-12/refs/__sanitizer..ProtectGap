<dec f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='146' type='void __sanitizer::ProtectGap(__sanitizer::uptr addr, __sanitizer::uptr size, __sanitizer::uptr zero_base_shadow_start, __sanitizer::uptr zero_base_max_shadow_start)'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='143'>// Protect size bytes of memory starting at addr. Also try to protect
// several pages at the start of the address space as specified by
// zero_base_shadow_start, at most up to the size or zero_base_max_shadow_start.</doc>
<use f='llvm/compiler-rt/lib/asan/asan_shadow_setup.cpp' l='42' u='c' c='__asan::ProtectGap'/>
<use f='llvm/compiler-rt/lib/hwasan/hwasan_linux.cpp' l='66' u='c' c='__hwasan::ProtectGap'/>
<use f='llvm/compiler-rt/lib/memprof/memprof_shadow_setup.cpp' l='37' u='c' c='__memprof::ProtectGap'/>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common_libcdep.cpp' l='164' ll='191' type='void __sanitizer::ProtectGap(__sanitizer::uptr addr, __sanitizer::uptr size, __sanitizer::uptr zero_base_shadow_start, __sanitizer::uptr zero_base_max_shadow_start)'/>
