<dec f='llvm/clang/include/clang/Parse/Parser.h' l='1866' type='clang::ExprResult clang::Parser::ParseFoldExpression(clang::ExprResult LHS, clang::BalancedDelimiterTracker &amp; T)'/>
<use f='llvm/clang/lib/Parse/ParseExpr.cpp' l='3017' u='c' c='_ZN5clang6Parser20ParseParenExpressionERNS0_16ParenParseOptionEbbRNS_9OpaquePtrINS_8QualTypeEEERNS_14SourceLocationE'/>
<use f='llvm/clang/lib/Parse/ParseExpr.cpp' l='3031' u='c' c='_ZN5clang6Parser20ParseParenExpressionERNS0_16ParenParseOptionEbbRNS_9OpaquePtrINS_8QualTypeEEERNS_14SourceLocationE'/>
<use f='llvm/clang/lib/Parse/ParseExpr.cpp' l='3083' u='c' c='_ZN5clang6Parser20ParseParenExpressionERNS0_16ParenParseOptionEbbRNS_9OpaquePtrINS_8QualTypeEEERNS_14SourceLocationE'/>
<def f='llvm/clang/lib/Parse/ParseExpr.cpp' l='3255' ll='3299' type='clang::ExprResult clang::Parser::ParseFoldExpression(clang::ExprResult LHS, clang::BalancedDelimiterTracker &amp; T)'/>
<doc f='llvm/clang/lib/Parse/ParseExpr.cpp' l='3247'>/// Parse A C++1z fold-expression after the opening paren and optional
/// left-hand-side expression.
///
/// \verbatim
///   fold-expression:
///       ( cast-expression fold-operator ... )
///       ( ... fold-operator cast-expression )
///       ( cast-expression fold-operator ... fold-operator cast-expression )</doc>
