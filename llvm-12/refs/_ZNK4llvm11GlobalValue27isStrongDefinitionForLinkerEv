<def f='llvm/llvm/include/llvm/IR/GlobalValue.h' l='547' ll='549' type='bool llvm::GlobalValue::isStrongDefinitionForLinker() const'/>
<use f='llvm/llvm/include/llvm/IR/GlobalVariable.h' l='125' u='c' c='_ZNK4llvm14GlobalVariable20hasUniqueInitializerEv'/>
<doc f='llvm/llvm/include/llvm/IR/GlobalValue.h' l='541'>/// Returns true if this global&apos;s definition will be the one chosen by the
  /// linker.
  ///
  /// NB! Ideally this should not be used at the IR level at all.  If you&apos;re
  /// interested in optimization constraints implied by the linker&apos;s ability to
  /// choose an implementation, prefer using \c hasExactDefinition.</doc>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='955' u='c' c='_ZL20shouldAssumeDSOLocalRKN5clang7CodeGen13CodeGenModuleEPN4llvm11GlobalValueE'/>
<use f='llvm/llvm/lib/IR/Globals.cpp' l='245' u='c' c='_ZNK4llvm12GlobalObject20canIncreaseAlignmentEv'/>
<use f='llvm/llvm/lib/IR/Value.cpp' l='816' u='c' c='_ZNK4llvm5Value19getPointerAlignmentERKNS_10DataLayoutE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='2522' u='c' c='_ZNK4llvm17ARMTargetLowering9LowerCallERNS_14TargetLowering16CallLoweringInfoERNS_15SmallVectorImplINS_7SDValueEEE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='4445' u='c' c='_ZL17callsShareTOCBasePKN4llvm8FunctionENS_7SDValueERKNS_13TargetMachineE'/>
<use f='llvm/llvm/lib/Target/TargetMachine.cpp' l='149' u='c' c='_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE'/>
