<dec f='llvm/clang/include/clang/Format/Format.h' l='670' type='2'/>
<doc f='llvm/clang/include/clang/Format/Format.h' l='663'>/// Merge lambda into a single line if argument of a function.
    /// \code
    ///   auto lambda = [](int a) {
    ///       return a;
    ///   };
    ///   sort(a.begin(), a.end(), ()[] { return x &lt; y; })
    /// \endcode</doc>
<use f='llvm/clang/lib/Format/Format.cpp' l='163' u='r' c='_ZN4llvm4yaml23ScalarEnumerationTraitsIN5clang6format11FormatStyle16ShortLambdaStyleEvE11enumerationERNS0_2IOERS5_'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='3479' u='r' c='_ZN5clang6formatL24isItAInlineLambdaAllowedERKNS0_11FormatTokenENS0_11FormatStyle16ShortLambdaStyleE'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='3557' c='_ZN5clang6format14TokenAnnotator15mustBreakBeforeERKNS0_13AnnotatedLineERKNS0_11FormatTokenE'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='3678' u='r' c='_ZN5clang6format14TokenAnnotator15mustBreakBeforeERKNS0_13AnnotatedLineERKNS0_11FormatTokenE'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='3682' u='r' c='_ZN5clang6format14TokenAnnotator15mustBreakBeforeERKNS0_13AnnotatedLineERKNS0_11FormatTokenE'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='16934' u='r' c='_ZN5clang6format12_GLOBAL__N_130FormatTest_FormatsLambdas_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='17036' u='r' c='_ZN5clang6format12_GLOBAL__N_130FormatTest_FormatsLambdas_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTestJS.cpp' l='1195' u='r' c='_ZN5clang6format36FormatTestJS_ArrowFunctionStyle_Test8TestBodyEv'/>
