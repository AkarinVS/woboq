<dec f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.h' l='121' type='__tsan::SyncVar * __tsan::MetaMap::GetOrCreateAndLock(__tsan::ThreadState * thr, __sanitizer::uptr pc, __sanitizer::uptr addr, bool write_lock)'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interface_atomic.cpp' l='271' u='c' c='_ZL11AtomicStorePN6__tsan11ThreadStateEmPVT_S2_NS_6morderE'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interface_atomic.cpp' l='285' u='c' c='_ZL9AtomicRMWPN6__tsan11ThreadStateEmPVT_S2_NS_6morderE'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interface_atomic.cpp' l='410' u='c' c='_ZL9AtomicCASPN6__tsan11ThreadStateEmPVT_PS2_S2_NS_6morderES6_'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='73' u='c' c='__tsan::MutexCreate'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='145' u='c' c='__tsan::MutexPreLock'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='167' u='c' c='__tsan::MutexPostLock'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='217' u='c' c='__tsan::MutexUnlock'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='259' u='c' c='__tsan::MutexPreReadLock'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='273' u='c' c='__tsan::MutexPostReadLock'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='313' u='c' c='__tsan::MutexReadUnlock'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='344' u='c' c='__tsan::MutexReadOrWriteUnlock'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='389' u='c' c='__tsan::MutexRepair'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='397' u='c' c='__tsan::MutexInvalidAccess'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='438' u='c' c='__tsan::ReleaseStoreAcquire'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='450' u='c' c='__tsan::Release'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_rtl_mutex.cpp' l='462' u='c' c='__tsan::ReleaseStore'/>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_sync.cpp' l='196' ll='199' type='__tsan::SyncVar * __tsan::MetaMap::GetOrCreateAndLock(__tsan::ThreadState * thr, __sanitizer::uptr pc, __sanitizer::uptr addr, bool write_lock)'/>
