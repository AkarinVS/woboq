<dec f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationPlanner.h' l='325' type='void llvm::LoopVectorizationPlanner::adjustRecipesForInLoopReductions(llvm::VPlanPtr &amp; Plan, llvm::VPRecipeBuilder &amp; RecipeBuilder)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8803' u='c' c='_ZN4llvm24LoopVectorizationPlanner23buildVPlanWithVPRecipesERNS_7VFRangeERNS_15SmallPtrSetImplIPNS_11InstructionEEERKNS_8DenseMapIS5_S5_NS_12DenseMapI16584774'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8873' ll='8928' type='void llvm::LoopVectorizationPlanner::adjustRecipesForInLoopReductions(llvm::VPlanPtr &amp; Plan, llvm::VPRecipeBuilder &amp; RecipeBuilder)'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8869'>// Adjust the recipes for any inloop reductions. The chain of instructions
// leading from the loop exit instr to the phi need to be converted to
// reductions, with one operand being vector and the other being the scalar
// reduction chain.</doc>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationPlanner.h' l='321'>/// Adjust the recipes for any inloop reductions. The chain of instructions
  /// leading from the loop exit instr to the phi need to be converted to
  /// reductions, with one operand being vector and the other being the scalar
  /// reduction chain.</doc>
