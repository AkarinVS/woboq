<dec f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='485' type='bool llvm::GVNHoist::allGepOperandsAvailable(const llvm::Instruction * I, const llvm::BasicBlock * HoistPt) const'/>
<def f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='927' ll='944' type='bool llvm::GVNHoist::allGepOperandsAvailable(const llvm::Instruction * I, const llvm::BasicBlock * HoistPt) const'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='934' u='c' c='_ZNK4llvm8GVNHoist23allGepOperandsAvailableEPKNS_11InstructionEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='1078' u='c' c='_ZNK4llvm8GVNHoist24makeGepOperandsAvailableEPNS_11InstructionEPNS_10BasicBlockERKNS_11SmallVectorIS2_Lj4EEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='1086' u='c' c='_ZNK4llvm8GVNHoist24makeGepOperandsAvailableEPNS_11InstructionEPNS_10BasicBlockERKNS_11SmallVectorIS2_Lj4EEE'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='484'>// Same as allOperandsAvailable with recursive check for GEP operands.</doc>
