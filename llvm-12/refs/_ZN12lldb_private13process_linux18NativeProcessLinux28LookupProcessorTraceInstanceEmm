<dec f='llvm/lldb/source/Plugins/Process/Linux/NativeProcessLinux.h' l='234' type='llvm::Expected&lt;ProcessorTraceMonitor &amp;&gt; lldb_private::process_linux::NativeProcessLinux::LookupProcessorTraceInstance(lldb::user_id_t traceid, lldb::tid_t thread)'/>
<def f='llvm/lldb/source/Plugins/Process/Linux/NativeProcessLinux.cpp' l='1929' ll='1946' type='llvm::Expected&lt;ProcessorTraceMonitor &amp;&gt; lldb_private::process_linux::NativeProcessLinux::LookupProcessorTraceInstance(lldb::user_id_t traceid, lldb::tid_t thread)'/>
<use f='llvm/lldb/source/Plugins/Process/Linux/NativeProcessLinux.cpp' l='1958' u='c' c='_ZN12lldb_private13process_linux18NativeProcessLinux11GetMetaDataEmmRN4llvm15MutableArrayRefIhEEm'/>
<use f='llvm/lldb/source/Plugins/Process/Linux/NativeProcessLinux.cpp' l='1976' u='c' c='_ZN12lldb_private13process_linux18NativeProcessLinux7GetDataEmmRN4llvm15MutableArrayRefIhEEm'/>
<use f='llvm/lldb/source/Plugins/Process/Linux/NativeProcessLinux.cpp' l='1998' u='c' c='_ZN12lldb_private13process_linux18NativeProcessLinux14GetTraceConfigEmRNS_12TraceOptionsE'/>
<doc f='llvm/lldb/source/Plugins/Process/Linux/NativeProcessLinux.h' l='226'>// The below function as the name suggests, looks up a ProcessorTrace
  // instance from the m_processor_trace_monitor map. In the case of
  // process tracing where the traceid passed would map to the complete
  // process, it is mandatory to provide a threadid to obtain a trace
  // instance (since ProcessorTrace is tied to a thread). In the other
  // scenario that an individual thread is being traced, just the traceid
  // is sufficient to obtain the actual ProcessorTrace instance.</doc>
