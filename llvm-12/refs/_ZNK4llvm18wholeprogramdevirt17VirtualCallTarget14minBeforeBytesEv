<def f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='147' type='uint64_t llvm::wholeprogramdevirt::VirtualCallTarget::minBeforeBytes() const'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='159' u='c' c='_ZNK4llvm18wholeprogramdevirt17VirtualCallTarget20allocatedBeforeBytesEv'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='171' u='c' c='_ZN4llvm18wholeprogramdevirt17VirtualCallTarget12setBeforeBitEm'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='186' u='c' c='_ZN4llvm18wholeprogramdevirt17VirtualCallTarget14setBeforeBytesEmh'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='188' u='c' c='_ZN4llvm18wholeprogramdevirt17VirtualCallTarget14setBeforeBytesEmh'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='143'>// The minimum byte offset before the address point. This covers the bytes in
  // the vtable object before the address point (e.g. RTTI, access-to-top,
  // vtables for other base classes) and is equal to the offset from the start
  // of the vtable object to the address point.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp' l='194' u='c' c='_ZN4llvm18wholeprogramdevirt16findLowestOffsetENS_8ArrayRefINS0_17VirtualCallTargetEEEbm'/>
<use f='llvm/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp' l='222' u='c' c='_ZN4llvm18wholeprogramdevirt16findLowestOffsetENS_8ArrayRefINS0_17VirtualCallTargetEEEbm'/>
