<dec f='llvm/clang/lib/Driver/ToolChains/Hurd.h' l='40' type='std::string clang::driver::toolchains::Hurd::getMultiarchTriple(const clang::driver::Driver &amp; D, const llvm::Triple &amp; TargetTriple, llvm::StringRef SysRoot) const'/>
<inh f='llvm/clang/lib/Driver/ToolChains/Gnu.h' l='313' c='_ZNK5clang6driver10toolchains11Generic_GCC18getMultiarchTripleB5cxx11ERKNS0_6DriverERKN4llvm6TripleENS6_9StringRefE'/>
<def f='llvm/clang/lib/Driver/ToolChains/Hurd.cpp' l='30' ll='45' type='std::string clang::driver::toolchains::Hurd::getMultiarchTriple(const clang::driver::Driver &amp; D, const llvm::Triple &amp; TargetTriple, llvm::StringRef SysRoot) const'/>
<use f='llvm/clang/lib/Driver/ToolChains/Hurd.cpp' l='82' u='c' c='_ZN5clang6driver10toolchains4HurdC1ERKNS0_6DriverERKN4llvm6TripleERKNS6_3opt7ArgListE'/>
<doc f='llvm/clang/lib/Driver/ToolChains/Hurd.cpp' l='24'>/// Get our best guess at the multiarch triple for a target.
///
/// Debian-based systems are starting to use a multiarch setup where they use
/// a target-triple directory in the library and header search paths.
/// Unfortunately, this triple does not align with the vanilla target triple,
/// so we provide a rough mapping here.</doc>
