<def f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='1194' ll='1196' type='llvm::LazyCallGraph::RefSCC * llvm::LazyCallGraph::createRefSCC(Ts &amp;&amp;... Args)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='1191'>/// Allocates a RefSCC and constructs it using the graph allocator.
  ///
  /// The arguments are forwarded to the constructor.</doc>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1370' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC21removeInternalRefEdgeERNS0_4NodeENS_8ArrayRefIPS2_EE'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1697' u='c' c='_ZN4llvm13LazyCallGraph16addSplitFunctionERNS_8FunctionES2_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1756' u='c' c='_ZN4llvm13LazyCallGraph29addSplitRefRecursiveFunctionsERNS_8FunctionENS_8ArrayRefIPS1_EE'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1972' u='c' c='_ZN4llvm13LazyCallGraph12buildRefSCCsEv'/>
