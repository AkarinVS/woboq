<dec f='llvm/llvm/include/llvm/CodeGen/MachineBasicBlock.h' l='690' type='llvm::MachineBasicBlock * llvm::MachineBasicBlock::splitAt(llvm::MachineInstr &amp; SplitInst, bool UpdateLiveIns = true, llvm::LiveIntervals * LIS = nullptr)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineBasicBlock.h' l='682'>/// Split a basic block into 2 pieces at \p SplitPoint. A new block will be
  /// inserted after this block, and all instructions after \p SplitInst moved
  /// to it (\p SplitInst will be in the original block). If \p LIS is provided,
  /// LiveIntervals will be appropriately updated. \return the newly inserted
  /// block.
  ///
  /// If \p UpdateLiveIns is true, this will ensure the live ins list is
  /// accurate, including for physreg uses/defs in the original block.</doc>
<def f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='947' ll='986' type='llvm::MachineBasicBlock * llvm::MachineBasicBlock::splitAt(llvm::MachineInstr &amp; MI, bool UpdateLiveIns = true, llvm::LiveIntervals * LIS = nullptr)'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIISelLowering.cpp' l='3310' u='c' c='_ZNK4llvm16SITargetLowering14splitKillBlockERNS_12MachineInstrEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInsertSkips.cpp' l='195' u='c' c='_ZL10splitBlockRN4llvm17MachineBasicBlockERNS_12MachineInstrEPNS_20MachineDominatorTreeE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp' l='496' u='c' c='_ZN12_GLOBAL__N_118SILowerControlFlow9emitEndCfERN4llvm12MachineInstrE'/>
<use f='llvm/llvm/unittests/MI/LiveIntervalTest.cpp' l='162' u='c' c='_ZN12_GLOBAL__N_111testSplitAtERN4llvm15MachineFunctionERNS0_13LiveIntervalsEjj'/>
