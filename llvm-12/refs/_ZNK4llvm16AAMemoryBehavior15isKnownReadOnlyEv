<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3253' type='bool llvm::AAMemoryBehavior::isKnownReadOnly() const'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3251'>/// Return true if we know that the underlying value is not accessed
  /// (=written) in its respective scope.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='2818' u='c' c='_ZN12_GLOBAL__N_117AAIsDeadValueImpl23isAssumedSideEffectFreeERN4llvm10AttributorEPNS1_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='4333' u='c' c='_ZN12_GLOBAL__N_115AANoCaptureImpl10updateImplERN4llvm10AttributorE'/>
