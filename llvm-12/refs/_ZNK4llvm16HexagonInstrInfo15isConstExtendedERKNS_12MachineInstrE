<dec f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='351' type='bool llvm::HexagonInstrInfo::isConstExtended(const llvm::MachineInstr &amp; MI) const'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp' l='1051' u='c' c='_ZNK12_GLOBAL__N_121HexagonConstExtenders14getOffsetRangeENS0_8RegisterERKN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp' l='1228' u='c' c='_ZN12_GLOBAL__N_121HexagonConstExtenders12collectInstrERN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonGenInsert.cpp' l='1078' u='c' c='_ZN12_GLOBAL__N_116HexagonGenInsert16pruneCoveredSetsEj'/>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='2058' ll='2099' type='bool llvm::HexagonInstrInfo::isConstExtended(const llvm::MachineInstr &amp; MI) const'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='4483' u='c' c='_ZNK4llvm16HexagonInstrInfo7getSizeERKNS_12MachineInstrE'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='2056'>// TODO: In order to have isExtendable for fpimm/f32Ext, we need to handle
// isFPImm and later getFPImm as well.</doc>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonOptAddrMode.cpp' l='700' u='c' c='_ZN12_GLOBAL__N_118HexagonOptAddrMode12processBlockEN4llvm3rdf8NodeAddrIPNS2_9BlockNodeEEE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp' l='1712' u='c' c='_ZN4llvm21HexagonPacketizerList11addToPacketERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp' l='1725' u='c' c='_ZN4llvm21HexagonPacketizerList11addToPacketERNS_12MachineInstrE'/>
