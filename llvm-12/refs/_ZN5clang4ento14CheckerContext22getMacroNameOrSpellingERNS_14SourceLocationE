<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/CheckerContext.h' l='371' type='llvm::StringRef clang::ento::CheckerContext::getMacroNameOrSpelling(clang::SourceLocation &amp; Loc)'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/CheckerContext.h' l='362'>/// Depending on wither the location corresponds to a macro, return
  /// either the macro name or the token spelling.
  ///
  /// This could be useful when checkers&apos; logic depends on whether a function
  /// is called with a given macro argument. For example:
  ///   s = socket(AF_INET,..)
  /// If AF_INET is a macro, the result should be treated as a source of taint.
  ///
  /// \sa clang::Lexer::getSpelling(), clang::Lexer::getImmediateMacroName().</doc>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp' l='751' u='c' c='_ZN12_GLOBAL__N_119GenericTaintChecker20TaintPropagationRule10postSocketEbRKN5clang4ento9CallEventERNS3_14CheckerContextE'/>
<def f='llvm/clang/lib/StaticAnalyzer/Core/CheckerContext.cpp' l='92' ll='98' type='llvm::StringRef clang::ento::CheckerContext::getMacroNameOrSpelling(clang::SourceLocation &amp; Loc)'/>
