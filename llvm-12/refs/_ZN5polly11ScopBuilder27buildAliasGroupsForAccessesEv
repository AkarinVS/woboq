<dec f='llvm/polly/include/polly/ScopBuilder.h' l='457' type='std::tuple&lt;AliasGroupVectorTy, DenseSet&lt;const ScopArrayInfo *&gt; &gt; polly::ScopBuilder::buildAliasGroupsForAccesses()'/>
<def f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='3384' ll='3426' type='std::tuple&lt;ScopBuilder::AliasGroupVectorTy, DenseSet&lt;const ScopArrayInfo *&gt; &gt; polly::ScopBuilder::buildAliasGroupsForAccesses()'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='3437' u='c' c='_ZN5polly11ScopBuilder16buildAliasGroupsEv'/>
<doc f='llvm/polly/include/polly/ScopBuilder.h' l='446'>/// Build alias groups for all memory accesses in the Scop.
  ///
  /// Using the alias analysis and an alias set tracker we build alias sets
  /// for all memory accesses inside the Scop. For each alias set we then map
  /// the aliasing pointers back to the memory accesses we know, thus obtain
  /// groups of memory accesses which might alias. We also collect the set of
  /// arrays through which memory is written.
  ///
  /// @returns A pair consistent of a vector of alias groups and a set of arrays
  ///          through which memory is written.</doc>
