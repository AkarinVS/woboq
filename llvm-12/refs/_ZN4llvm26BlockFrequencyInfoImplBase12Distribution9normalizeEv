<dec f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='409' type='void llvm::BlockFrequencyInfoImplBase::Distribution::normalize()'/>
<doc f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='400'>/// Normalize the distribution.
    ///
    /// Combines multiple edges to the same \a Weight::TargetNode and scales
    /// down so that \a Total fits into 32-bits.
    ///
    /// This is linear in the size of \a Weights.  For the vast majority of
    /// cases, adjacent edge weights are combined by sorting WeightList and
    /// combining adjacent weights.  However, for very large edge lists an
    /// auxiliary hash table is used.</doc>
<use f='llvm/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp' l='113' u='c' c='_ZN12_GLOBAL__N_120DitheringDistributerC1ERN4llvm26BlockFrequencyInfoImplBase12DistributionERKNS1_10bfi_detail9BlockMassE'/>
<def f='llvm/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp' l='220' ll='274' type='void llvm::BlockFrequencyInfoImplBase::Distribution::normalize()'/>
<use f='llvm/llvm/lib/Transforms/Utils/CodeExtractor.cpp' l='1432' u='c' c='_ZN4llvm13CodeExtractor33calculateNewCallTerminatorWeightsEPNS_10BasicBlockERNS_8DenseMapIS2_NS_14BlockFrequencyENS_12DenseMapInfoIS2_EENS_6detail12De2699329'/>
