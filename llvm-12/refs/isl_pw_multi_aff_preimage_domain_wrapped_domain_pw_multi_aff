<dec f='llvm/polly/lib/External/isl/include/isl/aff.h' l='765' type='isl_pw_multi_aff * isl_pw_multi_aff_preimage_domain_wrapped_domain_pw_multi_aff(isl_pw_multi_aff * pma1, isl_pw_multi_aff * pma2)'/>
<def f='llvm/polly/lib/External/isl/isl_aff.c' l='7810' ll='7842' type='isl_pw_multi_aff * isl_pw_multi_aff_preimage_domain_wrapped_domain_pw_multi_aff(isl_pw_multi_aff * pma1, isl_pw_multi_aff * pma2)'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='7870' u='c' c='preimage_domain_wrapped_domain_entry'/>
<doc f='llvm/polly/lib/External/isl/isl_aff.c' l='7800'>/* Given a function &quot;pma1&quot; of the form A[B -&gt; C] -&gt; D and
 * a function &quot;pma2&quot; of the form E -&gt; B,
 * replace the domain of the wrapped relation inside the domain of &quot;pma1&quot;
 * by the preimage with respect to &quot;pma2&quot;.
 * In other words, plug in &quot;pma2&quot; in this nested domain.
 * The result is of the form A[E -&gt; C] -&gt; D.
 *
 * In particular, extend E -&gt; B to A[E -&gt; C] -&gt; A[B -&gt; C] and
 * plug that into &quot;pma1&quot;.
 */</doc>
