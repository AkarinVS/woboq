<dec f='llvm/polly/lib/External/isl/include/isl/schedule_node.h' l='237' type='isl_union_pw_multi_aff * isl_schedule_node_get_subtree_contraction(isl_schedule_node * node)'/>
<use f='llvm/polly/lib/External/isl/include/isl/isl-noexceptions.h' l='14258' u='c' c='_ZNK3isl12noexceptions13schedule_node23get_subtree_contractionEv'/>
<use f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='2061' u='c' c='isl_schedule_node_band_sink'/>
<def f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='4083' ll='4111' type='isl_union_pw_multi_aff * isl_schedule_node_get_subtree_contraction(isl_schedule_node * node)'/>
<doc f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='4072'>/* Return a mapping from the domain elements in the leaves of the subtree
 * rooted at &quot;node&quot; to the corresponding domain elements that reach &quot;node&quot;
 * obtained by composing the intermediate contractions.
 *
 * We start out with an identity mapping between the domain elements
 * that reach &quot;node&quot; and compose it with all the contractions
 * on a path from &quot;node&quot; to a leaf while traversing the subtree.
 * Within the children of an a sequence or set node, the
 * accumulated contraction is restricted to the elements selected
 * by the filter child.
 */</doc>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='3864' u='c' c='gpu_create_kernel'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='4227' u='c' c='declare_accessed_local_variables'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='4460' u='c' c='get_local_coincidence'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='4503' u='c' c='band_set_coincident'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='4852' u='c' c='update_may_persist_at_band'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='5001' u='c' c='update_may_persist_at_filter'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='5111' u='c' c='node_may_persist'/>
<use f='llvm/polly/lib/External/ppcg/gpu.c' l='5308' u='c' c='map_to_device'/>
