<dec f='llvm/clang/include/clang/Lex/HeaderSearch.h' l='758' type='std::string clang::HeaderSearch::suggestPathToFileForDiagnostics(const clang::FileEntry * File, llvm::StringRef MainFile, bool * IsSystem = nullptr)'/>
<doc f='llvm/clang/include/clang/Lex/HeaderSearch.h' l='749'>/// Suggest a path by which the specified file could be found, for use in
  /// diagnostics to suggest a #include. Returned path will only contain forward
  /// slashes as separators. MainFile is the absolute path of the file that we
  /// are generating the diagnostics for. It will try to shorten the path using
  /// MainFile location, if none of the include search directories were prefix
  /// of File.
  ///
  /// \param IsSystem If non-null, filled in to indicate whether the suggested
  ///        path is relative to a system header directory.</doc>
<def f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='1778' ll='1785' type='std::string clang::HeaderSearch::suggestPathToFileForDiagnostics(const clang::FileEntry * File, llvm::StringRef MainFile, bool * IsSystem = nullptr)'/>
<use f='llvm/clang/lib/Sema/SemaLookup.cpp' l='5314' u='c' c='_ZL22getHeaderNameForHeaderB5cxx11RN5clang12PreprocessorEPKNS_9FileEntryEN4llvm9StringRefE'/>
