<def f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h' l='282' ll='290' type='llvm::SDValue llvm::DAGTypeLegalizer::SExtOrZExtPromotedInteger(llvm::SDValue Op)'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h' l='278'>// Get a promoted operand and sign or zero extend it to the final size
  // (depending on TargetLoweringInfo::isSExtCheaperThanZExt). For a given
  // subtarget and type, the choice of sign or zero-extension will be
  // consistent.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='1124' u='c' c='_ZN4llvm16DAGTypeLegalizer22PromoteIntRes_UMINUMAXEPNS_6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='1125' u='c' c='_ZN4llvm16DAGTypeLegalizer22PromoteIntRes_UMINUMAXEPNS_6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='1590' u='c' c='_ZN4llvm16DAGTypeLegalizer20PromoteSetCCOperandsERNS_7SDValueES2_NS_3ISD8CondCodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='1591' u='c' c='_ZN4llvm16DAGTypeLegalizer20PromoteSetCCOperandsERNS_7SDValueES2_NS_3ISD8CondCodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='1599' u='c' c='_ZN4llvm16DAGTypeLegalizer20PromoteSetCCOperandsERNS_7SDValueES2_NS_3ISD8CondCodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='1600' u='c' c='_ZN4llvm16DAGTypeLegalizer20PromoteSetCCOperandsERNS_7SDValueES2_NS_3ISD8CondCodeE'/>
