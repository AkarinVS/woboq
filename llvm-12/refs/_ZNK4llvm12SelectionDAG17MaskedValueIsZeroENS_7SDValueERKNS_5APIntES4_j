<dec f='llvm/llvm/include/llvm/CodeGen/SelectionDAG.h' l='1738' type='bool llvm::SelectionDAG::MaskedValueIsZero(llvm::SDValue Op, const llvm::APInt &amp; Mask, const llvm::APInt &amp; DemandedElts, unsigned int Depth = 0) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/SelectionDAG.h' l='1735'>/// Return true if &apos;Op &amp; Mask&apos; is known to be zero in DemandedElts.  We
  /// use this predicate to simplify operations downstream.  Op and Mask are
  /// known to be the same type.</doc>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='2396' ll='2400' type='bool llvm::SelectionDAG::MaskedValueIsZero(llvm::SDValue V, const llvm::APInt &amp; Mask, const llvm::APInt &amp; DemandedElts, unsigned int Depth = 0) const'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='2393'>/// MaskedValueIsZero - Return true if &apos;V &amp; Mask&apos; is known to be zero in
/// DemandedElts.  We use this predicate to simplify operations downstream.
/// Mask is known to be zero for bits that V cannot have.</doc>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='7733' u='c' c='_ZL18getFauxShuffleMaskN4llvm7SDValueERKNS_5APIntERNS_15SmallVectorImplIiEERNS4_IS0_EERKNS_12SelectionDAGEjb'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='7735' u='c' c='_ZL18getFauxShuffleMaskN4llvm7SDValueERKNS_5APIntERNS_15SmallVectorImplIiEERNS4_IS0_EERKNS_12SelectionDAGEjb'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='44491' u='c' c='_ZL9combineOrPN4llvm6SDNodeERNS_12SelectionDAGERNS_14TargetLowering15DAGCombinerInfoERKNS_12X86SubtargetE'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='44500' u='c' c='_ZL9combineOrPN4llvm6SDNodeERNS_12SelectionDAGERNS_14TargetLowering15DAGCombinerInfoERKNS_12X86SubtargetE'/>
