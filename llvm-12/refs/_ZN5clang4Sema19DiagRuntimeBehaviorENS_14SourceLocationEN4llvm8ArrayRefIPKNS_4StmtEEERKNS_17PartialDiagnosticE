<dec f='llvm/clang/include/clang/Sema/Sema.h' l='5042' type='bool clang::Sema::DiagRuntimeBehavior(clang::SourceLocation Loc, ArrayRef&lt;const clang::Stmt *&gt; Stmts, const clang::PartialDiagnostic &amp; PD)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='5040'>/// Similar, but diagnostic is only produced if all the specified statements
  /// are reachable.</doc>
<use f='llvm/clang/lib/Sema/SemaChecking.cpp' l='13196' u='c' c='_ZN12_GLOBAL__N_115SequenceChecker10checkUsageEPKN5clang9NamedDeclERNS0_9UsageInfoEPKNS1_4ExprENS0_9UsageKindEb'/>
<def f='llvm/clang/lib/Sema/SemaExpr.cpp' l='18480' ll='18521' type='bool clang::Sema::DiagRuntimeBehavior(clang::SourceLocation Loc, ArrayRef&lt;const clang::Stmt *&gt; Stmts, const clang::PartialDiagnostic &amp; PD)'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='18525' u='c' c='_ZN5clang4Sema19DiagRuntimeBehaviorENS_14SourceLocationEPKNS_4StmtERKNS_17PartialDiagnosticE'/>
<doc f='llvm/clang/lib/Sema/SemaExpr.cpp' l='18464'>/// Emit a diagnostic that describes an effect on the run-time behavior
/// of the program being compiled.
///
/// This routine emits the given diagnostic when the code currently being
/// type-checked is &quot;potentially evaluated&quot;, meaning that there is a
/// possibility that the code will actually be executable. Code in sizeof()
/// expressions, code used only during overload resolution, etc., are not
/// potentially evaluated. This routine will suppress such diagnostics or,
/// in the absolutely nutty case of potentially potentially evaluated
/// expressions (C++ typeid), queue the diagnostic to potentially emit it
/// later.
///
/// This routine should be used for all diagnostics that describe the run-time
/// behavior of a program, such as passing a non-POD value through an ellipsis.
/// Failure to do so will likely result in spurious diagnostics or failures
/// during overload resolution or within sizeof/alignof/typeof/typeid.</doc>
