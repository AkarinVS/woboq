<dec f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='423' type='llvm::ConstantRange llvm::ConstantRange::binaryNot() const'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='420'>/// Return a new range representing the possible values resulting from
  /// a binary-xor of a value in this range by an all-one value,
  /// aka bitwise complement operation.</doc>
<def f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1258' ll='1266' type='llvm::ConstantRange llvm::ConstantRange::binaryNot() const'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1308' u='c' c='_ZNK4llvm13ConstantRange9binaryXorERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1310' u='c' c='_ZNK4llvm13ConstantRange9binaryXorERKS0_'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='2405' u='c' c='_ZN12_GLOBAL__N_132ConstantRangeTest_binaryNot_Test8TestBodyEv'/>
