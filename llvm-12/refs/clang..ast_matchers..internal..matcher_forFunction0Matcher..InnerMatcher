<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='7359' u='w' c='_ZN5clang12ast_matchers8internal27matcher_forFunction0MatcherC1ERKNS1_7MatcherINS_12FunctionDeclEEE'/>
<dec f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='7359' type='const internal::Matcher&lt;FunctionDecl&gt;'/>
<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='7367' u='m' c='_ZNK5clang12ast_matchers8internal27matcher_forFunction0Matcher7matchesERKNS_4StmtEPNS1_14ASTMatchFinderEPNS1_21BoundNodesTreeBuilderE'/>
<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='7371' u='m' c='_ZNK5clang12ast_matchers8internal27matcher_forFunction0Matcher7matchesERKNS_4StmtEPNS1_14ASTMatchFinderEPNS1_21BoundNodesTreeBuilderE'/>
<offset>128</offset>
<doc f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='7346'>/// Matches declaration of the function the statement belongs to
///
/// Given:
/// \code
/// F&amp; operator=(const F&amp; o) {
///   std::copy_if(o.begin(), o.end(), begin(), [](V v) { return v &gt; 0; });
///   return *this;
/// }
/// \endcode
/// returnStmt(forFunction(hasName(&quot;operator=&quot;)))
///   matches &apos;return *this&apos;
///   but does not match &apos;return v &gt; 0&apos;</doc>
