<def f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.h' l='31' ll='226'/>
<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.h' l='42' c='_ZN8gwp_asan20GuardedPoolAllocatorC1ERKS0_'/>
<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.h' l='43' c='_ZN8gwp_asan20GuardedPoolAllocatoraSERKS0_'/>
<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.h' l='43' c='_ZN8gwp_asan20GuardedPoolAllocatoraSERKS0_'/>
<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.h' l='174' c='_ZN8gwp_asan20GuardedPoolAllocator12getSingletonEv'/>
<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.cpp' l='26'/>
<use f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.cpp' l='39' c='_ZN8gwp_asan20GuardedPoolAllocator12getSingletonEv'/>
<size>144</size>
<doc f='llvm/compiler-rt/lib/gwp_asan/guarded_pool_allocator.h' l='24'>// This class is the primary implementation of the allocator portion of GWP-
// ASan. It is the sole owner of the pool of sequentially allocated guarded
// slots. It should always be treated as a singleton.

// Functions in the public interface of this class are thread-compatible until
// init() is called, at which point they become thread-safe (unless specified
// otherwise).</doc>
<smbr r='gwp_asan::GuardedPoolAllocator::kGwpAsanMetadataName' t='const char *const'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocatorC1Ev'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocatorC1ERKS0_'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocatoraSERKS0_'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocatorD1Ev'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator4initERKNS_7options7OptionsE'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator14uninitTestOnlyEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator7disableEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator6enableEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator7iterateEPvmPFvmmS1_ES1_'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator4stopEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator12shouldSampleEv'/>
<fun r='_ZNK8gwp_asan20GuardedPoolAllocator13pointerIsMineEPKv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator8allocateEm'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator10deallocateEPv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator7getSizeEPKv'/>
<fun r='_ZNK8gwp_asan20GuardedPoolAllocator17getMetadataRegionEv'/>
<fun r='_ZNK8gwp_asan20GuardedPoolAllocator17getAllocatorStateEv'/>
<smbr r='gwp_asan::GuardedPoolAllocator::kGwpAsanAliveSlotName' t='const char *const'/>
<smbr r='gwp_asan::GuardedPoolAllocator::kGwpAsanGuardPageName' t='const char *const'/>
<smbr r='gwp_asan::GuardedPoolAllocator::kGwpAsanFreeSlotsName' t='const char *const'/>
<smbr r='gwp_asan::GuardedPoolAllocator::kInvalidSlotID' t='const size_t'/>
<fun r='_ZNK8gwp_asan20GuardedPoolAllocator3mapEmPKc'/>
<fun r='_ZNK8gwp_asan20GuardedPoolAllocator5unmapEPvm'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator18reserveGuardedPoolEm'/>
<fun r='_ZNK8gwp_asan20GuardedPoolAllocator21allocateInGuardedPoolEPvm'/>
<fun r='_ZNK8gwp_asan20GuardedPoolAllocator23deallocateInGuardedPoolEPvm'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator20unreserveGuardedPoolEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator19getPlatformPageSizeEv'/>
<fun r='_ZNK8gwp_asan20GuardedPoolAllocator14addrToMetadataEm'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator11reserveSlotEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator8freeSlotEm'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator13trapOnAddressEmNS_5ErrorE'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator12getSingletonEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator13installAtForkEv'/>
<mbr r='gwp_asan::GuardedPoolAllocator::State' o='0' t='gwp_asan::AllocatorState'/>
<mbr r='gwp_asan::GuardedPoolAllocator::PoolMutex' o='384' t='gwp_asan::Mutex'/>
<mbr r='gwp_asan::GuardedPoolAllocator::NumSampledAllocations' o='704' t='size_t'/>
<mbr r='gwp_asan::GuardedPoolAllocator::Metadata' o='768' t='gwp_asan::AllocationMetadata *'/>
<mbr r='gwp_asan::GuardedPoolAllocator::FreeSlots' o='832' t='size_t *'/>
<mbr r='gwp_asan::GuardedPoolAllocator::FreeSlotsLength' o='896' t='size_t'/>
<mbr r='gwp_asan::GuardedPoolAllocator::PerfectlyRightAlign' o='960' t='bool'/>
<mbr r='gwp_asan::GuardedPoolAllocator::Backtrace' o='1024' t='options::Backtrace_t'/>
<mbr r='gwp_asan::GuardedPoolAllocator::AdjustedSampleRatePlusOne' o='1088' t='uint32_t'/>
<mbr r='gwp_asan::GuardedPoolAllocator::GuardedPagePoolPlatformData' o='1120' t='gwp_asan::PlatformSpecificMapData'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator8initPRNGEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator19getRandomUnsigned32Ev'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator12getSingletonEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator4initERKNS_7options7OptionsE'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator7disableEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator6enableEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator7iterateEPvmPFvmmS1_ES1_'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator14uninitTestOnlyEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator8allocateEm'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator13trapOnAddressEmNS_5ErrorE'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator4stopEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator10deallocateEPv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator7getSizeEPKv'/>
<fun r='_ZNK8gwp_asan20GuardedPoolAllocator14addrToMetadataEm'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator11reserveSlotEv'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator8freeSlotEm'/>
<fun r='_ZN8gwp_asan20GuardedPoolAllocator19getRandomUnsigned32Ev'/>
<use f='llvm/compiler-rt/lib/gwp_asan/optional/segv_handler.h' l='24' c='_ZN8gwp_asan12segv_handler21installSignalHandlersEPNS_20GuardedPoolAllocatorEPFvPKczEPFvPjjS6_EPFjS7_jPvE'/>
<use f='llvm/compiler-rt/lib/gwp_asan/optional/segv_handler_posix.cpp' l='157'/>
<use f='llvm/compiler-rt/lib/gwp_asan/optional/segv_handler_posix.cpp' l='197' c='_ZN8gwp_asan12segv_handler21installSignalHandlersEPNS_20GuardedPoolAllocatorEPFvPKczEPFvPjjS6_EPFjS7_jPvE'/>
<size>80</size>
<use f='llvm/compiler-rt/lib/scudo/scudo_allocator.cpp' l='224'/>
<size>80</size>
