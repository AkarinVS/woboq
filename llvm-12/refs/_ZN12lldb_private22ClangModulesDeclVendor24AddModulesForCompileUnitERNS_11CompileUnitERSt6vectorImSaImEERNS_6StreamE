<dec f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangModulesDeclVendor.h' l='80' type='bool lldb_private::ClangModulesDeclVendor::AddModulesForCompileUnit(lldb_private::CompileUnit &amp; cu, lldb_private::ClangModulesDeclVendor::ModuleVector &amp; exported_modules, lldb_private::Stream &amp; error_stream)'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangModulesDeclVendor.h' l='61'>/// Add all modules referred to in a given compilation unit to the list
  /// of modules to search.
  ///
  /// \param[in] cu
  ///     The compilation unit to scan for imported modules.
  ///
  /// \param[in] exported_modules
  ///     A vector to populate with the ID of each module loaded (directly
  ///     and via re-exports) in this way.
  ///
  /// \param[in] error_stream
  ///     A stream to populate with the output of the Clang parser when
  ///     it tries to load the modules.
  ///
  /// \return
  ///     True if all modules referred to by the compilation unit could be
  ///     loaded; false if one could not be loaded.  If the compiler
  ///     encountered a fatal error during a previous module
  ///     load, then this will always return false for this ModuleImporter.</doc>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionSourceCode.cpp' l='339' u='c' c='_ZNK12lldb_private25ClangExpressionSourceCode7GetTextERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_16ExecutionContextEbbN4llvm8ArrayRefIS6_EE'/>
<ovr f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangModulesDeclVendor.cpp' l='374' c='_ZN12_GLOBAL__N_126ClangModulesDeclVendorImpl24AddModulesForCompileUnitERN12lldb_private11CompileUnitERSt6vectorImSaImEERNS1_6StreamE'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangUserExpression.cpp' l='381' u='c' c='_ZL15SetupDeclVendorRN12lldb_private16ExecutionContextEPNS_6TargetERNS_17DiagnosticManagerE'/>
