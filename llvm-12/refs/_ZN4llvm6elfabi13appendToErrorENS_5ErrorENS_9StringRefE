<def f='llvm/llvm/lib/InterfaceStub/ELFObjHandler.cpp' l='360' ll='367' type='llvm::Error llvm::elfabi::appendToError(llvm::Error Err, llvm::StringRef After)'/>
<use f='llvm/llvm/lib/InterfaceStub/ELFObjHandler.cpp' l='554' u='c' c='_ZN4llvm6elfabiL9buildStubERKNS_6object13ELFObjectFileIT_EE'/>
<use f='llvm/llvm/lib/InterfaceStub/ELFObjHandler.cpp' l='568' u='c' c='_ZN4llvm6elfabiL9buildStubERKNS_6object13ELFObjectFileIT_EE'/>
<use f='llvm/llvm/lib/InterfaceStub/ELFObjHandler.cpp' l='578' u='c' c='_ZN4llvm6elfabiL9buildStubERKNS_6object13ELFObjectFileIT_EE'/>
<use f='llvm/llvm/lib/InterfaceStub/ELFObjHandler.cpp' l='592' u='c' c='_ZN4llvm6elfabiL9buildStubERKNS_6object13ELFObjectFileIT_EE'/>
<use f='llvm/llvm/lib/InterfaceStub/ELFObjHandler.cpp' l='598' u='c' c='_ZN4llvm6elfabiL9buildStubERKNS_6object13ELFObjectFileIT_EE'/>
<doc f='llvm/llvm/lib/InterfaceStub/ELFObjHandler.cpp' l='353'>/// This function takes an error, and appends a string of text to the end of
/// that error. Since &quot;appending&quot; to an Error isn&apos;t supported behavior of an
/// Error, this function technically creates a new error with the combined
/// message and consumes the old error.
///
/// @param Err Source error.
/// @param After Text to append at the end of Err&apos;s error message.</doc>
