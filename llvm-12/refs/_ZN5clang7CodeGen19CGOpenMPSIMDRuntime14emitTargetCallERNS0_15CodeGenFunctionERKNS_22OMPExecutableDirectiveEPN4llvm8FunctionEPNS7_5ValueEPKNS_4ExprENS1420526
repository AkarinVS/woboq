<dec f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='2391' type='void clang::CodeGen::CGOpenMPSIMDRuntime::emitTargetCall(clang::CodeGen::CodeGenFunction &amp; CGF, const clang::OMPExecutableDirective &amp; D, llvm::Function * OutlinedFn, llvm::Value * OutlinedFnID, const clang::Expr * IfCond, llvm::PointerIntPair&lt;const Expr *, 2, OpenMPDeviceClauseModifier&gt; Device, llvm::function_ref&lt;llvm::Value *(CodeGenFunction &amp;, const OMPLoopDirective &amp;)&gt; SizeEmitter)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='2381'>/// Emit the target offloading code associated with \a D. The emitted
  /// code attempts offloading the execution to the device, an the event of
  /// a failure it executes the host version outlined in \a OutlinedFn.
  /// \param D Directive to emit.
  /// \param OutlinedFn Host version of the code to be offloaded.
  /// \param OutlinedFnID ID of host version of the code to be offloaded.
  /// \param IfCond Expression evaluated in if clause associated with the target
  /// directive, or null if no if clause is used.
  /// \param Device Expression evaluated in device clause associated with the
  /// target directive, or null if no device clause is used and device modifier.</doc>
<inh f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='9902' c='_ZN5clang7CodeGen15CGOpenMPRuntime14emitTargetCallERNS0_15CodeGenFunctionERKNS_22OMPExecutableDirectiveEPN4llvm8FunctionEPNS7_5ValueEPKNS_4ExprENS7_142798650'/>
<def f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='12654' ll='12662' type='void clang::CodeGen::CGOpenMPSIMDRuntime::emitTargetCall(clang::CodeGen::CodeGenFunction &amp; CGF, const clang::OMPExecutableDirective &amp; D, llvm::Function * OutlinedFn, llvm::Value * OutlinedFnID, const clang::Expr * IfCond, llvm::PointerIntPair&lt;const Expr *, 2, OpenMPDeviceClauseModifier&gt; Device, llvm::function_ref&lt;llvm::Value *(CodeGenFunction &amp;, const OMPLoopDirective &amp;)&gt; SizeEmitter)'/>
