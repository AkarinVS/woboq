<dec f='llvm/lldb/include/lldb/Symbol/CompilerType.h' l='325' type='uint32_t lldb_private::CompilerType::GetIndexOfChildWithName(const char * name, bool omit_empty_base_classes) const'/>
<doc f='llvm/lldb/include/lldb/Symbol/CompilerType.h' l='323'>/// Lookup a child given a name. This function will match base class names and
  /// member member names in &quot;clang_type&quot; only, not descendants.</doc>
<use f='llvm/lldb/source/Core/ValueObject.cpp' l='517' u='c' c='_ZN12lldb_private11ValueObject23GetIndexOfChildWithNameENS_11ConstStringE'/>
<use f='llvm/lldb/source/Plugins/Language/CPlusPlus/BlockPointer.cpp' l='161' u='c' c='_ZN12lldb_private10formatters29BlockPointerSyntheticFrontEnd23GetIndexOfChildWithNameENS_11ConstStringE'/>
<use f='llvm/lldb/source/Plugins/TypeSystem/Clang/TypeSystemClang.cpp' l='6825' u='c' c='_ZN12lldb_private15TypeSystemClang23GetIndexOfChildWithNameEPvPKcb'/>
<use f='llvm/lldb/source/Plugins/TypeSystem/Clang/TypeSystemClang.cpp' l='6876' u='c' c='_ZN12lldb_private15TypeSystemClang23GetIndexOfChildWithNameEPvPKcb'/>
<use f='llvm/lldb/source/Plugins/TypeSystem/Clang/TypeSystemClang.cpp' l='6887' u='c' c='_ZN12lldb_private15TypeSystemClang23GetIndexOfChildWithNameEPvPKcb'/>
<def f='llvm/lldb/source/Symbol/CompilerType.cpp' l='711' ll='719' type='uint32_t lldb_private::CompilerType::GetIndexOfChildWithName(const char * name, bool omit_empty_base_classes) const'/>
<doc f='llvm/lldb/source/Symbol/CompilerType.cpp' l='707'>// Get the index of the child of &quot;clang_type&quot; whose name matches. This function
// doesn&apos;t descend into the children, but only looks one level deep and name
// matches can include base class names.</doc>
