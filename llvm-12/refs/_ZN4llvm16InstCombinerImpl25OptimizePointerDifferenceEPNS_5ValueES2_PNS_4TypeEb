<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='90' type='llvm::Value * llvm::InstCombinerImpl::OptimizePointerDifference(llvm::Value * LHS, llvm::Value * RHS, llvm::Type * Ty, bool isNUW)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1621' ll='1694' type='llvm::Value * llvm::InstCombinerImpl::OptimizePointerDifference(llvm::Value * LHS, llvm::Value * RHS, llvm::Type * Ty, bool IsNUW)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='2038' u='c' c='_ZN4llvm16InstCombinerImpl8visitSubERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='2045' u='c' c='_ZN4llvm16InstCombinerImpl8visitSubERNS_14BinaryOperatorE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1618'>/// Optimize pointer differences into the same array into a size.  Consider:
///  &amp;A[10] - &amp;A[0]: we should compile this to &quot;10&quot;.  LHS/RHS are the pointer
/// operands to the ptrtoint instructions for the LHS/RHS of the subtract.</doc>
