<dec f='llvm/llvm/include/llvm/Support/DataExtractor.h' l='478' type='uint32_t llvm::DataExtractor::getU24(uint64_t * OffsetPtr, llvm::Error * Err = nullptr) const'/>
<use f='llvm/llvm/include/llvm/Support/DataExtractor.h' l='483' u='c' c='_ZNK4llvm13DataExtractor6getU24ERNS0_6CursorE'/>
<doc f='llvm/llvm/include/llvm/Support/DataExtractor.h' l='457'>/// Extract a 24-bit unsigned value from \a *offset_ptr and return it
  /// in a uint32_t.
  ///
  /// Extract 3 bytes from the binary data at the offset pointed to by
  /// \a offset_ptr, construct a uint32_t from them and update the offset
  /// on success.
  ///
  /// @param[in,out] OffsetPtr
  ///     A pointer to an offset within the data that will be advanced
  ///     by the 3 bytes if the value is extracted correctly. If the offset
  ///     is out of bounds or there are not enough bytes to extract this value,
  ///     the offset will be left unmodified.
  ///
  /// @param[in,out] Err
  ///     A pointer to an Error object. Upon return the Error object is set to
  ///     indicate the result (success/failure) of the function. If the Error
  ///     object is already set when calling this function, no extraction is
  ///     performed.
  ///
  /// @return
  ///     The extracted 24-bit value represented in a uint32_t.</doc>
<use f='llvm/llvm/lib/DebugInfo/DWARF/DWARFFormValue.cpp' l='293' u='c' c='_ZN4llvm14DWARFFormValue12extractValueERKNS_18DWARFDataExtractorEPmNS_5dwarf10FormParamsEPKNS_12DWARFContextEPKNS_9DWARFUnitE'/>
<def f='llvm/llvm/lib/Support/DataExtractor.cpp' l='102' ll='106' type='uint32_t llvm::DataExtractor::getU24(uint64_t * OffsetPtr, llvm::Error * Err = nullptr) const'/>
