<dec f='llvm/lldb/include/lldb/Target/Thread.h' l='1137' type='void lldb_private::Thread::CalculatePublicStopInfo()'/>
<doc f='llvm/lldb/include/lldb/Target/Thread.h' l='1128'>// Calculate the stop info that will be shown to lldb clients.  For instance,
  // a &quot;step out&quot; is implemented by running to a breakpoint on the function
  // return PC, so the process plugin initially sets the stop info to a
  // StopInfoBreakpoint. But once we&apos;ve run the ShouldStop machinery, we
  // discover that there&apos;s a completed ThreadPlanStepOut, and that&apos;s really
  // the StopInfo we want to show.  That will happen naturally the next
  // time GetStopInfo is called, but if you want to force the replacement,
  // you can call this.</doc>
<use f='llvm/lldb/source/Target/StopInfo.cpp' l='549' u='c' c='_ZN12lldb_private18StopInfoBreakpoint13PerformActionEPNS_5EventE'/>
<def f='llvm/lldb/source/Target/Thread.cpp' l='372' ll='375' type='void lldb_private::Thread::CalculatePublicStopInfo()'/>
