<dec f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer.h' l='123' type='bool __sanitizer::Symbolizer::GetModuleNameAndOffsetForPC(__sanitizer::uptr pc, const char ** module_name, __sanitizer::uptr * module_address)'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer.h' l='128' u='c' c='__sanitizer::Symbolizer::GetModuleNameForPc'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer.h' l='121'>// The module names Symbolizer returns are stable and unique for every given
  // module.  It is safe to store and compare them as pointers.</doc>
<use f='llvm/compiler-rt/lib/hwasan/hwasan_report.cpp' l='362' u='c' c='__hwasan::PrintAddressDescription'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_stacktrace_libcdep.cpp' l='96' u='c' c='__sanitizer::GetModuleAndOffsetForPc'/>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_libcdep.cpp' l='142' ll='154' type='bool __sanitizer::Symbolizer::GetModuleNameAndOffsetForPC(__sanitizer::uptr pc, const char ** module_name, __sanitizer::uptr * module_address)'/>
