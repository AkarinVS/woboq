<dec f='llvm/clang/include/clang/Sema/Sema.h' l='12065' type='void clang::Sema::CUDACheckLambdaCapture(clang::CXXMethodDecl * D, const sema::Capture &amp; Capture)'/>
<def f='llvm/clang/lib/Sema/SemaCUDA.cpp' l='762' ll='801' type='void clang::Sema::CUDACheckLambdaCapture(clang::CXXMethodDecl * Callee, const sema::Capture &amp; Capture)'/>
<doc f='llvm/clang/lib/Sema/SemaCUDA.cpp' l='757'>// Check the wrong-sided reference capture of lambda for CUDA/HIP.
// A lambda function may capture a stack variable by reference when it is
// defined and uses the capture by reference when the lambda is called. When
// the capture and use happen on different sides, the capture is invalid and
// should be diagnosed.</doc>
<use f='llvm/clang/lib/Sema/SemaLambda.cpp' l='1875' u='c' c='_ZN5clang4Sema15BuildLambdaExprENS_14SourceLocationES1_PNS_4sema15LambdaScopeInfoE'/>
