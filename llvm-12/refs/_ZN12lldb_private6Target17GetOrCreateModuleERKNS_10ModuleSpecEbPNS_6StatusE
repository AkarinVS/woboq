<dec f='llvm/lldb/include/lldb/Target/Target.h' l='553' type='lldb::ModuleSP lldb_private::Target::GetOrCreateModule(const lldb_private::ModuleSpec &amp; module_spec, bool notify, lldb_private::Status * error_ptr = nullptr)'/>
<doc f='llvm/lldb/include/lldb/Target/Target.h' l='522'>/// Find a binary on the system and return its Module,
  /// or return an existing Module that is already in the Target.
  ///
  /// Given a ModuleSpec, find a binary satisifying that specification,
  /// or identify a matching Module already present in the Target,
  /// and return a shared pointer to it.
  ///
  /// \param[in] module_spec
  ///     The criteria that must be matched for the binary being loaded.
  ///     e.g. UUID, architecture, file path.
  ///
  /// \param[in] notify
  ///     If notify is true, and the Module is new to this Target,
  ///     Target::ModulesDidLoad will be called.
  ///     If notify is false, it is assumed that the caller is adding
  ///     multiple Modules and will call ModulesDidLoad with the
  ///     full list at the end.
  ///     ModulesDidLoad must be called when a Module/Modules have
  ///     been added to the target, one way or the other.
  ///
  /// \param[out] error_ptr
  ///     Optional argument, pointing to a Status object to fill in
  ///     with any results / messages while attempting to find/load
  ///     this binary.  Many callers will be internal functions that
  ///     will handle / summarize the failures in a custom way and
  ///     don&apos;t use these messages.
  ///
  /// \return
  ///     An empty ModuleSP will be returned if no matching file
  ///     was found.  If error_ptr was non-nullptr, an error message
  ///     will likely be provided.</doc>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='1642' u='c' c='_ZN4lldb8SBTarget9AddModuleEPKcS2_S2_S2_'/>
<use f='llvm/lldb/source/API/SBTarget.cpp' l='1654' u='c' c='_ZN4lldb8SBTarget9AddModuleERKNS_12SBModuleSpecE'/>
<use f='llvm/lldb/source/Commands/CommandObjectTarget.cpp' l='396' u='c' c='_ZN25CommandObjectTargetCreate9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Commands/CommandObjectTarget.cpp' l='2512' u='c' c='_ZN29CommandObjectTargetModulesAdd9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Commands/CommandObjectTarget.cpp' l='2573' u='c' c='_ZN29CommandObjectTargetModulesAdd9DoExecuteERN12lldb_private4ArgsERNS0_19CommandReturnObjectE'/>
<use f='llvm/lldb/source/Core/DynamicLoader.cpp' l='95' u='c' c='_ZN12lldb_private13DynamicLoader19GetTargetExecutableEv'/>
<use f='llvm/lldb/source/Core/DynamicLoader.cpp' l='165' u='c' c='_ZN12lldb_private13DynamicLoader19LoadModuleAtAddressERKNS_8FileSpecEmmb'/>
<use f='llvm/lldb/source/Core/DynamicLoader.cpp' l='202' u='c' c='_ZN12lldb_private13DynamicLoader19LoadModuleAtAddressERKNS_8FileSpecEmmb'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/Darwin-Kernel/DynamicLoaderDarwinKernel.cpp' l='831' u='c' c='_ZN25DynamicLoaderDarwinKernel13KextImageInfo26LoadImageUsingMemoryModuleEPN12lldb_private7ProcessE'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/Hexagon-DYLD/DynamicLoaderHexagonDYLD.cpp' l='204' u='c' c='_ZN24DynamicLoaderHexagonDYLD19GetTargetExecutableEv'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderDarwin.cpp' l='146' u='c' c='_ZN12lldb_private19DynamicLoaderDarwin28FindTargetModuleForImageInfoERNS0_9ImageInfoEbPb'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderDarwin.cpp' l='152' u='c' c='_ZN12lldb_private19DynamicLoaderDarwin28FindTargetModuleForImageInfoERNS0_9ImageInfoEbPb'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderDarwin.cpp' l='669' u='c' c='_ZN12lldb_private19DynamicLoaderDarwin25AddModulesUsingImageInfosERSt6vectorINS0_9ImageInfoESaIS2_EE'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/POSIX-DYLD/DynamicLoaderPOSIXDYLD.cpp' l='569' u='c' c='_ZN22DynamicLoaderPOSIXDYLD21LoadInterpreterModuleEv'/>
<use f='llvm/lldb/source/Plugins/DynamicLoader/Windows-DYLD/DynamicLoaderWindowsDYLD.cpp' l='73' u='c' c='_ZN12lldb_private24DynamicLoaderWindowsDYLD12OnLoadModuleESt10shared_ptrINS_6ModuleEENS_10ModuleSpecEm'/>
<use f='llvm/lldb/source/Plugins/Process/elf-core/ProcessElfCore.cpp' l='247' u='c' c='_ZN14ProcessElfCore10DoLoadCoreEv'/>
<use f='llvm/lldb/source/Plugins/Process/minidump/ProcessMinidump.cpp' l='495' u='c' c='_ZN12lldb_private8minidump15ProcessMinidump17GetOrCreateModuleENS_4UUIDEN4llvm9StringRefENS_10ModuleSpecE'/>
<use f='llvm/lldb/source/Plugins/Process/minidump/ProcessMinidump.cpp' l='562' u='c' c='_ZN12lldb_private8minidump15ProcessMinidump14ReadModuleListEv'/>
<use f='llvm/lldb/source/Target/Target.cpp' l='1449' u='c' c='_ZN12lldb_private6Target19SetExecutableModuleERSt10shared_ptrINS_6ModuleEENS_18LoadDependentFilesE'/>
<def f='llvm/lldb/source/Target/Target.cpp' l='1958' ll='2153' type='lldb::ModuleSP lldb_private::Target::GetOrCreateModule(const lldb_private::ModuleSpec &amp; module_spec, bool notify, lldb_private::Status * error_ptr = nullptr)'/>
<use f='llvm/lldb/source/Target/TraceSessionFileParser.cpp' l='46' u='c' c='_ZN12lldb_private22TraceSessionFileParser11ParseModuleERSt10shared_ptrINS_6TargetEERKNS0_10JSONModuleE'/>
