<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='794' ll='800' type='bool llvm::TargetInstrInfo::isProfitableToIfCvt(llvm::MachineBasicBlock &amp; TMBB, unsigned int NumTCycles, unsigned int ExtraTCycles, llvm::MachineBasicBlock &amp; FMBB, unsigned int NumFCycles, unsigned int ExtraFCycles, llvm::BranchProbability Probability) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='788'>/// Second variant of isProfitableToIfCvt. This one
  /// checks for the case where two basic blocks from true and false path
  /// of a if-then-else (diamond) are predicated on mutually exclusive
  /// predicates, where the probability of the true path being taken is given
  /// by Probability, and Confidence is a measure of our confidence that it
  /// will be properly predicted.</doc>
<use f='llvm/llvm/lib/CodeGen/EarlyIfConversion.cpp' l='1109' u='c' c='_ZN12_GLOBAL__N_117EarlyIfPredicator15shouldConvertIfEv'/>
<use f='llvm/llvm/lib/CodeGen/IfConversion.cpp' l='391' u='c' c='_ZNK12_GLOBAL__N_111IfConverter18MeetIfcvtSizeLimitERNS0_6BBInfoES2_RN4llvm17MachineBasicBlockEjNS3_17BranchProbabilityEb'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp' l='885' c='_ZNK4llvm13R600InstrInfo19isProfitableToIfCvtERNS_17MachineBasicBlockEjjS2_jjNS_17BranchProbabilityE'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='2109' c='_ZNK4llvm16ARMBaseInstrInfo19isProfitableToIfCvtERNS_17MachineBasicBlockEjjS2_jjNS_17BranchProbabilityE'/>
<ovr f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='781' c='_ZNK4llvm16HexagonInstrInfo19isProfitableToIfCvtERNS_17MachineBasicBlockEjjS2_jjNS_17BranchProbabilityE'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='2124' c='_ZNK4llvm12PPCInstrInfo19isProfitableToIfCvtERNS_17MachineBasicBlockEjjS2_jjNS_17BranchProbabilityE'/>
<ovr f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='703' c='_ZNK4llvm16SystemZInstrInfo19isProfitableToIfCvtERNS_17MachineBasicBlockEjjS2_jjNS_17BranchProbabilityE'/>
