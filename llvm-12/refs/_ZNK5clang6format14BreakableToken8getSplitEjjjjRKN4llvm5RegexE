<dec f='llvm/clang/lib/Format/BreakableToken.h' l='156' type='clang::format::BreakableToken::Split clang::format::BreakableToken::getSplit(unsigned int LineIndex, unsigned int TailOffset, unsigned int ColumnLimit, unsigned int ContentStartColumn, const llvm::Regex &amp; CommentPragmasRegex) const'/>
<ovr f='llvm/clang/lib/Format/BreakableToken.cpp' l='279' c='_ZNK5clang6format22BreakableStringLiteral8getSplitEjjjjRKN4llvm5RegexE'/>
<ovr f='llvm/clang/lib/Format/BreakableToken.cpp' l='305' c='_ZNK5clang6format16BreakableComment8getSplitEjjjjRKN4llvm5RegexE'/>
<doc f='llvm/clang/lib/Format/BreakableToken.h' l='151'>/// Returns a range (offset, length) at which to break the line at
  /// \p LineIndex, if previously broken at \p TailOffset. If possible, do not
  /// violate \p ColumnLimit, assuming the text starting at \p TailOffset in
  /// the token is formatted starting at ContentStartColumn in the reformatted
  /// file.</doc>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='2054' u='c' c='_ZN5clang6format20ContinuationIndenter20breakProtrudingTokenERKNS0_11FormatTokenERNS0_9LineStateEbbb'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='2093' u='c' c='_ZN5clang6format20ContinuationIndenter20breakProtrudingTokenERKNS0_11FormatTokenERNS0_9LineStateEbbb'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='2248' u='c' c='_ZN5clang6format20ContinuationIndenter20breakProtrudingTokenERKNS0_11FormatTokenERNS0_9LineStateEbbb'/>
