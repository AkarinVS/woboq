<dec f='llvm/polly/include/polly/ScopInfo.h' l='2675' type='const llvm::SCEV * polly::Scop::getRepresentingInvariantLoadSCEV(const llvm::SCEV * S) const'/>
<doc f='llvm/polly/include/polly/ScopInfo.h' l='2664'>/// Get the representing SCEV for @p S if applicable, otherwise @p S.
  ///
  /// Invariant loads of the same location are put in an equivalence class and
  /// only one of them is chosen as a representing element that will be
  /// modeled as a parameter. The others have to be normalized, i.e.,
  /// replaced by the representing element of their equivalence class, in order
  /// to get the correct parameter value, e.g., in the SCEVAffinator.
  ///
  /// @param S The SCEV to normalize.
  ///
  /// @return The representing SCEV for invariant loads or @p S if none.</doc>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='1553' u='c' c='_ZN5polly11ScopBuilder18addUserAssumptionsERN4llvm15AssumptionCacheERNS1_8DenseMapIPNS1_10BasicBlockEN3isl12noexceptions3setENS1_12DenseMapInfoIS6_EEN9133776'/>
<def f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='1463' ll='1472' type='const llvm::SCEV * polly::Scop::getRepresentingInvariantLoadSCEV(const llvm::SCEV * E) const'/>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='1545' u='c' c='_ZN5polly4Scop9addParamsERKN4llvm9SetVectorIPKNS1_4SCEVESt6vectorIS5_SaIS5_EENS1_8DenseSetIS5_NS1_12DenseMapInfoIS5_EEEEEE'/>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='1554' u='c' c='_ZNK5polly4Scop13getIdForParamEPKN4llvm4SCEVE'/>
