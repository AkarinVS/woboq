<dec f='llvm/llvm/include/llvm/Transforms/Vectorize.h' l='139' type='llvm::Pass * llvm::createLoadStoreVectorizerPass()'/>
<doc f='llvm/llvm/include/llvm/Transforms/Vectorize.h' l='134'>//===----------------------------------------------------------------------===//
//
// LoadStoreVectorizer - Create vector loads and stores, but leave scalar
// operations.
//</doc>
<use f='llvm/llvm/include/llvm/LinkAllPasses.h' l='213' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<dec f='llvm/llvm/include/llvm/Transforms/Vectorize/LoadStoreVectorizer.h' l='22' type='llvm::Pass * llvm::createLoadStoreVectorizerPass()'/>
<doc f='llvm/llvm/include/llvm/Transforms/Vectorize/LoadStoreVectorizer.h' l='21'>/// Create a legacy pass manager instance of the LoadStoreVectorizer pass</doc>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp' l='937' u='c' c='_ZN12_GLOBAL__N_116AMDGPUPassConfig17addCodeGenPrepareEv'/>
<use f='llvm/llvm/lib/Target/NVPTX/NVPTXTargetMachine.cpp' l='326' u='c' c='_ZN12_GLOBAL__N_115NVPTXPassConfig11addIRPassesEv'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp' l='229' ll='231' type='llvm::Pass * llvm::createLoadStoreVectorizerPass()'/>
