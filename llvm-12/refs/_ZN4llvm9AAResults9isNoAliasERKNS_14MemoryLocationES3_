<def f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='430' ll='432' type='bool llvm::AAResults::isNoAlias(const llvm::MemoryLocation &amp; LocA, const llvm::MemoryLocation &amp; LocB)'/>
<use f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='437' u='c' c='_ZN4llvm9AAResults9isNoAliasEPKNS_5ValueENS_12LocationSizeES3_S4_'/>
<use f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='442' u='c' c='_ZN4llvm9AAResults9isNoAliasEPKNS_5ValueES3_'/>
<doc f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='428'>/// A trivial helper function to check to see if the specified pointers are
  /// no-alias.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp' l='687' u='c' c='_ZL18isPossibleSelfReadPN4llvm11InstructionERKNS_14MemoryLocationES1_RKNS_17TargetLibraryInfoERNS_9AAResultsE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp' l='904' u='c' c='_ZL21removeAccessedObjectsRKN4llvm14MemoryLocationERNS_14SmallSetVectorIPKNS_5ValueELj16EEERKNS_10DataLayoutEPNS_9AAResultsEPKNS_17TargetLibraryInfoEPKNS_8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp' l='700' u='c' c='_ZN4llvm13MemCpyOptPass12processStoreEPNS_9StoreInstERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb0ELb0EvEELb0ELb0EEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp' l='1086' u='c' c='_ZN4llvm13MemCpyOptPass29processMemCpyMemCpyDependenceEPNS_10MemCpyInstES2_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp' l='1142' u='c' c='_ZN4llvm13MemCpyOptPass29processMemSetMemCpyDependenceEPNS_10MemCpyInstEPNS_10MemSetInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp' l='1507' u='c' c='_ZN4llvm13MemCpyOptPass14processMemMoveEPNS_11MemMoveInstE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp' l='727' u='c' c='_ZN12_GLOBAL__N_110Vectorizer21getVectorizablePrefixEN4llvm8ArrayRefIPNS1_11InstructionEEE'/>
