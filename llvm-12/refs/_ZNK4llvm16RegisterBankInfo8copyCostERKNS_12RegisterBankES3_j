<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegisterBankInfo.h' l='614' ll='621' type='unsigned int llvm::RegisterBankInfo::copyCost(const llvm::RegisterBank &amp; A, const llvm::RegisterBank &amp; B, unsigned int Size) const'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegisterBankInfo.h' l='626' u='c' c='_ZNK4llvm16RegisterBankInfo10cannotCopyERKNS_12RegisterBankES3_j'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp' l='279' u='c' c='_ZNK4llvm13RegBankSelect13getRepairCostERKNS_14MachineOperandERKNS_16RegisterBankInfo12ValueMappingE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegisterBankInfo.h' l='608'>/// Get the cost of a copy from \p B to \p A, or put differently,
  /// get the cost of A = COPY B. Since register banks may cover
  /// different size, \p Size specifies what will be the size in bits
  /// that will be copied around.
  ///
  /// \note Since this is a copy, both registers have the same size.</doc>
<ovr f='llvm/llvm/lib/Target/AArch64/GISel/AArch64RegisterBankInfo.cpp' l='208' c='_ZNK4llvm23AArch64RegisterBankInfo8copyCostERKNS_12RegisterBankES3_j'/>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64RegisterBankInfo.cpp' l='226' u='c' c='_ZNK4llvm23AArch64RegisterBankInfo8copyCostERKNS_12RegisterBankES3_j'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='219' c='_ZNK4llvm22AMDGPURegisterBankInfo8copyCostERKNS_12RegisterBankES3_j'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='247' u='c' c='_ZNK4llvm22AMDGPURegisterBankInfo8copyCostERKNS_12RegisterBankES3_j'/>
