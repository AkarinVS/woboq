<dec f='llvm/llvm/include/llvm/Analysis/BranchProbabilityInfo.h' l='404' type='Optional&lt;uint32_t&gt; llvm::BranchProbabilityInfo::getInitialEstimatedBlockWeight(const llvm::BasicBlock * BB)'/>
<doc f='llvm/llvm/include/llvm/Analysis/BranchProbabilityInfo.h' l='403'>/// Returns block&apos;s weight encoded in the IR.</doc>
<def f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='715' ll='754' type='Optional&lt;uint32_t&gt; llvm::BranchProbabilityInfo::getInitialEstimatedBlockWeight(const llvm::BasicBlock * BB)'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='768' u='c' c='_ZN4llvm21BranchProbabilityInfo27computeEestimateBlockWeightERKNS_8FunctionEPNS_13DominatorTreeEPNS_17PostDominatorTreeE'/>
