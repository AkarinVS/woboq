<def f='llvm/llvm/include/llvm/IR/Instruction.h' l='200' ll='202' type='bool llvm::Instruction::isLogicalShift() const'/>
<doc f='llvm/llvm/include/llvm/IR/Instruction.h' l='199'>/// Return true if this is a logical shift left or a logical shift right.</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='71' u='c' c='_ZL25simplifyValueKnownNonZeroPN4llvm5ValueERNS_16InstCombinerImplERNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp' l='652' u='c' c='_ZL28canShiftBinOpWithConstantRHSRN4llvm14BinaryOperatorEPS0_'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp' l='695' u='c' c='_ZN4llvm16InstCombinerImpl19FoldShiftByConstantEPNS_5ValueEPNS_8ConstantERNS_14BinaryOperatorE'/>
