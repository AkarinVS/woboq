<dec f='llvm/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h' l='678' type='llvm::OpenMPIRBuilder::InsertPointTy llvm::OpenMPIRBuilder::EmitOMPInlinedRegion(omp::Directive OMPD, llvm::Instruction * EntryCall, llvm::Instruction * ExitCall, llvm::OpenMPIRBuilder::BodyGenCallbackTy BodyGenCB, llvm::OpenMPIRBuilder::FinalizeCallbackTy FiniCB, bool Conditional = false, bool HasFinalize = true)'/>
<doc f='llvm/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h' l='661'>/// Common Interface to generate OMP inlined regions
  ///
  /// \param OMPD Directive to generate inlined region for
  /// \param EntryCall Call to the entry OMP Runtime Function
  /// \param ExitCall Call to the ending OMP Runtime Function
  /// \param BodyGenCB Body code generation callback.
  /// \param FiniCB Finalization Callback. Will be called when finalizing region
  /// \param Conditional indicate if the entry call result will be used
  ///        to evaluate a conditional of whether a thread will execute
  ///        body code or not.
  /// \param HasFinalize indicate if the directive will require finalization
  ///         and has a finalization callback in the stack that
  /// should        be called.
  ///
  /// \return The insertion point after the region</doc>
<use f='llvm/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp' l='875' u='c' c='_ZN4llvm15OpenMPIRBuilder12createMasterERKNS0_19LocationDescriptionENS_12function_refIFvNS_13IRBuilderBase11InsertPointES6_RNS_10BasicBlockEEEESt8functionIFvS6_EE'/>
<use f='llvm/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp' l='1465' u='c' c='_ZN4llvm15OpenMPIRBuilder12createSingleERKNS0_19LocationDescriptionENS_12function_refIFvNS_13IRBuilderBase11InsertPointES6_RNS_10BasicBlockEEEESt8func8794066'/>
<use f='llvm/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp' l='1498' u='c' c='_ZN4llvm15OpenMPIRBuilder14createCriticalERKNS0_19LocationDescriptionENS_12function_refIFvNS_13IRBuilderBase11InsertPointES6_RNS_10BasicBlockEEEESt8fu15325839'/>
<def f='llvm/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp' l='1502' ll='1569' type='OpenMPIRBuilder::InsertPointTy llvm::OpenMPIRBuilder::EmitOMPInlinedRegion(llvm::omp::Directive OMPD, llvm::Instruction * EntryCall, llvm::Instruction * ExitCall, llvm::OpenMPIRBuilder::BodyGenCallbackTy BodyGenCB, llvm::OpenMPIRBuilder::FinalizeCallbackTy FiniCB, bool Conditional = false, bool HasFinalize = true)'/>
