<dec f='llvm/llvm/include/llvm/IR/BasicBlock.h' l='471' type='bool llvm::BasicBlock::isLandingPad() const'/>
<doc f='llvm/llvm/include/llvm/IR/BasicBlock.h' l='467'>/// Return true if this basic block is a landing pad.
  ///
  /// Being a ``landing pad&apos;&apos; means that the basic block is the destination of
  /// the &apos;unwind&apos; edge of an invoke instruction.</doc>
<use f='llvm/clang/lib/CodeGen/CGException.cpp' l='309' u='c' c='_ZL25PersonalityHasOnlyCXXUsesPN4llvm8ConstantE'/>
<def f='llvm/llvm/lib/IR/BasicBlock.cpp' l='467' ll='469' type='bool llvm::BasicBlock::isLandingPad() const'/>
<use f='llvm/llvm/lib/Transforms/IPO/BlockExtractor.cpp' l='163' u='c' c='_ZN12_GLOBAL__N_114BlockExtractor20splitLandingPadPredsERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2450' u='c' c='_ZN4llvm17JumpThreadingPass15splitBlockPredsEPNS_10BasicBlockENS_8ArrayRefIS2_EEPKc'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp' l='5385' u='c' c='_ZNK12_GLOBAL__N_111LSRInstance13RewriteForPHIEPN4llvm7PHINodeERKNS_6LSRUseERKNS_8LSRFixupERKNS_7FormulaERNS1_12SCEVExpanderERNS1_15SmallVectorImplINS13448949'/>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='856' u='c' c='_ZL26SplitBlockPredecessorsImplPN4llvm10BasicBlockENS_8ArrayRefIS1_EEPKcPNS_14DomTreeUpdaterEPNS_13DominatorTreeEPNS_8LoopInfoEPNS_16MemorySSAUpdaterEb'/>
<use f='llvm/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp' l='128' u='c' c='_ZL26createPHIsForSplitLoopExitN4llvm8ArrayRefIPNS_10BasicBlockEEES2_S2_'/>
<use f='llvm/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp' l='409' u='c' c='_ZN4llvm28SplitIndirectBrCriticalEdgesERNS_8FunctionEPNS_21BranchProbabilityInfoEPNS_18BlockFrequencyInfoE'/>
