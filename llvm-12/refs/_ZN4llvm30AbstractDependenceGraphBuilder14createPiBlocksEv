<use f='llvm/llvm/include/llvm/Analysis/DependenceGraphBuilder.h' l='66' u='c' c='_ZN4llvm30AbstractDependenceGraphBuilder8populateEv'/>
<dec f='llvm/llvm/include/llvm/Analysis/DependenceGraphBuilder.h' l='97' type='void llvm::AbstractDependenceGraphBuilder::createPiBlocks()'/>
<doc f='llvm/llvm/include/llvm/Analysis/DependenceGraphBuilder.h' l='92'>/// Apply graph abstraction to groups of nodes that belong to a strongly
  /// connected component of the graph to create larger compound nodes
  /// called pi-blocks. The purpose of this abstraction is to isolate sets of
  /// program elements that need to stay together during codegen and turn
  /// the dependence graph into an acyclic graph.</doc>
<def f='llvm/llvm/lib/Analysis/DependenceGraphBuilder.cpp' l='90' ll='225' type='void llvm::AbstractDependenceGraphBuilder::createPiBlocks()'/>
