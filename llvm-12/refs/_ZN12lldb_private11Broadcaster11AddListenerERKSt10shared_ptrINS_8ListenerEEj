<def f='llvm/lldb/include/lldb/Utility/Broadcaster.h' l='308' ll='311' type='uint32_t lldb_private::Broadcaster::AddListener(const lldb::ListenerSP &amp; listener_sp, uint32_t event_mask)'/>
<doc f='llvm/lldb/include/lldb/Utility/Broadcaster.h' l='289'>/// Listen for any events specified by \a event_mask.
  ///
  /// Only one listener can listen to each event bit in a given Broadcaster.
  /// Once a listener has acquired an event bit, no other broadcaster will
  /// have access to it until it is relinquished by the first listener that
  /// gets it. The actual event bits that get acquired by \a listener may be
  /// different from what is requested in \a event_mask, and to track this the
  /// actual event bits that are acquired get returned.
  ///
  /// \param[in] listener_sp
  ///     The Listener object that wants to monitor the events that
  ///     get broadcast by this object.
  ///
  /// \param[in] event_mask
  ///     A bit mask that indicates which events the listener is
  ///     asking to monitor.
  ///
  /// \return
  ///     The actual event bits that were acquired by \a listener.</doc>
<use f='llvm/lldb/source/API/SBBroadcaster.cpp' l='97' u='c' c='_ZN4lldb13SBBroadcaster11AddListenerERKNS_10SBListenerEj'/>
<use f='llvm/lldb/source/Utility/Listener.cpp' l='98' u='c' c='_ZN12lldb_private8Listener23StartListeningForEventsEPNS_11BroadcasterEj'/>
<use f='llvm/lldb/source/Utility/Listener.cpp' l='129' u='c' c='_ZN12lldb_private8Listener23StartListeningForEventsEPNS_11BroadcasterEjPFbRSt10shared_ptrINS_5EventEEPvES7_'/>
