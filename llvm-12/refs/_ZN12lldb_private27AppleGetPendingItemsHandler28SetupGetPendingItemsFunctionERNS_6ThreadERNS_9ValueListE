<dec f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetPendingItemsHandler.h' l='101' type='lldb::addr_t lldb_private::AppleGetPendingItemsHandler::SetupGetPendingItemsFunction(lldb_private::Thread &amp; thread, lldb_private::ValueList &amp; get_pending_items_arglist)'/>
<def f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetPendingItemsHandler.cpp' l='131' ll='208' type='lldb::addr_t lldb_private::AppleGetPendingItemsHandler::SetupGetPendingItemsFunction(lldb_private::Thread &amp; thread, lldb_private::ValueList &amp; get_pending_items_arglist)'/>
<use f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetPendingItemsHandler.cpp' l='318' u='c' c='_ZN12lldb_private27AppleGetPendingItemsHandler15GetPendingItemsERNS_6ThreadEmmmRNS_6StatusE'/>
<doc f='llvm/lldb/source/Plugins/SystemRuntime/MacOSX/AppleGetPendingItemsHandler.cpp' l='117'>// Compile our __lldb_backtrace_recording_get_pending_items() function (from
// the source above in g_get_pending_items_function_code) if we don&apos;t find that
// function in the inferior already with USE_BUILTIN_FUNCTION defined.  (e.g.
// this would be the case for testing.)
//
// Insert the __lldb_backtrace_recording_get_pending_items into the inferior
// process if needed.
//
// Write the get_pending_items_arglist into the inferior&apos;s memory space to
// prepare for the call.
//
// Returns the address of the arguments written down in the inferior process,
// which can be used to make the function call.</doc>
