<dec f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='633' type='bool llvm::CastInst::isIntegerCast() const'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='628'>/// There are several places where we need to know if a cast instruction
  /// only deals with integer source and destination types. To simplify that
  /// logic, this method is provided.
  /// @returns true iff the cast has only integral typed operand and dest type.
  /// Determine if this is an integer-only cast.</doc>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='2618' ll='2629' type='bool llvm::CastInst::isIntegerCast() const'/>
<doc f='llvm/llvm/lib/IR/Instructions.cpp' l='2613'>//===----------------------------------------------------------------------===//
//                                CastInst Class
//===----------------------------------------------------------------------===//

// Just determine if this cast only deals with integral-&gt;integral conversion.</doc>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonTargetTransformInfo.cpp' l='324' u='c' c='_ZN4llvm14HexagonTTIImpl11getUserCostEPKNS_4UserENS_8ArrayRefIPKNS_5ValueEEENS_19TargetTransformInfo14TargetCostKindE'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='7703' u='c' c='_ZN12_GLOBAL__N_125AAPotentialValuesFloating18updateWithCastInstERN4llvm10AttributorEPNS1_8CastInstE'/>
