<inh f='llvm/llvm/include/llvm/Support/BinaryStream.h' l='35' c='llvm::BinaryStream'/>
<def f='llvm/llvm/include/llvm/Support/BinaryStream.h' l='73' ll='97'/>
<ovr f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='89' c='llvm::MutableBinaryByteStream'/>
<use f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='89'/>
<ovr f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='135' c='llvm::AppendingBinaryByteStream'/>
<use f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='135'/>
<ovr f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='205' c='llvm::FileBufferByteStream'/>
<use f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='205'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/Support/BinaryStream.h' l='68'>/// A BinaryStream which can be read from as well as written to.  Note
/// that writing to a BinaryStream always necessitates copying from the input
/// buffer to the stream&apos;s backing store.  Streams are assumed to be buffered
/// so that to be portable it is necessary to call commit() on the stream when
/// all data has been written.</doc>
<fun r='_ZN4llvm20WritableBinaryStreamD1Ev'/>
<fun r='_ZN4llvm20WritableBinaryStream10writeBytesEjNS_8ArrayRefIhEE'/>
<fun r='_ZN4llvm20WritableBinaryStream6commitEv'/>
<fun r='_ZNK4llvm20WritableBinaryStream8getFlagsEv'/>
<fun r='_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj'/>
<use f='llvm/llvm/include/llvm/Support/BinaryStreamRef.h' l='224'/>
<use f='llvm/llvm/include/llvm/Support/BinaryStreamRef.h' l='225'/>
<use f='llvm/llvm/include/llvm/Support/BinaryStreamRef.h' l='226' c='_ZN4llvm23WritableBinaryStreamRefC1ESt10shared_ptrINS_20WritableBinaryStreamEEjNS_8OptionalIjEE'/>
<use f='llvm/llvm/include/llvm/Support/BinaryStreamRef.h' l='241' c='_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE'/>
<use f='llvm/llvm/include/llvm/Support/BinaryStreamRef.h' l='242' c='_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamEjNS_8OptionalIjEE'/>
<ovr f='llvm/llvm/include/llvm/DebugInfo/MSF/MappedBlockStream.h' l='105' c='llvm::msf::WritableMappedBlockStream'/>
<use f='llvm/llvm/include/llvm/DebugInfo/MSF/MappedBlockStream.h' l='105'/>
<use f='llvm/llvm/include/llvm/Support/BinaryStreamWriter.h' l='35' c='_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE'/>
<size>8</size>
<use f='llvm/llvm/include/llvm/DebugInfo/PDB/Native/PDBFileBuilder.h' l='83' c='_ZN4llvm3pdb14PDBFileBuilder21commitInjectedSourcesERNS_20WritableBinaryStreamERKNS_3msf9MSFLayoutE'/>
<use f='llvm/llvm/include/llvm/DebugInfo/PDB/Native/PDBFileBuilder.h' l='85' c='_ZN4llvm3pdb14PDBFileBuilder20commitSrcHeaderBlockERNS_20WritableBinaryStreamERKNS_3msf9MSFLayoutE'/>
<size>8</size>
<use f='llvm/llvm/lib/DebugInfo/MSF/MSFBuilder.cpp' l='311' c='_ZL9commitFpmRN4llvm20WritableBinaryStreamERKNS_3msf9MSFLayoutERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096ELm128EEE'/>
<size>8</size>
<use f='llvm/llvm/lib/DebugInfo/PDB/Native/PDBFileBuilder.cpp' l='224' c='_ZN4llvm3pdb14PDBFileBuilder20commitSrcHeaderBlockERNS_20WritableBinaryStreamERKNS_3msf9MSFLayoutE'/>
<use f='llvm/llvm/lib/DebugInfo/PDB/Native/PDBFileBuilder.cpp' l='244' c='_ZN4llvm3pdb14PDBFileBuilder21commitInjectedSourcesERNS_20WritableBinaryStreamERKNS_3msf9MSFLayoutE'/>
<size>8</size>
<ovr f='llvm/llvm/lib/Support/BinaryStreamRef.cpp' l='38' c='(anonymousnamespace)::MutableArrayRefImpl'/>
<use f='llvm/llvm/lib/Support/BinaryStreamRef.cpp' l='38'/>
<use f='llvm/llvm/lib/Support/BinaryStreamRef.cpp' l='103' c='_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE'/>
<use f='llvm/llvm/lib/Support/BinaryStreamRef.cpp' l='106' c='_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamEjNS_8OptionalIjEE'/>
<size>8</size>
<use f='llvm/llvm/lib/Support/BinaryStreamWriter.cpp' l='21' c='_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE'/>
<size>8</size>
<ovr f='llvm/llvm/unittests/DebugInfo/MSF/MappedBlockStreamTest.cpp' l='29' c='(anonymousnamespace)::DiscontiguousStream'/>
<use f='llvm/llvm/unittests/DebugInfo/MSF/MappedBlockStreamTest.cpp' l='29'/>
<size>8</size>
<ovr f='llvm/llvm/unittests/Support/BinaryStreamTest.cpp' l='26' c='(anonymousnamespace)::BrokenStream'/>
<use f='llvm/llvm/unittests/Support/BinaryStreamTest.cpp' l='26'/>
<use f='llvm/llvm/unittests/Support/BinaryStreamTest.cpp' l='129'/>
<size>8</size>
