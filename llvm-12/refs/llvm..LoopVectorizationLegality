<def f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='213' ll='526'/>
<size>680</size>
<doc f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='200'>/// LoopVectorizationLegality checks if it is legal to vectorize a loop, and
/// to what vectorization factor.
/// This class does not look at the profitability of vectorization, only the
/// legality. This class has two main kinds of checks:
/// * Memory checks - The code in canVectorizeMemory checks if vectorization
///   will change the order of memory accesses in a way that will change the
///   correctness of the program.
/// * Scalars checks - The code in canVectorizeInstrs and canVectorizeMemory
/// checks for a number of different conditions, such as the availability of a
/// single induction variable, that all types are supported and vectorize-able,
/// etc. This code reflects the capabilities of InnerLoopVectorizer.
/// This class is also used by InnerLoopVectorizer for identifying
/// induction variable and the different reduction variables.</doc>
<fun r='_ZN4llvm25LoopVectorizationLegalityC1EPNS_4LoopERNS_25PredicatedScalarEvolutionEPNS_13DominatorTreeEPNS_19TargetTransformInfoEPNS_17TargetLibraryInfoE2792228'/>
<fun r='_ZN4llvm25LoopVectorizationLegality12canVectorizeEb'/>
<fun r='_ZN4llvm25LoopVectorizationLegality26prepareToFoldTailByMaskingEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality19getPrimaryInductionEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality16getReductionVarsEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality16getInductionVarsEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality24getFirstOrderRecurrencesEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality12getSinkAfterEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality22getWidestInductionTypeEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality14isInductionPhiEPKNS_5ValueE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality25isCastedInductionVariableEPKNS_5ValueE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality19isInductionVariableEPKNS_5ValueE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality19isReductionVariableEPNS_7PHINodeE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality22isFirstOrderRecurrenceEPKNS_7PHINodeE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality21blockNeedsPredicationEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality16isConsecutivePtrEPNS_5ValueE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality9isUniformEPNS_5ValueE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality14isUniformMemOpERNS_11InstructionE'/>
<fun r='_ZNK4llvm25LoopVectorizationLegality25getRuntimePointerCheckingEv'/>
<fun r='_ZNK4llvm25LoopVectorizationLegality6getLAIEv'/>
<fun r='_ZNK4llvm25LoopVectorizationLegality23isSafeForAnyVectorWidthEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality22getMaxSafeDepDistBytesEv'/>
<fun r='_ZNK4llvm25LoopVectorizationLegality27getMaxSafeVectorWidthInBitsEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality9hasStrideEPNS_5ValueE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality14isMaskRequiredEPKNS_11InstructionE'/>
<fun r='_ZNK4llvm25LoopVectorizationLegality12getNumStoresEv'/>
<fun r='_ZNK4llvm25LoopVectorizationLegality11getNumLoadsEv'/>
<fun r='_ZNK4llvm25LoopVectorizationLegality15hasFunNoNaNAttrEv'/>
<fun r='_ZNK4llvm25LoopVectorizationLegality21getConditionalAssumesEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality23canVectorizeLoopNestCFGEPNS_4LoopEb'/>
<fun r='_ZN4llvm25LoopVectorizationLegality24setupOuterLoopInductionsEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality19canVectorizeLoopCFGEPNS_4LoopEb'/>
<fun r='_ZN4llvm25LoopVectorizationLegality18canVectorizeInstrsEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality18canVectorizeMemoryEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality25canVectorizeWithIfConvertEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality21canVectorizeOuterLoopEv'/>
<fun r='_ZNK4llvm25LoopVectorizationLegality20blockCanBePredicatedEPNS_10BasicBlockERNS_15SmallPtrSetImplIPNS_5ValueEEERNS3_IPKNS_11InstructionEEERNS3_IPS8_EEb'/>
<fun r='_ZN4llvm25LoopVectorizationLegality15addInductionPhiEPNS_7PHINodeERKNS_19InductionDescriptorERNS_15SmallPtrSetImplIPNS_5ValueEEE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality18getSymbolicStridesEv'/>
<mbr r='llvm::LoopVectorizationLegality::TheLoop' o='0' t='llvm::Loop *'/>
<mbr r='llvm::LoopVectorizationLegality::LI' o='64' t='llvm::LoopInfo *'/>
<mbr r='llvm::LoopVectorizationLegality::PSE' o='128' t='llvm::PredicatedScalarEvolution &amp;'/>
<mbr r='llvm::LoopVectorizationLegality::TTI' o='192' t='llvm::TargetTransformInfo *'/>
<mbr r='llvm::LoopVectorizationLegality::TLI' o='256' t='llvm::TargetLibraryInfo *'/>
<mbr r='llvm::LoopVectorizationLegality::DT' o='320' t='llvm::DominatorTree *'/>
<mbr r='llvm::LoopVectorizationLegality::GetLAA' o='384' t='std::function&lt;const LoopAccessInfo &amp;(Loop &amp;)&gt; *'/>
<mbr r='llvm::LoopVectorizationLegality::LAI' o='448' t='const llvm::LoopAccessInfo *'/>
<mbr r='llvm::LoopVectorizationLegality::ORE' o='512' t='llvm::OptimizationRemarkEmitter *'/>
<mbr r='llvm::LoopVectorizationLegality::PrimaryInduction' o='576' t='llvm::PHINode *'/>
<mbr r='llvm::LoopVectorizationLegality::Reductions' o='640' t='llvm::LoopVectorizationLegality::ReductionList'/>
<mbr r='llvm::LoopVectorizationLegality::Inductions' o='1024' t='llvm::LoopVectorizationLegality::InductionList'/>
<mbr r='llvm::LoopVectorizationLegality::InductionCastsToIgnore' o='1408' t='SmallPtrSet&lt;llvm::Instruction *, 4&gt;'/>
<mbr r='llvm::LoopVectorizationLegality::FirstOrderRecurrences' o='1920' t='llvm::LoopVectorizationLegality::RecurrenceSet'/>
<mbr r='llvm::LoopVectorizationLegality::SinkAfter' o='2688' t='DenseMap&lt;llvm::Instruction *, llvm::Instruction *&gt;'/>
<mbr r='llvm::LoopVectorizationLegality::WidestIndTy' o='2880' t='llvm::Type *'/>
<mbr r='llvm::LoopVectorizationLegality::AllowedExit' o='2944' t='SmallPtrSet&lt;llvm::Value *, 4&gt;'/>
<mbr r='llvm::LoopVectorizationLegality::HasFunNoNaNAttr' o='3456' t='bool'/>
<mbr r='llvm::LoopVectorizationLegality::Requirements' o='3520' t='llvm::LoopVectorizationRequirements *'/>
<mbr r='llvm::LoopVectorizationLegality::Hints' o='3584' t='llvm::LoopVectorizeHints *'/>
<mbr r='llvm::LoopVectorizationLegality::DB' o='3648' t='llvm::DemandedBits *'/>
<mbr r='llvm::LoopVectorizationLegality::AC' o='3712' t='llvm::AssumptionCache *'/>
<mbr r='llvm::LoopVectorizationLegality::MaskedOp' o='3776' t='SmallPtrSet&lt;const llvm::Instruction *, 8&gt;'/>
<mbr r='llvm::LoopVectorizationLegality::ConditionalAssumes' o='4544' t='SmallPtrSet&lt;llvm::Instruction *, 8&gt;'/>
<mbr r='llvm::LoopVectorizationLegality::BFI' o='5312' t='llvm::BlockFrequencyInfo *'/>
<mbr r='llvm::LoopVectorizationLegality::PSI' o='5376' t='llvm::ProfileSummaryInfo *'/>
<fun r='_ZN4llvm25LoopVectorizationLegality16isConsecutivePtrEPNS_5ValueE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality9isUniformEPNS_5ValueE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality21canVectorizeOuterLoopEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality15addInductionPhiEPNS_7PHINodeERKNS_19InductionDescriptorERNS_15SmallPtrSetImplIPNS_5ValueEEE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality24setupOuterLoopInductionsEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality18canVectorizeInstrsEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality18canVectorizeMemoryEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality14isInductionPhiEPKNS_5ValueE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality25isCastedInductionVariableEPKNS_5ValueE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality19isInductionVariableEPKNS_5ValueE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality22isFirstOrderRecurrenceEPKNS_7PHINodeE'/>
<fun r='_ZN4llvm25LoopVectorizationLegality21blockNeedsPredicationEPNS_10BasicBlockE'/>
<fun r='_ZNK4llvm25LoopVectorizationLegality20blockCanBePredicatedEPNS_10BasicBlockERNS_15SmallPtrSetImplIPNS_5ValueEEERNS3_IPKNS_11InstructionEEERNS3_IPS8_EEb'/>
<fun r='_ZN4llvm25LoopVectorizationLegality25canVectorizeWithIfConvertEv'/>
<fun r='_ZN4llvm25LoopVectorizationLegality19canVectorizeLoopCFGEPNS_4LoopEb'/>
<fun r='_ZN4llvm25LoopVectorizationLegality23canVectorizeLoopNestCFGEPNS_4LoopEb'/>
<fun r='_ZN4llvm25LoopVectorizationLegality12canVectorizeEb'/>
<fun r='_ZN4llvm25LoopVectorizationLegality26prepareToFoldTailByMaskingEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationPlanner.h' l='213'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationPlanner.h' l='249' c='_ZN4llvm24LoopVectorizationPlannerC1EPNS_4LoopEPNS_8LoopInfoEPKNS_17TargetLibraryInfoEPKNS_19TargetTransformInfoEPNS_25LoopVectorizationLegalityERNS_27803938'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPRecipeBuilder.h' l='32'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPRecipeBuilder.h' l='96' c='_ZN4llvm15VPRecipeBuilderC1EPNS_4LoopEPKNS_17TargetLibraryInfoEPNS_25LoopVectorizationLegalityERNS_26LoopVectorizationCostModelERNS_25PredicatedScalar11179411'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='457' c='_ZN4llvm19InnerLoopVectorizerC1EPNS_4LoopERNS_25PredicatedScalarEvolutionEPNS_8LoopInfoEPNS_13DominatorTreeEPKNS_17TargetLibraryInfoEPKNS_19TargetTran11928458'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='878'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='910' c='_ZN4llvm17InnerLoopUnrollerC1EPNS_4LoopERNS_25PredicatedScalarEvolutionEPNS_8LoopInfoEPNS_13DominatorTreeEPKNS_17TargetLibraryInfoEPKNS_19TargetTransf4044342'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='963' c='_ZN4llvm30InnerLoopAndEpilogueVectorizerC1EPNS_4LoopERNS_25PredicatedScalarEvolutionEPNS_8LoopInfoEPNS_13DominatorTreeEPKNS_17TargetLibraryInfoEPKNS_14777111'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='999' c='_ZN4llvm26EpilogueVectorizerMainLoopC1EPNS_4LoopERNS_25PredicatedScalarEvolutionEPNS_8LoopInfoEPNS_13DominatorTreeEPKNS_17TargetLibraryInfoEPKNS_19Tar4833692'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1028' c='_ZN4llvm30EpilogueVectorizerEpilogueLoopC1EPNS_4LoopERNS_25PredicatedScalarEvolutionEPNS_8LoopInfoEPNS_13DominatorTreeEPKNS_17TargetLibraryInfoEPKNS_1190683'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1226' c='_ZN4llvm26LoopVectorizationCostModelC1ENS_22ScalarEpilogueLoweringEPNS_4LoopERNS_25PredicatedScalarEvolutionEPNS_8LoopInfoEPNS_25LoopVectorizationLega10677016'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1824'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6641' c='_ZL20getAddressAccessSCEVPN4llvm5ValueEPNS_25LoopVectorizationLegalityERNS_25PredicatedScalarEvolutionEPKNS_4LoopE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6664' c='_ZL11isStrideMulPN4llvm11InstructionEPNS_25LoopVectorizationLegalityE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='9172' c='_ZL25getScalarEpilogueLoweringPN4llvm8FunctionEPNS_4LoopERNS_18LoopVectorizeHintsEPNS_18ProfileSummaryInfoEPNS_18BlockFrequencyInfoEPNS_19TargetTransf9040374'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='9226' c='_ZL28processLoopInVPlanNativePathPN4llvm4LoopERNS_25PredicatedScalarEvolutionEPNS_8LoopInfoEPNS_13DominatorTreeEPNS_25LoopVectorizationLegalityEPNS_1913279740'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='9328' c='_ZN4llvm17LoopVectorizePass11processLoopEPNS_4LoopE'/>
<size>680</size>
