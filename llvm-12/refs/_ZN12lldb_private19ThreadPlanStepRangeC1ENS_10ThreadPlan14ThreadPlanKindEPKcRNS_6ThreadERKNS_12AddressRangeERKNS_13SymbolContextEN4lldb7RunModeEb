<dec f='llvm/lldb/include/lldb/Target/ThreadPlanStepRange.h' l='22' type='void lldb_private::ThreadPlanStepRange::ThreadPlanStepRange(lldb_private::ThreadPlan::ThreadPlanKind kind, const char * name, lldb_private::Thread &amp; thread, const lldb_private::AddressRange &amp; range, const lldb_private::SymbolContext &amp; addr_context, lldb::RunMode stop_others, bool given_ranges_only = false)'/>
<use f='llvm/lldb/source/Target/ThreadPlanStepInRange.cpp' l='39' u='c' c='_ZN12lldb_private21ThreadPlanStepInRangeC1ERNS_6ThreadERKNS_12AddressRangeERKNS_13SymbolContextEN4lldb7RunModeENS_8LazyBoolESB_'/>
<use f='llvm/lldb/source/Target/ThreadPlanStepOverRange.cpp' l='35' u='c' c='_ZN12lldb_private23ThreadPlanStepOverRangeC1ERNS_6ThreadERKNS_12AddressRangeERKNS_13SymbolContextEN4lldb7RunModeENS_8LazyBoolE'/>
<def f='llvm/lldb/source/Target/ThreadPlanStepRange.cpp' l='31' ll='48' type='void lldb_private::ThreadPlanStepRange::ThreadPlanStepRange(lldb_private::ThreadPlan::ThreadPlanKind kind, const char * name, lldb_private::Thread &amp; thread, const lldb_private::AddressRange &amp; range, const lldb_private::SymbolContext &amp; addr_context, lldb::RunMode stop_others, bool given_ranges_only = false)'/>
<doc f='llvm/lldb/source/Target/ThreadPlanStepRange.cpp' l='28'>// ThreadPlanStepRange: Step through a stack range, either stepping over or
// into based on the value of \a type.</doc>
