<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_libignore.h' l='26' ll='88'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_libignore.h' l='86' c='__sanitizer::LibIgnore::LibIgnore'/>
<use f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_libignore.h' l='87' c='__sanitizer::LibIgnore::operator='/>
<size>25664</size>
<fun r='__sanitizer::LibIgnore::LibIgnore'/>
<fun r='__sanitizer::LibIgnore::AddIgnoredLibrary'/>
<fun r='__sanitizer::LibIgnore::IgnoreNoninstrumentedModules'/>
<fun r='__sanitizer::LibIgnore::OnLibraryLoaded'/>
<fun r='__sanitizer::LibIgnore::OnLibraryUnloaded'/>
<fun r='__sanitizer::LibIgnore::IsIgnored'/>
<fun r='__sanitizer::LibIgnore::IsPcInstrumented'/>
<fun r='__sanitizer::LibIgnore::IsInRange'/>
<smbr r='__sanitizer::LibIgnore::kMaxIgnoredRanges' t='const __sanitizer::uptr'/>
<smbr r='__sanitizer::LibIgnore::kMaxInstrumentedRanges' t='const __sanitizer::uptr'/>
<smbr r='__sanitizer::LibIgnore::kMaxLibs' t='const __sanitizer::uptr'/>
<mbr r='__sanitizer::LibIgnore::ignored_ranges_count_' o='0' t='__sanitizer::atomic_uintptr_t'/>
<mbr r='__sanitizer::LibIgnore::ignored_code_ranges_' o='32' t='__sanitizer::LibIgnore::LibCodeRange [128]'/>
<mbr r='__sanitizer::LibIgnore::instrumented_ranges_count_' o='8224' t='__sanitizer::atomic_uintptr_t'/>
<mbr r='__sanitizer::LibIgnore::instrumented_code_ranges_' o='8256' t='__sanitizer::LibIgnore::LibCodeRange [1024]'/>
<mbr r='__sanitizer::LibIgnore::mutex_' o='73792' t='__sanitizer::BlockingMutex'/>
<mbr r='__sanitizer::LibIgnore::count_' o='74176' t='__sanitizer::uptr'/>
<mbr r='__sanitizer::LibIgnore::libs_' o='74208' t='__sanitizer::LibIgnore::Lib [1024]'/>
<mbr r='__sanitizer::LibIgnore::track_instrumented_libs_' o='205280' t='bool'/>
<fun r='__sanitizer::LibIgnore::LibIgnore'/>
<fun r='__sanitizer::LibIgnore::operator='/>
<fun r='__sanitizer::LibIgnore::IsIgnored'/>
<fun r='__sanitizer::LibIgnore::IsPcInstrumented'/>
<fun r='__sanitizer::LibIgnore::LibIgnore'/>
<fun r='__sanitizer::LibIgnore::AddIgnoredLibrary'/>
<fun r='__sanitizer::LibIgnore::OnLibraryLoaded'/>
<fun r='__sanitizer::LibIgnore::OnLibraryUnloaded'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors.h' l='22' c='__tsan::libignore'/>
<size>51320</size>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='190'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='209' c='__tsan::libignore'/>
<size>51320</size>
