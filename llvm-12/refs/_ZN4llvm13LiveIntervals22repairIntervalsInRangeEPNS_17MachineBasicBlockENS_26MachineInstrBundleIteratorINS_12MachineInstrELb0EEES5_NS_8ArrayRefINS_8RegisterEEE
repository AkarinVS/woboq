<dec f='llvm/llvm/include/llvm/CodeGen/LiveIntervals.h' l='333' type='void llvm::LiveIntervals::repairIntervalsInRange(llvm::MachineBasicBlock * MBB, MachineBasicBlock::iterator Begin, MachineBasicBlock::iterator End, ArrayRef&lt;llvm::Register&gt; OrigRegs)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/LiveIntervals.h' l='324'>/// Update live intervals for instructions in a range of iterators. It is
    /// intended for use after target hooks that may insert or remove
    /// instructions, and is only efficient for a small number of instructions.
    ///
    /// OrigRegs is a vector of registers that were originally used by the
    /// instructions in the range between the two iterators.
    ///
    /// Currently, the only only changes that are supported are simple removal
    /// and addition of uses.</doc>
<def f='llvm/llvm/lib/CodeGen/LiveIntervals.cpp' l='1637' ll='1686' type='void llvm::LiveIntervals::repairIntervalsInRange(llvm::MachineBasicBlock * MBB, MachineBasicBlock::iterator Begin, MachineBasicBlock::iterator End, ArrayRef&lt;llvm::Register&gt; OrigRegs)'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='1191' u='c' c='_ZN4llvm17MachineBasicBlock17SplitCriticalEdgeEPS0_RNS_4PassEPSt6vectorINS_15SparseBitVectorILj128EEESaIS6_EE'/>
<use f='llvm/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp' l='1294' u='c' c='_ZN12_GLOBAL__N_125TwoAddressInstructionPass23tryInstructionTransformERN4llvm26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEES5_jjjb'/>
<use f='llvm/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp' l='1729' u='c' c='_ZN12_GLOBAL__N_125TwoAddressInstructionPass20eliminateRegSequenceERN4llvm26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCTLSDynamicCall.cpp' l='166' u='c' c='_ZN12_GLOBAL__N_117PPCTLSDynamicCall12processBlockERN4llvm17MachineBasicBlockE'/>
