<dec f='llvm/llvm/include/llvm/TableGen/Record.h' l='90' type='bool llvm::RecTy::typeIsA(const llvm::RecTy * RHS) const'/>
<doc f='llvm/llvm/include/llvm/TableGen/Record.h' l='88'>/// Return true if &apos;this&apos; type is equal to or a subtype of RHS. For example,
  /// a bit set is not an int, but they are convertible.</doc>
<def f='llvm/llvm/lib/TableGen/Record.cpp' l='70' type='bool llvm::RecTy::typeIsA(const llvm::RecTy * RHS) const'/>
<ovr f='llvm/llvm/lib/TableGen/Record.cpp' l='101' c='_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE'/>
<ovr f='llvm/llvm/lib/TableGen/Record.cpp' l='131' c='_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE'/>
<use f='llvm/llvm/lib/TableGen/Record.cpp' l='133' u='c' c='_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE'/>
<ovr f='llvm/llvm/lib/TableGen/Record.cpp' l='229' c='_ZNK4llvm11RecordRecTy7typeIsAEPKNS_5RecTyE'/>
<use f='llvm/llvm/lib/TableGen/Record.cpp' l='720' u='c' c='_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb'/>
<use f='llvm/llvm/lib/TableGen/Record.cpp' l='778' u='c' c='_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb'/>
<use f='llvm/llvm/lib/TableGen/Record.cpp' l='1559' u='c' c='_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE'/>
<use f='llvm/llvm/lib/TableGen/Record.cpp' l='1587' u='c' c='_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='469' u='c' c='_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE'/>
