<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='319' type='llvm::Instruction * llvm::InstCombinerImpl::foldCastedBitwiseLogic(llvm::BinaryOperator &amp; I)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1523' ll='1587' type='llvm::Instruction * llvm::InstCombinerImpl::foldCastedBitwiseLogic(llvm::BinaryOperator &amp; I)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1965' u='c' c='_ZN4llvm16InstCombinerImpl8visitAndERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='2788' u='c' c='_ZN4llvm16InstCombinerImpl7visitOrERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='3427' u='c' c='_ZN4llvm16InstCombinerImpl8visitXorERNS_14BinaryOperatorE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1522'>/// Fold {and,or,xor} (cast X), Y.</doc>
