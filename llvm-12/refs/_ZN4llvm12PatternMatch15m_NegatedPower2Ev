<def f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='512' ll='514' type='cst_pred_ty&lt;llvm::PatternMatch::is_negated_power2&gt; llvm::PatternMatch::m_NegatedPower2()'/>
<doc f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='510'>/// Match a integer or vector negated power-of-2.
/// For vectors, this includes constants with undefined elements.</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='205' u='c' c='_ZN4llvm16InstCombinerImpl8visitMulERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='1124' u='c' c='_ZN4llvm16InstCombinerImpl9visitSDivERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='1125' u='c' c='_ZN4llvm16InstCombinerImpl9visitSDivERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='1195' u='c' c='_ZN4llvm16InstCombinerImpl9visitSDivERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/unittests/IR/PatternMatch.cpp' l='540' u='c' c='_ZN12_GLOBAL__N_128PatternMatchTest_Power2_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/PatternMatch.cpp' l='541' u='c' c='_ZN12_GLOBAL__N_128PatternMatchTest_Power2_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/PatternMatch.cpp' l='549' u='c' c='_ZN12_GLOBAL__N_128PatternMatchTest_Power2_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/PatternMatch.cpp' l='550' u='c' c='_ZN12_GLOBAL__N_128PatternMatchTest_Power2_Test8TestBodyEv'/>
