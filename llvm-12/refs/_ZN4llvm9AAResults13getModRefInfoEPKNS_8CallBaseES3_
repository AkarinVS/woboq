<dec f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='710' type='llvm::ModRefInfo llvm::AAResults::getModRefInfo(const llvm::CallBase * Call1, const llvm::CallBase * Call2)'/>
<doc f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='707'>/// Return information about whether two call sites may refer to the same set
  /// of memory locations. See the AA documentation for details:
  ///   http://llvm.org/docs/AliasAnalysis.html#ModRefInfo</doc>
<def f='llvm/llvm/lib/Analysis/AliasAnalysis.cpp' l='263' ll='267' type='llvm::ModRefInfo llvm::AAResults::getModRefInfo(const llvm::CallBase * Call1, const llvm::CallBase * Call2)'/>
<use f='llvm/llvm/lib/Analysis/AliasAnalysisEvaluator.cpp' l='286' u='c' c='_ZN4llvm11AAEvaluator11runInternalERNS_8FunctionERNS_9AAResultsE'/>
<use f='llvm/llvm/lib/Analysis/AliasSetTracker.cpp' l='245' u='c' c='_ZNK4llvm8AliasSet18aliasesUnknownInstEPKNS_11InstructionERNS_9AAResultsE'/>
<use f='llvm/llvm/lib/Analysis/AliasSetTracker.cpp' l='246' u='c' c='_ZNK4llvm8AliasSet18aliasesUnknownInstEPKNS_11InstructionERNS_9AAResultsE'/>
<use f='llvm/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp' l='219' u='c' c='_ZN4llvm23MemoryDependenceResults21getCallDependencyFromEPNS_8CallBaseEbNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb0ELb0Ev9146597'/>
