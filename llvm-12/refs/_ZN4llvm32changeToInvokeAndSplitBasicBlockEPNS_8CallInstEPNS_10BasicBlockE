<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='354' type='llvm::BasicBlock * llvm::changeToInvokeAndSplitBasicBlock(llvm::CallInst * CI, llvm::BasicBlock * UnwindEdge)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='350'>/// Convert the CallInst to InvokeInst with the specified unwind edge basic
/// block.  This also splits the basic block where CI is located, because
/// InvokeInst is a terminator instruction.  Returns the newly split basic
/// block.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/EscapeEnumerator.cpp' l='93' u='c' c='_ZN4llvm16EscapeEnumerator4NextEv'/>
<use f='llvm/llvm/lib/Transforms/Utils/InlineFunction.cpp' l='585' u='c' c='_ZL38HandleCallsInBlockInlinedThroughInvokePN4llvm10BasicBlockES1_PNS_8DenseMapIPNS_11InstructionEPNS_5ValueENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEE'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='2141' ll='2177' type='llvm::BasicBlock * llvm::changeToInvokeAndSplitBasicBlock(llvm::CallInst * CI, llvm::BasicBlock * UnwindEdge)'/>
