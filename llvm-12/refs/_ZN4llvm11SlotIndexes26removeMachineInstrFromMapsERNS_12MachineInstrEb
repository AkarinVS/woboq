<dec f='llvm/llvm/include/llvm/CodeGen/SlotIndexes.h' l='581' type='void llvm::SlotIndexes::removeMachineInstrFromMaps(llvm::MachineInstr &amp; MI, bool AllowBundled = false)'/>
<use f='llvm/llvm/include/llvm/CodeGen/LiveIntervals.h' l='277' u='c' c='_ZN4llvm13LiveIntervals26RemoveMachineInstrFromMapsERNS_12MachineInstrE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/SlotIndexes.h' l='575'>/// Removes machine instruction (bundle) \p MI from the mapping.
    /// This should be called before MachineInstr::eraseFromParent() is used to
    /// remove a whole bundle or an unbundled instruction.
    /// If \p AllowBundled is set then this can be used on a bundled
    /// instruction; however, this exists to support handleMoveIntoBundle,
    /// and in general removeSingleMachineInstrFromMaps should be used instead.</doc>
<use f='llvm/llvm/lib/CodeGen/LiveIntervals.cpp' l='1494' u='c' c='_ZN4llvm13LiveIntervals10handleMoveERNS_12MachineInstrEb'/>
<use f='llvm/llvm/lib/CodeGen/LiveIntervals.cpp' l='1519' u='c' c='_ZN4llvm13LiveIntervals23handleMoveIntoNewBundleERNS_12MachineInstrEb'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='1081' u='c' c='_ZN4llvm17MachineBasicBlock17SplitCriticalEdgeEPS0_RNS_4PassEPSt6vectorINS_15SparseBitVectorILj128EEESaIS6_EE'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='1097' u='c' c='_ZN4llvm17MachineBasicBlock17SplitCriticalEdgeEPS0_RNS_4PassEPSt6vectorINS_15SparseBitVectorILj128EEESaIS6_EE'/>
<def f='llvm/llvm/lib/CodeGen/SlotIndexes.cpp' l='115' ll='129' type='void llvm::SlotIndexes::removeMachineInstrFromMaps(llvm::MachineInstr &amp; MI, bool AllowBundled = false)'/>
<use f='llvm/llvm/lib/CodeGen/SlotIndexes.cpp' l='235' u='c' c='_ZN4llvm11SlotIndexes20repairIndexesInRangeEPNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEES5_'/>
