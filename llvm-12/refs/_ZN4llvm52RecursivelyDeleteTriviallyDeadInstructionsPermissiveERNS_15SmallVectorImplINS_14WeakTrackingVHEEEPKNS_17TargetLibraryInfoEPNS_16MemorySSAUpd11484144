<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='119' type='bool llvm::RecursivelyDeleteTriviallyDeadInstructionsPermissive(SmallVectorImpl&lt;llvm::WeakTrackingVH&gt; &amp; DeadInsts, const llvm::TargetLibraryInfo * TLI = nullptr, llvm::MemorySSAUpdater * MSSAU = nullptr, std::function&lt;void (Value *)&gt; AboutToDeleteCallback = std::function&lt;void (Value *)&gt;())'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='115'>/// Same functionality as RecursivelyDeleteTriviallyDeadInstructions, but allow
/// instructions that are not trivially dead. These will be ignored.
/// Returns true if any changes were made, i.e. any instructions trivially dead
/// were found and deleted.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp' l='5553' u='c' c='_ZN12_GLOBAL__N_111LSRInstance17ImplementSolutionERKN4llvm15SmallVectorImplIPKNS_7FormulaEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp' l='5864' u='c' c='_ZL18ReduceLoopStrengthPN4llvm4LoopERNS_7IVUsersERNS_15ScalarEvolutionERNS_13DominatorTreeERNS_8LoopInfoERKNS_19TargetTransformInfoERNS_15AssumptionCa13130389'/>
<use f='llvm/llvm/lib/Transforms/Scalar/NaryReassociate.cpp' l='266' u='c' c='_ZN4llvm19NaryReassociatePass14doOneIterationERNS_8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalarizer.cpp' l='959' u='c' c='_ZN12_GLOBAL__N_117ScalarizerVisitor6finishEv'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='501' ll='518' type='bool llvm::RecursivelyDeleteTriviallyDeadInstructionsPermissive(SmallVectorImpl&lt;llvm::WeakTrackingVH&gt; &amp; DeadInsts, const llvm::TargetLibraryInfo * TLI = nullptr, llvm::MemorySSAUpdater * MSSAU = nullptr, std::function&lt;void (Value *)&gt; AboutToDeleteCallback = std::function&lt;void (Value *)&gt;())'/>
