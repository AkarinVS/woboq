<dec f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='162' type='llvm::FunctionPass * llvm::createLoopFlattenPass()'/>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='158'>//===----------------------------------------------------------------------===//
//
// LoopFlatten - This pass flattens nested loops into a single loop.
//</doc>
<use f='llvm/llvm/include/llvm/LinkAllPasses.h' l='130' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='450' u='c' c='_ZN4llvm18PassManagerBuilder31addFunctionSimplificationPassesERNS_6legacy15PassManagerBaseE'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='1066' u='c' c='_ZN4llvm18PassManagerBuilder24addLTOOptimizationPassesERNS_6legacy15PassManagerBaseE'/>
<def f='llvm/llvm/lib/Transforms/Scalar/LoopFlatten.cpp' l='717' type='llvm::FunctionPass * llvm::createLoopFlattenPass()'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='193' u='c' c='_Z22LLVMAddLoopFlattenPassP21LLVMOpaquePassManager'/>
