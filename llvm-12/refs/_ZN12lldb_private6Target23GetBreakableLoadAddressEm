<dec f='llvm/lldb/include/lldb/Target/Target.h' l='824' type='lldb::addr_t lldb_private::Target::GetBreakableLoadAddress(lldb::addr_t addr)'/>
<doc f='llvm/lldb/include/lldb/Target/Target.h' l='819'>// Get load_addr as breakable load address for this target. Take a addr and
  // check if for any reason there is a better address than this to put a
  // breakpoint on. If there is then return that address. For MIPS, if
  // instruction at addr is a delay slot instruction then this method will find
  // the address of its previous instruction and return that address.</doc>
<use f='llvm/lldb/source/Target/Target.cpp' l='385' u='c' c='_ZN12lldb_private6Target16CreateBreakpointEmbb'/>
<def f='llvm/lldb/source/Target/Target.cpp' l='2513' ll='2516' type='lldb::addr_t lldb_private::Target::GetBreakableLoadAddress(lldb::addr_t addr)'/>
