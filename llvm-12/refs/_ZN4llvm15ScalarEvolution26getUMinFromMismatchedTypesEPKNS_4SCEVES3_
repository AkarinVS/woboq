<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='664' type='const llvm::SCEV * llvm::ScalarEvolution::getUMinFromMismatchedTypes(const llvm::SCEV * LHS, const llvm::SCEV * RHS)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='662'>/// Promote the operands to the wider of the types using zero-extension, and
  /// then perform a umin operation with them.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='4093' ll='4097' type='const llvm::SCEV * llvm::ScalarEvolution::getUMinFromMismatchedTypes(const llvm::SCEV * LHS, const llvm::SCEV * RHS)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7425' u='c' c='_ZN4llvm15ScalarEvolution25computeBackedgeTakenCountEPKNS_4LoopEb'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7633' u='c' c='_ZN4llvm15ScalarEvolution33computeExitLimitFromCondFromBinOpERNS0_14ExitLimitCacheEPKNS_4LoopEPNS_5ValueEbbb'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7645' u='c' c='_ZN4llvm15ScalarEvolution33computeExitLimitFromCondFromBinOpERNS0_14ExitLimitCacheEPKNS_4LoopEPNS_5ValueEbbb'/>
