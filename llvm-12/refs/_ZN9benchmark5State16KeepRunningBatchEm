<dec f='llvm/llvm/utils/benchmark/include/benchmark/benchmark.h' l='462' type='bool benchmark::State::KeepRunningBatch(size_t n)'/>
<def f='llvm/llvm/utils/benchmark/include/benchmark/benchmark.h' l='653' ll='656' type='bool benchmark::State::KeepRunningBatch(size_t n)'/>
<doc f='llvm/llvm/utils/benchmark/include/benchmark/benchmark.h' l='452'>// Returns true iff the benchmark should run n more iterations.
  // REQUIRES: &apos;n&apos; &gt; 0.
  // NOTE: A benchmark must not return from the test until KeepRunningBatch()
  // has returned false.
  // NOTE: KeepRunningBatch() may overshoot by up to &apos;n&apos; iterations.
  //
  // Intended usage:
  //   while (state.KeepRunningBatch(1000)) {
  //     // process 1000 elements
  //   }</doc>
