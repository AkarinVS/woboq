<def f='llvm/llvm/utils/TableGen/CodeGenSchedule.h' l='127' ll='163'/>
<use f='llvm/llvm/utils/TableGen/CodeGenSchedule.h' l='434'/>
<use f='llvm/llvm/utils/TableGen/CodeGenSchedule.h' l='541' c='_ZN4llvm18CodeGenSchedModels13getSchedClassEj'/>
<use f='llvm/llvm/utils/TableGen/CodeGenSchedule.h' l='545' c='_ZNK4llvm18CodeGenSchedModels13getSchedClassEj'/>
<use f='llvm/llvm/utils/TableGen/CodeGenSchedule.h' l='558' c='_ZNK4llvm18CodeGenSchedModels12schedClassesEv'/>
<use f='llvm/llvm/utils/TableGen/CodeGenSchedule.cpp' l='909' c='_ZN4llvm18CodeGenSchedModels19collectSchedClassesEv'/>
<use f='llvm/llvm/utils/TableGen/CodeGenSchedule.cpp' l='1010' c='_ZN4llvm18CodeGenSchedModels13addSchedClassEPNS_6RecordENS_8ArrayRefIjEES4_S4_'/>
<use f='llvm/llvm/utils/TableGen/CodeGenSchedule.cpp' l='1030' c='_ZN4llvm18CodeGenSchedModels13addSchedClassEPNS_6RecordENS_8ArrayRefIjEES4_S4_'/>
<use f='llvm/llvm/utils/TableGen/CodeGenSchedule.cpp' l='1103' c='_ZN4llvm18CodeGenSchedModels17createInstRWClassEPNS_6RecordE'/>
<use f='llvm/llvm/utils/TableGen/CodeGenSchedule.cpp' l='1166' c='_ZN4llvm18CodeGenSchedModels16collectProcItinsEv'/>
<use f='llvm/llvm/utils/TableGen/CodeGenSchedule.cpp' l='1663' c='_ZL14dumpTransitionRKN4llvm18CodeGenSchedModelsERKNS_17CodeGenSchedClassERKNS_22CodeGenSchedTransitionERKSt6vectorIPNS_6RecordESaISB_EE'/>
<use f='llvm/llvm/utils/TableGen/CodeGenSchedule.cpp' l='1692' c='_ZL20inferFromTransitionsN4llvm8ArrayRefIN12_GLOBAL__N_114PredTransitionEEEjRNS_18CodeGenSchedModelsE'/>
<use f='llvm/llvm/utils/TableGen/CodeGenSchedule.cpp' l='1888' c='_ZN4llvm18CodeGenSchedModels20collectProcResourcesEv'/>
<use f='llvm/llvm/utils/TableGen/CodeGenSchedule.cpp' l='2007' c='_ZN4llvm18CodeGenSchedModels17checkCompletenessEv'/>
<size>192</size>
<doc f='llvm/llvm/utils/TableGen/CodeGenSchedule.h' l='103'>/// Scheduling class.
///
/// Each instruction description will be mapped to a scheduling class. There are
/// four types of classes:
///
/// 1) An explicitly defined itinerary class with ItinClassDef set.
/// Writes and ReadDefs are empty. ProcIndices contains 0 for any processor.
///
/// 2) An implied class with a list of SchedWrites and SchedReads that are
/// defined in an instruction definition and which are common across all
/// subtargets. ProcIndices contains 0 for any processor.
///
/// 3) An implied class with a list of InstRW records that map instructions to
/// SchedWrites and SchedReads per-processor. InstrClassMap should map the same
/// instructions to this class. ProcIndices contains all the processors that
/// provided InstrRW records for this class. ItinClassDef or Writes/Reads may
/// still be defined for processors with no InstRW entry.
///
/// 4) An inferred class represents a variant of another class that may be
/// resolved at runtime. ProcIndices contains the set of processors that may
/// require the class. ProcIndices are propagated through SchedClasses as
/// variants are expanded. Multiple SchedClasses may be inferred from an
/// itinerary class. Each inherits the processor index from the ItinRW record
/// that mapped the itinerary class to the variant Writes or Reads.</doc>
<mbr r='llvm::CodeGenSchedClass::Index' o='0' t='unsigned int'/>
<mbr r='llvm::CodeGenSchedClass::Name' o='64' t='std::string'/>
<mbr r='llvm::CodeGenSchedClass::ItinClassDef' o='320' t='llvm::Record *'/>
<mbr r='llvm::CodeGenSchedClass::Writes' o='384' t='llvm::IdxVec'/>
<mbr r='llvm::CodeGenSchedClass::Reads' o='576' t='llvm::IdxVec'/>
<mbr r='llvm::CodeGenSchedClass::ProcIndices' o='768' t='llvm::IdxVec'/>
<mbr r='llvm::CodeGenSchedClass::Transitions' o='960' t='std::vector&lt;CodeGenSchedTransition&gt;'/>
<mbr r='llvm::CodeGenSchedClass::InstRWs' o='1152' t='llvm::RecVec'/>
<mbr r='llvm::CodeGenSchedClass::InstRWProcIndices' o='1344' t='DenseSet&lt;unsigned int&gt;'/>
<fun r='_ZN4llvm17CodeGenSchedClassC1EjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPNS_6RecordE'/>
<fun r='_ZNK4llvm17CodeGenSchedClass10isKeyEqualEPNS_6RecordENS_8ArrayRefIjEES4_'/>
<fun r='_ZNK4llvm17CodeGenSchedClass10isInferredEv'/>
<use f='llvm/llvm/utils/TableGen/SubtargetEmitter.cpp' l='989' c='_ZN12_GLOBAL__N_116SubtargetEmitter19GenSchedClassTablesERKN4llvm16CodeGenProcModelERNS0_16SchedClassTablesE'/>
<use f='llvm/llvm/utils/TableGen/SubtargetEmitter.cpp' l='1313' c='_ZN12_GLOBAL__N_116SubtargetEmitter20EmitSchedClassTablesERNS0_16SchedClassTablesERN4llvm11raw_ostreamE'/>
<use f='llvm/llvm/utils/TableGen/SubtargetEmitter.cpp' l='1445' c='_ZL14emitPredicatesRKN4llvm22CodeGenSchedTransitionERKNS_17CodeGenSchedClassERNS_17PredicateExpanderERNS_11raw_ostreamE'/>
<use f='llvm/llvm/utils/TableGen/SubtargetEmitter.cpp' l='1520' c='_ZL21collectVariantClassesRKN4llvm18CodeGenSchedModelsERSt6vectorIjSaIjEEb'/>
<use f='llvm/llvm/utils/TableGen/SubtargetEmitter.cpp' l='1538' c='_ZL23collectProcessorIndicesRKN4llvm17CodeGenSchedClassERSt6vectorIjSaIjEE'/>
<use f='llvm/llvm/utils/TableGen/SubtargetEmitter.cpp' l='1577' c='_ZN12_GLOBAL__N_116SubtargetEmitter25emitSchedModelHelpersImplERN4llvm11raw_ostreamEb'/>
<size>192</size>
