<dec f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.h' l='104' type='bool IRForTarget::runOnModule(llvm::Module &amp; llvm_module)'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionParser.cpp' l='1402' u='c' c='_ZN12lldb_private21ClangExpressionParser19PrepareForExecutionERmS1_RSt10shared_ptrINS_15IRExecutionUnitEERNS_16ExecutionContextERbNS_15ExecutionPolicyE'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.h' l='93'>/// Run this IR transformer on a single module
  ///
  /// Implementation of the llvm::ModulePass::runOnModule() function.
  ///
  /// \param[in] llvm_module
  ///     The module to run on.  This module is searched for the function
  ///     $__lldb_expr, and that function is passed to the passes one by
  ///     one.
  ///
  /// \return
  ///     True on success; false otherwise</doc>
<inh f='llvm/llvm/include/llvm/Pass.h' l='251' c='_ZN4llvm10ModulePass11runOnModuleERNS_6ModuleE'/>
<def f='llvm/lldb/source/Plugins/ExpressionParser/Clang/IRForTarget.cpp' l='1841' ll='2024' type='bool IRForTarget::runOnModule(llvm::Module &amp; llvm_module)'/>
