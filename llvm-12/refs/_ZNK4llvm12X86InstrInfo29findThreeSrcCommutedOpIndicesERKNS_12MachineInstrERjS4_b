<dec f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='626' type='bool llvm::X86InstrInfo::findThreeSrcCommutedOpIndices(const llvm::MachineInstr &amp; MI, unsigned int &amp; SrcOpIdx1, unsigned int &amp; SrcOpIdx2, bool IsIntrinsic = false) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='609'>/// Returns true iff the routine could find two commutable operands in the
  /// given machine instruction with 3 vector inputs.
  /// The &apos;SrcOpIdx1&apos; and &apos;SrcOpIdx2&apos; are INPUT and OUTPUT arguments. Their
  /// input values can be re-defined in this method only if the input values
  /// are not pre-defined, which is designated by the special value
  /// &apos;CommuteAnyOperandIndex&apos; assigned to it.
  /// If both of indices are pre-defined and refer to some operands, then the
  /// method simply returns true if the corresponding operands are commutable
  /// and returns false otherwise.
  ///
  /// For example, calling this method this way:
  ///     unsigned Op1 = 1, Op2 = CommuteAnyOperandIndex;
  ///     findThreeSrcCommutedOpIndices(MI, Op1, Op2);
  /// can be interpreted as a query asking to find an operand that would be
  /// commutable with the operand#1.
  ///
  /// If IsIntrinsic is set, operand 1 will be ignored for commuting.</doc>
<def f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='2357' ll='2459' type='bool llvm::X86InstrInfo::findThreeSrcCommutedOpIndices(const llvm::MachineInstr &amp; MI, unsigned int &amp; SrcOpIdx1, unsigned int &amp; SrcOpIdx2, bool IsIntrinsic = false) const'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='2568' u='c' c='_ZNK4llvm12X86InstrInfo21findCommutedOpIndicesERKNS_12MachineInstrERjS4_'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='2630' u='c' c='_ZNK4llvm12X86InstrInfo21findCommutedOpIndicesERKNS_12MachineInstrERjS4_'/>
