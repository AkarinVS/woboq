<dec f='llvm/clang/include/clang/Format/Format.h' l='2598' type='std::vector&lt;RawStringFormat&gt;'/>
<use f='llvm/clang/include/clang/Format/Format.h' l='3126' u='r' c='_ZNK5clang6format11FormatStyleeqERKS1_'/>
<use f='llvm/clang/include/clang/Format/Format.h' l='3126' u='r' c='_ZNK5clang6format11FormatStyleeqERKS1_'/>
<offset>4352</offset>
<doc f='llvm/clang/include/clang/Format/Format.h' l='2563'>/// Defines hints for detecting supported languages code blocks in raw
  /// strings.
  ///
  /// A raw string with a matching delimiter or a matching enclosing function
  /// name will be reformatted assuming the specified language based on the
  /// style for that language defined in the .clang-format file. If no style has
  /// been defined in the .clang-format file for the specific language, a
  /// predefined style given by &apos;BasedOnStyle&apos; is used. If &apos;BasedOnStyle&apos; is not
  /// found, the formatting is based on llvm style. A matching delimiter takes
  /// precedence over a matching enclosing function name for determining the
  /// language of the raw string contents.
  ///
  /// If a canonical delimiter is specified, occurrences of other delimiters for
  /// the same language will be updated to the canonical if possible.
  ///
  /// There should be at most one specification per language and each delimiter
  /// and enclosing function should not occur in multiple specifications.
  ///
  /// To configure this in the .clang-format file, use:
  /// \code{.yaml}
  ///   RawStringFormats:
  ///     - Language: TextProto
  ///         Delimiters:
  ///           - &apos;pb&apos;
  ///           - &apos;proto&apos;
  ///         EnclosingFunctions:
  ///           - &apos;PARSE_TEXT_PROTO&apos;
  ///         BasedOnStyle: google
  ///     - Language: Cpp
  ///         Delimiters:
  ///           - &apos;cc&apos;
  ///           - &apos;cpp&apos;
  ///         BasedOnStyle: llvm
  ///         CanonicalDelimiter: &apos;cc&apos;
  /// \endcode</doc>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='176' c='_ZN5clang6formatL30getCanonicalRawStringDelimiterERKNS0_11FormatStyleENS1_12LanguageKindE'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='185' c='_ZN5clang6format27RawStringFormatStyleManagerC1ERKNS0_11FormatStyleE'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='630' u='a' c='_ZN4llvm4yaml13MappingTraitsIN5clang6format11FormatStyleEE7mappingERNS0_2IOERS4_'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='1067' u='w' c='_ZN5clang6format14getGoogleStyleENS0_11FormatStyle12LanguageKindE'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15962' u='m' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15996' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='15996' u='r' c='_ZN5clang6format12_GLOBAL__N_135FormatTest_ParsesConfiguration_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTestRawStrings.cpp' l='66' u='w' c='_ZN5clang6format12_GLOBAL__N_120FormatTestRawStrings30getRawStringPbStyleWithColumnsEj'/>
<use f='llvm/clang/unittests/Format/FormatTestRawStrings.cpp' l='80' u='w' c='_ZN5clang6format12_GLOBAL__N_120FormatTestRawStrings31getRawStringLLVMCppStyleBasedOnENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/clang/unittests/Format/FormatTestRawStrings.cpp' l='94' u='w' c='_ZN5clang6format12_GLOBAL__N_120FormatTestRawStrings33getRawStringGoogleCppStyleBasedOnENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/clang/unittests/Format/FormatTestRawStrings.cpp' l='145' u='w' c='_ZN5clang6format12_GLOBAL__N_156FormatTestRawStrings_UsesConfigurationOverBaseStyle_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTestRawStrings.cpp' l='764' u='m' c='_ZN5clang6format12_GLOBAL__N_168FormatTestRawStrings_FormatsRawStringsWithEnclosingFunctionName_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTestRawStrings.cpp' l='765' u='m' c='_ZN5clang6format12_GLOBAL__N_168FormatTestRawStrings_FormatsRawStringsWithEnclosingFunctionName_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTestRawStrings.cpp' l='786' u='m' c='_ZN5clang6format12_GLOBAL__N_154FormatTestRawStrings_UpdatesToCanonicalDelimiters_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTestRawStrings.cpp' l='863' u='m' c='_ZN5clang6format12_GLOBAL__N_180FormatTestRawStrings_DoNotFormatUnrecognizedDelimitersInRecognizedFunctions_Test8TestBodyEv'/>
