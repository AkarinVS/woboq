<def f='llvm/llvm/include/llvm/IR/Instructions.h' l='2879' type='bool llvm::LandingPadInst::isCleanup() const'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='2876'>/// Return &apos;true&apos; if this landingpad instruction is a
  /// cleanup. I.e., it should be run when unwinding even if its landing pad
  /// doesn&apos;t catch the exception.</doc>
<use f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp' l='2987' u='c' c='_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE'/>
<use f='llvm/llvm/lib/CodeGen/DwarfEHPrepare.cpp' l='170' u='c' c='_ZN12_GLOBAL__N_114DwarfEHPrepare23InsertUnwindResumeCallsEv'/>
<use f='llvm/llvm/lib/CodeGen/MachineFunction.cpp' l='714' u='c' c='_ZN4llvm15MachineFunction13addLandingPadEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/IR/AsmWriter.cpp' l='4023' u='c' c='_ZN12_GLOBAL__N_114AssemblyWriter16printInstructionERKN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/IR/AsmWriter.cpp' l='4026' u='c' c='_ZN12_GLOBAL__N_114AssemblyWriter16printInstructionERKN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/IR/AsmWriter.cpp' l='4030' u='c' c='_ZN12_GLOBAL__N_114AssemblyWriter16printInstructionERKN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='3259' u='c' c='LLVMIsCleanup'/>
<use f='llvm/llvm/lib/IR/Instructions.cpp' l='207' u='c' c='_ZN4llvm14LandingPadInstC1ERKS0_'/>
<use f='llvm/llvm/lib/IR/Verifier.cpp' l='3893' u='c' c='_ZN12_GLOBAL__N_18Verifier19visitLandingPadInstERN4llvm14LandingPadInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='3163' u='c' c='_ZN4llvm16InstCombinerImpl19visitLandingPadInstERNS_14LandingPadInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='3452' u='c' c='_ZN4llvm16InstCombinerImpl19visitLandingPadInstERNS_14LandingPadInstE'/>
<use f='llvm/llvm/lib/Transforms/Utils/InlineFunction.cpp' l='623' u='c' c='_ZL23HandleInlinedLandingPadPN4llvm10InvokeInstEPNS_10BasicBlockERNS_14ClonedCodeInfoE'/>
