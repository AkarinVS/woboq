<dec f='llvm/lldb/include/lldb/Symbol/DWARFCallFrameInfo.h' l='73' type='void lldb_private::DWARFCallFrameInfo::GetFunctionAddressAndSizeVector(lldb_private::DWARFCallFrameInfo::FunctionAddressAndSizeVector &amp; function_info)'/>
<doc f='llvm/lldb/include/lldb/Symbol/DWARFCallFrameInfo.h' l='58'>// Build a vector of file address and size for all functions in this Module
  // based on the eh_frame FDE entries.
  //
  // The eh_frame information can be a useful source of file address and size
  // of the functions in a Module.  Often a binary&apos;s non-exported symbols are
  // stripped before shipping so lldb won&apos;t know the start addr / size of many
  // functions in the Module.  But the eh_frame can help to give the addresses
  // of these stripped symbols, at least.
  //
  // \param[out] function_info
  //      A vector provided by the caller is filled out.  May be empty if no
  //      FDEs/no eh_frame
  //      is present in this Module.</doc>
<use f='llvm/lldb/source/Plugins/ObjectFile/Mach-O/ObjectFileMachO.cpp' l='2484' u='c' c='_ZN15ObjectFileMachO11ParseSymtabEv'/>
<def f='llvm/lldb/source/Symbol/DWARFCallFrameInfo.cpp' l='211' ll='227' type='void lldb_private::DWARFCallFrameInfo::GetFunctionAddressAndSizeVector(lldb_private::DWARFCallFrameInfo::FunctionAddressAndSizeVector &amp; function_info)'/>
