<dec f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderDarwin.h' l='53' type='bool lldb_private::DynamicLoaderDarwin::AlwaysRelyOnEHUnwindInfo(lldb_private::SymbolContext &amp; sym_ctx)'/>
<inh f='llvm/lldb/include/lldb/Target/DynamicLoader.h' l='181' c='_ZN12lldb_private13DynamicLoader24AlwaysRelyOnEHUnwindInfoERNS_13SymbolContextE'/>
<def f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderDarwin.cpp' l='737' ll='752' type='bool lldb_private::DynamicLoaderDarwin::AlwaysRelyOnEHUnwindInfo(lldb_private::SymbolContext &amp; sym_ctx)'/>
<doc f='llvm/lldb/source/Plugins/DynamicLoader/MacOSX-DYLD/DynamicLoaderDarwin.cpp' l='725'>// On Mac OS X libobjc (the Objective-C runtime) has several critical dispatch
// functions written in hand-written assembly, and also have hand-written
// unwind information in the eh_frame section.  Normally we prefer analyzing
// the assembly instructions of a currently executing frame to unwind from that
// frame -- but on hand-written functions this profiling can fail.  We should
// use the eh_frame instructions for these functions all the time.
//
// As an aside, it would be better if the eh_frame entries had a flag (or were
// extensible so they could have an Apple-specific flag) which indicates that
// the instructions are asynchronous -- accurate at every instruction, instead
// of our normal default assumption that they are not.</doc>
