<dec f='llvm/clang/include/clang/AST/DeclCXX.h' l='1021' type='clang::CXXMethodDecl * clang::CXXRecordDecl::getLambdaStaticInvoker() const'/>
<doc f='llvm/clang/include/clang/AST/DeclCXX.h' l='1014'>/// Retrieve the lambda static invoker, the address of which
  /// is returned by the conversion operator, and the body of which
  /// is forwarded to the lambda call operator. The version that does not
  /// take a calling convention uses the &apos;default&apos; calling convention for free
  /// functions if the Lambda&apos;s calling convention was not modified via
  /// attribute. Otherwise, it will return the calling convention specified for
  /// the lambda.</doc>
<def f='llvm/clang/lib/AST/DeclCXX.cpp' l='1513' ll='1517' type='clang::CXXMethodDecl * clang::CXXRecordDecl::getLambdaStaticInvoker() const'/>
<use f='llvm/clang/lib/AST/ItaniumMangle.cpp' l='1876' u='c' c='_ZN12_GLOBAL__N_114CXXNameMangler15mangleLambdaSigEPKN5clang13CXXRecordDeclE'/>
