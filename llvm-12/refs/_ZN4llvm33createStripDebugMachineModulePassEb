<dec f='llvm/llvm/include/llvm/CodeGen/Passes.h' l='483' type='llvm::ModulePass * llvm::createStripDebugMachineModulePass(bool OnlyDebugified)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/Passes.h' l='479'>/// Creates MIR Strip Debug pass. \see MachineStripDebug.cpp
  /// If OnlyDebugified is true then it will only strip debug info if it was
  /// added by a Debugify pass. The module will be left unchanged if the debug
  /// info was generated by another source such as clang.</doc>
<def f='llvm/llvm/lib/CodeGen/MachineStripDebug.cpp' l='109' ll='111' type='llvm::ModulePass * llvm::createStripDebugMachineModulePass(bool OnlyDebugified)'/>
<use f='llvm/llvm/lib/CodeGen/TargetPassConfig.cpp' l='771' u='c' c='_ZN4llvm16TargetPassConfig17addStripDebugPassEv'/>
