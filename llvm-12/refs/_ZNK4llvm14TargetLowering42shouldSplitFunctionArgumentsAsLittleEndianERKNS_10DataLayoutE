<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3986' ll='3989' type='bool llvm::TargetLowering::shouldSplitFunctionArgumentsAsLittleEndian(const llvm::DataLayout &amp; DL) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3982'>/// For most targets, an LLVM type must be broken down into multiple
  /// smaller types. Usually the halves are ordered according to the endianness
  /// but for some platform that would break. So this method will default to
  /// matching the endianness but can be overridden.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='8216' u='c' c='_ZNK4llvm14TargetLowering10expandMULOEPNS_6SDNodeERNS_7SDValueES4_RNS_12SelectionDAGE'/>
<ovr f='llvm/llvm/lib/Target/AVR/AVRISelLowering.h' l='136' c='_ZNK4llvm17AVRTargetLowering42shouldSplitFunctionArgumentsAsLittleEndianERKNS_10DataLayoutE'/>
