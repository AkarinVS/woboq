<dec f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.h' l='144' type='bool lldb_private::EmulateInstructionARM::CreateFunctionEntryUnwind(lldb_private::UnwindPlan &amp; unwind_plan)'/>
<inh f='llvm/lldb/include/lldb/Core/EmulateInstruction.h' l='380' c='_ZN12lldb_private18EmulateInstruction25CreateFunctionEntryUnwindERNS_10UnwindPlanE'/>
<def f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='14494' ll='14510' type='bool lldb_private::EmulateInstructionARM::CreateFunctionEntryUnwind(lldb_private::UnwindPlan &amp; unwind_plan)'/>
<doc f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='14470'>//
//
// const char *
// EmulateInstructionARM::GetRegisterName (uint32_t reg_kind, uint32_t reg_num)
//{
//    if (reg_kind == eRegisterKindGeneric)
//    {
//        switch (reg_num)
//        {
//        case LLDB_REGNUM_GENERIC_PC:    return &quot;pc&quot;;
//        case LLDB_REGNUM_GENERIC_SP:    return &quot;sp&quot;;
//        case LLDB_REGNUM_GENERIC_FP:    return &quot;fp&quot;;
//        case LLDB_REGNUM_GENERIC_RA:    return &quot;lr&quot;;
//        case LLDB_REGNUM_GENERIC_FLAGS: return &quot;cpsr&quot;;
//        default: return NULL;
//        }
//    }
//    else if (reg_kind == eRegisterKindDWARF)
//    {
//        return GetARMDWARFRegisterName (reg_num);
//    }
//    return NULL;
//}
//</doc>
