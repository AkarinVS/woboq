<dec f='llvm/llvm/utils/benchmark/src/re.h' l='66' type='bool benchmark::Regex::Init(const std::string &amp; spec, std::string * error)'/>
<def f='llvm/llvm/utils/benchmark/src/re.h' l='85' ll='101' type='bool benchmark::Regex::Init(const std::string &amp; spec, std::string * error)'/>
<doc f='llvm/llvm/utils/benchmark/src/re.h' l='62'>// Compile a regular expression matcher from spec.  Returns true on success.
  //
  // On failure (and if error is not nullptr), error is populated with a human
  // readable error message if an error occurs.</doc>
<use f='llvm/llvm/utils/benchmark/src/benchmark_register.cc' l='122' u='c' c='_ZN9benchmark8internal17BenchmarkFamilies14FindBenchmarksENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt6vectorINS0_9Benchmark8InstanceESaISA_EEPSo'/>
