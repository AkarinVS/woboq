<dec f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='481' type='bool llvm::GVNHoist::allOperandsAvailable(const llvm::Instruction * I, const llvm::BasicBlock * HoistPt) const'/>
<def f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='917' ll='925' type='bool llvm::GVNHoist::allOperandsAvailable(const llvm::Instruction * I, const llvm::BasicBlock * HoistPt) const'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='1129' u='c' c='_ZN4llvm8GVNHoist5hoistERNS_11SmallVectorISt4pairIPNS_10BasicBlockENS1_IPNS_11InstructionELj4EEEELj4EEE'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='477'>// Return true when all operands of Instr are available at insertion point
  // HoistPt. When limiting the number of hoisted expressions, one could hoist
  // a load without hoisting its access function. So before hoisting any
  // expression, make sure that all its operands are available at insert point.</doc>
