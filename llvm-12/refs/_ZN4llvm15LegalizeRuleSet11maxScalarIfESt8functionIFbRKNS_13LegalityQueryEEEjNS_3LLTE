<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='886' ll='899' type='llvm::LegalizeRuleSet &amp; llvm::LegalizeRuleSet::maxScalarIf(llvm::LegalityPredicate Predicate, unsigned int TypeIdx, const llvm::LLT Ty)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='883'>/// Conditionally limit the maximum size of the scalar.
  /// For example, when the maximum size of one type depends on the size of
  /// another such as extracting N bits from an M bit container.</doc>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp' l='224' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp' l='223' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp' l='244' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp' l='243' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp' l='1340' u='c' c='_ZN4llvm19AMDGPULegalizerInfoC1ERKNS_12GCNSubtargetERKNS_16GCNTargetMachineE'/>
