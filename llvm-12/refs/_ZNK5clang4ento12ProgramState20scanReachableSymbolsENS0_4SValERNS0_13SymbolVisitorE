<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h' l='364' type='bool clang::ento::ProgramState::scanReachableSymbols(clang::ento::SVal val, clang::ento::SymbolVisitor &amp; visitor) const'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h' l='357'>/// Visits the symbols reachable from the given SVal using the provided
  /// SymbolVisitor.
  ///
  /// This is a convenience API. Consider using ScanReachableSymbols class
  /// directly when making multiple scans on the same state with the same
  /// visitor to avoid repeated initialization cost.
  /// \sa ScanReachableSymbols</doc>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp' l='288' u='c' c='_ZL23getFuchsiaHandleSymbolsN5clang8QualTypeENS_4ento4SValEN4llvm18IntrusiveRefCntPtrIKNS1_12ProgramStateEEE'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp' l='1196' u='c' c='_ZNK5clang4ento10ExprEngine12escapeValuesEN4llvm18IntrusiveRefCntPtrIKNS0_12ProgramStateEEENS2_8ArrayRefINS0_4SValEEENS0_17PointerEscapeKindEPKNS0_9CallEventE'/>
<def f='llvm/clang/lib/StaticAnalyzer/Core/ProgramState.cpp' l='634' ll='637' type='bool clang::ento::ProgramState::scanReachableSymbols(clang::ento::SVal val, clang::ento::SymbolVisitor &amp; visitor) const'/>
