<dec f='llvm/clang/include/clang/Sema/Sema.h' l='4925' type='void clang::Sema::CheckUnusedVolatileAssignment(clang::Expr * E)'/>
<def f='llvm/clang/lib/Sema/SemaExpr.cpp' l='16321' ll='16335' type='void clang::Sema::CheckUnusedVolatileAssignment(clang::Expr * E)'/>
<doc f='llvm/clang/lib/Sema/SemaExpr.cpp' l='16317'>/// Check whether E, which is either a discarded-value expression or an
/// unevaluated operand, is a simple-assignment to a volatlie-qualified lvalue,
/// and if so, remove it from the list of volatile-qualified assignments that
/// we are going to warn are deprecated.</doc>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='5465' u='c' c='_ZL23EvaluateBinaryTypeTraitRN5clang4SemaENS_9TypeTraitENS_8QualTypeES3_NS_14SourceLocationE'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='7779' u='c' c='_ZN5clang4Sema23IgnoredValueConversionsEPNS_4ExprE'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='7817' u='c' c='_ZN5clang4Sema23CheckUnevaluatedOperandEPNS_4ExprE'/>
