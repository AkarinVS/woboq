<dec f='include/signal.h' l='237' type='int sigsuspend(const sigset_t * __set)'/>
<doc f='include/signal.h' l='232'>/* Change the set of blocked signals to SET,
   wait until a signal arrives, and restore the set of blocked signals.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<def f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='1901' macro='1' type='int sigsuspend(const __sanitizer::__sanitizer_sigset_t * mask)'/>
<use f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='2793' u='a' c='__tsan::InitializeInterceptors'/>
<doc f='llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp' l='1897'>// The following functions are intercepted merely to process pending signals.
// If program blocks signal X, we must deliver the signal before the function
// returns. Similarly, if program unblocks a signal (or returns from sigsuspend)
// it&apos;s better to deliver the signal straight away.</doc>
