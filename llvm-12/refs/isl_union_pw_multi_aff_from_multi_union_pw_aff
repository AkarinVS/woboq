<dec f='llvm/polly/lib/External/isl/include/isl/aff.h' l='1331' type='isl_union_pw_multi_aff * isl_union_pw_multi_aff_from_multi_union_pw_aff(isl_multi_union_pw_aff * mupa)'/>
<use f='llvm/polly/lib/External/isl/include/isl/isl-noexceptions.h' l='17706' u='c' c='_ZN3isl12noexceptions18union_pw_multi_affC1ENS0_18multi_union_pw_affE'/>
<def f='llvm/polly/lib/External/isl/isl_aff.c' l='9083' ll='9118' type='isl_union_pw_multi_aff * isl_union_pw_multi_aff_from_multi_union_pw_aff(isl_multi_union_pw_aff * mupa)'/>
<use f='llvm/polly/lib/External/isl/isl_aff.c' l='9163' u='c' c='isl_multi_union_pw_aff_intersect_range'/>
<doc f='llvm/polly/lib/External/isl/isl_aff.c' l='9076'>/* Construct and return a union piecewise multi affine expression
 * that is equal to the given multi union piecewise affine expression.
 *
 * If the input is zero-dimensional, then
 * construct a union piecewise multi affine expression
 * on top of the explicit domain of the input.
 */</doc>
<use f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='770' u='c' c='isl_schedule_node_get_prefix_schedule_union_pw_multi_aff'/>
<use f='llvm/polly/lib/External/isl/isl_schedule_node.c' l='3239' u='c' c='isl_schedule_node_group'/>
<use f='llvm/polly/lib/External/ppcg/grouping.c' l='453' u='c' c='group_contraction_from_prefix_and_domain'/>
<use f='llvm/polly/lib/External/ppcg/hybrid.c' l='2112' u='c' c='ppcg_ht_bounds_insert_tiling'/>
