<dec f='llvm/lldb/tools/lldb-vscode/FifoFiles.h' l='74' type='llvm::Error lldb_vscode::FifoFileIO::SendJSON(const llvm::json::Value &amp; json, std::chrono::milliseconds timeout = std::chrono::milliseconds(20000))'/>
<doc f='llvm/lldb/tools/lldb-vscode/FifoFiles.h' l='62'>/// Serialize a JSON object and write it to the underlying output fifo file.
  ///
  /// \param[in] json
  ///     The JSON object to send. It will be printed as a single line delimited
  ///     with \a std::endl.
  ///
  /// \param[in] timeout
  ///     A timeout for how long we should until for the data to be consumed.
  ///
  /// \return
  ///     An \a llvm::Error object indicating whether the data was consumed by
  ///     a reader or not.</doc>
<def f='llvm/lldb/tools/lldb-vscode/FifoFiles.cpp' l='73' ll='89' type='llvm::Error lldb_vscode::FifoFileIO::SendJSON(const json::Value &amp; json, std::chrono::milliseconds timeout = std::chrono::milliseconds(20000))'/>
<use f='llvm/lldb/tools/lldb-vscode/RunInTerminal.cpp' l='118' u='c' c='_ZN11lldb_vscode32RunInTerminalLauncherCommChannel9NotifyPidEv'/>
<use f='llvm/lldb/tools/lldb-vscode/RunInTerminal.cpp' l='122' u='c' c='_ZN11lldb_vscode32RunInTerminalLauncherCommChannel11NotifyErrorEN4llvm9StringRefE'/>
<use f='llvm/lldb/tools/lldb-vscode/RunInTerminal.cpp' l='137' u='c' c='_ZN11lldb_vscode36RunInTerminalDebugAdapterCommChannel15NotifyDidAttachEv'/>
