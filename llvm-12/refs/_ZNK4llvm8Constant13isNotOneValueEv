<dec f='llvm/llvm/include/llvm/IR/Constant.h' l='60' type='bool llvm::Constant::isNotOneValue() const'/>
<doc f='llvm/llvm/include/llvm/IR/Constant.h' l='58'>/// Return true if the value is not the one value, or,
  /// for vectors, does not contain one value elements.</doc>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='153' ll='175' type='bool llvm::Constant::isNotOneValue() const'/>
<use f='llvm/llvm/lib/IR/Constants.cpp' l='167' u='c' c='_ZNK4llvm8Constant13isNotOneValueEv'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineNegator.cpp' l='243' u='c' c='_ZN4llvm7Negator9visitImplEPNS_5ValueEj'/>
