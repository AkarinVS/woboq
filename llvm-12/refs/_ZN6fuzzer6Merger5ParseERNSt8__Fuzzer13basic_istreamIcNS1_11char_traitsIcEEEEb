<dec f='llvm/compiler-rt/lib/fuzzer/FuzzerMerge.h' l='64' type='bool fuzzer::Merger::Parse(std::istream &amp; IS, bool ParseCoverage)'/>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerMerge.cpp' l='28' u='c' c='_ZN6fuzzer6Merger5ParseERKNSt8__Fuzzer12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb'/>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerMerge.cpp' l='32' u='c' c='_ZN6fuzzer6Merger11ParseOrExitERNSt8__Fuzzer13basic_istreamIcNS1_11char_traitsIcEEEEb'/>
<def f='llvm/compiler-rt/lib/fuzzer/FuzzerMerge.cpp' l='52' ll='124' type='bool fuzzer::Merger::Parse(std::istream &amp; IS, bool ParseCoverage)'/>
<use f='llvm/compiler-rt/lib/fuzzer/FuzzerMerge.cpp' l='318' u='c' c='_ZN6fuzzer19CrashResistantMergeERKNSt8__Fuzzer6vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_16fuzzer_allocatorIS7_EEEERKNS1_13171865'/>
<doc f='llvm/compiler-rt/lib/fuzzer/FuzzerMerge.cpp' l='38'>// The control file example:
//
// 3 # The number of inputs
// 1 # The number of inputs in the first corpus, &lt;= the previous number
// file0
// file1
// file2  # One file name per line.
// STARTED 0 123  # FileID, file size
// FT 0 1 4 6 8  # FileID COV1 COV2 ...
// COV 0 7 8 9 # FileID COV1 COV1
// STARTED 1 456  # If FT is missing, the input crashed while processing.
// STARTED 2 567
// FT 2 8 9
// COV 2 11 12</doc>
