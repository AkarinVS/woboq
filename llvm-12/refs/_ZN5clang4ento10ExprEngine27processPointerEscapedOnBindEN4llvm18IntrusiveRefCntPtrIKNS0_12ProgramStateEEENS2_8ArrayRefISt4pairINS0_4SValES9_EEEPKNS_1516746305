<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h' l='643' type='clang::ento::ProgramStateRef clang::ento::ExprEngine::processPointerEscapedOnBind(clang::ento::ProgramStateRef State, ArrayRef&lt;std::pair&lt;SVal, SVal&gt; &gt; LocAndVals, const clang::LocationContext * LCtx, clang::ento::PointerEscapeKind Kind, const clang::ento::CallEvent * Call)'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h' l='642'>/// Call PointerEscape callback when a value escapes as a result of bind.</doc>
<def f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp' l='2779' ll='2817' type='clang::ento::ProgramStateRef clang::ento::ExprEngine::processPointerEscapedOnBind(clang::ento::ProgramStateRef State, ArrayRef&lt;std::pair&lt;SVal, SVal&gt; &gt; LocAndVals, const clang::LocationContext * LCtx, clang::ento::PointerEscapeKind Kind, const clang::ento::CallEvent * Call)'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp' l='2823' u='c' c='_ZN5clang4ento10ExprEngine27processPointerEscapedOnBindEN4llvm18IntrusiveRefCntPtrIKNS0_12ProgramStateEEENS0_4SValES7_PKNS_15LocationContextE'/>
<doc f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp' l='2772'>// A value escapes in four possible cases:
// (1) We are binding to something that is not a memory region.
// (2) We are binding to a MemRegion that does not have stack storage.
// (3) We are binding to a top-level parameter region with a non-trivial
//     destructor. We won&apos;t see the destructor during analysis, but it&apos;s there.
// (4) We are binding to a MemRegion with stack storage that the store
//     does not understand.</doc>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='626' u='c' c='_ZN5clang4ento10ExprEngine8evalCallERNS0_15ExplodedNodeSetEPNS0_12ExplodedNodeERKNS0_9CallEventE'/>
