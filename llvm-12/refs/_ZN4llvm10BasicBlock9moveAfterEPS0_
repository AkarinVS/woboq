<dec f='llvm/llvm/include/llvm/IR/BasicBlock.h' l='231' type='void llvm::BasicBlock::moveAfter(llvm::BasicBlock * MovePos)'/>
<doc f='llvm/llvm/include/llvm/IR/BasicBlock.h' l='229'>/// Unlink this basic block from its current function and insert it
  /// right after \p MovePos in the function \p MovePos lives in.</doc>
<use f='llvm/llvm/lib/CodeGen/StackProtector.cpp' l='530' u='c' c='_ZN4llvm14StackProtector21InsertStackProtectorsEv'/>
<def f='llvm/llvm/lib/IR/BasicBlock.cpp' l='138' ll='142' type='void llvm::BasicBlock::moveAfter(llvm::BasicBlock * MovePos)'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='2729' u='c' c='LLVMMoveBasicBlockAfter'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2261' u='c' c='_ZN4llvm17JumpThreadingPass27threadThroughTwoBasicBlocksEPNS_10BasicBlockES2_S2_S2_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2381' u='c' c='_ZN4llvm17JumpThreadingPass10threadEdgeEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EES2_'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='772' u='c' c='_ZN4llvm27MergeBasicBlockIntoOnlyPredEPNS_10BasicBlockEPNS_14DomTreeUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopSimplify.cpp' l='116' u='c' c='_ZL24placeSplitBlockCarefullyPN4llvm10BasicBlockERNS_15SmallVectorImplIS1_EEPNS_4LoopE'/>
