<dec f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1542' type='bool llvm::LoopVectorizationCostModel::interleavedAccessCanBeWidened(llvm::Instruction * I, llvm::ElementCount VF = ElementCount::getFixed(1))'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5195' ll='5230' type='bool llvm::LoopVectorizationCostModel::interleavedAccessCanBeWidened(llvm::Instruction * I, llvm::ElementCount VF = ElementCount::getFixed(1))'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7071' u='c' c='_ZN4llvm26LoopVectorizationCostModel28setCostBasedWideningDecisionENS_12ElementCountE'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1538'>/// Returns true if \p I is a memory instruction in an interleaved-group
  /// of memory accesses that can be vectorized with wide vector loads/stores
  /// and shuffles.</doc>
