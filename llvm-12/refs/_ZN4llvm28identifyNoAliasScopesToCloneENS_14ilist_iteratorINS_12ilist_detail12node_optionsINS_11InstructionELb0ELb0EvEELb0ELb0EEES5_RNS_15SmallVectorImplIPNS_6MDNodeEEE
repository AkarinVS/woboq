<dec f='llvm/llvm/include/llvm/Transforms/Utils/Cloning.h' l='280' type='void llvm::identifyNoAliasScopesToClone(BasicBlock::iterator Start, BasicBlock::iterator End, SmallVectorImpl&lt;llvm::MDNode *&gt; &amp; NoAliasDeclScopes)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Cloning.h' l='277'>/// Find the &apos;llvm.experimental.noalias.scope.decl&apos; intrinsics in the specified
/// instruction range and extract their scope. These are candidates for
/// duplication when cloning.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2085' u='c' c='_ZN4llvm17JumpThreadingPass17cloneInstructionsENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb0ELb0EvEELb0ELb0EEES6_PNS_10BasicBlockES8_'/>
<def f='llvm/llvm/lib/Transforms/Utils/CloneFunction.cpp' l='993' ll='999' type='void llvm::identifyNoAliasScopesToClone(BasicBlock::iterator Start, BasicBlock::iterator End, SmallVectorImpl&lt;llvm::MDNode *&gt; &amp; NoAliasDeclScopes)'/>
