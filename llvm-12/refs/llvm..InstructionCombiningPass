<inh f='llvm/llvm/include/llvm/Pass.h' l='298' c='llvm::FunctionPass'/>
<def f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombine.h' l='42' ll='54'/>
<size>2408</size>
<doc f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombine.h' l='38'>/// The legacy pass manager&apos;s instcombine pass.
///
/// This is a basic whole-function wrapper around the instcombine utility. It
/// will try to combine all instructions in the function.</doc>
<mbr r='llvm::InstructionCombiningPass::Worklist' o='256' t='llvm::InstCombineWorklist'/>
<mbr r='llvm::InstructionCombiningPass::MaxIterations' o='19200' t='const unsigned int'/>
<smbr r='llvm::InstructionCombiningPass::ID' t='char'/>
<fun r='_ZN4llvm24InstructionCombiningPassC1Ev'/>
<fun r='_ZN4llvm24InstructionCombiningPassC1Ej'/>
<fun r='_ZNK4llvm24InstructionCombiningPass16getAnalysisUsageERNS_13AnalysisUsageE'/>
<fun r='_ZN4llvm24InstructionCombiningPass13runOnFunctionERNS_8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='4113' c='_ZL42initializeInstructionCombiningPassPassOnceRN4llvm12PassRegistryE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='4126' c='_ZN4llvm30createInstructionCombiningPassEv'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='4130' c='_ZN4llvm30createInstructionCombiningPassEj'/>
<size>2408</size>
<fun r='_ZNK4llvm24InstructionCombiningPass16getAnalysisUsageERNS_13AnalysisUsageE'/>
<fun r='_ZN4llvm24InstructionCombiningPass13runOnFunctionERNS_8FunctionE'/>
<smbr r='llvm::InstructionCombiningPass::ID' t='char'/>
<fun r='_ZN4llvm24InstructionCombiningPassC1Ev'/>
<fun r='_ZN4llvm24InstructionCombiningPassC1Ej'/>
