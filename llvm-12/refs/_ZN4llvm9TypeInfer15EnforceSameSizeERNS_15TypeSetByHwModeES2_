<dec f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='328' type='bool llvm::TypeInfer::EnforceSameSize(llvm::TypeSetByHwMode &amp; A, llvm::TypeSetByHwMode &amp; B)'/>
<def f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='723' ll='752' type='bool llvm::TypeInfer::EnforceSameSize(llvm::TypeSetByHwMode &amp; A, llvm::TypeSetByHwMode &amp; B)'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1639' u='c' c='_ZNK4llvm16SDTypeConstraint19ApplyTypeConstraintEPNS_15TreePatternNodeERKNS_10SDNodeInfoERNS_11TreePatternE'/>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='719'>/// 1. Ensure that for each type T in A, there exists a type U in B,
///    such that T and U have equal size in bits.
/// 2. Ensure that for each type U in B, there exists a type T in A
///    such that T and U have equal size in bits (reverse of 1).</doc>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='324'>/// 1. Ensure that for each type T in \p A, there exists a type U in \p B,
  ///    such that T and U have equal size in bits.
  /// 2. Ensure that for each type U in \p B, there exists a type T in \p A
  ///    such that T and U have equal size in bits (reverse of 1).</doc>
