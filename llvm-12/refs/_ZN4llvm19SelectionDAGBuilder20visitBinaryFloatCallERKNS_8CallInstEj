<dec f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h' l='751' type='bool llvm::SelectionDAGBuilder::visitBinaryFloatCall(const llvm::CallInst &amp; I, unsigned int Opcode)'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='7663' ll='7677' type='bool llvm::SelectionDAGBuilder::visitBinaryFloatCall(const llvm::CallInst &amp; I, unsigned int Opcode)'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='7735' u='c' c='_ZN4llvm19SelectionDAGBuilder9visitCallERKNS_8CallInstE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='7741' u='c' c='_ZN4llvm19SelectionDAGBuilder9visitCallERKNS_8CallInstE'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='7658'>/// See if we can lower a binary floating-point operation into an SDNode with
/// the specified Opcode. If so, return true and lower it. Otherwise return
/// false, and it will be lowered like a normal call.
/// The caller already checked that \p I calls the appropriate LibFunc with a
/// correct prototype.</doc>
