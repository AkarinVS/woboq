<dec f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='926' type='llvm::PHINode * polly::RegionGenerator::buildExitPHI(polly::MemoryAccess * MA, llvm::LoopToScevMapT &amp; LTS, polly::ValueMapT &amp; BBMap, llvm::Loop * L)'/>
<def f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1622' ll='1661' type='llvm::PHINode * polly::RegionGenerator::buildExitPHI(polly::MemoryAccess * MA, llvm::LoopToScevMapT &amp; LTS, polly::ValueMapT &amp; BBMap, llvm::Loop * L)'/>
<use f='llvm/polly/lib/CodeGen/BlockGenerators.cpp' l='1681' u='c' c='_ZN5polly15RegionGenerator13getExitScalarEPNS_12MemoryAccessERN4llvm8DenseMapIPKNS3_4LoopEPKNS3_4SCEVENS3_12DenseMapInfoIS7_EENS3_6detail12DenseMapPai7780523'/>
<doc f='llvm/polly/include/polly/CodeGen/BlockGenerators.h' l='908'>/// Create a PHI that combines the incoming values from all incoming blocks
  /// that are in the subregion.
  ///
  /// PHIs in the subregion&apos;s exit block can have incoming edges from within and
  /// outside the subregion. This function combines the incoming values from
  /// within the subregion to appear as if there is only one incoming edge from
  /// the subregion (an additional exit block is created by RegionGenerator).
  /// This is to avoid that a value is written to the .phiops location without
  /// leaving the subregion because the exiting block as an edge back into the
  /// subregion.
  ///
  /// @param MA    The WRITE of MemoryKind::PHI/MemoryKind::ExitPHI for a PHI in
  ///              the subregion&apos;s exit block.
  /// @param LTS   Virtual induction variable mapping.
  /// @param BBMap A mapping from old values to their new values in this block.
  /// @param L     Loop surrounding this region statement.
  ///
  /// @returns The constructed PHI node.</doc>
