<dec f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='662' type='bool llvm::ARMTargetLowering::isLegalInterleavedAccessType(unsigned int Factor, llvm::FixedVectorType * VecTy, const llvm::DataLayout &amp; DL) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='659'>/// Returns true if \p VecTy is a legal interleaved access type. This
    /// function checks the vector element type and the overall width of the
    /// vector.</doc>
<def f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='18853' ll='18883' type='bool llvm::ARMTargetLowering::isLegalInterleavedAccessType(unsigned int Factor, llvm::FixedVectorType * VecTy, const llvm::DataLayout &amp; DL) const'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='18921' u='c' c='_ZNK4llvm17ARMTargetLowering20lowerInterleavedLoadEPNS_8LoadInstENS_8ArrayRefIPNS_17ShuffleVectorInstEEENS3_IjEEj'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='19074' u='c' c='_ZNK4llvm17ARMTargetLowering21lowerInterleavedStoreEPNS_9StoreInstEPNS_17ShuffleVectorInstEj'/>
<use f='llvm/llvm/lib/Target/ARM/ARMTargetTransformInfo.cpp' l='1373' u='c' c='_ZN4llvm10ARMTTIImpl26getInterleavedMemoryOpCostEjPNS_4TypeEjNS_8ArrayRefIjEENS_5AlignEjNS_19TargetTransformInfo14TargetCostKindEbb'/>
