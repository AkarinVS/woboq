<dec f='llvm/clang/include/clang/Sema/Sema.h' l='7126' type='clang::CXXBaseSpecifier * clang::Sema::CheckBaseSpecifier(clang::CXXRecordDecl * Class, clang::SourceRange SpecifierRange, bool Virtual, clang::AccessSpecifier Access, clang::TypeSourceInfo * TInfo, clang::SourceLocation EllipsisLoc)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='7121'>//===--------------------------------------------------------------------===//
  // C++ Derived Classes
  //

  /// ActOnBaseSpecifier - Parsed a base specifier</doc>
<def f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='2449' ll='2586' type='clang::CXXBaseSpecifier * clang::Sema::CheckBaseSpecifier(clang::CXXRecordDecl * Class, clang::SourceRange SpecifierRange, bool Virtual, clang::AccessSpecifier Access, clang::TypeSourceInfo * TInfo, clang::SourceLocation EllipsisLoc)'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='2629' u='c' c='_ZN5clang4Sema18ActOnBaseSpecifierEPNS_4DeclENS_11SourceRangeERNS_16ParsedAttributesEbNS_15AccessSpecifierENS_9OpaquePtrINS_8QualTypeEEENS_14SourceLocationESA_'/>
<doc f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='2445'>/// Check the validity of a C++ base class specifier.
///
/// \returns a new CXXBaseSpecifier if well-formed, emits diagnostics
/// and returns NULL otherwise.</doc>
<use f='llvm/clang/lib/Sema/SemaTemplateInstantiate.cpp' l='2540' u='c' c='_ZN5clang4Sema19SubstBaseSpecifiersEPNS_13CXXRecordDeclES2_RKNS_30MultiLevelTemplateArgumentListE'/>
<use f='llvm/clang/lib/Sema/SemaTemplateInstantiate.cpp' l='2574' u='c' c='_ZN5clang4Sema19SubstBaseSpecifiersEPNS_13CXXRecordDeclES2_RKNS_30MultiLevelTemplateArgumentListE'/>
