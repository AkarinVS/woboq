<def f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h' l='269' ll='297' type='static bool llvm::InstCombiner::canFreelyInvertAllUsersOf(llvm::Value * V, llvm::Value * IgnoredUser)'/>
<doc f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h' l='265'>/// Given i1 V, can every user of V be freely adapted if V is changed to !V ?
  /// InstCombine&apos;s freelyInvertAllUsersOf() must be kept in sync with this fn.
  ///
  /// See also: isFreeToInvert()</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='3000' u='c' c='_ZN4llvm16InstCombinerImpl14foldXorOfICmpsEPNS_8ICmpInstES2_RNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='3127' u='c' c='_ZN4llvm16InstCombinerImpl29sinkNotIntoOtherHandOfAndOrOrERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='5323' u='c' c='_ZN4llvm16InstCombinerImpl25canonicalizeICmpPredicateERNS_7CmpInstE'/>
