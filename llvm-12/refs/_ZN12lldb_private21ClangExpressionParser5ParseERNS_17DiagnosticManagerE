<dec f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionParser.h' l='86' type='unsigned int lldb_private::ClangExpressionParser::Parse(lldb_private::DiagnosticManager &amp; diagnostic_manager)'/>
<def f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionParser.cpp' l='1028' ll='1030' type='unsigned int lldb_private::ClangExpressionParser::Parse(lldb_private::DiagnosticManager &amp; diagnostic_manager)'/>
<doc f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangExpressionParser.h' l='77'>/// Parse a single expression and convert it to IR using Clang.  Don&apos;t wrap
  /// the expression in anything at all.
  ///
  /// \param[in] diagnostic_manager
  ///     The diagnostic manager to report errors to.
  ///
  /// \return
  ///     The number of errors encountered during parsing.  0 means
  ///     success.</doc>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangFunctionCaller.cpp' l='193' u='c' c='_ZN12lldb_private19ClangFunctionCaller15CompileFunctionESt10shared_ptrINS_6ThreadEERNS_17DiagnosticManagerE'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangUserExpression.cpp' l='582' u='c' c='_ZN12lldb_private19ClangUserExpression8TryParseERNS_17DiagnosticManagerEPNS_21ExecutionContextScopeERNS_16ExecutionContextENS_15ExecutionPolicyEbb'/>
<use f='llvm/lldb/source/Plugins/ExpressionParser/Clang/ClangUtilityFunction.cpp' l='108' u='c' c='_ZN12lldb_private20ClangUtilityFunction7InstallERNS_17DiagnosticManagerERNS_16ExecutionContextE'/>
