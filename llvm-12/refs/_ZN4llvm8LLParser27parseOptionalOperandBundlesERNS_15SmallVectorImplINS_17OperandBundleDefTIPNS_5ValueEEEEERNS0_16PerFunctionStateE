<dec f='llvm/llvm/lib/AsmParser/LLParser.h' l='502' type='bool llvm::LLParser::parseOptionalOperandBundles(SmallVectorImpl&lt;llvm::OperandBundleDef&gt; &amp; BundleList, llvm::LLParser::PerFunctionState &amp; PFS)'/>
<def f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='2674' ll='2717' type='bool llvm::LLParser::parseOptionalOperandBundles(SmallVectorImpl&lt;llvm::OperandBundleDef&gt; &amp; BundleList, llvm::LLParser::PerFunctionState &amp; PFS)'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='6443' u='c' c='_ZN4llvm8LLParser11parseInvokeERPNS_11InstructionERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='6751' u='c' c='_ZN4llvm8LLParser11parseCallBrERPNS_11InstructionERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='7179' u='c' c='_ZN4llvm8LLParser9parseCallERPNS_11InstructionERNS0_16PerFunctionStateENS_8CallInst12TailCallKindE'/>
<doc f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='2665'>/// parseOptionalOperandBundles
///    ::= /*empty*/
///    ::= &apos;[&apos; OperandBundle [, OperandBundle ]* &apos;]&apos;
///
/// OperandBundle
///    ::= bundle-tag &apos;(&apos; &apos;)&apos;
///    ::= bundle-tag &apos;(&apos; Type Value [, Type Value ]* &apos;)&apos;
///
/// bundle-tag ::= String Constant</doc>
