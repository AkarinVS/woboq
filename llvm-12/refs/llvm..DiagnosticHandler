<def f='llvm/llvm/include/llvm/IR/DiagnosticHandler.h' l='24' ll='71'/>
<use f='llvm/llvm/include/llvm/IR/LLVMContext.h' l='198' c='_ZN4llvm11LLVMContext20setDiagnosticHandlerEOSt10unique_ptrINS_17DiagnosticHandlerESt14default_deleteIS2_EEb'/>
<use f='llvm/llvm/include/llvm/IR/LLVMContext.h' l='211' c='_ZNK4llvm11LLVMContext17getDiagHandlerPtrEv'/>
<use f='llvm/llvm/include/llvm/IR/LLVMContext.h' l='215' c='_ZN4llvm11LLVMContext20getDiagnosticHandlerEv'/>
<size>24</size>
<doc f='llvm/llvm/include/llvm/IR/DiagnosticHandler.h' l='20'>/// This is the base class for diagnostic handling in LLVM.
/// The handleDiagnostics method must be overriden by the subclasses to handle
/// diagnostic. The *RemarkEnabled methods can be overriden to control
/// which remarks are enabled.</doc>
<mbr r='llvm::DiagnosticHandler::DiagnosticContext' o='64' t='void *'/>
<fun r='_ZN4llvm17DiagnosticHandlerC1EPv'/>
<fun r='_ZN4llvm17DiagnosticHandlerD1Ev'/>
<mbr r='llvm::DiagnosticHandler::DiagHandlerCallback' o='128' t='llvm::DiagnosticHandler::DiagnosticHandlerTy'/>
<fun r='_ZN4llvm17DiagnosticHandler17handleDiagnosticsERKNS_14DiagnosticInfoE'/>
<fun r='_ZNK4llvm17DiagnosticHandler23isAnalysisRemarkEnabledENS_9StringRefE'/>
<fun r='_ZNK4llvm17DiagnosticHandler24isMissedOptRemarkEnabledENS_9StringRefE'/>
<fun r='_ZNK4llvm17DiagnosticHandler24isPassedOptRemarkEnabledENS_9StringRefE'/>
<fun r='_ZNK4llvm17DiagnosticHandler18isAnyRemarkEnabledENS_9StringRefE'/>
<fun r='_ZNK4llvm17DiagnosticHandler18isAnyRemarkEnabledEv'/>
<ovr f='llvm/llvm/include/llvm/LTO/Config.h' l='254' c='llvm::lto::LTOLLVMDiagnosticHandler'/>
<use f='llvm/llvm/include/llvm/LTO/Config.h' l='254'/>
<size>24</size>
<ovr f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='55' c='clang::ClangDiagnosticHandler'/>
<use f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='55'/>
<use f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='315' c='_ZN5clang15BackendConsumer21HandleTranslationUnitERNS_10ASTContextE'/>
<size>24</size>
<use f='llvm/llvm/lib/IR/LLVMContextImpl.h' l='1325'/>
<size>24</size>
<use f='llvm/llvm/lib/IR/LLVMContext.cpp' l='136' c='_ZN4llvm11LLVMContext20setDiagnosticHandlerEOSt10unique_ptrINS_17DiagnosticHandlerESt14default_deleteIS2_EEb'/>
<use f='llvm/llvm/lib/IR/LLVMContext.cpp' l='357' c='_ZNK4llvm11LLVMContext17getDiagHandlerPtrEv'/>
<use f='llvm/llvm/lib/IR/LLVMContext.cpp' l='361' c='_ZN4llvm11LLVMContext20getDiagnosticHandlerEv'/>
<size>24</size>
<use f='llvm/llvm/lib/IR/LLVMContextImpl.cpp' l='25' c='_ZN4llvm15LLVMContextImplC1ERNS_11LLVMContextE'/>
<size>24</size>
<ovr f='llvm/llvm/lib/LTO/LTOCodeGenerator.cpp' l='687' c='(anonymousnamespace)::LTODiagnosticHandler'/>
<use f='llvm/llvm/lib/LTO/LTOCodeGenerator.cpp' l='687'/>
<size>24</size>
<ovr f='llvm/llvm/tools/llc/llc.cpp' l='289' c='LLCDiagnosticHandler'/>
<use f='llvm/llvm/tools/llc/llc.cpp' l='289'/>
<size>24</size>
<ovr f='llvm/llvm/tools/llvm-dis/llvm-dis.cpp' l='123' c='(anonymousnamespace)::LLVMDisDiagnosticHandler'/>
<use f='llvm/llvm/tools/llvm-dis/llvm-dis.cpp' l='123'/>
<size>24</size>
<ovr f='llvm/llvm/tools/llvm-link/llvm-link.cpp' l='256' c='(anonymousnamespace)::LLVMLinkDiagnosticHandler'/>
<use f='llvm/llvm/tools/llvm-link/llvm-link.cpp' l='256'/>
<size>24</size>
<ovr f='llvm/llvm/tools/llvm-lto/llvm-lto.cpp' l='256' c='(anonymousnamespace)::LLVMLTODiagnosticHandler'/>
<use f='llvm/llvm/tools/llvm-lto/llvm-lto.cpp' l='256'/>
<size>24</size>
<ovr f='llvm/llvm/tools/lto/lto.cpp' l='71' c='LTOToolDiagnosticHandler'/>
<use f='llvm/llvm/tools/lto/lto.cpp' l='71'/>
<size>24</size>
