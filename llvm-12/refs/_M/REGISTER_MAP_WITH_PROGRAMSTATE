<dec f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramStateTrait.h' l='84'/>
<doc f='llvm/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramStateTrait.h' l='72'>/// Declares an immutable map of type \p NameTy, suitable for placement into
  /// the ProgramState. This is implementing using llvm::ImmutableMap.
  ///
  /// \code
  /// State = State-&gt;set&lt;Name&gt;(K, V);
  /// const Value *V = State-&gt;get&lt;Name&gt;(K); // Returns NULL if not in the map.
  /// State = State-&gt;remove&lt;Name&gt;(K);
  /// NameTy Map = State-&gt;get&lt;Name&gt;();
  /// \endcode
  ///
  /// The macro should not be used inside namespaces, or for traits that must
  /// be accessible from more than one translation unit.</doc>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/BasicObjCFoundationChecks.cpp' l='804' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/BasicObjCFoundationChecks.cpp' l='805' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp' l='276' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp' l='184' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp' l='46' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/ExprInspectionChecker.cpp' l='71' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp' l='230' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/InnerPointerChecker.cpp' l='29' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/LocalizationChecker.cpp' l='106' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/MacOSKeychainAPIChecker.cpp' l='155' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp' l='205' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp' l='271' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp' l='863' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/MoveChecker.cpp' l='229' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/NullabilityChecker.cpp' l='235' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/ObjCContainersChecker.cpp' l='66' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp' l='97' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/PointerArithChecker.cpp' l='74' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/PthreadLockChecker.cpp' l='253' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/PthreadLockChecker.cpp' l='256' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp' l='22' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/SimpleStreamChecker.cpp' l='89' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/SmartPtrModeling.cpp' l='82' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp' l='393' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/Taint.cpp' l='22' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/Taint.cpp' l='27' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/TrustNonnullChecker.cpp' l='37' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/TrustNonnullChecker.cpp' l='41' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Checkers/VirtualCallChecker.cpp' l='60' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/DynamicType.cpp' l='27' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/DynamicType.cpp' l='34' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/DynamicType.cpp' l='38' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp' l='2135' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp' l='427' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='400' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='401' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='402' u='c'/>
<use f='llvm/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp' l='405' u='c'/>
