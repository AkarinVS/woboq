<dec f='llvm/compiler-rt/lib/builtins/fp_div_impl.inc' l='27'/>
<use f='llvm/compiler-rt/lib/builtins/fp_div_impl.inc' l='139' u='c'/>
<use f='llvm/compiler-rt/lib/builtins/fp_div_impl.inc' l='153' u='c'/>
<use f='llvm/compiler-rt/lib/builtins/fp_div_impl.inc' l='188' u='c'/>
<use f='llvm/compiler-rt/lib/builtins/fp_div_impl.inc' l='202' u='c'/>
<use f='llvm/compiler-rt/lib/builtins/fp_div_impl.inc' l='232' u='c'/>
<use f='llvm/compiler-rt/lib/builtins/fp_div_impl.inc' l='273' u='c'/>
<use f='llvm/compiler-rt/lib/builtins/fp_div_impl.inc' l='276' u='c'/>
<use f='llvm/compiler-rt/lib/builtins/fp_div_impl.inc' l='279' u='c'/>
<doc f='llvm/compiler-rt/lib/builtins/fp_div_impl.inc' l='16'>// The __divXf3__ function implements Newton-Raphson floating point division.
// It uses 3 iterations for float32, 4 for float64 and 5 for float128,
// respectively. Due to number of significant bits being roughly doubled
// every iteration, the two modes are supported: N full-width iterations (as
// it is done for float32 by default) and (N-1) half-width iteration plus one
// final full-width iteration. It is expected that half-width integer
// operations (w.r.t rep_t size) can be performed faster for some hardware but
// they require error estimations to be computed separately due to larger
// computational errors caused by truncating intermediate results.

// Half the bit-size of rep_t</doc>
