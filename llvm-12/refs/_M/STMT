<dec f='llvm/clang/include/clang/AST/ASTFwd.h' l='23'/>
<use f='llvm/build/tools/clang/include/clang/AST/StmtNodes.inc' l='1410' u='w'/>
<dec f='llvm/clang/include/clang/AST/Stmt.h' l='72'/>
<use f='llvm/build/tools/clang/include/clang/AST/StmtNodes.inc' l='1410' u='w'/>
<dec f='llvm/clang/include/clang/AST/StmtVisitor.h' l='108'/>
<use f='llvm/build/tools/clang/include/clang/AST/StmtNodes.inc' l='1410' u='w'/>
<dec f='llvm/clang/include/clang/AST/StmtVisitor.h' l='116'/>
<use f='llvm/build/tools/clang/include/clang/AST/StmtNodes.inc' l='1410' u='w'/>
<doc f='llvm/clang/include/clang/AST/StmtVisitor.h' l='114'>// If the implementation chooses not to implement a certain visit method, fall
  // back on VisitExpr or whatever else is the superclass.</doc>
<dec f='llvm/clang/include/clang/AST/RecursiveASTVisitor.h' l='373'/>
<dec f='llvm/clang/include/clang/AST/RecursiveASTVisitor.h' l='381'/>
<dec f='llvm/clang/include/clang/AST/RecursiveASTVisitor.h' l='516'/>
<dec f='llvm/clang/include/clang/AST/RecursiveASTVisitor.h' l='549'/>
<dec f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='146'/>
<dec f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='207'/>
<dec f='llvm/clang/lib/Sema/TreeTransform.h' l='722'/>
<dec f='llvm/clang/lib/Sema/TreeTransform.h' l='3661'/>
<dec f='llvm/clang/lib/Sema/TreeTransform.h' l='3671'/>
<dec f='llvm/clang/lib/Sema/TreeTransform.h' l='3713'/>
<doc f='llvm/clang/lib/Sema/TreeTransform.h' l='720'>// FIXME: We use LLVM_ATTRIBUTE_NOINLINE because inlining causes a ridiculous
// amount of stack usage with clang.</doc>
<doc f='llvm/clang/lib/Sema/TreeTransform.h' l='3659'>// Transform individual statement nodes
  // Pass SDK into statements that can produce a value</doc>
<doc f='llvm/clang/lib/Sema/TreeTransform.h' l='3670'>// Transform expressions by calling TransformExpr.</doc>
