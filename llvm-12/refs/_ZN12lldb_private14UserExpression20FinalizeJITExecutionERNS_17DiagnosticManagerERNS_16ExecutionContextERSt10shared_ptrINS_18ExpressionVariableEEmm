<dec f='llvm/lldb/include/lldb/Expression/UserExpression.h' l='179' type='bool lldb_private::UserExpression::FinalizeJITExecution(lldb_private::DiagnosticManager &amp; diagnostic_manager, lldb_private::ExecutionContext &amp; exe_ctx, lldb::ExpressionVariableSP &amp; result, lldb::addr_t function_stack_bottom = (18446744073709551615UL), lldb::addr_t function_stack_top = (18446744073709551615UL))'/>
<doc f='llvm/lldb/include/lldb/Expression/UserExpression.h' l='152'>/// Apply the side effects of the function to program state.
  ///
  /// \param[in] diagnostic_manager
  ///     A diagnostic manager to report errors to.
  ///
  /// \param[in] exe_ctx
  ///     The execution context to use when looking up entities that
  ///     are needed for parsing (locations of variables, etc.)
  ///
  /// \param[in] result
  ///     A pointer to direct at the persistent variable in which the
  ///     expression&apos;s result is stored.
  ///
  /// \param[in] function_stack_bottom
  ///     A pointer to the bottom of the function&apos;s stack frame.  This
  ///     is used to determine whether the expression result resides in
  ///     memory that will still be valid, or whether it needs to be
  ///     treated as homeless for the purpose of future expressions.
  ///
  /// \param[in] function_stack_top
  ///     A pointer to the top of the function&apos;s stack frame.  This
  ///     is used to determine whether the expression result resides in
  ///     memory that will still be valid, or whether it needs to be
  ///     treated as homeless for the purpose of future expressions.
  ///
  /// \return
  ///     A Process::Execution results value.</doc>
<ovr f='llvm/lldb/source/Expression/LLVMUserExpression.cpp' l='254' c='_ZN12lldb_private18LLVMUserExpression20FinalizeJITExecutionERNS_17DiagnosticManagerERNS_16ExecutionContextERSt10shared_ptrINS_18ExpressionVariableEEmm'/>
<use f='llvm/lldb/source/Target/ThreadPlanCallUserExpression.cpp' l='87' u='c' c='_ZN12lldb_private28ThreadPlanCallUserExpression15MischiefManagedEv'/>
