<dec f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1263' type='std::pair&lt;unsigned int, unsigned int&gt; llvm::LoopVectorizationCostModel::getSmallestAndWidestTypes()'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5646' u='c' c='_ZN4llvm26LoopVectorizationCostModel20computeFeasibleMaxVFEjNS_12ElementCountE'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5962' ll='6021' type='std::pair&lt;unsigned int, unsigned int&gt; llvm::LoopVectorizationCostModel::getSmallestAndWidestTypes()'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7575' u='c' c='_ZL16determineVPlanVFjRN4llvm26LoopVectorizationCostModelE'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1260'>/// \return The size (in bits) of the smallest and widest types in the code
  /// that needs to be vectorized. We ignore values that remain scalar such as
  /// 64 bit loop indices.</doc>
