<dec f='llvm/llvm/lib/Target/SystemZ/MCTargetDesc/SystemZMCTargetDesc.h' l='46' type='const unsigned int [16]'/>
<use f='llvm/llvm/lib/Target/SystemZ/MCTargetDesc/SystemZMCTargetDesc.h' l='70' u='r' c='_ZN4llvm9SystemZMC12getRegAsGR32Ej'/>
<use f='llvm/llvm/lib/Target/SystemZ/AsmParser/SystemZAsmParser.cpp' l='828' u='r' c='_ZN12_GLOBAL__N_116SystemZAsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS_12RegisterKindE'/>
<use f='llvm/llvm/lib/Target/SystemZ/AsmParser/SystemZAsmParser.cpp' l='1072' u='r' c='_ZN12_GLOBAL__N_116SystemZAsmParser12parseAddressERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS_10Memo10506153'/>
<doc f='llvm/llvm/lib/Target/SystemZ/MCTargetDesc/SystemZMCTargetDesc.h' l='40'>// Maps of asm register numbers to LLVM register numbers, with 0 indicating
// an invalid register.  In principle we could use 32-bit and 64-bit register
// classes directly, provided that we relegated the GPR allocation order
// in SystemZRegisterInfo.td to an AltOrder and left the default order
// as %r0-%r15.  It seems better to provide the same interface for
// all classes though.</doc>
<use f='llvm/llvm/lib/Target/SystemZ/Disassembler/SystemZDisassembler.cpp' l='95' u='r' c='_ZL26DecodeGR32BitRegisterClassRN4llvm6MCInstEmmPKv'/>
<use f='llvm/llvm/lib/Target/SystemZ/Disassembler/SystemZDisassembler.cpp' l='386' u='r' c='_ZL27decodeBDAddr32Disp12OperandRN4llvm6MCInstEmmPKv'/>
<use f='llvm/llvm/lib/Target/SystemZ/Disassembler/SystemZDisassembler.cpp' l='392' u='r' c='_ZL27decodeBDAddr32Disp20OperandRN4llvm6MCInstEmmPKv'/>
<def f='llvm/llvm/lib/Target/SystemZ/MCTargetDesc/SystemZMCTargetDesc.cpp' l='31' ll='36' type='const unsigned int [16]'/>
<use f='llvm/llvm/lib/Target/SystemZ/MCTargetDesc/SystemZMCTargetDesc.cpp' l='132' u='r' c='_ZN4llvm9SystemZMC11getFirstRegEj'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp' l='1176' u='r' c='_ZNK4llvm21SystemZTargetLowering28getRegForInlineAsmConstraintEPKNS_18TargetRegisterInfoENS_9StringRefENS_3MVTE'/>
