<dec f='llvm/llvm/include/llvm-c/Core.h' l='505' type='LLVMContextRef LLVMGetGlobalContext()'/>
<doc f='llvm/llvm/include/llvm-c/Core.h' l='502'>/**
 * Obtain the global context instance.
 */</doc>
<use f='llvm/llvm/lib/Bitcode/Reader/BitReader.cpp' l='26' u='c' c='LLVMParseBitcode'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitReader.cpp' l='32' u='c' c='LLVMParseBitcode2'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitReader.cpp' l='126' u='c' c='LLVMGetBitcodeModule'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitReader.cpp' l='132' u='c' c='LLVMGetBitcodeModule2'/>
<def f='llvm/llvm/lib/IR/Core.cpp' l='81' type='LLVMContextRef LLVMGetGlobalContext()'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='126' u='c' c='LLVMGetMDKindID'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='576' u='c' c='LLVMInt1Type'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='579' u='c' c='LLVMInt8Type'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='582' u='c' c='LLVMInt16Type'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='585' u='c' c='LLVMInt32Type'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='588' u='c' c='LLVMInt64Type'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='591' u='c' c='LLVMInt128Type'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='594' u='c' c='LLVMIntType'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='632' u='c' c='LLVMHalfType'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='635' u='c' c='LLVMBFloatType'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='638' u='c' c='LLVMFloatType'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='641' u='c' c='LLVMDoubleType'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='644' u='c' c='LLVMX86FP80Type'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='647' u='c' c='LLVMFP128Type'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='650' u='c' c='LLVMPPCFP128Type'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='653' u='c' c='LLVMX86MMXType'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='656' u='c' c='LLVMX86AMXType'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='697' u='c' c='LLVMStructType'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='824' u='c' c='LLVMVoidType'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='827' u='c' c='LLVMLabelType'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='1106' u='c' c='LLVMMDString'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='1137' u='c' c='LLVMMDNode'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='1419' u='c' c='LLVMConstString'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='1453' u='c' c='LLVMConstStruct'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='2701' u='c' c='LLVMAppendBasicBlock'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='2713' u='c' c='LLVMInsertBasicBlock'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='3035' u='c' c='LLVMCreateBuilder'/>
<dec f='llvm/llvm/lib/Target/Target.cpp' l='27' type='LLVMContextRef LLVMGetGlobalContext()'/>
<use f='llvm/llvm/lib/Target/Target.cpp' l='86' u='c' c='LLVMIntPtrType'/>
<use f='llvm/llvm/lib/Target/Target.cpp' l='90' u='c' c='LLVMIntPtrTypeForAS'/>
<doc f='llvm/llvm/lib/Target/Target.cpp' l='26'>// Avoid including &quot;llvm-c/Core.h&quot; for compile time, fwd-declare this instead.</doc>
<use f='llvm/llvm/tools/llvm-c-test/debuginfo.c' l='125' u='c' c='llvm_test_dibuilder'/>
<use f='llvm/llvm/tools/llvm-c-test/debuginfo.c' l='161' u='c' c='llvm_test_dibuilder'/>
<use f='llvm/llvm/tools/llvm-c-test/diagnostic.c' l='48' u='c' c='llvm_test_diagnostic_handler'/>
<use f='llvm/llvm/tools/llvm-c-test/module.c' l='39' u='c' c='llvm_load_module'/>
<use f='llvm/llvm/tools/llvm-c-test/object.c' l='33' u='c' c='llvm_object_list_sections'/>
<use f='llvm/llvm/tools/llvm-c-test/object.c' l='71' u='c' c='llvm_object_list_symbols'/>
<use f='llvm/llvm/unittests/ExecutionEngine/MCJIT/MCJITCAPITest.cpp' l='465' u='c' c='_ZN24MCJITCAPITest_yield_Test8TestBodyEv'/>
