<def f='llvm/polly/lib/External/isl/isl_map_lexopt_templ.c' l='86' ll='140' type='isl_map * basic_map_partial_lexopt(isl_basic_map * bmap, isl_map * dom, isl_map ** empty, unsigned int flags)'/>
<use f='llvm/polly/lib/External/isl/isl_map.c' l='7241' u='c' c='isl_map_partial_lexopt_aligned'/>
<def f='llvm/polly/lib/External/isl/isl_tab_lexopt_templ.c' l='149' ll='173' type='isl_map * basic_map_partial_lexopt(isl_basic_map * bmap, isl_basic_map * dom, isl_map ** empty, int max)'/>
<use f='llvm/polly/lib/External/isl/isl_tab_lexopt_templ.c' l='221' u='c' c='isl_tab_basic_map_partial_lexopt'/>
<use f='llvm/polly/lib/External/isl/isl_tab_lexopt_templ.c' l='230' u='c' c='isl_tab_basic_map_partial_lexopt'/>
<doc f='llvm/polly/lib/External/isl/isl_tab_lexopt_templ.c' l='140'>/* Recursive part of isl_tab_basic_map_partial_lexopt*, after detecting
 * equalities and removing redundant constraints.
 *
 * We first check if there are any parallel constraints (left).
 * If not, we are in the base case.
 * If there are parallel constraints, we replace them by a single
 * constraint in basic_map_partial_lexopt_symm_pma and then call
 * this function recursively to look for more parallel constraints.
 */</doc>
