<inh f='llvm/clang/include/clang/AST/Expr.h' l='109' c='clang::Expr'/>
<def f='llvm/clang/include/clang/AST/ExprObjC.h' l='1686' ll='1722'/>
<size>40</size>
<doc f='llvm/clang/include/clang/AST/ExprObjC.h' l='1673'>/// A runtime availability query.
///
/// There are 2 ways to spell this node:
/// \code
///   @available(macos 10.10, ios 8, *); // Objective-C
///   __builtin_available(macos 10.10, ios 8, *); // C, C++, and Objective-C
/// \endcode
///
/// Note that we only need to keep track of one \c VersionTuple here, which is
/// the one that corresponds to the current deployment target. This is meant to
/// be used in the condition of an \c if, but it is also usable as top level
/// expressions.
///</doc>
<mbr r='clang::ObjCAvailabilityCheckExpr::VersionToCheck' o='128' t='llvm::VersionTuple'/>
<mbr r='clang::ObjCAvailabilityCheckExpr::AtLoc' o='256' t='clang::SourceLocation'/>
<mbr r='clang::ObjCAvailabilityCheckExpr::RParen' o='288' t='clang::SourceLocation'/>
<fun r='_ZN5clang25ObjCAvailabilityCheckExprC1EN4llvm12VersionTupleENS_14SourceLocationES3_NS_8QualTypeE'/>
<fun r='_ZN5clang25ObjCAvailabilityCheckExprC1ENS_4Stmt10EmptyShellE'/>
<fun r='_ZNK5clang25ObjCAvailabilityCheckExpr11getBeginLocEv'/>
<fun r='_ZNK5clang25ObjCAvailabilityCheckExpr9getEndLocEv'/>
<fun r='_ZNK5clang25ObjCAvailabilityCheckExpr14getSourceRangeEv'/>
<fun r='_ZNK5clang25ObjCAvailabilityCheckExpr10hasVersionEv'/>
<fun r='_ZN5clang25ObjCAvailabilityCheckExpr10getVersionEv'/>
<fun r='_ZN5clang25ObjCAvailabilityCheckExpr8childrenEv'/>
<fun r='_ZNK5clang25ObjCAvailabilityCheckExpr8childrenEv'/>
<fun r='_ZN5clang25ObjCAvailabilityCheckExpr7classofEPKNS_4StmtE'/>
<use f='llvm/clang/include/clang/AST/RecursiveASTVisitor.h' l='2636' c='_ZN5clang19RecursiveASTVisitor33TraverseObjCAvailabilityCheckExprEPNS_25ObjCAvailabilityCheckExprEPN4llvm15SmallVectorImplINS3_14PointerIntPairIPNS_4S3074225'/>
<size>40</size>
<use f='llvm/clang/lib/AST/Stmt.cpp' l='989' c='_ZNK5clang6IfStmt23isObjCAvailabilityCheckEv'/>
<size>40</size>
<use f='llvm/clang/lib/AST/StmtPrinter.cpp' l='546' c='_ZN12_GLOBAL__N_111StmtPrinter30VisitObjCAvailabilityCheckExprEPN5clang25ObjCAvailabilityCheckExprE'/>
<size>40</size>
<use f='llvm/clang/lib/AST/StmtProfile.cpp' l='2169' c='_ZN12_GLOBAL__N_112StmtProfiler30VisitObjCAvailabilityCheckExprEPKN5clang25ObjCAvailabilityCheckExprE'/>
<size>40</size>
<use f='llvm/clang/lib/CodeGen/CGExprScalar.cpp' l='524' c='_ZN12_GLOBAL__N_117ScalarExprEmitter30VisitObjCAvailabilityCheckExprEPN5clang25ObjCAvailabilityCheckExprE'/>
<size>40</size>
<use f='llvm/clang/lib/Sema/SemaAvailability.cpp' l='726' c='_ZN12_GLOBAL__N_129DiagnoseUnguardedAvailability30VisitObjCAvailabilityCheckExprEPN5clang25ObjCAvailabilityCheckExprE'/>
<use f='llvm/clang/lib/Sema/SemaAvailability.cpp' l='881' c='_ZN12_GLOBAL__N_129DiagnoseUnguardedAvailability14TraverseIfStmtEPN5clang6IfStmtE'/>
<size>40</size>
<use f='llvm/clang/lib/Sema/TreeTransform.h' l='13517' c='_ZN5clang13TreeTransform34TransformObjCAvailabilityCheckExprEPNS_25ObjCAvailabilityCheckExprE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='19428' c='_ZN5clang4Sema30ActOnObjCAvailabilityCheckExprEN4llvm8ArrayRefINS_16AvailabilitySpecEEENS_14SourceLocationES5_'/>
<size>40</size>
<use f='llvm/clang/lib/Sema/SemaStmt.cpp' l='642' c='_ZN5clang4Sema11BuildIfStmtENS_14SourceLocationEbS1_PNS_4StmtENS0_15ConditionResultES1_S3_S1_S3_'/>
<size>40</size>
<use f='llvm/clang/lib/Serialization/ASTReaderStmt.cpp' l='1622' c='_ZN5clang13ASTStmtReader30VisitObjCAvailabilityCheckExprEPNS_25ObjCAvailabilityCheckExprE'/>
<use f='llvm/clang/lib/Serialization/ASTReaderStmt.cpp' l='3094' c='_ZN5clang9ASTReader18ReadStmtFromStreamERNS_13serialization10ModuleFileE'/>
<size>40</size>
<use f='llvm/clang/lib/Serialization/ASTWriterStmt.cpp' l='1504' c='_ZN5clang13ASTStmtWriter30VisitObjCAvailabilityCheckExprEPNS_25ObjCAvailabilityCheckExprE'/>
<size>40</size>
