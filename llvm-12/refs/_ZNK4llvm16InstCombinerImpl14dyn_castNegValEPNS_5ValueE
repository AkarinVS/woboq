<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='192' type='llvm::Value * llvm::InstCombinerImpl::dyn_castNegVal(llvm::Value * V) const'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1709' u='c' c='_ZN4llvm16InstCombinerImpl8visitSubERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='2985' u='c' c='_ZN4llvm16InstCombinerImpl33foldICmpBinOpEqualityWithConstantERNS_8ICmpInstEPNS_14BinaryOperatorERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='2987' u='c' c='_ZN4llvm16InstCombinerImpl33foldICmpBinOpEqualityWithConstantERNS_8ICmpInstEPNS_14BinaryOperatorERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='5560' u='c' c='_ZN4llvm16InstCombinerImpl13visitICmpInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='5564' u='c' c='_ZN4llvm16InstCombinerImpl13visitICmpInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='276' u='c' c='_ZN4llvm16InstCombinerImpl8visitMulERNS_14BinaryOperatorE'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='899' ll='928' type='llvm::Value * llvm::InstCombinerImpl::dyn_castNegVal(llvm::Value * V) const'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='897'>/// Given a &apos;sub&apos; instruction, return the RHS of the instruction if the LHS is a
/// constant zero (which is the &apos;negate&apos; form).</doc>
