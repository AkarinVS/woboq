<def f='llvm/llvm/include/llvm/Analysis/CallGraph.h' l='397' ll='399' type='llvm::CallGraphNode * llvm::CallGraphWrapperPass::getOrInsertFunction(const llvm::Function * F)'/>
<doc f='llvm/llvm/include/llvm/Analysis/CallGraph.h' l='395'>/// Similar to operator[], but this will insert a new CallGraphNode for
  /// \c F if one does not already exist.</doc>
