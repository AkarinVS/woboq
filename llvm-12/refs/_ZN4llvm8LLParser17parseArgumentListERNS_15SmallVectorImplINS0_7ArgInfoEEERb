<dec f='llvm/llvm/lib/AsmParser/LLParser.h' l='549' type='bool llvm::LLParser::parseArgumentList(SmallVectorImpl&lt;llvm::LLParser::ArgInfo&gt; &amp; ArgList, bool &amp; IsVarArg)'/>
<def f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='2728' ll='2809' type='bool llvm::LLParser::parseArgumentList(SmallVectorImpl&lt;llvm::LLParser::ArgInfo&gt; &amp; ArgList, bool &amp; IsVarArg)'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='2821' u='c' c='_ZN4llvm8LLParser17parseFunctionTypeERPNS_4TypeE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='5726' u='c' c='_ZN4llvm8LLParser19parseFunctionHeaderERPNS_8FunctionEb'/>
<doc f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='2719'>/// parseArgumentList - parse the argument list for a function type or function
/// prototype.
///   ::= &apos;(&apos; ArgTypeListI &apos;)&apos;
/// ArgTypeListI
///   ::= /*empty*/
///   ::= &apos;...&apos;
///   ::= ArgTypeList &apos;,&apos; &apos;...&apos;
///   ::= ArgType (&apos;,&apos; ArgType)*
///</doc>
