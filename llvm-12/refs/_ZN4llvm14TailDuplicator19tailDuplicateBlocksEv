<dec f='llvm/llvm/include/llvm/CodeGen/TailDuplicator.h' l='77' type='bool llvm::TailDuplicator::tailDuplicateBlocks()'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplication.cpp' l='98' u='c' c='_ZN12_GLOBAL__N_117TailDuplicateBase20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<def f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='269' ll='295' type='bool llvm::TailDuplicator::tailDuplicateBlocks()'/>
<doc f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='266'>/// Look for small blocks that are unconditionally branched to and do not fall
/// through. Tail-duplicate their instructions into their predecessors to
/// eliminate (dynamic) branches.</doc>
