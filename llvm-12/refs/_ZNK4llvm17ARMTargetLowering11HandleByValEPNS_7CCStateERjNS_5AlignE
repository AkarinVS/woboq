<dec f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='859' type='void llvm::ARMTargetLowering::HandleByVal(llvm::CCState * , unsigned int &amp; , llvm::Align ) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='858'>/// HandleByVal - Target-specific cleanup for ByVal support.</doc>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3905' c='_ZNK4llvm14TargetLowering11HandleByValEPNS_7CCStateERjNS_5AlignE'/>
<def f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='2681' ll='2729' type='void llvm::ARMTargetLowering::HandleByVal(llvm::CCState * State, unsigned int &amp; Size, llvm::Align Alignment) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='2677'>/// HandleByVal - Every parameter *after* a byval parameter is passed
/// on the stack.  Remember the next parameter register to allocate,
/// and then confiscate the rest of the parameter registers to insure
/// this.</doc>
