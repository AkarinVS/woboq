<dec f='llvm/clang/include/clang/Parse/Parser.h' l='3266' type='bool clang::Parser::ParseUnqualifiedId(clang::CXXScopeSpec &amp; SS, clang::ParsedType ObjectType, bool ObjectHadErrors, bool EnteringContext, bool AllowDestructorName, bool AllowConstructorName, bool AllowDeductionGuide, clang::SourceLocation * TemplateKWLoc, clang::UnqualifiedId &amp; Result)'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='5964' u='c' c='_ZN5clang6Parser21ParseDirectDeclaratorERNS_10DeclaratorE'/>
<use f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='639' u='c' c='_ZN5clang6Parser20ParseUsingDeclaratorENS_17DeclaratorContextERNS0_15UsingDeclaratorE'/>
<use f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='2537' u='c' c='_ZN5clang6Parser30ParseCXXClassMemberDeclarationENS_15AccessSpecifierERNS_16ParsedAttributesERKNS0_18ParsedTemplateInfoEPNS_21ParsingDeclRAIIObjectE'/>
<use f='llvm/clang/lib/Parse/ParseExpr.cpp' l='2177' u='c' c='_ZN5clang6Parser28ParsePostfixExpressionSuffixENS_12ActionResultIPNS_4ExprELb1EEE'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='597' u='c' c='_ZN5clang6Parser23tryParseCXXIdExpressionERNS_12CXXScopeSpecEbRNS_5TokenE'/>
<def f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2764' ll='3029' type='bool clang::Parser::ParseUnqualifiedId(clang::CXXScopeSpec &amp; SS, clang::ParsedType ObjectType, bool ObjectHadErrors, bool EnteringContext, bool AllowDestructorName, bool AllowConstructorName, bool AllowDeductionGuide, clang::SourceLocation * TemplateKWLoc, clang::UnqualifiedId &amp; Result)'/>
<doc f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2728'>/// Parse a C++ unqualified-id (or a C identifier), which describes the
/// name of an entity.
///
/// \code
///       unqualified-id: [C++ expr.prim.general]
///         identifier
///         operator-function-id
///         conversion-function-id
/// [C++0x] literal-operator-id [TODO]
///         ~ class-name
///         template-id
///
/// \endcode
///
/// \param SS The nested-name-specifier that preceded this unqualified-id. If
/// non-empty, then we are parsing the unqualified-id of a qualified-id.
///
/// \param ObjectType if this unqualified-id occurs within a member access
/// expression, the type of the base object whose member is being accessed.
///
/// \param ObjectHadErrors if this unqualified-id occurs within a member access
/// expression, indicates whether the original subexpressions had any errors.
/// When true, diagnostics for missing &apos;template&apos; keyword will be supressed.
///
/// \param EnteringContext whether we are entering the scope of the
/// nested-name-specifier.
///
/// \param AllowDestructorName whether we allow parsing of a destructor name.
///
/// \param AllowConstructorName whether we allow parsing a constructor name.
///
/// \param AllowDeductionGuide whether we allow parsing a deduction guide name.
///
/// \param Result on a successful parse, contains the parsed unqualified-id.
///
/// \returns true if parsing fails, false otherwise.</doc>
<use f='llvm/clang/lib/Parse/ParseOpenMP.cpp' l='2602' u='c' c='_ZN5clang6Parser24ParseOpenMPSimpleVarListEN4llvm3omp9DirectiveERKNS1_12function_refIFvRNS_12CXXScopeSpecENS_19DeclarationNameInfoEEEEb'/>
<use f='llvm/clang/lib/Parse/ParseOpenMP.cpp' l='3258' u='c' c='_ZL16ParseReductionIdRN5clang6ParserERNS_12CXXScopeSpecERNS_13UnqualifiedIdE'/>
<use f='llvm/clang/lib/Parse/ParseStmtAsm.cpp' l='238' u='c' c='_ZN5clang6Parser20ParseMSAsmIdentifierERN4llvm15SmallVectorImplINS_5TokenEEERjb'/>
<use f='llvm/clang/lib/Parse/ParseTemplate.cpp' l='387' u='c' c='_ZN5clang6Parser22ParseConceptDefinitionERKNS0_18ParsedTemplateInfoERNS_14SourceLocationE'/>
<use f='llvm/clang/lib/Parse/Parser.cpp' l='2195' u='c' c='_ZN5clang6Parser31ParseMicrosoftIfExistsConditionERNS0_17IfExistsConditionE'/>
