<dec f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='135' type='__sanitizer::uptr __sanitizer::MapDynamicShadow(__sanitizer::uptr shadow_size_bytes, __sanitizer::uptr shadow_scale, __sanitizer::uptr min_shadow_base_alignment, __sanitizer::uptr &amp; high_mem_end)'/>
<doc f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_common.h' l='129'>// Maps shadow_size_bytes of shadow memory and returns shadow address. It will
// be aligned to the mmap granularity * 2^shadow_scale, or to
// 2^min_shadow_base_alignment if that is larger. The returned address will
// have max(2^min_shadow_base_alignment, mmap granularity) on the left, and
// shadow_size_bytes bytes on the right, which on linux is mapped no access.
// The high_mem_end may be updated if the original shadow size doesn&apos;t fit.</doc>
<use f='llvm/compiler-rt/lib/asan/asan_linux.cpp' l='110' u='c' c='__asan::FindDynamicShadowStart'/>
<use f='llvm/compiler-rt/lib/hwasan/hwasan_dynamic_shadow.cpp' l='120' u='c' c='__hwasan::FindDynamicShadowStart'/>
<use f='llvm/compiler-rt/lib/memprof/memprof_linux.cpp' l='68' u='c' c='__memprof::FindDynamicShadowStart'/>
<def f='llvm/compiler-rt/lib/sanitizer_common/sanitizer_linux_libcdep.cpp' l='891' ll='912' type='__sanitizer::uptr __sanitizer::MapDynamicShadow(__sanitizer::uptr shadow_size_bytes, __sanitizer::uptr shadow_scale, __sanitizer::uptr min_shadow_base_alignment, __sanitizer::uptr &amp; high_mem_end)'/>
