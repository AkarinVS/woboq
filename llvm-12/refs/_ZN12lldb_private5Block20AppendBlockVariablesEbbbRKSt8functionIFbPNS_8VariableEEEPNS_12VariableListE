<dec f='llvm/lldb/include/lldb/Symbol/Block.h' l='235' type='uint32_t lldb_private::Block::AppendBlockVariables(bool can_create, bool get_child_block_variables, bool stop_if_child_block_is_inlined_function, const std::function&lt;bool (Variable *)&gt; &amp; filter, lldb_private::VariableList * variable_list)'/>
<doc f='llvm/lldb/include/lldb/Symbol/Block.h' l='218'>/// Get the variable list for this block and optionally all child blocks if
  /// \a get_child_variables is \b true.
  ///
  /// \param[in] can_create
  ///     If \b true, the variables can be parsed if they already
  ///     haven&apos;t been, else the current state of the block will be
  ///     returned. Passing \b true for this parameter can be used
  ///     to see the current state of what has been parsed up to this
  ///     point.
  ///
  /// \param[in] get_child_block_variables
  ///     If \b true, all variables from all child blocks will be
  ///     added to the variable list.
  ///
  /// \return
  ///     A variable list shared pointer that contains all variables
  ///     for this block.</doc>
<def f='llvm/lldb/source/Symbol/Block.cpp' l='401' ll='430' type='uint32_t lldb_private::Block::AppendBlockVariables(bool can_create, bool get_child_block_variables, bool stop_if_child_block_is_inlined_function, const std::function&lt;bool (Variable *)&gt; &amp; filter, lldb_private::VariableList * variable_list)'/>
<use f='llvm/lldb/source/Symbol/Block.cpp' l='423' u='c' c='_ZN12lldb_private5Block20AppendBlockVariablesEbbbRKSt8functionIFbPNS_8VariableEEEPNS_12VariableListE'/>
<use f='llvm/lldb/source/Target/StackFrame.cpp' l='428' u='c' c='_ZN12lldb_private10StackFrame15GetVariableListEb'/>
