<dec f='llvm/clang/include/clang/Sema/Sema.h' l='3424' type='clang::ExprResult clang::Sema::PerformMoveOrCopyInitialization(const clang::InitializedEntity &amp; Entity, const clang::VarDecl * NRVOCandidate, clang::QualType ResultType, clang::Expr * Value, bool AllowNRVO = true)'/>
<use f='llvm/clang/lib/Sema/Sema.cpp' l='1938' u='c' c='_ZL18checkEscapingByrefPN5clang7VarDeclERNS_4SemaE'/>
<use f='llvm/clang/lib/Sema/SemaCoroutine.cpp' l='1003' u='c' c='_ZN5clang4Sema17BuildCoreturnStmtENS_14SourceLocationEPNS_4ExprEb'/>
<use f='llvm/clang/lib/Sema/SemaCoroutine.cpp' l='1572' u='c' c='_ZN5clang20CoroutineStmtBuilder24makeGroDeclAndReturnStmtEv'/>
<use f='llvm/clang/lib/Sema/SemaCoroutine.cpp' l='1588' u='c' c='_ZN5clang20CoroutineStmtBuilder24makeGroDeclAndReturnStmtEv'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='880' u='c' c='_ZN5clang4Sema13BuildCXXThrowENS_14SourceLocationEPNS_4ExprEb'/>
<def f='llvm/clang/lib/Sema/SemaStmt.cpp' l='3208' ll='3312' type='clang::ExprResult clang::Sema::PerformMoveOrCopyInitialization(const clang::InitializedEntity &amp; Entity, const clang::VarDecl * NRVOCandidate, clang::QualType ResultType, clang::Expr * Value, bool AllowNRVO = true)'/>
<use f='llvm/clang/lib/Sema/SemaStmt.cpp' l='3460' u='c' c='_ZN5clang4Sema23ActOnCapScopeReturnStmtENS_14SourceLocationEPNS_4ExprE'/>
<use f='llvm/clang/lib/Sema/SemaStmt.cpp' l='3874' u='c' c='_ZN5clang4Sema15BuildReturnStmtENS_14SourceLocationEPNS_4ExprE'/>
<doc f='llvm/clang/lib/Sema/SemaStmt.cpp' l='3202'>/// Perform the initialization of a potentially-movable value, which
/// is the result of return value.
///
/// This routine implements C++14 [class.copy]p32, which attempts to treat
/// returned lvalues as rvalues in certain cases (to prefer move construction),
/// then falls back to treating them as lvalues if that failed.</doc>
