<dec f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='4461' type='llvm::SDValue llvm::TargetLowering::expandFixedPointDiv(unsigned int Opcode, const llvm::SDLoc &amp; dl, llvm::SDValue LHS, llvm::SDValue RHS, unsigned int Scale, llvm::SelectionDAG &amp; DAG) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='4457'>/// Method for building the DAG expansion of ISD::[US]DIVFIX[SAT]. This
  /// method accepts integers as its arguments.
  /// Note: This method may fail if the division could not be performed
  /// within the type. Clients must retry with a wider type if this happens.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp' l='3642' u='c' c='_ZN12_GLOBAL__N_120SelectionDAGLegalize10ExpandNodeEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='917' u='c' c='_ZL17earlyExpandDIVFIXPN4llvm6SDNodeENS_7SDValueES2_jRKNS_14TargetLoweringERNS_12SelectionDAGEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='971' u='c' c='_ZN4llvm16DAGTypeLegalizer20PromoteIntRes_DIVFIXEPNS_6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='3589' u='c' c='_ZN4llvm16DAGTypeLegalizer19ExpandIntRes_DIVFIXEPNS_6SDNodeERNS_7SDValueES4_'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp' l='1363' u='c' c='_ZN12_GLOBAL__N_115VectorLegalizer19ExpandFixedPointDivEPN4llvm6SDNodeERNS1_15SmallVectorImplINS1_7SDValueEEE'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='7961' ll='8046' type='llvm::SDValue llvm::TargetLowering::expandFixedPointDiv(unsigned int Opcode, const llvm::SDLoc &amp; dl, llvm::SDValue LHS, llvm::SDValue RHS, unsigned int Scale, llvm::SelectionDAG &amp; DAG) const'/>
