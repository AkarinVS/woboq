<dec f='llvm/lldb/include/lldb/Target/LanguageRuntime.h' l='98' type='lldb_private::TypeAndOrName lldb_private::LanguageRuntime::FixUpDynamicType(const lldb_private::TypeAndOrName &amp; type_and_or_name, lldb_private::ValueObject &amp; static_value)'/>
<doc f='llvm/lldb/include/lldb/Target/LanguageRuntime.h' l='93'>// The contract for GetDynamicTypeAndAddress() is to return a &quot;bare-bones&quot;
  // dynamic type For instance, given a Base* pointer,
  // GetDynamicTypeAndAddress() will return the type of Derived, not Derived*.
  // The job of this API is to correct this misalignment between the static
  // type and the discovered dynamic type</doc>
<use f='llvm/lldb/source/Core/ValueObjectDynamicValue.cpp' l='184' u='c' c='_ZN12lldb_private23ValueObjectDynamicValue11UpdateValueEv'/>
<use f='llvm/lldb/source/Core/ValueObjectDynamicValue.cpp' l='238' u='c' c='_ZN12lldb_private23ValueObjectDynamicValue11UpdateValueEv'/>
<ovr f='llvm/lldb/source/Plugins/LanguageRuntime/CPlusPlus/ItaniumABI/ItaniumABILanguageRuntime.cpp' l='269' c='_ZN12lldb_private25ItaniumABILanguageRuntime16FixUpDynamicTypeERKNS_13TypeAndOrNameERNS_11ValueObjectE'/>
<ovr f='llvm/lldb/source/Plugins/LanguageRuntime/ObjC/AppleObjCRuntime/AppleObjCRuntime.cpp' l='276' c='_ZN12lldb_private16AppleObjCRuntime16FixUpDynamicTypeERKNS_13TypeAndOrNameERNS_11ValueObjectE'/>
<ovr f='llvm/lldb/source/Plugins/LanguageRuntime/RenderScript/RenderScriptRuntime/RenderScriptRuntime.cpp' l='1032' c='_ZN12lldb_private19RenderScriptRuntime16FixUpDynamicTypeERKNS_13TypeAndOrNameERNS_11ValueObjectE'/>
