<dec f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='304' type='31'/>
<doc f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='297'>/// The function may perform non-volatile loads and stores of objects
  /// pointed to by its pointer-typed arguments, with arbitrary offsets, and
  /// it may also perform loads and stores of memory that is otherwise
  /// inaccessible via LLVM IR.
  ///
  /// This property corresponds to the LLVM IR
  /// inaccessiblemem_or_argmemonly attribute.</doc>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='688' u='r' c='_ZN4llvm13BasicAAResult17getModRefBehaviorEPKNS_8CallBaseE'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='721' u='r' c='_ZN4llvm13BasicAAResult17getModRefBehaviorEPKNS_8FunctionE'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='1817' c='_ZN5polly11ScopBuilder19buildAccessCallInstENS_10MemAccInstEPNS_8ScopStmtE'/>
<use f='llvm/polly/lib/Analysis/ScopDetection.cpp' l='737' c='_ZNK5polly13ScopDetection15isValidCallInstERN4llvm8CallInstERNS0_16DetectionContextE'/>
