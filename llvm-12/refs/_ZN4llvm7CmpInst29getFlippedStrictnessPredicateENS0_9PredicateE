<dec f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='897' type='static llvm::CmpInst::Predicate llvm::CmpInst::getFlippedStrictnessPredicate(llvm::CmpInst::Predicate pred)'/>
<use f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='906' u='c' c='_ZNK4llvm7CmpInst29getFlippedStrictnessPredicateEv'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='894'>/// This is a static version that you can use without an instruction
  /// available.
  /// Return the flipped strictness of predicate</doc>
<use f='llvm/llvm/lib/Analysis/LoopInfo.cpp' l='259' u='c' c='_ZNK4llvm4Loop10LoopBounds21getCanonicalPredicateEv'/>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='3836' ll='3845' type='static CmpInst::Predicate llvm::CmpInst::getFlippedStrictnessPredicate(llvm::CmpInst::Predicate pred)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='3946' u='c' c='_ZN4llvm16InstCombinerImpl13foldICmpBinOpERNS_8ICmpInstERKNS_13SimplifyQueryE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='3950' u='c' c='_ZN4llvm16InstCombinerImpl13foldICmpBinOpERNS_8ICmpInstERKNS_13SimplifyQueryE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='5282' u='c' c='_ZN4llvm12InstCombiner40getFlippedStrictnessPredicateAndConstantENS_7CmpInst9PredicateEPNS_8ConstantE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='598' u='c' c='_ZN12_GLOBAL__N_115LoopPredication35widenICmpRangeCheckIncrementingLoopENS_8LoopICmpES1_RN4llvm12SCEVExpanderEPNS2_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='650' u='c' c='_ZN12_GLOBAL__N_115LoopPredication35widenICmpRangeCheckDecrementingLoopENS_8LoopICmpES1_RN4llvm12SCEVExpanderEPNS2_11InstructionE'/>
