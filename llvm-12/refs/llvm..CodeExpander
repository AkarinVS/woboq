<def f='llvm/llvm/utils/TableGen/GlobalISel/CodeExpander.h' l='32' ll='47'/>
<use f='llvm/llvm/utils/TableGen/GlobalISel/CodeExpander.h' l='49' c='_ZN4llvmlsERNS_11raw_ostreamERKNS_12CodeExpanderE'/>
<use f='llvm/llvm/unittests/TableGen/CodeExpanderTest.cpp' l='75' c='_ZN30CodeExpander_NoExpansions_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/TableGen/CodeExpanderTest.cpp' l='86' c='_ZN29CodeExpander_Indentation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/TableGen/CodeExpanderTest.cpp' l='100' c='_ZN24CodeExpander_Escape_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/TableGen/CodeExpanderTest.cpp' l='112' c='_ZN32CodeExpander_NotAnExpansion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/TableGen/CodeExpanderTest.cpp' l='127' c='_ZN39CodeExpander_EscapedNotAnExpansion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/TableGen/CodeExpanderTest.cpp' l='138' c='_ZN46CodeExpander_EscapedUnterminatedExpansion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/TableGen/CodeExpanderTest.cpp' l='149' c='_ZN34CodeExpander_EscapedExpansion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/TableGen/CodeExpanderTest.cpp' l='161' c='_ZN36CodeExpander_UndefinedExpansion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/TableGen/CodeExpanderTest.cpp' l='177' c='_ZN39CodeExpander_UnterminatedExpansion_Test8TestBodyEv'/>
<size>56</size>
<doc f='llvm/llvm/utils/TableGen/GlobalISel/CodeExpander.h' l='24'>/// Emit the given code with all &apos;${foo}&apos; placeholders expanded to their
/// replacements.
///
/// It&apos;s an error to use an undefined expansion and expansion-like output that
/// needs to be emitted verbatim can be escaped as &apos;\${foo}&apos;
///
/// The emitted code can be given a custom indent to enable both indentation by
/// an arbitrary amount of whitespace and emission of the code as a comment.</doc>
<mbr r='llvm::CodeExpander::Code' o='0' t='llvm::StringRef'/>
<mbr r='llvm::CodeExpander::Expansions' o='128' t='const llvm::CodeExpansions &amp;'/>
<mbr r='llvm::CodeExpander::Loc' o='192' t='const ArrayRef&lt;llvm::SMLoc&gt; &amp;'/>
<mbr r='llvm::CodeExpander::ShowExpansions' o='256' t='bool'/>
<mbr r='llvm::CodeExpander::Indent' o='320' t='llvm::StringRef'/>
<fun r='_ZN4llvm12CodeExpanderC1ENS_9StringRefERKNS_14CodeExpansionsERKNS_8ArrayRefINS_5SMLocEEEbS1_'/>
<fun r='_ZNK4llvm12CodeExpander4emitERNS_11raw_ostreamE'/>
<use f='llvm/llvm/utils/TableGen/GICombinerEmitter.cpp' l='801' c='_ZNK12_GLOBAL__N_117GICombinerEmitter19generateCodeForTreeERN4llvm11raw_ostreamERKNS1_11GIMatchTreeENS1_9StringRefE'/>
<use f='llvm/llvm/utils/TableGen/GICombinerEmitter.cpp' l='810' c='_ZNK12_GLOBAL__N_117GICombinerEmitter19generateCodeForTreeERN4llvm11raw_ostreamERKNS1_11GIMatchTreeENS1_9StringRefE'/>
<size>56</size>
