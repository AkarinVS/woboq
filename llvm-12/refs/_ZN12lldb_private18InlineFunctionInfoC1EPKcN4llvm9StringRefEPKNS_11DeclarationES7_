<dec f='llvm/lldb/include/lldb/Symbol/Function.h' l='148' type='void lldb_private::InlineFunctionInfo::InlineFunctionInfo(const char * name, llvm::StringRef mangled, const lldb_private::Declaration * decl_ptr, const lldb_private::Declaration * call_decl_ptr)'/>
<doc f='llvm/lldb/include/lldb/Symbol/Function.h' l='129'>/// Construct with the function method name, mangled name, and optional
  /// declaration information.
  ///
  /// \param[in] name
  ///     A C string name for the method name for this function. This
  ///     value should not be the mangled named, but the simple method
  ///     name.
  ///
  /// \param[in] mangled
  ///     A C string name for the mangled name for this function. This
  ///     value can be NULL if there is no mangled information.
  ///
  /// \param[in] decl_ptr
  ///     Optional declaration information that describes where the
  ///     function was declared. This can be NULL.
  ///
  /// \param[in] call_decl_ptr
  ///     Optional calling location declaration information that
  ///     describes from where this inlined function was called.</doc>
<def f='llvm/lldb/source/Symbol/Function.cpp' l='63' ll='68' type='void lldb_private::InlineFunctionInfo::InlineFunctionInfo(const char * name, llvm::StringRef mangled, const lldb_private::Declaration * decl_ptr, const lldb_private::Declaration * call_decl_ptr)'/>
