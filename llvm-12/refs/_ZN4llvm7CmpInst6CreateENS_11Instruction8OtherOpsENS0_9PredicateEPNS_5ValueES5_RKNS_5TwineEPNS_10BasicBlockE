<dec f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='790' type='static llvm::CmpInst * llvm::CmpInst::Create(llvm::Instruction::OtherOps Op, llvm::CmpInst::Predicate predicate, llvm::Value * S1, llvm::Value * S2, const llvm::Twine &amp; Name, llvm::BasicBlock * InsertAtEnd)'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='786'>/// Construct a compare instruction, given the opcode, the predicate and the
  /// two operands.  Also automatically insert this instruction to the end of
  /// the BasicBlock specified.
  /// Create a CmpInst</doc>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='3605' ll='3614' type='static llvm::CmpInst * llvm::CmpInst::Create(llvm::Instruction::OtherOps Op, llvm::CmpInst::Predicate predicate, llvm::Value * S1, llvm::Value * S2, const llvm::Twine &amp; Name, llvm::BasicBlock * InsertAtEnd)'/>
<use f='llvm/llvm/unittests/Analysis/ScalarEvolutionTest.cpp' l='642' u='c' c='_ZN4llvm44ScalarEvolutionsTest_SCEVZeroExtendExpr_Test8TestBodyEv'/>
