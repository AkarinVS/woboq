<use f='llvm/llvm/include/llvm/Transforms/IPO/IROutliner.h' l='132'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/IROutliner.h' l='134' c='_ZN4llvm16OutlinableRegionC1ERNS_12IRSimilarity21IRSimilarityCandidateER15OutlinableGroup'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/IROutliner.h' l='189' c='_ZN4llvm10IROutliner24pruneIncompatibleRegionsERSt6vectorINS_12IRSimilarity21IRSimilarityCandidateESaIS3_EER15OutlinableGroup'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/IROutliner.h' l='199' c='_ZN4llvm10IROutliner14createFunctionERNS_6ModuleER15OutlinableGroupj'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/IROutliner.h' l='218' c='_ZN4llvm10IROutliner25findBenefitFromAllRegionsER15OutlinableGroup'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/IROutliner.h' l='225' c='_ZN4llvm10IROutliner21findCostOutputReloadsER15OutlinableGroup'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/IROutliner.h' l='232' c='_ZN4llvm10IROutliner15findCostBenefitERNS_6ModuleER15OutlinableGroup'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/IROutliner.h' l='258' c='_ZN4llvm10IROutliner28deduplicateExtractedSectionsERNS_6ModuleER15OutlinableGroupRSt6vectorIPNS_8FunctionESaIS7_EERj'/>
<def f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='55' ll='111'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='356' c='_ZN4llvm10IROutliner14createFunctionERNS_6ModuleER15OutlinableGroupj'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='576' c='_ZL39findExtractedInputToOverallInputMappingRN4llvm16OutlinableRegionERSt6vectorIjSaIjEERNS_9SetVectorIPNS_5ValueES2_IS8_SaIS8_EENS_8DenseSetIS8_NS_1216586379'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='644' c='_ZL41findExtractedOutputToOverallOutputMappingRN4llvm16OutlinableRegionENS_8ArrayRefIPNS_5ValueEEE'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='738' c='_Z21replaceCalledFunctionRN4llvm6ModuleERNS_16OutlinableRegionE'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='842' c='_ZL19replaceArgumentUsesRN4llvm16OutlinableRegionEPNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='889' c='_Z16replaceConstantsRN4llvm16OutlinableRegionE'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='999' c='_ZL27alignOutputBlockWithAggFuncR15OutlinableGroupRN4llvm16OutlinableRegionEPNS1_10BasicBlockES5_RKNS1_8DenseMapIPNS1_5ValueES8_NS1_12DenseMapInfoIS8_14107659'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='1087' c='_Z21createSwitchStatementRN4llvm6ModuleER15OutlinableGroupPNS_10BasicBlockENS_8ArrayRefIS5_EE'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='1143' c='_ZL19fillOverallFunctionRN4llvm6ModuleER15OutlinableGroupRSt6vectorIPNS_10BasicBlockESaIS6_EERS4_IPNS_8FunctionESaISB_EE'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='1190' c='_ZN4llvm10IROutliner28deduplicateExtractedSectionsERNS_6ModuleER15OutlinableGroupRSt6vectorIPNS_8FunctionESaIS7_EERj'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='1227' c='_ZN4llvm10IROutliner24pruneIncompatibleRegionsERSt6vectorINS_12IRSimilarity21IRSimilarityCandidateESaIS3_EER15OutlinableGroup'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='1291' c='_ZN4llvm10IROutliner25findBenefitFromAllRegionsER15OutlinableGroup'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='1306' c='_ZN4llvm10IROutliner21findCostOutputReloadsER15OutlinableGroup'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='1339' c='_ZL23findCostForOutputBlocksRN4llvm6ModuleER15OutlinableGroupRNS_19TargetTransformInfoE'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='1392' c='_ZN4llvm10IROutliner15findCostBenefitERNS_6ModuleER15OutlinableGroup'/>
<use f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='1553' c='_ZN4llvm10IROutliner9doOutlineERNS_6ModuleE'/>
<size>136</size>
<doc f='llvm/llvm/lib/Transforms/IPO/IROutliner.cpp' l='50'>/// The OutlinableGroup holds all the overarching information for outlining
/// a set of regions that are structurally similar to one another, such as the
/// types of the overall function, the output blocks, the sets of stores needed
/// and a list of the different regions. This information is used in the
/// deduplication of extracted regions with the same structure.</doc>
<mbr r='OutlinableGroup::Regions' o='0' t='std::vector&lt;OutlinableRegion *&gt;'/>
<mbr r='OutlinableGroup::ArgumentTypes' o='192' t='std::vector&lt;Type *&gt;'/>
<mbr r='OutlinableGroup::OutlinedFunctionType' o='384' t='llvm::FunctionType *'/>
<mbr r='OutlinableGroup::OutlinedFunction' o='448' t='llvm::Function *'/>
<mbr r='OutlinableGroup::IgnoreGroup' o='512' t='bool'/>
<mbr r='OutlinableGroup::EndBB' o='576' t='llvm::BasicBlock *'/>
<mbr r='OutlinableGroup::OutputGVNCombinations' o='640' t='DenseSet&lt;ArrayRef&lt;unsigned int&gt; &gt;'/>
<mbr r='OutlinableGroup::InputTypesSet' o='832' t='bool'/>
<mbr r='OutlinableGroup::NumAggregateInputs' o='864' t='unsigned int'/>
<mbr r='OutlinableGroup::Benefit' o='896' t='llvm::InstructionCost'/>
<mbr r='OutlinableGroup::Cost' o='960' t='llvm::InstructionCost'/>
<mbr r='OutlinableGroup::SwiftErrorArgument' o='1024' t='Optional&lt;unsigned int&gt;'/>
<fun r='_ZN15OutlinableGroup17findSameConstantsERN4llvm8DenseSetIjNS0_12DenseMapInfoIjEEEE'/>
<fun r='_ZN15OutlinableGroup19collectGVNStoreSetsERN4llvm6ModuleE'/>
<fun r='_ZN15OutlinableGroup17findSameConstantsERN4llvm8DenseSetIjNS0_12DenseMapInfoIjEEEE'/>
<fun r='_ZN15OutlinableGroup19collectGVNStoreSetsERN4llvm6ModuleE'/>
