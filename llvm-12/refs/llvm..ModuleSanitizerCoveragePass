<inh f='llvm/llvm/include/llvm/IR/PassManager.h' l='374' c='llvm::PassInfoMixin'/>
<def f='llvm/llvm/include/llvm/Transforms/Instrumentation/SanitizerCoverage.h' l='31' ll='56'/>
<use f='llvm/llvm/include/llvm/Transforms/Instrumentation/SanitizerCoverage.h' l='32'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='1258' c='_ZN12_GLOBAL__N_118EmitAssemblyHelper30EmitAssemblyWithNewPassManagerEN5clang13BackendActionESt10unique_ptrIN4llvm17raw_pwrite_streamESt14default_deleteIS5_EE'/>
<size>40</size>
<doc f='llvm/llvm/include/llvm/Transforms/Instrumentation/SanitizerCoverage.h' l='27'>/// This is the ModuleSanitizerCoverage pass used in the new pass manager. The
/// pass instruments functions for coverage, adds initialization calls to the
/// module for trace PC guards and 8bit counters if they are requested, and
/// appends globals to llvm.compiler.used.</doc>
<fun r='_ZN4llvm27ModuleSanitizerCoveragePassC1ENS_24SanitizerCoverageOptionsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EESC_'/>
<fun r='_ZN4llvm27ModuleSanitizerCoveragePass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE'/>
<fun r='_ZN4llvm27ModuleSanitizerCoveragePass10isRequiredEv'/>
<mbr r='llvm::ModuleSanitizerCoveragePass::Options' o='0' t='llvm::SanitizerCoverageOptions'/>
<mbr r='llvm::ModuleSanitizerCoveragePass::Allowlist' o='192' t='std::unique_ptr&lt;SpecialCaseList&gt;'/>
<mbr r='llvm::ModuleSanitizerCoveragePass::Blocklist' o='256' t='std::unique_ptr&lt;SpecialCaseList&gt;'/>
<use f='llvm/llvm/lib/Passes/PassRegistry.def' l='119' c='_ZN4llvm11PassBuilder15parseModulePassERNS_11PassManagerINS_6ModuleENS_15AnalysisManagerIS2_JEEEJEEERKNS0_15PipelineElementE'/>
<size>40</size>
