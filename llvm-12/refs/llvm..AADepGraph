<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='186'/>
<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='194' ll='219'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='1632'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='1692'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='189'>/// The data structure for the dependency graph
///
/// Note that in this graph if there is an edge from A to B (A -&gt; B),
/// then it means that B depends on A, and when the state of A is
/// updated, node B should also be updated</doc>
<fun r='_ZN4llvm10AADepGraphC1Ev'/>
<fun r='_ZN4llvm10AADepGraphD1Ev'/>
<fun r='_ZN4llvm10AADepGraph9DepGetValERNS_14PointerIntPairIPNS_14AADepGraphNodeELj1EjNS_21PointerLikeTypeTraitsIS3_EENS_18PointerIntPairInfoIS3_Lj1ES5_EEEE'/>
<mbr r='llvm::AADepGraph::SyntheticRoot' o='0' t='llvm::AADepGraphNode'/>
<fun r='_ZN4llvm10AADepGraph12GetEntryNodeEv'/>
<fun r='_ZN4llvm10AADepGraph5beginEv'/>
<fun r='_ZN4llvm10AADepGraph3endEv'/>
<fun r='_ZN4llvm10AADepGraph9viewGraphEv'/>
<fun r='_ZN4llvm10AADepGraph9dumpGraphEv'/>
<fun r='_ZN4llvm10AADepGraph5printEv'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='2446'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='2447' c='_ZN4llvm11GraphTraitsIPNS_10AADepGraphEE12getEntryNodeES2_'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='2452' c='_ZN4llvm11GraphTraitsIPNS_10AADepGraphEE11nodes_beginES2_'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='2454' c='_ZN4llvm11GraphTraitsIPNS_10AADepGraphEE9nodes_endES2_'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='2457'/>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='2461' c='_ZN4llvm14DOTGraphTraitsIPNS_10AADepGraphEE12getNodeLabelB5cxx11EPKNS_14AADepGraphNodeEPKS1_'/>
<size>16</size>
<fun r='_ZN4llvm10AADepGraph9viewGraphEv'/>
<fun r='_ZN4llvm10AADepGraph9dumpGraphEv'/>
<fun r='_ZN4llvm10AADepGraph5printEv'/>
