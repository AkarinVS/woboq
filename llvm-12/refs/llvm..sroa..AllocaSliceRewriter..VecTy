<dec f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2298' type='llvm::VectorType *'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2343' u='w' c='_ZN4llvm4sroa19AllocaSliceRewriterC1ERKNS_10DataLayoutERNS0_12AllocaSlicesERNS_4SROAERNS_10AllocaInstESA_mmbPNS_10VectorTypeERNS_14SmallSetVectorIPNS_10401369'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2344' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriterC1ERKNS_10DataLayoutERNS0_12AllocaSlicesERNS_4SROAERNS_10AllocaInstESA_mmbPNS_10VectorTypeERNS_14SmallSetVectorIPNS_10401369'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2344' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriterC1ERKNS_10DataLayoutERNS0_12AllocaSlicesERNS_4SROAERNS_10AllocaInstESA_mmbPNS_10VectorTypeERNS_14SmallSetVectorIPNS_10401369'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2345' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriterC1ERKNS_10DataLayoutERNS0_12AllocaSlicesERNS_4SROAERNS_10AllocaInstESA_mmbPNS_10VectorTypeERNS_14SmallSetVectorIPNS_10401369'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2349' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriterC1ERKNS_10DataLayoutERNS0_12AllocaSlicesERNS_4SROAERNS_10AllocaInstESA_mmbPNS_10VectorTypeERNS_14SmallSetVectorIPNS_10401369'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2386' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter5visitEPKN12_GLOBAL__N_15SliceE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2514' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter13visitLoadInstERNS_8LoadInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2609' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter26rewriteVectorizedStoreInstEPNS_5ValueERNS_9StoreInstES3_NS_9AAMDNodesE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2686' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter14visitStoreInstERNS_9StoreInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2795' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter15visitMemSetInstERNS_10MemSetInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2831' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter15visitMemSetInstERNS_10MemSetInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2939' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter20visitMemTransferInstERNS_15MemTransferInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='3017' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter20visitMemTransferInstERNS_15MemTransferInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='3018' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter20visitMemTransferInstERNS_15MemTransferInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='3026' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter20visitMemTransferInstERNS_15MemTransferInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='3028' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter20visitMemTransferInstERNS_15MemTransferInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='3030' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter20visitMemTransferInstERNS_15MemTransferInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='3049' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter20visitMemTransferInstERNS_15MemTransferInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='3067' u='r' c='_ZN4llvm4sroa19AllocaSliceRewriter20visitMemTransferInstERNS_15MemTransferInstE'/>
<offset>576</offset>
<doc f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2289'>// If we are rewriting an alloca partition which can be written as pure
  // vector operations, we stash extra information here. When VecTy is
  // non-null, we have some strict guarantees about the rewritten alloca:
  //   - The new alloca is exactly the size of the vector type here.
  //   - The accesses all either map to the entire vector or to a single
  //     element.
  //   - The set of accessing instructions is only one of those handled above
  //     in isVectorPromotionViable. Generally these are the same access kinds
  //     which are promotable via mem2reg.</doc>
