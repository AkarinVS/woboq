<dec f='llvm/polly/lib/External/isl/include/isl/flow.h' l='114' type='isl_union_flow * isl_union_access_info_compute_flow(isl_union_access_info * access)'/>
<use f='llvm/polly/lib/External/isl/include/isl/isl-noexceptions.h' l='16182' u='c' c='_ZNK3isl12noexceptions17union_access_info12compute_flowEv'/>
<use f='llvm/polly/lib/Analysis/DependenceInfo.cpp' l='303' u='c' c='_ZL9buildFlowP13isl_union_mapS0_S0_S0_P12isl_schedule'/>
<def f='llvm/polly/lib/External/isl/isl_flow.c' l='3200' ll='3230' type='isl_union_flow * isl_union_access_info_compute_flow(isl_union_access_info * access)'/>
<use f='llvm/polly/lib/External/isl/isl_flow.c' l='3311' u='c' c='isl_union_map_compute_flow'/>
<doc f='llvm/polly/lib/External/isl/isl_flow.c' l='3180'>/* Given a description of the &quot;sink&quot; accesses, the &quot;source&quot; accesses and
 * a schedule, compute for each instance of a sink access
 * and for each element accessed by that instance,
 * the possible or definite source accesses that last accessed the
 * element accessed by the sink access before this sink access
 * in the sense that there is no intermediate definite source access.
 *
 * The must_no_source and may_no_source elements of the result
 * are subsets of access-&gt;sink.  The elements must_dep and may_dep
 * map domain elements of access-&gt;{may,must)_source to
 * domain elements of access-&gt;sink.
 *
 * If any kills have been specified, then they are treated as
 * must-sources internally.  Any dependence that purely derives
 * from an original kill is removed from the output.
 *
 * We check whether the schedule is available as a schedule tree
 * or a schedule map and call the corresponding function to perform
 * the analysis.
 */</doc>
<use f='llvm/polly/lib/External/isl/isl_test.c' l='4623' u='c' c='test_special_conditional_schedule_constraints'/>
<use f='llvm/polly/lib/External/ppcg/ppcg.c' l='404' u='c' c='compute_live_out'/>
<use f='llvm/polly/lib/External/ppcg/ppcg.c' l='451' u='c' c='compute_tagged_flow_dep_only'/>
<use f='llvm/polly/lib/External/ppcg/ppcg.c' l='545' u='c' c='compute_order_dependences'/>
<use f='llvm/polly/lib/External/ppcg/ppcg.c' l='605' u='c' c='compute_forced_dependences'/>
<use f='llvm/polly/lib/External/ppcg/ppcg.c' l='616' u='c' c='compute_forced_dependences'/>
<use f='llvm/polly/lib/External/ppcg/ppcg.c' l='633' u='c' c='compute_forced_dependences'/>
<use f='llvm/polly/lib/External/ppcg/ppcg.c' l='699' u='c' c='compute_flow_dep'/>
<use f='llvm/polly/lib/External/ppcg/ppcg.c' l='744' u='c' c='compute_dependences'/>
