<dec f='llvm/polly/include/polly/ScopBuilder.h' l='645' type='bool polly::ScopBuilder::calculateMinMaxAccess(polly::ScopBuilder::AliasGroupTy AliasGroup, Scop::MinMaxVectorTy &amp; MinMaxAccesses)'/>
<def f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='3328' ll='3349' type='bool polly::ScopBuilder::calculateMinMaxAccess(polly::ScopBuilder::AliasGroupTy AliasGroup, Scop::MinMaxVectorTy &amp; MinMaxAccesses)'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='3518' u='c' c='_ZN5polly11ScopBuilder15buildAliasGroupERN4llvm11SmallVectorIPNS_12MemoryAccessELj4EEENS1_8DenseSetIPKNS_13ScopArrayInfoENS1_12DenseMapInfoISA_EEEE'/>
<use f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='3530' u='c' c='_ZN5polly11ScopBuilder15buildAliasGroupERN4llvm11SmallVectorIPNS_12MemoryAccessELj4EEENS1_8DenseSetIPKNS_13ScopArrayInfoENS1_12DenseMapInfoISA_EEEE'/>
<doc f='llvm/polly/lib/Analysis/ScopBuilder.cpp' l='3327'>/// Wrapper function to calculate minimal/maximal accesses to each array.</doc>
<doc f='llvm/polly/include/polly/ScopBuilder.h' l='644'>/// Wrapper function to calculate minimal/maximal accesses to each array.</doc>
