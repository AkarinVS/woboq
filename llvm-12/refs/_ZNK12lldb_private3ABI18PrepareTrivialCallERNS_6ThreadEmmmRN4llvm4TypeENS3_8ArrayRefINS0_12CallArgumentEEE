<dec f='llvm/lldb/include/lldb/Target/ABI.h' l='59' type='bool lldb_private::ABI::PrepareTrivialCall(lldb_private::Thread &amp; thread, lldb::addr_t sp, lldb::addr_t functionAddress, lldb::addr_t returnAddress, llvm::Type &amp; prototype, llvm::ArrayRef&lt;CallArgument&gt; args) const'/>
<doc f='llvm/lldb/include/lldb/Target/ABI.h' l='49'>// Prepare trivial call used from ThreadPlanFunctionCallUsingABI
  // AD:
  //  . Because i don&apos;t want to change other ABI&apos;s this is not declared pure
  //  virtual.
  //    The dummy implementation will simply fail.  Only HexagonABI will
  //    currently
  //    use this method.
  //  . Two PrepareTrivialCall&apos;s is not good design so perhaps this should be
  //  combined.
  //</doc>
<ovr f='llvm/lldb/source/Plugins/ABI/Hexagon/ABISysV_hexagon.cpp' l='1049' c='_ZNK15ABISysV_hexagon18PrepareTrivialCallERN12lldb_private6ThreadEmmmRN4llvm4TypeENS3_8ArrayRefINS0_3ABI12CallArgumentEEE'/>
<def f='llvm/lldb/source/Target/ABI.cpp' l='167' ll='173' type='bool lldb_private::ABI::PrepareTrivialCall(lldb_private::Thread &amp; thread, lldb::addr_t sp, lldb::addr_t functionAddress, lldb::addr_t returnAddress, llvm::Type &amp; returntype, llvm::ArrayRef&lt;ABI::CallArgument&gt; args) const'/>
<use f='llvm/lldb/source/Target/ThreadPlanCallFunctionUsingABI.cpp' l='36' u='c' c='_ZN12lldb_private30ThreadPlanCallFunctionUsingABIC1ERNS_6ThreadERKNS_7AddressERN4llvm4TypeES8_NS6_8ArrayRefINS_3ABI12CallArgumentEEERKNS_25EvaluateExpressionOptionsE'/>
