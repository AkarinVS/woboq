<def f='llvm/llvm/include/llvm/Object/WindowsResource.h' l='67' ll='82'/>
<use f='llvm/lld/COFF/DriverUtils.cpp' l='459' c='_ZN3lld4coffL32createMemoryBufferForManifestResEm'/>
<use f='llvm/lld/COFF/DriverUtils.cpp' l='478' c='_ZN3lld4coffL19writeResEntryHeaderERPcm'/>
<use f='llvm/lld/COFF/DriverUtils.cpp' l='483' c='_ZN3lld4coffL19writeResEntryHeaderERPcm'/>
<use f='llvm/lld/COFF/DriverUtils.cpp' l='486' c='_ZN3lld4coffL19writeResEntryHeaderERPcm'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/Object/WindowsResource.h' l='65'>// Type and Name may each either be an integer ID or a string.  This struct is
// only used in the case where they are both IDs.</doc>
<mbr r='llvm::object::WinResIDs::TypeFlag' o='0' t='uint16_t'/>
<mbr r='llvm::object::WinResIDs::TypeID' o='16' t='support::ulittle16_t'/>
<mbr r='llvm::object::WinResIDs::NameFlag' o='32' t='uint16_t'/>
<mbr r='llvm::object::WinResIDs::NameID' o='48' t='support::ulittle16_t'/>
<fun r='_ZN4llvm6object9WinResIDs7setTypeEt'/>
<fun r='_ZN4llvm6object9WinResIDs7setNameEt'/>
