<dec f='llvm/polly/include/polly/ScopInfo.h' l='806' type='isl::map polly::MemoryAccess::getAddressFunction() const'/>
<doc f='llvm/polly/include/polly/ScopInfo.h' l='793'>/// Get an isl map describing the memory address accessed.
  ///
  /// In most cases the memory address accessed is well described by the access
  /// relation obtained with getAccessRelation. However, in case of arrays
  /// accessed with types of different size the access relation maps one access
  /// to multiple smaller address locations. This method returns an isl map that
  /// relates each dynamic statement instance to the unique memory location
  /// that is loaded from / stored to.
  ///
  /// For an access relation { S[i] -&gt; A[o] : 4i &lt;= o &lt;= 4i + 3 } this method
  /// will return the address function { S[i] -&gt; A[4i] }.
  ///
  /// @returns The address function for this memory access.</doc>
<def f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='599' ll='601' type='isl::map polly::MemoryAccess::getAddressFunction() const'/>
<use f='llvm/polly/lib/Analysis/ScopInfo.cpp' l='611' u='c' c='_ZNK5polly12MemoryAccess29applyScheduleToAccessRelationEN3isl12noexceptions9union_mapE'/>
<use f='llvm/polly/lib/CodeGen/IslNodeBuilder.cpp' l='1228' u='c' c='_ZN14IslNodeBuilder20preloadInvariantLoadERKN5polly12MemoryAccessEP7isl_set'/>
