<dec f='llvm/llvm/include/llvm/Transforms/IPO/DeadArgumentElimination.h' l='128' type='llvm::DeadArgumentEliminationPass::Liveness llvm::DeadArgumentEliminationPass::SurveyUses(const llvm::Value * V, llvm::DeadArgumentEliminationPass::UseVector &amp; MaybeLiveUses)'/>
<def f='llvm/llvm/lib/Transforms/IPO/DeadArgumentElimination.cpp' l='463' ll='475' type='DeadArgumentEliminationPass::Liveness llvm::DeadArgumentEliminationPass::SurveyUses(const llvm::Value * V, llvm::DeadArgumentEliminationPass::UseVector &amp; MaybeLiveUses)'/>
<use f='llvm/llvm/lib/Transforms/IPO/DeadArgumentElimination.cpp' l='581' u='c' c='_ZN4llvm27DeadArgumentEliminationPass14SurveyFunctionERKNS_8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/IPO/DeadArgumentElimination.cpp' l='639' u='c' c='_ZN4llvm27DeadArgumentEliminationPass14SurveyFunctionERKNS_8FunctionE'/>
<doc f='llvm/llvm/lib/Transforms/IPO/DeadArgumentElimination.cpp' l='457'>/// SurveyUses - This looks at all the uses of the given value
/// Returns the Liveness deduced from the uses of this value.
///
/// Adds all uses that cause the result to be MaybeLive to MaybeLiveRetUses. If
/// the result is Live, MaybeLiveUses might be modified but its content should
/// be ignored (since it might not be complete).</doc>
