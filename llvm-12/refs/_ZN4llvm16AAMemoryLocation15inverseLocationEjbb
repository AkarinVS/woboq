<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3334' u='c' c='_ZNK4llvm16AAMemoryLocation15isKnowStackOnlyEv'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3340' u='c' c='_ZNK4llvm16AAMemoryLocation18isAssumedStackOnlyEv'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3346' u='c' c='_ZNK4llvm16AAMemoryLocation26isKnownInaccessibleMemOnlyEv'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3352' u='c' c='_ZNK4llvm16AAMemoryLocation28isAssumedInaccessibleMemOnlyEv'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3358' u='c' c='_ZNK4llvm16AAMemoryLocation17isKnownArgMemOnlyEv'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3364' u='c' c='_ZNK4llvm16AAMemoryLocation19isAssumedArgMemOnlyEv'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3372' u='c' c='_ZNK4llvm16AAMemoryLocation31isKnownInaccessibleOrArgMemOnlyEv'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3380' u='c' c='_ZNK4llvm16AAMemoryLocation33isAssumedInaccessibleOrArgMemOnlyEv'/>
<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3404' ll='3408' type='static llvm::AAMemoryLocation::MemoryLocationsKind llvm::AAMemoryLocation::inverseLocation(llvm::AAMemoryLocation::MemoryLocationsKind Loc, bool AndLocalMem, bool AndConstMem)'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='3399'>/// Return the inverse of location \p Loc, thus for NO_XXX the return
  /// describes ONLY_XXX. The flags \p AndLocalMem and \p AndConstMem determine
  /// if local (=stack) and constant memory are allowed as well. Most of the
  /// time we do want them to be included, e.g., argmemonly allows accesses via
  /// argument pointers or local or constant memory accesses.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='6423' u='c' c='_ZN12_GLOBAL__N_120AAMemoryLocationImpl22getKnownStateFromValueERN4llvm10AttributorERKNS1_10IRPositionERNS1_15BitIntegerStateIjLj511ELj0EEEb'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='6427' u='c' c='_ZN12_GLOBAL__N_120AAMemoryLocationImpl22getKnownStateFromValueERN4llvm10AttributorERKNS1_10IRPositionERNS1_15BitIntegerStateIjLj511ELj0EEEb'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='6433' u='c' c='_ZN12_GLOBAL__N_120AAMemoryLocationImpl22getKnownStateFromValueERN4llvm10AttributorERKNS1_10IRPositionERNS1_15BitIntegerStateIjLj511ELj0EEEb'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='6771' u='c' c='_ZN12_GLOBAL__N_120AAMemoryLocationImpl27categorizeAccessedLocationsERN4llvm10AttributorERNS1_11InstructionERb'/>
<use f='llvm/llvm/lib/Transforms/IPO/AttributorAttributes.cpp' l='6833' u='c' c='_ZN12_GLOBAL__N_124AAMemoryLocationFunction10updateImplERN4llvm10AttributorE'/>
