<dec f='llvm/lldb/include/lldb/Symbol/ObjectFile.h' l='246' type='lldb_private::AddressClass lldb_private::ObjectFile::GetAddressClass(lldb::addr_t file_addr)'/>
<doc f='llvm/lldb/include/lldb/Symbol/ObjectFile.h' l='236'>/// Get the address type given a file address in an object file.
  ///
  /// Many binary file formats know what kinds This is primarily for ARM
  /// binaries, though it can be applied to any executable file format that
  /// supports different opcode types within the same binary. ARM binaries
  /// support having both ARM and Thumb within the same executable container.
  /// We need to be able to get \return
  ///     The size of an address in bytes for the currently selected
  ///     architecture (and object for archives). Returns zero if no
  ///     architecture or object has been selected.</doc>
<use f='llvm/lldb/source/Core/Address.cpp' l='1004' u='c' c='_ZNK12lldb_private7Address15GetAddressClassEv'/>
<ovr f='llvm/lldb/source/Plugins/ObjectFile/wasm/ObjectFileWasm.h' l='78' c='_ZN12lldb_private4wasm14ObjectFileWasm15GetAddressClassEm'/>
<ovr f='llvm/lldb/source/Plugins/ObjectFile/Breakpad/ObjectFileBreakpad.h' l='72' c='_ZN12lldb_private8breakpad18ObjectFileBreakpad15GetAddressClassEm'/>
<ovr f='llvm/lldb/source/Plugins/ObjectFile/ELF/ObjectFileELF.cpp' l='720' c='_ZN13ObjectFileELF15GetAddressClassEm'/>
<use f='llvm/lldb/source/Plugins/ObjectFile/ELF/ObjectFileELF.cpp' l='729' u='c' c='_ZN13ObjectFileELF15GetAddressClassEm'/>
<use f='llvm/lldb/source/Plugins/ObjectFile/ELF/ObjectFileELF.cpp' l='731' u='c' c='_ZN13ObjectFileELF15GetAddressClassEm'/>
<ovr f='llvm/lldb/source/Plugins/ObjectFile/Mach-O/ObjectFileMachO.cpp' l='1085' c='_ZN15ObjectFileMachO15GetAddressClassEm'/>
<def f='llvm/lldb/source/Symbol/ObjectFile.cpp' l='292' ll='441' type='lldb_private::AddressClass lldb_private::ObjectFile::GetAddressClass(lldb::addr_t file_addr)'/>
