<dec f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='322' type='llvm::IRSimilarity::IRInstructionData * llvm::IRSimilarity::IRInstructionMapper::allocateIRInstructionData(llvm::Instruction &amp; I, bool Legality, llvm::IRSimilarity::IRInstructionDataList &amp; IDL)'/>
<use f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='203' u='c' c='_ZN4llvm12IRSimilarity19IRInstructionMapper18mapToLegalUnsignedERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb0ELb0EvEELb0EL14991152'/>
<def f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='232' ll='236' type='llvm::IRSimilarity::IRInstructionData * llvm::IRSimilarity::IRInstructionMapper::allocateIRInstructionData(llvm::Instruction &amp; I, bool Legality, llvm::IRSimilarity::IRInstructionDataList &amp; IDL)'/>
<use f='llvm/llvm/lib/Analysis/IRSimilarityIdentifier.cpp' l='257' u='c' c='_ZN4llvm12IRSimilarity19IRInstructionMapper20mapToIllegalUnsignedERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb0ELb0EvEELb010489967'/>
<doc f='llvm/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h' l='314'>/// Get an allocated IRInstructionData struct using the InstDataAllocator.
  ///
  /// \param I - The Instruction to wrap with IRInstructionData.
  /// \param Legality - A boolean value that is true if the instruction is to
  /// be considered for similarity, and false if not.
  /// \param IDL - The InstructionDataList that the IRInstructionData is
  /// inserted into.
  /// \returns An allocated IRInstructionData struct.</doc>
