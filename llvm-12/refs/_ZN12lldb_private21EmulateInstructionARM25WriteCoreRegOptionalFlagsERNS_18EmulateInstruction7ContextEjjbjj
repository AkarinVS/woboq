<dec f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.h' l='199' type='bool lldb_private::EmulateInstructionARM::WriteCoreRegOptionalFlags(lldb_private::EmulateInstruction::Context &amp; context, const uint32_t result, const uint32_t Rd, bool setflags, const uint32_t carry = ~0U, const uint32_t overflow = ~0U)'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.h' l='207' u='c' c='_ZN12lldb_private21EmulateInstructionARM12WriteCoreRegERNS_18EmulateInstruction7ContextEjj'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='1349' u='c' c='_ZN12lldb_private21EmulateInstructionARM14EmulateMOVRdRmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='1457' u='c' c='_ZN12lldb_private21EmulateInstructionARM15EmulateMOVRdImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='1651' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateMVNImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='1732' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateMVNRegEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='1930' u='c' c='_ZN12lldb_private21EmulateInstructionARM15EmulateADDSPImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='2452' u='c' c='_ZN12lldb_private21EmulateInstructionARM15EmulateSUBSPImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='3127' u='c' c='_ZN12lldb_private21EmulateInstructionARM18EmulateADDImmThumbEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='3192' u='c' c='_ZN12lldb_private21EmulateInstructionARM16EmulateADDImmARMEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='3282' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateADDRegEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='3831' u='c' c='_ZN12lldb_private21EmulateInstructionARM15EmulateShiftImmEjNS0_11ARMEncodingENS_15ARM_ShifterTypeE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='3902' u='c' c='_ZN12lldb_private21EmulateInstructionARM15EmulateShiftRegEjNS0_11ARMEncodingENS_15ARM_ShifterTypeE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='5860' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateADCImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='5947' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateADCRegEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='6085' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateANDImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='6174' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateANDRegEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='6249' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateBICImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='6338' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateBICRegEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='8894' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateEORImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='8986' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateEORRegEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='9061' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateORRImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='9151' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateORRRegEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='9225' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateRSBImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='9303' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateRSBRegEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='9362' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateRSCImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='9431' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateRSCRegEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='9499' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateSBCImmEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='9585' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateSBCRegEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='9675' u='c' c='_ZN12lldb_private21EmulateInstructionARM18EmulateSUBImmThumbEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='9749' u='c' c='_ZN12lldb_private21EmulateInstructionARM16EmulateSUBImmARMEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='10103' u='c' c='_ZN12lldb_private21EmulateInstructionARM15EmulateSUBSPRegEjNS0_11ARMEncodingE'/>
<use f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='10330' u='c' c='_ZN12lldb_private21EmulateInstructionARM13EmulateSUBRegEjNS0_11ARMEncodingE'/>
<def f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='14252' ll='14280' type='bool lldb_private::EmulateInstructionARM::WriteCoreRegOptionalFlags(lldb_private::EmulateInstruction::Context &amp; context, const uint32_t result, const uint32_t Rd, bool setflags, const uint32_t carry = ~0U, const uint32_t overflow = ~0U)'/>
<doc f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.cpp' l='14234'>// Write the result to the ARM core register Rd, and optionally update the
// condition flags based on the result.
//
// This helper method tries to encapsulate the following pseudocode from the
// ARM Architecture Reference Manual:
//
// if d == 15 then         // Can only occur for encoding A1
//     ALUWritePC(result); // setflags is always FALSE here
// else
//     R[d] = result;
//     if setflags then
//         APSR.N = result&lt;31&gt;;
//         APSR.Z = IsZeroBit(result);
//         APSR.C = carry;
//         // APSR.V unchanged
//
// In the above case, the API client does not pass in the overflow arg, which
// defaults to ~0u.</doc>
<doc f='llvm/lldb/source/Plugins/Instruction/ARM/EmulateInstructionARM.h' l='195'>// See A8.6.96 MOV (immediate) Operation.
  // Default arguments are specified for carry and overflow parameters, which
  // means
  // not to update the respective flags even if setflags is true.</doc>
