<dec f='llvm/llvm/include/llvm/Analysis/BranchProbabilityInfo.h' l='258' type='void llvm::BranchProbabilityInfo::SccInfo::getSccEnterBlocks(int SccNum, SmallVectorImpl&lt;llvm::BasicBlock *&gt; &amp; Enters) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/BranchProbabilityInfo.h' l='255'>/// Fills in \p Enters vector with all such blocks that don&apos;t belong to
    /// SCC with \p SccNum ID but there is an edge to a block belonging to the
    /// SCC.</doc>
<def f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='174' ll='184' type='void llvm::BranchProbabilityInfo::SccInfo::getSccEnterBlocks(int SccNum, SmallVectorImpl&lt;llvm::BasicBlock *&gt; &amp; Enters) const'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='288' u='c' c='_ZNK4llvm21BranchProbabilityInfo18getLoopEnterBlocksERKNS0_9LoopBlockERNS_15SmallVectorImplIPNS_10BasicBlockEEE'/>
