<def f='llvm/clang/include/clang/Sema/Overload.h' l='640' type='bool clang::ImplicitConversionSequence::isInitialized() const'/>
<use f='llvm/clang/include/clang/Sema/Overload.h' l='880' u='c' c='_ZNK5clang17OverloadCandidate22hasAmbiguousConversionEv'/>
<doc f='llvm/clang/include/clang/Sema/Overload.h' l='637'>/// Determines whether this conversion sequence has been
    /// initialized.  Most operations should never need to query
    /// uninitialized conversions and should assert as above.</doc>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6448' u='c' c='_ZN5clang4Sema20AddOverloadCandidateEPNS_12FunctionDeclENS_14DeclAccessPairEN4llvm8ArrayRefIPNS_4ExprEEERNS_20OverloadCandidateSetEbbbbNS_8CallExpr11A15764687'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6959' u='c' c='_ZN5clang4Sema18AddMethodCandidateEPNS_13CXXMethodDeclENS_14DeclAccessPairEPNS_13CXXRecordDeclENS_8QualTypeENS_4Expr14ClassificationEN4llvm8ArrayRefIP1005297'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='11522' u='c' c='_ZL26CompleteNonViableCandidateRN5clang4SemaEPNS_17OverloadCandidateEN4llvm8ArrayRefIPNS_4ExprEEENS_20OverloadCandidateSet16CandidateSetKindE'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='11569' u='c' c='_ZL26CompleteNonViableCandidateRN5clang4SemaEPNS_17OverloadCandidateEN4llvm8ArrayRefIPNS_4ExprEEENS_20OverloadCandidateSet16CandidateSetKindE'/>
