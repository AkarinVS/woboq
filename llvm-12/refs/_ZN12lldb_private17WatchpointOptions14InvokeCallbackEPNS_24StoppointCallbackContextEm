<dec f='llvm/lldb/include/lldb/Breakpoint/WatchpointOptions.h' l='116' type='bool lldb_private::WatchpointOptions::InvokeCallback(lldb_private::StoppointCallbackContext * context, lldb::user_id_t watch_id)'/>
<doc f='llvm/lldb/include/lldb/Breakpoint/WatchpointOptions.h' l='98'>// The rest of these functions are meant to be used only within the
  // watchpoint handling mechanism.

  /// Use this function to invoke the callback for a specific stop.
  ///
  /// \param[in] context
  ///    The context in which the callback is to be invoked.  This includes the
  ///    stop event, the
  ///    execution context of the stop (since you might hit the same watchpoint
  ///    on multiple threads) and
  ///    whether we are currently executing synchronous or asynchronous
  ///    callbacks.
  ///
  /// \param[in] watch_id
  ///    The watchpoint ID that owns this option set.
  ///
  /// \return
  ///     The callback return value.</doc>
<use f='llvm/lldb/source/Breakpoint/Watchpoint.cpp' l='280' u='c' c='_ZN12lldb_private10Watchpoint14InvokeCallbackEPNS_24StoppointCallbackContextE'/>
<def f='llvm/lldb/source/Breakpoint/WatchpointOptions.cpp' l='91' ll='99' type='bool lldb_private::WatchpointOptions::InvokeCallback(lldb_private::StoppointCallbackContext * context, lldb::user_id_t watch_id)'/>
