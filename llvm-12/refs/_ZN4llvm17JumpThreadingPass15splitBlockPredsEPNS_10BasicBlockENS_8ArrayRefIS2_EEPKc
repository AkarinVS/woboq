<dec f='llvm/llvm/include/llvm/Transforms/Scalar/JumpThreading.h' l='170' type='llvm::BasicBlock * llvm::JumpThreadingPass::splitBlockPreds(llvm::BasicBlock * BB, ArrayRef&lt;llvm::BasicBlock *&gt; Preds, const char * Suffix)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='1473' u='c' c='_ZN4llvm17JumpThreadingPass30simplifyPartiallyRedundantLoadEPNS_8LoadInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2368' u='c' c='_ZN4llvm17JumpThreadingPass10threadEdgeEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EES2_'/>
<def f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2435' ll='2474' type='llvm::BasicBlock * llvm::JumpThreadingPass::splitBlockPreds(llvm::BasicBlock * BB, ArrayRef&lt;llvm::BasicBlock *&gt; Preds, const char * Suffix)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2623' u='c' c='_ZN4llvm17JumpThreadingPass32duplicateCondBranchOnPHIIntoPredEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EE'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2432'>/// Create a new basic block that will be the predecessor of BB and successor of
/// all blocks in Preds. When profile data is available, update the frequency of
/// this new block.</doc>
