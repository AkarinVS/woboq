<dec f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h' l='91' type='llvm::SDValue llvm::AMDGPUTargetLowering::performCtlz_CttzCombine(const llvm::SDLoc &amp; SL, llvm::SDValue Cond, llvm::SDValue LHS, llvm::SDValue RHS, llvm::TargetLowering::DAGCombinerInfo &amp; DCI) const'/>
<def f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp' l='3439' ll='3472' type='llvm::SDValue llvm::AMDGPUTargetLowering::performCtlz_CttzCombine(const llvm::SDLoc &amp; SL, llvm::SDValue Cond, llvm::SDValue LHS, llvm::SDValue RHS, llvm::TargetLowering::DAGCombinerInfo &amp; DCI) const'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp' l='3599' u='c' c='_ZNK4llvm20AMDGPUTargetLowering20performSelectCombineEPNS_6SDNodeERNS_14TargetLowering15DAGCombinerInfoE'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp' l='3432'>// The native instructions return -1 on 0 input. Optimize out a select that
// produces -1 on 0.
//
// TODO: If zero is not undef, we could also do this if the output is compared
// against the bitwidth.
//
// TODO: Should probably combine against FFBH_U32 instead of ctlz directly.</doc>
