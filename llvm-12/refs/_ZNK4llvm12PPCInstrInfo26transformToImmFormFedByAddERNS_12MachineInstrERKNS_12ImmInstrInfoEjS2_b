<dec f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.h' l='217' type='bool llvm::PPCInstrInfo::transformToImmFormFedByAdd(llvm::MachineInstr &amp; MI, const llvm::ImmInstrInfo &amp; III, unsigned int ConstantOpNo, llvm::MachineInstr &amp; DefMI, bool KillDefMI) const'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.h' l='215'>// If the inst is x-form and has imm-form and one of its operand is produced
  // by an add-immediate, try to transform it when possible.</doc>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='3666' u='c' c='_ZNK4llvm12PPCInstrInfo22convertToImmediateFormERNS_12MachineInstrEPPS1_'/>
<def f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='4779' ll='4889' type='bool llvm::PPCInstrInfo::transformToImmFormFedByAdd(llvm::MachineInstr &amp; MI, const llvm::ImmInstrInfo &amp; III, unsigned int OpNoForForwarding, llvm::MachineInstr &amp; DefMI, bool KillDefMI) const'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='4775'>// If an X-Form instruction is fed by an add-immediate and one of its operands
// is the literal zero, attempt to forward the source of the add-immediate to
// the corresponding D-Form instruction with the displacement coming from
// the immediate being added.</doc>
