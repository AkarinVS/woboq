<dec f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationPlanner.h' l='302' type='void llvm::LoopVectorizationPlanner::buildVPlans(llvm::ElementCount MinVF, llvm::ElementCount MaxVF)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7607' u='c' c='_ZN4llvm24LoopVectorizationPlanner21planInVPlanNativePathENS_12ElementCountE'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8149' ll='8157' type='void llvm::LoopVectorizationPlanner::buildVPlans(llvm::ElementCount MinVF, llvm::ElementCount MaxVF)'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='8144'>/// Build VPlans for the full range of feasible VF&apos;s = {\p MinVF, 2 * \p MinVF,
/// 4 * \p MinVF, ..., \p MaxVF} by repeatedly building a VPlan for a sub-range
/// of VF&apos;s starting at a given VF and extending it as much as possible. Each
/// vectorization decision can potentially shorten this sub-range during
/// buildVPlan().</doc>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationPlanner.h' l='299'>/// Build VPlans for power-of-2 VF&apos;s between \p MinVF and \p MaxVF inclusive,
  /// according to the information gathered by Legal when it checked if it is
  /// legal to vectorize the loop.</doc>
