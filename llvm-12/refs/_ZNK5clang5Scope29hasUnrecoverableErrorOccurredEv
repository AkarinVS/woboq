<def f='llvm/clang/include/clang/Sema/Scope.h' l='345' ll='347' type='bool clang::Scope::hasUnrecoverableErrorOccurred() const'/>
<doc f='llvm/clang/include/clang/Sema/Scope.h' l='341'>/// Determine whether any unrecoverable errors have occurred within this
  /// scope. Note that this may return false even if the scope contains invalid
  /// declarations or statements, if the errors for those invalid constructs
  /// were suppressed because some prior invalid construct was referenced.</doc>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='1936' u='c' c='_ZN5clang4Sema13ActOnPopScopeENS_14SourceLocationEPNS_5ScopeE'/>
<use f='llvm/clang/lib/Sema/SemaDeclObjC.cpp' l='5316' u='c' c='_ZN5clang4Sema35DiagnoseUnusedBackingIvarInAccessorEPNS_5ScopeEPKNS_22ObjCImplementationDeclE'/>
