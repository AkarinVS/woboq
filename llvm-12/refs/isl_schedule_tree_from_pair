<dec f='llvm/polly/lib/External/isl/isl_schedule_tree.h' l='108' type='isl_schedule_tree * isl_schedule_tree_from_pair(enum isl_schedule_node_type type, isl_schedule_tree * tree1, isl_schedule_tree * tree2)'/>
<use f='llvm/polly/lib/External/isl/isl_schedule.c' l='640' u='c' c='isl_schedule_pair'/>
<def f='llvm/polly/lib/External/isl/isl_schedule_tree.c' l='550' ll='583' type='isl_schedule_tree * isl_schedule_tree_from_pair(enum isl_schedule_node_type type, isl_schedule_tree * tree1, isl_schedule_tree * tree2)'/>
<use f='llvm/polly/lib/External/isl/isl_schedule_tree.c' l='594' u='c' c='isl_schedule_tree_sequence_pair'/>
<use f='llvm/polly/lib/External/isl/isl_schedule_tree.c' l='607' u='c' c='isl_schedule_tree_set_pair'/>
<doc f='llvm/polly/lib/External/isl/isl_schedule_tree.c' l='545'>/* Construct a tree with a root node of type &quot;type&quot; and as children
 * &quot;tree1&quot; and &quot;tree2&quot;.
 * If the root of one (or both) of the input trees is itself of type &quot;type&quot;,
 * then the tree is replaced by its children.
 */</doc>
