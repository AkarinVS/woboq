<dec f='llvm/llvm/include/llvm/Transforms/Utils.h' l='63' type='llvm::FunctionPass * llvm::createEntryExitInstrumenterPass()'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils.h' l='57'>//===----------------------------------------------------------------------===//
//
// EntryExitInstrumenter pass - Instrument function entry/exit with calls to
// mcount(), @__cyg_profile_func_{enter,exit} and the like. There are two
// variants, intended to run pre- and post-inlining, respectively.
//</doc>
<use f='llvm/llvm/include/llvm/LinkAllPasses.h' l='181' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='303' u='c' c='_ZN4llvm18PassManagerBuilder27populateFunctionPassManagerERNS_6legacy19FunctionPassManagerE'/>
<def f='llvm/llvm/lib/Transforms/Utils/EntryExitInstrumenter.cpp' l='154' ll='156' type='llvm::FunctionPass * llvm::createEntryExitInstrumenterPass()'/>
