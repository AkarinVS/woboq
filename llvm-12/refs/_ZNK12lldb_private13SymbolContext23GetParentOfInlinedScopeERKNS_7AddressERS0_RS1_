<dec f='llvm/lldb/include/lldb/Symbol/SymbolContext.h' l='312' type='bool lldb_private::SymbolContext::GetParentOfInlinedScope(const lldb_private::Address &amp; curr_frame_pc, lldb_private::SymbolContext &amp; next_frame_sc, lldb_private::Address &amp; inlined_frame_addr) const'/>
<doc f='llvm/lldb/include/lldb/Symbol/SymbolContext.h' l='294'>/// Find the block containing the inlined block that contains this block.
  ///
  /// For instance, if the symbol context contains an inlined block, it will
  /// return the inlined function name.
  ///
  /// \param[in] curr_frame_pc
  ///    The address within the block of this object.
  ///
  /// \param[out] next_frame_sc
  ///     A new symbol context that does what the title says it does.
  ///
  /// \param[out] inlined_frame_addr
  ///     This is what you should report as the PC in \a next_frame_sc.
  ///
  /// \return
  ///     \b true if this SymbolContext specifies a block contained in an
  ///     inlined block.  If this returns \b true, \a next_frame_sc and
  ///     \a inlined_frame_addr will be filled in correctly.</doc>
<use f='llvm/lldb/source/API/SBSymbolContext.cpp' l='226' u='c' c='_ZNK4lldb15SBSymbolContext23GetParentOfInlinedScopeERKNS_9SBAddressERS1_'/>
<use f='llvm/lldb/source/Symbol/SymbolContext.cpp' l='116' u='c' c='_ZNK12lldb_private13SymbolContext15DumpStopContextEPNS_6StreamEPNS_21ExecutionContextScopeERKNS_7AddressEbbbbbb'/>
<def f='llvm/lldb/source/Symbol/SymbolContext.cpp' l='439' ll='522' type='bool lldb_private::SymbolContext::GetParentOfInlinedScope(const lldb_private::Address &amp; curr_frame_pc, lldb_private::SymbolContext &amp; next_frame_sc, lldb_private::Address &amp; next_frame_pc) const'/>
<use f='llvm/lldb/source/Target/StackFrameList.cpp' l='550' u='c' c='_ZN12lldb_private14StackFrameList13GetFramesUpToEj'/>
