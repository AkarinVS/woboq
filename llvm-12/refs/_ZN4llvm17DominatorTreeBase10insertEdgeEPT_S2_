<def f='llvm/llvm/include/llvm/Support/GenericDomTree.h' l='585' ll='591' type='void llvm::DominatorTreeBase::insertEdge(NodeT * From, NodeT * To)'/>
<doc f='llvm/llvm/include/llvm/Support/GenericDomTree.h' l='576'>/// Inform the dominator tree about a CFG edge insertion and update the tree.
  ///
  /// This function has to be called just before or just after making the update
  /// on the actual CFG. There cannot be any other updates that the dominator
  /// tree doesn&apos;t know about.
  ///
  /// Note that for postdominators it automatically takes care of inserting
  /// a reverse edge internally (so there&apos;s no need to swap the parameters).
  ///</doc>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='332' u='c' c='_ZN4llvm14DomTreeUpdater10insertEdgeEPNS_10BasicBlockES2_'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='334' u='c' c='_ZN4llvm14DomTreeUpdater10insertEdgeEPNS_10BasicBlockES2_'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='353' u='c' c='_ZN4llvm14DomTreeUpdater17insertEdgeRelaxedEPNS_10BasicBlockES2_'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='355' u='c' c='_ZN4llvm14DomTreeUpdater17insertEdgeRelaxedEPNS_10BasicBlockES2_'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInsertSkips.cpp' l='247' u='c' c='_ZN12_GLOBAL__N_113SIInsertSkips10skipIfDeadERN4llvm17MachineBasicBlockENS1_26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEENS1_8DebugLocE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInsertSkips.cpp' l='391' u='c' c='_ZN12_GLOBAL__N_113SIInsertSkips9earlyTermERN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp' l='513' u='c' c='_ZL21unswitchTrivialBranchRN4llvm4LoopERNS_10BranchInstERNS_13DominatorTreeERNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_16MemorySSAUpdaterE'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='730' u='c' c='_ZN34DominatorTree_InsertReachable_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='732' u='c' c='_ZN34DominatorTree_InsertReachable_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='757' u='c' c='_ZN35DominatorTree_InsertReachable2_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='759' u='c' c='_ZN35DominatorTree_InsertReachable2_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='784' u='c' c='_ZN36DominatorTree_InsertUnreachable_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='786' u='c' c='_ZN36DominatorTree_InsertUnreachable_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='806' u='c' c='_ZN40DominatorTree_InsertFromUnreachable_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='835' u='c' c='_ZN30DominatorTree_InsertMixed_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='837' u='c' c='_ZN30DominatorTree_InsertMixed_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='865' u='c' c='_ZN31DominatorTree_InsertPermut_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='867' u='c' c='_ZN31DominatorTree_InsertPermut_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='948' u='c' c='_ZN31DominatorTree_InsertDelete_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='949' u='c' c='_ZN31DominatorTree_InsertDelete_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='986' u='c' c='_ZN41DominatorTree_InsertDeleteExhaustive_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='987' u='c' c='_ZN41DominatorTree_InsertDeleteExhaustive_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='1018' u='c' c='_ZN40DominatorTree_InsertIntoIrreducible_Test8TestBodyEv'/>
