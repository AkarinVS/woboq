<dec f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='727' type='void llvm::LazyCallGraph::RefSCC::switchOutgoingEdgeToRef(llvm::LazyCallGraph::Node &amp; SourceN, llvm::LazyCallGraph::Node &amp; TargetN)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='723'>/// Make an existing outgoing call edge into a ref edge.
    ///
    /// This is trivial as there are no cyclic impacts and there remains
    /// a reference edge.</doc>
<use f='llvm/llvm/lib/Analysis/CGSCCPassManager.cpp' l='1092' u='c' c='_ZL33updateCGAndAnalysisManagerForPassRN4llvm13LazyCallGraphERNS0_3SCCERNS0_4NodeERNS_15AnalysisManagerIS2_JS1_EEERNS_17CGSCCUpdateResultERNS6_INS_8FunctionEJEEEb'/>
<def f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='965' ll='985' type='void llvm::LazyCallGraph::RefSCC::switchOutgoingEdgeToRef(llvm::LazyCallGraph::Node &amp; SourceN, llvm::LazyCallGraph::Node &amp; TargetN)'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='669' u='c' c='_ZN12_GLOBAL__N_143LazyCallGraphTest_OutgoingEdgeMutation_Test8TestBodyEv'/>
