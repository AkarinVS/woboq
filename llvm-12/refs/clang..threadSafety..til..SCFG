<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h' l='1548' c='_ZNK5clang12threadSafety3til10BasicBlock3cfgEv'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h' l='1549' c='_ZN5clang12threadSafety3til10BasicBlock3cfgEv'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h' l='1644'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h' l='1658'/>
<inh f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h' l='277' c='clang::threadSafety::til::SExpr'/>
<def f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h' l='1688' ll='1783'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h' l='1705' c='_ZN5clang12threadSafety3til4SCFGC1ERKS2_ONS1_11SimpleArrayIPNS1_10BasicBlockEEE'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h' l='1768' c='_ZNK5clang12threadSafety3til4SCFG7compareEPKS2_RT_'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyOps.def' l='43' c='_ZN5clang12threadSafety3til9Traversal14traverseByCaseEPNS1_5SExprENT0_5R_CtxE'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyOps.def' l='43' c='_ZN5clang12threadSafety3til9Traversal12traverseSCFGEPNS1_4SCFGENT0_5R_CtxE'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h' l='246' c='_ZN5clang12threadSafety3til12VisitReducer10reduceSCFGERNS1_4SCFGENS1_16VisitReducerBase9ContainerIPNS1_10BasicBlockEEE'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h' l='285' c='_ZN5clang12threadSafety3til12VisitReducer8enterCFGERNS1_4SCFGE'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h' l='286' c='_ZN5clang12threadSafety3til12VisitReducer7exitCFGERNS1_4SCFGE'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyOps.def' l='43' c='_ZN5clang12threadSafety3til10Comparator13compareByCaseEPKNS1_5SExprES5_'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyOps.def' l='43' c='_ZN5clang12threadSafety3til10Comparator13compareByCaseEPKNS1_5SExprES5_'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyOps.def' l='43' c='_ZN5clang12threadSafety3til13PrettyPrinter10printSExprEPKNS1_5SExprERT0_jb'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h' l='815' c='_ZN5clang12threadSafety3til13PrettyPrinter9printSCFGEPKNS1_4SCFGERT0_'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h' l='380' c='_ZN5clang12threadSafety12SExprBuilder8buildCFGERNS0_9CFGWalkerE'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h' l='388' c='_ZNK5clang12threadSafety12SExprBuilder6getCFGEv'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h' l='389' c='_ZN5clang12threadSafety12SExprBuilder6getCFGEv'/>
<use f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h' l='492'/>
<size>72</size>
<doc f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h' l='1685'>/// An SCFG is a control-flow graph.  It consists of a set of basic blocks,
/// each of which terminates in a branch to another basic block.  There is one
/// entry point, and one exit point.</doc>
<fun r='_ZN5clang12threadSafety3til4SCFGC1ENS1_12MemRegionRefEj'/>
<fun r='_ZN5clang12threadSafety3til4SCFGC1ERKS2_ONS1_11SimpleArrayIPNS1_10BasicBlockEEE'/>
<fun r='_ZN5clang12threadSafety3til4SCFG7classofEPKNS1_5SExprE'/>
<fun r='_ZNK5clang12threadSafety3til4SCFG5validEv'/>
<fun r='_ZNK5clang12threadSafety3til4SCFG6normalEv'/>
<fun r='_ZN5clang12threadSafety3til4SCFG5beginEv'/>
<fun r='_ZN5clang12threadSafety3til4SCFG3endEv'/>
<fun r='_ZNK5clang12threadSafety3til4SCFG5beginEv'/>
<fun r='_ZNK5clang12threadSafety3til4SCFG3endEv'/>
<fun r='_ZNK5clang12threadSafety3til4SCFG6cbeginEv'/>
<fun r='_ZNK5clang12threadSafety3til4SCFG4cendEv'/>
<fun r='_ZNK5clang12threadSafety3til4SCFG5entryEv'/>
<fun r='_ZN5clang12threadSafety3til4SCFG5entryEv'/>
<fun r='_ZNK5clang12threadSafety3til4SCFG4exitEv'/>
<fun r='_ZN5clang12threadSafety3til4SCFG4exitEv'/>
<fun r='_ZNK5clang12threadSafety3til4SCFG9numBlocksEv'/>
<fun r='_ZN5clang12threadSafety3til4SCFG15numInstructionsEv'/>
<fun r='_ZN5clang12threadSafety3til4SCFG3addEPNS1_10BasicBlockE'/>
<fun r='_ZN5clang12threadSafety3til4SCFG8setEntryEPNS1_10BasicBlockE'/>
<fun r='_ZN5clang12threadSafety3til4SCFG7setExitEPNS1_10BasicBlockE'/>
<fun r='_ZN5clang12threadSafety3til4SCFG17computeNormalFormEv'/>
<fun r='_ZN5clang12threadSafety3til4SCFG8traverseERT_NS3_5R_CtxE'/>
<fun r='_ZNK5clang12threadSafety3til4SCFG7compareEPKS2_RT_'/>
<fun r='_ZN5clang12threadSafety3til4SCFG14renumberInstrsEv'/>
<mbr r='clang::threadSafety::til::SCFG::Arena' o='128' t='clang::threadSafety::til::MemRegionRef'/>
<mbr r='clang::threadSafety::til::SCFG::Blocks' o='192' t='clang::threadSafety::til::SCFG::BlockArray'/>
<mbr r='clang::threadSafety::til::SCFG::Entry' o='384' t='clang::threadSafety::til::BasicBlock *'/>
<mbr r='clang::threadSafety::til::SCFG::Exit' o='448' t='clang::threadSafety::til::BasicBlock *'/>
<mbr r='clang::threadSafety::til::SCFG::NumInstructions' o='512' t='unsigned int'/>
<mbr r='clang::threadSafety::til::SCFG::Normal' o='544' t='bool'/>
<use f='llvm/clang/lib/Analysis/ThreadSafetyCommon.cpp' l='78' c='_ZN5clang12threadSafety12SExprBuilder8buildCFGERNS0_9CFGWalkerE'/>
<use f='llvm/clang/lib/Analysis/ThreadSafetyCommon.cpp' l='813' c='_ZN5clang12threadSafety12SExprBuilder8enterCFGEPNS_3CFGEPKNS_9NamedDeclEPKNS_8CFGBlockE'/>
<size>72</size>
