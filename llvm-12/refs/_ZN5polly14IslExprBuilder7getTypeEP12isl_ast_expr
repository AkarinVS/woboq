<dec f='llvm/polly/include/polly/CodeGen/IslExprBuilder.h' l='149' type='llvm::IntegerType * polly::IslExprBuilder::getType(isl_ast_expr * Expr)'/>
<doc f='llvm/polly/include/polly/CodeGen/IslExprBuilder.h' l='142'>/// Return the type with which this expression should be computed.
  ///
  /// The type needs to be large enough to hold all possible input and all
  /// possible output values.
  ///
  /// @param Expr The expression for which to find the type.
  /// @return The type with which the expression should be computed.</doc>
<use f='llvm/polly/lib/CodeGen/IslExprBuilder.cpp' l='178' u='c' c='_ZN5polly14IslExprBuilder13createOpUnaryEP12isl_ast_expr'/>
<use f='llvm/polly/lib/CodeGen/IslExprBuilder.cpp' l='388' u='c' c='_ZN5polly14IslExprBuilder11createOpBinEP12isl_ast_expr'/>
<use f='llvm/polly/lib/CodeGen/IslExprBuilder.cpp' l='461' u='c' c='_ZN5polly14IslExprBuilder14createOpSelectEP12isl_ast_expr'/>
<use f='llvm/polly/lib/CodeGen/IslExprBuilder.cpp' l='727' u='c' c='_ZN5polly14IslExprBuilder8createIdEP12isl_ast_expr'/>
<def f='llvm/polly/lib/CodeGen/IslExprBuilder.cpp' l='740' ll='746' type='llvm::IntegerType * polly::IslExprBuilder::getType(isl_ast_expr * Expr)'/>
<use f='llvm/polly/lib/CodeGen/IslExprBuilder.cpp' l='761' u='c' c='_ZN5polly14IslExprBuilder9createIntEP12isl_ast_expr'/>
<use f='llvm/polly/lib/CodeGen/IslNodeBuilder.cpp' l='444' u='c' c='_ZN14IslNodeBuilder15createForVectorEP12isl_ast_nodei'/>
<use f='llvm/polly/lib/CodeGen/IslNodeBuilder.cpp' l='541' u='c' c='_ZN14IslNodeBuilder19createForSequentialEN3isl12noexceptions8ast_nodeEb'/>
<use f='llvm/polly/lib/CodeGen/IslNodeBuilder.cpp' l='651' u='c' c='_ZN14IslNodeBuilder17createForParallelEP12isl_ast_node'/>
