<dec f='llvm/clang/include/clang/AST/ASTStructuralEquivalence.h' l='98' type='bool clang::StructuralEquivalenceContext::IsEquivalent(clang::QualType T1, clang::QualType T2)'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='9333' u='c' c='_ZN5clang11ASTImporter24IsStructurallyEquivalentENS_8QualTypeES1_b'/>
<doc f='llvm/clang/include/clang/AST/ASTStructuralEquivalence.h' l='93'>/// Determine whether the two types are structurally equivalent.
  /// Implementation functions (all static functions in
  /// ASTStructuralEquivalence.cpp) must never call this function because that
  /// will wreak havoc the internal state (\c DeclsToCheck and
  /// \c VisitedDecls members) and can cause faulty equivalent results.</doc>
<def f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='2012' ll='2019' type='bool clang::StructuralEquivalenceContext::IsEquivalent(clang::QualType T1, clang::QualType T2)'/>
