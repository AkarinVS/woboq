<dec f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1710' type='void llvm::MachineInstr::addMemOperand(llvm::MachineFunction &amp; MF, llvm::MachineMemOperand * MO)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1707'>/// Add a MachineMemOperand to the machine instruction.
  /// This function should be used only occasionally. The setMemRefs function
  /// is the primary method for setting up a MachineInstr&apos;s MemRefs list.</doc>
<use f='llvm/llvm/include/llvm/CodeGen/MachineInstrBuilder.h' l='204' u='c' c='_ZNK4llvm19MachineInstrBuilder13addMemOperandEPNS_17MachineMemOperandE'/>
<use f='llvm/llvm/lib/CodeGen/FixupStatepointCallerSaved.cpp' l='539' u='c' c='_ZN12_GLOBAL__N_115StatepointState17rewriteStatepointEv'/>
<def f='llvm/llvm/lib/CodeGen/MachineInstr.cpp' l='382' ll='388' type='void llvm::MachineInstr::addMemOperand(llvm::MachineFunction &amp; MF, llvm::MachineMemOperand * MO)'/>
<use f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='628' u='c' c='_ZNK4llvm15TargetInstrInfo17foldMemoryOperandERNS_12MachineInstrENS_8ArrayRefIjEEiPNS_13LiveIntervalsEPNS_10VirtRegMapE'/>
<use f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='697' u='c' c='_ZNK4llvm15TargetInstrInfo17foldMemoryOperandERNS_12MachineInstrENS_8ArrayRefIjEES2_PNS_13LiveIntervalsE'/>
<use f='llvm/llvm/lib/CodeGen/TargetLoweringBase.cpp' l='1222' u='c' c='_ZNK4llvm18TargetLoweringBase14emitPatchPointERNS_12MachineInstrEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp' l='4485' u='c' c='_ZNK4llvm19AMDGPULegalizerInfo19legalizeSBufferLoadERNS_15LegalizerHelperERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonSplitDouble.cpp' l='691' u='c' c='_ZN12_GLOBAL__N_122HexagonSplitDoubleRegs11splitMemRefEPN4llvm12MachineInstrERKSt3mapIjSt4pairIjjESt4lessIjESaIS5_IKjS6_EEE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonSplitDouble.cpp' l='694' u='c' c='_ZN12_GLOBAL__N_122HexagonSplitDoubleRegs11splitMemRefEPN4llvm12MachineInstrERKSt3mapIjSt4pairIjjESt4lessIjESaIS5_IKjS6_EEE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonStoreWidening.cpp' l='438' u='c' c='_ZN12_GLOBAL__N_120HexagonStoreWidening16createWideStoresERSt6vectorIPN4llvm12MachineInstrESaIS4_EES7_j'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonStoreWidening.cpp' l='461' u='c' c='_ZN12_GLOBAL__N_120HexagonStoreWidening16createWideStoresERSt6vectorIPN4llvm12MachineInstrESaIS4_EES7_j'/>
<use f='llvm/llvm/lib/Target/Mips/MipsInstructionSelector.cpp' l='682' u='c' c='_ZN12_GLOBAL__N_123MipsInstructionSelector6selectERN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='1941' u='c' c='_ZNK4llvm12PPCInstrInfo24storeRegToStackSlotNoUpdERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEEjbiPKNS_19TargetRegi15965346'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp' l='2001' u='c' c='_ZNK4llvm12PPCInstrInfo25loadRegFromStackSlotNoUpdERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEEjiPKNS_19TargetRegi15789739'/>
<use f='llvm/llvm/lib/Target/X86/X86FastISel.cpp' l='482' u='c' c='_ZN12_GLOBAL__N_111X86FastISel15X86FastEmitLoadEN4llvm3MVTERNS1_14X86AddressModeEPNS1_17MachineMemOperandERjj'/>
<use f='llvm/llvm/lib/Target/X86/X86FastISel.cpp' l='659' u='c' c='_ZN12_GLOBAL__N_111X86FastISel16X86FastEmitStoreEN4llvm3EVTEjbRNS1_14X86AddressModeEPNS1_17MachineMemOperandEb'/>
<use f='llvm/llvm/lib/Target/X86/X86FastISel.cpp' l='696' u='c' c='_ZN12_GLOBAL__N_111X86FastISel16X86FastEmitStoreEN4llvm3EVTEPKNS1_5ValueERNS1_14X86AddressModeEPNS1_17MachineMemOperandEb'/>
<use f='llvm/llvm/lib/Target/X86/X86FastISel.cpp' l='3830' u='c' c='_ZN12_GLOBAL__N_111X86FastISel16X86MaterializeFPEPKN4llvm10ConstantFPENS1_3MVTE'/>
<use f='llvm/llvm/lib/Target/X86/X86FastISel.cpp' l='3991' u='c' c='_ZN12_GLOBAL__N_111X86FastISel19tryToFoldLoadIntoMIEPN4llvm12MachineInstrEjPKNS1_8LoadInstE'/>
