<def f='llvm/llvm/include/llvm/MC/MCInstrDesc.h' l='455' ll='457' type='bool llvm::MCInstrDesc::hasUnmodeledSideEffects() const'/>
<doc f='llvm/llvm/include/llvm/MC/MCInstrDesc.h' l='443'>/// Return true if this instruction has side
  /// effects that are not modeled by other flags.  This does not return true
  /// for instructions whose effects are captured by:
  ///
  ///  1. Their operand list and implicit definition/use list.  Register use/def
  ///     info is explicit for instructions.
  ///  2. Memory accesses.  Use mayLoad/mayStore.
  ///  3. Calling, branching, returning: use isCall/isReturn/isBranch.
  ///
  /// Examples of side effects would be modifying &apos;invisible&apos; machine state like
  /// a control register, flushing a cache, modifying a register invisible to
  /// LLVM, etc.</doc>
<use f='llvm/llvm/lib/MCA/InstrBuilder.cpp' l='402' u='c' c='_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj'/>
<use f='llvm/llvm/lib/MCA/InstrBuilder.cpp' l='474' u='c' c='_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj'/>
<use f='llvm/llvm/lib/MCA/InstrBuilder.cpp' l='570' u='c' c='_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE'/>
<use f='llvm/llvm/tools/llvm-mca/Views/InstructionInfoView.cpp' l='119' u='c' c='_ZNK4llvm3mca19InstructionInfoView11collectDataENS_15MutableArrayRefINS1_23InstructionInfoViewDataEEE'/>
<use f='llvm/llvm/unittests/Target/ARM/MachineInstrTest.cpp' l='1195' u='c' c='_ZN32MachineInstr_HasSideEffects_Test8TestBodyEv'/>
