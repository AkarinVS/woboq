<dec f='llvm/llvm/include/llvm/ExecutionEngine/Orc/ExecutionUtils.h' l='235' type='static Expected&lt;std::unique_ptr&lt;DynamicLibrarySearchGenerator&gt; &gt; llvm::orc::DynamicLibrarySearchGenerator::Load(const char * FileName, char GlobalPrefix, llvm::orc::DynamicLibrarySearchGenerator::SymbolPredicate Allow = llvm::orc::DynamicLibrarySearchGenerator::SymbolPredicate())'/>
<use f='llvm/llvm/include/llvm/ExecutionEngine/Orc/ExecutionUtils.h' l='243' u='c' c='_ZN4llvm3orc29DynamicLibrarySearchGenerator20GetForCurrentProcessEcSt8functionIFbRKNS0_15SymbolStringPtrEEE'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/Orc/ExecutionUtils.h' l='231'>/// Permanently loads the library at the given path and, on success, returns
  /// a DynamicLibrarySearchGenerator that will search it for symbol definitions
  /// in the library. On failure returns the reason the library failed to load.</doc>
<def f='llvm/llvm/lib/ExecutionEngine/Orc/ExecutionUtils.cpp' l='226' ll='235' type='static Expected&lt;std::unique_ptr&lt;DynamicLibrarySearchGenerator&gt; &gt; llvm::orc::DynamicLibrarySearchGenerator::Load(const char * FileName, char GlobalPrefix, llvm::orc::DynamicLibrarySearchGenerator::SymbolPredicate Allow = llvm::orc::DynamicLibrarySearchGenerator::SymbolPredicate())'/>
