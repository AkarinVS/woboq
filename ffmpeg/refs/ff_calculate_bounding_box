<dec f='ffmpeg/libavfilter/bbox.h' l='40' type='int ff_calculate_bounding_box(FFBoundingBox * bbox, const uint8_t * data, int linesize, int w, int h, int min_val, int depth)'/>
<def f='ffmpeg/libavfilter/bbox.c' l='81' ll='90' type='int ff_calculate_bounding_box(FFBoundingBox * bbox, const uint8_t * data, int linesize, int w, int h, int min_val, int depth)'/>
<doc f='ffmpeg/libavfilter/bbox.h' l='30'>/**
 * Calculate the smallest rectangle that will encompass the
 * region with values &gt; min_val.
 *
 * @param bbox bounding box structure which is updated with the found values.
 *             If no pixels could be found with value &gt; min_val, the
 *             structure is not modified.
 * @return 1 in case at least one pixel with value &gt; min_val was found,
 *         0 otherwise
 */</doc>
<use f='ffmpeg/libavfilter/vf_bbox.c' l='92' u='c' c='filter_frame'/>
<use f='ffmpeg/libavfilter/vf_removelogo.c' l='345' u='c' c='init'/>
<use f='ffmpeg/libavfilter/vf_removelogo.c' l='346' u='c' c='init'/>
