<def f='ffmpeg/libavformat/hls.c' l='68' ll='78'/>
<use f='ffmpeg/libavformat/hls.c' l='77'/>
<use f='ffmpeg/libavformat/hls.c' l='117'/>
<use f='ffmpeg/libavformat/hls.c' l='127'/>
<use f='ffmpeg/libavformat/hls.c' l='162'/>
<use f='ffmpeg/libavformat/hls.c' l='218' c='free_segment_dynarray'/>
<use f='ffmpeg/libavformat/hls.c' l='400' c='new_init_section'/>
<use f='ffmpeg/libavformat/hls.c' l='404' c='new_init_section'/>
<use f='ffmpeg/libavformat/hls.c' l='728' c='parse_playlist'/>
<use f='ffmpeg/libavformat/hls.c' l='730' c='parse_playlist'/>
<use f='ffmpeg/libavformat/hls.c' l='894' c='parse_playlist'/>
<use f='ffmpeg/libavformat/hls.c' l='898' c='parse_playlist'/>
<use f='ffmpeg/libavformat/hls.c' l='1002' c='current_segment'/>
<use f='ffmpeg/libavformat/hls.c' l='1007' c='next_segment'/>
<use f='ffmpeg/libavformat/hls.c' l='1015' c='read_from_url'/>
<use f='ffmpeg/libavformat/hls.c' l='1137' c='intercept_id3'/>
<use f='ffmpeg/libavformat/hls.c' l='1229' c='open_input'/>
<use f='ffmpeg/libavformat/hls.c' l='1316' c='update_init_section'/>
<use f='ffmpeg/libavformat/hls.c' l='1433' c='read_data'/>
<size>72</size>
<def f='ffmpeg/libavformat/hlsproto.c' l='48' ll='51'/>
<use f='ffmpeg/libavformat/hlsproto.c' l='64'/>
<use f='ffmpeg/libavformat/hlsproto.c' l='146' c='parse_playlist'/>
<use f='ffmpeg/libavformat/hlsproto.c' l='146' c='parse_playlist'/>
<size>4104</size>
<doc f='ffmpeg/libavformat/hlsproto.c' l='36'>/*
 * An apple http stream consists of a playlist with media segment files,
 * played sequentially. There may be several playlists with the same
 * video content, in different bandwidth variants, that are played in
 * parallel (preferably only one bandwidth variant at a time). In this case,
 * the user supplied the url to a main playlist that only lists the variant
 * playlists.
 *
 * If the main playlist doesn&apos;t point at any variants, we still create
 * one anonymous toplevel variant for this, to maintain the structure.
 */</doc>
