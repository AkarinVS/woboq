<dec f='ffmpeg/libavutil/avstring.h' l='69' type='char * av_stristr(const char * haystack, const char * needle)'/>
<doc f='ffmpeg/libavutil/avstring.h' l='57'>/**
 * Locate the first case-independent occurrence in the string haystack
 * of the string needle.  A zero-length string needle is considered to
 * match at the start of haystack.
 *
 * This function is a case-insensitive version of the standard strstr().
 *
 * @param haystack string to search in
 * @param needle   string to search for
 * @return         pointer to the located match within haystack
 *                 or a null pointer if no match
 */</doc>
<use f='ffmpeg/libavcodec/samidec.c' l='63' u='c' c='sami_paragraph_to_ass'/>
<use f='ffmpeg/libavcodec/samidec.c' l='78' u='c' c='sami_paragraph_to_ass'/>
<use f='ffmpeg/libavcodec/samidec.c' l='78' u='c' c='sami_paragraph_to_ass'/>
<use f='ffmpeg/libavformat/ftp.c' l='519' u='c' c='ftp_has_feature'/>
<use f='ffmpeg/libavformat/ftp.c' l='572' u='c' c='ftp_connect_control_connection'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='425' u='c' c='write_codec_attr'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='637' u='c' c='hls_delete_old_segments'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1245' u='c' c='parse_playlist'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1248' u='c' c='parse_playlist'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1256' u='c' c='parse_playlist'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1259' u='c' c='parse_playlist'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1927' u='c' c='validate_name'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1927' u='c' c='validate_name'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1934' u='c' c='validate_name'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1934' u='c' c='validate_name'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1956' u='c' c='format_name'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1977' u='c' c='format_name'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='2284' u='c' c='update_master_pl_info'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='3022' u='c' c='hls_init'/>
<use f='ffmpeg/libavformat/http.c' l='1211' u='c' c='has_header'/>
<use f='ffmpeg/libavformat/mov.c' l='5749' u='c' c='mov_parse_uuid_spherical'/>
<use f='ffmpeg/libavformat/mov.c' l='5750' u='c' c='mov_parse_uuid_spherical'/>
<use f='ffmpeg/libavformat/mov.c' l='5751' u='c' c='mov_parse_uuid_spherical'/>
<use f='ffmpeg/libavformat/mov.c' l='5752' u='c' c='mov_parse_uuid_spherical'/>
<use f='ffmpeg/libavformat/mov.c' l='5753' u='c' c='mov_parse_uuid_spherical'/>
<use f='ffmpeg/libavformat/mov.c' l='5754' u='c' c='mov_parse_uuid_spherical'/>
<use f='ffmpeg/libavformat/mov.c' l='5755' u='c' c='mov_parse_uuid_spherical'/>
<use f='ffmpeg/libavformat/mov.c' l='5762' u='c' c='mov_parse_uuid_spherical'/>
<use f='ffmpeg/libavformat/mov.c' l='5765' u='c' c='mov_parse_uuid_spherical'/>
<use f='ffmpeg/libavformat/mov.c' l='5767' u='c' c='mov_parse_uuid_spherical'/>
<use f='ffmpeg/libavformat/mov.c' l='5780' u='c' c='mov_parse_uuid_spherical'/>
<use f='ffmpeg/libavformat/mov.c' l='5783' u='c' c='mov_parse_uuid_spherical'/>
<use f='ffmpeg/libavformat/mov.c' l='5786' u='c' c='mov_parse_uuid_spherical'/>
<use f='ffmpeg/libavformat/mov.c' l='5848' u='c' c='mov_read_uuid'/>
<use f='ffmpeg/libavformat/rpl.c' l='221' u='c' c='rpl_read_header'/>
<use f='ffmpeg/libavformat/rpl.c' l='224' u='c' c='rpl_read_header'/>
<def f='ffmpeg/libavutil/avstring.c' l='56' ll='67' type='char * av_stristr(const char * s1, const char * s2)'/>
<use f='ffmpeg/libavutil/avstring.c' l='245' u='c' c='av_strireplace'/>
