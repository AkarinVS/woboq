<dec f='ffmpeg/libavutil/base64.h' l='60' type='char * av_base64_encode(char * out, int out_size, const uint8_t * in, int in_size)'/>
<doc f='ffmpeg/libavutil/base64.h' l='50'>/**
 * Encode data to base64 and null-terminate.
 *
 * @param out      buffer for encoded data
 * @param out_size size in bytes of the out buffer (including the
 *                 null terminator), must be at least AV_BASE64_SIZE(in_size)
 * @param in       input buffer containing the data to encode
 * @param in_size  size in bytes of the in buffer
 * @return         out or NULL in case of error
 */</doc>
<use f='ffmpeg/libavformat/hdsenc.c' l='194' u='c' c='write_manifest'/>
<use f='ffmpeg/libavformat/httpauth.c' l='274' u='c' c='ff_http_auth_create_response'/>
<use f='ffmpeg/libavformat/matroskadec.c' l='2421' u='c' c='matroska_parse_tracks'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='1619' u='c' c='do_adobe_auth'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='1629' u='c' c='do_adobe_auth'/>
<use f='ffmpeg/libavformat/rtsp.c' l='1283' u='c' c='ff_rtsp_read_reply'/>
<use f='ffmpeg/libavformat/rtsp.c' l='1373' u='c' c='rtsp_send_cmd_with_content_async'/>
<use f='ffmpeg/libavformat/sdp.c' l='205' u='c' c='extradata2psets'/>
<use f='ffmpeg/libavformat/sdp.c' l='310' u='c' c='extradata2psets_hevc'/>
<use f='ffmpeg/libavformat/sdp.c' l='406' u='c' c='xiph_extradata2config'/>
<def f='ffmpeg/libavutil/base64.c' l='143' ll='179' type='char * av_base64_encode(char * out, int out_size, const uint8_t * in, int in_size)'/>
<doc f='ffmpeg/libavutil/base64.c' l='137'>/*****************************************************************************
* b64_encode: Stolen from VLC&apos;s http.c.
* Simplified by Michael.
* Fixed edge cases and made it work from data (vs. strings) by Ryan.
*****************************************************************************/</doc>
<use f='ffmpeg/libavutil/hash.c' l='233' u='c' c='av_hash_final_b64'/>
