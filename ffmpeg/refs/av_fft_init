<dec f='ffmpeg/libavcodec/avfft.h' l='48' type='FFTContext * av_fft_init(int nbits, int inverse)'/>
<doc f='ffmpeg/libavcodec/avfft.h' l='43'>/**
 * Set up a complex FFT.
 * @param nbits           log2 of the length of the input array
 * @param inverse         if 0 perform the forward transform, if 1 perform the inverse
 */</doc>
<def f='ffmpeg/libavcodec/avfft.c' l='28' ll='36' type='FFTContext * av_fft_init(int nbits, int inverse)'/>
<doc f='ffmpeg/libavcodec/avfft.c' l='26'>/* FFT */</doc>
<use f='ffmpeg/libavfilter/af_afftdn.c' l='731' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/af_afftdn.c' l='732' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/af_afftfilt.c' l='136' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/af_afftfilt.c' l='137' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/af_firequalizer.c' l='786' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/af_headphone.c' l='372' u='c' c='convert_coeffs'/>
<use f='ffmpeg/libavfilter/af_headphone.c' l='373' u='c' c='convert_coeffs'/>
<use f='ffmpeg/libavfilter/af_headphone.c' l='374' u='c' c='convert_coeffs'/>
<use f='ffmpeg/libavfilter/af_headphone.c' l='375' u='c' c='convert_coeffs'/>
<use f='ffmpeg/libavfilter/avf_showcqt.c' l='1383' u='c' c='config_output'/>
<use f='ffmpeg/libavfilter/avf_showfreqs.c' l='182' u='c' c='config_output'/>
<use f='ffmpeg/libavfilter/avf_showspatial.c' l='180' u='c' c='config_output'/>
<use f='ffmpeg/libavfilter/avf_showspectrum.c' l='1069' u='c' c='config_output'/>
<use f='ffmpeg/libavfilter/avf_showspectrum.c' l='1071' u='c' c='config_output'/>
<use f='ffmpeg/libavfilter/vaf_spectrumsynth.c' l='190' u='c' c='config_output'/>
<use f='ffmpeg/libavfilter/vf_convolve.c' l='549' u='c' c='config_output'/>
<use f='ffmpeg/libavfilter/vf_convolve.c' l='550' u='c' c='config_output'/>
<use f='ffmpeg/libavfilter/vf_fftdnoiz.c' l='102' u='c' c='init'/>
<use f='ffmpeg/libavfilter/vf_fftdnoiz.c' l='103' u='c' c='init'/>
