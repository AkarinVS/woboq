<dec f='ffmpeg/libavutil/parseutils.h' l='146' type='int av_parse_time(int64_t * timeval, const char * timestr, int duration)'/>
<use f='ffmpeg/fftools/cmdutils.c' l='166' u='c' c='parse_time_or_die'/>
<doc f='ffmpeg/libavutil/parseutils.h' l='114'>/**
 * Parse timestr and return in *time a corresponding number of
 * microseconds.
 *
 * @param timeval puts here the number of microseconds corresponding
 * to the string in timestr. If the string represents a duration, it
 * is the number of microseconds contained in the time interval.  If
 * the string is a date, is the number of microseconds since 1st of
 * January, 1970 up to the time of the parsed date.  If timestr cannot
 * be successfully parsed, set *time to INT64_MIN.

 * @param timestr a string representing a date or a duration.
 * - If a date the syntax is:
 * @code
 * [{YYYY-MM-DD|YYYYMMDD}[T|t| ]]{{HH:MM:SS[.m...]]]}|{HHMMSS[.m...]]]}}[Z]
 * now
 * @endcode
 * If the value is &quot;now&quot; it takes the current time.
 * Time is local time unless Z is appended, in which case it is
 * interpreted as UTC.
 * If the year-month-day part is not specified it takes the current
 * year-month-day.
 * - If a duration the syntax is:
 * @code
 * [-][HH:]MM:SS[.m...]
 * [-]S+[.m...]
 * @endcode
 * @param duration flag which tells how to interpret timestr, if not
 * zero timestr is interpreted as a duration, otherwise as a date
 * @return &gt;= 0 in case of success, a negative value corresponding to an
 * AVERROR code otherwise
 */</doc>
<use f='ffmpeg/fftools/ffprobe.c' l='3430' u='c' c='parse_read_interval'/>
<use f='ffmpeg/fftools/ffprobe.c' l='3466' u='c' c='parse_read_interval'/>
<use f='ffmpeg/libavfilter/f_sendcmd.c' l='302' u='c' c='parse_interval'/>
<use f='ffmpeg/libavfilter/f_sendcmd.c' l='310' u='c' c='parse_interval'/>
<use f='ffmpeg/libavformat/concatdec.c' l='431' u='c' c='concat_read_header'/>
<use f='ffmpeg/libavformat/dashenc.c' l='1008' u='c' c='parse_adaptation_sets'/>
<use f='ffmpeg/libavformat/matroskaenc.c' l='1793' u='c' c='get_metadata_duration'/>
<use f='ffmpeg/libavformat/matroskaenc.c' l='1802' u='c' c='get_metadata_duration'/>
<use f='ffmpeg/libavformat/rtsp.c' l='190' u='c' c='rtsp_parse_range_npt'/>
<use f='ffmpeg/libavformat/rtsp.c' l='195' u='c' c='rtsp_parse_range_npt'/>
<use f='ffmpeg/libavformat/segment.c' l='502' u='c' c='parse_times'/>
<use f='ffmpeg/libavformat/utils.c' l='5713' u='c' c='ff_parse_creation_time_metadata'/>
<use f='ffmpeg/libavutil/opt.c' l='518' u='c' c='av_opt_set'/>
<def f='ffmpeg/libavutil/parseutils.c' l='587' ll='749' type='int av_parse_time(int64_t * timeval, const char * timestr, int duration)'/>
