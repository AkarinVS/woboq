<dec f='ffmpeg/libavutil/avstring.h' l='182' type='char * av_get_token(const char ** buf, const char * term)'/>
<doc f='ffmpeg/libavutil/avstring.h' l='168'>/**
 * Unescape the given string until a non escaped terminating char,
 * and return the token corresponding to the unescaped string.
 *
 * The normal \ and &apos; escaping is supported. Leading and trailing
 * whitespaces are removed, unless they are escaped with &apos;\&apos; or are
 * enclosed between &apos;&apos;.
 *
 * @param buf the buffer to parse, buf will be updated to point to the
 * terminating char
 * @param term a 0-terminated list of terminating chars
 * @return the malloced unescaped string, which must be av_freed by
 * the user, NULL in case of allocation failure
 */</doc>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='399' u='c' c='opt_map'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2684' u='c' c='open_output_file'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2692' u='c' c='open_output_file'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2710' u='c' c='open_output_file'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2717' u='c' c='open_output_file'/>
<use f='ffmpeg/fftools/ffprobe.c' l='3300' u='c' c='opt_show_entries'/>
<use f='ffmpeg/fftools/ffprobe.c' l='3312' u='c' c='opt_show_entries'/>
<use f='ffmpeg/libavfilter/f_sendcmd.c' l='190' u='c' c='parse_command'/>
<use f='ffmpeg/libavfilter/f_sendcmd.c' l='200' u='c' c='parse_command'/>
<use f='ffmpeg/libavfilter/f_sendcmd.c' l='210' u='c' c='parse_command'/>
<use f='ffmpeg/libavfilter/f_sendcmd.c' l='290' u='c' c='parse_interval'/>
<use f='ffmpeg/libavfilter/graphparser.c' l='64' u='c' c='parse_link_name'/>
<use f='ffmpeg/libavfilter/graphparser.c' l='186' u='c' c='parse_filter'/>
<use f='ffmpeg/libavfilter/graphparser.c' l='194' u='c' c='parse_filter'/>
<use f='ffmpeg/libavformat/concatdec.c' l='416' u='c' c='concat_read_header'/>
<use f='ffmpeg/libavformat/concatdec.c' l='449' u='c' c='concat_read_header'/>
<use f='ffmpeg/libavformat/ip.c' l='103' u='c' c='ip_parse_addr_list'/>
<use f='ffmpeg/libavformat/rtpproto.c' l='294' u='c' c='rtp_open'/>
<use f='ffmpeg/libavformat/tee.c' l='463' u='c' c='tee_write_header'/>
<use f='ffmpeg/libavformat/teeproto.c' l='93' u='c' c='tee_open'/>
<def f='ffmpeg/libavutil/avstring.c' l='151' ll='184' type='char * av_get_token(const char ** buf, const char * term)'/>
<use f='ffmpeg/libavutil/dict.c' l='160' u='c' c='parse_key_value_pair'/>
<use f='ffmpeg/libavutil/dict.c' l='166' u='c' c='parse_key_value_pair'/>
<use f='ffmpeg/libavutil/opt.c' l='1448' u='c' c='parse_key_value_pair'/>
<use f='ffmpeg/libavutil/opt.c' l='1457' u='c' c='parse_key_value_pair'/>
<use f='ffmpeg/libavutil/opt.c' l='1549' u='c' c='av_opt_get_key_value'/>
