<dec f='ffmpeg/libavutil/audio_fifo.h' l='144' type='int av_audio_fifo_read(AVAudioFifo * af, void ** data, int nb_samples)'/>
<doc f='ffmpeg/libavutil/audio_fifo.h' l='130'>/**
 * Read data from an AVAudioFifo.
 *
 * @see enum AVSampleFormat
 * The documentation for AVSampleFormat describes the data layout.
 *
 * @param af          AVAudioFifo to read from
 * @param data        audio data plane pointers
 * @param nb_samples  number of samples to read
 * @return            number of samples actually read, or negative AVERROR code
 *                    on failure. The number of samples actually read will not
 *                    be greater than nb_samples, and will only be less than
 *                    nb_samples if av_audio_fifo_size is less than nb_samples.
 */</doc>
<use f='ffmpeg/libavcodec/opusdec.c' l='105' u='c' c='opus_flush_resample'/>
<use f='ffmpeg/libavcodec/opusdec.c' l='251' u='c' c='opus_decode_frame'/>
<use f='ffmpeg/libavcodec/opusdec.c' l='483' u='c' c='opus_decode_packet'/>
<use f='ffmpeg/libavfilter/af_agate.c' l='318' u='c' c='activate'/>
<use f='ffmpeg/libavfilter/af_amix.c' l='357' u='c' c='output_frame'/>
<use f='ffmpeg/libavfilter/af_sidechaincompress.c' l='269' u='c' c='activate'/>
<use f='ffmpeg/libavfilter/f_loop.c' l='197' u='c' c='arequest_frame'/>
<def f='ffmpeg/libavutil/audio_fifo.c' l='181' ll='199' type='int av_audio_fifo_read(AVAudioFifo * af, void ** data, int nb_samples)'/>
