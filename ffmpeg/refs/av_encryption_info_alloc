<dec f='ffmpeg/libavutil/encryption_info.h' l='136' type='AVEncryptionInfo * av_encryption_info_alloc(uint32_t subsample_count, uint32_t key_id_size, uint32_t iv_size)'/>
<doc f='ffmpeg/libavutil/encryption_info.h' l='125'>/**
 * Allocates an AVEncryptionInfo structure and sub-pointers to hold the given
 * number of subsamples.  This will allocate pointers for the key ID, IV,
 * and subsample entries, set the size members, and zero-initialize the rest.
 *
 * @param subsample_count The number of subsamples.
 * @param key_id_size The number of bytes in the key ID, should be 16.
 * @param iv_size The number of bytes in the IV, should be 16.
 *
 * @return The new AVEncryptionInfo structure, or NULL on error.
 */</doc>
<use f='ffmpeg/libavformat/mov.c' l='6516' u='c' c='mov_read_schm'/>
<use f='ffmpeg/libavformat/mov.c' l='6543' u='c' c='mov_read_tenc'/>
<def f='ffmpeg/libavutil/encryption_info.c' l='39' ll='61' type='AVEncryptionInfo * av_encryption_info_alloc(uint32_t subsample_count, uint32_t key_id_size, uint32_t iv_size)'/>
<use f='ffmpeg/libavutil/encryption_info.c' l='67' u='c' c='av_encryption_info_clone'/>
<use f='ffmpeg/libavutil/encryption_info.c' l='105' u='c' c='av_encryption_info_get_side_data'/>
<doc f='ffmpeg/libavutil/encryption_info.c' l='25'>// The format of the AVEncryptionInfo side data:
// u32be scheme
// u32be crypt_byte_block
// u32be skip_byte_block
// u32be key_id_size
// u32be iv_size
// u32be subsample_count
// u8[key_id_size] key_id
// u8[iv_size] iv
// {
//   u32be bytes_of_clear_data
//   u32be bytes_of_protected_data
// }[subsample_count]</doc>
