<dec f='ffmpeg/libavfilter/drawutils.h' l='71' type='int ff_draw_init(FFDrawContext * draw, enum AVPixelFormat format, unsigned int flags)'/>
<def f='ffmpeg/libavfilter/drawutils.c' l='84' ll='135' type='int ff_draw_init(FFDrawContext * draw, enum AVPixelFormat format, unsigned int flags)'/>
<use f='ffmpeg/libavfilter/drawutils.c' l='645' u='c' c='ff_draw_supported_pixel_formats'/>
<doc f='ffmpeg/libavfilter/drawutils.h' l='63'>/**
 * Init a draw context.
 *
 * Only a limited number of pixel formats are supported, if format is not
 * supported the function will return an error.
 * flags is combination of FF_DRAW_* flags.
 * @return  0 for success, &lt; 0 for error
 */</doc>
<use f='ffmpeg/libavfilter/vf_datascope.c' l='386' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/vf_datascope.c' l='514' u='c' c='pixscope_config_input'/>
<use f='ffmpeg/libavfilter/vf_datascope.c' l='942' u='c' c='oscilloscope_config_input'/>
<use f='ffmpeg/libavfilter/vf_pad.c' l='114' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/vf_rotate.c' l='299' u='c' c='config_props'/>
<use f='ffmpeg/libavfilter/vf_shear.c' l='270' u='c' c='config_output'/>
<use f='ffmpeg/libavfilter/vf_stack.c' l='258' u='c' c='config_output'/>
<use f='ffmpeg/libavfilter/vf_tile.c' l='142' u='c' c='config_props'/>
<use f='ffmpeg/libavfilter/vf_tinterlace.c' l='234' u='c' c='config_out_props'/>
<use f='ffmpeg/libavfilter/vf_tpad.c' l='173' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/vsrc_testsrc.c' l='231' u='c' c='color_config_props'/>
<use f='ffmpeg/libavfilter/vsrc_testsrc.c' l='933' u='c' c='test2_config_props'/>
