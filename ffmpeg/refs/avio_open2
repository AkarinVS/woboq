<dec f='ffmpeg/libavformat/avio.h' l='737' type='int avio_open2(AVIOContext ** s, const char * url, int flags, const AVIOInterruptCB * int_cb, AVDictionary ** options)'/>
<doc f='ffmpeg/libavformat/avio.h' l='719'>/**
 * Create and initialize a AVIOContext for accessing the
 * resource indicated by url.
 * @note When the resource indicated by url has been opened in
 * read+write mode, the AVIOContext can be used only for writing.
 *
 * @param s Used to return the pointer to the created AVIOContext.
 * In case of failure the pointed to value is set to NULL.
 * @param url resource to access
 * @param flags flags which control how the resource indicated by url
 * is to be opened
 * @param int_cb an interrupt callback to be used at the protocols level
 * @param options  A dictionary filled with protocol-private options. On return
 * this parameter will be destroyed and replaced with a dict containing options
 * that were not found. May be NULL.
 * @return &gt;= 0 in case of success, a negative value corresponding to an
 * AVERROR code in case of failure
 */</doc>
<use f='ffmpeg/fftools/ffmpeg.c' l='2837' u='c' c='print_sdp'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='1056' u='c' c='dump_attachment'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='1378' u='c' c='get_preset_file_2'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='1383' u='c' c='get_preset_file_2'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2413' u='c' c='open_output_file'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2606' u='c' c='open_output_file'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='3416' u='c' c='opt_progress'/>
<use f='ffmpeg/libavdevice/lavfi.c' l='148' u='c' c='lavfi_read_header'/>
<use f='ffmpeg/libavformat/aviobuf.c' l='1139' u='c' c='avio_open'/>
<def f='ffmpeg/libavformat/aviobuf.c' l='1163' ll='1167' type='int avio_open2(AVIOContext ** s, const char * filename, int flags, const AVIOInterruptCB * int_cb, AVDictionary ** options)'/>
<use f='ffmpeg/libavformat/dashenc.c' l='1580' u='c' c='dash_init'/>
