<dec f='ffmpeg/libavutil/mem.h' l='413' type='void av_fast_malloc(void * ptr, unsigned int * size, size_t min_size)'/>
<doc f='ffmpeg/libavutil/mem.h' l='384'>/**
 * Allocate a buffer, reusing the given one if large enough.
 *
 * Contrary to av_fast_realloc(), the current buffer contents might not be
 * preserved and on error the old buffer is freed, thus no special handling to
 * avoid memleaks is necessary.
 *
 * `*ptr` is allowed to be `NULL`, in which case allocation always happens if
 * `size_needed` is greater than 0.
 *
 * @code{.c}
 * uint8_t *buf = ...;
 * av_fast_malloc(&amp;buf, &amp;current_size, size_needed);
 * if (!buf) {
 *     // Allocation failed; buf already freed
 *     return AVERROR(ENOMEM);
 * }
 * @endcode
 *
 * @param[in,out] ptr      Pointer to pointer to an already allocated buffer.
 *                         `*ptr` will be overwritten with pointer to new
 *                         buffer on success or `NULL` on failure
 * @param[in,out] size     Pointer to the size of buffer `*ptr`. `*size` is
 *                         updated to the new allocated size, in particular 0
 *                         in case of failure.
 * @param[in]     min_size Desired minimal size of buffer `*ptr`
 * @see av_realloc()
 * @see av_fast_mallocz()
 */</doc>
<use f='ffmpeg/libavcodec/apedec.c' l='1564' u='c' c='ape_decode_frame'/>
<use f='ffmpeg/libavcodec/dca_core.c' l='1980' u='c' c='ff_dca_core_filter_fixed'/>
<use f='ffmpeg/libavcodec/dca_core.c' l='2188' u='c' c='filter_frame_float'/>
<use f='ffmpeg/libavcodec/dca_xll.c' l='394' u='c' c='chs_alloc_msb_band_data'/>
<use f='ffmpeg/libavcodec/dca_xll.c' l='422' u='c' c='chs_alloc_lsb_band_data'/>
<use f='ffmpeg/libavcodec/dca_xll.c' l='737' u='c' c='chs_assemble_freq_bands'/>
<use f='ffmpeg/libavcodec/dca_xll.c' l='964' u='c' c='parse_navi_table'/>
<use f='ffmpeg/libavcodec/fic.c' l='366' u='c' c='fic_decode_frame'/>
<use f='ffmpeg/libavcodec/flacdec.c' l='148' u='c' c='allocate_buffers'/>
<use f='ffmpeg/libavcodec/flacenc.c' l='1330' u='c' c='update_md5_sum'/>
<use f='ffmpeg/libavcodec/flashsv2enc.c' l='196' u='c' c='update_block_dimensions'/>
<use f='ffmpeg/libavcodec/gifdec.c' l='233' u='c' c='gif_read_image'/>
<use f='ffmpeg/libavcodec/gifdec.c' l='503' u='c' c='gif_decode_frame'/>
<use f='ffmpeg/libavcodec/h264_slice.c' l='133' u='c' c='alloc_scratch_buffers'/>
<use f='ffmpeg/libavcodec/h264_slice.c' l='136' u='c' c='alloc_scratch_buffers'/>
<use f='ffmpeg/libavcodec/magicyuv.c' l='596' u='c' c='magy_decode_frame'/>
<use f='ffmpeg/libavcodec/mjpegdec.c' l='1097' u='c' c='ljpeg_decode_rgb_scan'/>
<use f='ffmpeg/libavcodec/mpegvideo.c' l='628' u='c' c='ff_mpeg_update_thread_context'/>
<use f='ffmpeg/libavcodec/nuv.c' l='138' u='c' c='codec_reinit'/>
<use f='ffmpeg/libavcodec/opusdec.c' l='361' u='c' c='opus_decode_subpacket'/>
<use f='ffmpeg/libavcodec/pngdec.c' l='1097' u='c' c='handle_p_frame_apng'/>
<use f='ffmpeg/libavcodec/rscc.c' l='177' u='c' c='rscc_decode_frame'/>
<use f='ffmpeg/libavcodec/sanm.c' l='1296' u='c' c='decode_8'/>
<use f='ffmpeg/libavcodec/svq3.c' l='1038' u='c' c='svq3_decode_slice_header'/>
<use f='ffmpeg/libavcodec/takdec.c' l='755' u='c' c='tak_decode_frame'/>
<use f='ffmpeg/libavcodec/truemotion1.c' l='421' u='c' c='truemotion1_decode_header'/>
<use f='ffmpeg/libavcodec/truemotion1.c' l='493' u='c' c='truemotion1_decode_init'/>
<use f='ffmpeg/libavcodec/utvideodec.c' l='699' u='c' c='decode_frame'/>
<use f='ffmpeg/libavcodec/ylc.c' l='313' u='c' c='decode_frame'/>
<use f='ffmpeg/libavfilter/af_adeclick.c' l='341' u='c' c='do_interpolation'/>
<use f='ffmpeg/libavfilter/af_adeclick.c' l='372' u='c' c='interpolation'/>
<use f='ffmpeg/libavfilter/af_adeclick.c' l='377' u='c' c='interpolation'/>
<use f='ffmpeg/libavfilter/af_adeclick.c' l='420' u='c' c='detect_clips'/>
<use f='ffmpeg/libavfilter/vf_deshake.c' l='247' u='c' c='find_motion'/>
<use f='ffmpeg/libavformat/crypto.c' l='341' u='c' c='crypto_write'/>
<use f='ffmpeg/libavformat/hls.c' l='1353' u='c' c='update_init_section'/>
<use f='ffmpeg/libavformat/id3v2.c' l='965' u='c' c='id3v2_parse'/>
<use f='ffmpeg/libavformat/id3v2.c' l='1004' u='c' c='id3v2_parse'/>
<use f='ffmpeg/libavformat/pmpdec.c' l='150' u='c' c='pmp_packet'/>
<use f='ffmpeg/libavformat/spdifenc.c' l='238' u='c' c='spdif_header_dts4'/>
<use f='ffmpeg/libavformat/spdifenc.c' l='657' u='c' c='spdif_write_packet'/>
<def f='ffmpeg/libavutil/mem.c' l='502' ll='505' type='void av_fast_malloc(void * ptr, unsigned int * size, size_t min_size)'/>
