<dec f='ffmpeg/libavcodec/mjpegenc_huffman.h' l='43' type='void ff_mjpeg_encode_huffman_close(MJpegEncHuffmanContext * s, uint8_t * bits, uint8_t * val, int max_nval)'/>
<use f='ffmpeg/libavcodec/mjpegenc.c' l='144' u='c' c='mjpeg_build_optimal_huffman'/>
<use f='ffmpeg/libavcodec/mjpegenc.c' l='147' u='c' c='mjpeg_build_optimal_huffman'/>
<use f='ffmpeg/libavcodec/mjpegenc.c' l='150' u='c' c='mjpeg_build_optimal_huffman'/>
<use f='ffmpeg/libavcodec/mjpegenc.c' l='153' u='c' c='mjpeg_build_optimal_huffman'/>
<def f='ffmpeg/libavcodec/mjpegenc_huffman.c' l='161' ll='192' type='void ff_mjpeg_encode_huffman_close(MJpegEncHuffmanContext * s, uint8_t * bits, uint8_t * val, int max_nval)'/>
<doc f='ffmpeg/libavcodec/mjpegenc_huffman.c' l='153'>/**
 * Produces a Huffman encoding with a given input
 *
 * @param s         input to encode
 * @param bits      output array where the ith character represents how many input values have i length encoding
 * @param val       output array of input values sorted by their encoded length
 * @param max_nval  maximum number of distinct input values
 */</doc>
