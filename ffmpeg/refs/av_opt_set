<dec f='ffmpeg/libavutil/opt.h' l='701' type='int av_opt_set(void * obj, const char * name, const char * val, int search_flags)'/>
<doc f='ffmpeg/libavutil/opt.h' l='672'>/**
 * @defgroup opt_set_funcs Option setting functions
 * @{
 * Those functions set the field of obj with the given name to value.
 *
 * @param[in] obj A struct whose first element is a pointer to an AVClass.
 * @param[in] name the name of the field to set
 * @param[in] val The value to set. In case of av_opt_set() if the field is not
 * of a string type, then the given string is parsed.
 * SI postfixes and some named scalars are supported.
 * If the field is of a numeric type, it has to be a numeric or named
 * scalar. Behavior with more than one scalar and +- infix operators
 * is undefined.
 * If the field is of a flags type, it has to be a sequence of numeric
 * scalars or named flags separated by &apos;+&apos; or &apos;-&apos;. Prefixing a flag
 * with &apos;+&apos; causes it to be set without affecting the other flags;
 * similarly, &apos;-&apos; unsets a flag.
 * If the field is of a dictionary type, it has to be a &apos;:&apos; separated list of
 * key=value parameters. Values containing &apos;:&apos; special characters must be
 * escaped.
 * @param search_flags flags passed to av_opt_find2. I.e. if AV_OPT_SEARCH_CHILDREN
 * is passed here, then the option may be set on a child of obj.
 *
 * @return 0 if the value has been set, or an AVERROR code in case of
 * error:
 * AVERROR_OPTION_NOT_FOUND if no matching option exists
 * AVERROR(ERANGE) if the value is out of range
 * AVERROR(EINVAL) if the value is not valid
 */</doc>
<use f='ffmpeg/fftools/cmdutils.c' l='583' u='c' c='opt_default'/>
<use f='ffmpeg/fftools/cmdutils.c' l='610' u='c' c='opt_default'/>
<use f='ffmpeg/fftools/ffmpeg_filter.c' l='100' u='c' c='choose_pix_fmts'/>
<use f='ffmpeg/fftools/ffmpeg_filter.c' l='1017' u='c' c='configure_filtergraph'/>
<use f='ffmpeg/fftools/ffmpeg_filter.c' l='1029' u='c' c='configure_filtergraph'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2451' u='c' c='open_output_file'/>
<use f='ffmpeg/fftools/ffprobe.c' l='586' u='c' c='writer_open'/>
<use f='ffmpeg/libavcodec/options.c' l='158' u='c' c='init_context_defaults'/>
<use f='ffmpeg/libavfilter/af_aresample.c' l='62' u='c' c='init_dict'/>
<use f='ffmpeg/libavfilter/avfilter.c' l='855' u='c' c='process_options'/>
<use f='ffmpeg/libavfilter/avfilter.c' l='863' u='c' c='process_options'/>
<use f='ffmpeg/libavfilter/avfilter.c' l='892' u='c' c='ff_filter_process_command'/>
<use f='ffmpeg/libavfilter/vf_crop.c' l='340' u='c' c='process_command'/>
<use f='ffmpeg/libavfilter/vf_scale.c' l='231' u='c' c='scale_parse_expr'/>
<use f='ffmpeg/libavfilter/vf_scale.c' l='264' u='c' c='scale_parse_expr'/>
<use f='ffmpeg/libavfilter/vf_scale.c' l='295' u='c' c='init_dict'/>
<use f='ffmpeg/libavfilter/vf_scale.c' l='297' u='c' c='init_dict'/>
<use f='ffmpeg/libavfilter/vf_scale.c' l='300' u='c' c='init_dict'/>
<use f='ffmpeg/libavfilter/vf_scale.c' l='302' u='c' c='init_dict'/>
<use f='ffmpeg/libavfilter/vf_scale.c' l='559' u='c' c='config_props'/>
<use f='ffmpeg/libavfilter/vf_scale.c' l='688' u='c' c='scale_frame'/>
<use f='ffmpeg/libavfilter/vf_scale.c' l='690' u='c' c='scale_frame'/>
<use f='ffmpeg/libavfilter/vf_spp.c' l='481' u='c' c='init_dict'/>
<use f='ffmpeg/libavfilter/vsrc_cellauto.c' l='169' u='c' c='init'/>
<use f='ffmpeg/libavfilter/vsrc_life.c' l='227' u='c' c='init'/>
<use f='ffmpeg/libavformat/avio.c' l='135' u='c' c='url_alloc_for_protocol'/>
<use f='ffmpeg/libavformat/dump.c' l='542' u='c' c='dump_stream_format'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1821' u='c' c='hls_start'/>
<use f='ffmpeg/libavformat/http.c' l='1669' u='c' c='store_icy'/>
<use f='ffmpeg/libavformat/mmsh.c' l='246' u='c' c='mmsh_open_internal'/>
<use f='ffmpeg/libavformat/mmsh.c' l='302' u='c' c='mmsh_open_internal'/>
<use f='ffmpeg/libavformat/rtmphttp.c' l='219' u='c' c='rtmp_http_open'/>
<use f='ffmpeg/libavformat/rtmphttp.c' l='220' u='c' c='rtmp_http_open'/>
<use f='ffmpeg/libavformat/rtsp.c' l='1818' u='c' c='ff_rtsp_connect'/>
<use f='ffmpeg/libavformat/rtsp.c' l='1851' u='c' c='ff_rtsp_connect'/>
<use f='ffmpeg/libavformat/rtsp.c' l='1852' u='c' c='ff_rtsp_connect'/>
<use f='ffmpeg/libavformat/rtsp.c' l='1853' u='c' c='ff_rtsp_connect'/>
<use f='ffmpeg/libavformat/segment.c' l='268' u='c' c='segment_start'/>
<use f='ffmpeg/libavformat/utils.c' l='2809' u='c' c='estimate_timings_from_pts'/>
<use f='ffmpeg/libavformat/utils.c' l='2877' u='c' c='estimate_timings_from_pts'/>
<use f='ffmpeg/libavformat/utils.c' l='3627' u='c' c='avformat_find_stream_info'/>
<use f='ffmpeg/libavformat/utils.c' l='4110' u='c' c='avformat_find_stream_info'/>
<def f='ffmpeg/libavutil/opt.c' l='465' ll='552' type='int av_opt_set(void * obj, const char * name, const char * val, int search_flags)'/>
<use f='ffmpeg/libavutil/opt.c' l='1470' u='c' c='parse_key_value_pair'/>
<use f='ffmpeg/libavutil/opt.c' l='1596' u='c' c='av_opt_set_from_string'/>
<use f='ffmpeg/libavutil/opt.c' l='1641' u='c' c='av_opt_set_dict2'/>
