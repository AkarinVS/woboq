<dec f='ffmpeg/libavutil/log.h' l='273' type='void av_log_once(void * avcl, int initial_level, int subsequent_level, int * state, const char * fmt)'/>
<doc f='ffmpeg/libavutil/log.h' l='254'>/**
 * Send the specified message to the log once with the initial_level and then with
 * the subsequent_level. By default, all logging messages are sent to
 * stderr. This behavior can be altered by setting a different logging callback
 * function.
 * @see av_log
 *
 * @param avcl A pointer to an arbitrary struct of which the first field is a
 *        pointer to an AVClass struct or NULL if general log.
 * @param initial_level importance level of the message expressed using a @ref
 *        lavu_log_constants &quot;Logging Constant&quot; for the first occurance.
 * @param subsequent_level importance level of the message expressed using a @ref
 *        lavu_log_constants &quot;Logging Constant&quot; after the first occurance.
 * @param fmt The format string (printf-compatible) that specifies how
 *        subsequent arguments are converted to output.
 * @param state a variable to keep trak of if a message has already been printed
 *        this must be initialized to 0 before the first use. The same state
 *        must not be accessed by 2 Threads simultaneously.
 */</doc>
<use f='ffmpeg/libavcodec/h264_ps.c' l='582' u='c' c='ff_h264_decode_seq_parameter_set'/>
<use f='ffmpeg/libavformat/mpegtsenc.c' l='370' u='c' c='get_dvb_stream_type'/>
<use f='ffmpeg/libavformat/mpegtsenc.c' l='421' u='c' c='get_m2ts_stream_type'/>
<def f='ffmpeg/libavutil/log.c' l='415' ll='422' type='void av_log_once(void * avcl, int initial_level, int subsequent_level, int * state, const char * fmt)'/>
