<dec f='ffmpeg/libavcodec/audio_frame_queue.h' l='80' type='void ff_af_queue_remove(AudioFrameQueue * afq, int nb_samples, int64_t * pts, int64_t * duration)'/>
<doc f='ffmpeg/libavcodec/audio_frame_queue.h' l='66'>/**
 * Remove frame(s) from the queue.
 *
 * Retrieves the pts of the next available frame, or a generated pts based on
 * the last frame duration if there are no frames left in the queue. The number
 * of requested samples should be the full number of samples represented by the
 * packet that will be output by the encoder. If fewer samples are available
 * in the queue, a smaller value will be used for the output duration.
 *
 * @param afq           queue context
 * @param nb_samples    number of samples to remove from the queue
 * @param[out] pts      output packet pts
 * @param[out] duration output packet duration
 */</doc>
<use f='ffmpeg/libavcodec/aacenc.c' l='888' u='c' c='aac_encode_frame'/>
<use f='ffmpeg/libavcodec/aptxenc.c' l='230' u='c' c='aptx_encode_frame'/>
<def f='ffmpeg/libavcodec/audio_frame_queue.c' l='75' ll='113' type='void ff_af_queue_remove(AudioFrameQueue * afq, int nb_samples, int64_t * pts, int64_t * duration)'/>
<use f='ffmpeg/libavcodec/mlpenc.c' l='2340' u='c' c='mlp_encode_frame'/>
<use f='ffmpeg/libavcodec/nellymoserenc.c' l='415' u='c' c='encode_frame'/>
<use f='ffmpeg/libavcodec/opusenc.c' l='590' u='c' c='opus_encode_frame'/>
<use f='ffmpeg/libavcodec/ra144enc.c' l='533' u='c' c='ra144_encode_frame'/>
<use f='ffmpeg/libavcodec/vorbisenc.c' l='1190' u='c' c='vorbis_encode_frame'/>
