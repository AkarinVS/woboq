<dec f='ffmpeg/libavutil/hash.h' l='238' type='void av_hash_final_hex(struct AVHashContext * ctx, uint8_t * dst, int size)'/>
<use f='ffmpeg/fftools/ffprobe.c' l='852' u='c' c='writer_print_data_hash'/>
<doc f='ffmpeg/libavutil/hash.h' l='222'>/**
 * Finalize a hash context and store the hexadecimal representation of the
 * actual hash value as a string.
 *
 * It is not safe to update or finalize a hash context again, if it has already
 * been finalized.
 *
 * The string is always 0-terminated.
 *
 * If `size` is smaller than `2 * hash_size + 1`, where `hash_size` is the
 * value returned by av_hash_get_size(), the string will be truncated.
 *
 * @param[in,out] ctx  Hash context
 * @param[out]    dst  Where the string will be stored
 * @param[in]     size Maximum number of bytes to write to `dst`
 */</doc>
<use f='ffmpeg/libavformat/hashenc.c' l='145' u='c' c='hash_write_trailer'/>
<use f='ffmpeg/libavformat/hashenc.c' l='253' u='c' c='framehash_print_extradata'/>
<use f='ffmpeg/libavformat/hashenc.c' l='297' u='c' c='framehash_write_packet'/>
<use f='ffmpeg/libavformat/hashenc.c' l='314' u='c' c='framehash_write_packet'/>
<def f='ffmpeg/libavutil/hash.c' l='217' ll='225' type='void av_hash_final_hex(struct AVHashContext * ctx, uint8_t * dst, int size)'/>
