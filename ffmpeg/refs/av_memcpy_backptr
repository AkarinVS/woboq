<dec f='ffmpeg/libavutil/mem.h' l='513' type='void av_memcpy_backptr(uint8_t * dst, int back, int cnt)'/>
<doc f='ffmpeg/libavutil/mem.h' l='502'>/**
 * Overlapping memcpy() implementation.
 *
 * @param dst  Destination buffer
 * @param back Number of bytes back to start copying (i.e. the initial size of
 *             the overlapping window); must be &gt; 0
 * @param cnt  Number of bytes to copy; must be &gt;= 0
 *
 * @note `cnt &gt; back` is valid, this will copy the bytes we just copied,
 *       thus creating a repeating pattern with a period length of `back`.
 */</doc>
<use f='ffmpeg/libavcodec/dfa.c' l='96' u='c' c='decode_tsw1'/>
<use f='ffmpeg/libavcodec/dfa.c' l='131' u='c' c='decode_dsw1'/>
<use f='ffmpeg/libavcodec/eatgv.c' l='136' u='c' c='unpack'/>
<use f='ffmpeg/libavcodec/g723_1dec.c' l='569' u='c' c='residual_interp'/>
<use f='ffmpeg/libavcodec/hevc_refs.c' l='405' u='c' c='generate_missing_ref'/>
<use f='ffmpeg/libavcodec/kgv1dec.c' l='147' u='c' c='decode_frame'/>
<use f='ffmpeg/libavcodec/lcldec.c' l='97' u='c' c='mszh_decomp'/>
<use f='ffmpeg/libavcodec/lzf.c' l='82' u='c' c='ff_lzf_uncompress'/>
<use f='ffmpeg/libavcodec/pictordec.c' l='99' u='c' c='picmemset'/>
<use f='ffmpeg/libavcodec/sanm.c' l='1363' u='c' c='fill_frame'/>
<use f='ffmpeg/libavcodec/scpr.c' l='555' u='c' c='decode_frame'/>
<use f='ffmpeg/libavcodec/utils.c' l='406' u='c' c='ff_color_frame'/>
<use f='ffmpeg/libavcodec/wmavoice.c' l='1417' u='c' c='synth_block_fcb_acb'/>
<use f='ffmpeg/libavcodec/xan.c' l='192' u='c' c='xan_unpack'/>
<use f='ffmpeg/libavcodec/xxan.c' l='162' u='c' c='xan_unpack'/>
<use f='ffmpeg/libavutil/imgutils.c' l='578' u='c' c='memset_bytes'/>
<use f='ffmpeg/libavutil/lzo.c' l='130' u='c' c='copy_backptr'/>
<def f='ffmpeg/libavutil/mem.c' l='428' ll='476' type='void av_memcpy_backptr(uint8_t * dst, int back, int cnt)'/>
