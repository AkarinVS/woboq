<dec f='ffmpeg/libavutil/timecode.h' l='83' type='uint32_t av_timecode_get_smpte_from_framenum(const AVTimecode * tc, int framenum)'/>
<doc f='ffmpeg/libavutil/timecode.h' l='58'>/**
 * Convert frame number to SMPTE 12M binary representation.
 *
 * @param tc       timecode data correctly initialized
 * @param framenum frame number
 * @return         the SMPTE binary representation
 *
 * See SMPTE ST 314M-2005 Sec 4.4.2.2.1 &quot;Time code pack (TC)&quot;
 * the format description as follows:
 * bits 0-5:   hours, in BCD(6bits)
 * bits 6:     BGF1
 * bits 7:     BGF2 (NTSC) or FIELD (PAL)
 * bits 8-14:  minutes, in BCD(7bits)
 * bits 15:    BGF0 (NTSC) or BGF2 (PAL)
 * bits 16-22: seconds, in BCD(7bits)
 * bits 23:    FIELD (NTSC) or BGF0 (PAL)
 * bits 24-29: frames, in BCD(6bits)
 * bits 30:    drop  frame flag (0: non drop,    1: drop)
 * bits 31:    color frame flag (0: unsync mode, 1: sync mode)
 * @note BCD numbers (6 or 7 bits): 4 or 5 lower bits for units, 2 higher bits for tens.
 * @note Frame number adjustment is automatically done in case of drop timecode,
 *       you do NOT have to call av_timecode_adjust_ntsc_framenum2().
 * @note The frame number is relative to tc-&gt;start.
 * @note Color frame (CF) and binary group flags (BGF) bits are set to zero.
 */</doc>
<use f='ffmpeg/libavformat/dvenc.c' l='108' u='c' c='dv_write_pack'/>
<use f='ffmpeg/libavformat/mxfenc.c' l='2766' u='c' c='mxf_write_system_item'/>
<def f='ffmpeg/libavutil/timecode.c' l='52' ll='66' type='uint32_t av_timecode_get_smpte_from_framenum(const AVTimecode * tc, int framenum)'/>
