<dec f='ffmpeg/fftools/cmdutils.h' l='126' type='double parse_number_or_die(const char * context, const char * numstr, int type, double min, double max)'/>
<def f='ffmpeg/fftools/cmdutils.c' l='141' ll='160' type='double parse_number_or_die(const char * context, const char * numstr, int type, double min, double max)'/>
<use f='ffmpeg/fftools/cmdutils.c' l='322' u='c' c='write_option'/>
<use f='ffmpeg/fftools/cmdutils.c' l='324' u='c' c='write_option'/>
<use f='ffmpeg/fftools/cmdutils.c' l='328' u='c' c='write_option'/>
<use f='ffmpeg/fftools/cmdutils.c' l='330' u='c' c='write_option'/>
<use f='ffmpeg/fftools/cmdutils.c' l='1074' u='c' c='opt_timelimit'/>
<doc f='ffmpeg/fftools/cmdutils.h' l='113'>/**
 * Parse a string and return its corresponding value as a double.
 * Exit from the application if the string cannot be correctly
 * parsed or the corresponding value is invalid.
 *
 * @param context the context of the value to be set (e.g. the
 * corresponding command line option name)
 * @param numstr the string to be parsed
 * @param type the type (OPT_INT64 or OPT_FLOAT) as which the
 * string should be parsed
 * @param min the minimum valid accepted value
 * @param max the maximum valid accepted value
 */</doc>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2052' u='c' c='opt_streamid'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2054' u='c' c='opt_streamid'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='3136' u='c' c='opt_vsync'/>
