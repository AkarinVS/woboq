<dec f='ffmpeg/libavutil/common.h' l='499'/>
<doc f='ffmpeg/libavutil/common.h' l='481'>/**
 * Convert a UTF-8 character (up to 4 bytes) to its 32-bit UCS-4 encoded form.
 *
 * @param val      Output value, must be an lvalue of type uint32_t.
 * @param GET_BYTE Expression reading one byte from the input.
 *                 Evaluated up to 7 times (4 for the currently
 *                 assigned Unicode range).  With a memory buffer
 *                 input, this could be *ptr++, or if you want to make sure
 *                 that *ptr stops at the end of a NULL terminated string then
 *                 *ptr ? *ptr++ : 0
 * @param ERROR    Expression to be evaluated on invalid input,
 *                 typically a goto statement.
 *
 * @warning ERROR should not contain a loop control statement which
 * could interact with the internal while loop, and should force an
 * exit from the macro code (e.g. through a goto or a return) in order
 * to prevent undefined results.
 */</doc>
<use f='ffmpeg/libavcodec/decode.c' l='940' u='c'/>
<use f='ffmpeg/libavcodec/flac.c' l='46' u='c'/>
<use f='ffmpeg/libavcodec/movtextdec.c' l='327' u='c'/>
<use f='ffmpeg/libavformat/aviobuf.c' l='412' u='c'/>
<use f='ffmpeg/libavformat/movenc.c' l='128' u='c'/>
<use f='ffmpeg/libavformat/movenc.c' l='3909' u='c'/>
<use f='ffmpeg/libavformat/mpegtsenc.c' l='815' u='c'/>
<use f='ffmpeg/libavformat/mxfenc.c' l='691' u='c'/>
