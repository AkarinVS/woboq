<dec f='ffmpeg/libavutil/imgutils.h' l='243' type='int av_image_check_size2(unsigned int w, unsigned int h, int64_t max_pixels, enum AVPixelFormat pix_fmt, int log_offset, void * log_ctx)'/>
<doc f='ffmpeg/libavutil/imgutils.h' l='230'>/**
 * Check if the given dimension of an image is valid, meaning that all
 * bytes of a plane of an image with the specified pix_fmt can be addressed
 * with a signed int.
 *
 * @param w the width of the picture
 * @param h the height of the picture
 * @param max_pixels the maximum number of pixels the user wants to accept
 * @param pix_fmt the pixel format, can be AV_PIX_FMT_NONE if unknown.
 * @param log_offset the offset to sum to the log level for logging with log_ctx
 * @param log_ctx the parent logging context, it may be NULL
 * @return &gt;= 0 if valid, a negative error code otherwise
 */</doc>
<use f='ffmpeg/libavcodec/avcodec.c' l='243' u='c' c='avcodec_open2'/>
<use f='ffmpeg/libavcodec/avcodec.c' l='244' u='c' c='avcodec_open2'/>
<use f='ffmpeg/libavcodec/decode.c' l='1901' u='c' c='ff_get_buffer'/>
<use f='ffmpeg/libavcodec/dvbsubdec.c' l='1189' u='c' c='dvbsub_parse_region_segment'/>
<use f='ffmpeg/libavcodec/encode.c' l='296' u='c' c='encode_receive_packet_internal'/>
<use f='ffmpeg/libavcodec/g2meet.c' l='1451' u='c' c='g2m_decode_frame'/>
<use f='ffmpeg/libavcodec/indeo4.c' l='183' u='c' c='decode_pic_hdr'/>
<use f='ffmpeg/libavcodec/ivi.c' l='299' u='c' c='ff_ivi_init_planes'/>
<use f='ffmpeg/libavcodec/jpeg2000dec.c' l='299' u='c' c='get_siz'/>
<use f='ffmpeg/libavcodec/mpegpicture.c' l='72' u='c' c='ff_mpeg_framesize_alloc'/>
<use f='ffmpeg/libavcodec/pafvideo.c' l='95' u='c' c='paf_video_init'/>
<use f='ffmpeg/libavcodec/utils.c' l='86' u='c' c='ff_set_dimensions'/>
<use f='ffmpeg/libavfilter/avfiltergraph.c' l='281' u='c' c='graph_check_links'/>
<use f='ffmpeg/libavfilter/framepool.c' l='74' u='c' c='ff_frame_pool_video_init'/>
<def f='ffmpeg/libavutil/imgutils.c' l='288' ll='315' type='int av_image_check_size2(unsigned int w, unsigned int h, int64_t max_pixels, enum AVPixelFormat pix_fmt, int log_offset, void * log_ctx)'/>
<use f='ffmpeg/libavutil/imgutils.c' l='319' u='c' c='av_image_check_size'/>
