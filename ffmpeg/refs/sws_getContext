<dec f='ffmpeg/libswscale/swscale.h' l='186' type='struct SwsContext * sws_getContext(int srcW, int srcH, enum AVPixelFormat srcFormat, int dstW, int dstH, enum AVPixelFormat dstFormat, int flags, SwsFilter * srcFilter, SwsFilter * dstFilter, const double * param)'/>
<doc f='ffmpeg/libswscale/swscale.h' l='165'>/**
 * Allocate and return an SwsContext. You need it to perform
 * scaling/conversion operations using sws_scale().
 *
 * @param srcW the width of the source image
 * @param srcH the height of the source image
 * @param srcFormat the source image format
 * @param dstW the width of the destination image
 * @param dstH the height of the destination image
 * @param dstFormat the destination image format
 * @param flags specify which algorithm and options to use for rescaling
 * @param param extra parameters to tune the used scaler
 *              For SWS_BICUBIC param[0] and [1] tune the shape of the basis
 *              function, param[0] tunes f(1) and param[1] fÂ´(1)
 *              For SWS_GAUSS param[0] tunes the exponent and thus cutoff
 *              frequency
 *              For SWS_LANCZOS param[0] tunes the width of the window function
 * @return a pointer to an allocated context, or NULL in case of error
 * @note this function is to be removed after a saner alternative is
 *       written
 */</doc>
<use f='ffmpeg/libavfilter/dnn/dnn_io_proc.c' l='38' u='c' c='ff_proc_from_dnn_to_frame'/>
<use f='ffmpeg/libavfilter/dnn/dnn_io_proc.c' l='69' u='c' c='ff_proc_from_dnn_to_frame'/>
<use f='ffmpeg/libavfilter/dnn/dnn_io_proc.c' l='108' u='c' c='proc_from_frame_to_dnn_frameprocessing'/>
<use f='ffmpeg/libavfilter/dnn/dnn_io_proc.c' l='140' u='c' c='proc_from_frame_to_dnn_frameprocessing'/>
<use f='ffmpeg/libavfilter/dnn/dnn_io_proc.c' l='183' u='c' c='proc_from_frame_to_dnn_analytics'/>
<use f='ffmpeg/libavfilter/lswsutils.c' l='29' u='c' c='ff_scale_image'/>
<use f='ffmpeg/libavfilter/vf_dnn_processing.c' l='177' u='c' c='prepare_uv_scale'/>
<use f='ffmpeg/libavfilter/vf_dnn_processing.c' l='187' u='c' c='prepare_uv_scale'/>
<use f='ffmpeg/libavfilter/vf_sab.c' l='164' u='c' c='open_filter_param'/>
<use f='ffmpeg/libavfilter/vf_sr.c' l='110' u='c' c='config_output'/>
<use f='ffmpeg/libavfilter/vf_sr.c' l='119' u='c' c='config_output'/>
<use f='ffmpeg/libswscale/utils.c' l='979' u='c' c='sws_setColorspaceDetails'/>
<use f='ffmpeg/libswscale/utils.c' l='1495' u='c' c='sws_init_context'/>
<use f='ffmpeg/libswscale/utils.c' l='1502' u='c' c='sws_init_context'/>
<use f='ffmpeg/libswscale/utils.c' l='1533' u='c' c='sws_init_context'/>
<use f='ffmpeg/libswscale/utils.c' l='1553' u='c' c='sws_init_context'/>
<use f='ffmpeg/libswscale/utils.c' l='1559' u='c' c='sws_init_context'/>
<use f='ffmpeg/libswscale/utils.c' l='1876' u='c' c='sws_init_context'/>
<use f='ffmpeg/libswscale/utils.c' l='1882' u='c' c='sws_init_context'/>
<def f='ffmpeg/libswscale/utils.c' l='1917' ll='1936' type='struct SwsContext * sws_getContext(int srcW, int srcH, enum AVPixelFormat srcFormat, int dstW, int dstH, enum AVPixelFormat dstFormat, int flags, SwsFilter * srcFilter, SwsFilter * dstFilter, const double * param)'/>
