<dec f='ffmpeg/libswscale/swscale.h' l='310' type='void sws_convertPalette8ToPacked32(const uint8_t * src, uint8_t * dst, int num_pixels, const uint8_t * palette)'/>
<doc f='ffmpeg/libswscale/swscale.h' l='300'>/**
 * Convert an 8-bit paletted frame into a frame with a color depth of 32 bits.
 *
 * The output frame will have the same packed format as the palette.
 *
 * @param src        source frame buffer
 * @param dst        destination frame buffer
 * @param num_pixels number of pixels to convert
 * @param palette    array with [256] entries, which must match color arrangement (RGB or BGR) of src
 */</doc>
<use f='ffmpeg/libswscale/swscale_unscaled.c' l='546' u='r' c='palToRgbWrapper'/>
<use f='ffmpeg/libswscale/swscale_unscaled.c' l='547' u='r' c='palToRgbWrapper'/>
<use f='ffmpeg/libswscale/swscale_unscaled.c' l='548' u='r' c='palToRgbWrapper'/>
<use f='ffmpeg/libswscale/swscale_unscaled.c' l='549' u='r' c='palToRgbWrapper'/>
<def f='ffmpeg/libswscale/swscale_unscaled.c' l='2232' ll='2239' type='void sws_convertPalette8ToPacked32(const uint8_t * src, uint8_t * dst, int num_pixels, const uint8_t * palette)'/>
<doc f='ffmpeg/libswscale/swscale_unscaled.c' l='2231'>/* Convert the palette to the same packed 32-bit format as the palette */</doc>
