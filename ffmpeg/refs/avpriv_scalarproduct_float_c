<dec f='ffmpeg/libavutil/float_dsp.h' l='203' type='float avpriv_scalarproduct_float_c(const float * v1, const float * v2, int len)'/>
<doc f='ffmpeg/libavutil/float_dsp.h' l='194'>/**
 * Return the scalar product of two vectors.
 *
 * @param v1  first input vector
 * @param v2  first input vector
 * @param len number of elements
 *
 * @return sum of elementwise products
 */</doc>
<use f='ffmpeg/libavcodec/acelp_pitch_delay.c' l='95' u='c' c='ff_amr_set_fixed_gain'/>
<use f='ffmpeg/libavcodec/acelp_vectors.c' l='196' u='c' c='ff_adaptive_gain_control'/>
<use f='ffmpeg/libavcodec/acelp_vectors.c' l='217' u='c' c='ff_scale_vector_to_given_sum_of_squares'/>
<use f='ffmpeg/libavcodec/qcelpdec.c' l='401' u='c' c='apply_gain_ctrl'/>
<use f='ffmpeg/libavcodec/qcelpdec.c' l='680' u='c' c='postfilter'/>
<use f='ffmpeg/libavcodec/ra288.c' l='91' u='c' c='convolve'/>
<use f='ffmpeg/libavcodec/ra288.c' l='120' u='c' c='decode'/>
<use f='ffmpeg/libavcodec/sipr.c' l='414' u='c' c='decode_frame'/>
<use f='ffmpeg/libavcodec/sipr.c' l='458' u='c' c='decode_frame'/>
<use f='ffmpeg/libavcodec/sipr16k.c' l='166' u='c' c='acelp_decode_gain_codef'/>
<use f='ffmpeg/libavcodec/sipr16k.c' l='170' u='c' c='acelp_decode_gain_codef'/>
<use f='ffmpeg/libavcodec/wmavoice.c' l='558' u='c' c='kalman_smoothen'/>
<use f='ffmpeg/libavcodec/wmavoice.c' l='567' u='c' c='kalman_smoothen'/>
<use f='ffmpeg/libavcodec/wmavoice.c' l='597' u='c' c='tilt_factor'/>
<use f='ffmpeg/libavcodec/wmavoice.c' l='598' u='c' c='tilt_factor'/>
<use f='ffmpeg/libavcodec/wmavoice.c' l='693' u='c' c='calc_input_response'/>
<use f='ffmpeg/libavcodec/wmavoice.c' l='1370' u='c' c='synth_block_fcb_acb'/>
<def f='ffmpeg/libavutil/float_dsp.c' l='124' ll='133' type='float avpriv_scalarproduct_float_c(const float * v1, const float * v2, int len)'/>
<use f='ffmpeg/libavutil/float_dsp.c' l='151' u='r' c='avpriv_float_dsp_alloc'/>
