<dec f='ffmpeg/libavcodec/bsf.h' l='189' type='int av_bsf_send_packet(AVBSFContext * ctx, AVPacket * pkt)'/>
<doc f='ffmpeg/libavcodec/bsf.h' l='171'>/**
 * Submit a packet for filtering.
 *
 * After sending each packet, the filter must be completely drained by calling
 * av_bsf_receive_packet() repeatedly until it returns AVERROR(EAGAIN) or
 * AVERROR_EOF.
 *
 * @param pkt the packet to filter. The bitstream filter will take ownership of
 * the packet and reset the contents of pkt. pkt is not touched if an error occurs.
 * If pkt is empty (i.e. NULL, or pkt-&gt;data is NULL and pkt-&gt;side_data_elems zero),
 * it signals the end of the stream (i.e. no more non-empty packets will be sent;
 * sending more empty packets does nothing) and will cause the filter to output
 * any packets it may have buffered internally.
 *
 * @return 0 on success. AVERROR(EAGAIN) if packets need to be retrieved from the
 * filter (using av_bsf_receive_packet()) before new input can be consumed. Another
 * negative AVERROR value if an error occurs.
 */</doc>
<use f='ffmpeg/fftools/ffmpeg.c' l='904' u='c' c='output_packet'/>
<use f='ffmpeg/libavcodec/bitstream_filter.c' l='137' u='c' c='av_bitstream_filter_filter'/>
<def f='ffmpeg/libavcodec/bsf.c' l='201' ll='225' type='int av_bsf_send_packet(AVBSFContext * ctx, AVPacket * pkt)'/>
<use f='ffmpeg/libavcodec/bsf.c' l='335' u='c' c='bsf_list_filter'/>
<use f='ffmpeg/libavcodec/decode.c' l='601' u='c' c='avcodec_send_packet'/>
<use f='ffmpeg/libavformat/av1dec.c' l='244' u='c' c='annexb_read_packet'/>
<use f='ffmpeg/libavformat/av1dec.c' l='431' u='c' c='obu_read_packet'/>
<use f='ffmpeg/libavformat/concatdec.c' l='541' u='c' c='filter_packet'/>
<use f='ffmpeg/libavformat/mux.c' l='1162' u='c' c='write_packets_from_bsfs'/>
<use f='ffmpeg/libavformat/tee.c' l='575' u='c' c='tee_write_packet'/>
<use f='ffmpeg/libavformat/utils.c' l='3562' u='c' c='extract_extradata'/>
