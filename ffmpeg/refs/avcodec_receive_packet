<dec f='ffmpeg/libavcodec/avcodec.h' l='3266' type='int avcodec_receive_packet(AVCodecContext * avctx, AVPacket * avpkt)'/>
<doc f='ffmpeg/libavcodec/avcodec.h' l='3251'>/**
 * Read encoded data from the encoder.
 *
 * @param avctx codec context
 * @param avpkt This will be set to a reference-counted packet allocated by the
 *              encoder. Note that the function will always call
 *              av_packet_unref(avpkt) before doing anything else.
 * @return 0 on success, otherwise negative error code:
 *      AVERROR(EAGAIN):   output is not available in the current state - user
 *                         must try to send input
 *      AVERROR_EOF:       the encoder has been fully flushed, and there will be
 *                         no more output packets
 *      AVERROR(EINVAL):   codec not opened, or it is a decoder
 *      other errors: legitimate encoding errors
 */</doc>
<use f='ffmpeg/fftools/ffmpeg.c' l='1036' u='c' c='do_audio_out'/>
<use f='ffmpeg/fftools/ffmpeg.c' l='1375' u='c' c='do_video_out'/>
<use f='ffmpeg/fftools/ffmpeg.c' l='1991' u='c' c='flush_encoders'/>
<def f='ffmpeg/libavcodec/encode.c' l='395' ll='414' type='int avcodec_receive_packet(AVCodecContext * avctx, AVPacket * avpkt)'/>
<use f='ffmpeg/libavcodec/encode.c' l='451' u='c' c='compat_encode'/>
<use f='ffmpeg/libavcodec/mpegvideo_enc.c' l='1377' u='c' c='encode_frame'/>
