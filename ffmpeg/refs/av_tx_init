<dec f='ffmpeg/libavutil/tx.h' l='127' type='int av_tx_init(AVTXContext ** ctx, av_tx_fn * tx, enum AVTXType type, int inv, int len, const void * scale, uint64_t flags)'/>
<use f='ffmpeg/libavcodec/hcadec.c' l='254' u='c' c='decode_init'/>
<doc f='ffmpeg/libavutil/tx.h' l='113'>/**
 * Initialize a transform context with the given configuration
 * (i)MDCTs with an odd length are currently not supported.
 *
 * @param ctx the context to allocate, will be NULL on error
 * @param tx pointer to the transform function pointer to set
 * @param type type the type of transform
 * @param inv whether to do an inverse or a forward transform
 * @param len the size of the transform in samples
 * @param scale pointer to the value to scale the output if supported by type
 * @param flags a bitmask of AVTXFlags or 0
 *
 * @return 0 on success, negative error code on failure
 */</doc>
<use f='ffmpeg/libavcodec/siren.c' l='423' u='c' c='siren_init'/>
<use f='ffmpeg/libavfilter/af_arnndn.c' l='392' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/af_arnndn.c' l='397' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/asrc_afirsrc.c' l='258' u='c' c='config_output'/>
<def f='ffmpeg/libavutil/tx.c' l='160' ll='197' macro='1' type='int av_tx_init(AVTXContext ** ctx, av_tx_fn * tx, enum AVTXType type, int inv, int len, const void * scale, uint64_t flags)'/>
