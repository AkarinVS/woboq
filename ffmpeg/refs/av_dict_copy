<dec f='ffmpeg/libavutil/dict.h' l='170' type='int av_dict_copy(AVDictionary ** dst, const AVDictionary * src, int flags)'/>
<doc f='ffmpeg/libavutil/dict.h' l='160'>/**
 * Copy entries from one AVDictionary struct into another.
 * @param dst pointer to a pointer to a AVDictionary struct. If *dst is NULL,
 *            this function will allocate a struct for you and put it in *dst
 * @param src pointer to source AVDictionary struct
 * @param flags flags to use when setting entries in *dst
 * @note metadata is read using the AV_DICT_IGNORE_SUFFIX flag
 * @return 0 on success, negative AVERROR code on failure. If dst was allocated
 *           by this function, callers should free the associated memory.
 */</doc>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='715' u='c' c='copy_metadata'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='720' u='c' c='copy_metadata'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='1587' u='c' c='new_output_stream'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='1589' u='c' c='new_output_stream'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='1593' u='c' c='new_output_stream'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2094' u='c' c='copy_chapters'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2192' u='c' c='open_output_file'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2656' u='c' c='open_output_file'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2671' u='c' c='open_output_file'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2944' u='c' c='opt_target'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='2945' u='c' c='opt_target'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='3001' u='c' c='opt_default_new'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='3002' u='c' c='opt_default_new'/>
<use f='ffmpeg/fftools/ffprobe.c' l='3270' u='c' c='mark_section_show_entries'/>
<use f='ffmpeg/libavcodec/avcodec.c' l='170' u='c' c='avcodec_open2'/>
<use f='ffmpeg/libavcodec/frame_thread_encoder.c' l='228' u='c' c='ff_frame_thread_encoder_init'/>
<use f='ffmpeg/libavcodec/mjpegdec.c' l='2853' u='c' c='ff_mjpeg_receive_frame'/>
<use f='ffmpeg/libavcodec/webp.c' l='1477' u='c' c='webp_decode_frame'/>
<use f='ffmpeg/libavdevice/avdevice.c' l='113' u='c' c='list_devices_for_context'/>
<use f='ffmpeg/libavformat/aacdec.c' l='153' u='c' c='handle_id3'/>
<use f='ffmpeg/libavformat/asfdec_o.c' l='1771' u='c' c='asf_read_header'/>
<use f='ffmpeg/libavformat/concatdec.c' l='190' u='c' c='copy_stream_props'/>
<use f='ffmpeg/libavformat/dashenc.c' l='490' u='c' c='set_http_options'/>
<use f='ffmpeg/libavformat/dashenc.c' l='1587' u='c' c='dash_init'/>
<use f='ffmpeg/libavformat/fifo.c' l='130' u='c' c='fifo_thread_write_header'/>
<use f='ffmpeg/libavformat/fifo.c' l='487' u='c' c='fifo_mux_init'/>
<use f='ffmpeg/libavformat/hls.c' l='672' u='c' c='open_url'/>
<use f='ffmpeg/libavformat/hls.c' l='673' u='c' c='open_url'/>
<use f='ffmpeg/libavformat/hls.c' l='685' u='c' c='open_url'/>
<use f='ffmpeg/libavformat/hls.c' l='686' u='c' c='open_url'/>
<use f='ffmpeg/libavformat/hls.c' l='750' u='c' c='parse_playlist'/>
<use f='ffmpeg/libavformat/hls.c' l='1114' u='c' c='handle_id3'/>
<use f='ffmpeg/libavformat/hls.c' l='2054' u='c' c='hls_read_header'/>
<use f='ffmpeg/libavformat/hls.c' l='2243' u='c' c='hls_read_packet'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='872' u='c' c='hls_mux_init'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='879' u='c' c='hls_mux_init'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='903' u='c' c='hls_mux_init'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='937' u='c' c='hls_mux_init'/>
<use f='ffmpeg/libavformat/http.c' l='311' u='c' c='http_open_cnx'/>
<use f='ffmpeg/libavformat/http.c' l='630' u='c' c='http_open'/>
<use f='ffmpeg/libavformat/id3v2.c' l='1220' u='c' c='ff_id3v2_parse_chapters'/>
<use f='ffmpeg/libavformat/img2enc.c' l='166' u='c' c='write_packet'/>
<use f='ffmpeg/libavformat/mux.c' l='242' u='c' c='init_muxer'/>
<use f='ffmpeg/libavformat/oggenc.c' l='522' u='c' c='ogg_init'/>
<use f='ffmpeg/libavformat/rtpdec_asf.c' l='145' u='c' c='ff_wms_parse_sdp_a_line'/>
<use f='ffmpeg/libavformat/rtpenc_mpegts.c' l='76' u='c' c='rtp_mpegts_write_header'/>
<use f='ffmpeg/libavformat/rtpenc_mpegts.c' l='89' u='c' c='rtp_mpegts_write_header'/>
<use f='ffmpeg/libavformat/rtpenc_mpegts.c' l='117' u='c' c='rtp_mpegts_write_header'/>
<use f='ffmpeg/libavformat/segment.c' l='158' u='c' c='segment_mux_init'/>
<use f='ffmpeg/libavformat/segment.c' l='189' u='c' c='segment_mux_init'/>
<use f='ffmpeg/libavformat/segment.c' l='272' u='c' c='segment_start'/>
<use f='ffmpeg/libavformat/segment.c' l='782' u='c' c='seg_init'/>
<use f='ffmpeg/libavformat/tee.c' l='238' u='c' c='open_slave'/>
<use f='ffmpeg/libavformat/tee.c' l='486' u='c' c='tee_write_header'/>
<use f='ffmpeg/libavformat/utils.c' l='530' u='c' c='avformat_open_input'/>
<use f='ffmpeg/libavformat/utils.c' l='1720' u='c' c='read_frame_internal'/>
<use f='ffmpeg/libavformat/utils.c' l='4332' u='c' c='ff_stream_encode_params_copy'/>
<use f='ffmpeg/libavformat/webm_chunk.c' l='90' u='c' c='webm_chunk_init'/>
<use f='ffmpeg/libavformat/webm_chunk.c' l='97' u='c' c='webm_chunk_init'/>
<def f='ffmpeg/libavutil/dict.c' l='217' ll='228' type='int av_dict_copy(AVDictionary ** dst, const AVDictionary * src, int flags)'/>
<use f='ffmpeg/libavutil/frame.c' l='390' u='c' c='frame_copy_props'/>
<use f='ffmpeg/libavutil/frame.c' l='421' u='c' c='frame_copy_props'/>
<use f='ffmpeg/libavutil/opt.c' l='739' u='c' c='av_opt_set_dict_val'/>
<use f='ffmpeg/libavutil/opt.c' l='1043' u='c' c='av_opt_get_dict_val'/>
<use f='ffmpeg/libavutil/opt.c' l='1832' u='c' c='av_opt_copy'/>
