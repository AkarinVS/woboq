<dec f='ffmpeg/libavutil/samplefmt.h' l='117' type='enum AVSampleFormat av_get_planar_sample_fmt(enum AVSampleFormat sample_fmt)'/>
<doc f='ffmpeg/libavutil/samplefmt.h' l='108'>/**
 * Get the planar alternative form of the given sample format.
 *
 * If the passed sample_fmt is already in planar format, the format returned is
 * the same as the input.
 *
 * @return  the planar alternative form of the given sample format or
            AV_SAMPLE_FMT_NONE on error.
 */</doc>
<use f='ffmpeg/libavcodec/encode.c' l='549' u='c' c='ff_encode_preinit'/>
<use f='ffmpeg/libavcodec/encode.c' l='550' u='c' c='ff_encode_preinit'/>
<use f='ffmpeg/libavfilter/avfiltergraph.c' l='1057' u='c' c='swap_sample_fmts_on_filter'/>
<def f='ffmpeg/libavutil/samplefmt.c' l='84' ll='91' type='enum AVSampleFormat av_get_planar_sample_fmt(enum AVSampleFormat sample_fmt)'/>
<use f='ffmpeg/libswresample/audioconvert.c' l='160' u='c' c='swri_audio_convert_alloc'/>
<use f='ffmpeg/libswresample/audioconvert.c' l='161' u='c' c='swri_audio_convert_alloc'/>
<use f='ffmpeg/libswresample/swresample.c' l='231' u='c' c='swr_init'/>
<use f='ffmpeg/libswresample/swresample.c' l='232' u='c' c='swr_init'/>
