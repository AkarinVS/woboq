<dec f='ffmpeg/libavcodec/aptx.h' l='96' type='int'/>
<use f='ffmpeg/libavcodec/aptx.c' l='516' u='w' c='ff_aptx_init'/>
<use f='ffmpeg/libavcodec/aptx.c' l='519' u='r' c='ff_aptx_init'/>
<use f='ffmpeg/libavcodec/aptx.c' l='521' u='r' c='ff_aptx_init'/>
<use f='ffmpeg/libavcodec/aptx.c' l='523' u='r' c='ff_aptx_init'/>
<offset>32</offset>
<use f='ffmpeg/libavcodec/aptxdec.c' l='142' u='r' c='aptx_decode_frame'/>
<use f='ffmpeg/libavcodec/aptxdec.c' l='150' u='r' c='aptx_decode_frame'/>
<use f='ffmpeg/libavcodec/aptxdec.c' l='154' u='r' c='aptx_decode_frame'/>
<use f='ffmpeg/libavcodec/aptxdec.c' l='169' u='r' c='aptx_decode_frame'/>
<use f='ffmpeg/libavcodec/aptxenc.c' l='216' u='r' c='aptx_encode_frame'/>
<use f='ffmpeg/libavcodec/aptxenc.c' l='220' u='r' c='aptx_encode_frame'/>
<dec f='include/lzma/container.h' l='104' type='uint64_t'/>
<offset>64</offset>
<doc f='include/lzma/container.h' l='81'>/**
	 * \brief       Maximum uncompressed size of a Block
	 *
	 * The encoder will start a new .xz Block every block_size bytes.
	 * Using LZMA_FULL_FLUSH or LZMA_FULL_BARRIER with lzma_code()
	 * the caller may tell liblzma to start a new Block earlier.
	 *
	 * With LZMA2, a recommended block size is 2-4 times the LZMA2
	 * dictionary size. With very small dictionaries, it is recommended
	 * to use at least 1 MiB block size for good compression ratio, even
	 * if this is more than four times the dictionary size. Note that
	 * these are only recommendations for typical use cases; feel free
	 * to use other values. Just keep in mind that using a block size
	 * less than the LZMA2 dictionary size is waste of RAM.
	 *
	 * Set this to 0 to let liblzma choose the block size depending
	 * on the compression options. For LZMA2 it will be 3*dict_size
	 * or 1 MiB, whichever is more.
	 *
	 * For each thread, about 3 * block_size bytes of memory will be
	 * allocated. This may change in later liblzma versions. If so,
	 * the memory usage will probably be reduced, not increased.
	 */</doc>
