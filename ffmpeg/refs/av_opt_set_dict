<dec f='ffmpeg/libavutil/opt.h' l='483' type='int av_opt_set_dict(void * obj, struct AVDictionary ** options)'/>
<doc f='ffmpeg/libavutil/opt.h' l='469'>/**
 * Set all the options from a given dictionary on an object.
 *
 * @param obj a struct whose first element is a pointer to AVClass
 * @param options options to process. This dictionary will be freed and replaced
 *                by a new one containing all options not found in obj.
 *                Of course this new dictionary needs to be freed by caller
 *                with av_dict_free().
 *
 * @return 0 on success, a negative AVERROR if some option was found in obj,
 *         but could not be set.
 *
 * @see av_dict_copy()
 */</doc>
<use f='ffmpeg/fftools/ffmpeg.c' l='3117' u='c' c='init_output_stream_streamcopy'/>
<use f='ffmpeg/libavcodec/avcodec.c' l='217' u='c' c='avcodec_open2'/>
<use f='ffmpeg/libavcodec/avcodec.c' l='222' u='c' c='avcodec_open2'/>
<use f='ffmpeg/libavfilter/avfilter.c' l='899' u='c' c='avfilter_init_dict'/>
<use f='ffmpeg/libavformat/avio.c' l='322' u='c' c='ffurl_open_whitelist'/>
<use f='ffmpeg/libavformat/avio.c' l='325' u='c' c='ffurl_open_whitelist'/>
<use f='ffmpeg/libavformat/avio.c' l='344' u='c' c='ffurl_open_whitelist'/>
<use f='ffmpeg/libavformat/avio.c' l='549' u='c' c='avio_open_dir'/>
<use f='ffmpeg/libavformat/http.c' l='441' u='c' c='ff_http_do_new_request2'/>
<use f='ffmpeg/libavformat/mux.c' l='244' u='c' c='init_muxer'/>
<use f='ffmpeg/libavformat/utils.c' l='535' u='c' c='avformat_open_input'/>
<use f='ffmpeg/libavformat/utils.c' l='595' u='c' c='avformat_open_input'/>
<def f='ffmpeg/libavutil/opt.c' l='1656' ll='1659' type='int av_opt_set_dict(void * obj, AVDictionary ** options)'/>
