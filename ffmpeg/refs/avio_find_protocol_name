<dec f='ffmpeg/libavformat/avio.h' l='361' type='const char * avio_find_protocol_name(const char * url)'/>
<doc f='ffmpeg/libavformat/avio.h' l='354'>/**
 * Return the name of the protocol that will handle the passed URL.
 *
 * NULL is returned if no protocol could be found for the given URL.
 *
 * @return Name of the protocol or NULL.
 */</doc>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='994' u='c' c='assert_file_overwrite'/>
<def f='ffmpeg/libavformat/avio.c' l='467' ll='472' type='const char * avio_find_protocol_name(const char * url)'/>
<use f='ffmpeg/libavformat/concatdec.c' l='125' u='c' c='add_file'/>
<use f='ffmpeg/libavformat/dashenc.c' l='527' u='c' c='write_hls_media_playlist'/>
<use f='ffmpeg/libavformat/dashenc.c' l='1150' u='c' c='write_manifest'/>
<use f='ffmpeg/libavformat/dashenc.c' l='1904' u='c' c='dash_flush'/>
<use f='ffmpeg/libavformat/dashenc.c' l='2234' u='c' c='dash_write_packet'/>
<use f='ffmpeg/libavformat/hls.c' l='635' u='c' c='open_url'/>
<use f='ffmpeg/libavformat/hls.c' l='638' u='c' c='open_url'/>
<use f='ffmpeg/libavformat/hls.c' l='642' u='c' c='open_url'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='665' u='c' c='hls_delete_old_segments'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1036' u='c' c='sls_flag_check_duration_size'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1389' u='c' c='create_master_playlist'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1550' u='c' c='hls_window'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1775' u='c' c='hls_start'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1973' u='c' c='format_name'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='2547' u='c' c='hls_write_packet'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='2821' u='c' c='hls_write_trailer'/>
<use f='ffmpeg/libavformat/segment.c' l='736' u='c' c='seg_init'/>
<use f='ffmpeg/libavformat/utils.c' l='2076' u='c' c='ff_configure_buffers_for_index'/>
<use f='ffmpeg/libavformat/utils.c' l='5703' u='c' c='ff_is_http_proto'/>
