<dec f='ffmpeg/fftools/cmdutils.h' l='143' type='int64_t parse_time_or_die(const char * context, const char * timestr, int is_duration)'/>
<def f='ffmpeg/fftools/cmdutils.c' l='162' ll='172' type='int64_t parse_time_or_die(const char * context, const char * timestr, int is_duration)'/>
<use f='ffmpeg/fftools/cmdutils.c' l='326' u='c' c='write_option'/>
<doc f='ffmpeg/fftools/cmdutils.h' l='129'>/**
 * Parse a string specifying a time and return its corresponding
 * value as a number of microseconds. Exit from the application if
 * the string cannot be correctly parsed.
 *
 * @param context the context of the value to be set (e.g. the
 * corresponding command line option name)
 * @param timestr the string to be parsed
 * @param is_duration a flag which tells how to interpret timestr, if
 * not zero timestr is interpreted as a duration, otherwise as a
 * date
 *
 * @see av_parse_time()
 */</doc>
<use f='ffmpeg/fftools/ffmpeg.c' l='3294' u='c' c='parse_forced_key_frames'/>
<use f='ffmpeg/fftools/ffmpeg.c' l='3306' u='c' c='parse_forced_key_frames'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='289' u='c' c='opt_stats_period'/>
<use f='ffmpeg/fftools/ffmpeg_opt.c' l='729' u='c' c='opt_recording_timestamp'/>
