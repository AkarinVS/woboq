<dec f='halide/build/include/Halide.h' l='5235' type='bool Halide::Target::get_runtime_compatible_target(const Halide::Target &amp; other, Halide::Target &amp; result)'/>
<doc f='halide/build/include/Halide.h' l='5226'>/**
     * Create a &quot;greatest common denominator&quot; runtime target that is compatible with
     * both this target and \p other. Used by generators to conveniently select a suitable
     * runtime when linking together multiple functions.
     *
     * @param other The other target from which we compute the gcd target.
     * @param[out] result The gcd target if we return true, otherwise unmodified. Can be the same as *this.
     * @return Whether it was possible to find a compatible target (true) or not.
     */</doc>
<dec f='halide/src/Target.h' l='241' type='bool Halide::Target::get_runtime_compatible_target(const Halide::Target &amp; other, Halide::Target &amp; result)'/>
<doc f='halide/src/Target.h' l='232'>/**
     * Create a &quot;greatest common denominator&quot; runtime target that is compatible with
     * both this target and \p other. Used by generators to conveniently select a suitable
     * runtime when linking together multiple functions.
     *
     * @param other The other target from which we compute the gcd target.
     * @param[out] result The gcd target if we return true, otherwise unmodified. Can be the same as *this.
     * @return Whether it was possible to find a compatible target (true) or not.
     */</doc>
<use f='halide/src/Generator.cpp' l='993' u='c' c='_ZN6Halide8Internal26generate_filter_main_innerEiPPcRSo'/>
<def f='halide/src/Target.cpp' l='937' ll='1095' type='bool Halide::Target::get_runtime_compatible_target(const Halide::Target &amp; other, Halide::Target &amp; result)'/>
<use f='halide/src/Target.cpp' l='1127' u='c' c='_ZN6Halide8Internal11target_testEv'/>
