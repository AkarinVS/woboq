<dec f='halide/build/include/Halide.h' l='15090' type='void Halide::Pipeline::set_custom_trace(int (*)(void *, const halide_trace_event_t *) trace_fn)'/>
<doc f='halide/build/include/Halide.h' l='15082'>/** Set custom routines to call when tracing is enabled. Call this
     * on the output Func of your pipeline. This then sets custom
     * routines for the entire pipeline, not just calls to this
     * Func.
     *
     * If you are statically compiling, you can also just define your
     * own versions of the tracing functions (see HalideRuntime.h),
     * and they will clobber Halide&apos;s versions. */</doc>
<dec f='halide/src/Pipeline.h' l='434' type='void Halide::Pipeline::set_custom_trace(int (*)(void *, const halide_trace_event_t *) trace_fn)'/>
<doc f='halide/src/Pipeline.h' l='426'>/** Set custom routines to call when tracing is enabled. Call this
     * on the output Func of your pipeline. This then sets custom
     * routines for the entire pipeline, not just calls to this
     * Func.
     *
     * If you are statically compiling, you can also just define your
     * own versions of the tracing functions (see HalideRuntime.h),
     * and they will clobber Halide&apos;s versions. */</doc>
<use f='halide/src/Func.cpp' l='3281' u='c' c='_ZN6Halide4Func16set_custom_traceEPFiPvPK20halide_trace_event_tE'/>
<def f='halide/src/Pipeline.cpp' l='665' ll='668' type='void Halide::Pipeline::set_custom_trace(int (*)(void *, const halide_trace_event_t *) trace_fn)'/>
