<dec f='halide/build/include/Halide.h' l='7340' type='Halide::Expr Halide::operator&gt;(int a, Halide::Expr b)'/>
<doc f='halide/build/include/Halide.h' l='7336'>/** Return a boolean expression that tests whether a constant integer is
 * greater than an expression. Coerces the integer to the type of
 * the expression. Errors if the integer is not representable in that
 * type. */</doc>
<dec f='halide/src/IROperator.h' l='535' type='Halide::Expr Halide::operator&gt;(int a, Halide::Expr b)'/>
<doc f='halide/src/IROperator.h' l='531'>/** Return a boolean expression that tests whether a constant integer is
 * greater than an expression. Coerces the integer to the type of
 * the expression. Errors if the integer is not representable in that
 * type. */</doc>
<def f='halide/src/IROperator.cpp' l='1682' ll='1687' type='Halide::Expr Halide::operator&gt;(int a, Halide::Expr b)'/>
<use f='halide/src/Solve.cpp' l='1333' u='c' c='_ZN6Halide8Internal10solve_testEv'/>
