<inh f='halide/halide-install/include/Halide.h' l='3903' c='Halide::Internal::ExprNode'/>
<def f='halide/halide-install/include/Halide.h' l='11968' ll='11974'/>
<use f='halide/halide-install/include/Halide.h' l='11968'/>
<use f='halide/halide-install/include/Halide.h' l='12824' c='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3ModE'/>
<use f='halide/halide-install/include/Halide.h' l='12894' c='_ZN6Halide8Internal14IRGraphVisitor5visitEPKNS0_3ModE'/>
<use f='halide/halide-install/include/Halide.h' l='12966' c='_ZN6Halide8Internal15VariadicVisitor13dispatch_exprEPKNS0_12BaseExprNodeEDpOTL0__'/>
<use f='halide/halide-install/include/Halide.h' l='19090' c='_ZN6Halide8Internal9IRPrinter5visitEPKNS0_3ModE'/>
<use f='halide/halide-install/include/Halide.h' l='19323' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_3ModE'/>
<use f='halide/halide-install/include/Halide.h' l='20076' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_3ModE'/>
<use f='halide/halide-install/include/Halide.h' l='28064' c='_ZN6Halide8Internal9IRMatcherlsERSoRKNS1_5BinOpINS0_3ModET_T0_EE'/>
<use f='halide/halide-install/include/Halide.h' l='28196' c='_ZN6Halide8Internal9IRMatcherrmEOT_OT0_'/>
<use f='halide/halide-install/include/Halide.h' l='28210' c='_ZN6Halide8Internal9IRMatcher20constant_fold_bin_opER13halide_type_tll'/>
<use f='halide/halide-install/include/Halide.h' l='28215' c='_ZN6Halide8Internal9IRMatcher20constant_fold_bin_opER13halide_type_tmm'/>
<use f='halide/halide-install/include/Halide.h' l='28220' c='_ZN6Halide8Internal9IRMatcher20constant_fold_bin_opER13halide_type_tdd'/>
<use f='halide/halide-install/include/Halide.h' l='30027' c='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3ModE'/>
<size>48</size>
<doc f='halide/halide-install/include/Halide.h' l='11965'>/** The remainder of a / b. Mostly equivalent to &apos;%&apos; in C, except that
 * the result here is always positive. For floats, this is equivalent
 * to calling fmod. */</doc>
<mbr r='Halide::Internal::Mod::a' o='256' t='Halide::Expr'/>
<mbr r='Halide::Internal::Mod::b' o='320' t='Halide::Expr'/>
<fun r='_ZN6Halide8Internal3Mod4makeENS_4ExprES2_'/>
<smbr r='Halide::Internal::Mod::_node_type' t='const Halide::Internal::IRNodeType'/>
<inh f='halide/build/include/Halide.h' l='3903' c='Halide::Internal::ExprNode'/>
<def f='halide/build/include/Halide.h' l='11968' ll='11974'/>
<use f='halide/build/include/Halide.h' l='11968'/>
<use f='halide/build/include/Halide.h' l='12824' c='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3ModE'/>
<use f='halide/build/include/Halide.h' l='12894' c='_ZN6Halide8Internal14IRGraphVisitor5visitEPKNS0_3ModE'/>
<use f='halide/build/include/Halide.h' l='12966' c='_ZN6Halide8Internal15VariadicVisitor13dispatch_exprEPKNS0_12BaseExprNodeEDpOTL0__'/>
<use f='halide/build/include/Halide.h' l='19090' c='_ZN6Halide8Internal9IRPrinter5visitEPKNS0_3ModE'/>
<use f='halide/build/include/Halide.h' l='19323' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_3ModE'/>
<use f='halide/build/include/Halide.h' l='20076' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_3ModE'/>
<use f='halide/build/include/Halide.h' l='28064' c='_ZN6Halide8Internal9IRMatcherlsERSoRKNS1_5BinOpINS0_3ModET_T0_EE'/>
<use f='halide/build/include/Halide.h' l='28196' c='_ZN6Halide8Internal9IRMatcherrmEOT_OT0_'/>
<use f='halide/build/include/Halide.h' l='28210' c='_ZN6Halide8Internal9IRMatcher20constant_fold_bin_opER13halide_type_tll'/>
<use f='halide/build/include/Halide.h' l='28215' c='_ZN6Halide8Internal9IRMatcher20constant_fold_bin_opER13halide_type_tmm'/>
<use f='halide/build/include/Halide.h' l='28220' c='_ZN6Halide8Internal9IRMatcher20constant_fold_bin_opER13halide_type_tdd'/>
<use f='halide/build/include/Halide.h' l='30027' c='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3ModE'/>
<size>48</size>
<doc f='halide/build/include/Halide.h' l='11965'>/** The remainder of a / b. Mostly equivalent to &apos;%&apos; in C, except that
 * the result here is always positive. For floats, this is equivalent
 * to calling fmod. */</doc>
<mbr r='Halide::Internal::Mod::a' o='256' t='Halide::Expr'/>
<mbr r='Halide::Internal::Mod::b' o='320' t='Halide::Expr'/>
<fun r='_ZN6Halide8Internal3Mod4makeENS_4ExprES2_'/>
<smbr r='Halide::Internal::Mod::_node_type' t='const Halide::Internal::IRNodeType'/>
<inh f='halide/src/Expr.h' l='156' c='Halide::Internal::ExprNode'/>
<def f='halide/src/IR.h' l='76' ll='82'/>
<use f='halide/src/IR.h' l='76'/>
<use f='halide/src/IRVisitor.h' l='42' c='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3ModE'/>
<use f='halide/src/IRVisitor.h' l='112' c='_ZN6Halide8Internal14IRGraphVisitor5visitEPKNS0_3ModE'/>
<use f='halide/src/IRVisitor.h' l='184' c='_ZN6Halide8Internal15VariadicVisitor13dispatch_exprEPKNS0_12BaseExprNodeEDpOTL0__'/>
<use f='halide/src/IRMutator.h' l='55' c='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3ModE'/>
<size>48</size>
<doc f='halide/src/IR.h' l='73'>/** The remainder of a / b. Mostly equivalent to &apos;%&apos; in C, except that
 * the result here is always positive. For floats, this is equivalent
 * to calling fmod. */</doc>
<mbr r='Halide::Internal::Mod::a' o='256' t='Halide::Expr'/>
<mbr r='Halide::Internal::Mod::b' o='320' t='Halide::Expr'/>
<fun r='_ZN6Halide8Internal3Mod4makeENS_4ExprES2_'/>
<smbr r='Halide::Internal::Mod::_node_type' t='const Halide::Internal::IRNodeType'/>
<use f='halide/src/IRPrinter.h' l='159' c='_ZN6Halide8Internal9IRPrinter5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/IRMatch.h' l='950' c='_ZN6Halide8Internal9IRMatcherlsERSoRKNS1_5BinOpINS0_3ModET_T0_EE'/>
<use f='halide/src/IRMatch.h' l='1082' c='_ZN6Halide8Internal9IRMatcherrmEOT_OT0_'/>
<use f='halide/src/IRMatch.h' l='1096' c='_ZN6Halide8Internal9IRMatcher20constant_fold_bin_opER13halide_type_tll'/>
<use f='halide/src/IRMatch.h' l='1101' c='_ZN6Halide8Internal9IRMatcher20constant_fold_bin_opER13halide_type_tmm'/>
<use f='halide/src/IRMatch.h' l='1106' c='_ZN6Halide8Internal9IRMatcher20constant_fold_bin_opER13halide_type_tdd'/>
<size>48</size>
<use f='halide/src/Bounds.cpp' l='667' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/CodeGen_LLVM.h' l='337' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/CodeGen_C.h' l='203' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_3ModE'/>
<use f='halide/src/CodeGen_C.cpp' l='1841' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/CodeGen_D3D12Compute_Dev.cpp' l='96' c='_ZN6Halide8Internal12_GLOBAL__N_124CodeGen_D3D12Compute_Dev22CodeGen_D3D12Compute_C5visitEPKNS0_3ModE'/>
<use f='halide/src/CodeGen_D3D12Compute_Dev.cpp' l='287' c='_ZN6Halide8Internal12_GLOBAL__N_124CodeGen_D3D12Compute_Dev22CodeGen_D3D12Compute_C5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/Simplify_Internal.h' l='310' c='_ZN6Halide8Internal8Simplify5visitEPKNS0_3ModEPNS1_8ExprInfoE'/>
<size>48</size>
<use f='halide/src/CodeGen_LLVM.cpp' l='1552' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/CodeGen_Metal_Dev.cpp' l='84' c='_ZN6Halide8Internal12_GLOBAL__N_117CodeGen_Metal_Dev15CodeGen_Metal_C5visitEPKNS0_3ModE'/>
<use f='halide/src/CodeGen_Metal_Dev.cpp' l='240' c='_ZN6Halide8Internal12_GLOBAL__N_117CodeGen_Metal_Dev15CodeGen_Metal_C5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/CodeGen_OpenGLCompute_Dev.cpp' l='53' c='_ZN6Halide8Internal12_GLOBAL__N_123CodeGen_OpenGLCompute_C5visitEPKNS0_3ModE'/>
<use f='halide/src/CodeGen_OpenGLCompute_Dev.cpp' l='263' c='_ZN6Halide8Internal12_GLOBAL__N_123CodeGen_OpenGLCompute_C5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/Deinterleave.cpp' l='501' c='_ZN6Halide8Internal12_GLOBAL__N_111Interleaver5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/Derivative.cpp' l='63' c='_ZN6Halide8Internal12_GLOBAL__N_126ReverseAccumulationVisitor5visitEPKNS0_3ModE'/>
<use f='halide/src/Derivative.cpp' l='924' c='_ZN6Halide8Internal12_GLOBAL__N_126ReverseAccumulationVisitor5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/HexagonOptimize.cpp' l='1038' c='_ZN6Halide8Internal12_GLOBAL__N_116OptimizePatterns5visitEPKNS0_3ModE'/>
<use f='halide/src/HexagonOptimize.cpp' l='1483' c='_ZN6Halide8Internal12_GLOBAL__N_120EliminateInterleaves5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/IR.cpp' l='75' c='_ZN6Halide8Internal3Mod4makeENS_4ExprES2_'/>
<use f='halide/src/IR.cpp' l='75' c='_ZN6Halide8Internal3Mod4makeENS_4ExprES2_'/>
<use f='halide/src/IR.cpp' l='989' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1174' c='_ZNK6Halide8Internal8ExprNode11mutate_exprEPNS0_9IRMutatorE'/>
<size>48</size>
<fun r='_ZN6Halide8Internal3Mod4makeENS_4ExprES2_'/>
<use f='halide/src/IREquality.cpp' l='65' c='_ZN6Halide8Internal12_GLOBAL__N_110IRComparer5visitEPKNS0_3ModE'/>
<use f='halide/src/IREquality.cpp' l='366' c='_ZN6Halide8Internal12_GLOBAL__N_110IRComparer5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/IRMatch.cpp' l='168' c='_ZN6Halide8Internal12_GLOBAL__N_17IRMatch5visitEPKNS0_3ModE'/>
<use f='halide/src/IRMatch.cpp' l='446' c='_ZN6Halide8Internal9IRMatcher12equal_helperERKNS0_12BaseExprNodeES4_'/>
<size>48</size>
<use f='halide/src/IRMutator.cpp' l='65' c='_ZN6Halide8Internal9IRMutator5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/IRPrinter.cpp' l='535' c='_ZN6Halide8Internal9IRPrinter5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/IRVisitor.cpp' l='48' c='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3ModE'/>
<use f='halide/src/IRVisitor.cpp' l='319' c='_ZN6Halide8Internal14IRGraphVisitor5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/ModulusRemainder.cpp' l='43' c='_ZN6Halide8Internal12_GLOBAL__N_123ComputeModulusRemainder5visitEPKNS0_3ModE'/>
<use f='halide/src/ModulusRemainder.cpp' l='523' c='_ZN6Halide8Internal12_GLOBAL__N_123ComputeModulusRemainder5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/Monotonic.cpp' l='324' c='_ZN6Halide8Internal12_GLOBAL__N_116DerivativeBounds5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/RegionCosts.cpp' l='107' c='_ZN6Halide8Internal12_GLOBAL__N_18ExprCost5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/RemoveUndef.cpp' l='74' c='_ZN6Halide8Internal12_GLOBAL__N_111RemoveUndef5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/Simplify.cpp' l='200' c='_ZN6Halide8Internal8Simplify10ScopedFact10learn_trueERKNS_4ExprE'/>
<use f='halide/src/Simplify.cpp' l='200' c='_ZN6Halide8Internal8Simplify10ScopedFact10learn_trueERKNS_4ExprE'/>
<size>48</size>
<use f='halide/src/Simplify_Let.cpp' l='90' c='_ZN6Halide8Internal8Simplify12simplify_letEPKT_PNS1_8ExprInfoE'/>
<use f='halide/src/Simplify_Let.cpp' l='90' c='_ZN6Halide8Internal8Simplify12simplify_letEPKT_PNS1_8ExprInfoE'/>
<size>48</size>
<use f='halide/src/Simplify_Mod.cpp' l='6' c='_ZN6Halide8Internal8Simplify5visitEPKNS0_3ModEPNS1_8ExprInfoE'/>
<size>48</size>
<use f='halide/src/StmtToHtml.cpp' l='249' c='_ZN6Halide8Internal12_GLOBAL__N_110StmtToHtml5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/VectorizeLoops.cpp' l='273' c='_ZN6Halide8Internal12_GLOBAL__N_119is_interleaved_rampERKNS_4ExprERKNS0_5ScopeIS2_EEPNS1_15InterleavedRampE'/>
<use f='halide/src/VectorizeLoops.cpp' l='273' c='_ZN6Halide8Internal12_GLOBAL__N_119is_interleaved_rampERKNS_4ExprERKNS0_5ScopeIS2_EEPNS1_15InterleavedRampE'/>
<use f='halide/src/VectorizeLoops.cpp' l='590' c='_ZN6Halide8Internal12_GLOBAL__N_110VectorSubs5visitEPKNS0_3ModE'/>
<size>48</size>
<use f='halide/src/autoschedulers/adams2019/FunctionDAG.cpp' l='80' c='_ZN6Halide8Internal13Autoscheduler12_GLOBAL__N_110Featurizer5visitEPKNS0_3ModE'/>
<size>48</size>
