<dec f='halide/build-apps/eigen/Eigen/src/Geometry/Quaternion.h' l='105' type='Derived &amp; Eigen::QuaternionBase::operator=(const Eigen::QuaternionBase::AngleAxisType &amp; aa)'/>
<def f='halide/build-apps/eigen/Eigen/src/Geometry/Quaternion.h' l='560' ll='569' type='Derived &amp; Eigen::QuaternionBase::operator=(const Eigen::QuaternionBase::AngleAxisType &amp; aa)'/>
<doc f='halide/build-apps/eigen/Eigen/src/Geometry/Quaternion.h' l='98'>// disabled this copy operator as it is giving very strange compilation errors when compiling
// test_stdvector with GCC 4.4.2. This looks like a GCC bug though, so feel free to re-enable it if it&apos;s
// useful; however notice that we already have the templated operator= above and e.g. in MatrixBase
// we didn&apos;t have to add, in addition to templated operator=, such a non-templated copy operator.
//  Derived&amp; operator=(const QuaternionBase&amp; other)
//  { return operator=&lt;Derived&gt;(other); }</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Geometry/Quaternion.h' l='558'>/** Set \c *this from an angle-axis \a aa and returns a reference to \c *this
  */</doc>
