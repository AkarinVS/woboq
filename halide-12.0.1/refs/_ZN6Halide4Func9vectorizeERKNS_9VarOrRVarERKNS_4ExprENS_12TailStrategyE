<dec f='halide/halide-install/include/Halide.h' l='17395' type='Halide::Func &amp; Halide::Func::vectorize(const Halide::VarOrRVar &amp; var, const Halide::Expr &amp; factor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<use f='halide/apps/bgu/bgu_generator.cpp' l='544' u='c' c='_ZN12_GLOBAL__N_13BGU8generateEv'/>
<use f='halide/apps/bgu/bgu_generator.cpp' l='551' u='c' c='_ZN12_GLOBAL__N_13BGU8generateEv'/>
<use f='halide/apps/bgu/bgu_generator.cpp' l='558' u='c' c='_ZN12_GLOBAL__N_13BGU8generateEv'/>
<use f='halide/apps/bgu/bgu_generator.cpp' l='567' u='c' c='_ZN12_GLOBAL__N_13BGU8generateEv'/>
<use f='halide/apps/bgu/bgu_generator.cpp' l='576' u='c' c='_ZN12_GLOBAL__N_13BGU8generateEv'/>
<use f='halide/apps/bgu/bgu_generator.cpp' l='588' u='c' c='_ZN12_GLOBAL__N_13BGU8generateEv'/>
<doc f='halide/halide-install/include/Halide.h' l='17390'>/** Split a dimension by the given factor, then vectorize the
     * inner dimension. This is how you vectorize a loop of unknown
     * size. The variable to be vectorized should be the innermost
     * one. After this call, var refers to the outer dimension of the
     * split. &apos;factor&apos; must be an integer. */</doc>
<use f='halide/apps/bilateral_grid/bilateral_grid_generator.cpp' l='135' u='c' c='_ZN12_GLOBAL__N_113BilateralGrid8generateEv'/>
<use f='halide/apps/bilateral_grid/bilateral_grid_generator.cpp' l='144' u='c' c='_ZN12_GLOBAL__N_113BilateralGrid8generateEv'/>
<use f='halide/apps/bilateral_grid/bilateral_grid_generator.cpp' l='149' u='c' c='_ZN12_GLOBAL__N_113BilateralGrid8generateEv'/>
<use f='halide/apps/bilateral_grid/bilateral_grid_generator.cpp' l='153' u='c' c='_ZN12_GLOBAL__N_113BilateralGrid8generateEv'/>
<use f='halide/apps/blur/halide_blur_generator.cpp' l='93' u='c' c='_ZN12_GLOBAL__N_110HalideBlur8generateEv'/>
<use f='halide/apps/blur/halide_blur_generator.cpp' l='97' u='c' c='_ZN12_GLOBAL__N_110HalideBlur8generateEv'/>
<use f='halide/apps/blur/halide_blur_generator.cpp' l='106' u='c' c='_ZN12_GLOBAL__N_110HalideBlur8generateEv'/>
<use f='halide/apps/blur/halide_blur_generator.cpp' l='110' u='c' c='_ZN12_GLOBAL__N_110HalideBlur8generateEv'/>
<use f='halide/apps/c_backend/pipeline_generator.cpp' l='21' u='c' c='_ZN12_GLOBAL__N_18Pipeline8generateEv'/>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='173' u='c' c='_ZN12_GLOBAL__N_18Demosaic8scheduleEv'/>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='525' u='c' c='_ZN12_GLOBAL__N_110CameraPipe8generateEv'/>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='543' u='c' c='_ZN12_GLOBAL__N_110CameraPipe8generateEv'/>
<use f='halide/apps/conv_layer/conv_layer_generator.cpp' l='115' u='c' c='_ZN12_GLOBAL__N_116ConvolutionLayer8generateEv'/>
<use f='halide/apps/conv_layer/conv_layer_generator.cpp' l='176' u='c' c='_ZN12_GLOBAL__N_116ConvolutionLayer8generateEv'/>
<use f='halide/apps/conv_layer/conv_layer_generator.cpp' l='183' u='c' c='_ZN12_GLOBAL__N_116ConvolutionLayer8generateEv'/>
<use f='halide/apps/conv_layer/conv_layer_generator.cpp' l='196' u='c' c='_ZN12_GLOBAL__N_116ConvolutionLayer8generateEv'/>
<use f='halide/apps/fft/fft.cpp' l='710' u='c' c='_Z9fft2d_r2cN6Halide4FuncERKSt6vectorIiSaIiEES5_RKNS_6TargetERK9Fft2dDesc'/>
<use f='halide/apps/fft/fft.cpp' l='853' u='c' c='_Z9fft2d_r2cN6Halide4FuncERKSt6vectorIiSaIiEES5_RKNS_6TargetERK9Fft2dDesc'/>
<use f='halide/apps/fft/fft.cpp' l='864' u='c' c='_Z9fft2d_r2cN6Halide4FuncERKSt6vectorIiSaIiEES5_RKNS_6TargetERK9Fft2dDesc'/>
<use f='halide/apps/fft/fft.cpp' l='933' u='c' c='_Z9fft2d_c2r5FuncTI11ComplexExprESt6vectorIiSaIiEES4_RKN6Halide6TargetERK9Fft2dDesc'/>
<use f='halide/apps/fft/fft.cpp' l='1053' u='c' c='_Z9fft2d_c2r5FuncTI11ComplexExprESt6vectorIiSaIiEES4_RKN6Halide6TargetERK9Fft2dDesc'/>
<use f='halide/apps/hannk/halide/conv_generator.cpp' l='227' u='c' c='_ZN5hannk4Conv8generateEv'/>
<use f='halide/apps/hannk/halide/conv_generator.cpp' l='281' u='c' c='_ZN5hannk4Conv8generateEv'/>
<use f='halide/apps/hannk/halide/copy_generator.cpp' l='57' u='c' c='_ZN5hannk4Copy8generateEv'/>
<use f='halide/apps/hannk/halide/depthwise_conv_generator.cpp' l='195' u='c' c='_ZN5hannk13DepthwiseConv8generateEv'/>
<use f='halide/apps/hannk/halide/depthwise_conv_generator.cpp' l='203' u='c' c='_ZN5hannk13DepthwiseConv8generateEv'/>
<use f='halide/apps/hannk/halide/depthwise_conv_generator.cpp' l='209' u='c' c='_ZN5hannk13DepthwiseConv8generateEv'/>
<use f='halide/apps/hannk/halide/elementwise_generator.cpp' l='45' u='c' c='_ZN5hannk3Add8generateEv'/>
<use f='halide/apps/hannk/halide/elementwise_generator.cpp' l='86' u='c' c='_ZN5hannk3Mul8generateEv'/>
<use f='halide/apps/hannk/halide/elementwise_generator.cpp' l='188' u='c' c='_ZN5hannk11Elementwise5buildEv'/>
<use f='halide/apps/hannk/halide/normalizations_generator.cpp' l='43' u='c' c='_ZN5hannk15L2Normalization8generateEv'/>
<use f='halide/apps/hannk/halide/reductions_generator.cpp' l='41' u='c' c='_ZN5hannk4Mean8generateEv'/>
<use f='halide/apps/harris/harris_generator.cpp' l='88' u='c' c='_ZN12_GLOBAL__N_16Harris8generateEv'/>
<use f='halide/apps/harris/harris_generator.cpp' l='100' u='c' c='_ZN12_GLOBAL__N_16Harris8generateEv'/>
<use f='halide/apps/harris/harris_generator.cpp' l='105' u='c' c='_ZN12_GLOBAL__N_16Harris8generateEv'/>
<use f='halide/apps/harris/harris_generator.cpp' l='113' u='c' c='_ZN12_GLOBAL__N_16Harris8generateEv'/>
<use f='halide/apps/harris/harris_generator.cpp' l='116' u='c' c='_ZN12_GLOBAL__N_16Harris8generateEv'/>
<use f='halide/apps/harris/harris_generator.cpp' l='119' u='c' c='_ZN12_GLOBAL__N_16Harris8generateEv'/>
<use f='halide/apps/harris/harris_generator.cpp' l='122' u='c' c='_ZN12_GLOBAL__N_16Harris8generateEv'/>
<use f='halide/apps/hist/hist_generator.cpp' l='84' u='c' c='_ZN12_GLOBAL__N_14Hist8generateEv'/>
<use f='halide/apps/hist/hist_generator.cpp' l='93' u='c' c='_ZN12_GLOBAL__N_14Hist8generateEv'/>
<use f='halide/apps/hist/hist_generator.cpp' l='159' u='c' c='_ZN12_GLOBAL__N_14Hist8generateEv'/>
<use f='halide/apps/hist/hist_generator.cpp' l='167' u='c' c='_ZN12_GLOBAL__N_14Hist8generateEv'/>
<use f='halide/apps/hist/hist_generator.cpp' l='182' u='c' c='_ZN12_GLOBAL__N_14Hist8generateEv'/>
<use f='halide/apps/hist/hist_generator.cpp' l='186' u='c' c='_ZN12_GLOBAL__N_14Hist8generateEv'/>
<use f='halide/apps/hist/hist_generator.cpp' l='189' u='c' c='_ZN12_GLOBAL__N_14Hist8generateEv'/>
<use f='halide/apps/hist/hist_generator.cpp' l='194' u='c' c='_ZN12_GLOBAL__N_14Hist8generateEv'/>
<use f='halide/apps/hist/hist_generator.cpp' l='207' u='c' c='_ZN12_GLOBAL__N_14Hist8generateEv'/>
<use f='halide/apps/interpolate/interpolate_generator.cpp' l='154' u='c' c='_ZN12_GLOBAL__N_111Interpolate8generateEv'/>
<use f='halide/apps/interpolate/interpolate_generator.cpp' l='168' u='c' c='_ZN12_GLOBAL__N_111Interpolate8generateEv'/>
<use f='halide/apps/interpolate/interpolate_generator.cpp' l='185' u='c' c='_ZN12_GLOBAL__N_111Interpolate8generateEv'/>
<use f='halide/apps/lens_blur/lens_blur_generator.cpp' l='217' u='c' c='_ZN12_GLOBAL__N_18LensBlur8generateEv'/>
<use f='halide/apps/lens_blur/lens_blur_generator.cpp' l='226' u='c' c='_ZN12_GLOBAL__N_18LensBlur8generateEv'/>
<use f='halide/apps/lens_blur/lens_blur_generator.cpp' l='251' u='c' c='_ZN12_GLOBAL__N_18LensBlur8generateEv'/>
<use f='halide/apps/lens_blur/lens_blur_generator.cpp' l='255' u='c' c='_ZN12_GLOBAL__N_18LensBlur8generateEv'/>
<use f='halide/apps/lens_blur/lens_blur_generator.cpp' l='260' u='c' c='_ZN12_GLOBAL__N_18LensBlur8generateEv'/>
<use f='halide/apps/lens_blur/lens_blur_generator.cpp' l='264' u='c' c='_ZN12_GLOBAL__N_18LensBlur8generateEv'/>
<use f='halide/apps/local_laplacian/local_laplacian_generator.cpp' l='135' u='c' c='_ZN12_GLOBAL__N_114LocalLaplacian8generateEv'/>
<use f='halide/apps/local_laplacian/local_laplacian_generator.cpp' l='136' u='c' c='_ZN12_GLOBAL__N_114LocalLaplacian8generateEv'/>
<use f='halide/apps/local_laplacian/local_laplacian_generator.cpp' l='141' u='c' c='_ZN12_GLOBAL__N_114LocalLaplacian8generateEv'/>
<use f='halide/apps/local_laplacian/local_laplacian_generator.cpp' l='147' u='c' c='_ZN12_GLOBAL__N_114LocalLaplacian8generateEv'/>
<use f='halide/apps/local_laplacian/local_laplacian_generator.cpp' l='152' u='c' c='_ZN12_GLOBAL__N_114LocalLaplacian8generateEv'/>
<use f='halide/apps/local_laplacian/local_laplacian_generator.cpp' l='154' u='c' c='_ZN12_GLOBAL__N_114LocalLaplacian8generateEv'/>
<use f='halide/apps/max_filter/max_filter_generator.cpp' l='106' u='c' c='_ZN12_GLOBAL__N_13Max8generateEv'/>
<use f='halide/apps/max_filter/max_filter_generator.cpp' l='108' u='c' c='_ZN12_GLOBAL__N_13Max8generateEv'/>
<use f='halide/apps/max_filter/max_filter_generator.cpp' l='113' u='c' c='_ZN12_GLOBAL__N_13Max8generateEv'/>
<use f='halide/apps/nl_means/nl_means_generator.cpp' l='137' u='c' c='_ZN12_GLOBAL__N_113NonLocalMeans8generateEv'/>
<use f='halide/apps/nl_means/nl_means_generator.cpp' l='140' u='c' c='_ZN12_GLOBAL__N_113NonLocalMeans8generateEv'/>
<use f='halide/apps/nl_means/nl_means_generator.cpp' l='142' u='c' c='_ZN12_GLOBAL__N_113NonLocalMeans8generateEv'/>
<use f='halide/apps/nl_means/nl_means_generator.cpp' l='147' u='c' c='_ZN12_GLOBAL__N_113NonLocalMeans8generateEv'/>
<use f='halide/apps/nl_means/nl_means_generator.cpp' l='153' u='c' c='_ZN12_GLOBAL__N_113NonLocalMeans8generateEv'/>
<use f='halide/apps/resize/resize_generator.cpp' l='158' u='c' c='_ZN6Resize8scheduleEv'/>
<use f='halide/apps/resize/resize_generator.cpp' l='162' u='c' c='_ZN6Resize8scheduleEv'/>
<use f='halide/apps/resize/resize_generator.cpp' l='169' u='c' c='_ZN6Resize8scheduleEv'/>
<use f='halide/apps/resize/resize_generator.cpp' l='190' u='c' c='_ZN6Resize8scheduleEv'/>
<use f='halide/apps/stencil_chain/stencil_chain_generator.cpp' l='99' u='c' c='_ZN12_GLOBAL__N_112StencilChain8generateEv'/>
<use f='halide/apps/stencil_chain/stencil_chain_generator.cpp' l='135' u='c' c='_ZN12_GLOBAL__N_112StencilChain8generateEv'/>
<use f='halide/apps/stencil_chain/stencil_chain_generator.cpp' l='141' u='c' c='_ZN12_GLOBAL__N_112StencilChain8generateEv'/>
<use f='halide/apps/unsharp/unsharp_generator.cpp' l='95' u='c' c='_ZN12_GLOBAL__N_17Unsharp8generateEv'/>
<use f='halide/apps/unsharp/unsharp_generator.cpp' l='100' u='c' c='_ZN12_GLOBAL__N_17Unsharp8generateEv'/>
<use f='halide/apps/unsharp/unsharp_generator.cpp' l='103' u='c' c='_ZN12_GLOBAL__N_17Unsharp8generateEv'/>
<use f='halide/apps/unsharp/unsharp_generator.cpp' l='106' u='c' c='_ZN12_GLOBAL__N_17Unsharp8generateEv'/>
<dec f='halide/build/include/Halide.h' l='17395' type='Halide::Func &amp; Halide::Func::vectorize(const Halide::VarOrRVar &amp; var, const Halide::Expr &amp; factor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<doc f='halide/build/include/Halide.h' l='17390'>/** Split a dimension by the given factor, then vectorize the
     * inner dimension. This is how you vectorize a loop of unknown
     * size. The variable to be vectorized should be the innermost
     * one. After this call, var refers to the outer dimension of the
     * split. &apos;factor&apos; must be an integer. */</doc>
<dec f='halide/src/Func.h' l='1515' type='Halide::Func &amp; Halide::Func::vectorize(const Halide::VarOrRVar &amp; var, const Halide::Expr &amp; factor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<doc f='halide/src/Func.h' l='1510'>/** Split a dimension by the given factor, then vectorize the
     * inner dimension. This is how you vectorize a loop of unknown
     * size. The variable to be vectorized should be the innermost
     * one. After this call, var refers to the outer dimension of the
     * split. &apos;factor&apos; must be an integer. */</doc>
<def f='halide/src/Func.cpp' l='2210' ll='2214' type='Halide::Func &amp; Halide::Func::vectorize(const Halide::VarOrRVar &amp; var, const Halide::Expr &amp; factor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<use f='halide/src/autoschedulers/adams2019/cost_model_generator.cpp' l='523' u='c' c='_ZN9CostModel8generateEv'/>
<use f='halide/src/autoschedulers/adams2019/cost_model_generator.cpp' l='549' u='c' c='_ZN9CostModel8generateEv'/>
<use f='halide/test/generator/example_generator.cpp' l='94' u='c' c='_ZN12_GLOBAL__N_17Example8scheduleEv'/>
<use f='halide/test/generator/mandelbrot_generator.cpp' l='85' u='c' c='_ZN12_GLOBAL__N_110Mandelbrot8generateEv'/>
<use f='halide/test/generator/memory_profiler_mandelbrot_generator.cpp' l='88' u='c' c='_ZN12_GLOBAL__N_110Mandelbrot8generateEv'/>
<use f='halide/test/generator/msan_generator.cpp' l='29' u='c' c='_ZN12_GLOBAL__N_14MSAN8scheduleEv'/>
<use f='halide/tutorial/lesson_08_scheduling_2.cpp' l='572' u='c' c='main'/>
<use f='halide/tutorial/lesson_08_scheduling_2.cpp' l='582' u='c' c='main'/>
<use f='halide/tutorial/lesson_09_update_definitions.cpp' l='252' u='c' c='main'/>
<use f='halide/tutorial/lesson_09_update_definitions.cpp' l='780' u='c' c='main'/>
<use f='halide/tutorial/lesson_10_aot_compilation_generate.cpp' l='65' u='c' c='main'/>
<use f='halide/tutorial/lesson_11_cross_compilation.cpp' l='41' u='c' c='main'/>
<use f='halide/tutorial/lesson_12_using_the_gpu.cpp' l='95' u='c' c='_ZN10MyPipeline16schedule_for_cpuEv'/>
<use f='halide/tutorial/lesson_12_using_the_gpu.cpp' l='105' u='c' c='_ZN10MyPipeline16schedule_for_cpuEv'/>
<use f='halide/tutorial/lesson_15_generators.cpp' l='158' u='c' c='_ZN17MySecondGenerator8generateEv'/>
<use f='halide/tutorial/lesson_18_parallel_associative_reductions.cpp' l='48' u='c' c='main'/>
<use f='halide/tutorial/lesson_18_parallel_associative_reductions.cpp' l='92' u='c' c='main'/>
<use f='halide/tutorial/lesson_18_parallel_associative_reductions.cpp' l='93' u='c' c='main'/>
<use f='halide/tutorial/lesson_18_parallel_associative_reductions.cpp' l='148' u='c' c='main'/>
<use f='halide/tutorial/lesson_18_parallel_associative_reductions.cpp' l='149' u='c' c='main'/>
<use f='halide/tutorial/lesson_18_parallel_associative_reductions.cpp' l='223' u='c' c='main'/>
<use f='halide/tutorial/lesson_18_parallel_associative_reductions.cpp' l='224' u='c' c='main'/>
<use f='halide/tutorial/lesson_18_parallel_associative_reductions.cpp' l='294' u='c' c='main'/>
<use f='halide/tutorial/lesson_18_parallel_associative_reductions.cpp' l='295' u='c' c='main'/>
<use f='halide/tutorial/lesson_19_wrapper_funcs.cpp' l='202' u='c' c='main'/>
<use f='halide/tutorial/lesson_19_wrapper_funcs.cpp' l='403' u='c' c='main'/>
<use f='halide/tutorial/lesson_19_wrapper_funcs.cpp' l='404' u='c' c='main'/>
