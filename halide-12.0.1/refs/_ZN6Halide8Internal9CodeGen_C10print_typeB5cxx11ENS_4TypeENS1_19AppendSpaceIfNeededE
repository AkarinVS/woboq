<dec f='halide/halide-install/include/Halide.h' l='19229' type='std::string Halide::Internal::CodeGen_C::print_type(Halide::Type , Halide::Internal::CodeGen_C::AppendSpaceIfNeeded space_option = DoNotAppendSpace)'/>
<doc f='halide/halide-install/include/Halide.h' l='19224'>/** Emit the C name for a halide type. If space_option is AppendSpace,
     *  and there should be a space between the type and the next token,
     *  one is appended. (This allows both &quot;int foo&quot; and &quot;Foo *foo&quot; to be
     *  formatted correctly. Otherwise the latter is &quot;Foo * foo&quot;.)
     */</doc>
<dec f='halide/build/include/Halide.h' l='19229' type='std::string Halide::Internal::CodeGen_C::print_type(Halide::Type , Halide::Internal::CodeGen_C::AppendSpaceIfNeeded space_option = DoNotAppendSpace)'/>
<doc f='halide/build/include/Halide.h' l='19224'>/** Emit the C name for a halide type. If space_option is AppendSpace,
     *  and there should be a space between the type and the next token,
     *  one is appended. (This allows both &quot;int foo&quot; and &quot;Foo *foo&quot; to be
     *  formatted correctly. Otherwise the latter is &quot;Foo * foo&quot;.)
     */</doc>
<dec f='halide/src/CodeGen_C.h' l='109' type='std::string Halide::Internal::CodeGen_C::print_type(Halide::Type , Halide::Internal::CodeGen_C::AppendSpaceIfNeeded space_option = DoNotAppendSpace)'/>
<use f='halide/src/CodeGen_C.cpp' l='1254' u='c' c='_ZN6Halide8Internal9CodeGen_C19add_vector_typedefsERKSt3setINS_4TypeESt4lessIS3_ESaIS3_EE'/>
<use f='halide/src/CodeGen_C.cpp' l='1255' u='c' c='_ZN6Halide8Internal9CodeGen_C19add_vector_typedefsERKSt3setINS_4TypeESt4lessIS3_ESaIS3_EE'/>
<def f='halide/src/CodeGen_C.cpp' l='1287' ll='1289' type='std::string Halide::Internal::CodeGen_C::print_type(Halide::Type type, Halide::Internal::CodeGen_C::AppendSpaceIfNeeded space_option = DoNotAppendSpace)'/>
<use f='halide/src/CodeGen_C.cpp' l='1299' u='c' c='_ZN6Halide8Internal9CodeGen_C17print_reinterpretB5cxx11ENS_4TypeERKNS_4ExprE'/>
<use f='halide/src/CodeGen_C.cpp' l='1301' u='c' c='_ZN6Halide8Internal9CodeGen_C17print_reinterpretB5cxx11ENS_4TypeERKNS_4ExprE'/>
<use f='halide/src/CodeGen_C.cpp' l='1607' u='c' c='_ZN6Halide8Internal9CodeGen_C7compileERKNS0_11LoweredFuncE'/>
<use f='halide/src/CodeGen_C.cpp' l='1759' u='c' c='_ZN6Halide8Internal9CodeGen_C15print_cast_exprB5cxx11ERKNS_4TypeERKNS_4ExprE'/>
<use f='halide/src/CodeGen_C.cpp' l='1763' u='c' c='_ZN6Halide8Internal9CodeGen_C15print_cast_exprB5cxx11ERKNS_4TypeERKNS_4ExprE'/>
<use f='halide/src/CodeGen_C.cpp' l='1778' u='c' c='_ZN6Halide8Internal9CodeGen_C16print_assignmentENS_4TypeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='halide/src/CodeGen_C.cpp' l='1865' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_3MaxE'/>
<use f='halide/src/CodeGen_C.cpp' l='1877' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_3MinE'/>
<use f='halide/src/CodeGen_C.cpp' l='1889' u='c' c='_ZN6Halide8Internal9CodeGen_C11visit_relopENS_4TypeERKNS_4ExprES5_PKcS7_'/>
<use f='halide/src/CodeGen_C.cpp' l='1938' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_6IntImmE'/>
<use f='halide/src/CodeGen_C.cpp' l='1948' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_7UIntImmE'/>
<use f='halide/src/CodeGen_C.cpp' l='2078' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2126' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2132' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2178' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2201' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2269' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2307' u='c' c='_ZN6Halide8Internal9CodeGen_C21print_scalarized_exprB5cxx11ERKNS_4ExprE'/>
<use f='halide/src/CodeGen_C.cpp' l='2312' u='c' c='_ZN6Halide8Internal9CodeGen_C21print_scalarized_exprB5cxx11ERKNS_4ExprE'/>
<use f='halide/src/CodeGen_C.cpp' l='2353' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4LoadE'/>
<use f='halide/src/CodeGen_C.cpp' l='2359' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4LoadE'/>
<use f='halide/src/CodeGen_C.cpp' l='2362' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4LoadE'/>
<use f='halide/src/CodeGen_C.cpp' l='2372' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4LoadE'/>
<use f='halide/src/CodeGen_C.cpp' l='2411' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_5StoreE'/>
<use f='halide/src/CodeGen_C.cpp' l='2417' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_5StoreE'/>
<use f='halide/src/CodeGen_C.cpp' l='2420' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_5StoreE'/>
<use f='halide/src/CodeGen_C.cpp' l='2433' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_5StoreE'/>
<use f='halide/src/CodeGen_C.cpp' l='2448' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_3LetE'/>
<use f='halide/src/CodeGen_C.cpp' l='2460' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_6SelectE'/>
<use f='halide/src/CodeGen_C.cpp' l='2541' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_7LetStmtE'/>
<use f='halide/src/CodeGen_C.cpp' l='2664' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4RampE'/>
<use f='halide/src/CodeGen_C.cpp' l='2672' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_9BroadcastE'/>
<use f='halide/src/CodeGen_C.cpp' l='2688' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_8AllocateE'/>
<use f='halide/src/CodeGen_C.cpp' l='2901' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_7ShuffleE'/>
<use f='halide/src/CodeGen_C.cpp' l='2902' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_7ShuffleE'/>
<use f='halide/src/CodeGen_C.cpp' l='2906' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_7ShuffleE'/>
<doc f='halide/src/CodeGen_C.h' l='104'>/** Emit the C name for a halide type. If space_option is AppendSpace,
     *  and there should be a space between the type and the next token,
     *  one is appended. (This allows both &quot;int foo&quot; and &quot;Foo *foo&quot; to be
     *  formatted correctly. Otherwise the latter is &quot;Foo * foo&quot;.)
     */</doc>
<ovr f='halide/src/CodeGen_D3D12Compute_Dev.cpp' l='207' c='_ZN6Halide8Internal12_GLOBAL__N_124CodeGen_D3D12Compute_Dev22CodeGen_D3D12Compute_C10print_typeB5cxx11ENS_4TypeENS0_9CodeGen_C19AppendSpaceIfNeededE'/>
<ovr f='halide/src/CodeGen_Metal_Dev.cpp' l='166' c='_ZN6Halide8Internal12_GLOBAL__N_117CodeGen_Metal_Dev15CodeGen_Metal_C10print_typeB5cxx11ENS_4TypeENS0_9CodeGen_C19AppendSpaceIfNeededE'/>
<ovr f='halide/src/CodeGen_OpenCL_Dev.cpp' l='114' c='_ZN6Halide8Internal12_GLOBAL__N_118CodeGen_OpenCL_Dev16CodeGen_OpenCL_C10print_typeB5cxx11ENS_4TypeENS0_9CodeGen_C19AppendSpaceIfNeededE'/>
<ovr f='halide/src/CodeGen_OpenGLCompute_Dev.cpp' l='156' c='_ZN6Halide8Internal12_GLOBAL__N_123CodeGen_OpenGLCompute_C10print_typeB5cxx11ENS_4TypeENS0_9CodeGen_C19AppendSpaceIfNeededE'/>
