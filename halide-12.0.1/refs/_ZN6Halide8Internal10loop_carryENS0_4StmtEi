<dec f='halide/build/include/Halide.h' l='30267' type='Halide::Internal::Stmt Halide::Internal::loop_carry(Halide::Internal::Stmt , int max_carried_values = 8)'/>
<doc f='halide/build/include/Halide.h' l='30261'>/** Reuse loads done on previous loop iterations by stashing them in
 * induction variables instead of redoing the load. If the loads are
 * predicated, the predicates need to match. Can be an optimization or
 * pessimization depending on how good the L1 cache is on the architecture
 * and how many memory issue slots there are. Currently only intended
 * for Hexagon. */</doc>
<dec f='halide/src/LoopCarry.h' l='15' type='Halide::Internal::Stmt Halide::Internal::loop_carry(Halide::Internal::Stmt , int max_carried_values = 8)'/>
<use f='halide/src/CodeGen_Hexagon.cpp' l='543' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_115CodeGen_Hexagon12compile_funcERKNS0_11LoweredFuncERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESD_'/>
<doc f='halide/src/LoopCarry.h' l='9'>/** Reuse loads done on previous loop iterations by stashing them in
 * induction variables instead of redoing the load. If the loads are
 * predicated, the predicates need to match. Can be an optimization or
 * pessimization depending on how good the L1 cache is on the architecture
 * and how many memory issue slots there are. Currently only intended
 * for Hexagon. */</doc>
<def f='halide/src/LoopCarry.cpp' l='561' ll='564' type='Halide::Internal::Stmt Halide::Internal::loop_carry(Halide::Internal::Stmt s, int max_carried_values = 8)'/>
