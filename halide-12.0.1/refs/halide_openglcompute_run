<dec f='halide/build/include/HalideRuntimeOpenGLCompute.h' l='39' type='int halide_openglcompute_run(void * user_context, void * state_ptr, const char * entry_name, int blocksX, int blocksY, int blocksZ, int threadsX, int threadsY, int threadsZ, int shared_mem_bytes, struct halide_type_t * arg_types, void ** args, int8_t * is_buffer)'/>
<doc f='halide/build/include/HalideRuntimeOpenGLCompute.h' l='33'>/** This function triggers execution of OpenGL program built around compute shader.
 *  Execution of the shader is parallelized into given number of blocks and threads.
 *
 *  This function doesn&apos;t wait for the completion of the shader, but it sets memory
 *  barrier which forces successive retrieval of output data to wait until shader is done.
 */</doc>
