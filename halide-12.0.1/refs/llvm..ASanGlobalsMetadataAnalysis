<inh f='halide/llvm-install/include/llvm/IR/PassManager.h' l='391' c='llvm::AnalysisInfoMixin'/>
<def f='halide/llvm-install/include/llvm/Transforms/Instrumentation/AddressSanitizer.h' l='80' ll='90'/>
<use f='halide/llvm-install/include/llvm/Transforms/Instrumentation/AddressSanitizer.h' l='81'/>
<use f='halide/llvm-install/include/llvm/Transforms/Instrumentation/AddressSanitizer.h' l='88'/>
<size>1</size>
<doc f='halide/llvm-install/include/llvm/Transforms/Instrumentation/AddressSanitizer.h' l='74'>/// The ASanGlobalsMetadataAnalysis initializes and returns a GlobalsMetadata
/// object. More specifically, ASan requires looking at all globals registered
/// in &apos;llvm.asan.globals&apos; before running, which only depends on reading module
/// level metadata. This analysis is required to run before running the
/// AddressSanitizerPass since it collects that metadata.
/// The legacy pass manager equivalent of this is ASanGlobalsMetadataLegacyPass.</doc>
<fun r='_ZN4llvm27ASanGlobalsMetadataAnalysis3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE'/>
<smbr r='llvm::ASanGlobalsMetadataAnalysis::Key' t='llvm::AnalysisKey'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='1134' c='_ZN6Halide8Internal12CodeGen_LLVM15optimize_moduleEv'/>
<size>1</size>
