<def f='halide/build-apps/abseil-cpp/absl/strings/string_view.h' l='400' ll='406' type='int absl::lts_2020_02_25::string_view::compare(absl::lts_2020_02_25::string_view x) const'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/string_view.h' l='411' u='c' c='_ZNK4absl14lts_2020_02_2511string_view7compareEmmS1_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/string_view.h' l='418' u='c' c='_ZNK4absl14lts_2020_02_2511string_view7compareEmmS1_mm'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/string_view.h' l='423' u='c' c='_ZNK4absl14lts_2020_02_2511string_view7compareEPKc'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/string_view.h' l='428' u='c' c='_ZNK4absl14lts_2020_02_2511string_view7compareEmmPKc'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/string_view.h' l='435' u='c' c='_ZNK4absl14lts_2020_02_2511string_view7compareEmmPKcm'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/string_view.h' l='572' u='c' c='_ZN4absl14lts_2020_02_25ltENS0_11string_viewES1_'/>
<doc f='halide/build-apps/abseil-cpp/absl/strings/string_view.h' l='392'>// string_view::compare()
  //
  // Performs a lexicographical comparison between the `string_view` and
  // another `absl::string_view`, returning -1 if `this` is less than, 0 if
  // `this` is equal to, and 1 if `this` is greater than the passed std::string
  // view. Note that in the case of data equality, a further comparison is made
  // on the respective sizes of the two `string_view`s to determine which is
  // smaller, equal, or greater.</doc>
