<dec f='halide/halide-install/include/Halide.h' l='792' type='int halide_get_trace_file(void * user_context)'/>
<doc f='halide/halide-install/include/Halide.h' l='786'>/** Halide calls this to retrieve the file descriptor to write binary
 * trace events to. The default implementation returns the value set
 * by halide_set_trace_file. Implement it yourself if you wish to use
 * a custom file descriptor per user_context. Return zero from your
 * implementation to tell Halide to print human-readable trace
 * information to stdout. */</doc>
<dec f='halide/halide-install/include/HalideRuntime.h' l='694' type='int halide_get_trace_file(void * user_context)'/>
<doc f='halide/halide-install/include/HalideRuntime.h' l='688'>/** Halide calls this to retrieve the file descriptor to write binary
 * trace events to. The default implementation returns the value set
 * by halide_set_trace_file. Implement it yourself if you wish to use
 * a custom file descriptor per user_context. Return zero from your
 * implementation to tell Halide to print human-readable trace
 * information to stdout. */</doc>
<dec f='halide/build-apps/c_backend/pipeline_c.halide_generated.cpp' l='854' type='int halide_get_trace_file(void * user_context)'/>
<doc f='halide/build-apps/c_backend/pipeline_c.halide_generated.cpp' l='848'>/** Halide calls this to retrieve the file descriptor to write binary
 * trace events to. The default implementation returns the value set
 * by halide_set_trace_file. Implement it yourself if you wish to use
 * a custom file descriptor per user_context. Return zero from your
 * implementation to tell Halide to print human-readable trace
 * information to stdout. */</doc>
<dec f='halide/build-apps/c_backend/pipeline_cpp_cpp.halide_generated.cpp' l='854' type='int halide_get_trace_file(void * user_context)'/>
<doc f='halide/build-apps/c_backend/pipeline_cpp_cpp.halide_generated.cpp' l='848'>/** Halide calls this to retrieve the file descriptor to write binary
 * trace events to. The default implementation returns the value set
 * by halide_set_trace_file. Implement it yourself if you wish to use
 * a custom file descriptor per user_context. Return zero from your
 * implementation to tell Halide to print human-readable trace
 * information to stdout. */</doc>
<dec f='halide/build/include/HalideRuntime.h' l='694' type='int halide_get_trace_file(void * user_context)'/>
<doc f='halide/build/include/HalideRuntime.h' l='688'>/** Halide calls this to retrieve the file descriptor to write binary
 * trace events to. The default implementation returns the value set
 * by halide_set_trace_file. Implement it yourself if you wish to use
 * a custom file descriptor per user_context. Return zero from your
 * implementation to tell Halide to print human-readable trace
 * information to stdout. */</doc>
<dec f='halide/build/include/Halide.h' l='792' type='int halide_get_trace_file(void * user_context)'/>
<doc f='halide/build/include/Halide.h' l='786'>/** Halide calls this to retrieve the file descriptor to write binary
 * trace events to. The default implementation returns the value set
 * by halide_set_trace_file. Implement it yourself if you wish to use
 * a custom file descriptor per user_context. Return zero from your
 * implementation to tell Halide to print human-readable trace
 * information to stdout. */</doc>
<dec f='halide/src/runtime/HalideRuntime.h' l='694' type='int halide_get_trace_file(void * user_context)'/>
<doc f='halide/src/runtime/HalideRuntime.h' l='688'>/** Halide calls this to retrieve the file descriptor to write binary
 * trace events to. The default implementation returns the value set
 * by halide_set_trace_file. Implement it yourself if you wish to use
 * a custom file descriptor per user_context. Return zero from your
 * implementation to tell Halide to print human-readable trace
 * information to stdout. */</doc>
<dec f='halide/build/tutorial/lesson_10_halide.h' l='766' type='int halide_get_trace_file(void * user_context)'/>
<doc f='halide/build/tutorial/lesson_10_halide.h' l='760'>/** Halide calls this to retrieve the file descriptor to write binary
 * trace events to. The default implementation returns the value set
 * by halide_set_trace_file. Implement it yourself if you wish to use
 * a custom file descriptor per user_context. Return zero from your
 * implementation to tell Halide to print human-readable trace
 * information to stdout. */</doc>
