<inh f='halide/llvm-install/include/llvm/Support/raw_ostream.h' l='50' c='llvm::raw_ostream'/>
<def f='halide/llvm-install/include/llvm/Support/FormattedStream.h' l='30' ll='168'/>
<use f='halide/llvm-install/include/llvm/Support/FormattedStream.h' l='124' c='_ZN4llvm21formatted_raw_ostream11PadToColumnEj'/>
<use f='halide/llvm-install/include/llvm/Support/FormattedStream.h' l='172' c='_ZN4llvm5foutsEv'/>
<use f='halide/llvm-install/include/llvm/Support/FormattedStream.h' l='176' c='_ZN4llvm5ferrsEv'/>
<use f='halide/llvm-install/include/llvm/Support/FormattedStream.h' l='180' c='_ZN4llvm5fdbgsEv'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='82' c='_ZN4llvm17createAsmStreamerERNS_9MCContextESt10unique_ptrINS_21formatted_raw_ostreamESt14default_deleteIS3_EEbbPNS_13MCInstPrinterEOS2_INS_13MCCodeEmi6492714'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='188'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='526' c='_ZNK4llvm6Target17createAsmStreamerERNS_9MCContextESt10unique_ptrINS_21formatted_raw_ostreamESt14default_deleteIS4_EEbbPNS_13MCInstPrinterEOS3_INS_13M13969786'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='532' c='_ZNK4llvm6Target17createAsmStreamerERNS_9MCContextESt10unique_ptrINS_21formatted_raw_ostreamESt14default_deleteIS4_EEbbPNS_13MCInstPrinterEOS3_INS_13M13969786'/>
<use f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='541' c='_ZNK4llvm6Target23createAsmTargetStreamerERNS_10MCStreamerERNS_21formatted_raw_ostreamEPNS_13MCInstPrinterEb'/>
<size>120</size>
<doc f='halide/llvm-install/include/llvm/Support/FormattedStream.h' l='23'>/// formatted_raw_ostream - A raw_ostream that wraps another one and keeps track
/// of line and column position, allowing padding out to specific column
/// boundaries and querying the number of lines written to the stream. This
/// assumes that the contents of the stream is valid UTF-8 encoded text. This
/// doesn&apos;t attempt to handle everything Unicode can do (combining characters,
/// right-to-left markers, etc), but should cover the cases likely to appear in
/// source code or diagnostic messages.</doc>
<mbr r='llvm::formatted_raw_ostream::TheStream' o='512' t='llvm::raw_ostream *'/>
<mbr r='llvm::formatted_raw_ostream::Position' o='576' t='std::pair&lt;unsigned int, unsigned int&gt;'/>
<mbr r='llvm::formatted_raw_ostream::Scanned' o='640' t='const char *'/>
<mbr r='llvm::formatted_raw_ostream::PartialUTF8Char' o='704' t='SmallString&lt;4&gt;'/>
<fun r='_ZN4llvm21formatted_raw_ostream10write_implEPKcm'/>
<fun r='_ZNK4llvm21formatted_raw_ostream11current_posEv'/>
<fun r='_ZN4llvm21formatted_raw_ostream15ComputePositionEPKcm'/>
<fun r='_ZN4llvm21formatted_raw_ostream14UpdatePositionEPKcm'/>
<fun r='_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE'/>
<fun r='_ZN4llvm21formatted_raw_ostreamC1ERNS_11raw_ostreamE'/>
<fun r='_ZN4llvm21formatted_raw_ostreamC1Ev'/>
<fun r='_ZN4llvm21formatted_raw_ostreamD1Ev'/>
<fun r='_ZN4llvm21formatted_raw_ostream11PadToColumnEj'/>
<fun r='_ZN4llvm21formatted_raw_ostream9getColumnEv'/>
<fun r='_ZN4llvm21formatted_raw_ostream7getLineEv'/>
<fun r='_ZN4llvm21formatted_raw_ostream10resetColorEv'/>
<fun r='_ZN4llvm21formatted_raw_ostream12reverseColorEv'/>
<fun r='_ZN4llvm21formatted_raw_ostream11changeColorENS_11raw_ostream6ColorsEbb'/>
<fun r='_ZNK4llvm21formatted_raw_ostream12is_displayedEv'/>
<fun r='_ZN4llvm21formatted_raw_ostream13releaseStreamEv'/>
