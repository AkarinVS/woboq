<dec f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseMatrix.h' l='448' type='void Eigen::SparseMatrix::setFromTriplets(const InputIterators &amp; begin, const InputIterators &amp; end, DupFunctor dup_func)'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseMatrix.h' l='1119' ll='1124' type='void Eigen::SparseMatrix::setFromTriplets(const InputIterators &amp; begin, const InputIterators &amp; end, DupFunctor dup_func)'/>
<doc f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseMatrix.h' l='1110'>/** The same as setFromTriplets but when duplicates are met the functor \a dup_func is applied:
  * \code
  * value = dup_func(OldValue, NewValue)
  * \endcode 
  * Here is a C++11 example keeping the latest entry only:
  * \code
  * mat.setFromTriplets(triplets.begin(), triplets.end(), [] (const Scalar&amp;,const Scalar &amp;b) { return b; });
  * \endcode
  */</doc>
