<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/kernel_utils.h' l='66' type='void tflite::kernel_utils::RnnBatchStep(const float * input_ptr_batch, const int8_t * input_weights_ptr, float input_weights_scale, const int8_t * recurrent_weights_ptr, float recurrent_weights_scale, const float * bias_ptr, int input_size, int num_units, int batch_size, int output_batch_leading_dim, TfLiteFusedActivation activation, int8_t * quantized_input_ptr_batch, int8_t * quantized_hidden_state_ptr_batch, float * scaling_factors, float * hidden_state_ptr_batch, float * output_ptr_batch, bool asymmetric_quantize_inputs, int32_t * zero_points, int32_t * accum_scratch, int32_t * row_sums, bool * compute_row_sums)'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/basic_rnn.cc' l='269' u='c' c='_ZN6tflite3ops7builtin3rnn10EvalHybridEPK12TfLiteTensorS5_S5_S5_PK15TfLiteRNNParamsPS3_S9_S9_S9_S9_S9_S9_S9_Pb'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/kernel_utils.h' l='56'>// Performs a quantized RNN batch inference step. Same as above, but for
// quantization purposes, we also pass in quantized_hidden_state_ptr_batch and
// quantized_input_ptr_batch pointers for temporary storage of the quantized
// values of hidden_state_ptr_batch and input_ptr_batch, respectively.
// These temporary storages are expected to be preallocated to the same size as
// the respective pointers.
// An additional preallocated temporary storage &apos;scaling_factors&apos; (of size
// batch_size) is used to store the scaling factors of the quantization (used
// for recovery).
// {input,recurrent}_weights_scale params are used for dequantization/recovery.</doc>
<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/internal/kernel_utils.cc' l='119' ll='141' type='void tflite::kernel_utils::RnnBatchStep(const float * input_ptr_batch, const int8_t * input_weights_ptr, float input_weights_scale, const int8_t * recurrent_weights_ptr, float recurrent_weights_scale, const float * bias_ptr, int input_size, int num_units, int batch_size, int output_batch_leading_dim, TfLiteFusedActivation activation, int8_t * quantized_input_ptr_batch, int8_t * quantized_hidden_state_ptr_batch, float * scaling_factors, float * hidden_state_ptr_batch, float * output_ptr_batch, bool asymmetric_quantize_inputs, int32_t * zero_points, int32_t * accum_scratch, int32_t * row_sums, bool * compute_row_sums)'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/unidirectional_sequence_rnn.cc' l='320' u='c' c='_ZN6tflite3ops7builtin27unidirectional_sequence_rnn10EvalHybridEPK12TfLiteTensorS5_S5_S5_PK23TfLiteSequenceRNNParamsPS3_S9_S9_S9_S9_S9_S9_S9_Pb'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/unidirectional_sequence_rnn.cc' l='342' u='c' c='_ZN6tflite3ops7builtin27unidirectional_sequence_rnn10EvalHybridEPK12TfLiteTensorS5_S5_S5_PK23TfLiteSequenceRNNParamsPS3_S9_S9_S9_S9_S9_S9_S9_Pb'/>
