<dec f='halide/build-apps/eigen/Eigen/src/Core/util/XprHelper.h' l='474' type='0'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/util/XprHelper.h' l='475' u='r'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/util/XprHelper.h' l='476' u='r'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/util/XprHelper.h' l='470'>//      Then CoeffReadCost will be small (e.g., 1) but we still have to evaluate, especially if n&gt;1.
                                                  //      This situation is already taken care by the EvalBeforeNestingBit flag, which is turned ON
                                                  //      for all evaluator creating a temporary. This flag is then propagated by the parent evaluators.
                                                  //      Another solution could be to count the number of temps?</doc>
