<dec f='halide/build-apps/abseil-cpp/absl/flags/internal/usage.h' l='52' type='void absl::lts_2020_02_25::flags_internal::FlagsHelp(std::ostream &amp; out, absl::string_view filter, absl::lts_2020_02_25::flags_internal::HelpFormat format, absl::string_view program_usage_message)'/>
<def f='halide/build-apps/abseil-cpp/absl/flags/internal/usage.cc' l='338' ll='344' type='void absl::lts_2020_02_25::flags_internal::FlagsHelp(std::ostream &amp; out, absl::string_view filter, absl::lts_2020_02_25::flags_internal::HelpFormat format, absl::string_view program_usage_message)'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/usage.cc' l='360' u='c' c='_ZN4absl14lts_2020_02_2514flags_internal16HandleUsageFlagsERSoNS0_11string_viewE'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/usage.cc' l='366' u='c' c='_ZN4absl14lts_2020_02_2514flags_internal16HandleUsageFlagsERSoNS0_11string_viewE'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/usage.cc' l='373' u='c' c='_ZN4absl14lts_2020_02_2514flags_internal16HandleUsageFlagsERSoNS0_11string_viewE'/>
<doc f='halide/build-apps/abseil-cpp/absl/flags/internal/usage.cc' l='335'>// --------------------------------------------------------------------
// Produces the help messages for all flags matching the filter.
// If filter is empty produces help messages for all flags.</doc>
<doc f='halide/build-apps/abseil-cpp/absl/flags/internal/usage.h' l='43'>// Produces the help messages for all flags matching the filter. A flag matches
// the filter if it is defined in a file with a filename which includes
// filter string as a substring. You can use &apos;/&apos; and &apos;.&apos; to restrict the
// matching to a specific file names. For example:
//   FlagsHelp(out, &quot;/path/to/file.&quot;);
// restricts help to only flags which resides in files named like:
//  .../path/to/file.&lt;ext&gt;
// for any extension &apos;ext&apos;. If the filter is empty this function produces help
// messages for all flags.</doc>
