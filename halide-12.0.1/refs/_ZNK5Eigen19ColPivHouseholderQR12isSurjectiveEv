<def f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='298' ll='302' type='bool Eigen::ColPivHouseholderQR::isSurjective() const'/>
<use f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='313' u='c' c='_ZNK5Eigen19ColPivHouseholderQR12isInvertibleEv'/>
<doc f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='291'>/** \returns true if the matrix of which *this is the QR decomposition represents a surjective
      *          linear map; false otherwise.
      *
      * \note This method has to determine which pivots should be considered nonzero.
      *       For that, it uses the threshold value that you can control by calling
      *       setThreshold(const RealScalar&amp;).
      */</doc>
