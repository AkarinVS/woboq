<dec f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='99' type='bool llvm::formLCSSA(llvm::Loop &amp; L, const llvm::DominatorTree &amp; DT, const llvm::LoopInfo * LI, llvm::ScalarEvolution * SE)'/>
<doc f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='87'>/// Put loop into LCSSA form.
///
/// Looks at all instructions in the loop which have uses outside of the
/// current loop. For each, an LCSSA PHI node is inserted and the uses outside
/// the loop are rewritten to use this node. Sub-loops must be in LCSSA form
/// already.
///
/// LoopInfo and DominatorTree are required and preserved.
///
/// If ScalarEvolution is passed in, it will be preserved.
///
/// Returns true if any modifications are made to the loop.</doc>
