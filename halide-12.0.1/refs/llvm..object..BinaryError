<inh f='halide/llvm-install/include/llvm/Support/Error.h' l='350' c='llvm::ErrorInfo'/>
<def f='halide/llvm-install/include/llvm/Object/Error.h' l='53' ll='61'/>
<use f='halide/llvm-install/include/llvm/Object/Error.h' l='53'/>
<use f='halide/llvm-install/include/llvm/Object/Error.h' l='67'/>
<size>24</size>
<doc f='halide/llvm-install/include/llvm/Object/Error.h' l='45'>/// Base class for all errors indicating malformed binary files.
///
/// Having a subclass for all malformed binary files allows archive-walking
/// code to skip malformed files without having to understand every possible
/// way that a binary file might be malformed.
///
/// Currently inherits from ECError for easy interoperability with
/// std::error_code, but this will be removed in the future.</doc>
<fun r='_ZN4llvm6object11BinaryError6anchorEv'/>
<smbr r='llvm::object::BinaryError::ID' t='char'/>
<fun r='_ZN4llvm6object11BinaryErrorC1Ev'/>
