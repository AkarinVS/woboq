<def f='halide/build-apps/abseil-cpp/absl/strings/str_split.h' l='328' ll='330'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/str_split.h' l='491' c='_ZN4absl14lts_2020_02_258StrSplitENS0_16strings_internal23ConvertibleToStringViewET_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/str_split.h' l='495' c='_ZN4absl14lts_2020_02_258StrSplitENS0_16strings_internal23ConvertibleToStringViewET_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/str_split.h' l='496' c='_ZN4absl14lts_2020_02_258StrSplitENS0_16strings_internal23ConvertibleToStringViewET_'/>
<size>1</size>
<doc f='halide/build-apps/abseil-cpp/absl/strings/str_split.h' l='300'>//------------------------------------------------------------------------------
// Predicates
//------------------------------------------------------------------------------
//
// Predicates filter the results of a `StrSplit()` by determining whether or not
// a resultant element is included in the result set. A predicate may be passed
// as an optional third argument to the `StrSplit()` function.
//
// Predicates are unary functions (or functors) that take a single
// `absl::string_view` argument and return a bool indicating whether the
// argument should be included (`true`) or excluded (`false`).
//
// Predicates are useful when filtering out empty substrings. By default, empty
// substrings may be returned by `StrSplit()`, which is similar to the way split
// functions work in other programming languages.

// AllowEmpty()
//
// Always returns `true`, indicating that all strings--including empty
// strings--should be included in the split output. This predicate is not
// strictly needed because this is the default behavior of `StrSplit()`;
// however, it might be useful at some call sites to make the intent explicit.
//
// Example:
//
//  std::vector&lt;std::string&gt; v = absl::StrSplit(&quot; a , ,,b,&quot;, &apos;,&apos;, AllowEmpty());
//
//  // v[0] == &quot; a &quot;, v[1] == &quot; &quot;, v[2] == &quot;&quot;, v[3] = &quot;b&quot;, v[4] == &quot;&quot;</doc>
<fun r='_ZNK4absl14lts_2020_02_2510AllowEmptyclENS0_11string_viewE'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/marshalling.cc' l='157' c='_ZN4absl14lts_2020_02_2514flags_internal13AbslParseFlagENS0_11string_viewEPSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EEPS9_'/>
<size>1</size>
