<dec f='halide/build/include/Halide.h' l='17425' type='Halide::Func &amp; Halide::Func::set_estimates(const Halide::Region &amp; estimates)'/>
<use f='halide/build/include/Halide.h' l='25583' u='c' c='_ZN6Halide8Internal20GeneratorOutput_Func13set_estimatesERKSt6vectorINS_5RangeESaIS3_EE'/>
<doc f='halide/build/include/Halide.h' l='17421'>/** Set (min, extent) estimates for all dimensions in the Func
     * at once; this is equivalent to calling `set_estimate(args()[n], min, extent)`
     * repeatedly, but slightly terser. The size of the estimates vector
     * must match the dimensionality of the Func. */</doc>
<use f='halide/python_bindings/src/PyFunc.cpp' l='325' u='a' c='_ZN6Halide14PythonBindings11define_funcERN8pybind117module_E'/>
<dec f='halide/src/Func.h' l='1545' type='Halide::Func &amp; Halide::Func::set_estimates(const Halide::Region &amp; estimates)'/>
<doc f='halide/src/Func.h' l='1541'>/** Set (min, extent) estimates for all dimensions in the Func
     * at once; this is equivalent to calling `set_estimate(args()[n], min, extent)`
     * repeatedly, but slightly terser. The size of the estimates vector
     * must match the dimensionality of the Func. */</doc>
<def f='halide/src/Func.cpp' l='2289' ll='2299' type='Halide::Func &amp; Halide::Func::set_estimates(const Halide::Region &amp; estimates)'/>
<use f='halide/src/Generator.h' l='2649' u='c' c='_ZN6Halide8Internal20GeneratorOutput_Func13set_estimatesERKSt6vectorINS_5RangeESaIS3_EE'/>
<use f='halide/src/Generator.cpp' l='1627' u='c' c='_ZN6Halide8Internal13GeneratorBase21build_gradient_moduleERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='halide/src/Generator.cpp' l='2008' u='c' c='_ZN6Halide8Internal18GeneratorInputBase18set_estimates_implERKSt6vectorINS_5RangeESaIS3_EE'/>
