<def f='halide/build-apps/abseil-cpp/absl/strings/internal/str_format/extension.h' l='362' ll='366' type='absl::lts_2020_02_25::str_format_internal::FormatConversionCharSet absl::lts_2020_02_25::str_format_internal::operator|(absl::lts_2020_02_25::str_format_internal::FormatConversionCharSet a, absl::lts_2020_02_25::str_format_internal::FormatConversionCharSet b)'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/internal/str_format/arg.h' l='64' u='c' c='_ZN4absl14lts_2020_02_2519str_format_internal17FormatConvertImplEPKcNS1_20FormatConversionSpecEPNS1_14FormatSinkImplE'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/internal/str_format/arg.h' l='109' u='c'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/internal/str_format/arg.h' l='109' u='c'/>
<doc f='halide/build-apps/abseil-cpp/absl/strings/internal/str_format/extension.h' l='357'>// Type safe OR operator.
// We need this for two reasons:
//  1. operator| on enums makes them decay to integers and the result is an
//     integer. We need the result to stay as an enum.
//  2. We use &quot;enum class&quot; which would not work even if we accepted the decay.</doc>
<use f='halide/build-apps/abseil-cpp/absl/strings/internal/str_format/arg.cc' l='272' u='c' c='_ZN4absl14lts_2020_02_2519str_format_internal17FormatConvertImplEPKcNS1_20FormatConversionSpecEPNS1_14FormatSinkImplE'/>
