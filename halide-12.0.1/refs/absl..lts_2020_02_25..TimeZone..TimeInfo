<def f='halide/build-apps/abseil-cpp/absl/time/time.h' l='924' ll='933'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='964' c='_ZNK4absl14lts_2020_02_258TimeZone2AtENS0_13time_internal4cctz6detail10civil_timeINS2_10second_tagEEE'/>
<size>56</size>
<doc f='halide/build-apps/abseil-cpp/absl/time/time.h' l='910'>// TimeZone::TimeInfo
  //
  // Information about the absolute times corresponding to a civil time.
  // (Subseconds must be handled separately.)
  //
  // It is possible for a caller to pass a civil-time value that does
  // not represent an actual or unique instant in time (due to a shift
  // in UTC offset in the TimeZone, which results in a discontinuity in
  // the civil-time components). For example, a daylight-saving-time
  // transition skips or repeats civil times---in the United States,
  // March 13, 2011 02:15 never occurred, while November 6, 2011 01:15
  // occurred twice---so requests for such times are not well-defined.
  // To account for these possibilities, `absl::TimeZone::TimeInfo` is
  // richer than just a single `absl::Time`.</doc>
<mbr r='absl::lts_2020_02_25::TimeZone::TimeInfo::kind' o='0' t='enum CivilKind'/>
<mbr r='absl::lts_2020_02_25::TimeZone::TimeInfo::pre' o='64' t='absl::lts_2020_02_25::Time'/>
<mbr r='absl::lts_2020_02_25::TimeZone::TimeInfo::trans' o='192' t='absl::lts_2020_02_25::Time'/>
<mbr r='absl::lts_2020_02_25::TimeZone::TimeInfo::post' o='320' t='absl::lts_2020_02_25::Time'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.cc' l='367' c='_ZNK4absl14lts_2020_02_258TimeZone2AtENS0_13time_internal4cctz6detail10civil_timeINS2_10second_tagEEE'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.cc' l='371' c='_ZNK4absl14lts_2020_02_258TimeZone2AtENS0_13time_internal4cctz6detail10civil_timeINS2_10second_tagEEE'/>
<size>56</size>
