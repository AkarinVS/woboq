<dec f='halide/llvm-install/include/llvm/IR/ConstantRange.h' l='114' type='static llvm::ConstantRange llvm::ConstantRange::makeSatisfyingICmpRegion(CmpInst::Predicate Pred, const llvm::ConstantRange &amp; Other)'/>
<doc f='halide/llvm-install/include/llvm/IR/ConstantRange.h' l='106'>/// Produce the largest range such that all values in the returned range
  /// satisfy the given predicate with all values contained within Other.
  /// Formally, this returns a subset of
  /// &apos;intersection over all y in Other . { x : icmp op x y is true }&apos;.  If the
  /// exact answer is not representable as a ConstantRange, the return value
  /// will be a proper subset of the above.
  ///
  /// Example: Pred = ult and Other = i8 [2, 5) returns [0, 2)</doc>
