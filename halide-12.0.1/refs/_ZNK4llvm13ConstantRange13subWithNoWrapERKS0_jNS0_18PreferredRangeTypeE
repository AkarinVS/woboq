<dec f='halide/llvm-install/include/llvm/IR/ConstantRange.h' l='374' type='llvm::ConstantRange llvm::ConstantRange::subWithNoWrap(const llvm::ConstantRange &amp; Other, unsigned int NoWrapKind, llvm::ConstantRange::PreferredRangeType RangeType = Smallest) const'/>
<doc f='halide/llvm-install/include/llvm/IR/ConstantRange.h' l='369'>/// Return a new range representing the possible values resulting
  /// from an subtraction with wrap type \p NoWrapKind of a value in this
  /// range and a value in \p Other.
  /// If the result range is disjoint, the preferred range is determined by the
  /// \p PreferredRangeType.</doc>
