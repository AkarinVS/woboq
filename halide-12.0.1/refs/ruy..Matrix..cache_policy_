<use f='halide/build-apps/ruy/ruy/matrix.h' l='149' u='r' c='_ZNK3ruy6Matrix12cache_policyEv'/>
<use f='halide/build-apps/ruy/ruy/matrix.h' l='150' u='w' c='_ZN3ruy6Matrix16set_cache_policyENS_11CachePolicyE'/>
<dec f='halide/build-apps/ruy/ruy/matrix.h' l='166' type='ruy::CachePolicy'/>
<doc f='halide/build-apps/ruy/ruy/matrix.h' l='160'>// When the data pointed to by this matrix is constant data, so that it is
  // valid to assume that equality of pointers implies equality of data,
  // a CachePolicy may be used instead of the default kNeverCache,
  // which will enable ruy to take advantage of this constancy of the data to
  // cache the packing work, which can be a large speedup in matrix*vector
  // and other narrow shapes.</doc>
