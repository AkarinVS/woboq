<dec f='halide/build-apps/eigen/Eigen/src/Core/MatrixBase.h' l='228' type='Eigen::MatrixBase::DiagonalDynamicIndexReturnType Eigen::MatrixBase::diagonal(Eigen::Index index)'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/Diagonal.h' l='215' ll='220' type='typename MatrixBase&lt;Derived&gt;::DiagonalDynamicIndexReturnType Eigen::MatrixBase::diagonal(Eigen::Index index)'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/Diagonal.h' l='204'>/** \returns an expression of the \a DiagIndex-th sub or super diagonal of the matrix \c *this
  *
  * \c *this is not required to be square.
  *
  * The template parameter \a DiagIndex represent a super diagonal if \a DiagIndex &gt; 0
  * and a sub diagonal otherwise. \a DiagIndex == 0 is equivalent to the main diagonal.
  *
  * Example: \include MatrixBase_diagonal_int.cpp
  * Output: \verbinclude MatrixBase_diagonal_int.out
  *
  * \sa MatrixBase::diagonal(), class Diagonal */</doc>
