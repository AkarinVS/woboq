<dec f='halide/halide-install/include/Halide.h' l='6454' type='std::string'/>
<use f='halide/halide-install/include/Halide.h' l='6463' u='w' c='_ZN6Halide8Internal16ApplySplitResultC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_4ExprENS1_4TypeE'/>
<use f='halide/halide-install/include/Halide.h' l='6466' u='w' c='_ZN6Halide8Internal16ApplySplitResultC1ENS_4ExprE'/>
<offset>0</offset>
<doc f='halide/halide-install/include/Halide.h' l='6449'>// If type is &quot;Substitution&quot;, then this represents a substitution of
    // variable &quot;name&quot; to value. If type is &quot;LetStmt&quot;, we should insert a new
    // let stmt defining &quot;name&quot; with value &quot;value&quot;. If type is &quot;Predicate&quot;, we
    // should ignore &quot;name&quot; and the predicate is &quot;value&quot;.</doc>
<dec f='halide/build/include/Halide.h' l='6454' type='std::string'/>
<use f='halide/build/include/Halide.h' l='6463' u='w' c='_ZN6Halide8Internal16ApplySplitResultC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_4ExprENS1_4TypeE'/>
<use f='halide/build/include/Halide.h' l='6466' u='w' c='_ZN6Halide8Internal16ApplySplitResultC1ENS_4ExprE'/>
<offset>0</offset>
<doc f='halide/build/include/Halide.h' l='6449'>// If type is &quot;Substitution&quot;, then this represents a substitution of
    // variable &quot;name&quot; to value. If type is &quot;LetStmt&quot;, we should insert a new
    // let stmt defining &quot;name&quot; with value &quot;value&quot;. If type is &quot;Predicate&quot;, we
    // should ignore &quot;name&quot; and the predicate is &quot;value&quot;.</doc>
<dec f='halide/src/ApplySplit.h' l='27' type='std::string'/>
<use f='halide/src/ApplySplit.h' l='36' u='w' c='_ZN6Halide8Internal16ApplySplitResultC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_4ExprENS1_4TypeE'/>
<use f='halide/src/ApplySplit.h' l='39' u='w' c='_ZN6Halide8Internal16ApplySplitResultC1ENS_4ExprE'/>
<offset>0</offset>
<doc f='halide/src/ApplySplit.h' l='22'>// If type is &quot;Substitution&quot;, then this represents a substitution of
    // variable &quot;name&quot; to value. If type is &quot;LetStmt&quot;, we should insert a new
    // let stmt defining &quot;name&quot; with value &quot;value&quot;. If type is &quot;Predicate&quot;, we
    // should ignore &quot;name&quot; and the predicate is &quot;value&quot;.</doc>
<use f='halide/src/Func.cpp' l='495' u='r' c='_ZN6Halide12_GLOBAL__N_118apply_split_resultERKSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_4ExprEESaISA_EERKS1_INS_8Inter12394972'/>
<use f='halide/src/Func.cpp' l='496' u='r' c='_ZN6Halide12_GLOBAL__N_118apply_split_resultERKSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_4ExprEESaISA_EERKS1_INS_8Inter12394972'/>
<use f='halide/src/Func.cpp' l='497' u='r' c='_ZN6Halide12_GLOBAL__N_118apply_split_resultERKSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_4ExprEESaISA_EERKS1_INS_8Inter12394972'/>
<use f='halide/src/ScheduleFunctions.cpp' l='127' u='r' c='_ZN6Halide8Internal12_GLOBAL__N_115build_loop_nestERKNS0_4StmtERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiRKNS0_8FunctionERKNS0_10DefinitionEb'/>
<use f='halide/src/ScheduleFunctions.cpp' l='129' u='r' c='_ZN6Halide8Internal12_GLOBAL__N_115build_loop_nestERKNS0_4StmtERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiRKNS0_8FunctionERKNS0_10DefinitionEb'/>
