<dec f='halide/halide-install/include/Halide.h' l='14861' type='static void Halide::Pipeline::set_default_autoscheduler_name(const std::string &amp; autoscheduler_name)'/>
<doc f='halide/halide-install/include/Halide.h' l='14849'>/** Globally set the default autoscheduler method to use whenever
     * autoscheduling any Pipeline when no name is specified. If the autoscheduler_name isn&apos;t in the
     * current table of known autoschedulers, assert-fail.
     *
     * At this time, well-known autoschedulers include:
     *  &quot;Mullapudi2016&quot; -- heuristics-based; the first working autoscheduler; currently built in to libHalide
     *                     see http://graphics.cs.cmu.edu/projects/halidesched/
     *  &quot;Adams2019&quot;     -- aka &quot;the ML autoscheduler&quot;; currently located in apps/autoscheduler
     *                     see https://halide-lang.org/papers/autoscheduler2019.html
     *  &quot;Li2018&quot;        -- aka &quot;the gradient autoscheduler&quot;; currently located in apps/gradient_autoscheduler.
     *                     see https://people.csail.mit.edu/tzumao/gradient_halide
     */</doc>
<dec f='halide/build/include/Halide.h' l='14861' type='static void Halide::Pipeline::set_default_autoscheduler_name(const std::string &amp; autoscheduler_name)'/>
<doc f='halide/build/include/Halide.h' l='14849'>/** Globally set the default autoscheduler method to use whenever
     * autoscheduling any Pipeline when no name is specified. If the autoscheduler_name isn&apos;t in the
     * current table of known autoschedulers, assert-fail.
     *
     * At this time, well-known autoschedulers include:
     *  &quot;Mullapudi2016&quot; -- heuristics-based; the first working autoscheduler; currently built in to libHalide
     *                     see http://graphics.cs.cmu.edu/projects/halidesched/
     *  &quot;Adams2019&quot;     -- aka &quot;the ML autoscheduler&quot;; currently located in apps/autoscheduler
     *                     see https://halide-lang.org/papers/autoscheduler2019.html
     *  &quot;Li2018&quot;        -- aka &quot;the gradient autoscheduler&quot;; currently located in apps/gradient_autoscheduler.
     *                     see https://people.csail.mit.edu/tzumao/gradient_halide
     */</doc>
<use f='halide/python_bindings/src/PyPipeline.cpp' l='57' u='a' c='_ZN6Halide14PythonBindings15define_pipelineERN8pybind117module_E'/>
<dec f='halide/src/Pipeline.h' l='205' type='static void Halide::Pipeline::set_default_autoscheduler_name(const std::string &amp; autoscheduler_name)'/>
<doc f='halide/src/Pipeline.h' l='193'>/** Globally set the default autoscheduler method to use whenever
     * autoscheduling any Pipeline when no name is specified. If the autoscheduler_name isn&apos;t in the
     * current table of known autoschedulers, assert-fail.
     *
     * At this time, well-known autoschedulers include:
     *  &quot;Mullapudi2016&quot; -- heuristics-based; the first working autoscheduler; currently built in to libHalide
     *                     see http://graphics.cs.cmu.edu/projects/halidesched/
     *  &quot;Adams2019&quot;     -- aka &quot;the ML autoscheduler&quot;; currently located in apps/autoscheduler
     *                     see https://halide-lang.org/papers/autoscheduler2019.html
     *  &quot;Li2018&quot;        -- aka &quot;the gradient autoscheduler&quot;; currently located in apps/gradient_autoscheduler.
     *                     see https://people.csail.mit.edu/tzumao/gradient_halide
     */</doc>
<use f='halide/src/Generator.cpp' l='836' u='c' c='_ZN6Halide8Internal26generate_filter_main_innerEiPPcRSo'/>
<def f='halide/src/Pipeline.cpp' l='237' ll='240' type='static void Halide::Pipeline::set_default_autoscheduler_name(const std::string &amp; autoscheduler_name)'/>
<doc f='halide/src/Pipeline.cpp' l='236'>/* static */</doc>
