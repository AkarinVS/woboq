<dec f='halide/halide-install/include/Halide.h' l='15184' type='void Halide::Pipeline::infer_input_bounds(const std::vector&lt;int32_t&gt; &amp; sizes, const Halide::Target &amp; target = get_jit_target_from_environment(), const Halide::ParamMap &amp; param_map = ParamMap::empty_map())'/>
<doc f='halide/halide-install/include/Halide.h' l='15178'>/** For a given size of output, or a given set of output buffers,
     * determine the bounds required of all unbound ImageParams
     * referenced. Communicates the result by allocating new buffers
     * of the appropriate size and binding them to the unbound
     * ImageParams. */
    // @{</doc>
<dec f='halide/build/include/Halide.h' l='15184' type='void Halide::Pipeline::infer_input_bounds(const std::vector&lt;int32_t&gt; &amp; sizes, const Halide::Target &amp; target = get_jit_target_from_environment(), const Halide::ParamMap &amp; param_map = ParamMap::empty_map())'/>
<doc f='halide/build/include/Halide.h' l='15178'>/** For a given size of output, or a given set of output buffers,
     * determine the bounds required of all unbound ImageParams
     * referenced. Communicates the result by allocating new buffers
     * of the appropriate size and binding them to the unbound
     * ImageParams. */
    // @{</doc>
<use f='halide/python_bindings/src/PyPipeline.cpp' l='173' u='c' c='_ZN6Halide14PythonBindings15define_pipelineERN8pybind117module_E'/>
<dec f='halide/src/Pipeline.h' l='528' type='void Halide::Pipeline::infer_input_bounds(const std::vector&lt;int32_t&gt; &amp; sizes, const Halide::Target &amp; target = get_jit_target_from_environment(), const Halide::ParamMap &amp; param_map = ParamMap::empty_map())'/>
<doc f='halide/src/Pipeline.h' l='522'>/** For a given size of output, or a given set of output buffers,
     * determine the bounds required of all unbound ImageParams
     * referenced. Communicates the result by allocating new buffers
     * of the appropriate size and binding them to the unbound
     * ImageParams. */
    // @{</doc>
<def f='halide/src/Pipeline.cpp' l='1282' ll='1292' type='void Halide::Pipeline::infer_input_bounds(const std::vector&lt;int32_t&gt; &amp; sizes, const Halide::Target &amp; target = get_jit_target_from_environment(), const Halide::ParamMap &amp; param_map = ParamMap::empty_map())'/>
