<dec f='halide/build/include/Halide.h' l='26672' type='std::vector&lt;std::vector&lt;Func&gt; &gt; Halide::Internal::GeneratorStub::generate(const Halide::Internal::GeneratorParamsMap &amp; generator_params, const std::vector&lt;std::vector&lt;Internal::StubInput&gt; &gt; &amp; inputs)'/>
<use f='halide/python_bindings/stub/PyStubImpl.cpp' l='178' u='c' c='_ZN6Halide14PythonBindings12_GLOBAL__N_113generate_implERKSt8functionIFSt10unique_ptrINS_8Internal13GeneratorBaseESt14default_deleteIS5_EERKNS_16Gener9727454'/>
<dec f='halide/src/Generator.h' l='3738' type='std::vector&lt;std::vector&lt;Func&gt; &gt; Halide::Internal::GeneratorStub::generate(const Halide::Internal::GeneratorParamsMap &amp; generator_params, const std::vector&lt;std::vector&lt;Internal::StubInput&gt; &gt; &amp; inputs)'/>
<use f='halide/src/Generator.cpp' l='657' u='c' c='_ZN6Halide8Internal13GeneratorStubC1ERKNS_16GeneratorContextERKSt8functionIFSt10unique_ptrINS0_13GeneratorBaseESt14default_deleteIS7_EES4_EERKSt3mapIN7692624'/>
<def f='halide/src/Generator.cpp' l='664' ll='684' type='std::vector&lt;std::vector&lt;Func&gt; &gt; Halide::Internal::GeneratorStub::generate(const Halide::Internal::GeneratorParamsMap &amp; generator_params, const std::vector&lt;std::vector&lt;Internal::StubInput&gt; &gt; &amp; inputs)'/>
<doc f='halide/src/Generator.cpp' l='660'>// Return a vector of all Outputs of this Generator; non-array outputs are returned
// as a vector-of-size-1. This method is primarily useful for code that needs
// to iterate through the outputs of unknown, arbitrary Generators (e.g.,
// the Python bindings).</doc>
