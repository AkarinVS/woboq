<dec f='halide/build/include/HalideRuntime.h' l='133' type='void halide_mutex_lock(struct halide_mutex * mutex)'/>
<doc f='halide/build/include/HalideRuntime.h' l='129'>/** A basic set of mutex and condition variable functions, which call
 * platform specific code for mutual exclusion. Equivalent to posix
 * calls. */
//@{</doc>
<dec f='halide/build/include/Halide.h' l='231' type='void halide_mutex_lock(struct halide_mutex * mutex)'/>
<doc f='halide/build/include/Halide.h' l='227'>/** A basic set of mutex and condition variable functions, which call
 * platform specific code for mutual exclusion. Equivalent to posix
 * calls. */
//@{</doc>
<dec f='halide/src/runtime/HalideRuntime.h' l='133' type='void halide_mutex_lock(struct halide_mutex * mutex)'/>
<doc f='halide/src/runtime/HalideRuntime.h' l='129'>/** A basic set of mutex and condition variable functions, which call
 * platform specific code for mutual exclusion. Equivalent to posix
 * calls. */
//@{</doc>
<dec f='halide/build/tutorial/lesson_10_halide.h' l='205' type='void halide_mutex_lock(struct halide_mutex * mutex)'/>
<doc f='halide/build/tutorial/lesson_10_halide.h' l='201'>/** A basic set of mutex and condition variable functions, which call
 * platform specific code for mutual exclusion. Equivalent to posix
 * calls. */
//@{</doc>
