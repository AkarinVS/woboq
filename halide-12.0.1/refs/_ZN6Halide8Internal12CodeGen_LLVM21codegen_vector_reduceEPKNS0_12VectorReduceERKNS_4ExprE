<dec f='halide/build/include/Halide.h' l='20250' type='void Halide::Internal::CodeGen_LLVM::codegen_vector_reduce(const Halide::Internal::VectorReduce * op, const Halide::Expr &amp; init)'/>
<doc f='halide/build/include/Halide.h' l='20245'>/** Compile a horizontal reduction that starts with an explicit
     * initial value. There are lots of complex ways to peephole
     * optimize this pattern, especially with the proliferation of
     * dot-product instructions, and they can usefully share logic
     * across backends. */</doc>
<dec f='halide/src/CodeGen_LLVM.h' l='511' type='void Halide::Internal::CodeGen_LLVM::codegen_vector_reduce(const Halide::Internal::VectorReduce * op, const Halide::Expr &amp; init)'/>
<ovr f='halide/src/CodeGen_ARM.cpp' l='1131' c='_ZN6Halide8Internal12_GLOBAL__N_111CodeGen_ARM21codegen_vector_reduceEPKNS0_12VectorReduceERKNS_4ExprE'/>
<use f='halide/src/CodeGen_ARM.cpp' l='1136' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_111CodeGen_ARM21codegen_vector_reduceEPKNS0_12VectorReduceERKNS_4ExprE'/>
<use f='halide/src/CodeGen_ARM.cpp' l='1266' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_111CodeGen_ARM21codegen_vector_reduceEPKNS0_12VectorReduceERKNS_4ExprE'/>
<doc f='halide/src/CodeGen_LLVM.h' l='506'>/** Compile a horizontal reduction that starts with an explicit
     * initial value. There are lots of complex ways to peephole
     * optimize this pattern, especially with the proliferation of
     * dot-product instructions, and they can usefully share logic
     * across backends. */</doc>
<use f='halide/src/CodeGen_LLVM.cpp' l='1455' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM25try_to_fold_vector_reduceERKNS_4ExprES2_'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='4377' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_12VectorReduceE'/>
<def f='halide/src/CodeGen_LLVM.cpp' l='4380' ll='4627' type='void Halide::Internal::CodeGen_LLVM::codegen_vector_reduce(const Halide::Internal::VectorReduce * op, const Halide::Expr &amp; init)'/>
<ovr f='halide/src/CodeGen_PTX_Dev.cpp' l='446' c='_ZN6Halide8Internal12_GLOBAL__N_115CodeGen_PTX_Dev21codegen_vector_reduceEPKNS0_12VectorReduceERKNS_4ExprE'/>
<use f='halide/src/CodeGen_PTX_Dev.cpp' l='538' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_115CodeGen_PTX_Dev21codegen_vector_reduceEPKNS0_12VectorReduceERKNS_4ExprE'/>
<ovr f='halide/src/CodeGen_WebAssembly.cpp' l='183' c='_ZN6Halide8Internal12_GLOBAL__N_119CodeGen_WebAssembly21codegen_vector_reduceEPKNS0_12VectorReduceERKNS_4ExprE'/>
<use f='halide/src/CodeGen_WebAssembly.cpp' l='255' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_119CodeGen_WebAssembly21codegen_vector_reduceEPKNS0_12VectorReduceERKNS_4ExprE'/>
<ovr f='halide/src/CodeGen_X86.cpp' l='499' c='_ZN6Halide8Internal12_GLOBAL__N_111CodeGen_X8621codegen_vector_reduceEPKNS0_12VectorReduceERKNS_4ExprE'/>
<use f='halide/src/CodeGen_X86.cpp' l='501' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_111CodeGen_X8621codegen_vector_reduceEPKNS0_12VectorReduceERKNS_4ExprE'/>
<use f='halide/src/CodeGen_X86.cpp' l='584' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_111CodeGen_X8621codegen_vector_reduceEPKNS0_12VectorReduceERKNS_4ExprE'/>
