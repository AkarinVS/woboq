<inh f='halide/build/include/Halide.h' l='3913' c='Halide::Internal::StmtNode'/>
<def f='halide/build/include/Halide.h' l='12745' ll='12755'/>
<use f='halide/build/include/Halide.h' l='12745'/>
<use f='halide/build/include/Halide.h' l='12859' c='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_6AtomicE'/>
<use f='halide/build/include/Halide.h' l='12929' c='_ZN6Halide8Internal14IRGraphVisitor5visitEPKNS0_6AtomicE'/>
<use f='halide/build/include/Halide.h' l='13100' c='_ZN6Halide8Internal15VariadicVisitor13dispatch_stmtEPKNS0_12BaseStmtNodeEDpOTL0__'/>
<use f='halide/build/include/Halide.h' l='18874' c='_ZN6Halide8Internal7Closure5visitEPKNS0_6AtomicE'/>
<use f='halide/build/include/Halide.h' l='19125' c='_ZN6Halide8Internal9IRPrinter5visitEPKNS0_6AtomicE'/>
<use f='halide/build/include/Halide.h' l='19356' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_6AtomicE'/>
<use f='halide/build/include/Halide.h' l='20107' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_6AtomicE'/>
<use f='halide/build/include/Halide.h' l='30063' c='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6AtomicE'/>
<size>88</size>
<doc f='halide/build/include/Halide.h' l='12739'>/** Lock all the Store nodes in the body statement.
 *  Typically the lock is implemented by an atomic operation
 *  (e.g. atomic add or atomic compare-and-swap).
 *  However, if necessary, the node can access a mutex buffer through
 *  mutex_name and mutex_args, by lowering this node into
 *  calls to acquire and release the lock. */</doc>
<mbr r='Halide::Internal::Atomic::producer_name' o='128' t='std::string'/>
<mbr r='Halide::Internal::Atomic::mutex_name' o='384' t='std::string'/>
<mbr r='Halide::Internal::Atomic::body' o='640' t='Halide::Internal::Stmt'/>
<fun r='_ZN6Halide8Internal6Atomic4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_NS0_4StmtE'/>
<smbr r='Halide::Internal::Atomic::_node_type' t='const Halide::Internal::IRNodeType'/>
<inh f='halide/src/Expr.h' l='166' c='Halide::Internal::StmtNode'/>
<def f='halide/src/IR.h' l='853' ll='863'/>
<use f='halide/src/IR.h' l='853'/>
<use f='halide/src/IRVisitor.h' l='77' c='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_6AtomicE'/>
<use f='halide/src/IRVisitor.h' l='147' c='_ZN6Halide8Internal14IRGraphVisitor5visitEPKNS0_6AtomicE'/>
<use f='halide/src/IRVisitor.h' l='318' c='_ZN6Halide8Internal15VariadicVisitor13dispatch_stmtEPKNS0_12BaseStmtNodeEDpOTL0__'/>
<use f='halide/src/IRMutator.h' l='91' c='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6AtomicE'/>
<use f='halide/src/AddAtomicMutex.cpp' l='101' c='_ZN6Halide8Internal12_GLOBAL__N_119CheckAtomicValidity5visitEPKNS0_6AtomicE'/>
<use f='halide/src/AddAtomicMutex.cpp' l='187' c='_ZN6Halide8Internal12_GLOBAL__N_125RemoveUnnecessaryMutexUse5visitEPKNS0_6AtomicE'/>
<use f='halide/src/AddAtomicMutex.cpp' l='223' c='_ZN6Halide8Internal12_GLOBAL__N_122FindStoreInAtomicMutex5visitEPKNS0_6AtomicE'/>
<use f='halide/src/AddAtomicMutex.cpp' l='396' c='_ZN6Halide8Internal12_GLOBAL__N_114AddAtomicMutex5visitEPKNS0_6AtomicE'/>
<size>88</size>
<doc f='halide/src/IR.h' l='847'>/** Lock all the Store nodes in the body statement.
 *  Typically the lock is implemented by an atomic operation
 *  (e.g. atomic add or atomic compare-and-swap).
 *  However, if necessary, the node can access a mutex buffer through
 *  mutex_name and mutex_args, by lowering this node into
 *  calls to acquire and release the lock. */</doc>
<mbr r='Halide::Internal::Atomic::producer_name' o='128' t='std::string'/>
<mbr r='Halide::Internal::Atomic::mutex_name' o='384' t='std::string'/>
<mbr r='Halide::Internal::Atomic::body' o='640' t='Halide::Internal::Stmt'/>
<fun r='_ZN6Halide8Internal6Atomic4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_NS0_4StmtE'/>
<smbr r='Halide::Internal::Atomic::_node_type' t='const Halide::Internal::IRNodeType'/>
<use f='halide/src/IRPrinter.h' l='194' c='_ZN6Halide8Internal9IRPrinter5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/AsyncProducers.cpp' l='97' c='_ZN6Halide8Internal12_GLOBAL__N_121NoOpCollapsingMutator5visitEPKNS0_6AtomicE'/>
<use f='halide/src/AsyncProducers.cpp' l='181' c='_ZN6Halide8Internal12_GLOBAL__N_120GenerateProducerBody5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/Closure.h' l='41' c='_ZN6Halide8Internal7Closure5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/Closure.cpp' l='88' c='_ZN6Halide8Internal7Closure5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/CodeGen_LLVM.h' l='368' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/CodeGen_C.h' l='236' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_6AtomicE'/>
<use f='halide/src/CodeGen_C.cpp' l='2620' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/CodeGen_D3D12Compute_Dev.cpp' l='107' c='_ZN6Halide8Internal12_GLOBAL__N_124CodeGen_D3D12Compute_Dev22CodeGen_D3D12Compute_C5visitEPKNS0_6AtomicE'/>
<use f='halide/src/CodeGen_D3D12Compute_Dev.cpp' l='955' c='_ZN6Halide8Internal12_GLOBAL__N_124CodeGen_D3D12Compute_Dev22CodeGen_D3D12Compute_C5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/Simplify_Internal.h' l='344' c='_ZN6Halide8Internal8Simplify5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/CodeGen_LLVM.cpp' l='4629' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/CodeGen_Metal_Dev.cpp' l='95' c='_ZN6Halide8Internal12_GLOBAL__N_117CodeGen_Metal_Dev15CodeGen_Metal_C5visitEPKNS0_6AtomicE'/>
<use f='halide/src/CodeGen_Metal_Dev.cpp' l='541' c='_ZN6Halide8Internal12_GLOBAL__N_117CodeGen_Metal_Dev15CodeGen_Metal_C5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/CodeGen_OpenCL_Dev.cpp' l='102' c='_ZN6Halide8Internal12_GLOBAL__N_118CodeGen_OpenCL_Dev16CodeGen_OpenCL_C5visitEPKNS0_6AtomicE'/>
<use f='halide/src/CodeGen_OpenCL_Dev.cpp' l='866' c='_ZN6Halide8Internal12_GLOBAL__N_118CodeGen_OpenCL_Dev16CodeGen_OpenCL_C5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/CodeGen_PTX_Dev.cpp' l='89' c='_ZN6Halide8Internal12_GLOBAL__N_115CodeGen_PTX_Dev5visitEPKNS0_6AtomicE'/>
<use f='halide/src/CodeGen_PTX_Dev.cpp' l='401' c='_ZN6Halide8Internal12_GLOBAL__N_115CodeGen_PTX_Dev5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/Derivative.cpp' l='138' c='_ZN6Halide8Internal12_GLOBAL__N_126ReverseAccumulationVisitor5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/EarlyFree.cpp' l='104' c='_ZN6Halide8Internal12_GLOBAL__N_111FindLastUse5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/IR.cpp' l='876' c='_ZN6Halide8Internal6Atomic4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_NS0_4StmtE'/>
<use f='halide/src/IR.cpp' l='876' c='_ZN6Halide8Internal6Atomic4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_NS0_4StmtE'/>
<use f='halide/src/IR.cpp' l='1129' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1315' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<size>88</size>
<fun r='_ZN6Halide8Internal6Atomic4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_NS0_4StmtE'/>
<use f='halide/src/IREquality.cpp' l='99' c='_ZN6Halide8Internal12_GLOBAL__N_110IRComparer5visitEPKNS0_6AtomicE'/>
<use f='halide/src/IREquality.cpp' l='602' c='_ZN6Halide8Internal12_GLOBAL__N_110IRComparer5visitEPKNS0_6AtomicE'/>
<use f='halide/src/IREquality.cpp' l='603' c='_ZN6Halide8Internal12_GLOBAL__N_110IRComparer5visitEPKNS0_6AtomicE'/>
<use f='halide/src/IREquality.cpp' l='603' c='_ZN6Halide8Internal12_GLOBAL__N_110IRComparer5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/IRMutator.cpp' l='406' c='_ZN6Halide8Internal9IRMutator5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/IRPrinter.cpp' l='1024' c='_ZN6Halide8Internal9IRPrinter5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/IRVisitor.cpp' l='260' c='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_6AtomicE'/>
<use f='halide/src/IRVisitor.cpp' l='514' c='_ZN6Halide8Internal14IRGraphVisitor5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/ModulusRemainder.cpp' l='78' c='_ZN6Halide8Internal12_GLOBAL__N_123ComputeModulusRemainder5visitEPKNS0_6AtomicE'/>
<use f='halide/src/ModulusRemainder.cpp' l='276' c='_ZN6Halide8Internal12_GLOBAL__N_123ComputeModulusRemainder5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/Monotonic.cpp' l='615' c='_ZN6Halide8Internal12_GLOBAL__N_116DerivativeBounds5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/RemoveDeadAllocations.cpp' l='79' c='_ZN6Halide8Internal12_GLOBAL__N_121RemoveDeadAllocations5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/ScheduleFunctions.cpp' l='1178' c='_ZN6Halide8Internal12_GLOBAL__N_125InjectFunctionRealization5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/Simplify_Stmts.cpp' l='703' c='_ZN6Halide8Internal8Simplify5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/SplitTuples.cpp' l='140' c='_ZN6Halide8Internal12_GLOBAL__N_111SplitTuples13visit_provideEPKNS0_7ProvideEPKNS0_6AtomicE'/>
<use f='halide/src/SplitTuples.cpp' l='322' c='_ZN6Halide8Internal12_GLOBAL__N_111SplitTuples5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/StmtToHtml.cpp' l='709' c='_ZN6Halide8Internal12_GLOBAL__N_110StmtToHtml5visitEPKNS0_6AtomicE'/>
<size>88</size>
<use f='halide/src/VectorizeLoops.cpp' l='1072' c='_ZN6Halide8Internal12_GLOBAL__N_110VectorSubs5visitEPKNS0_6AtomicE'/>
<use f='halide/src/VectorizeLoops.cpp' l='1525' c='_ZN6Halide8Internal12_GLOBAL__N_140LiftVectorizableExprsOutOfAllAtomicNodes5visitEPKNS0_6AtomicE'/>
<use f='halide/src/VectorizeLoops.cpp' l='1624' c='_ZN6Halide8Internal12_GLOBAL__N_124RemoveUnnecessaryAtomics5visitEPKNS0_6AtomicE'/>
<size>88</size>
