<dec f='halide/build-apps/abseil-cpp/absl/time/time.h' l='106' type='absl::lts_2020_02_25::Duration absl::lts_2020_02_25::time_internal::MakePosDoubleDuration(double n)'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='429' u='c' c='_ZN4absl14lts_2020_02_257SecondsET_'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='434' u='c' c='_ZN4absl14lts_2020_02_257SecondsET_'/>
<def f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1349' ll='1356' type='absl::lts_2020_02_25::Duration absl::lts_2020_02_25::time_internal::MakePosDoubleDuration(double n)'/>
<doc f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1346'>// Make a Duration value from a floating-point number, as long as that number
// is in the range [ 0 .. numeric_limits&lt;int64_t&gt;::max ), that is, as long as
// it&apos;s positive and can be converted to int64_t without risk of UB.</doc>
