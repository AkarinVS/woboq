<dec f='halide/build-apps/abseil-cpp/absl/strings/numbers.h' l='144' type='size_t absl::lts_2020_02_25::numbers_internal::SixDigitsToBuffer(double d, char * buffer)'/>
<doc f='halide/build-apps/abseil-cpp/absl/strings/numbers.h' l='138'>// Helper function for fast formatting of floating-point values.
// The result is the same as printf&apos;s &quot;%g&quot;, a.k.a. &quot;%.6g&quot;; that is, six
// significant digits are returned, trailing zeros are removed, and numbers
// outside the range 0.0001-999999 are output using scientific notation
// (1.23456e+06). This routine is heavily optimized.
// Required buffer size is `kSixDigitsToBufferSize`.</doc>
<use f='halide/build-apps/abseil-cpp/absl/strings/str_cat.h' l='236' u='c' c='_ZN4absl14lts_2020_02_258AlphaNumC1Ef'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/str_cat.h' l='238' u='c' c='_ZN4absl14lts_2020_02_258AlphaNumC1Ed'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/str_cat.h' l='401' u='c' c='_ZN4absl14lts_2020_02_259SixDigitsEd'/>
<def f='halide/build-apps/abseil-cpp/absl/strings/numbers.cc' l='476' ll='600' type='size_t absl::lts_2020_02_25::numbers_internal::SixDigitsToBuffer(double d, char *const buffer)'/>
<doc f='halide/build-apps/abseil-cpp/absl/strings/numbers.cc' l='474'>// Helper function for fast formatting of floating-point.
// The result is the same as &quot;%g&quot;, a.k.a. &quot;%.6g&quot;.</doc>
<use f='halide/build-apps/abseil-cpp/absl/strings/substitute.h' l='149' u='c' c='_ZN4absl14lts_2020_02_2519substitute_internal3ArgC1Ef'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/substitute.h' l='152' u='c' c='_ZN4absl14lts_2020_02_2519substitute_internal3ArgC1Ed'/>
