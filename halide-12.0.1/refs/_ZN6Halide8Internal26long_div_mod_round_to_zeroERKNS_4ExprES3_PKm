<dec f='halide/build/include/Halide.h' l='19693' type='std::pair&lt;Expr, Expr&gt; Halide::Internal::long_div_mod_round_to_zero(const Halide::Expr &amp; a, const Halide::Expr &amp; b, const uint64_t * max_abs = nullptr)'/>
<doc f='halide/build/include/Halide.h' l='19690'>/** Does a {div/mod}_round_to_zero using binary long division for int/uint.
 *  max_abs is the maximum absolute value of (a/b).
 *  Returns the pair {div_round_to_zero, mod_round_to_zero}. */</doc>
<dec f='halide/src/CodeGen_Internal.h' l='90' type='std::pair&lt;Expr, Expr&gt; Halide::Internal::long_div_mod_round_to_zero(const Halide::Expr &amp; a, const Halide::Expr &amp; b, const uint64_t * max_abs = nullptr)'/>
<doc f='halide/src/CodeGen_Internal.h' l='87'>/** Does a {div/mod}_round_to_zero using binary long division for int/uint.
 *  max_abs is the maximum absolute value of (a/b).
 *  Returns the pair {div_round_to_zero, mod_round_to_zero}. */</doc>
<def f='halide/src/CodeGen_Internal.cpp' l='434' ll='453' type='std::pair&lt;Expr, Expr&gt; Halide::Internal::long_div_mod_round_to_zero(const Halide::Expr &amp; num, const Halide::Expr &amp; den, const uint64_t * max_abs = nullptr)'/>
<use f='halide/src/HexagonOptimize.cpp' l='1001' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116OptimizePatterns5visitEPKNS0_4CallE'/>
