<dec f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='181' type='Eigen::ColPivHouseholderQR::HouseholderSequenceType Eigen::ColPivHouseholderQR::householderQ() const'/>
<use f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='184' u='c' c='_ZNK5Eigen19ColPivHouseholderQR7matrixQEv'/>
<use f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='599' u='c' c='_ZNK5Eigen19ColPivHouseholderQR11_solve_implERKTL0__RTL0_0_'/>
<use f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='631' u='c' c='_ZNK5Eigen19ColPivHouseholderQR22_solve_impl_transposedERKTL0_0_RTL0_1_'/>
<def f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='653' ll='659' type='typename ColPivHouseholderQR&lt;MatrixType&gt;::HouseholderSequenceType Eigen::ColPivHouseholderQR::householderQ() const'/>
<doc f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='650'>/** \returns the matrix Q as a sequence of householder transformations.
  * You can extract the meaningful part only by using:
  * \code qr.householderQ().setLength(qr.nonzeroPivots()) \endcode*/</doc>
