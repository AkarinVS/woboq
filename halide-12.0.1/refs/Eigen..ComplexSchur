<def f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexSchur.h' l='51' ll='260'/>
<use f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexSchur.h' l='266' c='_ZN5Eigen12ComplexSchur28subdiagonalEntryIsNeglegibleEl'/>
<use f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexSchur.h' l='281' c='_ZN5Eigen12ComplexSchur12computeShiftEll'/>
<use f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexSchur.h' l='281' c='_ZN5Eigen12ComplexSchur12computeShiftEll'/>
<use f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexSchur.h' l='322' c='_ZN5Eigen12ComplexSchur7computeERKNS_9EigenBaseITL0__EEb'/>
<use f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexSchur.h' l='322' c='_ZN5Eigen12ComplexSchur7computeERKNS_9EigenBaseITL0__EEb'/>
<use f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexSchur.h' l='344' c='_ZN5Eigen12ComplexSchur21computeFromHessenbergERKTL0__RKTL0_0_b'/>
<use f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexSchur.h' l='344' c='_ZN5Eigen12ComplexSchur21computeFromHessenbergERKTL0__RKTL0_0_b'/>
<use f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexSchur.h' l='359' c='_ZN5Eigen8internal34complex_schur_reduce_to_hessenberg3runERNS_12ComplexSchurIT_EERKS3_b'/>
<use f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexSchur.h' l='370' c='_ZN5Eigen8internal34complex_schur_reduce_to_hessenbergIT_Lb0EE3runERNS_12ComplexSchurIS2_EERKS2_b'/>
<use f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexSchur.h' l='372' c='_ZN5Eigen8internal34complex_schur_reduce_to_hessenbergIT_Lb0EE3runERNS_12ComplexSchurIS2_EERKS2_b'/>
<use f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexSchur.h' l='390' c='_ZN5Eigen12ComplexSchur22reduceToTriangularFormEb'/>
<use f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexEigenSolver.h' l='247'/>
<doc f='halide/build-apps/eigen/Eigen/src/Eigenvalues/ComplexSchur.h' l='23'>/** \eigenvalues_module \ingroup Eigenvalues_Module
  *
  *
  * \class ComplexSchur
  *
  * \brief Performs a complex Schur decomposition of a real or complex square matrix
  *
  * \tparam _MatrixType the type of the matrix of which we are
  * computing the Schur decomposition; this is expected to be an
  * instantiation of the Matrix class template.
  *
  * Given a real or complex square matrix A, this class computes the
  * Schur decomposition: \f$ A = U T U^*\f$ where U is a unitary
  * complex matrix, and T is a complex upper triangular matrix.  The
  * diagonal of the matrix T corresponds to the eigenvalues of the
  * matrix A.
  *
  * Call the function compute() to compute the Schur decomposition of
  * a given matrix. Alternatively, you can use the 
  * ComplexSchur(const MatrixType&amp;, bool) constructor which computes
  * the Schur decomposition at construction time. Once the
  * decomposition is computed, you can use the matrixU() and matrixT()
  * functions to retrieve the matrices U and V in the decomposition.
  *
  * \note This code is inspired from Jampack
  *
  * \sa class RealSchur, class EigenSolver, class ComplexEigenSolver
  */</doc>
<fun r='_ZN5Eigen12ComplexSchurC1El'/>
<fun r='_ZN5Eigen12ComplexSchurC1ERKNS_9EigenBaseITL0__EEb'/>
<fun r='_ZNK5Eigen12ComplexSchur7matrixUEv'/>
<fun r='_ZNK5Eigen12ComplexSchur7matrixTEv'/>
<fun r='_ZN5Eigen12ComplexSchur7computeERKNS_9EigenBaseITL0__EEb'/>
<fun r='_ZN5Eigen12ComplexSchur21computeFromHessenbergERKTL0__RKTL0_0_b'/>
<fun r='_ZNK5Eigen12ComplexSchur4infoEv'/>
<fun r='_ZN5Eigen12ComplexSchur16setMaxIterationsEl'/>
<fun r='_ZN5Eigen12ComplexSchur16getMaxIterationsEv'/>
<smbr r='Eigen::ComplexSchur::m_maxIterationsPerRow' t='const int'/>
<mbr r='Eigen::ComplexSchur::m_matT' t='Eigen::ComplexSchur::ComplexMatrixType'/>
<mbr r='Eigen::ComplexSchur::m_matU' t='Eigen::ComplexSchur::ComplexMatrixType'/>
<mbr r='Eigen::ComplexSchur::m_hess' t='HessenbergDecomposition&lt;Eigen::ComplexSchur::MatrixType&gt;'/>
<mbr r='Eigen::ComplexSchur::m_info' t='Eigen::ComputationInfo'/>
<mbr r='Eigen::ComplexSchur::m_isInitialized' t='bool'/>
<mbr r='Eigen::ComplexSchur::m_matUisUptodate' t='bool'/>
<mbr r='Eigen::ComplexSchur::m_maxIters' t='Eigen::ComplexSchur::Index'/>
<fun r='_ZN5Eigen12ComplexSchur28subdiagonalEntryIsNeglegibleEl'/>
<fun r='_ZN5Eigen12ComplexSchur12computeShiftEll'/>
<fun r='_ZN5Eigen12ComplexSchur22reduceToTriangularFormEb'/>
<fun r='_ZN5Eigen12ComplexSchur28subdiagonalEntryIsNeglegibleEl'/>
<fun r='_ZN5Eigen12ComplexSchur12computeShiftEll'/>
<fun r='_ZN5Eigen12ComplexSchur7computeERKNS_9EigenBaseITL0__EEb'/>
<fun r='_ZN5Eigen12ComplexSchur21computeFromHessenbergERKTL0__RKTL0_0_b'/>
<fun r='_ZN5Eigen12ComplexSchur22reduceToTriangularFormEb'/>
