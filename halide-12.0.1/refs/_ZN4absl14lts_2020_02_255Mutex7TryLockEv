<dec f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.h' l='181' type='bool absl::lts_2020_02_25::Mutex::TryLock()'/>
<use f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.h' l='266' u='c' c='_ZN4absl14lts_2020_02_255Mutex13WriterTryLockEv'/>
<doc f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.h' l='176'>// Mutex::TryLock()
  //
  // If the mutex can be acquired without blocking, does so exclusively and
  // returns `true`. Otherwise, returns `false`. Returns `true` with high
  // probability if the `Mutex` was free.</doc>
<def f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='1589' ll='1616' type='bool absl::lts_2020_02_25::Mutex::TryLock()'/>
