<def f='halide/build/include/Halide.h' l='7528' ll='7530' type='Halide::Expr Halide::operator+(Halide::Expr a, float b)'/>
<doc f='halide/build/include/Halide.h' l='7524'>/** Operators on floats treats those floats as Exprs. Making these
 * explicit prevents implicit float-&gt;int casts that might otherwise
 * occur. */
// @{</doc>
<def f='halide/src/IROperator.h' l='723' ll='725' type='Halide::Expr Halide::operator+(Halide::Expr a, float b)'/>
<doc f='halide/src/IROperator.h' l='719'>/** Operators on floats treats those floats as Exprs. Making these
 * explicit prevents implicit float-&gt;int casts that might otherwise
 * occur. */
// @{</doc>
<use f='halide/src/CodeGen_OpenGLCompute_Dev.cpp' l='394' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_123CodeGen_OpenGLCompute_C5visitEPKNS0_4CallE'/>
<use f='halide/src/IRMatch.cpp' l='36' u='c' c='_ZN6Halide8Internal15expr_match_testEv'/>
<use f='halide/src/IRMatch.cpp' l='40' u='c' c='_ZN6Halide8Internal15expr_match_testEv'/>
<use f='halide/src/IROperator.cpp' l='37' u='c' c='_ZN6Halide12_GLOBAL__N_119evaluate_polynomialENS_4ExprEPfi'/>
<use f='halide/src/IROperator.cpp' l='43' u='c' c='_ZN6Halide12_GLOBAL__N_119evaluate_polynomialENS_4ExprEPfi'/>
<use f='halide/src/autoschedulers/adams2019/cost_model_generator.cpp' l='84' u='c' c='_ZN11ModelWeightILb1EE8backpropERKN6Halide10DerivativeERKNS1_4ExprES7_'/>
<use f='halide/test/generator/acquire_release_generator.cpp' l='13' u='c' c='_ZN12_GLOBAL__N_114AcquireRelease8generateEv'/>
<use f='halide/test/generator/metadata_tester_generator.cpp' l='116' u='c' c='_ZN12_GLOBAL__N_114MetadataTester8generateEv'/>
<use f='halide/tutorial/lesson_13_tuples.cpp' l='139' u='c' c='main'/>
