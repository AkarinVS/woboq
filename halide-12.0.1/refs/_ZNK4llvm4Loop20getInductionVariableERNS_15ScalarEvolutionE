<dec f='halide/llvm-install/include/llvm/Analysis/LoopInfo.h' l='737' type='llvm::PHINode * llvm::Loop::getInductionVariable(llvm::ScalarEvolution &amp; SE) const'/>
<doc f='halide/llvm-install/include/llvm/Analysis/LoopInfo.h' l='730'>/// Return the loop induction variable if found, else return nullptr.
  /// An instruction is considered as the loop induction variable if
  /// - it is an induction variable of the loop; and
  /// - it is used to determine the condition of the branch in the loop latch
  ///
  /// Note: the induction variable doesn&apos;t need to be canonical, i.e. starts at
  /// zero and increments by one each time through the loop (but it can be).</doc>
