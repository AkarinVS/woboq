<def f='halide/halide-install/include/Halide.h' l='10157' ll='10171' type='void Halide::Runtime::Buffer::transpose(const std::vector&lt;int&gt; &amp; order)'/>
<doc f='halide/halide-install/include/Halide.h' l='10153'>/** A generalized transpose: instead of swapping two dimensions,
     * pass a vector that lists each dimension index exactly once, in
     * the desired order. This does not move any data around in memory
     * - it just permutes how it is indexed. */</doc>
<def f='halide/halide-install/include/HalideBuffer.h' l='1395' ll='1409' type='void Halide::Runtime::Buffer::transpose(const std::vector&lt;int&gt; &amp; order)'/>
<doc f='halide/halide-install/include/HalideBuffer.h' l='1391'>/** A generalized transpose: instead of swapping two dimensions,
     * pass a vector that lists each dimension index exactly once, in
     * the desired order. This does not move any data around in memory
     * - it just permutes how it is indexed. */</doc>
<use f='halide/apps/hannk/interpreter/ops.cpp' l='1597' u='c' c='_ZN5hannk11TransposeOp7executeEv'/>
<def f='halide/build/include/Halide.h' l='10157' ll='10171' type='void Halide::Runtime::Buffer::transpose(const std::vector&lt;int&gt; &amp; order)'/>
<doc f='halide/build/include/Halide.h' l='10153'>/** A generalized transpose: instead of swapping two dimensions,
     * pass a vector that lists each dimension index exactly once, in
     * the desired order. This does not move any data around in memory
     * - it just permutes how it is indexed. */</doc>
<def f='halide/src/runtime/HalideBuffer.h' l='1395' ll='1409' type='void Halide::Runtime::Buffer::transpose(const std::vector&lt;int&gt; &amp; order)'/>
<doc f='halide/src/runtime/HalideBuffer.h' l='1391'>/** A generalized transpose: instead of swapping two dimensions,
     * pass a vector that lists each dimension index exactly once, in
     * the desired order. This does not move any data around in memory
     * - it just permutes how it is indexed. */</doc>
