<def f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='117' ll='139'/>
<use f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='153' c='_ZN4llvm10sinkRegionEPNS_15DomTreeNodeBaseINS_10BasicBlockEEEPNS_9AAResultsEPNS_8LoopInfoEPNS_13DominatorTreeEPNS_18BlockFrequencyInfoEPNS_17TargetLib7188496'/>
<use f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='166' c='_ZN4llvm11hoistRegionEPNS_15DomTreeNodeBaseINS_10BasicBlockEEEPNS_9AAResultsEPNS_8LoopInfoEPNS_13DominatorTreeEPNS_18BlockFrequencyInfoEPNS_17TargetLi16094382'/>
<use f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='354' c='_ZN4llvm18canSinkOrHoistInstERNS_11InstructionEPNS_9AAResultsEPNS_13DominatorTreeEPNS_4LoopEPNS_15AliasSetTrackerEPNS_16MemorySSAUpdaterEbPNS_21SinkAn4645702'/>
<size>20</size>
<doc f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='114'>/// Flags controlling how much is checked when sinking or hoisting
/// instructions.  The number of memory access in the loop (and whether there
/// are too many) is determined in the constructors when using MemorySSA.</doc>
<fun r='_ZN4llvm21SinkAndHoistLICMFlagsC1EjjbPNS_4LoopEPNS_9MemorySSAE'/>
<fun r='_ZN4llvm21SinkAndHoistLICMFlagsC1EbPNS_4LoopEPNS_9MemorySSAE'/>
<fun r='_ZN4llvm21SinkAndHoistLICMFlags9setIsSinkEb'/>
<fun r='_ZN4llvm21SinkAndHoistLICMFlags9getIsSinkEv'/>
<fun r='_ZN4llvm21SinkAndHoistLICMFlags21tooManyMemoryAccessesEv'/>
<fun r='_ZN4llvm21SinkAndHoistLICMFlags22tooManyClobberingCallsEv'/>
<fun r='_ZN4llvm21SinkAndHoistLICMFlags24incrementClobberingCallsEv'/>
<mbr r='llvm::SinkAndHoistLICMFlags::NoOfMemAccTooLarge' o='0' t='bool'/>
<mbr r='llvm::SinkAndHoistLICMFlags::LicmMssaOptCounter' o='32' t='unsigned int'/>
<mbr r='llvm::SinkAndHoistLICMFlags::LicmMssaOptCap' o='64' t='unsigned int'/>
<mbr r='llvm::SinkAndHoistLICMFlags::LicmMssaNoAccForPromotionCap' o='96' t='unsigned int'/>
<mbr r='llvm::SinkAndHoistLICMFlags::IsSink' o='128' t='bool'/>
