<def f='halide/src/Bounds.cpp' l='2861' ll='2873' type='Halide::Internal::Interval Halide::Internal::compute_pure_function_definition_value_bounds(const Halide::Internal::Definition &amp; def, const Scope&lt;Halide::Internal::Interval&gt; &amp; scope, const Halide::Internal::FuncValueBounds &amp; fb, int dim)'/>
<use f='halide/src/Bounds.cpp' l='2869' u='c' c='_ZN6Halide8Internal45compute_pure_function_definition_value_boundsERKNS0_10DefinitionERKNS0_5ScopeINS0_8IntervalEEERKSt3mapISt4pairINSt7__cxx1112basic16640102'/>
<use f='halide/src/Bounds.cpp' l='2895' u='c' c='_ZN6Halide8Internal29compute_function_value_boundsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERKSt3mapIS7_NS0_8FunctionES9902759'/>
<doc f='halide/src/Bounds.cpp' l='2860'>// Compute interval of all possible function&apos;s values (default + specialized values)</doc>
