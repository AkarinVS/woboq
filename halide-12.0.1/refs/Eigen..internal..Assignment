<use f='halide/build-apps/eigen/Eigen/src/Core/AssignEvaluator.h' l='862' c='_ZN5Eigen8internal24call_assignment_no_aliasERT_RKT0_RKT1_'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/AssignEvaluator.h' l='901' c='_ZN5Eigen8internal37call_assignment_no_alias_no_transposeERT_RKT0_RKT1_'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/AssignEvaluator.h' l='916' ll='928'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/AssignEvaluator.h' l='934' ll='976'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/DiagonalMatrix.h' l='366' ll='385'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/Solve.h' l='136' ll='149'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/Solve.h' l='152' ll='165'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/Solve.h' l='168' ll='182'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='840' ll='849'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='851' ll='858'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='860' ll='867'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='960' ll='973'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='976' ll='984'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='987' ll='995'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='135' ll='150'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='153' ll='165'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='168' ll='180'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='186' ll='198'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='235' macro='1'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='236' macro='1'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='237' macro='1'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='239' macro='1'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='240' macro='1'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='241' macro='1'/>
<def f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='846' ll='855'/>
<def f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='575' ll='584'/>
<def f='halide/build-apps/eigen/Eigen/src/LU/InverseImpl.h' l='289' ll='313'/>
<def f='halide/build-apps/eigen/Eigen/src/QR/FullPivHouseholderQR.h' l='615' ll='624'/>
<def f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='637' ll='646'/>
<def f='halide/build-apps/eigen/Eigen/src/QR/CompleteOrthogonalDecomposition.h' l='602' ll='612'/>
<def f='halide/build-apps/eigen/Eigen/src/Geometry/Homogeneous.h' l='350' ll='364'/>
<def f='halide/build-apps/eigen/Eigen/src/Geometry/Homogeneous.h' l='367' ll='381'/>
<use f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='37' c='_ZN5Eigen16SparseMatrixBaseaSERKNS_16SparseMatrixBaseITL0__EE'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='127' ll='134'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='137' ll='154'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='214' macro='1'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='215' macro='1'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='216' macro='1'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='218' macro='1'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='219' macro='1'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='220' macro='1'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='225' ll='238'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='244' ll='265'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseProduct.h' l='101' ll='114'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseProduct.h' l='117' ll='125'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseProduct.h' l='128' ll='136'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h' l='222' ll='269'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseSelfAdjointView.h' l='631' ll='650'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseQR/SparseQR.h' l='726' ll='740'/>
<def f='halide/build-apps/eigen/Eigen/src/SparseQR/SparseQR.h' l='742' ll='752'/>
<def f='halide/build-apps/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h' l='95' ll='109'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/AssignEvaluator.h' l='913'>// Generic Dense to Dense assignment
// Note that the last template argument &quot;Weak&quot; is needed to make it possible to perform
// both partial specialization+SFINAE without ambiguous specialization</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/AssignEvaluator.h' l='930'>// Generic assignment through evalTo.
// TODO: not sure we have to keep that one, but it helps porting current code to new evaluator mechanism.
// Note that the last template argument &quot;Weak&quot; is needed to make it possible to perform
// both partial specialization+SFINAE without ambiguous specialization</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/DiagonalMatrix.h' l='365'>// Diagonal matrix to Dense assignment</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/Solve.h' l='134'>// Specialization for &quot;dst = dec.solve(rhs)&quot;
// NOTE we need to specialize it for Dense2Dense to avoid ambiguous specialization error and a Sparse2Sparse specialization must exist somewhere</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/Solve.h' l='151'>// Specialization for &quot;dst = dec.transpose().solve(rhs)&quot;</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/Solve.h' l='167'>// Specialization for &quot;dst = dec.adjoint().solve(rhs)&quot;</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='959'>// Triangular = Product</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='975'>// Triangular += Product</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='986'>// Triangular -= Product</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='131'>// The following three shortcuts are enabled only if the scalar types match exactly.
// TODO: we could enable them for different scalar types when the product is not vectorized.

// Dense = Product</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='152'>// Dense += Product</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='167'>// Dense -= Product</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/ProductEvaluators.h' l='183'>// Dense ?= scalar * Product
// TODO we should apply that rule if that&apos;s really helpful
// for instance, this is not good for inner products</doc>
<doc f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='845'>/***** Implementation of inverse() *****************************************************/</doc>
<doc f='halide/build-apps/eigen/Eigen/src/LU/PartialPivLU.h' l='574'>/***** Implementation of inverse() *****************************************************/</doc>
<doc f='halide/build-apps/eigen/Eigen/src/LU/InverseImpl.h' l='288'>// Specialization for &quot;dense = dense_xpr.inverse()&quot;</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Geometry/Homogeneous.h' l='349'>// dense = homogeneous</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Geometry/Homogeneous.h' l='366'>// dense = homogeneous</doc>
<doc f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='126'>// Generic Sparse to Sparse assignment</doc>
<doc f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='136'>// Generic Sparse to Dense assignment</doc>
<doc f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseAssign.h' l='223'>// Specialization for &quot;dst = dec.solve(rhs)&quot;
// NOTE we need to specialize it for Sparse2Sparse to avoid ambiguous specialization error</doc>
<doc f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseProduct.h' l='100'>// dense = sparse-product (can be sparse*sparse, sparse*perm, etc.)</doc>
<doc f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseProduct.h' l='116'>// dense += sparse-product (can be sparse*sparse, sparse*perm, etc.)</doc>
<doc f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseProduct.h' l='127'>// dense -= sparse-product (can be sparse*sparse, sparse*perm, etc.)</doc>
<doc f='halide/build-apps/eigen/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h' l='93'>// Specialization for &quot;dst = dec.solveWithGuess(rhs)&quot;
// NOTE we need to specialize it for Dense2Dense to avoid ambiguous specialization error and a Sparse2Sparse specialization must exist somewhere</doc>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_11Dense2DenseET2_E3runERS2_RKS3_RKS4_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_19EigenBase2EigenBaseET2_E3runERS2_RKS3_RKNS0_9assign_opINS2_6ScalarENS3_6ScalarEEE'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_19EigenBase2EigenBaseET2_E3runERS2_RKS3_RKNS0_13add_assign_opINS2_6ScalarETL0__EE'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_19EigenBase2EigenBaseET2_E3runERS2_RKS3_RKNS0_13sub_assign_opINS2_6ScalarETL0__EE'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_14Diagonal2DenseEvE3runERS2_RKS3_RKNS0_9assign_opINS2_6ScalarENS3_6ScalarEEE'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_14Diagonal2DenseEvE3runERS2_RKS3_RKNS0_13add_assign_opINS2_6ScalarENS3_6ScalarEEE'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_14Diagonal2DenseEvE3runERS2_RKS3_RKNS0_13sub_assign_opINS2_6ScalarENS3_6ScalarEEE'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_5SolveIT0_T1_EENS0_9assign_opIT2_S8_EENS0_11Dense2DenseEvE3runERS2_RKS6_RKS9_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_5SolveINS_9TransposeIKT0_EET1_EENS0_9assign_opIT2_SB_EENS0_11Dense2DenseEvE3runERS2_RKS9_RKSC_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_5SolveINS_12CwiseUnaryOpINS0_19scalar_conjugate_opINT0_6ScalarEEEKNS_9TransposeIKS6_EEEET1_EENS0_9assign_opIT2_SH_14555676'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_21Triangular2TriangularEvE3runERS2_RKS3_RKS4_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_16Triangular2DenseEvE3runERS2_RKS3_RKS4_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_16Dense2TriangularEvE3runERS2_RKS3_RKS4_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7ProductIT0_T1_Li0EEENS0_9assign_opIT2_NS6_6ScalarEEENS0_16Dense2TriangularEvE3runERS2_RKS6_RKSA_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7ProductIT0_T1_Li0EEENS0_13add_assign_opIT2_NS6_6ScalarEEENS0_16Dense2TriangularEvE3runERS2_RKS6_RKSA_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7ProductIT0_T1_Li0EEENS0_13sub_assign_opIT2_NS6_6ScalarEEENS0_16Dense2TriangularEvE3runERS2_RKS6_RKSA_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7ProductIT0_T1_XT2_EEENS0_9assign_opIT3_S8_EENS0_11Dense2DenseENS0_9enable_ifIXooeqT2_LNS_15ProductImplTypeE0EeqT29271066'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7ProductIT0_T1_XT2_EEENS0_13add_assign_opIT3_S8_EENS0_11Dense2DenseENS0_9enable_ifIXooeqT2_LNS_15ProductImplTypeE015975056'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7ProductIT0_T1_XT2_EEENS0_13sub_assign_opIT3_S8_EENS0_11Dense2DenseENS0_9enable_ifIXooeqT2_LNS_15ProductImplTypeE011739185'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_13CwiseBinaryOpINS0_17scalar_product_opIT4_T3_EEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIS5_EET5_EEKNS_7Produ14523233'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7InverseINS_9FullPivLUIT0_EEEENS0_9assign_opINS2_6ScalarENS6_6ScalarEEENS0_11Dense2DenseEvE3runERS2_RKS7_RKNS8_IS9_NS5_6ScalarEEE'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7InverseINS_12PartialPivLUIT0_EEEENS0_9assign_opINS2_6ScalarENS6_6ScalarEEENS0_11Dense2DenseEvE3runERS2_RKS7_RKSB_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7InverseIT0_EENS0_9assign_opINS2_6ScalarENS4_6ScalarEEENS0_11Dense2DenseEvE3runERS2_RKS5_RKS9_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7InverseINS_20FullPivHouseholderQRIT0_EEEENS0_9assign_opINS2_6ScalarENS6_6ScalarEEENS0_11Dense2DenseEvE3runERS2_RKS7_RKSB_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7InverseINS_19ColPivHouseholderQRIT0_EEEENS0_9assign_opINS2_6ScalarENS6_6ScalarEEENS0_11Dense2DenseEvE3runERS2_RKS7_RKSB_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7InverseINS_31CompleteOrthogonalDecompositionIT0_EEEENS0_9assign_opINS2_6ScalarENS6_6ScalarEEENS0_11Dense2DenseEvE3runERS2_RKS7_RKSB_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_11HomogeneousIT0_Li0EEENS0_9assign_opIT1_NS4_6ScalarEEENS0_11Dense2DenseEvE3runERS2_RKS5_RKS9_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_11HomogeneousIT0_Li1EEENS0_9assign_opIT1_NS4_6ScalarEEENS0_11Dense2DenseEvE3runERS2_RKS5_RKS9_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_13Sparse2SparseEvE3runERS2_RKS3_RKNS0_9assign_opINS2_6ScalarENS3_6ScalarEEE'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_12Sparse2DenseET2_E3runERS2_RKS3_RKS4_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_5SolveIT0_T1_EENS0_9assign_opIT2_S8_EENS0_13Sparse2SparseEvE3runERS2_RKS6_RKS9_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_15Diagonal2SparseEvE3runERNS_12SparseMatrixINS2_6ScalarEXTL0__ENS2_12StorageIndexEEERKS3_RKTL0_0_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_15Diagonal2SparseEvE3runERNS_16SparseMatrixBaseITL0__EERKS3_RKNS0_9assign_opINS2_6ScalarENS3_6ScalarEEE'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_15Diagonal2SparseEvE3runERNS_16SparseMatrixBaseITL0__EERKS3_RKNS0_13add_assign_opINS2_6ScalarENS3_6ScalarEEE'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_15Diagonal2SparseEvE3runERNS_16SparseMatrixBaseITL0__EERKS3_RKNS0_13sub_assign_opINS2_6ScalarENS3_6ScalarEEE'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7ProductIT0_T1_Li2EEENS0_9assign_opINS2_6ScalarENS6_6ScalarEEENS0_12Sparse2DenseEvE3runERS2_RKS6_RKSA_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7ProductIT0_T1_Li2EEENS0_13add_assign_opINS2_6ScalarENS6_6ScalarEEENS0_12Sparse2DenseEvE3runERS2_RKS6_RKSA_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_7ProductIT0_T1_Li2EEENS0_13sub_assign_opINS2_6ScalarENS6_6ScalarEEENS0_12Sparse2DenseEvE3runERS2_RKS6_RKSA_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_24SparseSelfAdjoint2SparseEvE3runERNS_12SparseMatrixITL0__XTL0_0_ENS2_12StorageIndexEEERKS3_RKNS0_9assign_o9107206'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_24SparseSelfAdjoint2SparseEvE3runERNS_12SparseMatrixITL0__XTL0_0_ENS2_12StorageIndexEEERKS3_RKTL0_1_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_24SparseSelfAdjoint2SparseEvE3runERNS_12SparseMatrixITL0__XTL0_0_ENS2_12StorageIndexEEERKS3_RKNS0_13add_ass3616825'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_24SparseSelfAdjoint2SparseEvE3runERNS_12SparseMatrixITL0__XTL0_0_ENS2_12StorageIndexEEERKS3_RKNS0_13sub_ass7885826'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_T0_T1_NS0_24SparseSelfAdjoint2SparseEvE3runERNS_19DynamicSparseMatrixITL0__Li0ENS2_12StorageIndexEEERKS3_RKNS0_9assig14757608'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_33SparseSymmetricPermutationProductIT0_XT1_EEENS0_9assign_opIT2_NS4_6ScalarEEENS0_13Sparse2SparseEvE3runERNS_12Spa2281328'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_33SparseSymmetricPermutationProductIT0_XT1_EEENS0_9assign_opIT2_NS4_6ScalarEEENS0_13Sparse2SparseEvE3runERNS_21Spa6548601'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_25SparseQRMatrixQReturnTypeIT0_EENS0_9assign_opINS2_6ScalarES7_EENS0_13Sparse2SparseEvE3runERS2_RKS5_RKS8_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_25SparseQRMatrixQReturnTypeIT0_EENS0_9assign_opINS2_6ScalarES7_EENS0_12Sparse2DenseEvE3runERS2_RKS5_RKS8_'/>
<fun r='_ZN5Eigen8internal10AssignmentIT_NS_14SolveWithGuessIT0_T1_T2_EENS0_9assign_opIT3_S9_EENS0_11Dense2DenseEvE3runERS2_RKS7_RKSA_'/>
