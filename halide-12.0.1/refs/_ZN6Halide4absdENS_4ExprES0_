<dec f='halide/build/include/Halide.h' l='7611' type='Halide::Expr Halide::absd(Halide::Expr a, Halide::Expr b)'/>
<use f='halide/build/include/Halide.h' l='28560' u='c' c='_ZNK6Halide8Internal9IRMatcher6Intrin4makeERNS1_12MatcherStateE13halide_type_t'/>
<doc f='halide/build/include/Halide.h' l='7606'>/** Return the absolute difference between two values. Vectorizes
 * cleanly. Returns an unsigned value of the same bit width. There are
 * various ways to write this yourself, but they contain numerous
 * gotchas and don&apos;t always compile to good code, so use this
 * instead. */</doc>
<use f='halide/python_bindings/src/PyIROperator.cpp' l='61' u='a' c='_ZN6Halide14PythonBindings16define_operatorsERN8pybind117module_E'/>
<dec f='halide/src/IROperator.h' l='806' type='Halide::Expr Halide::absd(Halide::Expr a, Halide::Expr b)'/>
<doc f='halide/src/IROperator.h' l='801'>/** Return the absolute difference between two values. Vectorizes
 * cleanly. Returns an unsigned value of the same bit width. There are
 * various ways to write this yourself, but they contain numerous
 * gotchas and don&apos;t always compile to good code, so use this
 * instead. */</doc>
<use f='halide/src/IRMatch.h' l='1446' u='c' c='_ZNK6Halide8Internal9IRMatcher6Intrin4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/src/Bounds.cpp' l='1185' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4CallE'/>
<use f='halide/src/Bounds.cpp' l='1185' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4CallE'/>
<use f='halide/src/Bounds.cpp' l='3022' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_119constant_bound_testEv'/>
<use f='halide/src/Bounds.cpp' l='3023' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_119constant_bound_testEv'/>
<use f='halide/src/Bounds.cpp' l='3031' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_119constant_bound_testEv'/>
<use f='halide/src/Bounds.cpp' l='3042' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_119constant_bound_testEv'/>
<use f='halide/src/Bounds.cpp' l='3043' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_119constant_bound_testEv'/>
<def f='halide/src/IROperator.cpp' l='1939' ll='1953' type='Halide::Expr Halide::absd(Halide::Expr a, Halide::Expr b)'/>
<use f='halide/src/Simplify_Call.cpp' l='425' u='c' c='_ZN6Halide8Internal8Simplify5visitEPKNS0_4CallEPNS1_8ExprInfoE'/>
