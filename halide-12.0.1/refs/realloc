<dec f='include/stdlib.h' l='550' type='void * realloc(void * __ptr, size_t __size)'/>
<doc f='include/stdlib.h' l='547'>/* __attribute_malloc__ is not used, because if realloc returns
   the same pointer that was passed to it, aliasing needs to be allowed
   between objects pointed by the old and new pointers.  */</doc>
<use f='halide/build-apps/eigen/Eigen/src/Core/util/Memory.h' l='131' u='c' c='_ZN5Eigen8internal24handmade_aligned_reallocEPvmm'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/util/Memory.h' l='220' u='c' c='_ZN5Eigen8internal15aligned_reallocEPvmm'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/util/Memory.h' l='274' u='c' c='_ZN5Eigen8internal27conditional_aligned_reallocEPvmm'/>
<use f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseMatrix.h' l='571' u='c' c='_ZN5Eigen12SparseMatrix18conservativeResizeEll'/>
<use f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseMatrix.h' l='604' u='c' c='_ZN5Eigen12SparseMatrix18conservativeResizeEll'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/c/common.c' l='188' u='c' c='TfLiteTensorRealloc'/>
<dec f='include/malloc.h' l='50' type='void * realloc(void * __ptr, size_t __size)'/>
<doc f='include/malloc.h' l='47'>/* __attribute_malloc__ is not used, because if realloc returns
   the same pointer that was passed to it, aliasing needs to be allowed
   between objects pointed by the old and new pointers.  */</doc>
<use f='halide/llvm-install/include/llvm/Support/MemAlloc.h' l='53' u='c' c='_ZN4llvm12safe_reallocEPvm'/>
