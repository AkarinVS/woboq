<def f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/ThreadPool/EventCount.h' l='130' ll='165' type='void EigenForTFLite::EventCount::Notify(bool notifyAll)'/>
<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/ThreadPool/NonBlockingThreadPool.h' l='74' u='c' c='_ZN14EigenForTFLite15ThreadPoolTemplD1Ev'/>
<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/ThreadPool/NonBlockingThreadPool.h' l='132' u='c' c='_ZN14EigenForTFLite15ThreadPoolTempl16ScheduleWithHintESt8functionIFvvEEii'/>
<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/ThreadPool/NonBlockingThreadPool.h' l='150' u='c' c='_ZN14EigenForTFLite15ThreadPoolTempl6CancelEv'/>
<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/ThreadPool/NonBlockingThreadPool.h' l='421' u='c' c='_ZN14EigenForTFLite15ThreadPoolTempl11WaitForWorkEPNS_10EventCount6WaiterEPNT_4TaskE'/>
<doc f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/ThreadPool/EventCount.h' l='128'>// Notify wakes one or all waiting threads.
  // Must be called after changing the associated wait predicate.</doc>
