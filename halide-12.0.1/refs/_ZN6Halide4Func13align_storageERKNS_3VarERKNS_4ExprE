<dec f='halide/halide-install/include/Halide.h' l='17939' type='Halide::Func &amp; Halide::Func::align_storage(const Halide::Var &amp; dim, const Halide::Expr &amp; alignment)'/>
<use f='halide/halide-install/include/Halide.h' l='25172' u='c' c='_ZN6Halide8Internal19GeneratorOutputBase13align_storageEDpOT_'/>
<use f='halide/halide-install/include/Halide.h' l='25172' u='c' c='_ZN6Halide8Internal19GeneratorOutputBase13align_storageEDpOT_'/>
<doc f='halide/halide-install/include/Halide.h' l='17929'>/** Pad the storage extent of a particular dimension of
     * realizations of this function up to be a multiple of the
     * specified alignment. This guarantees that the strides for the
     * dimensions stored outside of dim will be multiples of the
     * specified alignment, where the strides and alignment are
     * measured in numbers of elements.
     *
     * For example, to guarantee that a function foo(x, y, c)
     * representing an image has scanlines starting on offsets
     * aligned to multiples of 16, use foo.align_storage(x, 16). */</doc>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='187' u='c' c='_ZN12_GLOBAL__N_18Demosaic8scheduleEv'/>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='567' u='c' c='_ZN12_GLOBAL__N_110CameraPipe8generateEv'/>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='568' u='c' c='_ZN12_GLOBAL__N_110CameraPipe8generateEv'/>
<use f='halide/apps/camera_pipe/camera_pipe_generator.cpp' l='569' u='c' c='_ZN12_GLOBAL__N_110CameraPipe8generateEv'/>
<use f='halide/apps/hannk/halide/depthwise_conv_generator.cpp' l='202' u='c' c='_ZN5hannk13DepthwiseConv8generateEv'/>
<use f='halide/apps/hannk/halide/depthwise_conv_generator.cpp' l='208' u='c' c='_ZN5hannk13DepthwiseConv8generateEv'/>
<use f='halide/apps/iir_blur/iir_blur_generator.cpp' l='107' u='c' c='_Z19blur_cols_transposeN6Halide4FuncENS_4ExprES1_bNS_6TargetE'/>
<dec f='halide/build/include/Halide.h' l='17939' type='Halide::Func &amp; Halide::Func::align_storage(const Halide::Var &amp; dim, const Halide::Expr &amp; alignment)'/>
<use f='halide/build/include/Halide.h' l='25172' u='c' c='_ZN6Halide8Internal19GeneratorOutputBase13align_storageEDpOT_'/>
<use f='halide/build/include/Halide.h' l='25172' u='c' c='_ZN6Halide8Internal19GeneratorOutputBase13align_storageEDpOT_'/>
<doc f='halide/build/include/Halide.h' l='17929'>/** Pad the storage extent of a particular dimension of
     * realizations of this function up to be a multiple of the
     * specified alignment. This guarantees that the strides for the
     * dimensions stored outside of dim will be multiples of the
     * specified alignment, where the strides and alignment are
     * measured in numbers of elements.
     *
     * For example, to guarantee that a function foo(x, y, c)
     * representing an image has scanlines starting on offsets
     * aligned to multiples of 16, use foo.align_storage(x, 16). */</doc>
<use f='halide/python_bindings/src/PyFunc.cpp' l='332' u='a' c='_ZN6Halide14PythonBindings11define_funcERN8pybind117module_E'/>
<dec f='halide/src/Func.h' l='2059' type='Halide::Func &amp; Halide::Func::align_storage(const Halide::Var &amp; dim, const Halide::Expr &amp; alignment)'/>
<doc f='halide/src/Func.h' l='2049'>/** Pad the storage extent of a particular dimension of
     * realizations of this function up to be a multiple of the
     * specified alignment. This guarantees that the strides for the
     * dimensions stored outside of dim will be multiples of the
     * specified alignment, where the strides and alignment are
     * measured in numbers of elements.
     *
     * For example, to guarantee that a function foo(x, y, c)
     * representing an image has scanlines starting on offsets
     * aligned to multiples of 16, use foo.align_storage(x, 16). */</doc>
<def f='halide/src/Func.cpp' l='2590' ll='2605' type='Halide::Func &amp; Halide::Func::align_storage(const Halide::Var &amp; dim, const Halide::Expr &amp; alignment)'/>
<use f='halide/src/Generator.h' l='2238' u='c' c='_ZN6Halide8Internal19GeneratorOutputBase13align_storageEDpOT_'/>
<use f='halide/src/Generator.h' l='2238' u='c' c='_ZN6Halide8Internal19GeneratorOutputBase13align_storageEDpOT_'/>
