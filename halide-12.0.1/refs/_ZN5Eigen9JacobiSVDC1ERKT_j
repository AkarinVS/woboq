<def f='halide/build-apps/eigen/Eigen/src/SVD/JacobiSVD.h' l='547' ll='550' type='void Eigen::JacobiSVD::JacobiSVD&lt;MatrixType, QRPreconditioner&gt;(const Eigen::JacobiSVD::MatrixType &amp; matrix, unsigned int computationOptions = 0)'/>
<doc f='halide/build-apps/eigen/Eigen/src/SVD/JacobiSVD.h' l='537'>/** \brief Constructor performing the decomposition of given matrix.
     *
     * \param matrix the matrix to decompose
     * \param computationOptions optional parameter allowing to specify if you want full or thin U or V unitaries to be computed.
     *                           By default, none is computed. This is a bit-field, the possible bits are #ComputeFullU, #ComputeThinU,
     *                           #ComputeFullV, #ComputeThinV.
     *
     * Thin unitaries are only available if your matrix type has a Dynamic number of columns (for example MatrixXf). They also are not
     * available with the (non-default) FullPivHouseholderQR preconditioner.
     */</doc>
<use f='halide/build-apps/eigen/lapack/svd.cpp' l='124' u='c' c='zgesvd_'/>
