<dec f='halide/build-apps/eigen/Eigen/src/Core/DenseBase.h' l='574' type='void Eigen::DenseBase::reverseInPlace()'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/Reverse.h' l='138' ll='161' type='void Eigen::DenseBase::reverseInPlace()'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/Reverse.h' l='126'>/** This is the &quot;in place&quot; version of reverse: it reverses \c *this.
  *
  * In most cases it is probably better to simply use the reversed expression
  * of a matrix. However, when reversing the matrix data itself is really needed,
  * then this &quot;in-place&quot; version is probably the right choice because it provides
  * the following additional benefits:
  *  - less error prone: doing the same operation with .reverse() requires special care:
  *    \code m = m.reverse().eval(); \endcode
  *  - this API enables reverse operations without the need for a temporary
  *  - it allows future optimizations (cache friendliness, etc.)
  *
  * \sa VectorwiseOp::reverseInPlace(), reverse() */</doc>
