<def f='halide/build-apps/abseil-cpp/absl/strings/internal/ostringstream.h' l='63' ll='83'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/internal/str_join_internal.h' l='90' c='_ZN4absl14lts_2020_02_2516strings_internal19StreamFormatterImplclEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/internal/str_join_internal.h' l='96'/>
<size>344</size>
<doc f='halide/build-apps/abseil-cpp/absl/strings/internal/ostringstream.h' l='29'>// The same as std::ostringstream but appends to a user-specified std::string,
// and is faster. It is ~70% faster to create, ~50% faster to write to, and
// completely free to extract the result std::string.
//
//   std::string s;
//   OStringStream strm(&amp;s);
//   strm &lt;&lt; 42 &lt;&lt; &apos; &apos; &lt;&lt; 3.14;  // appends to `s`
//
// The stream object doesn&apos;t have to be named. Starting from C++11 operator&lt;&lt;
// works with rvalues of std::ostream.
//
//   std::string s;
//   OStringStream(&amp;s) &lt;&lt; 42 &lt;&lt; &apos; &apos; &lt;&lt; 3.14;  // appends to `s`
//
// OStringStream is faster to create than std::ostringstream but it&apos;s still
// relatively slow. Avoid creating multiple streams where a single stream will
// do.
//
// Creates unnecessary instances of OStringStream: slow.
//
//   std::string s;
//   OStringStream(&amp;s) &lt;&lt; 42;
//   OStringStream(&amp;s) &lt;&lt; &apos; &apos;;
//   OStringStream(&amp;s) &lt;&lt; 3.14;
//
// Creates a single instance of OStringStream and reuses it: fast.
//
//   std::string s;
//   OStringStream strm(&amp;s);
//   strm &lt;&lt; 42;
//   strm &lt;&lt; &apos; &apos;;
//   strm &lt;&lt; 3.14;
//
// Note: flush() has no effect. No reason to call it.</doc>
<fun r='_ZN4absl14lts_2020_02_2516strings_internal13OStringStreamC1EPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<fun r='_ZN4absl14lts_2020_02_2516strings_internal13OStringStream3strB5cxx11Ev'/>
<fun r='_ZNK4absl14lts_2020_02_2516strings_internal13OStringStream3strB5cxx11Ev'/>
<fun r='_ZN4absl14lts_2020_02_2516strings_internal13OStringStream3strEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<fun r='_ZN4absl14lts_2020_02_2516strings_internal13OStringStream8overflowEi'/>
<fun r='_ZN4absl14lts_2020_02_2516strings_internal13OStringStream6xsputnEPKcl'/>
<mbr r='absl::lts_2020_02_25::strings_internal::OStringStream::s_' o='576' t='std::string *'/>
