<dec f='halide/src/autoschedulers/adams2019/State.h' l='76' type='IntrusivePtr&lt;Halide::Internal::Autoscheduler::State&gt; Halide::Internal::Autoscheduler::State::make_child() const'/>
<doc f='halide/src/autoschedulers/adams2019/State.h' l='72'>// Make a child copy of this state. The loop nest is const (we
    // make mutated copies of it, rather than mutating it), so we can
    // continue to point to the same one and so this is a cheap
    // operation.</doc>
<use f='halide/src/autoschedulers/adams2019/Cache.cpp' l='51' u='c' c='_ZNK6Halide8Internal13Autoscheduler5Cache19add_memoized_blocksEPKNS1_5StateERSt8functionIFvONS0_12IntrusivePtrIS3_EEEEPKNS1_11FunctionDAG4NodeERiRKSD_8139617'/>
<def f='halide/src/autoschedulers/adams2019/State.cpp' l='192' ll='199' type='IntrusivePtr&lt;Halide::Internal::Autoscheduler::State&gt; Halide::Internal::Autoscheduler::State::make_child() const'/>
<use f='halide/src/autoschedulers/adams2019/State.cpp' l='239' u='c' c='_ZNK6Halide8Internal13Autoscheduler5State17generate_childrenERKNS1_11FunctionDAGERKNS_13MachineParamsEPNS_9CostModelElRSt8functionIFvONS0_12IntrusiveP11683623'/>
<use f='halide/src/autoschedulers/adams2019/State.cpp' l='266' u='c' c='_ZNK6Halide8Internal13Autoscheduler5State17generate_childrenERKNS1_11FunctionDAGERKNS_13MachineParamsEPNS_9CostModelElRSt8functionIFvONS0_12IntrusiveP11683623'/>
<use f='halide/src/autoschedulers/adams2019/State.cpp' l='351' u='c' c='_ZNK6Halide8Internal13Autoscheduler5State17generate_childrenERKNS1_11FunctionDAGERKNS_13MachineParamsEPNS_9CostModelElRSt8functionIFvONS0_12IntrusiveP11683623'/>
<use f='halide/src/autoschedulers/adams2019/State.cpp' l='381' u='c' c='_ZNK6Halide8Internal13Autoscheduler5State17generate_childrenERKNS1_11FunctionDAGERKNS_13MachineParamsEPNS_9CostModelElRSt8functionIFvONS0_12IntrusiveP11683623'/>
<use f='halide/src/autoschedulers/adams2019/State.cpp' l='468' u='c' c='_ZNK6Halide8Internal13Autoscheduler5State17generate_childrenERKNS1_11FunctionDAGERKNS_13MachineParamsEPNS_9CostModelElRSt8functionIFvONS0_12IntrusiveP11683623'/>
<use f='halide/src/autoschedulers/adams2019/State.cpp' l='481' u='c' c='_ZNK6Halide8Internal13Autoscheduler5State17generate_childrenERKNS1_11FunctionDAGERKNS_13MachineParamsEPNS_9CostModelElRSt8functionIFvONS0_12IntrusiveP11683623'/>
<doc f='halide/src/autoschedulers/adams2019/State.cpp' l='188'>// Make a child copy of this state. The loop nest is const (we
// make mutated copies of it, rather than mutating it), so we can
// continue to point to the same one and so this is a cheap
// operation.</doc>
