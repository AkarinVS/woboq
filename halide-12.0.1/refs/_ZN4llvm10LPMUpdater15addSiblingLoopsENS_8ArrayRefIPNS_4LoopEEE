<def f='halide/llvm-install/include/llvm/Transforms/Scalar/LoopPassManager.h' l='307' ll='321' type='void llvm::LPMUpdater::addSiblingLoops(ArrayRef&lt;llvm::Loop *&gt; NewSibLoops)'/>
<doc f='halide/llvm-install/include/llvm/Transforms/Scalar/LoopPassManager.h' l='301'>/// Loop passes should use this method to indicate they have added new
  /// sibling loops to the current loop.
  ///
  /// \p NewSibLoops must only contain the immediate sibling loops. Any nested
  /// loops within them will be visited in postorder as usual for the loop pass
  /// manager.</doc>
