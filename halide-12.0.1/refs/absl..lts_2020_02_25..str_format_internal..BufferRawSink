<def f='halide/build-apps/abseil-cpp/absl/strings/internal/str_format/output.h' l='41' ll='52'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/internal/str_format/output.h' l='90' c='_ZN4absl14lts_2020_02_2519str_format_internal15AbslFormatFlushEPNS1_13BufferRawSinkENS0_11string_viewE'/>
<size>24</size>
<doc f='halide/build-apps/abseil-cpp/absl/strings/internal/str_format/output.h' l='38'>// RawSink implementation that writes into a char* buffer.
// It will not overflow the buffer, but will keep the total count of chars
// that would have been written.</doc>
<fun r='_ZN4absl14lts_2020_02_2519str_format_internal13BufferRawSinkC1EPcm'/>
<fun r='_ZNK4absl14lts_2020_02_2519str_format_internal13BufferRawSink13total_writtenEv'/>
<fun r='_ZN4absl14lts_2020_02_2519str_format_internal13BufferRawSink5WriteENS0_11string_viewE'/>
<mbr r='absl::lts_2020_02_25::str_format_internal::BufferRawSink::buffer_' o='0' t='char *'/>
<mbr r='absl::lts_2020_02_25::str_format_internal::BufferRawSink::size_' o='64' t='size_t'/>
<mbr r='absl::lts_2020_02_25::str_format_internal::BufferRawSink::total_written_' o='128' t='size_t'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/internal/str_format/bind.cc' l='233' c='_ZN4absl14lts_2020_02_2519str_format_internal8SnprintFEPcmNS1_21UntypedFormatSpecImplENS0_4SpanIKNS1_13FormatArgImplEEE'/>
<size>24</size>
