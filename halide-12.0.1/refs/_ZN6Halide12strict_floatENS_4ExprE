<dec f='halide/halide-install/include/Halide.h' l='8236' type='Halide::Expr Halide::strict_float(Halide::Expr e)'/>
<doc f='halide/halide-install/include/Halide.h' l='8231'>/** Makes a best effort attempt to preserve IEEE floating-point
 * semantics in evaluating an expression. May not be implemented for
 * all backends. (E.g. it is difficult to do this for C++ code
 * generation as it depends on the compiler flags used to compile the
 * generated code. */</doc>
<use f='halide/apps/resize/resize_generator.cpp' l='90' u='c' c='_ZN6Resize8generateEv'/>
<use f='halide/apps/resize/resize_generator.cpp' l='107' u='c' c='_ZN6Resize8generateEv'/>
<use f='halide/apps/resize/resize_generator.cpp' l='108' u='c' c='_ZN6Resize8generateEv'/>
<dec f='halide/build/include/Halide.h' l='8236' type='Halide::Expr Halide::strict_float(Halide::Expr e)'/>
<doc f='halide/build/include/Halide.h' l='8231'>/** Makes a best effort attempt to preserve IEEE floating-point
 * semantics in evaluating an expression. May not be implemented for
 * all backends. (E.g. it is difficult to do this for C++ code
 * generation as it depends on the compiler flags used to compile the
 * generated code. */</doc>
<use f='halide/python_bindings/src/PyIROperator.cpp' l='187' u='a' c='_ZN6Halide14PythonBindings16define_operatorsERN8pybind117module_E'/>
<dec f='halide/src/IROperator.h' l='1431' type='Halide::Expr Halide::strict_float(Halide::Expr e)'/>
<doc f='halide/src/IROperator.h' l='1426'>/** Makes a best effort attempt to preserve IEEE floating-point
 * semantics in evaluating an expression. May not be implemented for
 * all backends. (E.g. it is difficult to do this for C++ code
 * generation as it depends on the compiler flags used to compile the
 * generated code. */</doc>
<use f='halide/src/EmulateFloat16Math.cpp' l='18' u='c' c='_ZN6Halide8Internal19bfloat16_to_float32ENS_4ExprE'/>
<use f='halide/src/EmulateFloat16Math.cpp' l='24' u='c' c='_ZN6Halide8Internal19float32_to_bfloat16ENS_4ExprE'/>
<use f='halide/src/EmulateFloat16Math.cpp' l='37' u='c' c='_ZN6Halide8Internal18float16_to_float32ENS_4ExprE'/>
<use f='halide/src/EmulateFloat16Math.cpp' l='53' u='c' c='_ZN6Halide8Internal18float16_to_float32ENS_4ExprE'/>
<use f='halide/src/EmulateFloat16Math.cpp' l='61' u='c' c='_ZN6Halide8Internal18float16_to_float32ENS_4ExprE'/>
<use f='halide/src/EmulateFloat16Math.cpp' l='70' u='c' c='_ZN6Halide8Internal18float32_to_float16ENS_4ExprE'/>
<use f='halide/src/EmulateFloat16Math.cpp' l='91' u='c' c='_ZN6Halide8Internal18float32_to_float16ENS_4ExprE'/>
<use f='halide/src/EmulateFloat16Math.cpp' l='91' u='c' c='_ZN6Halide8Internal18float32_to_float16ENS_4ExprE'/>
<use f='halide/src/IROperator.cpp' l='2265' u='c' c='_ZN6Halide6is_nanENS_4ExprE'/>
<use f='halide/src/IROperator.cpp' l='2282' u='c' c='_ZN6Halide6is_infENS_4ExprE'/>
<use f='halide/src/IROperator.cpp' l='2299' u='c' c='_ZN6Halide9is_finiteENS_4ExprE'/>
<def f='halide/src/IROperator.cpp' l='2579' ll='2583' type='Halide::Expr Halide::strict_float(Halide::Expr e)'/>
<use f='halide/src/Simplify_Call.cpp' l='127' u='c' c='_ZN6Halide8Internal8Simplify5visitEPKNS0_4CallEPNS1_8ExprInfoE'/>
<use f='halide/src/StrictifyFloat.cpp' l='45' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_114StrictifyFloat6mutateERKNS_4ExprE'/>
