<def f='halide/build/include/Halide.h' l='11691' ll='11693' type='int Halide::Buffer::device_wrap_native(const Halide::DeviceAPI &amp; d, uint64_t handle, const Halide::Target &amp; t = get_jit_target_from_environment())'/>
<doc f='halide/build/include/Halide.h' l='11686'>/** Wrap a native handle, using the given device API.
     * It is a bad idea to pass DeviceAPI::Default_GPU to this routine
     * as the handle argument must match the API that the default
     * resolves to and it is clearer and more reliable to pass the
     * resolved DeviceAPI explicitly. */</doc>
<def f='halide/src/Buffer.h' l='604' ll='606' type='int Halide::Buffer::device_wrap_native(const Halide::DeviceAPI &amp; d, uint64_t handle, const Halide::Target &amp; t = get_jit_target_from_environment())'/>
<doc f='halide/src/Buffer.h' l='599'>/** Wrap a native handle, using the given device API.
     * It is a bad idea to pass DeviceAPI::Default_GPU to this routine
     * as the handle argument must match the API that the default
     * resolves to and it is clearer and more reliable to pass the
     * resolved DeviceAPI explicitly. */</doc>
