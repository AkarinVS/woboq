<dec f='halide/build/include/HalideRuntime.h' l='686' type='void halide_set_trace_file(int fd)'/>
<doc f='halide/build/include/HalideRuntime.h' l='679'>/** Set the file descriptor that Halide should write binary trace
 * events to. If called with 0 as the argument, Halide outputs trace
 * information to stdout in a human-readable format. If never called,
 * Halide checks the for existence of an environment variable called
 * HL_TRACE_FILE and opens that file. If HL_TRACE_FILE is not defined,
 * it outputs trace information to stdout in a human-readable
 * format. */</doc>
<dec f='halide/build/include/Halide.h' l='784' type='void halide_set_trace_file(int fd)'/>
<doc f='halide/build/include/Halide.h' l='777'>/** Set the file descriptor that Halide should write binary trace
 * events to. If called with 0 as the argument, Halide outputs trace
 * information to stdout in a human-readable format. If never called,
 * Halide checks the for existence of an environment variable called
 * HL_TRACE_FILE and opens that file. If HL_TRACE_FILE is not defined,
 * it outputs trace information to stdout in a human-readable
 * format. */</doc>
<dec f='halide/src/runtime/HalideRuntime.h' l='686' type='void halide_set_trace_file(int fd)'/>
<doc f='halide/src/runtime/HalideRuntime.h' l='679'>/** Set the file descriptor that Halide should write binary trace
 * events to. If called with 0 as the argument, Halide outputs trace
 * information to stdout in a human-readable format. If never called,
 * Halide checks the for existence of an environment variable called
 * HL_TRACE_FILE and opens that file. If HL_TRACE_FILE is not defined,
 * it outputs trace information to stdout in a human-readable
 * format. */</doc>
<dec f='halide/build/tutorial/lesson_10_halide.h' l='758' type='void halide_set_trace_file(int fd)'/>
<doc f='halide/build/tutorial/lesson_10_halide.h' l='751'>/** Set the file descriptor that Halide should write binary trace
 * events to. If called with 0 as the argument, Halide outputs trace
 * information to stdout in a human-readable format. If never called,
 * Halide checks the for existence of an environment variable called
 * HL_TRACE_FILE and opens that file. If HL_TRACE_FILE is not defined,
 * it outputs trace information to stdout in a human-readable
 * format. */</doc>
