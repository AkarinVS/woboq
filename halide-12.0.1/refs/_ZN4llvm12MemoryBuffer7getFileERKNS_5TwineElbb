<dec f='halide/llvm-install/include/llvm/Support/MemoryBuffer.h' l='86' type='static ErrorOr&lt;std::unique_ptr&lt;MemoryBuffer&gt; &gt; llvm::MemoryBuffer::getFile(const llvm::Twine &amp; Filename, int64_t FileSize = -1, bool RequiresNullTerminator = true, bool IsVolatile = false)'/>
<doc f='halide/llvm-install/include/llvm/Support/MemoryBuffer.h' l='77'>/// Open the specified file as a MemoryBuffer, returning a new MemoryBuffer
  /// if successful, otherwise returning null. If FileSize is specified, this
  /// means that the client knows that the file exists and that it has the
  /// specified size.
  ///
  /// \param IsVolatile Set to true to indicate that the contents of the file
  /// can change outside the user&apos;s control, e.g. when libclang tries to parse
  /// while the user is editing/updating the file or if the file is on an NFS.</doc>
