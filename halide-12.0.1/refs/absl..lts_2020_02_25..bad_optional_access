<def f='halide/build-apps/abseil-cpp/absl/types/bad_optional_access.h' l='60' ll='65'/>
<size>8</size>
<doc f='halide/build-apps/abseil-cpp/absl/types/bad_optional_access.h' l='43'>// -----------------------------------------------------------------------------
// bad_optional_access
// -----------------------------------------------------------------------------
//
// An `absl::bad_optional_access` type is an exception type that is thrown when
// attempting to access an `absl::optional` object that does not contain a
// value.
//
// Example:
//
//   absl::optional&lt;int&gt; o;
//
//   try {
//     int n = o.value();
//   } catch(const absl::bad_optional_access&amp; e) {
//     std::cout &lt;&lt; &quot;Bad optional access: &quot; &lt;&lt; e.what() &lt;&lt; &apos;\n&apos;;
//   }</doc>
<fun r='_ZN4absl14lts_2020_02_2519bad_optional_accessC1Ev'/>
<fun r='_ZN4absl14lts_2020_02_2519bad_optional_accessD1Ev'/>
<fun r='_ZNK4absl14lts_2020_02_2519bad_optional_access4whatEv'/>
<use f='halide/build-apps/abseil-cpp/absl/types/bad_optional_access.cc' l='37' c='_ZN4absl14lts_2020_02_2517optional_internal25throw_bad_optional_accessEv'/>
<size>8</size>
<fun r='_ZN4absl14lts_2020_02_2519bad_optional_accessD1Ev'/>
<fun r='_ZNK4absl14lts_2020_02_2519bad_optional_access4whatEv'/>
