<dec f='halide/llvm-install/include/llvm/IR/Value.h' l='239' type='void llvm::Value::printAsOperand(llvm::raw_ostream &amp; O, bool PrintType = true, const llvm::Module * M = nullptr) const'/>
<doc f='halide/llvm-install/include/llvm/IR/Value.h' l='230'>/// @}

  /// Print the name of this Value out to the specified raw_ostream.
  ///
  /// This is useful when you just want to print &apos;int %reg126&apos;, not the
  /// instruction that generated it. If you specify a Module for context, then
  /// even constanst get pretty-printed; for example, the type of a null
  /// pointer is printed symbolically.
  /// @{</doc>
