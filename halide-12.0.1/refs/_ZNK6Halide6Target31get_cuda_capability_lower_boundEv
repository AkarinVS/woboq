<dec f='halide/halide-install/include/Halide.h' l='5280' type='int Halide::Target::get_cuda_capability_lower_bound() const'/>
<doc f='halide/halide-install/include/Halide.h' l='5277'>/** Get the minimum cuda capability found as an integer. Returns
     * 20 (our minimum supported cuda compute capability) if no cuda
     * features are set. */</doc>
<dec f='halide/build/include/Halide.h' l='5280' type='int Halide::Target::get_cuda_capability_lower_bound() const'/>
<doc f='halide/build/include/Halide.h' l='5277'>/** Get the minimum cuda capability found as an integer. Returns
     * 20 (our minimum supported cuda compute capability) if no cuda
     * features are set. */</doc>
<dec f='halide/src/Target.h' l='286' type='int Halide::Target::get_cuda_capability_lower_bound() const'/>
<doc f='halide/src/Target.h' l='283'>/** Get the minimum cuda capability found as an integer. Returns
     * 20 (our minimum supported cuda compute capability) if no cuda
     * features are set. */</doc>
<use f='halide/src/CodeGen_PTX_Dev.cpp' l='787' u='c' c='_ZNK6Halide8Internal12_GLOBAL__N_115CodeGen_PTX_Dev19supports_atomic_addERKNS_4TypeE'/>
<def f='halide/src/Target.cpp' l='744' ll='773' type='int Halide::Target::get_cuda_capability_lower_bound() const'/>
<use f='halide/src/Target.cpp' l='1045' u='c' c='_ZN6Halide6Target29get_runtime_compatible_targetERKS0_RS0_'/>
<use f='halide/src/Target.cpp' l='1046' u='c' c='_ZN6Halide6Target29get_runtime_compatible_targetERKS0_RS0_'/>
