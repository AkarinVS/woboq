<dec f='halide/llvm-install/include/llvm/IR/LLVMContext.h' l='279' type='void llvm::LLVMContext::diagnose(const llvm::DiagnosticInfo &amp; DI)'/>
<doc f='halide/llvm-install/include/llvm/IR/LLVMContext.h' l='269'>/// Report a message to the currently installed diagnostic handler.
  ///
  /// This function returns, in particular in the case of error reporting
  /// (DI.Severity == \a DS_Error), so the caller should leave the compilation
  /// process in a self-consistent state, even though the generated code
  /// need not be correct.
  ///
  /// The diagnostic message will be implicitly prefixed with a severity keyword
  /// according to \p DI.getSeverity(), i.e., &quot;error: &quot; for \a DS_Error,
  /// &quot;warning: &quot; for \a DS_Warning, and &quot;note: &quot; for \a DS_Note.</doc>
