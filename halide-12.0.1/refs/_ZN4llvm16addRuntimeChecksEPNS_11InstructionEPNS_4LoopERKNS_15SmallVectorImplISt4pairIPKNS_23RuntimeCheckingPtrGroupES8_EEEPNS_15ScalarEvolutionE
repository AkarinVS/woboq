<dec f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='481' type='std::pair&lt;Instruction *, Instruction *&gt; llvm::addRuntimeChecks(llvm::Instruction * Loc, llvm::Loop * TheLoop, const SmallVectorImpl&lt;llvm::RuntimePointerCheck&gt; &amp; PointerChecks, llvm::ScalarEvolution * SE)'/>
<doc f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='474'>/// Add code that checks at runtime if the accessed arrays in \p PointerChecks
/// overlap.
///
/// Returns a pair of instructions where the first element is the first
/// instruction generated in possibly a sequence of instructions and the
/// second value is the final comparator value or NULL if no check is needed.</doc>
