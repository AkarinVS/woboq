<dec f='halide/llvm-install/include/llvm/ExecutionEngine/ExecutionEngine.h' l='359' type='void * llvm::ExecutionEngine::getPointerToFunction(llvm::Function * F)'/>
<use f='halide/llvm-install/include/llvm/ExecutionEngine/ExecutionEngine.h' l='370' u='c' c='_ZN4llvm15ExecutionEngine26getPointerToFunctionOrStubEPNS_8FunctionE'/>
<doc f='halide/llvm-install/include/llvm/ExecutionEngine/ExecutionEngine.h' l='351'>/// getPointerToFunction - The different EE&apos;s represent function bodies in
  /// different ways.  They should each implement this to say what a function
  /// pointer should look like.  When F is destroyed, the ExecutionEngine will
  /// remove its global mapping and free any machine code.  Be sure no threads
  /// are running inside F when that happens.
  ///
  /// This function is deprecated for the MCJIT execution engine.  Use
  /// getFunctionAddress instead.</doc>
