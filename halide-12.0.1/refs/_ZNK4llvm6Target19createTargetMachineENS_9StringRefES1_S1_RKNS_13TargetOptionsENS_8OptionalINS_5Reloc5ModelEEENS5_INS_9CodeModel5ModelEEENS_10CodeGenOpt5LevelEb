<def f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='393' ll='404' type='llvm::TargetMachine * llvm::Target::createTargetMachine(llvm::StringRef TT, llvm::StringRef CPU, llvm::StringRef Features, const llvm::TargetOptions &amp; Options, Optional&lt;Reloc::Model&gt; RM, Optional&lt;CodeModel::Model&gt; CM = None, CodeGenOpt::Level OL = CodeGenOpt::Default, bool JIT = false) const'/>
<doc f='halide/llvm-install/include/llvm/Support/TargetRegistry.h' l='386'>/// createTargetMachine - Create a target specific machine implementation
  /// for the specified \p Triple.
  ///
  /// \param TT This argument is used to determine the target machine
  /// feature set; it should always be provided. Generally this should be
  /// either the target triple from the module, or the target triple of the
  /// host if that does not exist.</doc>
<use f='halide/src/CodeGen_Internal.cpp' l='736' u='c' c='_ZN6Halide8Internal19make_target_machineERKN4llvm6ModuleE'/>
<use f='halide/src/CodeGen_PTX_Dev.cpp' l='619' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_115CodeGen_PTX_Dev14compile_to_srcEv'/>
