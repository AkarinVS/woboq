<dec f='halide/build/include/Halide.h' l='2355' type='void Halide::Error::Error(const std::string &amp; msg)'/>
<doc f='halide/build/include/Halide.h' l='2353'>// Give each class a non-inlined constructor so that the type
    // doesn&apos;t get separately instantiated in each compilation unit.</doc>
<use f='halide/python_bindings/src/PyError.cpp' l='9' u='c' c='_ZN6Halide14PythonBindings12_GLOBAL__N_119halide_python_errorEPvPKc'/>
<use f='halide/python_bindings/src/PyError.cpp' l='23' u='c' c='_ZN6Halide14PythonBindings12_GLOBAL__N_136HalidePythonCompileTimeErrorReporter5errorEPKc'/>
<use f='halide/python_bindings/stub/PyStubImpl.cpp' l='39' u='c' c='_ZN6Halide14PythonBindings12_GLOBAL__N_119halide_python_errorEPvPKc'/>
<use f='halide/python_bindings/stub/PyStubImpl.cpp' l='53' u='c' c='_ZN6Halide14PythonBindings12_GLOBAL__N_136HalidePythonCompileTimeErrorReporter5errorEPKc'/>
<dec f='halide/src/Error.h' l='19' type='void Halide::Error::Error(const std::string &amp; msg)'/>
<doc f='halide/src/Error.h' l='17'>// Give each class a non-inlined constructor so that the type
    // doesn&apos;t get separately instantiated in each compilation unit.</doc>
<def f='halide/src/Error.cpp' l='36' ll='38' type='void Halide::Error::Error(const std::string &amp; msg)'/>
<use f='halide/src/Error.cpp' l='41' u='c' c='_ZN6Halide12CompileErrorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='halide/src/Error.cpp' l='45' u='c' c='_ZN6Halide12RuntimeErrorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='halide/src/Error.cpp' l='49' u='c' c='_ZN6Halide13InternalErrorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
