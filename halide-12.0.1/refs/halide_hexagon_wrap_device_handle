<dec f='halide/build/include/HalideRuntimeHexagonHost.h' l='36' type='int halide_hexagon_wrap_device_handle(void * user_context, struct halide_buffer_t * buf, void * ptr, uint64_t size)'/>
<doc f='halide/build/include/HalideRuntimeHexagonHost.h' l='29'>/** The device handle for Hexagon is simply a pointer and size, stored
 * in the dev field of the halide_buffer_t. If the buffer is allocated in a
 * particular way (ion_alloc), the buffer will be shared with Hexagon
 * (not copied). The device field of the halide_buffer_t must be NULL when this
 * routine is called. This call can fail due to running out of memory
 * or being passed an invalid device handle. The device and host
 * dirty bits are left unmodified. */</doc>
