<dec f='halide/halide-install/include/Halide.h' l='7385' type='Halide::Expr Halide::operator&gt;=(const Halide::Expr &amp; a, int b)'/>
<doc f='halide/halide-install/include/Halide.h' l='7381'>/** Return a boolean expression that tests whether an expression is
 * greater than or equal to a constant integer. Coerces the integer to
 * the type of the expression. Errors if the integer is not
 * representable in that type. */</doc>
<use f='halide/apps/depthwise_separable_conv/depthwise_separable_conv_generator.cpp' l='36' u='c' c='_ZN12_GLOBAL__N_129DepthwiseSeparableConvolution8generateEv'/>
<use f='halide/apps/depthwise_separable_conv/depthwise_separable_conv_generator.cpp' l='37' u='c' c='_ZN12_GLOBAL__N_129DepthwiseSeparableConvolution8generateEv'/>
<use f='halide/apps/fft/fft.cpp' l='982' u='c' c='_Z9fft2d_c2r5FuncTI11ComplexExprESt6vectorIiSaIiEES4_RKN6Halide6TargetERK9Fft2dDesc'/>
<use f='halide/apps/hannk/halide/conv_generator.cpp' l='206' u='c' c='_ZN5hannk4Conv8generateEv'/>
<use f='halide/apps/hannk/halide/conv_generator.cpp' l='263' u='c' c='_ZN5hannk4Conv8generateEv'/>
<use f='halide/apps/hannk/halide/copy_generator.cpp' l='47' u='c' c='_ZN5hannk4Copy8generateEv'/>
<use f='halide/apps/hannk/halide/depthwise_conv_generator.cpp' l='145' u='c' c='_ZN5hannk13DepthwiseConv8generateEv'/>
<use f='halide/apps/hannk/halide/depthwise_conv_generator.cpp' l='146' u='c' c='_ZN5hannk13DepthwiseConv8generateEv'/>
<use f='halide/apps/hannk/halide/depthwise_conv_generator.cpp' l='148' u='c' c='_ZN5hannk13DepthwiseConv8generateEv'/>
<use f='halide/apps/hannk/halide/depthwise_conv_generator.cpp' l='164' u='c' c='_ZN5hannk13DepthwiseConv8generateEv'/>
<use f='halide/apps/hannk/halide/fill_generator.cpp' l='31' u='c' c='_ZN5hannk4Fill8generateEv'/>
<use f='halide/apps/hannk/halide/fully_connected_generator.cpp' l='112' u='c' c='_ZN5hannk14FullyConnected8generateEv'/>
<use f='halide/apps/hannk/halide/fully_connected_generator.cpp' l='112' u='c' c='_ZN5hannk14FullyConnected8generateEv'/>
<use f='halide/apps/hannk/halide/fully_connected_generator.cpp' l='122' u='c' c='_ZN5hannk14FullyConnected8generateEv'/>
<use f='halide/apps/hannk/halide/pool_generator.cpp' l='90' u='c' c='_ZN5hannk11AveragePool8generateEv'/>
<use f='halide/apps/hannk/halide/pool_generator.cpp' l='151' u='c' c='_ZN5hannk7MaxPool8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='74' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='81' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='114' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='115' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='117' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='118' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='141' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='143' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='149' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='151' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='158' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='161' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='161' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='168' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='172' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='174' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='189' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l2_generators.cpp' l='191' u='c' c='_ZN12_GLOBAL__N_113GEMVGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l3_generators.cpp' l='111' u='c' c='_ZN12_GLOBAL__N_113GEMMGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l3_generators.cpp' l='111' u='c' c='_ZN12_GLOBAL__N_113GEMMGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l3_generators.cpp' l='117' u='c' c='_ZN12_GLOBAL__N_113GEMMGenerator8generateEv'/>
<use f='halide/apps/linear_algebra/src/blas_l3_generators.cpp' l='117' u='c' c='_ZN12_GLOBAL__N_113GEMMGenerator8generateEv'/>
<dec f='halide/build/include/Halide.h' l='7385' type='Halide::Expr Halide::operator&gt;=(const Halide::Expr &amp; a, int b)'/>
<doc f='halide/build/include/Halide.h' l='7381'>/** Return a boolean expression that tests whether an expression is
 * greater than or equal to a constant integer. Coerces the integer to
 * the type of the expression. Errors if the integer is not
 * representable in that type. */</doc>
<dec f='halide/src/IROperator.h' l='580' type='Halide::Expr Halide::operator&gt;=(const Halide::Expr &amp; a, int b)'/>
<doc f='halide/src/IROperator.h' l='576'>/** Return a boolean expression that tests whether an expression is
 * greater than or equal to a constant integer. Coerces the integer to
 * the type of the expression. Errors if the integer is not
 * representable in that type. */</doc>
<use f='halide/src/AddImageChecks.cpp' l='451' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_122add_image_checks_innerENS0_4StmtERKSt6vectorINS0_8FunctionESaIS4_EERKNS_6TargetERKS3_INSt7__cxx1112basic_stringIcSt10743020'/>
<use f='halide/src/Bounds.cpp' l='566' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_3DivE'/>
<use f='halide/src/Bounds.cpp' l='598' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_3DivE'/>
<use f='halide/src/Bounds.cpp' l='687' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_3ModE'/>
<use f='halide/src/Bounds.cpp' l='1267' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4CallE'/>
<use f='halide/src/Bounds.cpp' l='1274' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4CallE'/>
<use f='halide/src/Bounds.cpp' l='1298' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4CallE'/>
<use f='halide/src/Bounds.cpp' l='1306' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4CallE'/>
<use f='halide/src/Bounds.cpp' l='1325' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4CallE'/>
<use f='halide/src/Bounds.cpp' l='1327' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4CallE'/>
<use f='halide/src/Bounds.cpp' l='1337' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4CallE'/>
<use f='halide/src/Bounds.cpp' l='1354' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4CallE'/>
<use f='halide/src/Bounds.cpp' l='1374' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4CallE'/>
<use f='halide/src/Bounds.cpp' l='1375' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4CallE'/>
<use f='halide/src/Bounds.cpp' l='2996' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_119constant_bound_testEv'/>
<use f='halide/src/Bounds.cpp' l='3015' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_119constant_bound_testEv'/>
<use f='halide/src/Bounds.cpp' l='3152' u='c' c='_ZN6Halide8Internal11bounds_testEv'/>
<use f='halide/src/CodeGen_Internal.cpp' l='592' u='c' c='_ZN6Halide8Internal23lower_signed_shift_leftERKNS_4ExprES3_'/>
<use f='halide/src/CodeGen_Internal.cpp' l='613' u='c' c='_ZN6Halide8Internal24lower_signed_shift_rightERKNS_4ExprES3_'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='2660' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_4CallE'/>
<use f='halide/src/EmulateFloat16Math.cpp' l='58' u='c' c='_ZN6Halide8Internal18float16_to_float32ENS_4ExprE'/>
<use f='halide/src/FindIntrinsics.cpp' l='444' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_114FindIntrinsics5visitEPKNS0_4CastE'/>
<use f='halide/src/FindIntrinsics.cpp' l='695' u='c' c='_ZN6Halide8Internal21lower_mul_shift_rightERKNS_4ExprES3_S3_'/>
<use f='halide/src/FindIntrinsics.cpp' l='728' u='c' c='_ZN6Halide8Internal30lower_rounding_mul_shift_rightERKNS_4ExprES3_S3_'/>
<def f='halide/src/IROperator.cpp' l='1735' ll='1740' type='Halide::Expr Halide::operator&gt;=(const Halide::Expr &amp; a, int b)'/>
<use f='halide/src/IRPrinter.cpp' l='196' u='c' c='_ZN6Halide8Internal9IRPrinter4testEv'/>
<use f='halide/src/LowerWarpShuffles.cpp' l='80' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_111reduce_exprENS_4ExprERKS2_RKNS0_5ScopeINS0_8IntervalEEE'/>
<use f='halide/src/LowerWarpShuffles.cpp' l='533' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_117LowerWarpShuffles14make_warp_loadENS_4TypeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_4ExprESC_'/>
<use f='halide/src/Profiling.cpp' l='367' u='c' c='_ZN6Halide8Internal16inject_profilingENS0_4StmtERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='halide/src/Solve.cpp' l='1295' u='c' c='_ZN6Halide8Internal10solve_testEv'/>
<use f='halide/src/Solve.cpp' l='1296' u='c' c='_ZN6Halide8Internal10solve_testEv'/>
<use f='halide/src/Solve.cpp' l='1345' u='c' c='_ZN6Halide8Internal10solve_testEv'/>
<use f='halide/src/Solve.cpp' l='1346' u='c' c='_ZN6Halide8Internal10solve_testEv'/>
<use f='halide/src/StorageFolding.cpp' l='835' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_131AttemptStorageFoldingOfFunction5visitEPKNS0_3ForE'/>
<use f='halide/src/StorageFolding.cpp' l='839' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_131AttemptStorageFoldingOfFunction5visitEPKNS0_3ForE'/>
<use f='halide/src/autoschedulers/mullapudi2016/AutoSchedule.cpp' l='2155' u='c' c='_ZNK6Halide8Internal12_GLOBAL__N_111Partitioner16estimate_benefitERKNS2_13GroupAnalysisES5_bb'/>
<use f='halide/src/autoschedulers/mullapudi2016/AutoSchedule.cpp' l='2164' u='c' c='_ZNK6Halide8Internal12_GLOBAL__N_111Partitioner16estimate_benefitERKNS2_13GroupAnalysisES5_bb'/>
<use f='halide/src/autoschedulers/mullapudi2016/AutoSchedule.cpp' l='2415' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_111Partitioner15vectorize_stageERKNS2_5GroupENS_5StageEiNS0_10DefinitionERKNS0_8FunctionEbRKNS_6TargetERSt3setINSt7__c12967337'/>
<use f='halide/src/autoschedulers/mullapudi2016/AutoSchedule.cpp' l='2755' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_111Partitioner27generate_group_cpu_scheduleERKNS2_5GroupERKNS_6TargetERKSt3mapINS1_6FStageES9_INSt7__cxx1112basic_stri4682444'/>
<use f='halide/test/generator/pyramid_generator.cpp' l='33' u='c' c='_ZN12_GLOBAL__N_17Pyramid8generateEv'/>
<use f='halide/tutorial/lesson_17_predicated_rdom.cpp' l='164' u='c' c='main'/>
