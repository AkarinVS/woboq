<dec f='halide/build/include/Halide.h' l='7503' type='Halide::Expr Halide::min(int a, Halide::Expr b)'/>
<doc f='halide/build/include/Halide.h' l='7498'>/** Returns an expression representing the lesser of a constant
 * integer and an expression. The integer is coerced to the type of
 * the expression. Errors if the integer is not representable as that
 * type. Vectorizes cleanly on most platforms (with the exception of
 * integer types on x86 without SSE4). */</doc>
<dec f='halide/src/IROperator.h' l='698' type='Halide::Expr Halide::min(int a, Halide::Expr b)'/>
<doc f='halide/src/IROperator.h' l='693'>/** Returns an expression representing the lesser of a constant
 * integer and an expression. The integer is coerced to the type of
 * the expression. Errors if the integer is not representable as that
 * type. Vectorizes cleanly on most platforms (with the exception of
 * integer types on x86 without SSE4). */</doc>
<use f='halide/src/Associativity.cpp' l='661' u='c' c='_ZN6Halide8Internal18associativity_testEv'/>
<def f='halide/src/IROperator.cpp' l='1866' ll='1871' type='Halide::Expr Halide::min(int a, Halide::Expr b)'/>
<use f='halide/src/Solve.cpp' l='1246' u='c' c='_ZN6Halide8Internal10solve_testEv'/>
