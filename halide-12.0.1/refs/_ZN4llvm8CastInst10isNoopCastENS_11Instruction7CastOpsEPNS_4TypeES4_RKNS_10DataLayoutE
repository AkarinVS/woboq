<dec f='halide/llvm-install/include/llvm/IR/InstrTypes.h' l='649' type='static bool llvm::CastInst::isNoopCast(Instruction::CastOps Opcode, llvm::Type * SrcTy, llvm::Type * DstTy, const llvm::DataLayout &amp; DL)'/>
<doc f='halide/llvm-install/include/llvm/IR/InstrTypes.h' l='642'>/// A no-op cast is one that can be effected without changing any bits.
  /// It implies that the source and destination types are the same size. The
  /// DataLayout argument is to determine the pointer size when examining casts
  /// involving Integer and Pointer types. They are no-op casts if the integer
  /// is the same size as the pointer. However, pointer size varies with
  /// platform.  Note that a precondition of this method is that the cast is
  /// legal - i.e. the instruction formed with these operands would verify.</doc>
