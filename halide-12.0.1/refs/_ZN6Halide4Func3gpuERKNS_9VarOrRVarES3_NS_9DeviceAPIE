<dec f='halide/build/include/Halide.h' l='17812' type='Halide::Func &amp; Halide::Func::gpu(const Halide::VarOrRVar &amp; block_x, const Halide::VarOrRVar &amp; thread_x, Halide::DeviceAPI device_api = DeviceAPI::Default_GPU)'/>
<doc f='halide/build/include/Halide.h' l='17806'>/** Tell Halide that the following dimensions correspond to GPU
     * block indices and thread indices. If the selected target is not
     * ptx, these just mark the given dimensions as parallel. The
     * dimensions are consumed by this call, so do all other
     * unrolling, reordering, etc first. */
    // @{</doc>
<dec f='halide/src/Func.h' l='1932' type='Halide::Func &amp; Halide::Func::gpu(const Halide::VarOrRVar &amp; block_x, const Halide::VarOrRVar &amp; thread_x, Halide::DeviceAPI device_api = DeviceAPI::Default_GPU)'/>
<doc f='halide/src/Func.h' l='1926'>/** Tell Halide that the following dimensions correspond to GPU
     * block indices and thread indices. If the selected target is not
     * ptx, these just mark the given dimensions as parallel. The
     * dimensions are consumed by this call, so do all other
     * unrolling, reordering, etc first. */
    // @{</doc>
<def f='halide/src/Func.cpp' l='2449' ll='2453' type='Halide::Func &amp; Halide::Func::gpu(const Halide::VarOrRVar &amp; bx, const Halide::VarOrRVar &amp; tx, Halide::DeviceAPI device_api = DeviceAPI::Default_GPU)'/>
