<use f='halide/build-apps/ruy/ruy/mul_params.h' l='199'/>
<def f='halide/build-apps/ruy/ruy/mul_params.h' l='220' ll='239'/>
<def f='halide/build-apps/ruy/ruy/mul_params.h' l='243' ll='271'/>
<def f='halide/build-apps/ruy/ruy/mul_params.h' l='277' ll='297'/>
<use f='halide/build-apps/ruy/ruy/mul_params.h' l='278'/>
<size>16</size>
<doc f='halide/build-apps/ruy/ruy/mul_params.h' l='241'>// Specialization for the integer-quantized type, with down-quantization of
// int32 accumulators to a narrower destination scalar type.</doc>
<doc f='halide/build-apps/ruy/ruy/mul_params.h' l='273'>// Specialization used in the integer case when outputting raw int32
// accumulators, without down-quantization to a narrower destination scalar
// type. In this case, the feature of clamping destination values is not
// available.</doc>
<mbr r='ruy::detail::MulParamsStorage::bias' o='0' t='const AccumScalar *'/>
<mbr r='ruy::detail::MulParamsStorage::clamp_min' t='DstScalar'/>
<mbr r='ruy::detail::MulParamsStorage::clamp_max' t='DstScalar'/>
<mbr r='ruy::detail::MulParamsStorage::channel_dimension' o='64' t='ruy::ChannelDimension'/>
<mbr r='ruy::detail::MulParamsStorage::perchannel_buffers_capacity_rounding_log2' o='72' t='std::int8_t'/>
<smbr r='ruy::detail::MulParamsStorage::multiplier_fixedpoint_perchannel' t='const AccumScalar *const'/>
<smbr r='ruy::detail::MulParamsStorage::multiplier_exponent_perchannel' t='const int *const'/>
<smbr r='ruy::detail::MulParamsStorage::multiplier_fixedpoint' t='const AccumScalar'/>
<smbr r='ruy::detail::MulParamsStorage::multiplier_exponent' t='const int'/>
<smbr r='ruy::detail::MulParamsStorage::perchannel' t='const bool'/>
<mbr r='ruy::detail::MulParamsStorage::bias' o='0' t='const ruy::detail::MulParamsStorage&lt;int, type-parameter-0-0&gt;::AccumScalar *'/>
<mbr r='ruy::detail::MulParamsStorage::multiplier_fixedpoint_perchannel' t='const ruy::detail::MulParamsStorage&lt;int, type-parameter-0-0&gt;::AccumScalar *'/>
<mbr r='ruy::detail::MulParamsStorage::multiplier_fixedpoint' t='ruy::detail::MulParamsStorage&lt;int, type-parameter-0-0&gt;::AccumScalar'/>
<mbr r='ruy::detail::MulParamsStorage::multiplier_exponent_perchannel' t='const int *'/>
<mbr r='ruy::detail::MulParamsStorage::multiplier_exponent' t='int'/>
<mbr r='ruy::detail::MulParamsStorage::clamp_min' t='DstScalar'/>
<mbr r='ruy::detail::MulParamsStorage::clamp_max' t='DstScalar'/>
<mbr r='ruy::detail::MulParamsStorage::channel_dimension' o='64' t='ruy::ChannelDimension'/>
<mbr r='ruy::detail::MulParamsStorage::perchannel' t='bool'/>
<mbr r='ruy::detail::MulParamsStorage::perchannel_buffers_capacity_rounding_log2' o='72' t='std::int8_t'/>
<mbr r='ruy::detail::MulParamsStorage::bias' o='0' t='const ruy::detail::MulParamsStorage&lt;int, int&gt;::AccumScalar *'/>
<mbr r='ruy::detail::MulParamsStorage::channel_dimension' o='64' t='ruy::ChannelDimension'/>
<mbr r='ruy::detail::MulParamsStorage::perchannel_buffers_capacity_rounding_log2' o='72' t='std::int8_t'/>
<smbr r='ruy::detail::MulParamsStorage{int,int}::multiplier_fixedpoint_perchannel' t='const ruy::detail::MulParamsStorage&lt;int, int&gt;::AccumScalar *const'/>
<smbr r='ruy::detail::MulParamsStorage{int,int}::multiplier_exponent_perchannel' t='const int *const'/>
<smbr r='ruy::detail::MulParamsStorage{int,int}::multiplier_fixedpoint' t='const ruy::detail::MulParamsStorage&lt;int, int&gt;::AccumScalar'/>
<smbr r='ruy::detail::MulParamsStorage{int,int}::multiplier_exponent' t='const int'/>
<smbr r='ruy::detail::MulParamsStorage{int,int}::clamp_min' t='const ruy::detail::MulParamsStorage&lt;int, int&gt;::DstScalar'/>
<smbr r='ruy::detail::MulParamsStorage{int,int}::clamp_max' t='const ruy::detail::MulParamsStorage&lt;int, int&gt;::DstScalar'/>
<smbr r='ruy::detail::MulParamsStorage{int,int}::perchannel' t='const bool'/>
