<dec f='halide/halide-install/include/Halide.h' l='21065' type='Halide::Derivative Halide::propagate_adjoints(const Halide::Func &amp; output)'/>
<doc f='halide/halide-install/include/Halide.h' l='21058'>/**
 *  Given a scalar Func with size 1, (back)propagate the gradient
 *  to all dependent Funcs, buffers, and parameters.
 *  For each Func the output depends on, and for the pure definition and
 *  each update of that Func, it generates a derivative Func stored in
 *  the Derivative.
 */</doc>
<dec f='halide/build/include/Halide.h' l='21065' type='Halide::Derivative Halide::propagate_adjoints(const Halide::Func &amp; output)'/>
<doc f='halide/build/include/Halide.h' l='21058'>/**
 *  Given a scalar Func with size 1, (back)propagate the gradient
 *  to all dependent Funcs, buffers, and parameters.
 *  For each Func the output depends on, and for the pure definition and
 *  each update of that Func, it generates a derivative Func stored in
 *  the Derivative.
 */</doc>
<use f='halide/python_bindings/src/PyDerivative.cpp' l='33' u='a' c='_ZN6Halide14PythonBindings17define_derivativeERN8pybind117module_E'/>
<dec f='halide/src/Derivative.h' l='70' type='Halide::Derivative Halide::propagate_adjoints(const Halide::Func &amp; output)'/>
<def f='halide/src/Derivative.cpp' l='1975' ll='1984' type='Halide::Derivative Halide::propagate_adjoints(const Halide::Func &amp; output)'/>
<doc f='halide/src/Derivative.h' l='63'>/**
 *  Given a scalar Func with size 1, (back)propagate the gradient
 *  to all dependent Funcs, buffers, and parameters.
 *  For each Func the output depends on, and for the pure definition and
 *  each update of that Func, it generates a derivative Func stored in
 *  the Derivative.
 */</doc>
<use f='halide/src/autoschedulers/adams2019/cost_model_generator.cpp' l='449' u='c' c='_ZN9CostModel8generateEv'/>
