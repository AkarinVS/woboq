<dec f='halide/llvm-install/include/llvm/Bitcode/BitcodeReader.h' l='152' type='Expected&lt;std::unique_ptr&lt;Module&gt; &gt; llvm::getOwningLazyBitcodeModule(std::unique_ptr&lt;MemoryBuffer&gt; &amp;&amp; Buffer, llvm::LLVMContext &amp; Context, bool ShouldLazyLoadMetadata = false, bool IsImporting = false)'/>
<doc f='halide/llvm-install/include/llvm/Bitcode/BitcodeReader.h' l='148'>/// Like getLazyBitcodeModule, except that the module takes ownership of
  /// the memory buffer if successful. If successful, this moves Buffer. On
  /// error, this *does not* move Buffer. If IsImporting is true, this module is
  /// being parsed for ThinLTO importing into another module.</doc>
