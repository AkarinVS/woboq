<dec f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.h' l='89' type='bool absl::lts_2020_02_25::debugging_internal::VDSOSupport::LookupSymbol(const char * name, const char * version, int symbol_type, absl::lts_2020_02_25::debugging_internal::VDSOSupport::SymbolInfo * info_out) const'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='113' u='c' c='_ZN4absl14lts_2020_02_2518debugging_internal11VDSOSupport4InitEv'/>
<def f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.cc' l='134' ll='139' type='bool absl::lts_2020_02_25::debugging_internal::VDSOSupport::LookupSymbol(const char * name, const char * version, int type, absl::lts_2020_02_25::debugging_internal::VDSOSupport::SymbolInfo * info) const'/>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/internal/vdso_support.h' l='85'>// Look up versioned dynamic symbol in the kernel VDSO.
  // Returns false if VDSO is not present, or doesn&apos;t contain given
  // symbol/version/type combination.
  // If info_out != nullptr, additional details are filled in.</doc>
