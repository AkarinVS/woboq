<def f='halide/build-apps/ruy/ruy/path.h' l='127' type='const ruy::Path'/>
<use f='halide/build-apps/ruy/ruy/path.h' l='162' u='r'/>
<use f='halide/build-apps/ruy/ruy/path.h' l='174' u='r'/>
<use f='halide/build-apps/ruy/ruy/path.h' l='190' u='r'/>
<doc f='halide/build-apps/ruy/ruy/path.h' l='119'>// We define three disjoint sets of paths.
//
// kNonArchPaths is the set of paths that are defined regardless of
// the CPU architecture (excluding some internal test-only paths).
// These paths are slow, but portable. At the moment,
// that is only kStandardCpp. In the past, that used to also include a
// kReference path providing an even more basic implementation, but that has
// been split out into a separate library, see the ReferenceMul function.</doc>
<use f='halide/build-apps/ruy/ruy/ctx.cc' l='67' u='r' c='_ZN3ruy3Ctx22SetRuntimeEnabledPathsENS_4PathE'/>
<use f='halide/build-apps/ruy/ruy/ctx.cc' l='134' u='r' c='_ZN3ruy12_GLOBAL__N_127DetectRuntimeSupportedPathsENS_4PathEPNS_7CpuInfoE'/>
