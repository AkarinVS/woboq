<dec f='halide/build-apps/flatbuffers/include/flatbuffers/idl.h' l='824' type='bool flatbuffers::Parser::Deserialize(const reflection::Schema * schema)'/>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/idl.h' l='822'>// Fills internal structure as if the schema passed had been loaded by parsing
  // with Parse except that included filenames will not be populated.</doc>
<use f='halide/build-apps/flatbuffers/src/idl_parser.cpp' l='3488' u='c' c='_ZN11flatbuffers6Parser11DeserializeEPKhm'/>
<def f='halide/build-apps/flatbuffers/src/idl_parser.cpp' l='3491' ll='3561' type='bool flatbuffers::Parser::Deserialize(const reflection::Schema * schema)'/>
