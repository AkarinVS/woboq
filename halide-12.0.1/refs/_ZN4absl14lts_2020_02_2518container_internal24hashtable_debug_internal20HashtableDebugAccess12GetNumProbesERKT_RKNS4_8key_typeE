<def f='halide/build-apps/abseil-cpp/absl/container/internal/hashtable_debug_hooks.h' l='58' ll='67' type='static size_t absl::lts_2020_02_25::container_internal::hashtable_debug_internal::HashtableDebugAccess::GetNumProbes(const Container &amp; c, const typename Container::key_type &amp; key)'/>
<doc f='halide/build-apps/abseil-cpp/absl/container/internal/hashtable_debug_hooks.h' l='50'>// Returns the number of probes required to find `key` in `c`.  The &quot;number of
  // probes&quot; is a concept that can vary by container.  Implementations should
  // return 0 when `key` was found in the minimum number of operations and
  // should increment the result for each non-trivial operation required to find
  // `key`.
  //
  // The default implementation uses the bucket api from the standard and thus
  // works for `std::unordered_*` containers.</doc>
