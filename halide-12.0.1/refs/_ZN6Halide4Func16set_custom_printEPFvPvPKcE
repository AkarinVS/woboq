<dec f='halide/build/include/Halide.h' l='16996' type='void Halide::Func::set_custom_print(void (*)(void *, const char *) handler)'/>
<doc f='halide/build/include/Halide.h' l='16988'>/** Set the function called to print messages from the runtime.
     * If you are compiling statically, you can also just define your
     * own function with signature
     \code
     extern &quot;C&quot; void halide_print(void *user_context, const char *);
     \endcode
     * This will clobber Halide&apos;s version.
     */</doc>
<dec f='halide/src/Func.h' l='1116' type='void Halide::Func::set_custom_print(void (*)(void *, const char *) handler)'/>
<doc f='halide/src/Func.h' l='1108'>/** Set the function called to print messages from the runtime.
     * If you are compiling statically, you can also just define your
     * own function with signature
     \code
     extern &quot;C&quot; void halide_print(void *user_context, const char *);
     \endcode
     * This will clobber Halide&apos;s version.
     */</doc>
<def f='halide/src/Func.cpp' l='3284' ll='3286' type='void Halide::Func::set_custom_print(void (*)(void *, const char *) cust_print)'/>
