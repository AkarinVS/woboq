<dec f='halide/llvm-install/include/llvm/Analysis/LoopInfo.h' l='1311' type='llvm::MDNode * llvm::makePostTransformationMetadata(llvm::LLVMContext &amp; Context, llvm::MDNode * OrigLoopID, llvm::ArrayRef&lt;llvm::StringRef&gt; RemovePrefixes, llvm::ArrayRef&lt;llvm::MDNode *&gt; AddAttrs)'/>
<doc f='halide/llvm-install/include/llvm/Analysis/LoopInfo.h' l='1295'>/// Create a new LoopID after the loop has been transformed.
///
/// This can be used when no follow-up loop attributes are defined
/// (llvm::makeFollowupLoopID returning None) to stop transformations to be
/// applied again.
///
/// @param Context        The LLVMContext in which to create the new LoopID.
/// @param OrigLoopID     The original LoopID; can be nullptr if the original
///                       loop has no LoopID.
/// @param RemovePrefixes Remove all loop attributes that have these prefixes.
///                       Use to remove metadata of the transformation that has
///                       been applied.
/// @param AddAttrs       Add these loop attributes to the new LoopID.
///
/// @return A new LoopID that can be applied using Loop::setLoopID().</doc>
