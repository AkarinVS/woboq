<def f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/ThreadPool/NonBlockingThreadPool.h' l='334' ll='357' type='EigenForTFLite::ThreadPoolTempl::Task EigenForTFLite::ThreadPoolTempl::Steal(unsigned int start, unsigned int limit)'/>
<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/ThreadPool/NonBlockingThreadPool.h' l='370' u='c' c='_ZN14EigenForTFLite15ThreadPoolTempl10LocalStealEv'/>
<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/ThreadPool/NonBlockingThreadPool.h' l='375' u='c' c='_ZN14EigenForTFLite15ThreadPoolTempl11GlobalStealEv'/>
<doc f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/ThreadPool/NonBlockingThreadPool.h' l='332'>// Steal tries to steal work from other worker threads in the range [start,
  // limit) in best-effort manner.</doc>
