<dec f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.h' l='82' type='bool absl::lts_2020_02_25::flags_internal::Retire(const char * name, absl::lts_2020_02_25::flags_internal::FlagStaticTypeId type_id)'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.h' l='87' u='c' c='_ZN4absl14lts_2020_02_2514flags_internal11RetiredFlagEPKc'/>
<doc f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.h' l='49'>//-----------------------------------------------------------------------------
// Retired registrations:
//
// Retired flag registrations are treated specially. A &apos;retired&apos; flag is
// provided only for compatibility with automated invocations that still
// name it.  A &apos;retired&apos; flag:
//   - is not bound to a C++ FLAGS_ reference.
//   - has a type and a value, but that value is intentionally inaccessible.
//   - does not appear in --help messages.
//   - is fully supported by _all_ flag parsing routines.
//   - consumes args normally, and complains about type mismatches in its
//     argument.
//   - emits a complaint but does not die (e.g. LOG(ERROR)) if it is
//     accessed by name through the flags API for parsing or otherwise.
//
// The registrations for a flag happen in an unspecified order as the
// initializers for the namespace-scope objects of a program are run.
// Any number of weak registrations for a flag can weakly define the flag.
// One non-weak registration will upgrade the flag from weak to non-weak.
// Further weak registrations of a non-weak flag are ignored.
//
// This mechanism is designed to support moving dead flags into a
// &apos;graveyard&apos; library.  An example migration:
//
//   0: Remove references to this FLAGS_flagname in the C++ codebase.
//   1: Register as &apos;retired&apos; in old_lib.
//   2: Make old_lib depend on graveyard.
//   3: Add a redundant &apos;retired&apos; registration to graveyard.
//   4: Remove the old_lib &apos;retired&apos; registration.
//   5: Eventually delete the graveyard registration entirely.
//

// Retire flag with name &quot;name&quot; and type indicated by ops.</doc>
<def f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.cc' l='330' ll='334' type='bool absl::lts_2020_02_25::flags_internal::Retire(const char * name, absl::lts_2020_02_25::flags_internal::FlagStaticTypeId type_id)'/>
