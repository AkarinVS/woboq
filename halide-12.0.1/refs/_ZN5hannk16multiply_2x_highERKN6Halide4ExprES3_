<dec f='halide/apps/hannk/halide/common_halide.h' l='40' type='Halide::Expr hannk::multiply_2x_high(const Halide::Expr &amp; a, const Halide::Expr &amp; b)'/>
<def f='halide/apps/hannk/halide/common_halide.cpp' l='59' ll='61' type='Halide::Expr hannk::multiply_2x_high(const Halide::Expr &amp; a, const Halide::Expr &amp; b)'/>
<use f='halide/apps/hannk/halide/common_halide.cpp' l='91' u='c' c='_ZN5hannk11approx_log2EiRKN6Halide4ExprEiRKNS0_4TypeE'/>
<use f='halide/apps/hannk/halide/common_halide.cpp' l='92' u='c' c='_ZN5hannk11approx_log2EiRKN6Halide4ExprEiRKNS0_4TypeE'/>
<use f='halide/apps/hannk/halide/common_halide.cpp' l='99' u='c' c='_ZN5hannk11approx_log2EiRKN6Halide4ExprEiRKNS0_4TypeE'/>
<use f='halide/apps/hannk/halide/common_halide.cpp' l='100' u='c' c='_ZN5hannk11approx_log2EiRKN6Halide4ExprEiRKNS0_4TypeE'/>
<use f='halide/apps/hannk/halide/common_halide.cpp' l='101' u='c' c='_ZN5hannk11approx_log2EiRKN6Halide4ExprEiRKNS0_4TypeE'/>
<use f='halide/apps/hannk/halide/common_halide.cpp' l='138' u='c' c='_ZN5hannk11approx_exp2EiRKN6Halide4ExprES3_RKNS0_4TypeE'/>
<use f='halide/apps/hannk/halide/common_halide.cpp' l='139' u='c' c='_ZN5hannk11approx_exp2EiRKN6Halide4ExprES3_RKNS0_4TypeE'/>
<use f='halide/apps/hannk/halide/common_halide.cpp' l='147' u='c' c='_ZN5hannk11approx_exp2EiRKN6Halide4ExprES3_RKNS0_4TypeE'/>
<use f='halide/apps/hannk/halide/common_halide.cpp' l='148' u='c' c='_ZN5hannk11approx_exp2EiRKN6Halide4ExprES3_RKNS0_4TypeE'/>
<use f='halide/apps/hannk/halide/common_halide.cpp' l='149' u='c' c='_ZN5hannk11approx_exp2EiRKN6Halide4ExprES3_RKNS0_4TypeE'/>
<use f='halide/apps/hannk/halide/common_halide.cpp' l='152' u='c' c='_ZN5hannk11approx_exp2EiRKN6Halide4ExprES3_RKNS0_4TypeE'/>
<use f='halide/apps/hannk/halide/common_halide.cpp' l='205' u='c' c='_ZN5hannk15approx_logisticEiRKN6Halide4ExprES3_RKNS0_4TypeE'/>
<use f='halide/apps/hannk/halide/common_halide.cpp' l='216' u='c' c='_ZN5hannk11approx_tanhEiRKN6Halide4ExprES3_RKNS0_4TypeE'/>
<doc f='halide/apps/hannk/halide/common_halide.h' l='38'>// Compute saturating_narrow(rounding_shift_right(widening_mul(a, b), N))
// where N is the number of bits of the narrowed result minus one.</doc>
<use f='halide/apps/hannk/halide/conv_generator.cpp' l='152' u='c' c='_ZN5hannk4Conv8generateEv'/>
<use f='halide/apps/hannk/halide/depthwise_conv_generator.cpp' l='97' u='c' c='_ZN5hannk13DepthwiseConv8generateEv'/>
<use f='halide/apps/hannk/halide/elementwise_generator.cpp' l='77' u='c' c='_ZN5hannk3Mul8generateEv'/>
<use f='halide/apps/hannk/halide/elementwise_generator.cpp' l='152' u='c' c='_ZN5hannk11Elementwise5buildEv'/>
<use f='halide/apps/hannk/halide/fully_connected_generator.cpp' l='91' u='c' c='_ZN5hannk14FullyConnected8generateEv'/>
<use f='halide/apps/hannk/halide/normalizations_generator.cpp' l='85' u='c' c='_ZN5hannk7Softmax8generateEv'/>
<use f='halide/apps/hannk/halide/normalizations_generator.cpp' l='105' u='c' c='_ZN5hannk7Softmax8generateEv'/>
<use f='halide/apps/hannk/halide/normalizations_generator.cpp' l='106' u='c' c='_ZN5hannk7Softmax8generateEv'/>
