<dec f='halide/build/include/Halide.h' l='30315' type='Halide::Internal::Stmt Halide::Internal::lower_main_stmt(const std::vector&lt;Function&gt; &amp; output_funcs, const std::string &amp; pipeline_name, const Halide::Target &amp; t, const std::vector&lt;Stmt&gt; &amp; requirements = std::vector&lt;Stmt&gt;(), bool trace_pipeline = false, const std::vector&lt;IRMutator *&gt; &amp; custom_passes = std::vector&lt;IRMutator *&gt;())'/>
<doc f='halide/build/include/Halide.h' l='30310'>/** Given a halide function with a schedule, create a statement that
 * evaluates it. Automatically pulls in all the functions f depends
 * on. Some stages of lowering may be target-specific. Mostly used as
 * a convenience function in tests that wish to assert some property
 * of the lowered IR. */</doc>
<dec f='halide/src/Lower.h' l='46' type='Halide::Internal::Stmt Halide::Internal::lower_main_stmt(const std::vector&lt;Function&gt; &amp; output_funcs, const std::string &amp; pipeline_name, const Halide::Target &amp; t, const std::vector&lt;Stmt&gt; &amp; requirements = std::vector&lt;Stmt&gt;(), bool trace_pipeline = false, const std::vector&lt;IRMutator *&gt; &amp; custom_passes = std::vector&lt;IRMutator *&gt;())'/>
<doc f='halide/src/Lower.h' l='41'>/** Given a halide function with a schedule, create a statement that
 * evaluates it. Automatically pulls in all the functions f depends
 * on. Some stages of lowering may be target-specific. Mostly used as
 * a convenience function in tests that wish to assert some property
 * of the lowered IR. */</doc>
<def f='halide/src/Lower.cpp' l='541' ll='560' type='Halide::Internal::Stmt Halide::Internal::lower_main_stmt(const std::vector&lt;Function&gt; &amp; output_funcs, const std::string &amp; pipeline_name, const Halide::Target &amp; t, const std::vector&lt;Stmt&gt; &amp; requirements = std::vector&lt;Stmt&gt;(), bool trace_pipeline = false, const std::vector&lt;IRMutator *&gt; &amp; custom_passes = std::vector&lt;IRMutator *&gt;())'/>
