<dec f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1188' type='absl::lts_2020_02_25::Time absl::lts_2020_02_25::FromTM(const struct tm &amp; tm, absl::lts_2020_02_25::TimeZone tz)'/>
<doc f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1179'>// FromTM()
//
// Converts the `tm_year`, `tm_mon`, `tm_mday`, `tm_hour`, `tm_min`, and
// `tm_sec` fields to an `absl::Time` using the given time zone. See ctime(3)
// for a description of the expected values of the tm fields. If the indicated
// time instant is not unique (see `absl::TimeZone::At(absl::CivilSecond)`
// above), the `tm_isdst` field is consulted to select the desired instant
// (`tm_isdst` &gt; 0 means DST, `tm_isdst` == 0 means no DST, `tm_isdst` &lt; 0
// means use the post-transition offset).</doc>
<def f='halide/build-apps/abseil-cpp/absl/time/time.cc' l='433' ll='446' type='absl::Time absl::lts_2020_02_25::FromTM(const struct tm &amp; tm, absl::TimeZone tz)'/>
