<def f='halide/llvm-install/include/llvm/IR/PassManager.h' l='1032' ll='1035' type='llvm::InnerAnalysisManagerProxy::Result llvm::InnerAnalysisManagerProxy::run(IRUnitT &amp; IR, AnalysisManager&lt;IRUnitT, ExtraArgTs...&gt; &amp; AM, ExtraArgTs... )'/>
<dec f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='203' type='CGSCCAnalysisManagerModuleProxy::Result llvm::InnerAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;LazyCallGraph::SCC, llvm::LazyCallGraph &amp;&gt;, llvm::Module&gt;::run(llvm::Module &amp; M, llvm::ModuleAnalysisManager &amp; AM)'/>
<dec f='halide/llvm-install/include/llvm/Analysis/LoopAnalysisManager.h' l='145' type='LoopAnalysisManagerFunctionProxy::Result llvm::InnerAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults &amp;&gt;, llvm::Function&gt;::run(llvm::Function &amp; F, llvm::FunctionAnalysisManager &amp; AM)'/>
<doc f='halide/llvm-install/include/llvm/IR/PassManager.h' l='1027'>/// Run the analysis pass and create our proxy result object.
  ///
  /// This doesn&apos;t do any interesting work; it is primarily used to insert our
  /// proxy result object into the outer analysis cache so that we can proxy
  /// invalidation to the inner analysis manager.</doc>
<doc f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='199'>/// Provide a specialized run method for the \c CGSCCAnalysisManagerModuleProxy
/// so it can pass the lazy call graph to the result.</doc>
<doc f='halide/llvm-install/include/llvm/Analysis/LoopAnalysisManager.h' l='141'>/// Provide a specialized run method for the \c LoopAnalysisManagerFunctionProxy
/// so it can pass the \c LoopInfo to the result.</doc>
