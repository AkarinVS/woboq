<dec f='halide/build-apps/ruy/ruy/mul_params.h' l='236' type='const AccumScalar'/>
<dec f='halide/build-apps/ruy/ruy/mul_params.h' l='259' type='ruy::detail::MulParamsStorage&lt;int, type-parameter-0-0&gt;::AccumScalar'/>
<doc f='halide/build-apps/ruy/ruy/mul_params.h' l='252'>// Let the default multiplier be effecively a multiplication by 1, so that
  // the matmul behaves as a (saturating) plain integer matmul. Unfortunately
  // 1 is not exactly representable in fixedpoint with 0 integer bits, but
  // using the highest representable value is a sufficiently good
  // approximation: since this specialization of MulParams is for the case
  // where DstScalar is at least 2x narrower than MulScalar, the values
  // for which there would be a difference will get saturated anyway.</doc>
