<def f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='3526' ll='3569'/>
<use f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='3560' c='_ZNK4llvm13DebugVariableeqERKS0_'/>
<use f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='3565' c='_ZNK4llvm13DebugVariableltERKS0_'/>
<use f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='3571'/>
<use f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='3575' c='_ZN4llvm12DenseMapInfoINS_13DebugVariableEE11getEmptyKeyEv'/>
<use f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='3576' c='_ZN4llvm12DenseMapInfoINS_13DebugVariableEE11getEmptyKeyEv'/>
<use f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='3580' c='_ZN4llvm12DenseMapInfoINS_13DebugVariableEE15getTombstoneKeyEv'/>
<use f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='3581' c='_ZN4llvm12DenseMapInfoINS_13DebugVariableEE15getTombstoneKeyEv'/>
<use f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='3584' c='_ZN4llvm12DenseMapInfoINS_13DebugVariableEE12getHashValueERKS1_'/>
<use f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='3593' c='_ZN4llvm12DenseMapInfoINS_13DebugVariableEE7isEqualERKS1_S4_'/>
<use f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='3593' c='_ZN4llvm12DenseMapInfoINS_13DebugVariableEE7isEqualERKS1_S4_'/>
<size>40</size>
<doc f='halide/llvm-install/include/llvm/IR/DebugInfoMetadata.h' l='3515'>/// Identifies a unique instance of a variable.
///
/// Storage for identifying a potentially inlined instance of a variable,
/// or a fragment thereof. This guarantees that exactly one variable instance
/// may be identified by this class, even when that variable is a fragment of
/// an aggregate variable and/or there is another inlined instance of the same
/// source code variable nearby.
/// This class does not necessarily uniquely identify that variable: it is
/// possible that a DebugVariable with different parameters may point to the
/// same variable instance, but not that one DebugVariable points to multiple
/// variable instances.</doc>
<mbr r='llvm::DebugVariable::Variable' o='0' t='const llvm::DILocalVariable *'/>
<mbr r='llvm::DebugVariable::Fragment' o='64' t='Optional&lt;llvm::DebugVariable::FragmentInfo&gt;'/>
<mbr r='llvm::DebugVariable::InlinedAt' o='256' t='const llvm::DILocation *'/>
<smbr r='llvm::DebugVariable::DefaultFragment' t='const llvm::DebugVariable::FragmentInfo'/>
<fun r='_ZN4llvm13DebugVariableC1EPKNS_15DILocalVariableENS_8OptionalINS_12DIExpression12FragmentInfoEEEPKNS_10DILocationE'/>
<fun r='_ZN4llvm13DebugVariableC1EPKNS_15DILocalVariableEPKNS_12DIExpressionEPKNS_10DILocationE'/>
<fun r='_ZNK4llvm13DebugVariable11getVariableEv'/>
<fun r='_ZNK4llvm13DebugVariable11getFragmentEv'/>
<fun r='_ZNK4llvm13DebugVariable12getInlinedAtEv'/>
<fun r='_ZNK4llvm13DebugVariable20getFragmentOrDefaultEv'/>
<fun r='_ZN4llvm13DebugVariable17isDefaultFragmentENS_12DIExpression12FragmentInfoE'/>
<fun r='_ZNK4llvm13DebugVariableeqERKS0_'/>
<fun r='_ZNK4llvm13DebugVariableltERKS0_'/>
