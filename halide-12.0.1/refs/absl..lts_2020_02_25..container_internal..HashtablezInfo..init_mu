<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.h' l='69' c='_ZN4absl14lts_2020_02_2518container_internal14HashtablezInfo18PrepareForSamplingEv'/>
<dec f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.h' l='85' type='absl::Mutex'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.h' l='87'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.h' l='69' c='_ZN4absl14lts_2020_02_2518container_internal14HashtablezInfo18PrepareForSamplingEv'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.cc' l='86' u='a' c='_ZN4absl14lts_2020_02_2518container_internal17HashtablezSamplerC1Ev'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.cc' l='112' u='a' c='_ZN4absl14lts_2020_02_2518container_internal17HashtablezSampler8PushDeadEPNS1_14HashtablezInfoE'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.cc' l='113' u='a' c='_ZN4absl14lts_2020_02_2518container_internal17HashtablezSampler8PushDeadEPNS1_14HashtablezInfoE'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.cc' l='119' u='a' c='_ZN4absl14lts_2020_02_2518container_internal17HashtablezSampler7PopDeadEv'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.cc' l='127' u='a' c='_ZN4absl14lts_2020_02_2518container_internal17HashtablezSampler7PopDeadEv'/>
<use f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.cc' l='160' u='a' c='_ZN4absl14lts_2020_02_2518container_internal17HashtablezSampler7IterateERKSt8functionIFvRKNS1_14HashtablezInfoEEE'/>
<offset>448</offset>
<doc f='halide/build-apps/abseil-cpp/absl/container/internal/hashtablez_sampler.h' l='81'>// `HashtablezSampler` maintains intrusive linked lists for all samples.  See
  // comments on `HashtablezSampler::all_` for details on these.  `init_mu`
  // guards the ability to restore the sample to a pristine state.  This
  // prevents races with sampling and resurrecting an object.</doc>
