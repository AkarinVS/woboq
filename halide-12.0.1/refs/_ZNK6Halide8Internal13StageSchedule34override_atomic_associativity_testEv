<dec f='halide/halide-install/include/Halide.h' l='6427' type='bool Halide::Internal::StageSchedule::override_atomic_associativity_test() const'/>
<doc f='halide/halide-install/include/Halide.h' l='6422'>/** Atomic updates are only allowed on associative reductions.
     *  We try to prove the associativity, but the user can override
     *  the associativity test and suppress compiler error if the prover
     *  fails to recognize the associativity or the user does not care. */
    // @{</doc>
<dec f='halide/build/include/Halide.h' l='6427' type='bool Halide::Internal::StageSchedule::override_atomic_associativity_test() const'/>
<doc f='halide/build/include/Halide.h' l='6422'>/** Atomic updates are only allowed on associative reductions.
     *  We try to prove the associativity, but the user can override
     *  the associativity test and suppress compiler error if the prover
     *  fails to recognize the associativity or the user does not care. */
    // @{</doc>
<dec f='halide/src/Schedule.h' l='710' type='bool Halide::Internal::StageSchedule::override_atomic_associativity_test() const'/>
<doc f='halide/src/Schedule.h' l='705'>/** Atomic updates are only allowed on associative reductions.
     *  We try to prove the associativity, but the user can override
     *  the associativity test and suppress compiler error if the prover
     *  fails to recognize the associativity or the user does not care. */
    // @{</doc>
<def f='halide/src/Schedule.cpp' l='584' ll='586' type='bool Halide::Internal::StageSchedule::override_atomic_associativity_test() const'/>
