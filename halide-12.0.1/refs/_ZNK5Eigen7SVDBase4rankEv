<def f='halide/build-apps/eigen/Eigen/src/SVD/SVDBase.h' l='145' ll='154' type='Eigen::SVDBase::Index Eigen::SVDBase::rank() const'/>
<use f='halide/build-apps/eigen/Eigen/src/SVD/SVDBase.h' l='293' u='c' c='_ZNK5Eigen7SVDBase11_solve_implERKTL0__RTL0_0_'/>
<use f='halide/build-apps/eigen/Eigen/src/SVD/SVDBase.h' l='307' u='c' c='_ZNK5Eigen7SVDBase22_solve_impl_transposedERKTL0_0_RTL0_1_'/>
<doc f='halide/build-apps/eigen/Eigen/src/SVD/SVDBase.h' l='139'>/** \returns the rank of the matrix of which \c *this is the SVD.
    *
    * \note This method has to determine which singular values should be considered nonzero.
    *       For that, it uses the threshold value that you can control by calling
    *       setThreshold(const RealScalar&amp;).
    */</doc>
