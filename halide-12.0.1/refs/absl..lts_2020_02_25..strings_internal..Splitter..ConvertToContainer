<use f='halide/build-apps/abseil-cpp/absl/strings/internal/str_split_internal.h' l='305' c='_ZNK4absl14lts_2020_02_2516strings_internal8SplittercvTL0__Ev'/>
<def f='halide/build-apps/abseil-cpp/absl/strings/internal/str_split_internal.h' l='335' ll='344'/>
<def f='halide/build-apps/abseil-cpp/absl/strings/internal/str_split_internal.h' l='351' ll='376'/>
<def f='halide/build-apps/abseil-cpp/absl/strings/internal/str_split_internal.h' l='384' ll='390'/>
<def f='halide/build-apps/abseil-cpp/absl/strings/internal/str_split_internal.h' l='398' ll='444'/>
<doc f='halide/build-apps/abseil-cpp/absl/strings/internal/str_split_internal.h' l='346'>// Partial specialization for a std::vector&lt;absl::string_view&gt;.
  //
  // Optimized for the common case of splitting to a
  // std::vector&lt;absl::string_view&gt;. In this case we first split the results to
  // a small array of absl::string_view on the stack, to reduce reallocations.</doc>
<doc f='halide/build-apps/abseil-cpp/absl/strings/internal/str_split_internal.h' l='378'>// Partial specialization for a std::vector&lt;std::string&gt;.
  //
  // Optimized for the common case of splitting to a std::vector&lt;std::string&gt;.
  // In this case we first split the results to a std::vector&lt;absl::string_view&gt;
  // so the returned std::vector&lt;std::string&gt; can have space reserved to avoid
  // std::string moves.</doc>
<doc f='halide/build-apps/abseil-cpp/absl/strings/internal/str_split_internal.h' l='392'>// Partial specialization for containers of pairs (e.g., maps).
  //
  // The algorithm is to insert a new pair into the map for each even-numbered
  // item, with the even-numbered item as the key with a default-constructed
  // value. Each odd-numbered item will then be assigned to the last pair&apos;s
  // value.</doc>
<fun r='_ZNK4absl14lts_2020_02_2516strings_internal8Splitter18ConvertToContainerclERKNS1_8SplitterIT_T0_EE'/>
<fun r='_ZNK4absl14lts_2020_02_2516strings_internal8Splitter18ConvertToContainerISt6vectorINS0_11string_viewETL0__ES5_Lb0EEclERKNS1_8SplitterIT_T0_EE'/>
<fun r='_ZNK4absl14lts_2020_02_2516strings_internal8Splitter18ConvertToContainerISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEETL0__ESA_Lb0EEc12890058'/>
<fun r='_ZNK4absl14lts_2020_02_2516strings_internal8Splitter18ConvertToContainerITL0__St4pairIKTL0_0_TL0_1_ELb1EEclERKNS1_8SplitterIT_T0_EE'/>
