<def f='halide/halide-install/include/Halide.h' l='1663' ll='1665' macro='1' type='bool halide_buffer_t::is_bounds_query() const'/>
<use f='halide/halide-install/include/Halide.h' l='11068' u='c' c='_ZNK6Halide7Runtime6Buffer15is_bounds_queryEv'/>
<def f='halide/halide-install/include/HalideRuntime.h' l='1565' ll='1567' macro='1' type='bool halide_buffer_t::is_bounds_query() const'/>
<use f='halide/halide-install/include/HalideBuffer.h' l='2306' u='c' c='_ZNK6Halide7Runtime6Buffer15is_bounds_queryEv'/>
<use f='halide/apps/c_backend/run.cpp' l='16' u='c' c='an_extern_stage'/>
<def f='halide/build/include/HalideRuntime.h' l='1565' ll='1567' macro='1' type='bool halide_buffer_t::is_bounds_query() const'/>
<def f='halide/build/include/Halide.h' l='1663' ll='1665' macro='1' type='bool halide_buffer_t::is_bounds_query() const'/>
<use f='halide/build/include/Halide.h' l='11068' u='c' c='_ZNK6Halide7Runtime6Buffer15is_bounds_queryEv'/>
<def f='halide/src/runtime/HalideRuntime.h' l='1565' ll='1567' macro='1' type='bool halide_buffer_t::is_bounds_query() const'/>
<use f='halide/src/runtime/HalideBuffer.h' l='2306' u='c' c='_ZNK6Halide7Runtime6Buffer15is_bounds_queryEv'/>
<use f='halide/src/autoschedulers/adams2019/test_function_dag.cpp' l='10' u='c' c='mul_by_two'/>
<use f='halide/src/autoschedulers/adams2019/test_function_dag.cpp' l='86' u='c' c='matmul'/>
<use f='halide/src/autoschedulers/adams2019/test_function_dag.cpp' l='86' u='c' c='matmul'/>
<use f='halide/test/generator/extern_output_aottest.cpp' l='17' u='c' c='extern_stage'/>
<use f='halide/test/generator/extern_output_aottest.cpp' l='23' u='c' c='extern_stage'/>
<use f='halide/test/generator/msan_aottest.cpp' l='71' u='c' c='msan_extern_stage'/>
<use f='halide/test/generator/msan_aottest.cpp' l='71' u='c' c='msan_extern_stage'/>
<use f='halide/test/generator/msan_aottest.cpp' l='72' u='c' c='msan_extern_stage'/>
<use f='halide/test/generator/msan_aottest.cpp' l='81' u='c' c='msan_extern_stage'/>
<def f='halide/build/tutorial/lesson_10_halide.h' l='1637' ll='1639' macro='1' type='bool halide_buffer_t::is_bounds_query() const'/>
