<def f='halide/build/include/Halide.h' l='10025' ll='10040' type='Buffer&lt;T, D&gt; Halide::Runtime::Buffer::cropped(const std::vector&lt;std::pair&lt;int, int&gt; &gt; &amp; rect) const'/>
<doc f='halide/build/include/Halide.h' l='10021'>/** Make an image that refers to a sub-rectangle of this image along
     * the first N dimensions. Asserts that the crop region is within
     * the existing bounds. The cropped image may drop any device handle
     * if the device_interface cannot accomplish the crop in-place. */</doc>
<def f='halide/src/runtime/HalideBuffer.h' l='1263' ll='1278' type='Buffer&lt;T, D&gt; Halide::Runtime::Buffer::cropped(const std::vector&lt;std::pair&lt;int, int&gt; &gt; &amp; rect) const'/>
<doc f='halide/src/runtime/HalideBuffer.h' l='1259'>/** Make an image that refers to a sub-rectangle of this image along
     * the first N dimensions. Asserts that the crop region is within
     * the existing bounds. The cropped image may drop any device handle
     * if the device_interface cannot accomplish the crop in-place. */</doc>
