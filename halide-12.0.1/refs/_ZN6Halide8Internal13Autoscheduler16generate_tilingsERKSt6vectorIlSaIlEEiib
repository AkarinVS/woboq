<dec f='halide/src/autoschedulers/adams2019/LoopNest.h' l='34' type='std::vector&lt;std::vector&lt;int64_t&gt; &gt; Halide::Internal::Autoscheduler::generate_tilings(const vector&lt;int64_t&gt; &amp; s, int d, int factor, bool allow_splits)'/>
<doc f='halide/src/autoschedulers/adams2019/LoopNest.h' l='28'>// Given a multi-dimensional box of dimensionality d, generate a list
// of candidate tile sizes for it, logarithmically spacing the sizes
// using the given factor. If &apos;allow_splits&apos; is false, every dimension
// must either be one, or the full extent of the box. This function is
// used to generate candidate tilings when tiling for
// producer-consumer fusion, or tiling for parallelism.</doc>
<def f='halide/src/autoschedulers/adams2019/LoopNest.cpp' l='36' ll='123' type='vector&lt;vector&lt;int64_t&gt; &gt; Halide::Internal::Autoscheduler::generate_tilings(const vector&lt;int64_t&gt; &amp; s, int d, int factor, bool allow_splits)'/>
<use f='halide/src/autoschedulers/adams2019/LoopNest.cpp' l='41' u='c' c='_ZN6Halide8Internal13Autoscheduler16generate_tilingsERKSt6vectorIlSaIlEEiib'/>
<use f='halide/src/autoschedulers/adams2019/LoopNest.cpp' l='1507' u='c' c='_ZNK6Halide8Internal13Autoscheduler8LoopNest16compute_in_tilesEPKNS1_11FunctionDAG4NodeEPKS2_RKNS_13MachineParamsEib'/>
<doc f='halide/src/autoschedulers/adams2019/LoopNest.cpp' l='30'>// Given a multi-dimensional box of dimensionality d, generate a list
// of candidate tile sizes for it, logarithmically spacing the sizes
// using the given factor. If &apos;allow_splits&apos; is false, every dimension
// must either be one, or the full extent of the box. This function is
// used to generate candidate tilings when tiling for
// producer-consumer fusion, or tiling for parallelism.</doc>
<use f='halide/src/autoschedulers/adams2019/State.cpp' l='392' u='c' c='_ZNK6Halide8Internal13Autoscheduler5State17generate_childrenERKNS1_11FunctionDAGERKNS_13MachineParamsEPNS_9CostModelElRSt8functionIFvONS0_12IntrusiveP11683623'/>
