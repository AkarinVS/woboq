<dec f='halide/build-apps/abseil-cpp/absl/strings/str_replace.h' l='113' type='int absl::lts_2020_02_25::StrReplaceAll(std::initializer_list&lt;std::pair&lt;absl::string_view, absl::string_view&gt; &gt; replacements, std::string * target)'/>
<def f='halide/build-apps/abseil-cpp/absl/strings/str_replace.cc' l='76' ll='79' type='int absl::lts_2020_02_25::StrReplaceAll(strings_internal::FixedMapping replacements, std::string * target)'/>
<doc f='halide/build-apps/abseil-cpp/absl/strings/str_replace.h' l='100'>// Overload of `StrReplaceAll()` to replace character sequences within a given
// output string *in place* with replacements provided within an initializer
// list of key/value pairs, returning the number of substitutions that occurred.
//
// Example:
//
//   std::string s = std::string(&quot;$who bought $count #Noun. Thanks $who!&quot;);
//   int count;
//   count = absl::StrReplaceAll({{&quot;$count&quot;, absl::StrCat(5)},
//                               {&quot;$who&quot;, &quot;Bob&quot;},
//                               {&quot;#Noun&quot;, &quot;Apples&quot;}}, &amp;s);
//  EXPECT_EQ(count, 4);
//  EXPECT_EQ(&quot;Bob bought 5 Apples. Thanks Bob!&quot;, s);</doc>
