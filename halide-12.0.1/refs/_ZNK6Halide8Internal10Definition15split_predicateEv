<dec f='halide/halide-install/include/Halide.h' l='8667' type='std::vector&lt;Expr&gt; Halide::Internal::Definition::split_predicate() const'/>
<doc f='halide/halide-install/include/Halide.h' l='8665'>/** Split predicate into vector of ANDs. If there is no predicate (i.e. this
     * definition is always valid), this returns an empty vector. */</doc>
<dec f='halide/build/include/Halide.h' l='8667' type='std::vector&lt;Expr&gt; Halide::Internal::Definition::split_predicate() const'/>
<doc f='halide/build/include/Halide.h' l='8665'>/** Split predicate into vector of ANDs. If there is no predicate (i.e. this
     * definition is always valid), this returns an empty vector. */</doc>
<dec f='halide/src/Definition.h' l='95' type='std::vector&lt;Expr&gt; Halide::Internal::Definition::split_predicate() const'/>
<doc f='halide/src/Definition.h' l='93'>/** Split predicate into vector of ANDs. If there is no predicate (i.e. this
     * definition is always valid), this returns an empty vector. */</doc>
<use f='halide/src/BoundsInference.cpp' l='249' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_115BoundsInference5Stage20compute_exprs_helperERKNS0_10DefinitionEb'/>
<def f='halide/src/Definition.cpp' l='173' ll='177' type='std::vector&lt;Expr&gt; Halide::Internal::Definition::split_predicate() const'/>
<use f='halide/src/Func.cpp' l='689' u='c' c='_ZN6Halide5Stage7rfactorESt6vectorISt4pairINS_4RVarENS_3VarEESaIS5_EE'/>
<use f='halide/src/ScheduleFunctions.cpp' l='93' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_115build_loop_nestERKNS0_4StmtERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiRKNS0_8FunctionERKNS0_10DefinitionEb'/>
