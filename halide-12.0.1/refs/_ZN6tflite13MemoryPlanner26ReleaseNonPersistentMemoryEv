<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/memory_planner.h' l='55' type='TfLiteStatus tflite::MemoryPlanner::ReleaseNonPersistentMemory()'/>
<ovr f='halide/build-apps/_deps/tflite-src/tensorflow/lite/arena_planner.cc' l='226' c='_ZN6tflite12ArenaPlanner26ReleaseNonPersistentMemoryEv'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/memory_planner.h' l='45'>// NOTE: The following two methods modify the data pointers for all tensors on
  // the non-persistent arena (inputs, outputs, intermediates). If the user has
  // manually set the pointers for any of these, they would need to be set
  // again.

  // This releases memory allocated for non-persistent tensors.
  // It does NOT clear the allocation plan, but the memory can&apos;t be used
  // until AcquireNonPersistentMemory() is called.
  // It is safe to call Reset/PlanAllocations after this method, without calling
  // ReleaseTemporaryAllocations in case tensor sizes change.</doc>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/core/subgraph.cc' l='906' u='c' c='_ZN6tflite8Subgraph26ReleaseNonPersistentMemoryEv'/>
