<dec f='halide/build/_deps/pybind11-src/include/pybind11/cast.h' l='485' type='PyObject * pybind11::detail::make_new_instance(PyTypeObject * type)'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/cast.h' l='519' u='c' c='_ZN8pybind116detail19type_caster_generic4castEPKvNS_19return_value_policyENS_6handleEPKNS0_9type_infoEPFPvS3_ESB_S3_'/>
<def f='halide/build/_deps/pybind11-src/include/pybind11/detail/class.h' l='329' ll='344' type='PyObject * pybind11::detail::make_new_instance(PyTypeObject * type)'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/detail/class.h' l='349' u='c' c='pybind11::detail::pybind11_object_new'/>
<doc f='halide/build/_deps/pybind11-src/include/pybind11/detail/class.h' l='326'>/// Instance creation function for all pybind11 types. It allocates the internal instance layout for
/// holding C++ objects and holders.  Allocation is done lazily (the first time the instance is cast
/// to a reference or pointer), and initialization is done by an `__init__` function.</doc>
