<def f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='255' ll='264' type='Eigen::Index Eigen::ColPivHouseholderQR::rank() const'/>
<use f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='275' u='c' c='_ZNK5Eigen19ColPivHouseholderQR17dimensionOfKernelEv'/>
<use f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='288' u='c' c='_ZNK5Eigen19ColPivHouseholderQR11isInjectiveEv'/>
<use f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='301' u='c' c='_ZNK5Eigen19ColPivHouseholderQR12isSurjectiveEv'/>
<doc f='halide/build-apps/eigen/Eigen/src/QR/ColPivHouseholderQR.h' l='249'>/** \returns the rank of the matrix of which *this is the QR decomposition.
      *
      * \note This method has to determine which pivots should be considered nonzero.
      *       For that, it uses the threshold value that you can control by calling
      *       setThreshold(const RealScalar&amp;).
      */</doc>
