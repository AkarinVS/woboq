<def f='halide/build-apps/eigen/Eigen/src/Core/GenericPacketMath.h' l='404' ll='406' type='Packet Eigen::internal::ploadquad(const typename unpacket_traits&lt;Packet&gt;::type * from)'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/arch/SSE/PacketMath.h' l='604' ll='609' type='Eigen::internal::Packet16b Eigen::internal::ploadquad(const bool * from)'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/GenericPacketMath.h' l='398'>/** \internal \returns a packet with elements of \a *from quadrupled.
  * For instance, for a packet of 8 elements, 2 scalars will be read from \a *from and
  * replicated to form: {from[0],from[0],from[0],from[0],from[1],from[1],from[1],from[1]}
  * Currently, this function is only used in matrix products.
  * For packet-size smaller or equal to 4, this function is equivalent to pload1
  */</doc>
<doc f='halide/build-apps/eigen/Eigen/src/Core/arch/SSE/PacketMath.h' l='602'>// Loads 4 bools from memory and returns the packet
// {b0, b0  b0, b0, b1, b1, b1, b1, b2, b2, b2, b2, b3, b3, b3, b3}</doc>
