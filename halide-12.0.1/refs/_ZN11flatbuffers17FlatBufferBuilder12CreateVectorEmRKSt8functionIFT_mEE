<def f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1655' ll='1660' type='Offset&lt;Vector&lt;T&gt; &gt; flatbuffers::FlatBufferBuilder::CreateVector(size_t vector_size, const std::function&lt;T (size_t)&gt; &amp; f)'/>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1648'>/// @brief Serialize values returned by a function into a FlatBuffer `vector`.
  /// This is a convenience function that takes care of iteration for you.
  /// @tparam T The data type of the `std::vector` elements.
  /// @param f A function that takes the current iteration 0..vector_size-1 and
  /// returns any type that you can construct a FlatBuffers vector out of.
  /// @return Returns a typed `Offset` into the serialized data indicating
  /// where the vector is stored.</doc>
