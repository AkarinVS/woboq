<def f='halide/build-apps/abseil-cpp/absl/debugging/failure_signal_handler.h' l='56' ll='101'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/failure_signal_handler.h' l='112' c='_ZN4absl14lts_2020_02_2527InstallFailureSignalHandlerERKNS0_27FailureSignalHandlerOptionsE'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/failure_signal_handler.cc' l='62'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/failure_signal_handler.cc' l='362' c='_ZN4absl14lts_2020_02_2527InstallFailureSignalHandlerERKNS0_27FailureSignalHandlerOptionsE'/>
<size>24</size>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/failure_signal_handler.h' l='52'>// FailureSignalHandlerOptions
//
// Struct for holding `absl::InstallFailureSignalHandler()` configuration
// options.</doc>
<mbr r='absl::lts_2020_02_25::FailureSignalHandlerOptions::symbolize_stacktrace' o='0' t='bool'/>
<mbr r='absl::lts_2020_02_25::FailureSignalHandlerOptions::use_alternate_stack' o='8' t='bool'/>
<mbr r='absl::lts_2020_02_25::FailureSignalHandlerOptions::alarm_on_failure_secs' o='32' t='int'/>
<mbr r='absl::lts_2020_02_25::FailureSignalHandlerOptions::call_previous_handler' o='64' t='bool'/>
<mbr r='absl::lts_2020_02_25::FailureSignalHandlerOptions::writerfn' o='128' t='void (*)(const char *)'/>
