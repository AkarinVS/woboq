<dec f='halide/build/include/HalideRuntime.h' l='334' type='int halide_set_num_threads(int n)'/>
<doc f='halide/build/include/HalideRuntime.h' l='322'>/** Set the number of threads used by Halide&apos;s thread pool. Returns
 * the old number.
 *
 * n &lt; 0  : error condition
 * n == 0 : use a reasonable system default (typically, number of cpus online).
 * n == 1 : use exactly one thread; this will always enforce serial execution
 * n &gt; 1  : use a pool of exactly n threads.
 *
 * (Note that this is only guaranteed when using the default implementations
 * of halide_do_par_for(); custom implementations may completely ignore values
 * passed to halide_set_num_threads().)
 */</doc>
<dec f='halide/build/include/Halide.h' l='432' type='int halide_set_num_threads(int n)'/>
<doc f='halide/build/include/Halide.h' l='420'>/** Set the number of threads used by Halide&apos;s thread pool. Returns
 * the old number.
 *
 * n &lt; 0  : error condition
 * n == 0 : use a reasonable system default (typically, number of cpus online).
 * n == 1 : use exactly one thread; this will always enforce serial execution
 * n &gt; 1  : use a pool of exactly n threads.
 *
 * (Note that this is only guaranteed when using the default implementations
 * of halide_do_par_for(); custom implementations may completely ignore values
 * passed to halide_set_num_threads().)
 */</doc>
<dec f='halide/src/runtime/HalideRuntime.h' l='334' type='int halide_set_num_threads(int n)'/>
<doc f='halide/src/runtime/HalideRuntime.h' l='322'>/** Set the number of threads used by Halide&apos;s thread pool. Returns
 * the old number.
 *
 * n &lt; 0  : error condition
 * n == 0 : use a reasonable system default (typically, number of cpus online).
 * n == 1 : use exactly one thread; this will always enforce serial execution
 * n &gt; 1  : use a pool of exactly n threads.
 *
 * (Note that this is only guaranteed when using the default implementations
 * of halide_do_par_for(); custom implementations may completely ignore values
 * passed to halide_set_num_threads().)
 */</doc>
<use f='halide/test/generator/variable_num_threads_aottest.cpp' l='18' u='c' c='_Z21mess_with_num_threadsPv'/>
<use f='halide/test/generator/variable_num_threads_aottest.cpp' l='24' u='c' c='main'/>
<dec f='halide/build/tutorial/lesson_10_halide.h' l='406' type='int halide_set_num_threads(int n)'/>
<doc f='halide/build/tutorial/lesson_10_halide.h' l='394'>/** Set the number of threads used by Halide&apos;s thread pool. Returns
 * the old number.
 *
 * n &lt; 0  : error condition
 * n == 0 : use a reasonable system default (typically, number of cpus online).
 * n == 1 : use exactly one thread; this will always enforce serial execution
 * n &gt; 1  : use a pool of exactly n threads.
 *
 * (Note that this is only guaranteed when using the default implementations
 * of halide_do_par_for(); custom implementations may completely ignore values
 * passed to halide_set_num_threads().)
 */</doc>
