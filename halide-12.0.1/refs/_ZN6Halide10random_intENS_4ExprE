<dec f='halide/build/include/Halide.h' l='8064' type='Halide::Expr Halide::random_int(Halide::Expr seed = Halide::Expr())'/>
<doc f='halide/build/include/Halide.h' l='8062'>/** Return a random variable representing a uniformly distributed
 * 32-bit integer. See \ref random_float. Vectorizes cleanly. */</doc>
<use f='halide/python_bindings/src/PyIROperator.cpp' l='174' u='a' c='_ZN6Halide14PythonBindings16define_operatorsERN8pybind117module_E'/>
<use f='halide/python_bindings/src/PyIROperator.cpp' l='177' u='a' c='_ZN6Halide14PythonBindings16define_operatorsERN8pybind117module_E'/>
<dec f='halide/src/IROperator.h' l='1259' type='Halide::Expr Halide::random_int(Halide::Expr seed = Halide::Expr())'/>
<doc f='halide/src/IROperator.h' l='1257'>/** Return a random variable representing a uniformly distributed
 * 32-bit integer. See \ref random_float. Vectorizes cleanly. */</doc>
<def f='halide/src/IROperator.cpp' l='2563' ll='2565' type='Halide::Expr Halide::random_int(Halide::Expr seed = Halide::Expr())'/>
