<use f='halide/build/include/Halide.h' l='16443' c='_ZNK6Halide7FuncRefixEi'/>
<def f='halide/build/include/Halide.h' l='16471' ll='16538'/>
<size>88</size>
<doc f='halide/build/include/Halide.h' l='16466'>/** A fragment of front-end syntax of the form f(x, y, z)[index], where x, y,
 * z are Vars or Exprs. If could be the left hand side of an update
 * definition, or it could be a call to a function. We don&apos;t know
 * until we see how this object gets used.
 */</doc>
<mbr r='Halide::FuncTupleElementRef::func_ref' o='0' t='Halide::FuncRef'/>
<mbr r='Halide::FuncTupleElementRef::args' o='448' t='std::vector&lt;Expr&gt;'/>
<mbr r='Halide::FuncTupleElementRef::idx' o='640' t='int'/>
<fun r='_ZNK6Halide19FuncTupleElementRef18values_with_undefsERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefC1ERKNS_7FuncRefERKSt6vectorINS_4ExprESaIS5_EEi'/>
<fun r='_ZN6Halide19FuncTupleElementRefaSERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefpLERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefmIERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefmLERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefdVERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefaSERKNS_7FuncRefE'/>
<fun r='_ZNK6Halide19FuncTupleElementRefcvNS_4ExprEEv'/>
<fun r='_ZNK6Halide19FuncTupleElementRef8functionEv'/>
<fun r='_ZNK6Halide19FuncTupleElementRef5indexEv'/>
<use f='halide/python_bindings/src/PyExpr.cpp' l='38' c='_ZN6Halide14PythonBindings11define_exprERN8pybind117module_E'/>
<use f='halide/python_bindings/src/PyExpr.cpp' l='64' c='_ZN6Halide14PythonBindings11define_exprERN8pybind117module_E'/>
<size>88</size>
<use f='halide/python_bindings/src/PyFuncRef.cpp' l='10' c='_ZN6Halide14PythonBindings15define_func_refERN8pybind117module_E'/>
<size>88</size>
<use f='halide/src/Func.h' l='563' c='_ZNK6Halide7FuncRefixEi'/>
<def f='halide/src/Func.h' l='591' ll='658'/>
<size>88</size>
<doc f='halide/src/Func.h' l='586'>/** A fragment of front-end syntax of the form f(x, y, z)[index], where x, y,
 * z are Vars or Exprs. If could be the left hand side of an update
 * definition, or it could be a call to a function. We don&apos;t know
 * until we see how this object gets used.
 */</doc>
<mbr r='Halide::FuncTupleElementRef::func_ref' o='0' t='Halide::FuncRef'/>
<mbr r='Halide::FuncTupleElementRef::args' o='448' t='std::vector&lt;Expr&gt;'/>
<mbr r='Halide::FuncTupleElementRef::idx' o='640' t='int'/>
<fun r='_ZNK6Halide19FuncTupleElementRef18values_with_undefsERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefC1ERKNS_7FuncRefERKSt6vectorINS_4ExprESaIS5_EEi'/>
<fun r='_ZN6Halide19FuncTupleElementRefaSERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefpLERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefmIERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefmLERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefdVERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefaSERKNS_7FuncRefE'/>
<fun r='_ZNK6Halide19FuncTupleElementRefcvNS_4ExprEEv'/>
<fun r='_ZNK6Halide19FuncTupleElementRef8functionEv'/>
<fun r='_ZNK6Halide19FuncTupleElementRef5indexEv'/>
<use f='halide/src/Func.cpp' l='3021' c='_ZNK6Halide7FuncRefixEi'/>
<use f='halide/src/Func.cpp' l='3032' c='_ZNK6Halide7FuncRefixEi'/>
<size>88</size>
<fun r='_ZN6Halide19FuncTupleElementRefC1ERKNS_7FuncRefERKSt6vectorINS_4ExprESaIS5_EEi'/>
<fun r='_ZNK6Halide19FuncTupleElementRef18values_with_undefsERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefaSERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefpLERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefmLERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefmIERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefdVERKNS_4ExprE'/>
<fun r='_ZN6Halide19FuncTupleElementRefaSERKNS_7FuncRefE'/>
<fun r='_ZNK6Halide19FuncTupleElementRefcvNS_4ExprEEv'/>
