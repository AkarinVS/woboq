<def f='halide/halide-install/include/Halide.h' l='1694' ll='1714'/>
<use f='halide/halide-install/include/Halide.h' l='1742'/>
<use f='halide/halide-install/include/Halide.h' l='1742'/>
<use f='halide/halide-install/include/Halide.h' l='1742'/>
<use f='halide/halide-install/include/Halide.h' l='1757'/>
<use f='halide/halide-install/include/Halide.h' l='1757'/>
<use f='halide/halide-install/include/Halide.h' l='1757'/>
<use f='halide/halide-install/include/Halide.h' l='1757'/>
<use f='halide/halide-install/include/Halide.h' l='5603' c='_ZN6Halide8Internal9Parameter10set_scalarERKNS_4TypeE21halide_scalar_value_t'/>
<use f='halide/halide-install/include/Halide.h' l='14522'/>
<use f='halide/halide-install/include/Halide.h' l='27198'/>
<use f='halide/halide-install/include/Halide.h' l='27235' c='_ZN6Halide8Internal9IRMatcher12MatcherState15set_bound_constEi21halide_scalar_value_t13halide_type_t'/>
<use f='halide/halide-install/include/Halide.h' l='27241' c='_ZNK6Halide8Internal9IRMatcher12MatcherState15get_bound_constEiR21halide_scalar_value_tR13halide_type_t'/>
<use f='halide/halide-install/include/Halide.h' l='27274' c='_ZN6Halide8Internal9IRMatcher15make_const_exprE21halide_scalar_value_t13halide_type_t'/>
<use f='halide/halide-install/include/Halide.h' l='27370' c='_ZNK6Halide8Internal9IRMatcher12WildConstInt5matchERKNS0_12BaseExprNodeERNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27383' c='_ZNK6Halide8Internal9IRMatcher12WildConstInt5matchElRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27394' c='_ZNK6Halide8Internal9IRMatcher12WildConstInt4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/halide-install/include/Halide.h' l='27403' c='_ZNK6Halide8Internal9IRMatcher12WildConstInt17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27436' c='_ZNK6Halide8Internal9IRMatcher13WildConstUInt5matchERKNS0_12BaseExprNodeERNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27447' c='_ZNK6Halide8Internal9IRMatcher13WildConstUInt4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/halide-install/include/Halide.h' l='27456' c='_ZNK6Halide8Internal9IRMatcher13WildConstUInt17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27489' c='_ZNK6Halide8Internal9IRMatcher14WildConstFloat5matchERKNS0_12BaseExprNodeERNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27500' c='_ZNK6Halide8Internal9IRMatcher14WildConstFloat4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/halide-install/include/Halide.h' l='27509' c='_ZNK6Halide8Internal9IRMatcher14WildConstFloat17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27558' c='_ZNK6Halide8Internal9IRMatcher9WildConst4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/halide-install/include/Halide.h' l='27567' c='_ZNK6Halide8Internal9IRMatcher9WildConst17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27605' c='_ZNK6Halide8Internal9IRMatcher4Wild17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27688' c='_ZNK6Halide8Internal9IRMatcher10IntLiteral17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27813' c='_ZNK6Halide8Internal9IRMatcher5BinOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27814' c='_ZNK6Halide8Internal9IRMatcher5BinOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27814' c='_ZNK6Halide8Internal9IRMatcher5BinOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27923' c='_ZNK6Halide8Internal9IRMatcher5CmpOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27924' c='_ZNK6Halide8Internal9IRMatcher5CmpOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='27924' c='_ZNK6Halide8Internal9IRMatcher5CmpOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='28715' c='_ZNK6Halide8Internal9IRMatcher5NotOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='28779' c='_ZNK6Halide8Internal9IRMatcher8SelectOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='28780' c='_ZNK6Halide8Internal9IRMatcher8SelectOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='28780' c='_ZNK6Halide8Internal9IRMatcher8SelectOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='28780' c='_ZNK6Halide8Internal9IRMatcher8SelectOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='28839' c='_ZNK6Halide8Internal9IRMatcher11BroadcastOp4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/halide-install/include/Halide.h' l='28855' c='_ZNK6Halide8Internal9IRMatcher11BroadcastOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='28856' c='_ZNK6Halide8Internal9IRMatcher11BroadcastOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='28915' c='_ZNK6Halide8Internal9IRMatcher6RampOp4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/halide-install/include/Halide.h' l='28977' c='_ZNK6Halide8Internal9IRMatcher14VectorReduceOp4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/halide-install/include/Halide.h' l='29060' c='_ZNK6Halide8Internal9IRMatcher8NegateOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='29164' c='_ZNK6Halide8Internal9IRMatcher4Fold4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/halide-install/include/Halide.h' l='29189' c='_ZNK6Halide8Internal9IRMatcher4Fold17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='29222' c='_ZNK6Halide8Internal9IRMatcher9Overflows17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='29271' c='_ZNK6Halide8Internal9IRMatcher8Overflow17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='29300' c='_ZNK6Halide8Internal9IRMatcher7IsConst17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='29351' c='_ZNK6Halide8Internal9IRMatcher8CanProve17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='29388' c='_ZNK6Halide8Internal9IRMatcher7IsFloat17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='29426' c='_ZNK6Halide8Internal9IRMatcher5IsInt17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='29468' c='_ZNK6Halide8Internal9IRMatcher6IsUInt17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='29509' c='_ZNK6Halide8Internal9IRMatcher8IsScalar17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='29540' c='_ZNK6Halide8Internal9IRMatcher10IsMaxValue17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='29575' c='_ZNK6Halide8Internal9IRMatcher10IsMinValue17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/halide-install/include/Halide.h' l='29672' c='_ZN6Halide8Internal9IRMatcher14fuzz_test_ruleEOT_OT0_OT1_13halide_type_tS8_'/>
<use f='halide/halide-install/include/Halide.h' l='29672' c='_ZN6Halide8Internal9IRMatcher14fuzz_test_ruleEOT_OT0_OT1_13halide_type_tS8_'/>
<use f='halide/halide-install/include/Halide.h' l='29672' c='_ZN6Halide8Internal9IRMatcher14fuzz_test_ruleEOT_OT0_OT1_13halide_type_tS8_'/>
<use f='halide/halide-install/include/Halide.h' l='29714' c='_ZN6Halide8Internal9IRMatcher14fuzz_test_ruleEOT_OT0_OT1_13halide_type_tS8_'/>
<use f='halide/halide-install/include/Halide.h' l='29747' c='_ZN6Halide8Internal9IRMatcher18evaluate_predicateET_RNS1_12MatcherStateE'/>
<size>8</size>
<doc f='halide/halide-install/include/Halide.h' l='1686'>/** halide_scalar_value_t is a simple union able to represent all the well-known
 * scalar values in a filter argument. Note that it isn&apos;t tagged with a type;
 * you must ensure you know the proper type before accessing. Most user
 * code will never need to create instances of this struct; its primary use
 * is to hold def/min/max values in a halide_filter_argument_t. (Note that
 * this is conceptually just a union; it&apos;s wrapped in a struct to ensure
 * that it doesn&apos;t get anonymized by LLVM.)
 */</doc>
<mbr r='halide_scalar_value_t::u' o='0' t='union (anonymous union at /fast/tmp/halide.git/halide-install/include/Halide.h:1695:5)'/>
<fun r='_ZN21halide_scalar_value_tC1Ev'/>
<def f='halide/halide-install/include/HalideRuntime.h' l='1596' ll='1616'/>
<use f='halide/halide-install/include/HalideRuntime.h' l='1644'/>
<use f='halide/halide-install/include/HalideRuntime.h' l='1644'/>
<use f='halide/halide-install/include/HalideRuntime.h' l='1644'/>
<use f='halide/halide-install/include/HalideRuntime.h' l='1659'/>
<use f='halide/halide-install/include/HalideRuntime.h' l='1659'/>
<use f='halide/halide-install/include/HalideRuntime.h' l='1659'/>
<use f='halide/halide-install/include/HalideRuntime.h' l='1659'/>
<size>8</size>
<doc f='halide/halide-install/include/HalideRuntime.h' l='1588'>/** halide_scalar_value_t is a simple union able to represent all the well-known
 * scalar values in a filter argument. Note that it isn&apos;t tagged with a type;
 * you must ensure you know the proper type before accessing. Most user
 * code will never need to create instances of this struct; its primary use
 * is to hold def/min/max values in a halide_filter_argument_t. (Note that
 * this is conceptually just a union; it&apos;s wrapped in a struct to ensure
 * that it doesn&apos;t get anonymized by LLVM.)
 */</doc>
<mbr r='halide_scalar_value_t::u' o='0' t='union (anonymous union at /fast/tmp/halide.git/halide-install/include/HalideRuntime.h:1597:5)'/>
<fun r='_ZN21halide_scalar_value_tC1Ev'/>
<def f='halide/build-apps/c_backend/pipeline_c.halide_generated.cpp' l='1756' ll='1776'/>
<use f='halide/build-apps/c_backend/pipeline_c.halide_generated.cpp' l='1804'/>
<use f='halide/build-apps/c_backend/pipeline_c.halide_generated.cpp' l='1804'/>
<use f='halide/build-apps/c_backend/pipeline_c.halide_generated.cpp' l='1804'/>
<use f='halide/build-apps/c_backend/pipeline_c.halide_generated.cpp' l='1819'/>
<use f='halide/build-apps/c_backend/pipeline_c.halide_generated.cpp' l='1819'/>
<use f='halide/build-apps/c_backend/pipeline_c.halide_generated.cpp' l='1819'/>
<use f='halide/build-apps/c_backend/pipeline_c.halide_generated.cpp' l='1819'/>
<size>8</size>
<doc f='halide/build-apps/c_backend/pipeline_c.halide_generated.cpp' l='1748'>/** halide_scalar_value_t is a simple union able to represent all the well-known
 * scalar values in a filter argument. Note that it isn&apos;t tagged with a type;
 * you must ensure you know the proper type before accessing. Most user
 * code will never need to create instances of this struct; its primary use
 * is to hold def/min/max values in a halide_filter_argument_t. (Note that
 * this is conceptually just a union; it&apos;s wrapped in a struct to ensure
 * that it doesn&apos;t get anonymized by LLVM.)
 */</doc>
<def f='halide/build-apps/c_backend/pipeline_cpp_cpp.halide_generated.cpp' l='1756' ll='1776'/>
<use f='halide/build-apps/c_backend/pipeline_cpp_cpp.halide_generated.cpp' l='1804'/>
<use f='halide/build-apps/c_backend/pipeline_cpp_cpp.halide_generated.cpp' l='1804'/>
<use f='halide/build-apps/c_backend/pipeline_cpp_cpp.halide_generated.cpp' l='1804'/>
<use f='halide/build-apps/c_backend/pipeline_cpp_cpp.halide_generated.cpp' l='1819'/>
<use f='halide/build-apps/c_backend/pipeline_cpp_cpp.halide_generated.cpp' l='1819'/>
<use f='halide/build-apps/c_backend/pipeline_cpp_cpp.halide_generated.cpp' l='1819'/>
<use f='halide/build-apps/c_backend/pipeline_cpp_cpp.halide_generated.cpp' l='1819'/>
<size>8</size>
<doc f='halide/build-apps/c_backend/pipeline_cpp_cpp.halide_generated.cpp' l='1748'>/** halide_scalar_value_t is a simple union able to represent all the well-known
 * scalar values in a filter argument. Note that it isn&apos;t tagged with a type;
 * you must ensure you know the proper type before accessing. Most user
 * code will never need to create instances of this struct; its primary use
 * is to hold def/min/max values in a halide_filter_argument_t. (Note that
 * this is conceptually just a union; it&apos;s wrapped in a struct to ensure
 * that it doesn&apos;t get anonymized by LLVM.)
 */</doc>
<def f='halide/build/include/HalideRuntime.h' l='1596' ll='1616'/>
<use f='halide/build/include/HalideRuntime.h' l='1644'/>
<use f='halide/build/include/HalideRuntime.h' l='1644'/>
<use f='halide/build/include/HalideRuntime.h' l='1644'/>
<use f='halide/build/include/HalideRuntime.h' l='1659'/>
<use f='halide/build/include/HalideRuntime.h' l='1659'/>
<use f='halide/build/include/HalideRuntime.h' l='1659'/>
<use f='halide/build/include/HalideRuntime.h' l='1659'/>
<size>8</size>
<doc f='halide/build/include/HalideRuntime.h' l='1588'>/** halide_scalar_value_t is a simple union able to represent all the well-known
 * scalar values in a filter argument. Note that it isn&apos;t tagged with a type;
 * you must ensure you know the proper type before accessing. Most user
 * code will never need to create instances of this struct; its primary use
 * is to hold def/min/max values in a halide_filter_argument_t. (Note that
 * this is conceptually just a union; it&apos;s wrapped in a struct to ensure
 * that it doesn&apos;t get anonymized by LLVM.)
 */</doc>
<mbr r='halide_scalar_value_t::u' o='0' t='union (anonymous union at /fast/tmp/halide.git/build/include/HalideRuntime.h:1597:5)'/>
<fun r='_ZN21halide_scalar_value_tC1Ev'/>
<def f='halide/build/include/Halide.h' l='1694' ll='1714'/>
<use f='halide/build/include/Halide.h' l='1742'/>
<use f='halide/build/include/Halide.h' l='1742'/>
<use f='halide/build/include/Halide.h' l='1742'/>
<use f='halide/build/include/Halide.h' l='1757'/>
<use f='halide/build/include/Halide.h' l='1757'/>
<use f='halide/build/include/Halide.h' l='1757'/>
<use f='halide/build/include/Halide.h' l='1757'/>
<use f='halide/build/include/Halide.h' l='5603' c='_ZN6Halide8Internal9Parameter10set_scalarERKNS_4TypeE21halide_scalar_value_t'/>
<use f='halide/build/include/Halide.h' l='14522'/>
<use f='halide/build/include/Halide.h' l='27198'/>
<use f='halide/build/include/Halide.h' l='27235' c='_ZN6Halide8Internal9IRMatcher12MatcherState15set_bound_constEi21halide_scalar_value_t13halide_type_t'/>
<use f='halide/build/include/Halide.h' l='27241' c='_ZNK6Halide8Internal9IRMatcher12MatcherState15get_bound_constEiR21halide_scalar_value_tR13halide_type_t'/>
<use f='halide/build/include/Halide.h' l='27274' c='_ZN6Halide8Internal9IRMatcher15make_const_exprE21halide_scalar_value_t13halide_type_t'/>
<use f='halide/build/include/Halide.h' l='27370' c='_ZNK6Halide8Internal9IRMatcher12WildConstInt5matchERKNS0_12BaseExprNodeERNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27383' c='_ZNK6Halide8Internal9IRMatcher12WildConstInt5matchElRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27394' c='_ZNK6Halide8Internal9IRMatcher12WildConstInt4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/build/include/Halide.h' l='27403' c='_ZNK6Halide8Internal9IRMatcher12WildConstInt17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27436' c='_ZNK6Halide8Internal9IRMatcher13WildConstUInt5matchERKNS0_12BaseExprNodeERNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27447' c='_ZNK6Halide8Internal9IRMatcher13WildConstUInt4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/build/include/Halide.h' l='27456' c='_ZNK6Halide8Internal9IRMatcher13WildConstUInt17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27489' c='_ZNK6Halide8Internal9IRMatcher14WildConstFloat5matchERKNS0_12BaseExprNodeERNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27500' c='_ZNK6Halide8Internal9IRMatcher14WildConstFloat4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/build/include/Halide.h' l='27509' c='_ZNK6Halide8Internal9IRMatcher14WildConstFloat17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27558' c='_ZNK6Halide8Internal9IRMatcher9WildConst4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/build/include/Halide.h' l='27567' c='_ZNK6Halide8Internal9IRMatcher9WildConst17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27605' c='_ZNK6Halide8Internal9IRMatcher4Wild17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27688' c='_ZNK6Halide8Internal9IRMatcher10IntLiteral17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27813' c='_ZNK6Halide8Internal9IRMatcher5BinOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27814' c='_ZNK6Halide8Internal9IRMatcher5BinOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27814' c='_ZNK6Halide8Internal9IRMatcher5BinOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27923' c='_ZNK6Halide8Internal9IRMatcher5CmpOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27924' c='_ZNK6Halide8Internal9IRMatcher5CmpOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27924' c='_ZNK6Halide8Internal9IRMatcher5CmpOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='28715' c='_ZNK6Halide8Internal9IRMatcher5NotOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='28779' c='_ZNK6Halide8Internal9IRMatcher8SelectOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='28780' c='_ZNK6Halide8Internal9IRMatcher8SelectOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='28780' c='_ZNK6Halide8Internal9IRMatcher8SelectOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='28780' c='_ZNK6Halide8Internal9IRMatcher8SelectOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='28839' c='_ZNK6Halide8Internal9IRMatcher11BroadcastOp4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/build/include/Halide.h' l='28855' c='_ZNK6Halide8Internal9IRMatcher11BroadcastOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='28856' c='_ZNK6Halide8Internal9IRMatcher11BroadcastOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='28915' c='_ZNK6Halide8Internal9IRMatcher6RampOp4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/build/include/Halide.h' l='28977' c='_ZNK6Halide8Internal9IRMatcher14VectorReduceOp4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/build/include/Halide.h' l='29060' c='_ZNK6Halide8Internal9IRMatcher8NegateOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='29164' c='_ZNK6Halide8Internal9IRMatcher4Fold4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/build/include/Halide.h' l='29189' c='_ZNK6Halide8Internal9IRMatcher4Fold17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='29222' c='_ZNK6Halide8Internal9IRMatcher9Overflows17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='29271' c='_ZNK6Halide8Internal9IRMatcher8Overflow17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='29300' c='_ZNK6Halide8Internal9IRMatcher7IsConst17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='29351' c='_ZNK6Halide8Internal9IRMatcher8CanProve17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='29388' c='_ZNK6Halide8Internal9IRMatcher7IsFloat17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='29426' c='_ZNK6Halide8Internal9IRMatcher5IsInt17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='29468' c='_ZNK6Halide8Internal9IRMatcher6IsUInt17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='29509' c='_ZNK6Halide8Internal9IRMatcher8IsScalar17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='29540' c='_ZNK6Halide8Internal9IRMatcher10IsMaxValue17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='29575' c='_ZNK6Halide8Internal9IRMatcher10IsMinValue17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='29672' c='_ZN6Halide8Internal9IRMatcher14fuzz_test_ruleEOT_OT0_OT1_13halide_type_tS8_'/>
<use f='halide/build/include/Halide.h' l='29672' c='_ZN6Halide8Internal9IRMatcher14fuzz_test_ruleEOT_OT0_OT1_13halide_type_tS8_'/>
<use f='halide/build/include/Halide.h' l='29672' c='_ZN6Halide8Internal9IRMatcher14fuzz_test_ruleEOT_OT0_OT1_13halide_type_tS8_'/>
<use f='halide/build/include/Halide.h' l='29714' c='_ZN6Halide8Internal9IRMatcher14fuzz_test_ruleEOT_OT0_OT1_13halide_type_tS8_'/>
<use f='halide/build/include/Halide.h' l='29747' c='_ZN6Halide8Internal9IRMatcher18evaluate_predicateET_RNS1_12MatcherStateE'/>
<size>8</size>
<doc f='halide/build/include/Halide.h' l='1686'>/** halide_scalar_value_t is a simple union able to represent all the well-known
 * scalar values in a filter argument. Note that it isn&apos;t tagged with a type;
 * you must ensure you know the proper type before accessing. Most user
 * code will never need to create instances of this struct; its primary use
 * is to hold def/min/max values in a halide_filter_argument_t. (Note that
 * this is conceptually just a union; it&apos;s wrapped in a struct to ensure
 * that it doesn&apos;t get anonymized by LLVM.)
 */</doc>
<mbr r='halide_scalar_value_t::u' o='0' t='union (anonymous union at /fast/tmp/halide.git/build/include/Halide.h:1695:5)'/>
<fun r='_ZN21halide_scalar_value_tC1Ev'/>
<def f='halide/src/runtime/HalideRuntime.h' l='1596' ll='1616'/>
<use f='halide/src/runtime/HalideRuntime.h' l='1644'/>
<use f='halide/src/runtime/HalideRuntime.h' l='1644'/>
<use f='halide/src/runtime/HalideRuntime.h' l='1644'/>
<use f='halide/src/runtime/HalideRuntime.h' l='1659'/>
<use f='halide/src/runtime/HalideRuntime.h' l='1659'/>
<use f='halide/src/runtime/HalideRuntime.h' l='1659'/>
<use f='halide/src/runtime/HalideRuntime.h' l='1659'/>
<use f='halide/src/Parameter.h' l='98' c='_ZN6Halide8Internal9Parameter10set_scalarERKNS_4TypeE21halide_scalar_value_t'/>
<use f='halide/src/ParamMap.h' l='22'/>
<size>8</size>
<doc f='halide/src/runtime/HalideRuntime.h' l='1588'>/** halide_scalar_value_t is a simple union able to represent all the well-known
 * scalar values in a filter argument. Note that it isn&apos;t tagged with a type;
 * you must ensure you know the proper type before accessing. Most user
 * code will never need to create instances of this struct; its primary use
 * is to hold def/min/max values in a halide_filter_argument_t. (Note that
 * this is conceptually just a union; it&apos;s wrapped in a struct to ensure
 * that it doesn&apos;t get anonymized by LLVM.)
 */</doc>
<mbr r='halide_scalar_value_t::u' o='0' t='union (anonymous union at /fast/tmp/halide.git/build/../src/runtime/HalideRuntime.h:1597:5)'/>
<fun r='_ZN21halide_scalar_value_tC1Ev'/>
<use f='halide/src/IRMatch.h' l='84'/>
<use f='halide/src/IRMatch.h' l='121' c='_ZN6Halide8Internal9IRMatcher12MatcherState15set_bound_constEi21halide_scalar_value_t13halide_type_t'/>
<use f='halide/src/IRMatch.h' l='127' c='_ZNK6Halide8Internal9IRMatcher12MatcherState15get_bound_constEiR21halide_scalar_value_tR13halide_type_t'/>
<use f='halide/src/IRMatch.h' l='160' c='_ZN6Halide8Internal9IRMatcher15make_const_exprE21halide_scalar_value_t13halide_type_t'/>
<use f='halide/src/IRMatch.h' l='256' c='_ZNK6Halide8Internal9IRMatcher12WildConstInt5matchERKNS0_12BaseExprNodeERNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='269' c='_ZNK6Halide8Internal9IRMatcher12WildConstInt5matchElRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='280' c='_ZNK6Halide8Internal9IRMatcher12WildConstInt4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/src/IRMatch.h' l='289' c='_ZNK6Halide8Internal9IRMatcher12WildConstInt17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='322' c='_ZNK6Halide8Internal9IRMatcher13WildConstUInt5matchERKNS0_12BaseExprNodeERNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='333' c='_ZNK6Halide8Internal9IRMatcher13WildConstUInt4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/src/IRMatch.h' l='342' c='_ZNK6Halide8Internal9IRMatcher13WildConstUInt17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='375' c='_ZNK6Halide8Internal9IRMatcher14WildConstFloat5matchERKNS0_12BaseExprNodeERNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='386' c='_ZNK6Halide8Internal9IRMatcher14WildConstFloat4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/src/IRMatch.h' l='395' c='_ZNK6Halide8Internal9IRMatcher14WildConstFloat17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='444' c='_ZNK6Halide8Internal9IRMatcher9WildConst4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/src/IRMatch.h' l='453' c='_ZNK6Halide8Internal9IRMatcher9WildConst17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='491' c='_ZNK6Halide8Internal9IRMatcher4Wild17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='574' c='_ZNK6Halide8Internal9IRMatcher10IntLiteral17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='699' c='_ZNK6Halide8Internal9IRMatcher5BinOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='700' c='_ZNK6Halide8Internal9IRMatcher5BinOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='700' c='_ZNK6Halide8Internal9IRMatcher5BinOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='809' c='_ZNK6Halide8Internal9IRMatcher5CmpOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='810' c='_ZNK6Halide8Internal9IRMatcher5CmpOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='810' c='_ZNK6Halide8Internal9IRMatcher5CmpOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='1601' c='_ZNK6Halide8Internal9IRMatcher5NotOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='1665' c='_ZNK6Halide8Internal9IRMatcher8SelectOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='1666' c='_ZNK6Halide8Internal9IRMatcher8SelectOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='1666' c='_ZNK6Halide8Internal9IRMatcher8SelectOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='1666' c='_ZNK6Halide8Internal9IRMatcher8SelectOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='1725' c='_ZNK6Halide8Internal9IRMatcher11BroadcastOp4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/src/IRMatch.h' l='1741' c='_ZNK6Halide8Internal9IRMatcher11BroadcastOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='1742' c='_ZNK6Halide8Internal9IRMatcher11BroadcastOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='1801' c='_ZNK6Halide8Internal9IRMatcher6RampOp4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/src/IRMatch.h' l='1863' c='_ZNK6Halide8Internal9IRMatcher14VectorReduceOp4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/src/IRMatch.h' l='1946' c='_ZNK6Halide8Internal9IRMatcher8NegateOp17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='2050' c='_ZNK6Halide8Internal9IRMatcher4Fold4makeERNS1_12MatcherStateE13halide_type_t'/>
<use f='halide/src/IRMatch.h' l='2075' c='_ZNK6Halide8Internal9IRMatcher4Fold17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='2108' c='_ZNK6Halide8Internal9IRMatcher9Overflows17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='2157' c='_ZNK6Halide8Internal9IRMatcher8Overflow17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='2186' c='_ZNK6Halide8Internal9IRMatcher7IsConst17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='2237' c='_ZNK6Halide8Internal9IRMatcher8CanProve17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='2274' c='_ZNK6Halide8Internal9IRMatcher7IsFloat17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='2312' c='_ZNK6Halide8Internal9IRMatcher5IsInt17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='2354' c='_ZNK6Halide8Internal9IRMatcher6IsUInt17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='2395' c='_ZNK6Halide8Internal9IRMatcher8IsScalar17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='2426' c='_ZNK6Halide8Internal9IRMatcher10IsMaxValue17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='2461' c='_ZNK6Halide8Internal9IRMatcher10IsMinValue17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='2558' c='_ZN6Halide8Internal9IRMatcher14fuzz_test_ruleEOT_OT0_OT1_13halide_type_tS8_'/>
<use f='halide/src/IRMatch.h' l='2558' c='_ZN6Halide8Internal9IRMatcher14fuzz_test_ruleEOT_OT0_OT1_13halide_type_tS8_'/>
<use f='halide/src/IRMatch.h' l='2558' c='_ZN6Halide8Internal9IRMatcher14fuzz_test_ruleEOT_OT0_OT1_13halide_type_tS8_'/>
<use f='halide/src/IRMatch.h' l='2600' c='_ZN6Halide8Internal9IRMatcher14fuzz_test_ruleEOT_OT0_OT1_13halide_type_tS8_'/>
<use f='halide/src/IRMatch.h' l='2633' c='_ZN6Halide8Internal9IRMatcher18evaluate_predicateET_RNS1_12MatcherStateE'/>
<size>8</size>
<use f='halide/src/CodeGen_LLVM.cpp' l='832' c='_ZN6Halide8Internal12CodeGen_LLVM29embed_constant_scalar_value_tERKNS_4ExprE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='834' c='_ZN6Halide8Internal12CodeGen_LLVM29embed_constant_scalar_value_tERKNS_4ExprE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='835' c='_ZN6Halide8Internal12CodeGen_LLVM29embed_constant_scalar_value_tERKNS_4ExprE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='849' c='_ZN6Halide8Internal12CodeGen_LLVM29embed_constant_scalar_value_tERKNS_4ExprE'/>
<size>8</size>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='36'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='38' c='_ZN12typed_scalarC1ERK13halide_type_tRK21halide_scalar_value_t'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='189' c='_Z14match_argumentRK24halide_filter_argument_tS1_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='191' c='_Z14match_argumentRK24halide_filter_argument_tS1_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='189' c='_Z14match_argumentRK24halide_filter_argument_tS1_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='191' c='_Z14match_argumentRK24halide_filter_argument_tS1_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='189' c='_Z14match_argumentRK24halide_filter_argument_tS1_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='191' c='_Z14match_argumentRK24halide_filter_argument_tS1_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='189' c='_Z14match_argumentRK24halide_filter_argument_tS1_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='191' c='_Z14match_argumentRK24halide_filter_argument_tS1_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='263' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='266' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='267' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='267' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='273' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='274' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='274' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='280' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='281' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='281' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='287' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='288' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='288' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='294' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='295' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='295' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='301' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='302' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='302' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='308' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='309' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='309' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='315' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='316' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='316' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='322' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='323' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='323' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='329' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='330' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='330' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='336' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='337' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='337' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='343' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='344' c='_Z11make_scalarT_'/>
<use f='halide/test/generator/metadata_tester_aottest.cpp' l='344' c='_Z11make_scalarT_'/>
<size>8</size>
<use f='halide/tools/RunGen.h' l='235' c='_ZN6Halide6RunGen12ScalarParserclERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP21halide_scalar_value_t'/>
<use f='halide/tools/RunGen.h' l='245' c='_ZN6Halide6RunGen12ScalarParserclERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP21halide_scalar_value_t'/>
<use f='halide/tools/RunGen.h' l='257' c='_ZN6Halide6RunGen12ScalarParserclERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP21halide_scalar_value_t'/>
<use f='halide/tools/RunGen.h' l='270' c='_ZN6Halide6RunGen12ScalarParserclERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP21halide_scalar_value_t'/>
<use f='halide/tools/RunGen.h' l='284' c='_ZN6Halide6RunGen12ScalarParserclERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP21halide_scalar_value_t'/>
<use f='halide/tools/RunGen.h' l='295' c='_ZN6Halide6RunGen12parse_scalarERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_'/>
<use f='halide/tools/RunGen.h' l='301' c='_ZN6Halide6RunGen12parse_scalarERK13halide_type_tRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP21halide_scalar_value_t'/>
<use f='halide/tools/RunGen.h' l='577' c='_ZN6Halide6RunGen14FillWithScalarclERNS_7Runtime6BufferIvLi4EEERK21halide_scalar_value_t'/>
<use f='halide/tools/RunGen.h' l='586' c='_ZN6Halide6RunGen14FillWithScalar4as_TERK21halide_scalar_value_t'/>
<use f='halide/tools/RunGen.h' l='618' c='_ZN6Halide6RunGen14FillWithScalar4as_TERK21halide_scalar_value_t'/>
<use f='halide/tools/RunGen.h' l='658' c='_ZN6Halide6RunGen16scalar_to_stringB5cxx11ERK13halide_type_tRK21halide_scalar_value_t'/>
<use f='halide/tools/RunGen.h' l='709'/>
<use f='halide/tools/RunGen.h' l='750' c='_ZN6Halide6RunGen7ArgData11load_bufferESt8functionIFSt6vectorI18halide_dimension_tSaIS4_EEvEEPK24halide_filter_argument_t'/>
<use f='halide/tools/RunGen.h' l='1010' c='_ZN6Halide6RunGen6RunGen11load_inputsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='halide/tools/RunGen.h' l='1238' c='_ZNK6Halide6RunGen6RunGen16run_bounds_queryEv'/>
<use f='halide/tools/RunGen.h' l='1409' c='_ZNK6Halide6RunGen6RunGen25bounds_query_input_shapesB5cxx11Ev'/>
<size>8</size>
<def f='halide/build/tutorial/lesson_10_halide.h' l='1668' ll='1688'/>
<use f='halide/build/tutorial/lesson_10_halide.h' l='1716'/>
<use f='halide/build/tutorial/lesson_10_halide.h' l='1716'/>
<use f='halide/build/tutorial/lesson_10_halide.h' l='1716'/>
<use f='halide/build/tutorial/lesson_10_halide.h' l='1731'/>
<use f='halide/build/tutorial/lesson_10_halide.h' l='1731'/>
<use f='halide/build/tutorial/lesson_10_halide.h' l='1731'/>
<use f='halide/build/tutorial/lesson_10_halide.h' l='1731'/>
<size>8</size>
<doc f='halide/build/tutorial/lesson_10_halide.h' l='1660'>/** halide_scalar_value_t is a simple union able to represent all the well-known
 * scalar values in a filter argument. Note that it isn&apos;t tagged with a type;
 * you must ensure you know the proper type before accessing. Most user
 * code will never need to create instances of this struct; its primary use
 * is to hold def/min/max values in a halide_filter_argument_t. (Note that
 * this is conceptually just a union; it&apos;s wrapped in a struct to ensure
 * that it doesn&apos;t get anonymized by LLVM.)
 */</doc>
<mbr r='halide_scalar_value_t::u' o='0' t='union (anonymous union at /fast/tmp/halide.git/build/tutorial/lesson_10_halide.h:1669:5)'/>
<fun r='_ZN21halide_scalar_value_tC1Ev'/>
<use f='halide/util/HalideTraceUtils.h' l='15' c='_ZN6Halide8Internal8value_asE13halide_type_tRK21halide_scalar_value_t'/>
<use f='halide/util/HalideTraceUtils.h' l='79' c='_ZNK6Halide8Internal6Packet12get_value_asEi'/>
<size>8</size>
<use f='halide/util/HalideTraceViz.cpp' l='115' c='_ZN12_GLOBAL__N_18value_asERK13halide_type_tRK21halide_scalar_value_t'/>
<use f='halide/util/HalideTraceViz.cpp' l='150' c='_ZN12_GLOBAL__N_112get_value_asERK21halide_trace_packet_ti'/>
<size>8</size>
