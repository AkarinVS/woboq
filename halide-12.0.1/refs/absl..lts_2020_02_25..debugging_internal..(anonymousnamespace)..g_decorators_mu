<def f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='152' type='base_internal::SpinLock'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='1324' u='m' c='_ZN4absl14lts_2020_02_2518debugging_internal12_GLOBAL__N_110Symbolizer9GetSymbolEPKv'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='1334' u='m' c='_ZN4absl14lts_2020_02_2518debugging_internal12_GLOBAL__N_110Symbolizer9GetSymbolEPKv'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='1344' u='m' c='_ZN4absl14lts_2020_02_2518debugging_internal25RemoveAllSymbolDecoratorsEv'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='1349' u='m' c='_ZN4absl14lts_2020_02_2518debugging_internal25RemoveAllSymbolDecoratorsEv'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='1354' u='m' c='_ZN4absl14lts_2020_02_2518debugging_internal21RemoveSymbolDecoratorEi'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='1368' u='m' c='_ZN4absl14lts_2020_02_2518debugging_internal21RemoveSymbolDecoratorEi'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='1375' u='m' c='_ZN4absl14lts_2020_02_2518debugging_internal22InstallSymbolDecoratorEPFvPKNS1_19SymbolDecoratorArgsEEPv'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='1386' u='m' c='_ZN4absl14lts_2020_02_2518debugging_internal22InstallSymbolDecoratorEPFvPKNS1_19SymbolDecoratorArgsEEPv'/>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='145'>// Protects g_decorators.
// We are using SpinLock and not a Mutex here, because we may be called
// from inside Mutex::Lock itself, and it prohibits recursive calls.
// This happens in e.g. base/stacktrace_syscall_unittest.
// Moreover, we are using only TryLock(), if the decorator list
// is being modified (is busy), we skip all decorators, and possibly
// loose some info. Sorry, that&apos;s the best we could do.</doc>
