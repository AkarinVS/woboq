<dec f='halide/build/include/Halide.h' l='16772' type='void Halide::Func::compile_to_llvm_assembly(const std::string &amp; filename, const std::vector&lt;Argument&gt; &amp; , const std::string &amp; fn_name, const Halide::Target &amp; target = get_target_from_environment())'/>
<doc f='halide/build/include/Halide.h' l='16767'>/** Statically compile this function to llvm assembly, with the
     * given filename (which should probably end in .ll), type
     * signature, and C function name (which defaults to the same name
     * as this halide function */
    //@{</doc>
<use f='halide/python_bindings/src/PyFunc.cpp' l='219' u='a' c='_ZN6Halide14PythonBindings11define_funcERN8pybind117module_E'/>
<dec f='halide/src/Func.h' l='892' type='void Halide::Func::compile_to_llvm_assembly(const std::string &amp; filename, const std::vector&lt;Argument&gt; &amp; , const std::string &amp; fn_name, const Halide::Target &amp; target = get_target_from_environment())'/>
<doc f='halide/src/Func.h' l='887'>/** Statically compile this function to llvm assembly, with the
     * given filename (which should probably end in .ll), type
     * signature, and C function name (which defaults to the same name
     * as this halide function */
    //@{</doc>
<def f='halide/src/Func.cpp' l='3184' ll='3187' type='void Halide::Func::compile_to_llvm_assembly(const std::string &amp; filename, const vector&lt;Halide::Argument&gt; &amp; args, const std::string &amp; fn_name, const Halide::Target &amp; target = get_target_from_environment())'/>
