<dec f='halide/build/include/Halide.h' l='31828' type='Halide::Internal::Stmt Halide::Internal::uniquify_variable_names(const Halide::Internal::Stmt &amp; s)'/>
<doc f='halide/build/include/Halide.h' l='31825'>/** Modify a statement so that every internally-defined variable name
 * is unique. This lets later passes assume syntactic equivalence is
 * semantic equivalence. */</doc>
<dec f='halide/src/UniquifyVariableNames.h' l='16' type='Halide::Internal::Stmt Halide::Internal::uniquify_variable_names(const Halide::Internal::Stmt &amp; s)'/>
<use f='halide/src/Lower.cpp' l='194' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110lower_implERKSt6vectorINS0_8FunctionESaIS3_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS7388887'/>
<doc f='halide/src/UniquifyVariableNames.h' l='13'>/** Modify a statement so that every internally-defined variable name
 * is unique. This lets later passes assume syntactic equivalence is
 * semantic equivalence. */</doc>
<use f='halide/src/PrintLoopNest.cpp' l='225' u='c' c='_ZN6Halide8Internal15print_loop_nestB5cxx11ERKSt6vectorINS0_8FunctionESaIS2_EE'/>
<def f='halide/src/UniquifyVariableNames.cpp' l='164' ll='169' type='Halide::Internal::Stmt Halide::Internal::uniquify_variable_names(const Halide::Internal::Stmt &amp; s)'/>
<use f='halide/src/UniquifyVariableNames.cpp' l='181' u='c' c='_ZN6Halide8Internal5checkESt6vectorISt4pairINS_3VarENS_4ExprEESaIS5_EES7_'/>
