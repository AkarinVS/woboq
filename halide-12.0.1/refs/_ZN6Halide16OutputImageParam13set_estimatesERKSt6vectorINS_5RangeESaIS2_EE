<dec f='halide/build/include/Halide.h' l='22824' type='Halide::OutputImageParam &amp; Halide::OutputImageParam::set_estimates(const Halide::Region &amp; estimates)'/>
<doc f='halide/build/include/Halide.h' l='22820'>/** Set (min, extent) estimates for all dimensions in the ImageParam
     * at once; this is equivalent to calling `dim(n).set_estimate(min, extent)`
     * repeatedly, but slightly terser. The size of the estimates vector
     * must match the dimensionality of the ImageParam. */</doc>
<use f='halide/python_bindings/src/PyImageParam.cpp' l='32' u='a' c='_ZN6Halide14PythonBindings18define_image_paramERN8pybind117module_E'/>
<dec f='halide/src/OutputImageParam.h' l='117' type='Halide::OutputImageParam &amp; Halide::OutputImageParam::set_estimates(const Halide::Region &amp; estimates)'/>
<doc f='halide/src/OutputImageParam.h' l='113'>/** Set (min, extent) estimates for all dimensions in the ImageParam
     * at once; this is equivalent to calling `dim(n).set_estimate(min, extent)`
     * repeatedly, but slightly terser. The size of the estimates vector
     * must match the dimensionality of the ImageParam. */</doc>
<def f='halide/src/OutputImageParam.cpp' l='94' ll='103' type='Halide::OutputImageParam &amp; Halide::OutputImageParam::set_estimates(const Halide::Region &amp; estimates)'/>
