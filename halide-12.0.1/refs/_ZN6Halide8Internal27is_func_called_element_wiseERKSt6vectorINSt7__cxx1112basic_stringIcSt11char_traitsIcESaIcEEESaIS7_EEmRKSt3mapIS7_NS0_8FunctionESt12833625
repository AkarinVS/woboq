<dec f='halide/build/include/Halide.h' l='13239' type='std::string Halide::Internal::is_func_called_element_wise(const std::vector&lt;std::string&gt; &amp; order, size_t index, const std::map&lt;std::string, Function&gt; &amp; env)'/>
<doc f='halide/build/include/Halide.h' l='13236'>/** Determine if a Func (order[index]) is only consumed by another single Func
 * in element-wise manner. If it is, return the name of the consumer Func;
 * otherwise, return an empty string. */</doc>
<dec f='halide/src/AutoScheduleUtils.h' l='124' type='std::string Halide::Internal::is_func_called_element_wise(const std::vector&lt;std::string&gt; &amp; order, size_t index, const std::map&lt;std::string, Function&gt; &amp; env)'/>
<def f='halide/src/AutoScheduleUtils.cpp' l='300' ll='346' type='std::string Halide::Internal::is_func_called_element_wise(const vector&lt;std::string&gt; &amp; order, size_t index, const map&lt;std::string, Halide::Internal::Function&gt; &amp; env)'/>
<use f='halide/src/AutoScheduleUtils.cpp' l='369' u='c' c='_ZN6Halide8Internal33inline_all_element_wise_functionsERKSt6vectorINS0_8FunctionESaIS2_EERKS1_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaI231920'/>
<doc f='halide/src/AutoScheduleUtils.cpp' l='297'>// Determine if a Func (order[index]) is only consumed by another single Func
// in element-wise manner. If it is, return the name of the consumer Func;
// otherwise, return an empty string.</doc>
<doc f='halide/src/AutoScheduleUtils.h' l='121'>/** Determine if a Func (order[index]) is only consumed by another single Func
 * in element-wise manner. If it is, return the name of the consumer Func;
 * otherwise, return an empty string. */</doc>
