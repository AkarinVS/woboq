<dec f='halide/halide-install/include/Halide.h' l='30989' type='std::map&lt;std::string, Expr&gt; Halide::Internal::RegionCosts::detailed_load_costs(const std::map&lt;std::string, Box&gt; &amp; regions, const std::set&lt;std::string&gt; &amp; inlines = std::set&lt;std::string&gt;())'/>
<doc f='halide/halide-install/include/Halide.h' l='30986'>/** Same as detailed_load_costs above but this computes the cost of many function
     * regions and aggregates them. */</doc>
<dec f='halide/build/include/Halide.h' l='30989' type='std::map&lt;std::string, Expr&gt; Halide::Internal::RegionCosts::detailed_load_costs(const std::map&lt;std::string, Box&gt; &amp; regions, const std::set&lt;std::string&gt; &amp; inlines = std::set&lt;std::string&gt;())'/>
<doc f='halide/build/include/Halide.h' l='30986'>/** Same as detailed_load_costs above but this computes the cost of many function
     * regions and aggregates them. */</doc>
<dec f='halide/src/RegionCosts.h' l='121' type='std::map&lt;std::string, Expr&gt; Halide::Internal::RegionCosts::detailed_load_costs(const std::map&lt;std::string, Box&gt; &amp; regions, const std::set&lt;std::string&gt; &amp; inlines = std::set&lt;std::string&gt;())'/>
<doc f='halide/src/RegionCosts.h' l='118'>/** Same as detailed_load_costs above but this computes the cost of many function
     * regions and aggregates them. */</doc>
<def f='halide/src/RegionCosts.cpp' l='606' ll='623' type='map&lt;std::string, Halide::Expr&gt; Halide::Internal::RegionCosts::detailed_load_costs(const map&lt;std::string, Halide::Internal::Box&gt; &amp; regions, const set&lt;std::string&gt; &amp; inlines = std::set&lt;std::string&gt;())'/>
<use f='halide/src/autoschedulers/mullapudi2016/AutoSchedule.cpp' l='1902' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_111Partitioner13analyze_groupERKNS2_5GroupEb'/>
