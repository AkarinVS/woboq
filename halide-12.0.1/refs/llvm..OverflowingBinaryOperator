<inh f='halide/llvm-install/include/llvm/IR/Operator.h' l='30' c='llvm::Operator'/>
<def f='halide/llvm-install/include/llvm/IR/Operator.h' l='66' ll='116'/>
<use f='halide/llvm-install/include/llvm/IR/Operator.h' l='427'/>
<use f='halide/llvm-install/include/llvm/IR/Operator.h' l='430'/>
<use f='halide/llvm-install/include/llvm/IR/Operator.h' l='433'/>
<use f='halide/llvm-install/include/llvm/IR/Operator.h' l='436'/>
<size>24</size>
<doc f='halide/llvm-install/include/llvm/IR/Operator.h' l='63'>/// Utility class for integer operators which may exhibit overflow - Add, Sub,
/// Mul, and Shl. It does not include SDiv, despite that operator having the
/// potential for overflow.</doc>
<fun r='_ZN4llvm25OverflowingBinaryOperator20setHasNoUnsignedWrapEb'/>
<fun r='_ZN4llvm25OverflowingBinaryOperator18setHasNoSignedWrapEb'/>
<fun r='_ZNK4llvm25OverflowingBinaryOperator17hasNoUnsignedWrapEv'/>
<fun r='_ZNK4llvm25OverflowingBinaryOperator15hasNoSignedWrapEv'/>
<fun r='_ZN4llvm25OverflowingBinaryOperator7classofEPKNS_11InstructionE'/>
<fun r='_ZN4llvm25OverflowingBinaryOperator7classofEPKNS_12ConstantExprE'/>
<fun r='_ZN4llvm25OverflowingBinaryOperator7classofEPKNS_5ValueE'/>
