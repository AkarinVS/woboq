<dec f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.h' l='410' type='void absl::lts_2020_02_25::Mutex::EnableInvariantDebugging(void (*)(void *) invariant, void * arg)'/>
<doc f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.h' l='393'>// ---------------------------------------------------------------------------
  // Debug Support: Invariant Checking, Deadlock Detection, Logging.
  // ---------------------------------------------------------------------------

  // Mutex::EnableInvariantDebugging()
  //
  // If `invariant`!=null and if invariant debugging has been enabled globally,
  // cause `(*invariant)(arg)` to be called at moments when the invariant for
  // this `Mutex` should hold (for example: just after acquire, just before
  // release).
  //
  // The routine `invariant` should have no side-effects since it is not
  // guaranteed how many times it will be called; it should check the invariant
  // and crash if it does not hold. Enabling global invariant debugging may
  // substantially reduce `Mutex` performance; it should be set only for
  // non-production runs.  Optimization options may also disable invariant
  // checks.</doc>
<def f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='738' ll='747' type='void absl::lts_2020_02_25::Mutex::EnableInvariantDebugging(void (*)(void *) invariant, void * arg)'/>
