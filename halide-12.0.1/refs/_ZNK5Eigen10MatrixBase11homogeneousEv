<dec f='halide/build-apps/eigen/Eigen/src/Core/MatrixBase.h' l='407' type='Eigen::MatrixBase::HomogeneousReturnType Eigen::MatrixBase::homogeneous() const'/>
<def f='halide/build-apps/eigen/Eigen/src/Geometry/Homogeneous.h' l='128' ll='134' type='typename MatrixBase&lt;Derived&gt;::HomogeneousReturnType Eigen::MatrixBase::homogeneous() const'/>
<doc f='halide/build-apps/eigen/Eigen/src/Geometry/Homogeneous.h' l='115'>/** \geometry_module \ingroup Geometry_Module
  *
  * \returns a vector expression that is one longer than the vector argument, with the value 1 symbolically appended as the last coefficient.
  *
  * This can be used to convert affine coordinates to homogeneous coordinates.
  *
  * \only_for_vectors
  *
  * Example: \include MatrixBase_homogeneous.cpp
  * Output: \verbinclude MatrixBase_homogeneous.out
  *
  * \sa VectorwiseOp::homogeneous(), class Homogeneous
  */</doc>
