<dec f='halide/build/include/Halide.h' l='7024' type='Halide::Expr Halide::Internal::strided_ramp_base(const Halide::Expr &amp; e, int stride = 1)'/>
<doc f='halide/build/include/Halide.h' l='7022'>/** If e is a ramp expression with stride, default 1, return the base,
 * otherwise undefined. */</doc>
<dec f='halide/src/IROperator.h' l='219' type='Halide::Expr Halide::Internal::strided_ramp_base(const Halide::Expr &amp; e, int stride = 1)'/>
<doc f='halide/src/IROperator.h' l='217'>/** If e is a ramp expression with stride, default 1, return the base,
 * otherwise undefined. */</doc>
<use f='halide/src/CodeGen_C.cpp' l='2349' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4LoadE'/>
<use f='halide/src/CodeGen_C.cpp' l='2407' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_5StoreE'/>
<use f='halide/src/CodeGen_OpenCL_Dev.cpp' l='489' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118CodeGen_OpenCL_Dev16CodeGen_OpenCL_C5visitEPKNS0_4LoadE'/>
<use f='halide/src/CodeGen_OpenCL_Dev.cpp' l='657' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118CodeGen_OpenCL_Dev16CodeGen_OpenCL_C5visitEPKNS0_5StoreE'/>
<def f='halide/src/IROperator.cpp' l='1000' ll='1012' type='Halide::Expr Halide::Internal::strided_ramp_base(const Halide::Expr &amp; e, int stride = 1)'/>
