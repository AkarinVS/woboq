<dec f='halide/build/_deps/pybind11-src/include/pybind11/detail/common.h' l='375' type='5'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/cast.h' l='532' c='_ZN8pybind116detail19type_caster_generic4castEPKvNS_19return_value_policyENS_6handleEPKNS0_9type_infoEPFPvS3_ESB_S3_'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/cast.h' l='1763' u='r' c='_ZN8pybind114castEOT_NS_19return_value_policyENS_6handleE'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1416' c='_ZN8pybind116class_20def_readwrite_staticEPKcPTL0__DpRKTL0_0_'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1423' c='_ZN8pybind116class_19def_readonly_staticEPKcPKTL0__DpRKTL0_0_'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1443' c='_ZN8pybind116class_28def_property_readonly_staticEPKcRKTL0__DpRKTL0_0_'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1472' c='_ZN8pybind116class_19def_property_staticEPKcRKTL0__RKNS_12cpp_functionEDpRKTL0_0_'/>
<doc f='halide/build/_deps/pybind11-src/include/pybind11/detail/common.h' l='370'>/** Reference an existing object, but do not take ownership. The C++ side
        is responsible for managing the objectâ€™s lifetime and deallocating it
        when it is no longer used. Warning: undefined behavior will ensue when
        the C++ side deletes an object that is still referenced and used by
        Python. */</doc>
