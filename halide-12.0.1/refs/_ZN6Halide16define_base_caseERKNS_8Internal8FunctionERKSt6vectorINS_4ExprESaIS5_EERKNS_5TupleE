<def f='halide/src/Func.cpp' l='2878' ll='2899' type='Halide::Func Halide::define_base_case(const Internal::Function &amp; func, const vector&lt;Halide::Expr&gt; &amp; a, const Halide::Tuple &amp; e)'/>
<use f='halide/src/Func.cpp' l='2902' u='c' c='_ZN6Halide16define_base_caseERKNS_8Internal8FunctionERKSt6vectorINS_4ExprESaIS5_EERKS5_'/>
<use f='halide/src/Func.cpp' l='2914' u='c' c='_ZN6Halide7FuncRef15func_ref_updateERKNS_5TupleEi'/>
<doc f='halide/src/Func.cpp' l='2876'>// Inject a suitable base-case definition given an update
// definition. This is a helper for FuncRef::operator+= and co.</doc>
