<dec f='halide/llvm-install/include/llvm/Analysis/LoopNestAnalysis.h' l='49' type='static bool llvm::LoopNest::arePerfectlyNested(const llvm::Loop &amp; OuterLoop, const llvm::Loop &amp; InnerLoop, llvm::ScalarEvolution &amp; SE)'/>
<doc f='halide/llvm-install/include/llvm/Analysis/LoopNestAnalysis.h' l='38'>/// Return true if the given loops \p OuterLoop and \p InnerLoop are
  /// perfectly nested with respect to each other, and false otherwise.
  /// Example:
  /// \code
  ///   for(i)
  ///     for(j)
  ///       for(k)
  /// \endcode
  /// arePerfectlyNested(loop_i, loop_j, SE) would return true.
  /// arePerfectlyNested(loop_j, loop_k, SE) would return true.
  /// arePerfectlyNested(loop_i, loop_k, SE) would return false.</doc>
