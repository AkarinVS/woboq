<def f='halide/llvm-install/include/llvm/Support/Error.h' l='1006' ll='1008' type='void llvm::consumeError(llvm::Error Err)'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='1032' u='c' c='_ZN4llvm11errorToBoolENS_5ErrorE'/>
<doc f='halide/llvm-install/include/llvm/Support/Error.h' l='999'>/// Consume a Error without doing anything. This method should be used
/// only where an error can be considered a reasonable and expected return
/// value.
///
/// Uses of this method are potentially indicative of design problems: If it&apos;s
/// legitimate to do nothing while processing an &quot;error&quot;, the error-producer
/// might be more clearly refactored to return an Optional&lt;T&gt;.</doc>
<use f='halide/src/Introspection.cpp' l='933' u='c' c='_ZN6Halide8Internal13Introspection12_GLOBAL__N_113DebugSections26load_and_parse_object_fileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
