<dec f='halide/build-apps/flatbuffers/include/flatbuffers/reflection.h' l='151' type='int64_t flatbuffers::GetAnyValueI(reflection::BaseType type, const uint8_t * data)'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/reflection.h' l='164' u='c' c='_ZN11flatbuffers12GetAnyFieldIERKNS_5TableERKN10reflection5FieldE'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/reflection.h' l='189' u='c' c='_ZN11flatbuffers12GetAnyFieldIERKNS_6StructERKN10reflection5FieldE'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/reflection.h' l='209' u='c' c='_ZN11flatbuffers17GetAnyVectorElemIEPKNS_11VectorOfAnyEN10reflection8BaseTypeEm'/>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/reflection.h' l='147'>// Raw helper functions used below: get any value in memory as a 64bit int, a
// double or a string.
// All scalars get static_cast to an int64_t, strings use strtoull, every other
// data type returns 0.</doc>
<def f='halide/build-apps/flatbuffers/src/reflection.cpp' l='25' ll='50' type='int64_t flatbuffers::GetAnyValueI(reflection::BaseType type, const uint8_t * data)'/>
<use f='halide/build-apps/flatbuffers/src/reflection.cpp' l='67' u='c' c='_ZN11flatbuffers12GetAnyValueFEN10reflection8BaseTypeEPKh'/>
<use f='halide/build-apps/flatbuffers/src/reflection.cpp' l='119' u='c' c='_ZN11flatbuffers12GetAnyValueSB5cxx11EN10reflection8BaseTypeEPKhPKNS0_6SchemaEi'/>
