<dec f='halide/llvm-install/include/llvm/Analysis/MemoryLocation.h' l='226' type='llvm::LocationSize'/>
<use f='halide/llvm-install/include/llvm/Analysis/MemoryLocation.h' l='232' u='r' c='_ZNK4llvm14MemoryLocation5printERNS_11raw_ostreamE'/>
<use f='halide/llvm-install/include/llvm/Analysis/MemoryLocation.h' l='286' u='w' c='_ZN4llvm14MemoryLocationC1Ev'/>
<use f='halide/llvm-install/include/llvm/Analysis/MemoryLocation.h' l='290' u='w' c='_ZN4llvm14MemoryLocationC1EPKNS_5ValueENS_12LocationSizeERKNS_9AAMDNodesE'/>
<use f='halide/llvm-install/include/llvm/Analysis/MemoryLocation.h' l='300' u='w' c='_ZNK4llvm14MemoryLocation14getWithNewSizeENS_12LocationSizeE'/>
<use f='halide/llvm-install/include/llvm/Analysis/MemoryLocation.h' l='311' u='m' c='_ZNK4llvm14MemoryLocationeqERKS0_'/>
<use f='halide/llvm-install/include/llvm/Analysis/MemoryLocation.h' l='311' u='r' c='_ZNK4llvm14MemoryLocationeqERKS0_'/>
<use f='halide/llvm-install/include/llvm/Analysis/MemoryLocation.h' l='342' u='r' c='_ZN4llvm12DenseMapInfoINS_14MemoryLocationEE12getHashValueERKS1_'/>
<offset>64</offset>
<doc f='halide/llvm-install/include/llvm/Analysis/MemoryLocation.h' l='219'>/// The maximum size of the location, in address-units, or
  /// UnknownSize if the size is not known.
  ///
  /// Note that an unknown size does not mean the pointer aliases the entire
  /// virtual address space, because there are restrictions on stepping out of
  /// one object and into another. See
  /// http://llvm.org/docs/LangRef.html#pointeraliasing</doc>
