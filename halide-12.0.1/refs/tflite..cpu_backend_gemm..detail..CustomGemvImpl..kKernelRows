<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_custom_gemv.h' l='75' type='const int'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/cpu_backend_gemm_custom_gemv.h' l='60'>// The number of rows of the left-hand-side matrix (and equivalently of the
  // destination column-vector) that the kernel processes at a time.
  // This will also be the minimum required number of rows for a Gemv shape
  // to be supported by this path.
  //
  // Gemv implementations are expected to be able to deal with numbers of
  // rows that aren&apos;t multiples of kKernelRows by possibly running the kernel
  // again at an odd row_start, e.g. if kKernelRows==4, Run() should still
  // support running on 7 rows by running twice: once with row_start=0 and then
  // another time with row_start=3.
  //
  // On the other hand, gemv implementations are not expected to support
  // running on fewer than kKernelRows rows. There is no interest in
  // optimizing such narrow Gemv&apos;s that they are just a few dot-products.
  // Supporting that would require custom kernel code only for that case.</doc>
