<def f='halide/llvm-install/include/llvm/Support/Error.h' l='198' ll='201' type='void llvm::Error::Error(std::unique_ptr&lt;ErrorInfoBase&gt; Payload)'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='419' u='c' c='_ZN4llvm9ErrorList4joinENS_5ErrorES1_'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='886' u='c' c='_ZN4llvm15handleErrorImplESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS1_EE'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='1242' u='c' c='_ZN4llvm9FileError9takeErrorEv'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='1267' u='c' c='_ZN4llvm9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorE'/>
<use f='halide/llvm-install/include/llvm/Support/Error.h' l='1358' u='c' c='_ZN4llvm6unwrapEP15LLVMOpaqueError'/>
<doc f='halide/llvm-install/include/llvm/Support/Error.h' l='196'>/// Create an error value. Prefer using the &apos;make_error&apos; function, but
  /// this constructor can be useful when &quot;re-throwing&quot; errors from handlers.</doc>
