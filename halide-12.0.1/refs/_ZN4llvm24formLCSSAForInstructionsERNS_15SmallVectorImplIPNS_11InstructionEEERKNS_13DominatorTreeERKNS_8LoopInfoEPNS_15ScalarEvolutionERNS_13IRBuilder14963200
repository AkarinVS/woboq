<dec f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='82' type='bool llvm::formLCSSAForInstructions(SmallVectorImpl&lt;llvm::Instruction *&gt; &amp; Worklist, const llvm::DominatorTree &amp; DT, const llvm::LoopInfo &amp; LI, llvm::ScalarEvolution * SE, llvm::IRBuilderBase &amp; Builder, SmallVectorImpl&lt;llvm::PHINode *&gt; * PHIsToRemove = nullptr)'/>
<doc f='halide/llvm-install/include/llvm/Transforms/Utils/LoopUtils.h' l='67'>/// Ensures LCSSA form for every instruction from the Worklist in the scope of
/// innermost containing loop.
///
/// For the given instruction which have uses outside of the loop, an LCSSA PHI
/// node is inserted and the uses outside the loop are rewritten to use this
/// node.
///
/// LoopInfo and DominatorTree are required and, since the routine makes no
/// changes to CFG, preserved.
///
/// Returns true if any modifications are made.
///
/// This function may introduce unused PHI nodes. If \p PHIsToRemove is not
/// nullptr, those are added to it (before removing, the caller has to check if
/// they still do not have any uses). Otherwise the PHIs are directly removed.</doc>
