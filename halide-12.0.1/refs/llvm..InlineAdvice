<def f='halide/llvm-install/include/llvm/Analysis/InlineAdvisor.h' l='53' ll='118'/>
<use f='halide/llvm-install/include/llvm/Analysis/InlineAdvisor.h' l='58' c='_ZN4llvm12InlineAdviceC1EOS0_'/>
<use f='halide/llvm-install/include/llvm/Analysis/InlineAdvisor.h' l='59' c='_ZN4llvm12InlineAdviceC1ERKS0_'/>
<ovr f='halide/llvm-install/include/llvm/Analysis/InlineAdvisor.h' l='120' c='llvm::DefaultInlineAdvice'/>
<use f='halide/llvm-install/include/llvm/Analysis/InlineAdvisor.h' l='120'/>
<use f='halide/llvm-install/include/llvm/Analysis/InlineAdvisor.h' l='125' c='_ZN4llvm19DefaultInlineAdviceC1EPNS_13InlineAdvisorERNS_8CallBaseENS_8OptionalINS_10InlineCostEEERNS_25OptimizationRemarkEmitterEb'/>
<use f='halide/llvm-install/include/llvm/Analysis/InlineAdvisor.h' l='151' c='_ZN4llvm13InlineAdvisor9getAdviceERNS_8CallBaseEb'/>
<use f='halide/llvm-install/include/llvm/Analysis/InlineAdvisor.h' l='166' c='_ZN4llvm13InlineAdvisor13getAdviceImplERNS_8CallBaseE'/>
<use f='halide/llvm-install/include/llvm/Analysis/InlineAdvisor.h' l='167' c='_ZN4llvm13InlineAdvisor18getMandatoryAdviceERNS_8CallBaseEb'/>
<use f='halide/llvm-install/include/llvm/Analysis/InlineAdvisor.h' l='196'/>
<use f='halide/llvm-install/include/llvm/Analysis/InlineAdvisor.h' l='211' c='_ZN4llvm20DefaultInlineAdvisor13getAdviceImplERNS_8CallBaseE'/>
<use f='halide/llvm-install/include/llvm/Analysis/ReplayInlineAdvisor.h' l='31' c='_ZN4llvm19ReplayInlineAdvisor13getAdviceImplERNS_8CallBaseE'/>
<size>64</size>
<doc f='halide/llvm-install/include/llvm/Analysis/InlineAdvisor.h' l='46'>/// Capture state between an inlining decision having had been made, and
/// its impact being observable. When collecting model training data, this
/// allows recording features/decisions/partial reward data sets.
///
/// Derivations of this type are expected to be tightly coupled with their
/// InliningAdvisors. The base type implements the minimal contractual
/// obligations.</doc>
<fun r='_ZN4llvm12InlineAdviceC1EPNS_13InlineAdvisorERNS_8CallBaseERNS_25OptimizationRemarkEmitterEb'/>
<fun r='_ZN4llvm12InlineAdviceC1EOS0_'/>
<fun r='_ZN4llvm12InlineAdviceC1ERKS0_'/>
<fun r='_ZN4llvm12InlineAdviceD1Ev'/>
<fun r='_ZN4llvm12InlineAdvice14recordInliningEv'/>
<fun r='_ZN4llvm12InlineAdvice31recordInliningWithCalleeDeletedEv'/>
<fun r='_ZN4llvm12InlineAdvice26recordUnsuccessfulInliningERKNS_12InlineResultE'/>
<fun r='_ZN4llvm12InlineAdvice25recordUnattemptedInliningEv'/>
<fun r='_ZNK4llvm12InlineAdvice21isInliningRecommendedEv'/>
<fun r='_ZNK4llvm12InlineAdvice27getOriginalCallSiteDebugLocEv'/>
<fun r='_ZNK4llvm12InlineAdvice29getOriginalCallSiteBasicBlockEv'/>
<fun r='_ZN4llvm12InlineAdvice18recordInliningImplEv'/>
<fun r='_ZN4llvm12InlineAdvice35recordInliningWithCalleeDeletedImplEv'/>
<fun r='_ZN4llvm12InlineAdvice30recordUnsuccessfulInliningImplERKNS_12InlineResultE'/>
<fun r='_ZN4llvm12InlineAdvice29recordUnattemptedInliningImplEv'/>
<mbr r='llvm::InlineAdvice::Advisor' o='64' t='llvm::InlineAdvisor *const'/>
<mbr r='llvm::InlineAdvice::Caller' o='128' t='llvm::Function *const'/>
<mbr r='llvm::InlineAdvice::Callee' o='192' t='llvm::Function *const'/>
<mbr r='llvm::InlineAdvice::DLoc' o='256' t='const llvm::DebugLoc'/>
<mbr r='llvm::InlineAdvice::Block' o='320' t='const llvm::BasicBlock *const'/>
<mbr r='llvm::InlineAdvice::ORE' o='384' t='llvm::OptimizationRemarkEmitter &amp;'/>
<mbr r='llvm::InlineAdvice::IsInliningRecommended' o='448' t='const bool'/>
<fun r='_ZN4llvm12InlineAdvice12markRecordedEv'/>
<fun r='_ZN4llvm12InlineAdvice25recordInlineStatsIfNeededEv'/>
<mbr r='llvm::InlineAdvice::Recorded' o='456' t='bool'/>
