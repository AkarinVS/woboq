<def f='halide/build-apps/eigen/Eigen/src/Core/util/Memory.h' l='99' ll='110' type='void * Eigen::internal::handmade_aligned_malloc(std::size_t size, std::size_t alignment = 16)'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/util/Memory.h' l='128' u='c' c='_ZN5Eigen8internal24handmade_aligned_reallocEPvmm'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/util/Memory.h' l='96'>/** \internal Like malloc, but the returned pointer is guaranteed to be 16-byte aligned.
  * Fast, but wastes 16 additional bytes of memory. Does not throw any exception.
  */</doc>
<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/util/MaxSizeVector.h' l='38' u='c' c='_ZN5Eigen13MaxSizeVectorC1Em'/>
<use f='halide/build-apps/eigen/unsupported/Eigen/CXX11/src/util/MaxSizeVector.h' l='46' u='c' c='_ZN5Eigen13MaxSizeVectorC1EmRKT_'/>
