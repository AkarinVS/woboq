<dec f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='283' type='LazyCallGraph::RefSCC *'/>
<offset>256</offset>
<doc f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='275'>/// If non-null, the updated current \c RefSCC being processed.
  ///
  /// This is set when a graph refinement takes place an the &quot;current&quot; point in
  /// the graph moves &quot;down&quot; or earlier in the post-order walk. This will often
  /// cause the &quot;current&quot; RefSCC to be a newly created RefSCC object and the
  /// old one to be added to the above worklist. When that happens, this
  /// pointer is non-null and can be used to continue processing the &quot;top&quot; of
  /// the post-order walk.</doc>
