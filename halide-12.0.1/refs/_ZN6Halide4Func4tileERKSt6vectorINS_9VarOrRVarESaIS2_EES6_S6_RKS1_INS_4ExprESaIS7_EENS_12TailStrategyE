<dec f='halide/build/include/Halide.h' l='17479' type='Halide::Func &amp; Halide::Func::tile(const std::vector&lt;VarOrRVar&gt; &amp; previous, const std::vector&lt;VarOrRVar&gt; &amp; outers, const std::vector&lt;VarOrRVar&gt; &amp; inners, const std::vector&lt;Expr&gt; &amp; factors, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<doc f='halide/build/include/Halide.h' l='17478'>/** The generalized tile, with a single tail strategy to apply to all vars. */</doc>
<dec f='halide/src/Func.h' l='1599' type='Halide::Func &amp; Halide::Func::tile(const std::vector&lt;VarOrRVar&gt; &amp; previous, const std::vector&lt;VarOrRVar&gt; &amp; outers, const std::vector&lt;VarOrRVar&gt; &amp; inners, const std::vector&lt;Expr&gt; &amp; factors, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<doc f='halide/src/Func.h' l='1598'>/** The generalized tile, with a single tail strategy to apply to all vars. */</doc>
<def f='halide/src/Func.cpp' l='2369' ll='2376' type='Halide::Func &amp; Halide::Func::tile(const std::vector&lt;VarOrRVar&gt; &amp; previous, const std::vector&lt;VarOrRVar&gt; &amp; outers, const std::vector&lt;VarOrRVar&gt; &amp; inners, const std::vector&lt;Expr&gt; &amp; factors, Halide::TailStrategy tail = TailStrategy::Auto)'/>
