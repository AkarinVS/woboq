<dec f='halide/halide-install/include/Halide.h' l='27069' type='Halide::Expr Halide::sum(Halide::Expr , const Halide::Func &amp; )'/>
<doc f='halide/halide-install/include/Halide.h' l='27063'>/** Inline reductions create an anonymous helper Func to do the
 * work. The variants below instead take a named Func object to use,
 * so that it is no longer anonymous and can be scheduled
 * (e.g. unrolled across the reduction domain). The Func passed must
 * not have any existing definition. */
//@{</doc>
<dec f='halide/build/include/Halide.h' l='27069' type='Halide::Expr Halide::sum(Halide::Expr , const Halide::Func &amp; )'/>
<doc f='halide/build/include/Halide.h' l='27063'>/** Inline reductions create an anonymous helper Func to do the
 * work. The variants below instead take a named Func object to use,
 * so that it is no longer anonymous and can be scheduled
 * (e.g. unrolled across the reduction domain). The Func passed must
 * not have any existing definition. */
//@{</doc>
<dec f='halide/src/InlineReductions.h' l='81' type='Halide::Expr Halide::sum(Halide::Expr , const Halide::Func &amp; )'/>
<doc f='halide/src/InlineReductions.h' l='75'>/** Inline reductions create an anonymous helper Func to do the
 * work. The variants below instead take a named Func object to use,
 * so that it is no longer anonymous and can be scheduled
 * (e.g. unrolled across the reduction domain). The Func passed must
 * not have any existing definition. */
//@{</doc>
<def f='halide/src/InlineReductions.cpp' l='115' ll='117' type='Halide::Expr Halide::sum(Halide::Expr e, const Halide::Func &amp; f)'/>
