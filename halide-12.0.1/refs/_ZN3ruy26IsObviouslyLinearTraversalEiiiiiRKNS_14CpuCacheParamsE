<dec f='halide/build-apps/ruy/ruy/block_map.h' l='112' type='bool ruy::IsObviouslyLinearTraversal(int rows, int cols, int depth, int lhs_scalar_size, int rhs_scalar_size, const ruy::CpuCacheParams &amp; cpu_cache_params)'/>
<def f='halide/build-apps/ruy/ruy/block_map.cc' l='321' ll='337' type='bool ruy::IsObviouslyLinearTraversal(int rows, int cols, int depth, int lhs_scalar_size, int rhs_scalar_size, const ruy::CpuCacheParams &amp; cpu_cache_params)'/>
<doc f='halide/build-apps/ruy/ruy/block_map.h' l='106'>// This function produces a coarse estimate of whether linear traversal will
// be used for this matmul. It offers a one-way guarantee: if this function
// returns true then linear traversal will be used.
//
// The purpose of this function is to allow TrMul to make a cheap, early
// decision to enter a &quot;simple loop&quot; code path for simple cases.</doc>
<use f='halide/build-apps/ruy/ruy/trmul.cc' l='273' u='c' c='_ZN3ruy12_GLOBAL__N_116GetUseSimpleLoopEiiiiiiRKNS_14CpuCacheParamsE'/>
