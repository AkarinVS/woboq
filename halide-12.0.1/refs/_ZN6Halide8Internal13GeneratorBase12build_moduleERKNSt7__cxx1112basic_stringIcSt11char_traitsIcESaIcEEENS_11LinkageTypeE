<dec f='halide/build/include/Halide.h' l='26031' type='Halide::Module Halide::Internal::GeneratorBase::build_module(const std::string &amp; function_name = &quot;&quot;, Halide::LinkageType linkage_type = LinkageType::ExternalPlusMetadata)'/>
<doc f='halide/build/include/Halide.h' l='26029'>// Call build() and produce a Module for the result.
    // If function_name is empty, generator_name() will be used for the function.</doc>
<dec f='halide/src/Generator.h' l='3097' type='Halide::Module Halide::Internal::GeneratorBase::build_module(const std::string &amp; function_name = &quot;&quot;, Halide::LinkageType linkage_type = LinkageType::ExternalPlusMetadata)'/>
<use f='halide/src/Generator.cpp' l='1031' u='c' c='_ZN6Halide8Internal26generate_filter_main_innerEiPPcRSo'/>
<def f='halide/src/Generator.cpp' l='1460' ll='1498' type='Halide::Module Halide::Internal::GeneratorBase::build_module(const std::string &amp; function_name = &quot;&quot;, const Halide::LinkageType linkage_type = LinkageType::ExternalPlusMetadata)'/>
<doc f='halide/src/Generator.h' l='3095'>// Call build() and produce a Module for the result.
    // If function_name is empty, generator_name() will be used for the function.</doc>
