<def f='halide/apps/hannk/interpreter/model.h' l='240' ll='331'/>
<use f='halide/apps/hannk/interpreter/model.h' l='282' c='_ZN5hannk6DimMap8constantERKNS_8IntervalE'/>
<use f='halide/apps/hannk/interpreter/model.h' l='289' c='_ZN5hannk6DimMap8constantEi'/>
<use f='halide/apps/hannk/interpreter/model.h' l='293' c='_ZN5hannk6DimMap10downsampleEiRKNS_8IntervalE'/>
<use f='halide/apps/hannk/interpreter/model.h' l='300' c='_ZN5hannk6DimMap8upsampleEiRKNS_8IntervalE'/>
<use f='halide/apps/hannk/interpreter/model.h' l='307' c='_ZN5hannk6DimMap10downsampleEi'/>
<use f='halide/apps/hannk/interpreter/model.h' l='311' c='_ZN5hannk6DimMap8upsampleEi'/>
<use f='halide/apps/hannk/interpreter/model.h' l='315' c='_ZN5hannk6DimMap11elementwiseEi'/>
<use f='halide/apps/hannk/interpreter/model.h' l='319' c='_ZN5hannk6DimMap7stencilERKNS_8IntervalE'/>
<use f='halide/apps/hannk/interpreter/model.h' l='323' c='_ZN5hannk6DimMap5alignEi'/>
<use f='halide/apps/hannk/interpreter/model.h' l='336'/>
<use f='halide/apps/hannk/interpreter/model.h' l='345' c='_ZN5hannk9BoundsMap2atEii'/>
<use f='halide/apps/hannk/interpreter/model.h' l='348' c='_ZNK5hannk9BoundsMap2atEii'/>
<use f='halide/apps/hannk/interpreter/model.h' l='352' c='_ZN5hannk9BoundsMap2atEi'/>
<use f='halide/apps/hannk/interpreter/model.h' l='353' c='_ZN5hannk9BoundsMap2atEi'/>
<use f='halide/apps/hannk/interpreter/model.h' l='357' c='_ZNK5hannk9BoundsMap2atEi'/>
<use f='halide/apps/hannk/interpreter/model.h' l='358' c='_ZNK5hannk9BoundsMap2atEi'/>
<use f='halide/apps/hannk/interpreter/model.h' l='383' c='_ZNK5hannk9BoundsMap14is_elementwiseEii'/>
<use f='halide/apps/hannk/interpreter/model.h' l='392' c='_ZNK5hannk9BoundsMap11is_constantEii'/>
<size>24</size>
<doc f='halide/apps/hannk/interpreter/model.h' l='238'>// A mapping from an output x to required input coordinates [min, max].
// [min, max] = (x / inv_stride) * stride + bounds</doc>
<mbr r='hannk::DimMap::pre_bounds' o='0' t='hannk::Interval'/>
<mbr r='hannk::DimMap::stride' o='64' t='int'/>
<mbr r='hannk::DimMap::inv_stride' o='96' t='int'/>
<mbr r='hannk::DimMap::bounds' o='128' t='hannk::Interval'/>
<fun r='_ZN5hannk6DimMapC1Ev'/>
<fun r='_ZN5hannk6DimMapC1EiiRKNS_8IntervalE'/>
<fun r='_ZNK5hannk6DimMap8evaluateENS_8IntervalE'/>
<fun r='_ZNK5hannk6DimMap8evaluateEi'/>
<fun r='_ZNK5hannk6DimMap14is_elementwiseEv'/>
<fun r='_ZNK5hannk6DimMap11is_upsampleEv'/>
<fun r='_ZNK5hannk6DimMap13is_downsampleEv'/>
<fun r='_ZNK5hannk6DimMap11is_constantEv'/>
<fun r='_ZN5hannk6DimMap8constantERKNS_8IntervalE'/>
<fun r='_ZN5hannk6DimMap8constantEi'/>
<fun r='_ZN5hannk6DimMap10downsampleEiRKNS_8IntervalE'/>
<fun r='_ZN5hannk6DimMap8upsampleEiRKNS_8IntervalE'/>
<fun r='_ZN5hannk6DimMap10downsampleEi'/>
<fun r='_ZN5hannk6DimMap8upsampleEi'/>
<fun r='_ZN5hannk6DimMap11elementwiseEi'/>
<fun r='_ZN5hannk6DimMap7stencilERKNS_8IntervalE'/>
<fun r='_ZN5hannk6DimMap5alignEi'/>
