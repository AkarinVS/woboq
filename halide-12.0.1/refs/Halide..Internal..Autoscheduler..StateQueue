<def f='halide/src/autoschedulers/adams2019/AutoSchedule.cpp' l='192' ll='252'/>
<use f='halide/src/autoschedulers/adams2019/AutoSchedule.cpp' l='233' c='_ZN6Halide8Internal13Autoscheduler10StateQueue4swapERS2_'/>
<use f='halide/src/autoschedulers/adams2019/AutoSchedule.cpp' l='280' c='_ZN6Halide8Internal13Autoscheduler21optimal_schedule_passERNS1_11FunctionDAGERKSt6vectorINS0_8FunctionESaIS5_EERKNS_13MachineParamsEPNS_9CostModelERSt14755906'/>
<use f='halide/src/autoschedulers/adams2019/AutoSchedule.cpp' l='280' c='_ZN6Halide8Internal13Autoscheduler21optimal_schedule_passERNS1_11FunctionDAGERKSt6vectorINS0_8FunctionESaIS5_EERKNS_13MachineParamsEPNS_9CostModelERSt14755906'/>
<size>32</size>
<doc f='halide/src/autoschedulers/adams2019/AutoSchedule.cpp' l='189'>// A priority queue of states, sorted according to increasing
// cost. Never shrinks, to avoid reallocations.
// Can&apos;t use std::priority_queue because it doesn&apos;t support unique_ptr.</doc>
