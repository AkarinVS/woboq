<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/detection_postprocess.cc' l='421' ll='495' type='TfLiteStatus tflite::ops::custom::detection_postprocess::NonMaxSuppressionSingleClassHelper(TfLiteContext * context, TfLiteNode * node, tflite::ops::custom::detection_postprocess::OpData * op_data, const std::vector&lt;float&gt; &amp; scores, std::vector&lt;int&gt; * selected, int max_detections)'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/detection_postprocess.cc' l='568' u='c' c='_ZN6tflite3ops6custom21detection_postprocess40NonMaxSuppressionMultiClassRegularHelperEP13TfLiteContextP10TfLiteNodePNS2_6OpDataEPKf'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/detection_postprocess.cc' l='702' u='c' c='_ZN6tflite3ops6custom21detection_postprocess37NonMaxSuppressionMultiClassFastHelperEP13TfLiteContextP10TfLiteNodePNS2_6OpDataEPKf'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/kernels/detection_postprocess.cc' l='415'>// NonMaxSuppressionSingleClass() prunes out the box locations with high overlap
// before selecting the highest scoring boxes (max_detections in number)
// It assumes all boxes are good in beginning and sorts based on the scores.
// If lower-scoring box has too much overlap with a higher-scoring box,
// we get rid of the lower-scoring box.
// Complexity is O(N^2) pairwise comparison between boxes</doc>
