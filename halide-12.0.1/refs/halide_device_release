<dec f='halide/build/include/HalideRuntime.h' l='756' type='void halide_device_release(void * user_context, const struct halide_device_interface_t * device_interface)'/>
<doc f='halide/build/include/HalideRuntime.h' l='750'>/** Release all data associated with the given device interface, in
 * particular all resources (memory, texture, context handles)
 * allocated by Halide. Must be called explicitly when using AOT
 * compilation. This is *not* thread-safe with respect to actively
 * running Halide code. Ensure all pipelines are finished before
 * calling this. */</doc>
<dec f='halide/build/include/Halide.h' l='854' type='void halide_device_release(void * user_context, const struct halide_device_interface_t * device_interface)'/>
<doc f='halide/build/include/Halide.h' l='848'>/** Release all data associated with the given device interface, in
 * particular all resources (memory, texture, context handles)
 * allocated by Halide. Must be called explicitly when using AOT
 * compilation. This is *not* thread-safe with respect to actively
 * running Halide code. Ensure all pipelines are finished before
 * calling this. */</doc>
<dec f='halide/src/runtime/HalideRuntime.h' l='756' type='void halide_device_release(void * user_context, const struct halide_device_interface_t * device_interface)'/>
<doc f='halide/src/runtime/HalideRuntime.h' l='750'>/** Release all data associated with the given device interface, in
 * particular all resources (memory, texture, context handles)
 * allocated by Halide. Must be called explicitly when using AOT
 * compilation. This is *not* thread-safe with respect to actively
 * running Halide code. Ensure all pipelines are finished before
 * calling this. */</doc>
<use f='halide/test/generator/acquire_release_aottest.cpp' l='158' u='c' c='_Z8run_testv'/>
<use f='halide/test/generator/gpu_multi_context_threaded_aottest.cpp' l='194' u='c' c='_Z21run_kernels_on_threadib'/>
<use f='halide/test/generator/gpu_multi_context_threaded_aottest.cpp' l='204' u='c' c='_Z21run_kernels_on_threadib'/>
<dec f='halide/build/tutorial/lesson_10_halide.h' l='828' type='void halide_device_release(void * user_context, const struct halide_device_interface_t * device_interface)'/>
<doc f='halide/build/tutorial/lesson_10_halide.h' l='822'>/** Release all data associated with the given device interface, in
 * particular all resources (memory, texture, context handles)
 * allocated by Halide. Must be called explicitly when using AOT
 * compilation. This is *not* thread-safe with respect to actively
 * running Halide code. Ensure all pipelines are finished before
 * calling this. */</doc>
