<dec f='halide/apps/hannk/util/hannk_log.h' l='27' type='void hannk::internal::hannk_log(hannk::LogSeverity severity, const char * msg)'/>
<doc f='halide/apps/hannk/util/hannk_log.h' l='17'>// All logging in hannk is done via this bottleneck;
// this is deliberately put in its own file to allow
// build systems to replace it without weak-linkage
// tricks or other shenanigans. Note that code shouldn&apos;t
// call this directly (it&apos;s meant for internal use by Logger and Checker).
//
// Note that calling with severity doesn&apos;t require the implementation to
// call abort(), although it&apos;s fine to do so if you like.
//
// Note that in the default implementation, all severity values output to stderr, not stdout.</doc>
<use f='halide/apps/hannk/util/error_util.cpp' l='51' u='c' c='_ZN5hannk8internal6Logger6finishEv'/>
<def f='halide/apps/hannk/util/hannk_log_stderr.cpp' l='21' ll='30' type='void hannk::internal::hannk_log(hannk::LogSeverity severity, const char * msg)'/>
<def f='halide/apps/hannk/util/hannk_log_tflite.cpp' l='9' ll='29' type='void hannk::internal::hannk_log(hannk::LogSeverity severity, const char * msg)'/>
