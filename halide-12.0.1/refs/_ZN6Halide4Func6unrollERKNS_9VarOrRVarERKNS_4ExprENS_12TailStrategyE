<dec f='halide/build/include/Halide.h' l='17401' type='Halide::Func &amp; Halide::Func::unroll(const Halide::VarOrRVar &amp; var, const Halide::Expr &amp; factor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<doc f='halide/build/include/Halide.h' l='17397'>/** Split a dimension by the given factor, then unroll the inner
     * dimension. This is how you unroll a loop of unknown size by
     * some constant factor. After this call, var refers to the outer
     * dimension of the split. &apos;factor&apos; must be an integer. */</doc>
<dec f='halide/src/Func.h' l='1521' type='Halide::Func &amp; Halide::Func::unroll(const Halide::VarOrRVar &amp; var, const Halide::Expr &amp; factor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<doc f='halide/src/Func.h' l='1517'>/** Split a dimension by the given factor, then unroll the inner
     * dimension. This is how you unroll a loop of unknown size by
     * some constant factor. After this call, var refers to the outer
     * dimension of the split. &apos;factor&apos; must be an integer. */</doc>
<def f='halide/src/Func.cpp' l='2216' ll='2220' type='Halide::Func &amp; Halide::Func::unroll(const Halide::VarOrRVar &amp; var, const Halide::Expr &amp; factor, Halide::TailStrategy tail = TailStrategy::Auto)'/>
<use f='halide/test/generator/mandelbrot_generator.cpp' l='85' u='c' c='_ZN12_GLOBAL__N_110Mandelbrot8generateEv'/>
<use f='halide/test/generator/memory_profiler_mandelbrot_generator.cpp' l='88' u='c' c='_ZN12_GLOBAL__N_110Mandelbrot8generateEv'/>
