<def f='halide/llvm-install/include/llvm/Analysis/LoopNestAnalysis.h' l='75' ll='87' type='llvm::Loop * llvm::LoopNest::getInnermostLoop() const'/>
<doc f='halide/llvm-install/include/llvm/Analysis/LoopNestAnalysis.h' l='72'>/// Return the innermost loop in the loop nest if the nest has only one
  /// innermost loop, and a nullptr otherwise.
  /// Note: the innermost loop returned is not necessarily perfectly nested.</doc>
