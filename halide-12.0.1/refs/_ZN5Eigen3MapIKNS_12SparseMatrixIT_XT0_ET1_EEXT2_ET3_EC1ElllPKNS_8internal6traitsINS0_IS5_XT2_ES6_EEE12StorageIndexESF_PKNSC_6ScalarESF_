<def f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseMap.h' l='270' ll='273' type='void Eigen::Map&lt;const SparseMatrix&lt;type-parameter-0-0, _Flags, type-parameter-0-2&gt;, Options, type-parameter-0-4&gt;::Map&lt;const SparseMatrix&lt;type-parameter-0-0, _Flags, type-parameter-0-2&gt;, Options, type-parameter-0-4&gt;(Eigen::Index rows, Eigen::Index cols, Eigen::Index nnz, const Eigen::Map&lt;const SparseMatrix&lt;type-parameter-0-0, _Flags, type-parameter-0-2&gt;, Options, type-parameter-0-4&gt;::StorageIndex * outerIndexPtr, const Eigen::Map&lt;const SparseMatrix&lt;type-parameter-0-0, _Flags, type-parameter-0-2&gt;, Options, type-parameter-0-4&gt;::StorageIndex * innerIndexPtr, const Eigen::Map&lt;const SparseMatrix&lt;type-parameter-0-0, _Flags, type-parameter-0-2&gt;, Options, type-parameter-0-4&gt;::Scalar * valuePtr, const Eigen::Map&lt;const SparseMatrix&lt;type-parameter-0-0, _Flags, type-parameter-0-2&gt;, Options, type-parameter-0-4&gt;::StorageIndex * innerNonZerosPtr = 0)'/>
<doc f='halide/build-apps/eigen/Eigen/src/SparseCore/SparseMap.h' l='265'>/** This is the const version of the above constructor.
      *
      * This constructor is available only if \c SparseMatrixType is const, e.g.:
      * \code Map&lt;const SparseMatrix&lt;double&gt; &gt;  \endcode
      */</doc>
