<dec f='halide/halide-install/include/Halide.h' l='22294' type='std::map&lt;std::string, Function&gt; Halide::Internal::find_direct_calls(Halide::Internal::Function f)'/>
<doc f='halide/halide-install/include/Halide.h' l='22288'>/** Construct a map from name to Function definition object for all Halide
 *  functions called directly in the definition of the Function f, including
 *  in update definitions, update index expressions, and RDom extents. This map
 *  _does not_ include the Function f, unless it is called recursively by
 *  itself.
 */</doc>
<dec f='halide/build/include/Halide.h' l='22294' type='std::map&lt;std::string, Function&gt; Halide::Internal::find_direct_calls(Halide::Internal::Function f)'/>
<doc f='halide/build/include/Halide.h' l='22288'>/** Construct a map from name to Function definition object for all Halide
 *  functions called directly in the definition of the Function f, including
 *  in update definitions, update index expressions, and RDom extents. This map
 *  _does not_ include the Function f, unless it is called recursively by
 *  itself.
 */</doc>
<dec f='halide/src/FindCalls.h' l='25' type='std::map&lt;std::string, Function&gt; Halide::Internal::find_direct_calls(Halide::Internal::Function f)'/>
<doc f='halide/src/FindCalls.h' l='19'>/** Construct a map from name to Function definition object for all Halide
 *  functions called directly in the definition of the Function f, including
 *  in update definitions, update index expressions, and RDom extents. This map
 *  _does not_ include the Function f, unless it is called recursively by
 *  itself.
 */</doc>
<def f='halide/src/FindCalls.cpp' l='94' ll='98' type='map&lt;std::string, Halide::Internal::Function&gt; Halide::Internal::find_direct_calls(Halide::Internal::Function f)'/>
<use f='halide/src/RealizationOrder.cpp' l='310' u='c' c='_ZN6Halide8Internal17realization_orderERKSt6vectorINS0_8FunctionESaIS2_EERSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES2_St4lessISD_ESaISt4pairIKSD_S2_EEE'/>
<use f='halide/src/RealizationOrder.cpp' l='369' u='c' c='_ZN6Halide8Internal17topological_orderERKSt6vectorINS0_8FunctionESaIS2_EERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES2_St4lessISD_ESaISt4pairIKSD_S2_EEE'/>
<use f='halide/src/RegionCosts.cpp' l='696' u='c' c='_ZN6Halide8Internal11RegionCosts16region_footprintERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_3BoxESt4lessIS8_ESaISt4pairIKS8_S94510298'/>
<use f='halide/src/RegionCosts.cpp' l='735' u='c' c='_ZN6Halide8Internal11RegionCosts16region_footprintERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_3BoxESt4lessIS8_ESaISt4pairIKS8_S94510298'/>
<use f='halide/src/WrapCalls.cpp' l='54' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_123validate_custom_wrapperERKNS0_8FunctionES4_S4_'/>
