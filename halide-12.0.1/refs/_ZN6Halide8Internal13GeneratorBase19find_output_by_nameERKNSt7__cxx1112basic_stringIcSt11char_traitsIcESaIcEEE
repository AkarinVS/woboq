<dec f='halide/build/include/Halide.h' l='26261' type='Internal::GeneratorOutputBase * Halide::Internal::GeneratorBase::find_output_by_name(const std::string &amp; name)'/>
<dec f='halide/src/Generator.h' l='3327' type='Internal::GeneratorOutputBase * Halide::Internal::GeneratorBase::find_output_by_name(const std::string &amp; name)'/>
<use f='halide/src/Generator.cpp' l='1230' u='c' c='_ZN6Halide8Internal13GeneratorBase11get_outputsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<def f='halide/src/Generator.cpp' l='1240' ll='1250' type='Halide::Internal::GeneratorOutputBase * Halide::Internal::GeneratorBase::find_output_by_name(const std::string &amp; name)'/>
<doc f='halide/src/Generator.cpp' l='1239'>// Find output by name. If not found, assert-fail. Never returns null.</doc>
