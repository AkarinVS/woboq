<dec f='halide/halide-install/include/Halide.h' l='3014' type='void Halide::Internal::dir_rmdir(const std::string &amp; name)'/>
<doc f='halide/halide-install/include/Halide.h' l='3013'>/** Wrapper for rmdir(). Asserts upon error. */</doc>
<dec f='halide/build/include/Halide.h' l='3014' type='void Halide::Internal::dir_rmdir(const std::string &amp; name)'/>
<doc f='halide/build/include/Halide.h' l='3013'>/** Wrapper for rmdir(). Asserts upon error. */</doc>
<dec f='halide/src/Util.h' l='262' type='void Halide::Internal::dir_rmdir(const std::string &amp; name)'/>
<doc f='halide/src/Util.h' l='261'>/** Wrapper for rmdir(). Asserts upon error. */</doc>
<use f='halide/src/Module.cpp' l='77' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_122TemporaryObjectFileDirD1Ev'/>
<def f='halide/src/Util.cpp' l='326' ll='335' type='void Halide::Internal::dir_rmdir(const std::string &amp; name)'/>
