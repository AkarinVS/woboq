<dec f='halide/build/_deps/pybind11-src/include/pybind11/cast.h' l='92' type='std::pair&lt;decltype(internals::registered_types_py)::iterator, bool&gt; pybind11::detail::all_type_info_get_cache(PyTypeObject * type)'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/cast.h' l='151' u='c' c='_ZN8pybind116detail13all_type_infoEP11_typeobject'/>
<def f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='1861' ll='1878' type='std::pair&lt;decltype(internals::registered_types_py)::iterator, bool&gt; pybind11::detail::all_type_info_get_cache(PyTypeObject * type)'/>
<doc f='halide/build/_deps/pybind11-src/include/pybind11/cast.h' l='89'>// Gets the cache entry for the given type, creating it if necessary.  The return value is the pair
// returned by emplace, i.e. an iterator for the entry and a bool set to `true` if the entry was
// just created.</doc>
