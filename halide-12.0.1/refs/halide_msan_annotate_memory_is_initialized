<dec f='halide/build/include/HalideRuntime.h' l='973' type='int halide_msan_annotate_memory_is_initialized(void * user_context, const void * ptr, uint64_t len)'/>
<doc f='halide/build/include/HalideRuntime.h' l='966'>/** Annotate that a given range of memory has been initialized;
 * only used when Target::MSAN is enabled.
 *
 * The default implementation simply calls the LLVM-provided __msan_unpoison() function.
 *
 * The return value should always be zero.
 */</doc>
<dec f='halide/build/include/Halide.h' l='1071' type='int halide_msan_annotate_memory_is_initialized(void * user_context, const void * ptr, uint64_t len)'/>
<doc f='halide/build/include/Halide.h' l='1064'>/** Annotate that a given range of memory has been initialized;
 * only used when Target::MSAN is enabled.
 *
 * The default implementation simply calls the LLVM-provided __msan_unpoison() function.
 *
 * The return value should always be zero.
 */</doc>
<dec f='halide/src/runtime/HalideRuntime.h' l='973' type='int halide_msan_annotate_memory_is_initialized(void * user_context, const void * ptr, uint64_t len)'/>
<doc f='halide/src/runtime/HalideRuntime.h' l='966'>/** Annotate that a given range of memory has been initialized;
 * only used when Target::MSAN is enabled.
 *
 * The default implementation simply calls the LLVM-provided __msan_unpoison() function.
 *
 * The return value should always be zero.
 */</doc>
<def f='halide/test/generator/msan_aottest.cpp' l='176' ll='250' type='int halide_msan_annotate_memory_is_initialized(void * user_context, const void * ptr, uint64_t len)'/>
<dec f='halide/build/tutorial/lesson_10_halide.h' l='1045' type='int halide_msan_annotate_memory_is_initialized(void * user_context, const void * ptr, uint64_t len)'/>
<doc f='halide/build/tutorial/lesson_10_halide.h' l='1038'>/** Annotate that a given range of memory has been initialized;
 * only used when Target::MSAN is enabled.
 *
 * The default implementation simply calls the LLVM-provided __msan_unpoison() function.
 *
 * The return value should always be zero.
 */</doc>
