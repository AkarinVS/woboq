<dec f='halide/build-apps/abseil-cpp/absl/base/internal/raw_logging.h' l='113' type='void absl::lts_2020_02_25::raw_logging_internal::SafeWriteToStderr(const char * s, size_t len)'/>
<doc f='halide/build-apps/abseil-cpp/absl/base/internal/raw_logging.h' l='108'>// Writes the provided buffer directly to stderr, in a safe, low-level manner.
//
// In POSIX this means calling write(), which is async-signal safe and does
// not malloc.  If the platform supports the SYS_write syscall, we invoke that
// directly to side-step any libc interception.</doc>
<use f='halide/build-apps/abseil-cpp/absl/base/internal/raw_logging.cc' l='169' u='c' c='_ZN12_GLOBAL__N_18RawLogVAEN4absl14lts_2020_02_2511LogSeverityEPKciS4_P13__va_list_tag'/>
<def f='halide/build-apps/abseil-cpp/absl/base/internal/raw_logging.cc' l='189' ll='201' type='void absl::lts_2020_02_25::raw_logging_internal::SafeWriteToStderr(const char * s, size_t len)'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/failure_signal_handler.cc' l='219' u='c' c='_ZN4absl14lts_2020_02_25L13WriteToStderrEPKc'/>
