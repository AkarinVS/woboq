<dec f='halide/halide-install/include/Halide.h' l='2898' type='std::string Halide::Internal::unique_name(char prefix)'/>
<doc f='halide/halide-install/include/Halide.h' l='2881'>/** Generate a unique name starting with the given prefix. It&apos;s unique
 * relative to all other strings returned by unique_name in this
 * process.
 *
 * The single-character version always appends a numeric suffix to the
 * character.
 *
 * The string version will either return the input as-is (with high
 * probability on the first time it is called with that input), or
 * replace any existing &apos;$&apos; characters with underscores, then add a
 * &apos;$&apos; sign and a numeric suffix to it.
 *
 * Note that unique_name(&apos;f&apos;) therefore differs from
 * unique_name(&quot;f&quot;). The former returns something like f123, and the
 * latter returns either f or f$123.
 */
// @{</doc>
<dec f='halide/build/include/Halide.h' l='2898' type='std::string Halide::Internal::unique_name(char prefix)'/>
<doc f='halide/build/include/Halide.h' l='2881'>/** Generate a unique name starting with the given prefix. It&apos;s unique
 * relative to all other strings returned by unique_name in this
 * process.
 *
 * The single-character version always appends a numeric suffix to the
 * character.
 *
 * The string version will either return the input as-is (with high
 * probability on the first time it is called with that input), or
 * replace any existing &apos;$&apos; characters with underscores, then add a
 * &apos;$&apos; sign and a numeric suffix to it.
 *
 * Note that unique_name(&apos;f&apos;) therefore differs from
 * unique_name(&quot;f&quot;). The former returns something like f123, and the
 * latter returns either f or f$123.
 */
// @{</doc>
<use f='halide/python_bindings/src/PyLambda.cpp' l='12' u='c' c='_ZN6Halide14PythonBindings13define_lambdaERN8pybind117module_E'/>
<dec f='halide/src/Util.h' l='146' type='std::string Halide::Internal::unique_name(char prefix)'/>
<use f='halide/src/AddAtomicMutex.cpp' l='416' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_114AddAtomicMutex5visitEPKNS0_6AtomicE'/>
<doc f='halide/src/Util.h' l='129'>/** Generate a unique name starting with the given prefix. It&apos;s unique
 * relative to all other strings returned by unique_name in this
 * process.
 *
 * The single-character version always appends a numeric suffix to the
 * character.
 *
 * The string version will either return the input as-is (with high
 * probability on the first time it is called with that input), or
 * replace any existing &apos;$&apos; characters with underscores, then add a
 * &apos;$&apos; sign and a numeric suffix to it.
 *
 * Note that unique_name(&apos;f&apos;) therefore differs from
 * unique_name(&quot;f&quot;). The former returns something like f123, and the
 * latter returns either f or f$123.
 */
// @{</doc>
<use f='halide/src/AsyncProducers.cpp' l='176' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_120GenerateProducerBody5visitEPKNS0_7AcquireE'/>
<use f='halide/src/Bounds.cpp' l='999' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_6SelectE'/>
<use f='halide/src/Bounds.cpp' l='1005' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_6SelectE'/>
<use f='halide/src/Bounds.cpp' l='1010' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_6SelectE'/>
<use f='halide/src/Bounds.cpp' l='1010' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_6SelectE'/>
<use f='halide/src/Bounds.cpp' l='1029' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_6SelectE'/>
<use f='halide/src/Bounds.cpp' l='1035' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_6SelectE'/>
<use f='halide/src/Bounds.cpp' l='1040' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_6SelectE'/>
<use f='halide/src/Bounds.cpp' l='1040' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_6SelectE'/>
<use f='halide/src/Bounds.cpp' l='1069' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_4RampE'/>
<use f='halide/src/Bounds.cpp' l='2221' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_112BoxesTouched9visit_letEPKT_'/>
<use f='halide/src/Bounds.cpp' l='2222' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_112BoxesTouched9visit_letEPKT_'/>
<use f='halide/src/Bounds.cpp' l='2379' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_112BoxesTouched15trim_scope_pushERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS0_8IntervalERSt6vectorINS2_8LetBoundESaISF_EE'/>
<use f='halide/src/Bounds.cpp' l='2380' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_112BoxesTouched15trim_scope_pushERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS0_8IntervalERSt6vectorINS2_8LetBoundESaISF_EE'/>
<use f='halide/src/BoundsInference.cpp' l='763' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_115BoundsInference5Stage15do_bounds_queryENS0_4StmtERKSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4le2469220'/>
<use f='halide/src/CSE.cpp' l='301' u='c' c='_ZN6Halide8Internal32common_subexpression_eliminationERKNS_4ExprEb'/>
<use f='halide/src/CodeGen_ARM.cpp' l='1243' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_111CodeGen_ARM21codegen_vector_reduceEPKNS0_12VectorReduceERKNS_4ExprE'/>
<use f='halide/src/CodeGen_C.cpp' l='1776' u='c' c='_ZN6Halide8Internal9CodeGen_C16print_assignmentENS_4TypeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='halide/src/CodeGen_C.cpp' l='2076' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2117' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2124' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2148' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2181' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2231' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2244' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2245' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_C.cpp' l='2306' u='c' c='_ZN6Halide8Internal9CodeGen_C21print_scalarized_exprB5cxx11ERKNS_4ExprE'/>
<use f='halide/src/CodeGen_C.cpp' l='2897' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_7ShuffleE'/>
<use f='halide/src/CodeGen_D3D12Compute_Dev.cpp' l='636' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_124CodeGen_D3D12Compute_Dev22CodeGen_D3D12Compute_C5visitEPKNS0_4LoadE'/>
<use f='halide/src/CodeGen_Hexagon.cpp' l='331' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_131SloppyUnpredicateLoadsAndStores5visitEPKNS0_5StoreE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='1577' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_3MinE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='1578' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_3MinE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='1597' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_3MaxE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='1598' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_3MaxE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='2658' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='2665' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='2666' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_4CallE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='3789' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM17do_parallel_tasksERKSt6vectorINS1_12ParallelTaskESaIS3_EE'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='3790' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM17do_parallel_tasksERKSt6vectorINS1_12ParallelTaskESaIS3_EE'/>
<use f='halide/src/CodeGen_Metal_Dev.cpp' l='177' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_117CodeGen_Metal_Dev15CodeGen_Metal_C17print_reinterpretB5cxx11ENS_4TypeERKNS_4ExprE'/>
<use f='halide/src/CodeGen_Metal_Dev.cpp' l='401' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_117CodeGen_Metal_Dev15CodeGen_Metal_C5visitEPKNS0_4LoadE'/>
<use f='halide/src/CodeGen_OpenCL_Dev.cpp' l='527' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118CodeGen_OpenCL_Dev16CodeGen_OpenCL_C5visitEPKNS0_4LoadE'/>
<use f='halide/src/CodeGen_OpenCL_Dev.cpp' l='823' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118CodeGen_OpenCL_Dev16CodeGen_OpenCL_C5visitEPKNS0_7ShuffleE'/>
<use f='halide/src/CodeGen_OpenCL_Dev.cpp' l='839' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118CodeGen_OpenCL_Dev16CodeGen_OpenCL_C5visitEPKNS0_7ShuffleE'/>
<use f='halide/src/Function.cpp' l='451' u='c' c='_ZN6Halide8Internal8Function6defineERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EES2_INS_4ExprESaISD_EE'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='398' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_131ExtractSharedAndHeapAllocations5visitEPKNS0_3ForE'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='973' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_131ExtractSharedAndHeapAllocations20rewrap_kernel_launchENS0_4StmtERKNS1_16ExtractBlockSizeENS_9DeviceAPIE'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='1029' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_131ExtractSharedAndHeapAllocationsC1ENS_9DeviceAPIE'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='1030' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_131ExtractSharedAndHeapAllocationsC1ENS_9DeviceAPIE'/>
<use f='halide/src/IROperator.cpp' l='913' u='c' c='_ZNK6Halide8Internal13BufferBuilder5buildEv'/>
<use f='halide/src/InlineReductions.cpp' l='69' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_112FindFreeVars5visitEPKNS0_8VariableE'/>
<use f='halide/src/LICM.cpp' l='165' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118LiftLoopInvariants6mutateERKNS_4ExprE'/>
<use f='halide/src/Lambda.cpp' l='6' u='c' c='_ZN6Halide6lambdaERKNS_4ExprE'/>
<use f='halide/src/Lambda.cpp' l='12' u='c' c='_ZN6Halide6lambdaERKNS_3VarERKNS_4ExprE'/>
<use f='halide/src/Lambda.cpp' l='18' u='c' c='_ZN6Halide6lambdaERKNS_3VarES2_RKNS_4ExprE'/>
<use f='halide/src/Lambda.cpp' l='24' u='c' c='_ZN6Halide6lambdaERKNS_3VarES2_S2_RKNS_4ExprE'/>
<use f='halide/src/Lambda.cpp' l='30' u='c' c='_ZN6Halide6lambdaERKNS_3VarES2_S2_S2_RKNS_4ExprE'/>
<use f='halide/src/Lambda.cpp' l='36' u='c' c='_ZN6Halide6lambdaERKNS_3VarES2_S2_S2_S2_RKNS_4ExprE'/>
<use f='halide/src/LoopCarry.cpp' l='399' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_117LoopCarryOverLoop31lift_carried_values_out_of_stmtERKNS0_4StmtE'/>
<use f='halide/src/LoopCarry.cpp' l='432' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_117LoopCarryOverLoop31lift_carried_values_out_of_stmtERKNS0_4StmtE'/>
<use f='halide/src/LowerWarpShuffles.cpp' l='668' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_133HoistWarpShufflesFromSingleIfStmt5visitEPKNS0_4CallE'/>
<use f='halide/src/LowerWarpShuffles.cpp' l='776' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_117HoistWarpShuffles5visitEPKNS0_10IfThenElseE'/>
<use f='halide/src/Monotonic.cpp' l='463' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116DerivativeBounds5visitEPKNS0_4RampE'/>
<use f='halide/src/Parameter.cpp' l='78' u='c' c='_ZN6Halide8Internal9ParameterC1ERKNS_4TypeEbi'/>
<use f='halide/src/PartitionLoops.cpp' l='827' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_119RenormalizeGPULoops5visitEPKNS0_7LetStmtE'/>
<use f='halide/src/PartitionLoops.cpp' l='898' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_119RenormalizeGPULoops5visitEPKNS0_10IfThenElseE'/>
<use f='halide/src/PartitionLoops.cpp' l='949' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_113ExpandSelects5visitEPKNS0_6SelectE'/>
<use f='halide/src/PartitionLoops.cpp' l='958' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_113ExpandSelects5visitEPKNS0_6SelectE'/>
<use f='halide/src/Pipeline.cpp' l='633' u='c' c='_ZN6Halide8Pipeline11compile_jitERKNS_6TargetE'/>
<use f='halide/src/Pipeline.cpp' l='635' u='c' c='_ZN6Halide8Pipeline11compile_jitERKNS_6TargetE'/>
<use f='halide/src/RDom.cpp' l='185' u='c' c='_ZN6Halide4RDomC1ERKNS_6BufferIvEE'/>
<use f='halide/src/Random.cpp' l='74' u='c' c='_ZN6Halide8Internal10random_intERKSt6vectorINS_4ExprESaIS2_EE'/>
<use f='halide/src/ScheduleFunctions.cpp' l='668' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_120build_extern_produceERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_8FunctionESt4lessIS8_ESaISt4p3160138'/>
<use f='halide/src/ScheduleFunctions.cpp' l='698' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_120build_extern_produceERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_8FunctionESt4lessIS8_ESaISt4p3160138'/>
<use f='halide/src/Simplify_Stmts.cpp' l='542' u='c' c='_ZN6Halide8Internal8Simplify5visitEPKNS0_5BlockE'/>
<use f='halide/src/SlidingWindow.cpp' l='402' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_130SlidingWindowOnFunctionAndLoop5visitEPKNS0_16ProducerConsumerE'/>
<use f='halide/src/Solve.cpp' l='986' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116SolveForInterval5visitEPKNS0_2LEE'/>
<use f='halide/src/Solve.cpp' l='987' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116SolveForInterval5visitEPKNS0_2LEE'/>
<use f='halide/src/Solve.cpp' l='1043' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116SolveForInterval5visitEPKNS0_2GEE'/>
<use f='halide/src/Solve.cpp' l='1044' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116SolveForInterval5visitEPKNS0_2GEE'/>
<use f='halide/src/Solve.cpp' l='1412' u='c' c='_ZN6Halide8Internal10solve_testEv'/>
<use f='halide/src/Solve.cpp' l='1413' u='c' c='_ZN6Halide8Internal10solve_testEv'/>
<use f='halide/src/SplitTuples.cpp' l='487' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118SplitScatterGather5visitEPKNS0_7ProvideE'/>
<use f='halide/src/SplitTuples.cpp' l='495' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118SplitScatterGather5visitEPKNS0_7ProvideE'/>
<use f='halide/src/StorageFolding.cpp' l='193' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118InjectFoldingCheck5visitEPKNS0_16ProducerConsumerE'/>
<use f='halide/src/StorageFolding.cpp' l='269' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_118InjectFoldingCheck5visitEPKNS0_16ProducerConsumerE'/>
<use f='halide/src/StorageFolding.cpp' l='566' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_131AttemptStorageFoldingOfFunction5visitEPKNS0_3ForE'/>
<use f='halide/src/StorageFolding.cpp' l='664' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_131AttemptStorageFoldingOfFunction5visitEPKNS0_3ForE'/>
<use f='halide/src/StorageFolding.cpp' l='668' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_131AttemptStorageFoldingOfFunction5visitEPKNS0_3ForE'/>
<use f='halide/src/StorageFolding.cpp' l='822' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_131AttemptStorageFoldingOfFunction5visitEPKNS0_3ForE'/>
<use f='halide/src/StorageFolding.cpp' l='824' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_131AttemptStorageFoldingOfFunction5visitEPKNS0_3ForE'/>
<use f='halide/src/Tracing.cpp' l='147' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_113InjectTracing5visitEPKNS0_4CallE'/>
<use f='halide/src/Tracing.cpp' l='193' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_113InjectTracing5visitEPKNS0_7ProvideE'/>
<use f='halide/src/Tracing.cpp' l='213' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_113InjectTracing5visitEPKNS0_7ProvideE'/>
<def f='halide/src/Util.cpp' l='163' ll='168' type='std::string Halide::Internal::unique_name(char prefix)'/>
<use f='halide/src/Util.cpp' l='254' u='c' c='_ZN6Halide8Internal16make_entity_nameEPvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEc'/>
<doc f='halide/src/Util.cpp' l='155'>// There are three possible families of names returned by the methods below:
// 1) char pattern: (char that isn&apos;t &apos;$&apos;) + number (e.g. v234)
// 2) string pattern: (string without &apos;$&apos;) + &apos;$&apos; + number (e.g. fr#nk82$42)
// 3) a string that does not match the patterns above
// There are no collisions within each family, due to the unique_count
// done above, and there can be no collisions across families by
// construction.</doc>
<use f='halide/src/VectorizeLoops.cpp' l='1507' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_142LiftVectorizableExprsOutOfSingleAtomicNode6mutateERKNS_4ExprE'/>
