<inh f='halide/llvm-install/include/llvm/Pass.h' l='298' c='llvm::FunctionPass'/>
<def f='halide/llvm-install/include/llvm/Analysis/OptimizationRemarkEmitter.h' l='138' ll='154'/>
<size>40</size>
<doc f='halide/llvm-install/include/llvm/Analysis/OptimizationRemarkEmitter.h' l='133'>/// OptimizationRemarkEmitter legacy analysis pass
///
/// Note that this pass shouldn&apos;t generally be marked as preserved by other
/// passes.  It&apos;s holding onto BFI, so if the pass does not preserve BFI, BFI
/// could be freed.</doc>
<mbr r='llvm::OptimizationRemarkEmitterWrapperPass::ORE' o='256' t='std::unique_ptr&lt;OptimizationRemarkEmitter&gt;'/>
<fun r='_ZN4llvm36OptimizationRemarkEmitterWrapperPassC1Ev'/>
<fun r='_ZN4llvm36OptimizationRemarkEmitterWrapperPass13runOnFunctionERNS_8FunctionE'/>
<fun r='_ZNK4llvm36OptimizationRemarkEmitterWrapperPass16getAnalysisUsageERNS_13AnalysisUsageE'/>
<fun r='_ZN4llvm36OptimizationRemarkEmitterWrapperPass6getOREEv'/>
<smbr r='llvm::OptimizationRemarkEmitterWrapperPass::ID' t='char'/>
