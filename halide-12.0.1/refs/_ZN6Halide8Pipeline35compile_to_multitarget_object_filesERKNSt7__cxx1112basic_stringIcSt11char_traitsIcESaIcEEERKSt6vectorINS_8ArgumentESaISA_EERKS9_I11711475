<dec f='halide/build/include/Halide.h' l='14985' type='void Halide::Pipeline::compile_to_multitarget_object_files(const std::string &amp; filename_prefix, const std::vector&lt;Argument&gt; &amp; args, const std::vector&lt;Target&gt; &amp; targets, const std::vector&lt;std::string&gt; &amp; suffixes)'/>
<doc f='halide/build/include/Halide.h' l='14972'>/** Like compile_to_multitarget_static_library(), except that the object files
     * are all output as object files (rather than bundled into a static library).
     *
     * `suffixes` is an optional list of strings to use for as the suffix for each object
     * file. If nonempty, it must be the same length as `targets`. (If empty, Target::to_string()
     * will be used for each suffix.)
     *
     * Note that if `targets.size()` &gt; 1, the wrapper code (to select the subtarget)
     * will be generated with the filename `${filename_prefix}_wrapper.o`
     *
     * Note that if `targets.size()` &gt; 1 and `no_runtime` is not specified, the runtime
     * will be generated with the filename `${filename_prefix}_runtime.o`
     */</doc>
<use f='halide/python_bindings/src/PyPipeline.cpp' l='89' u='a' c='_ZN6Halide14PythonBindings15define_pipelineERN8pybind117module_E'/>
<dec f='halide/src/Pipeline.h' l='329' type='void Halide::Pipeline::compile_to_multitarget_object_files(const std::string &amp; filename_prefix, const std::vector&lt;Argument&gt; &amp; args, const std::vector&lt;Target&gt; &amp; targets, const std::vector&lt;std::string&gt; &amp; suffixes)'/>
<doc f='halide/src/Pipeline.h' l='316'>/** Like compile_to_multitarget_static_library(), except that the object files
     * are all output as object files (rather than bundled into a static library).
     *
     * `suffixes` is an optional list of strings to use for as the suffix for each object
     * file. If nonempty, it must be the same length as `targets`. (If empty, Target::to_string()
     * will be used for each suffix.)
     *
     * Note that if `targets.size()` &gt; 1, the wrapper code (to select the subtarget)
     * will be generated with the filename `${filename_prefix}_wrapper.o`
     *
     * Note that if `targets.size()` &gt; 1 and `no_runtime` is not specified, the runtime
     * will be generated with the filename `${filename_prefix}_runtime.o`
     */</doc>
<use f='halide/src/Func.cpp' l='3249' u='c' c='_ZN6Halide4Func35compile_to_multitarget_object_filesERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_8ArgumentESaISA_EERKS9_INS_68206858'/>
<def f='halide/src/Pipeline.cpp' l='345' ll='354' type='void Halide::Pipeline::compile_to_multitarget_object_files(const std::string &amp; filename_prefix, const std::vector&lt;Argument&gt; &amp; args, const std::vector&lt;Target&gt; &amp; targets, const std::vector&lt;std::string&gt; &amp; suffixes)'/>
