<dec f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.h' l='236' type='void absl::lts_2020_02_25::Mutex::ReaderUnlock()'/>
<use f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.h' l='571' u='c' c='_ZN4absl14lts_2020_02_2515ReaderMutexLockD1Ev'/>
<doc f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.h' l='231'>// Mutex::ReaderUnlock()
  //
  // Releases a read share of this `Mutex`. `ReaderUnlock` may return a mutex to
  // the free state if this thread holds the last reader lock on the mutex. Note
  // that you cannot call `ReaderUnlock()` on a mutex held in write mode.</doc>
<def f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='1716' ll='1733' type='void absl::lts_2020_02_25::Mutex::ReaderUnlock()'/>
