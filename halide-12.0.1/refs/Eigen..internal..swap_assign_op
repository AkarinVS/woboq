<def f='halide/build-apps/eigen/Eigen/src/Core/functors/AssignmentFunctors.h' l='142' ll='155'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/functors/AssignmentFunctors.h' l='157'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/DenseBase.h' l='424' c='_ZN5Eigen9DenseBase4swapERKNS_9DenseBaseITL0__EE'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/DenseBase.h' l='435' c='_ZN5Eigen9DenseBase4swapERNS_15PlainObjectBaseITL0__EE'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/Swap.h' l='19'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/Swap.h' l='20'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/Swap.h' l='23'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/Swap.h' l='31'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='534' c='_ZN5Eigen18TriangularViewImplIT_XT0_ENS_5DenseEE4swapERKNS_14TriangularBaseITL0__EE'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/TriangularMatrix.h' l='544' c='_ZN5Eigen18TriangularViewImplIT_XT0_ENS_5DenseEE4swapERKNS_10MatrixBaseITL0__EE'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/functors/AssignmentFunctors.h' l='127'>/** \internal
  * \brief Template functor for scalar/packet assignment with swapping
  *
  * It works as follow. For a non-vectorized evaluation loop, we have:
  *   for(i) func(A.coeffRef(i), B.coeff(i));
  * where B is a SwapWrapper expression. The trick is to make SwapWrapper::coeff behaves like a non-const coeffRef.
  * Actually, SwapWrapper might not even be needed since even if B is a plain expression, since it has to be writable
  * B.coeff already returns a const reference to the underlying scalar value.
  * 
  * The case of a vectorized loop is more tricky:
  *   for(i,j) func.assignPacket&lt;A_Align&gt;(&amp;A.coeffRef(i,j), B.packet&lt;B_Align&gt;(i,j));
  * Here, B must be a SwapWrapper whose packet function actually returns a proxy object holding a Scalar*,
  * the actual alignment and Packet type.
  *
  */</doc>
<fun r='_ZN5Eigen8internal14swap_assign_opC1Ev'/>
<fun r='_ZN5Eigen8internal14swap_assign_opC1ERKNS0_14swap_assign_opIT_EE'/>
<fun r='_ZNK5Eigen8internal14swap_assign_op11assignCoeffERT_RKS2_'/>
