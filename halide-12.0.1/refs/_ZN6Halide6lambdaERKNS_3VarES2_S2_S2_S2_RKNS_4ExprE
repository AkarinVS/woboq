<dec f='halide/halide-install/include/Halide.h' l='18491' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Var &amp; z, const Halide::Var &amp; w, const Halide::Var &amp; v, const Halide::Expr &amp; e)'/>
<doc f='halide/halide-install/include/Halide.h' l='18487'>/** Create a 5-D halide function in the first five arguments that
 * returns the last argument. The function may have more dimensions if
 * the expression contains implicit arguments and the list of Var
 * arguments contains a placeholder (&quot;_&quot;). */</doc>
<dec f='halide/build/include/Halide.h' l='18491' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Var &amp; z, const Halide::Var &amp; w, const Halide::Var &amp; v, const Halide::Expr &amp; e)'/>
<doc f='halide/build/include/Halide.h' l='18487'>/** Create a 5-D halide function in the first five arguments that
 * returns the last argument. The function may have more dimensions if
 * the expression contains implicit arguments and the list of Var
 * arguments contains a placeholder (&quot;_&quot;). */</doc>
<dec f='halide/src/Lambda.h' l='46' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Var &amp; z, const Halide::Var &amp; w, const Halide::Var &amp; v, const Halide::Expr &amp; e)'/>
<doc f='halide/src/Lambda.h' l='42'>/** Create a 5-D halide function in the first five arguments that
 * returns the last argument. The function may have more dimensions if
 * the expression contains implicit arguments and the list of Var
 * arguments contains a placeholder (&quot;_&quot;). */</doc>
<def f='halide/src/Lambda.cpp' l='35' ll='39' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Var &amp; z, const Halide::Var &amp; w, const Halide::Var &amp; v, const Halide::Expr &amp; e)'/>
