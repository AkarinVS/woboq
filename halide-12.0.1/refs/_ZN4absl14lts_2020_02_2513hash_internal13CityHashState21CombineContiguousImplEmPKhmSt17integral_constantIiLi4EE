<dec f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='782' type='static uint64_t absl::lts_2020_02_25::hash_internal::CityHashState::CombineContiguousImpl(uint64_t state, const unsigned char * first, size_t len, std::integral_constant&lt;int, 4&gt; )'/>
<def f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='861' ll='881' type='static uint64_t absl::lts_2020_02_25::hash_internal::CityHashState::CombineContiguousImpl(uint64_t state, const unsigned char * first, size_t len, std::integral_constant&lt;int, 4&gt; )'/>
<use f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.cc' l='32' u='c' c='_ZN4absl14lts_2020_02_2513hash_internal13CityHashState28CombineLargeContiguousImpl32EmPKhm'/>
<doc f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='778'>// Implementation of the base case for combine_contiguous where we actually
  // mix the bytes into the state.
  // Dispatch to different implementations of the combine_contiguous depending
  // on the value of `sizeof(size_t)`.</doc>
<doc f='halide/build-apps/abseil-cpp/absl/hash/internal/hash.h' l='860'>// CityHashState::CombineContiguousImpl()</doc>
