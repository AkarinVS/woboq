<dec f='halide/build/include/Halide.h' l='13431' type='static void Halide::Internal::JITSharedRuntime::init_jit_user_context(Halide::Internal::JITUserContext &amp; jit_user_context, void * user_context, const Halide::Internal::JITHandlers &amp; handlers)'/>
<dec f='halide/src/JITModule.h' l='164' type='static void Halide::Internal::JITSharedRuntime::init_jit_user_context(Halide::Internal::JITUserContext &amp; jit_user_context, void * user_context, const Halide::Internal::JITHandlers &amp; handlers)'/>
<def f='halide/src/JITModule.cpp' l='893' ll='898' type='static void Halide::Internal::JITSharedRuntime::init_jit_user_context(Halide::Internal::JITUserContext &amp; jit_user_context, void * user_context, const Halide::Internal::JITHandlers &amp; handlers)'/>
<doc f='halide/src/JITModule.cpp' l='888'>// TODO: Either remove user_context argument figure out how to make
// caller provided user context work with JIT. (At present, this
// cascaded handler calls cannot work with the right context as
// JITModule needs its context to be passed in case the called handler
// calls another callback which is not overriden by the caller.)</doc>
<use f='halide/src/Pipeline.cpp' l='865' u='c' c='_ZN6Halide12_GLOBAL__N_118JITFuncCallContextC1ERKNS_8Internal11JITHandlersE'/>
