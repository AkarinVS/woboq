<dec f='halide/build/include/Halide.h' l='2651' type='void Halide::bfloat16_t::bfloat16_t(float value)'/>
<doc f='halide/build/include/Halide.h' l='2646'>/** Construct from a float, double, or int using
     * round-to-nearest-ties-to-even. Out-of-range values become +/-
     * infinity.
     */
    // @{</doc>
<dec f='halide/src/Float16.h' l='159' type='void Halide::bfloat16_t::bfloat16_t(float value)'/>
<doc f='halide/src/Float16.h' l='154'>/** Construct from a float, double, or int using
     * round-to-nearest-ties-to-even. Out-of-range values become +/-
     * infinity.
     */
    // @{</doc>
<def f='halide/src/Float16.cpp' l='460' ll='462' type='void Halide::bfloat16_t::bfloat16_t(float value)'/>
<use f='halide/src/Float16.cpp' l='511' u='c' c='_ZNK6Halide10bfloat16_tngEv'/>
<use f='halide/src/Float16.cpp' l='515' u='c' c='_ZNK6Halide10bfloat16_tplES0_'/>
<use f='halide/src/Float16.cpp' l='519' u='c' c='_ZNK6Halide10bfloat16_tmiES0_'/>
<use f='halide/src/Float16.cpp' l='523' u='c' c='_ZNK6Halide10bfloat16_tmlES0_'/>
<use f='halide/src/Float16.cpp' l='527' u='c' c='_ZNK6Halide10bfloat16_tdvES0_'/>
<use f='halide/src/Type.cpp' l='141' u='c' c='_ZNK6Halide4Type13can_representEl'/>
<use f='halide/src/Type.cpp' l='169' u='c' c='_ZNK6Halide4Type13can_representEm'/>
