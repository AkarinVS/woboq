<dec f='halide/halide-install/include/Halide.h' l='7784' type='Halide::Expr Halide::fast_log(const Halide::Expr &amp; x)'/>
<doc f='halide/halide-install/include/Halide.h' l='7781'>/** Fast approximate cleanly vectorizable log for Float(32). Returns
 * nonsense for x &lt;= 0.0f. Accurate up to the last 5 bits of the
 * mantissa. Vectorizes cleanly. */</doc>
<dec f='halide/build/include/Halide.h' l='7784' type='Halide::Expr Halide::fast_log(const Halide::Expr &amp; x)'/>
<doc f='halide/build/include/Halide.h' l='7781'>/** Fast approximate cleanly vectorizable log for Float(32). Returns
 * nonsense for x &lt;= 0.0f. Accurate up to the last 5 bits of the
 * mantissa. Vectorizes cleanly. */</doc>
<use f='halide/python_bindings/src/PyIROperator.cpp' l='136' u='a' c='_ZN6Halide14PythonBindings16define_operatorsERN8pybind117module_E'/>
<dec f='halide/src/IROperator.h' l='979' type='Halide::Expr Halide::fast_log(const Halide::Expr &amp; x)'/>
<doc f='halide/src/IROperator.h' l='976'>/** Fast approximate cleanly vectorizable log for Float(32). Returns
 * nonsense for x &lt;= 0.0f. Accurate up to the last 5 bits of the
 * mantissa. Vectorizes cleanly. */</doc>
<def f='halide/src/IROperator.cpp' l='1259' ll='1281' type='Halide::Expr Halide::fast_log(const Halide::Expr &amp; x)'/>
<use f='halide/src/IROperator.cpp' l='2173' u='c' c='_ZN6Halide8fast_powENS_4ExprES0_'/>
<use f='halide/src/autoschedulers/adams2019/cost_model_generator.cpp' l='194' u='c' c='_ZN9CostModel8generateEv'/>
