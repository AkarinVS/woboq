<dec f='halide/build-apps/abseil-cpp/absl/flags/internal/flag.h' l='428' type='bool absl::lts_2020_02_25::flags_internal::FlagImpl::SetFromString(absl::string_view value, absl::lts_2020_02_25::flags_internal::FlagSettingMode set_mode, absl::lts_2020_02_25::flags_internal::ValueSource source, std::string * err)'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/flag.h' l='605' u='c' c='_ZN4absl14lts_2020_02_2514flags_internal4Flag13SetFromStringENS0_11string_viewENS1_15FlagSettingModeENS1_11ValueSourceEPNSt7__cxx1112basic_stringIcSt113100500'/>
<def f='halide/build-apps/abseil-cpp/absl/flags/internal/flag.cc' l='294' ll='351' type='bool absl::lts_2020_02_25::flags_internal::FlagImpl::SetFromString(absl::string_view value, absl::lts_2020_02_25::flags_internal::FlagSettingMode set_mode, absl::lts_2020_02_25::flags_internal::ValueSource source, std::string * err)'/>
<doc f='halide/build-apps/abseil-cpp/absl/flags/internal/flag.cc' l='286'>// Sets the value of the flag based on specified string `value`. If the flag
// was successfully set to new value, it returns true. Otherwise, sets `err`
// to indicate the error, leaves the flag unchanged, and returns false. There
// are three ways to set the flag&apos;s value:
//  * Update the current flag value
//  * Update the flag&apos;s default value
//  * Update the current flag value if it was never set before
// The mode is selected based on &apos;set_mode&apos; parameter.</doc>
