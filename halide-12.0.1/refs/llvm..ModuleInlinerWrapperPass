<inh f='halide/llvm-install/include/llvm/IR/PassManager.h' l='374' c='llvm::PassInfoMixin'/>
<def f='halide/llvm-install/include/llvm/Transforms/IPO/Inliner.h' l='118' ll='145'/>
<use f='halide/llvm-install/include/llvm/Transforms/IPO/Inliner.h' l='119'/>
<use f='halide/llvm-install/include/llvm/Transforms/IPO/Inliner.h' l='126' c='_ZN4llvm24ModuleInlinerWrapperPassC1EOS0_'/>
<use f='halide/llvm-install/include/llvm/Passes/PassBuilder.h' l='355' c='_ZN4llvm11PassBuilder20buildInlinerPipelineENS0_17OptimizationLevelENS_18ThinOrFullLTOPhaseE'/>
<size>136</size>
<doc f='halide/llvm-install/include/llvm/Transforms/IPO/Inliner.h' l='113'>/// Module pass, wrapping the inliner pass. This works in conjunction with the
/// InlineAdvisorAnalysis to facilitate inlining decisions taking into account
/// module-wide state, that need to keep track of inter-inliner pass runs, for
/// a given module. An InlineAdvisor is configured and kept alive for the
/// duration of the ModuleInlinerWrapperPass::run.</doc>
<fun r='_ZN4llvm24ModuleInlinerWrapperPassC1ENS_12InlineParamsEbbNS_19InliningAdvisorModeEj'/>
<fun r='_ZN4llvm24ModuleInlinerWrapperPassC1EOS0_'/>
<fun r='_ZN4llvm24ModuleInlinerWrapperPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE'/>
<fun r='_ZN4llvm24ModuleInlinerWrapperPass5getPMEv'/>
<fun r='_ZN4llvm24ModuleInlinerWrapperPass25addRequiredModuleAnalysisEv'/>
<mbr r='llvm::ModuleInlinerWrapperPass::Params' o='0' t='const llvm::InlineParams'/>
<mbr r='llvm::ModuleInlinerWrapperPass::Mode' o='512' t='const llvm::InliningAdvisorMode'/>
<mbr r='llvm::ModuleInlinerWrapperPass::MaxDevirtIterations' o='544' t='const unsigned int'/>
<mbr r='llvm::ModuleInlinerWrapperPass::PM' o='576' t='llvm::CGSCCPassManager'/>
<mbr r='llvm::ModuleInlinerWrapperPass::MPM' o='832' t='llvm::ModulePassManager'/>
