<dec f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.h' l='250' type='void absl::lts_2020_02_25::Mutex::AssertReaderHeld() const'/>
<doc f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.h' l='245'>// Mutex::AssertReaderHeld()
  //
  // Returns immediately if this thread holds the `Mutex` in at least shared
  // mode (read mode). Otherwise, may report an error (typically by
  // crashing with a diagnostic), or may return immediately.</doc>
<use f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='1539' u='c' c='_ZN4absl14lts_2020_02_255Mutex5AwaitERKNS0_9ConditionE'/>
<use f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='1554' u='c' c='_ZN4absl14lts_2020_02_255Mutex17AwaitWithDeadlineERKNS0_9ConditionENS0_4TimeE'/>
<use f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='1567' u='c' c='_ZN4absl14lts_2020_02_255Mutex11AwaitCommonERKNS0_9ConditionENS0_24synchronization_internal13KernelTimeoutE'/>
<use f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='2022' u='c' c='_ZN4absl14lts_2020_02_255Mutex10UnlockSlowEPNS0_15SynchWaitParamsE'/>
<def f='halide/build-apps/abseil-cpp/absl/synchronization/mutex.cc' l='2398' ll='2405' type='void absl::lts_2020_02_25::Mutex::AssertReaderHeld() const'/>
