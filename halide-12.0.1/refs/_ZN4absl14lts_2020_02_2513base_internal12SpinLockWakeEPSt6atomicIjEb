<dec f='halide/build-apps/abseil-cpp/absl/base/internal/spinlock_wait.h' l='50' type='void absl::lts_2020_02_25::base_internal::SpinLockWake(std::atomic&lt;uint32_t&gt; * w, bool all)'/>
<def f='halide/build-apps/abseil-cpp/absl/base/internal/spinlock_wait.h' l='82' ll='85' type='void absl::lts_2020_02_25::base_internal::SpinLockWake(std::atomic&lt;uint32_t&gt; * w, bool all)'/>
<use f='halide/build-apps/abseil-cpp/absl/base/call_once.h' l='190' u='c' c='_ZN4absl14lts_2020_02_2513base_internal12CallOnceImplEPSt6atomicIjENS1_14SchedulingModeEOT_DpOT0_'/>
<doc f='halide/build-apps/abseil-cpp/absl/base/internal/spinlock_wait.h' l='46'>// If possible, wake some thread that has called SpinLockDelay(w, ...). If
// &quot;all&quot; is true, wake all such threads.  This call is a hint, and on some
// systems it may be a no-op; threads calling SpinLockDelay() will always wake
// eventually even if SpinLockWake() is never called.</doc>
<use f='halide/build-apps/abseil-cpp/absl/base/internal/spinlock.cc' l='176' u='c' c='_ZN4absl14lts_2020_02_2513base_internal8SpinLock10SlowUnlockEj'/>
