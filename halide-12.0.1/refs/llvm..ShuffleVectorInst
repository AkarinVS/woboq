<inh f='halide/llvm-install/include/llvm/IR/Instruction.h' l='45' c='llvm::Instruction'/>
<def f='halide/llvm-install/include/llvm/IR/Instructions.h' l='1996' ll='2313'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='2004' c='_ZNK4llvm17ShuffleVectorInst9cloneImplEv'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='2316'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='2319' c='_ZNK4llvm17ShuffleVectorInst8op_beginEv'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='2319' c='_ZNK4llvm17ShuffleVectorInst6op_endEv'/>
<use f='halide/llvm-install/include/llvm/IR/Instructions.h' l='2319' c='_ZNK4llvm17ShuffleVectorInst10getOperandEj'/>
<use f='halide/llvm-install/include/llvm/IR/IRBuilder.h' l='2530' c='_ZN4llvm13IRBuilderBase19CreateShuffleVectorEPNS_5ValueES2_NS_8ArrayRefIiEERKNS_5TwineE'/>
<size>104</size>
<doc f='halide/llvm-install/include/llvm/IR/Instructions.h' l='1986'>/// This instruction constructs a fixed permutation of two
/// input vectors.
///
/// For each element of the result vector, the shuffle mask selects an element
/// from one of the input vectors to copy to the result. Non-negative elements
/// in the mask represent an index into the concatenated pair of input vectors.
/// UndefMaskElem (-1) specifies that the result element is undefined.
///
/// For scalable vectors, all the elements of the mask must be 0 or -1. This
/// requirement may be relaxed in the future.</doc>
<mbr r='llvm::ShuffleVectorInst::ShuffleMask' o='512' t='SmallVector&lt;int, 4&gt;'/>
<mbr r='llvm::ShuffleVectorInst::ShuffleMaskForBitcode' o='768' t='llvm::Constant *'/>
<fun r='_ZNK4llvm17ShuffleVectorInst9cloneImplEv'/>
<fun r='_ZN4llvm17ShuffleVectorInstC1EPNS_5ValueES2_S2_RKNS_5TwineEPNS_11InstructionE'/>
<fun r='_ZN4llvm17ShuffleVectorInstC1EPNS_5ValueES2_S2_RKNS_5TwineEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17ShuffleVectorInstC1EPNS_5ValueES2_NS_8ArrayRefIiEERKNS_5TwineEPNS_11InstructionE'/>
<fun r='_ZN4llvm17ShuffleVectorInstC1EPNS_5ValueES2_NS_8ArrayRefIiEERKNS_5TwineEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm17ShuffleVectorInstnwEm'/>
<fun r='_ZN4llvm17ShuffleVectorInst7commuteEv'/>
<fun r='_ZN4llvm17ShuffleVectorInst15isValidOperandsEPKNS_5ValueES3_S3_'/>
<fun r='_ZN4llvm17ShuffleVectorInst15isValidOperandsEPKNS_5ValueES3_NS_8ArrayRefIiEE'/>
<fun r='_ZNK4llvm17ShuffleVectorInst7getTypeEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst10getOperandEj'/>
<fun r='_ZN4llvm17ShuffleVectorInst10setOperandEjPNS_5ValueE'/>
<fun r='_ZN4llvm17ShuffleVectorInst8op_beginEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst8op_beginEv'/>
<fun r='_ZN4llvm17ShuffleVectorInst6op_endEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst6op_endEv'/>
<fun r='_ZN4llvm17ShuffleVectorInst2OpEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst2OpEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst14getNumOperandsEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst12getMaskValueEj'/>
<fun r='_ZN4llvm17ShuffleVectorInst14getShuffleMaskEPKNS_8ConstantERNS_15SmallVectorImplIiEE'/>
<fun r='_ZNK4llvm17ShuffleVectorInst14getShuffleMaskERNS_15SmallVectorImplIiEE'/>
<fun r='_ZNK4llvm17ShuffleVectorInst24getShuffleMaskForBitcodeEv'/>
<fun r='_ZN4llvm17ShuffleVectorInst28convertShuffleMaskForBitcodeENS_8ArrayRefIiEEPNS_4TypeE'/>
<fun r='_ZN4llvm17ShuffleVectorInst14setShuffleMaskENS_8ArrayRefIiEE'/>
<fun r='_ZNK4llvm17ShuffleVectorInst14getShuffleMaskEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst13changesLengthEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst15increasesLengthEv'/>
<fun r='_ZN4llvm17ShuffleVectorInst18isSingleSourceMaskENS_8ArrayRefIiEE'/>
<fun r='_ZN4llvm17ShuffleVectorInst18isSingleSourceMaskEPKNS_8ConstantE'/>
<fun r='_ZNK4llvm17ShuffleVectorInst14isSingleSourceEv'/>
<fun r='_ZN4llvm17ShuffleVectorInst14isIdentityMaskENS_8ArrayRefIiEE'/>
<fun r='_ZN4llvm17ShuffleVectorInst14isIdentityMaskEPKNS_8ConstantE'/>
<fun r='_ZNK4llvm17ShuffleVectorInst10isIdentityEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst21isIdentityWithPaddingEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst21isIdentityWithExtractEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst8isConcatEv'/>
<fun r='_ZN4llvm17ShuffleVectorInst12isSelectMaskENS_8ArrayRefIiEE'/>
<fun r='_ZN4llvm17ShuffleVectorInst12isSelectMaskEPKNS_8ConstantE'/>
<fun r='_ZNK4llvm17ShuffleVectorInst8isSelectEv'/>
<fun r='_ZN4llvm17ShuffleVectorInst13isReverseMaskENS_8ArrayRefIiEE'/>
<fun r='_ZN4llvm17ShuffleVectorInst13isReverseMaskEPKNS_8ConstantE'/>
<fun r='_ZNK4llvm17ShuffleVectorInst9isReverseEv'/>
<fun r='_ZN4llvm17ShuffleVectorInst18isZeroEltSplatMaskENS_8ArrayRefIiEE'/>
<fun r='_ZN4llvm17ShuffleVectorInst18isZeroEltSplatMaskEPKNS_8ConstantE'/>
<fun r='_ZNK4llvm17ShuffleVectorInst14isZeroEltSplatEv'/>
<fun r='_ZN4llvm17ShuffleVectorInst15isTransposeMaskENS_8ArrayRefIiEE'/>
<fun r='_ZN4llvm17ShuffleVectorInst15isTransposeMaskEPKNS_8ConstantE'/>
<fun r='_ZNK4llvm17ShuffleVectorInst11isTransposeEv'/>
<fun r='_ZN4llvm17ShuffleVectorInst22isExtractSubvectorMaskENS_8ArrayRefIiEEiRi'/>
<fun r='_ZN4llvm17ShuffleVectorInst22isExtractSubvectorMaskEPKNS_8ConstantEiRi'/>
<fun r='_ZNK4llvm17ShuffleVectorInst22isExtractSubvectorMaskERi'/>
<fun r='_ZN4llvm17ShuffleVectorInst18commuteShuffleMaskENS_15MutableArrayRefIiEEj'/>
<fun r='_ZN4llvm17ShuffleVectorInst7classofEPKNS_11InstructionE'/>
<fun r='_ZN4llvm17ShuffleVectorInst7classofEPKNS_5ValueE'/>
<fun r='_ZN4llvm17ShuffleVectorInst8op_beginEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst8op_beginEv'/>
<fun r='_ZN4llvm17ShuffleVectorInst6op_endEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst6op_endEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst10getOperandEj'/>
<fun r='_ZN4llvm17ShuffleVectorInst10setOperandEjPNS_5ValueE'/>
<fun r='_ZNK4llvm17ShuffleVectorInst14getNumOperandsEv'/>
<fun r='_ZN4llvm17ShuffleVectorInst2OpEv'/>
<fun r='_ZNK4llvm17ShuffleVectorInst2OpEv'/>
<use f='halide/src/CodeGen_Hexagon.cpp' l='1218' c='_ZN6Halide8Internal12_GLOBAL__N_115CodeGen_Hexagon15shuffle_vectorsEPN4llvm5ValueES5_RKSt6vectorIiSaIiEE'/>
<use f='halide/src/CodeGen_Hexagon.cpp' l='1218' c='_ZN6Halide8Internal12_GLOBAL__N_115CodeGen_Hexagon15shuffle_vectorsEPN4llvm5ValueES5_RKSt6vectorIiSaIiEE'/>
<size>104</size>
