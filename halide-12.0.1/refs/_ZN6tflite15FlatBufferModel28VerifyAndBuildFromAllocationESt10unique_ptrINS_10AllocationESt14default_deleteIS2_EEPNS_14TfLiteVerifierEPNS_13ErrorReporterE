<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/model_builder.h' l='132' type='static std::unique_ptr&lt;FlatBufferModel&gt; tflite::FlatBufferModel::VerifyAndBuildFromAllocation(std::unique_ptr&lt;Allocation&gt; allocation, tflite::TfLiteVerifier * extra_verifier = nullptr, tflite::ErrorReporter * error_reporter = DefaultErrorReporter())'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/model_builder.h' l='122'>/// Verifies whether the content of the allocation is legit, then builds a
  /// model based on the provided allocation.
  /// The extra_verifier argument is an additional optional verifier for the
  /// buffer. By default, we always check with tflite::VerifyModelBuffer. If
  /// extra_verifier is supplied, the buffer is checked against the
  /// extra_verifier after the check against tflite::VerifyModelBuilder.
  /// Ownership of the allocation is passed to the model, but the caller
  /// retains ownership of `error_reporter` and must ensure its lifetime is
  /// longer than the FlatBufferModel instance.
  /// Returns a nullptr in case of failure.</doc>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/model_builder.cc' l='68' u='c' c='_ZN6tflite15FlatBufferModel22VerifyAndBuildFromFileEPKcPNS_14TfLiteVerifierEPNS_13ErrorReporterE'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/model_builder.cc' l='89' u='c' c='_ZN6tflite15FlatBufferModel24VerifyAndBuildFromBufferEPKcmPNS_14TfLiteVerifierEPNS_13ErrorReporterE'/>
<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/model_builder.cc' l='103' ll='129' type='static std::unique_ptr&lt;FlatBufferModel&gt; tflite::FlatBufferModel::VerifyAndBuildFromAllocation(std::unique_ptr&lt;Allocation&gt; allocation, tflite::TfLiteVerifier * extra_verifier = nullptr, tflite::ErrorReporter * error_reporter = DefaultErrorReporter())'/>
