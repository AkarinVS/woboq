<def f='halide/build/include/Halide.h' l='27637' ll='27706'/>
<use f='halide/build/include/Halide.h' l='27676' c='_ZNK6Halide8Internal9IRMatcher10IntLiteral5matchERKS2_RNS1_12MatcherStateE'/>
<use f='halide/build/include/Halide.h' l='27708' c='_ZN6Halide8Internal9IRMatcher6unwrapENS1_10IntLiteralE'/>
<use f='halide/build/include/Halide.h' l='27720' c='_ZN6Halide8Internal9IRMatcher11pattern_argEl'/>
<use f='halide/build/include/Halide.h' l='27721' c='_ZN6Halide8Internal9IRMatcher11pattern_argEl'/>
<use f='halide/build/include/Halide.h' l='27750' c='_ZN6Halide8Internal9IRMatcherlsERSoRKNS1_10IntLiteralE'/>
<size>8</size>
<doc f='halide/build/include/Halide.h' l='27635'>// Matches a specific constant or broadcast of that constant. The
// constant must be representable as an int64_t.</doc>
<mbr r='Halide::Internal::IRMatcher::IntLiteral::v' o='0' t='int64_t'/>
<smbr r='Halide::Internal::IRMatcher::IntLiteral::binds' t='const uint32_t'/>
<smbr r='Halide::Internal::IRMatcher::IntLiteral::min_node_type' t='const Halide::Internal::IRNodeType'/>
<smbr r='Halide::Internal::IRMatcher::IntLiteral::max_node_type' t='const Halide::Internal::IRNodeType'/>
<smbr r='Halide::Internal::IRMatcher::IntLiteral::canonical' t='const bool'/>
<fun r='_ZN6Halide8Internal9IRMatcher10IntLiteralC1El'/>
<fun r='_ZNK6Halide8Internal9IRMatcher10IntLiteral5matchERKNS0_12BaseExprNodeERNS1_12MatcherStateE'/>
<fun r='_ZNK6Halide8Internal9IRMatcher10IntLiteral5matchElRNS1_12MatcherStateE'/>
<fun r='_ZNK6Halide8Internal9IRMatcher10IntLiteral5matchERKS2_RNS1_12MatcherStateE'/>
<fun r='_ZNK6Halide8Internal9IRMatcher10IntLiteral4makeERNS1_12MatcherStateE13halide_type_t'/>
<smbr r='Halide::Internal::IRMatcher::IntLiteral::foldable' t='const bool'/>
<fun r='_ZNK6Halide8Internal9IRMatcher10IntLiteral17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
<def f='halide/src/IRMatch.h' l='523' ll='592'/>
<use f='halide/src/IRMatch.h' l='562' c='_ZNK6Halide8Internal9IRMatcher10IntLiteral5matchERKS2_RNS1_12MatcherStateE'/>
<use f='halide/src/IRMatch.h' l='594' c='_ZN6Halide8Internal9IRMatcher6unwrapENS1_10IntLiteralE'/>
<use f='halide/src/IRMatch.h' l='606' c='_ZN6Halide8Internal9IRMatcher11pattern_argEl'/>
<use f='halide/src/IRMatch.h' l='607' c='_ZN6Halide8Internal9IRMatcher11pattern_argEl'/>
<use f='halide/src/IRMatch.h' l='636' c='_ZN6Halide8Internal9IRMatcherlsERSoRKNS1_10IntLiteralE'/>
<size>8</size>
<doc f='halide/src/IRMatch.h' l='521'>// Matches a specific constant or broadcast of that constant. The
// constant must be representable as an int64_t.</doc>
<mbr r='Halide::Internal::IRMatcher::IntLiteral::v' o='0' t='int64_t'/>
<smbr r='Halide::Internal::IRMatcher::IntLiteral::binds' t='const uint32_t'/>
<smbr r='Halide::Internal::IRMatcher::IntLiteral::min_node_type' t='const Halide::Internal::IRNodeType'/>
<smbr r='Halide::Internal::IRMatcher::IntLiteral::max_node_type' t='const Halide::Internal::IRNodeType'/>
<smbr r='Halide::Internal::IRMatcher::IntLiteral::canonical' t='const bool'/>
<fun r='_ZN6Halide8Internal9IRMatcher10IntLiteralC1El'/>
<fun r='_ZNK6Halide8Internal9IRMatcher10IntLiteral5matchERKNS0_12BaseExprNodeERNS1_12MatcherStateE'/>
<fun r='_ZNK6Halide8Internal9IRMatcher10IntLiteral5matchElRNS1_12MatcherStateE'/>
<fun r='_ZNK6Halide8Internal9IRMatcher10IntLiteral5matchERKS2_RNS1_12MatcherStateE'/>
<fun r='_ZNK6Halide8Internal9IRMatcher10IntLiteral4makeERNS1_12MatcherStateE13halide_type_t'/>
<smbr r='Halide::Internal::IRMatcher::IntLiteral::foldable' t='const bool'/>
<fun r='_ZNK6Halide8Internal9IRMatcher10IntLiteral17make_folded_constER21halide_scalar_value_tR13halide_type_tRNS1_12MatcherStateE'/>
