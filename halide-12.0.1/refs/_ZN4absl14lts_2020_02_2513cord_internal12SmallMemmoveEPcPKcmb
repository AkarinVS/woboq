<def f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='621' ll='656' type='void absl::lts_2020_02_25::cord_internal::SmallMemmove(char * dst, const char * src, size_t n, bool nullify_tail = false)'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='725' u='c' c='_ZN4absl14lts_2020_02_254Cord9InlineRepC1ERKS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='738' u='c' c='_ZN4absl14lts_2020_02_254Cord9InlineRepaSERKS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='761' u='c' c='_ZN4absl14lts_2020_02_254Cord9InlineRep4SwapEPS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='762' u='c' c='_ZN4absl14lts_2020_02_254Cord9InlineRep4SwapEPS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='763' u='c' c='_ZN4absl14lts_2020_02_254Cord9InlineRep4SwapEPS2_'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='825' u='c' c='_ZNK4absl14lts_2020_02_254Cord9InlineRep11CopyToArrayEPc'/>
<doc f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='618'>// Fast implementation of memmove for up to 15 bytes. This implementation is
// safe for overlapping regions. If nullify_tail is true, the destination is
// padded with &apos;\0&apos; up to 16 bytes.</doc>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.cc' l='538' u='c' c='_ZN4absl14lts_2020_02_254Cord9InlineRep8set_dataEPKcmb'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.cc' l='573' u='c' c='_ZN4absl14lts_2020_02_254Cord9InlineRep13remove_prefixEm'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.cc' l='1100' u='c' c='_ZNK4absl14lts_2020_02_254Cord7SubcordEmm'/>
<use f='halide/build-apps/abseil-cpp/absl/strings/cord.cc' l='1105' u='c' c='_ZNK4absl14lts_2020_02_254Cord7SubcordEmm'/>
