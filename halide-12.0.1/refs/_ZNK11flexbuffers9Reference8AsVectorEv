<use f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='438' u='c' c='_ZNK11flexbuffers9Reference7AsInt64Ev'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='467' u='c' c='_ZNK11flexbuffers9Reference8AsUInt64Ev'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='500' u='c' c='_ZNK11flexbuffers9Reference8AsDoubleEv'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='582' u='c' c='_ZNK11flexbuffers9Reference8ToStringEbbRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<def f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='608' ll='614' type='flexbuffers::Vector flexbuffers::Reference::AsVector() const'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='793' u='c' c='_ZNK11flexbuffers9Reference2AsEv'/>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/flexbuffers.h' l='606'>// This function returns the empty vector if you try to read a not-vector.
  // Maps can be viewed as vectors too.</doc>
