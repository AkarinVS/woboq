<dec f='halide/build-apps/eigen/Eigen/src/Core/DenseBase.h' l='338' type='static const Eigen::DenseBase::ConstantReturnType Eigen::DenseBase::Constant(const Eigen::DenseBase::Scalar &amp; value)'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/CwiseNullaryOp.h' l='225' ll='231' type='static const typename DenseBase&lt;Derived&gt;::ConstantReturnType Eigen::DenseBase::Constant(const Eigen::DenseBase::Scalar &amp; value)'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/CwiseNullaryOp.h' l='216'>/** \returns an expression of a constant matrix of value \a value
  *
  * This variant is only for fixed-size DenseBase types. For dynamic-size types, you
  * need to use the variants taking size arguments.
  *
  * The template parameter \a CustomNullaryOp is the type of the functor.
  *
  * \sa class CwiseNullaryOp
  */</doc>
