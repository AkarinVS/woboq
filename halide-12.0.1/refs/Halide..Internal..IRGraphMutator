<inh f='halide/halide-install/include/Halide.h' l='29998' c='Halide::Internal::IRMutator'/>
<def f='halide/halide-install/include/Halide.h' l='30069' ll='30077'/>
<size>104</size>
<doc f='halide/halide-install/include/Halide.h' l='30066'>/** A mutator that caches and reapplies previously-done mutations, so
 * that it can handle graphs of IR that have not had CSE done to
 * them. */</doc>
<mbr r='Halide::Internal::IRGraphMutator::expr_replacements' o='64' t='std::map&lt;Expr, Expr, ExprCompare&gt;'/>
<mbr r='Halide::Internal::IRGraphMutator::stmt_replacements' o='448' t='std::map&lt;Stmt, Stmt, Stmt::Compare&gt;'/>
<fun r='_ZN6Halide8Internal14IRGraphMutator6mutateERKNS0_4StmtE'/>
<fun r='_ZN6Halide8Internal14IRGraphMutator6mutateERKNS_4ExprE'/>
<inh f='halide/build/include/Halide.h' l='29998' c='Halide::Internal::IRMutator'/>
<def f='halide/build/include/Halide.h' l='30069' ll='30077'/>
<size>104</size>
<doc f='halide/build/include/Halide.h' l='30066'>/** A mutator that caches and reapplies previously-done mutations, so
 * that it can handle graphs of IR that have not had CSE done to
 * them. */</doc>
<mbr r='Halide::Internal::IRGraphMutator::expr_replacements' o='64' t='std::map&lt;Expr, Expr, ExprCompare&gt;'/>
<mbr r='Halide::Internal::IRGraphMutator::stmt_replacements' o='448' t='std::map&lt;Stmt, Stmt, Stmt::Compare&gt;'/>
<fun r='_ZN6Halide8Internal14IRGraphMutator6mutateERKNS0_4StmtE'/>
<fun r='_ZN6Halide8Internal14IRGraphMutator6mutateERKNS_4ExprE'/>
<inh f='halide/src/IRMutator.h' l='26' c='Halide::Internal::IRMutator'/>
<def f='halide/src/IRMutator.h' l='97' ll='105'/>
<size>104</size>
<doc f='halide/src/IRMutator.h' l='94'>/** A mutator that caches and reapplies previously-done mutations, so
 * that it can handle graphs of IR that have not had CSE done to
 * them. */</doc>
<mbr r='Halide::Internal::IRGraphMutator::expr_replacements' o='64' t='std::map&lt;Expr, Expr, ExprCompare&gt;'/>
<mbr r='Halide::Internal::IRGraphMutator::stmt_replacements' o='448' t='std::map&lt;Stmt, Stmt, Stmt::Compare&gt;'/>
<fun r='_ZN6Halide8Internal14IRGraphMutator6mutateERKNS0_4StmtE'/>
<fun r='_ZN6Halide8Internal14IRGraphMutator6mutateERKNS_4ExprE'/>
<ovr f='halide/src/Associativity.cpp' l='40' c='Halide::Internal::(anonymousnamespace)::ConvertSelfRef'/>
<use f='halide/src/Associativity.cpp' l='40'/>
<size>104</size>
<ovr f='halide/src/CSE.cpp' l='185' c='Halide::Internal::(anonymousnamespace)::Replacer'/>
<use f='halide/src/CSE.cpp' l='185'/>
<use f='halide/src/CSE.cpp' l='189' c='_ZN6Halide8Internal12_GLOBAL__N_18ReplacerC1ERKSt3mapINS_4ExprES4_NS_11ExprCompareESaISt4pairIKS4_S4_EEE'/>
<ovr f='halide/src/CSE.cpp' l='198' c='Halide::Internal::(anonymousnamespace)::RemoveLets'/>
<use f='halide/src/CSE.cpp' l='198'/>
<size>104</size>
<ovr f='halide/src/Deinterleave.cpp' l='179' c='Halide::Internal::(anonymousnamespace)::Deinterleaver'/>
<use f='halide/src/Deinterleave.cpp' l='179'/>
<size>104</size>
<ovr f='halide/src/DerivativeUtils.cpp' l='33' c='Halide::Internal::(anonymousnamespace)::StripLets'/>
<use f='halide/src/DerivativeUtils.cpp' l='33'/>
<size>104</size>
<ovr f='halide/src/LoopCarry.cpp' l='137' c='Halide::Internal::(anonymousnamespace)::StepForwards'/>
<use f='halide/src/LoopCarry.cpp' l='137'/>
<size>104</size>
<ovr f='halide/src/Substitute.cpp' l='150' c='Halide::Internal::(anonymousnamespace)::GraphSubstitute'/>
<use f='halide/src/Substitute.cpp' l='150'/>
<ovr f='halide/src/Substitute.cpp' l='181' c='Halide::Internal::(anonymousnamespace)::GraphSubstituteExpr'/>
<use f='halide/src/Substitute.cpp' l='181'/>
<ovr f='halide/src/Substitute.cpp' l='220' c='Halide::Internal::(anonymousnamespace)::SubstituteInAllLets'/>
<use f='halide/src/Substitute.cpp' l='220'/>
<size>104</size>
