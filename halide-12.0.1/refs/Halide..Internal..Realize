<inh f='halide/halide-install/include/Halide.h' l='3913' c='Halide::Internal::StmtNode'/>
<def f='halide/halide-install/include/Halide.h' l='12294' ll='12305'/>
<use f='halide/halide-install/include/Halide.h' l='12294'/>
<use f='halide/halide-install/include/Halide.h' l='12850' c='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7RealizeE'/>
<use f='halide/halide-install/include/Halide.h' l='12920' c='_ZN6Halide8Internal14IRGraphVisitor5visitEPKNS0_7RealizeE'/>
<use f='halide/halide-install/include/Halide.h' l='13088' c='_ZN6Halide8Internal15VariadicVisitor13dispatch_stmtEPKNS0_12BaseStmtNodeEDpOTL0__'/>
<use f='halide/halide-install/include/Halide.h' l='19117' c='_ZN6Halide8Internal9IRPrinter5visitEPKNS0_7RealizeE'/>
<use f='halide/halide-install/include/Halide.h' l='19349' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_7RealizeE'/>
<use f='halide/halide-install/include/Halide.h' l='20124' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_7RealizeE'/>
<use f='halide/halide-install/include/Halide.h' l='22056' c='_ZN6Halide8Internal12ExprUsesVars5visitEPKNS0_7RealizeE'/>
<use f='halide/halide-install/include/Halide.h' l='30056' c='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7RealizeE'/>
<size>120</size>
<doc f='halide/halide-install/include/Halide.h' l='12288'>/** Allocate a multi-dimensional buffer of the given type and
 * size. Create some scratch memory that will back the function &apos;name&apos;
 * over the range specified in &apos;bounds&apos;. The bounds are a vector of
 * (min, extent) pairs for each dimension. Allocation only occurs if
 * the condition evaluates to true.
 */</doc>
<mbr r='Halide::Internal::Realize::name' o='128' t='std::string'/>
<mbr r='Halide::Internal::Realize::types' o='384' t='std::vector&lt;Type&gt;'/>
<mbr r='Halide::Internal::Realize::memory_type' o='576' t='Halide::MemoryType'/>
<mbr r='Halide::Internal::Realize::bounds' o='640' t='Halide::Region'/>
<mbr r='Halide::Internal::Realize::condition' o='832' t='Halide::Expr'/>
<mbr r='Halide::Internal::Realize::body' o='896' t='Halide::Internal::Stmt'/>
<fun r='_ZN6Halide8Internal7Realize4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_4TypeESaISB_EENS_10MemoryTypeERKSA_INS_5RangeESa9334058'/>
<smbr r='Halide::Internal::Realize::_node_type' t='const Halide::Internal::IRNodeType'/>
<inh f='halide/build/include/Halide.h' l='3913' c='Halide::Internal::StmtNode'/>
<def f='halide/build/include/Halide.h' l='12294' ll='12305'/>
<use f='halide/build/include/Halide.h' l='12294'/>
<use f='halide/build/include/Halide.h' l='12850' c='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7RealizeE'/>
<use f='halide/build/include/Halide.h' l='12920' c='_ZN6Halide8Internal14IRGraphVisitor5visitEPKNS0_7RealizeE'/>
<use f='halide/build/include/Halide.h' l='13088' c='_ZN6Halide8Internal15VariadicVisitor13dispatch_stmtEPKNS0_12BaseStmtNodeEDpOTL0__'/>
<use f='halide/build/include/Halide.h' l='19117' c='_ZN6Halide8Internal9IRPrinter5visitEPKNS0_7RealizeE'/>
<use f='halide/build/include/Halide.h' l='19349' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_7RealizeE'/>
<use f='halide/build/include/Halide.h' l='20124' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_7RealizeE'/>
<use f='halide/build/include/Halide.h' l='22056' c='_ZN6Halide8Internal12ExprUsesVars5visitEPKNS0_7RealizeE'/>
<use f='halide/build/include/Halide.h' l='30056' c='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7RealizeE'/>
<size>120</size>
<doc f='halide/build/include/Halide.h' l='12288'>/** Allocate a multi-dimensional buffer of the given type and
 * size. Create some scratch memory that will back the function &apos;name&apos;
 * over the range specified in &apos;bounds&apos;. The bounds are a vector of
 * (min, extent) pairs for each dimension. Allocation only occurs if
 * the condition evaluates to true.
 */</doc>
<mbr r='Halide::Internal::Realize::name' o='128' t='std::string'/>
<mbr r='Halide::Internal::Realize::types' o='384' t='std::vector&lt;Type&gt;'/>
<mbr r='Halide::Internal::Realize::memory_type' o='576' t='Halide::MemoryType'/>
<mbr r='Halide::Internal::Realize::bounds' o='640' t='Halide::Region'/>
<mbr r='Halide::Internal::Realize::condition' o='832' t='Halide::Expr'/>
<mbr r='Halide::Internal::Realize::body' o='896' t='Halide::Internal::Stmt'/>
<fun r='_ZN6Halide8Internal7Realize4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_4TypeESaISB_EENS_10MemoryTypeERKSA_INS_5RangeESa9334058'/>
<smbr r='Halide::Internal::Realize::_node_type' t='const Halide::Internal::IRNodeType'/>
<inh f='halide/src/Expr.h' l='166' c='Halide::Internal::StmtNode'/>
<def f='halide/src/IR.h' l='402' ll='413'/>
<use f='halide/src/IR.h' l='402'/>
<use f='halide/src/IRVisitor.h' l='68' c='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7RealizeE'/>
<use f='halide/src/IRVisitor.h' l='138' c='_ZN6Halide8Internal14IRGraphVisitor5visitEPKNS0_7RealizeE'/>
<use f='halide/src/IRVisitor.h' l='306' c='_ZN6Halide8Internal15VariadicVisitor13dispatch_stmtEPKNS0_12BaseStmtNodeEDpOTL0__'/>
<use f='halide/src/ExprUsesVar.h' l='78' c='_ZN6Halide8Internal12ExprUsesVars5visitEPKNS0_7RealizeE'/>
<use f='halide/src/IRMutator.h' l='84' c='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7RealizeE'/>
<size>120</size>
<doc f='halide/src/IR.h' l='396'>/** Allocate a multi-dimensional buffer of the given type and
 * size. Create some scratch memory that will back the function &apos;name&apos;
 * over the range specified in &apos;bounds&apos;. The bounds are a vector of
 * (min, extent) pairs for each dimension. Allocation only occurs if
 * the condition evaluates to true.
 */</doc>
<mbr r='Halide::Internal::Realize::name' o='128' t='std::string'/>
<mbr r='Halide::Internal::Realize::types' o='384' t='std::vector&lt;Type&gt;'/>
<mbr r='Halide::Internal::Realize::memory_type' o='576' t='Halide::MemoryType'/>
<mbr r='Halide::Internal::Realize::bounds' o='640' t='Halide::Region'/>
<mbr r='Halide::Internal::Realize::condition' o='832' t='Halide::Expr'/>
<mbr r='Halide::Internal::Realize::body' o='896' t='Halide::Internal::Stmt'/>
<fun r='_ZN6Halide8Internal7Realize4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_4TypeESaISB_EENS_10MemoryTypeERKSA_INS_5RangeESa9334058'/>
<smbr r='Halide::Internal::Realize::_node_type' t='const Halide::Internal::IRNodeType'/>
<use f='halide/src/AllocationBoundsInference.cpp' l='32' c='_ZN6Halide8Internal12_GLOBAL__N_119AllocationInference5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/IRPrinter.h' l='186' c='_ZN6Halide8Internal9IRPrinter5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/AsyncProducers.cpp' l='66' c='_ZN6Halide8Internal12_GLOBAL__N_121NoOpCollapsingMutator5visitEPKNS0_7RealizeE'/>
<use f='halide/src/AsyncProducers.cpp' l='316' c='_ZN6Halide8Internal12_GLOBAL__N_118ForkAsyncProducers5visitEPKNS0_7RealizeE'/>
<use f='halide/src/AsyncProducers.cpp' l='484' c='_ZN6Halide8Internal12_GLOBAL__N_128TightenProducerConsumerNodes22make_producer_consumerERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_4StmtERKNS0_5ScopeIiEE'/>
<use f='halide/src/AsyncProducers.cpp' l='484' c='_ZN6Halide8Internal12_GLOBAL__N_128TightenProducerConsumerNodes22make_producer_consumerERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_4StmtERKNS0_5ScopeIiEE'/>
<use f='halide/src/AsyncProducers.cpp' l='549' c='_ZN6Halide8Internal12_GLOBAL__N_118ExpandAcquireNodes5visitEPKNS0_7RealizeE'/>
<use f='halide/src/AsyncProducers.cpp' l='593' c='_ZN6Halide8Internal12_GLOBAL__N_116TightenForkNodes9make_forkERKNS0_4StmtES5_'/>
<use f='halide/src/AsyncProducers.cpp' l='593' c='_ZN6Halide8Internal12_GLOBAL__N_116TightenForkNodes9make_forkERKNS0_4StmtES5_'/>
<use f='halide/src/AsyncProducers.cpp' l='594' c='_ZN6Halide8Internal12_GLOBAL__N_116TightenForkNodes9make_forkERKNS0_4StmtES5_'/>
<use f='halide/src/AsyncProducers.cpp' l='594' c='_ZN6Halide8Internal12_GLOBAL__N_116TightenForkNodes9make_forkERKNS0_4StmtES5_'/>
<use f='halide/src/AsyncProducers.cpp' l='632' c='_ZN6Halide8Internal12_GLOBAL__N_116TightenForkNodes5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/BoundSmallAllocations.cpp' l='82' c='_ZN6Halide8Internal12_GLOBAL__N_121BoundSmallAllocations5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/Bounds.cpp' l='1625' c='_ZN6Halide8Internal12_GLOBAL__N_16Bounds5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/CodeGen_LLVM.h' l='385' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/CodeGen_C.h' l='229' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_7RealizeE'/>
<use f='halide/src/CodeGen_C.cpp' l='2821' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/Simplify_Internal.h' l='339' c='_ZN6Halide8Internal8Simplify5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/CodeGen_LLVM.cpp' l='4181' c='_ZN6Halide8Internal12CodeGen_LLVM5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/DebugToFile.cpp' l='25' c='_ZN6Halide8Internal12_GLOBAL__N_111DebugToFile5visitEPKNS0_7RealizeE'/>
<use f='halide/src/DebugToFile.cpp' l='103' c='_ZN6Halide8Internal12_GLOBAL__N_123RemoveDummyRealizations5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/Deinterleave.cpp' l='55' c='_ZN6Halide8Internal12_GLOBAL__N_114StoreCollector5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/Derivative.cpp' l='117' c='_ZN6Halide8Internal12_GLOBAL__N_126ReverseAccumulationVisitor5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/IR.cpp' l='467' c='_ZN6Halide8Internal7Realize4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_4TypeESaISB_EENS_10MemoryTypeERKSA_INS_5RangeESa9334058'/>
<use f='halide/src/IR.cpp' l='467' c='_ZN6Halide8Internal7Realize4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_4TypeESaISB_EENS_10MemoryTypeERKSA_INS_5RangeESa9334058'/>
<use f='halide/src/IR.cpp' l='1101' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1287' c='_ZNK6Halide8Internal8StmtNode11mutate_stmtEPNS0_9IRMutatorE'/>
<size>120</size>
<fun r='_ZN6Halide8Internal7Realize4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_4TypeESaISB_EENS_10MemoryTypeERKSA_INS_5RangeESa9334058'/>
<use f='halide/src/IREquality.cpp' l='92' c='_ZN6Halide8Internal12_GLOBAL__N_110IRComparer5visitEPKNS0_7RealizeE'/>
<use f='halide/src/IREquality.cpp' l='523' c='_ZN6Halide8Internal12_GLOBAL__N_110IRComparer5visitEPKNS0_7RealizeE'/>
<use f='halide/src/IREquality.cpp' l='524' c='_ZN6Halide8Internal12_GLOBAL__N_110IRComparer5visitEPKNS0_7RealizeE'/>
<use f='halide/src/IREquality.cpp' l='524' c='_ZN6Halide8Internal12_GLOBAL__N_110IRComparer5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/IRMutator.cpp' l='288' c='_ZN6Halide8Internal9IRMutator5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/IRPrinter.cpp' l='856' c='_ZN6Halide8Internal9IRPrinter5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/IRVisitor.cpp' l='206' c='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7RealizeE'/>
<use f='halide/src/IRVisitor.cpp' l='464' c='_ZN6Halide8Internal14IRGraphVisitor5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/Memoization.cpp' l='339' c='_ZN6Halide8Internal12_GLOBAL__N_117InjectMemoization5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/ModulusRemainder.cpp' l='69' c='_ZN6Halide8Internal12_GLOBAL__N_123ComputeModulusRemainder5visitEPKNS0_7RealizeE'/>
<use f='halide/src/ModulusRemainder.cpp' l='248' c='_ZN6Halide8Internal12_GLOBAL__N_123ComputeModulusRemainder5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/Monotonic.cpp' l='591' c='_ZN6Halide8Internal12_GLOBAL__N_116DerivativeBounds5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/Prefetch.cpp' l='89' c='_ZN6Halide8Internal12_GLOBAL__N_114InjectPrefetch5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/PrintLoopNest.cpp' l='119' c='_ZN6Halide8Internal12_GLOBAL__N_113PrintLoopNest5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/RegionCosts.cpp' l='290' c='_ZN6Halide8Internal12_GLOBAL__N_18ExprCost5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/RemoveUndef.cpp' l='469' c='_ZN6Halide8Internal12_GLOBAL__N_111RemoveUndef5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/ScheduleFunctions.cpp' l='797' c='_ZN6Halide8Internal12_GLOBAL__N_116IsRealizedInStmt5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/Simplify_Stmts.cpp' l='629' c='_ZN6Halide8Internal8Simplify5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/SkipStages.cpp' l='235' c='_ZN6Halide8Internal12_GLOBAL__N_115PredicateFinder5visitEPKNS0_7RealizeE'/>
<use f='halide/src/SkipStages.cpp' l='384' c='_ZN6Halide8Internal12_GLOBAL__N_112StageSkipper5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/SlidingWindow.cpp' l='737' c='_ZN6Halide8Internal12_GLOBAL__N_113SlidingWindow5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/SplitTuples.cpp' l='67' c='_ZN6Halide8Internal12_GLOBAL__N_111SplitTuples5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/StmtToHtml.cpp' l='523' c='_ZN6Halide8Internal12_GLOBAL__N_110StmtToHtml5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/StorageFlattening.cpp' l='109' c='_ZN6Halide8Internal12_GLOBAL__N_117FlattenDimensions5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/StorageFolding.cpp' l='937' c='_ZN6Halide8Internal12_GLOBAL__N_114StorageFolding5visitEPKNS0_7RealizeE'/>
<size>120</size>
<use f='halide/src/Tracing.cpp' l='227' c='_ZN6Halide8Internal12_GLOBAL__N_113InjectTracing5visitEPKNS0_7RealizeE'/>
<use f='halide/src/Tracing.cpp' l='229' c='_ZN6Halide8Internal12_GLOBAL__N_113InjectTracing5visitEPKNS0_7RealizeE'/>
<use f='halide/src/Tracing.cpp' l='318' c='_ZN6Halide8Internal12_GLOBAL__N_123RemoveRealizeOverOutput5visitEPKNS0_7RealizeE'/>
<size>120</size>
