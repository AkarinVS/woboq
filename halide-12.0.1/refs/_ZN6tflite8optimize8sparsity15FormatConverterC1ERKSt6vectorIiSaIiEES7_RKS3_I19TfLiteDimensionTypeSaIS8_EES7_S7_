<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/tools/optimize/sparsity/format_converter.h' l='43' type='void tflite::optimize::sparsity::FormatConverter::FormatConverter&lt;T&gt;(const std::vector&lt;int&gt; &amp; shape, const std::vector&lt;int&gt; &amp; traversal_order, const std::vector&lt;TfLiteDimensionType&gt; &amp; format, const std::vector&lt;int&gt; &amp; block_size = {}, const std::vector&lt;int&gt; &amp; block_map = {})'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/tools/optimize/sparsity/format_converter.h' l='32'>/*
   * Creates a dense to sparse converter.
   * @param shape             Shape of the dense tensor.
   * @param traversal_order   In what order to traverse all dimensions,
   *                          including block dimensions.
   * @param format            Whether each dimension in the dense tensor is
   *                          dense or sparse (not in the traversal order).
   * @param block_size        Size of each block dimension.
   * @param block_map         Map from block dimension to original tensor
   *                          dimension.
   */</doc>
<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/tools/optimize/sparsity/format_converter.cc' l='52' ll='80' type='void tflite::optimize::sparsity::FormatConverter::FormatConverter&lt;T&gt;(const std::vector&lt;int&gt; &amp; shape, const std::vector&lt;int&gt; &amp; traversal_order, const std::vector&lt;TfLiteDimensionType&gt; &amp; format, const std::vector&lt;int&gt; &amp; block_size = {}, const std::vector&lt;int&gt; &amp; block_map = {})'/>
