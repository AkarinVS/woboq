<use f='halide/build-apps/ruy/ruy/thread_pool.cc' l='54' u='c' c='_ZN3ruy6ThreadD1Ev'/>
<def f='halide/build-apps/ruy/ruy/thread_pool.cc' l='64' ll='104' type='void ruy::Thread::ChangeState(ruy::Thread::State new_state, ruy::Task * task = nullptr)'/>
<use f='halide/build-apps/ruy/ruy/thread_pool.cc' l='109' u='c' c='_ZN3ruy6Thread9StartWorkEPNS_4TaskE'/>
<use f='halide/build-apps/ruy/ruy/thread_pool.cc' l='115' u='c' c='_ZN3ruy6Thread14ThreadFuncImplEv'/>
<use f='halide/build-apps/ruy/ruy/thread_pool.cc' l='136' u='c' c='_ZN3ruy6Thread14ThreadFuncImplEv'/>
<doc f='halide/build-apps/ruy/ruy/thread_pool.cc' l='58'>// Changes State; may be called from either the worker thread
  // or the master thread; however, not all state transitions are legal,
  // which is guarded by assertions.
  //
  // The Task argument is to be used only with new_state==HasWork.
  // It specifies the Task being handed to this Thread.</doc>
