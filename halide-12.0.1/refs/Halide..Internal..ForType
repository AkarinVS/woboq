<def f='halide/build/include/Halide.h' l='4142' ll='4151'/>
<use f='halide/build/include/Halide.h' l='4154' c='_ZN6Halide8Internal21is_unordered_parallelENS0_7ForTypeE'/>
<use f='halide/build/include/Halide.h' l='4157' c='_ZN6Halide8Internal11is_parallelENS0_7ForTypeE'/>
<use f='halide/build/include/Halide.h' l='6112'/>
<use f='halide/build/include/Halide.h' l='12625'/>
<use f='halide/build/include/Halide.h' l='12629' c='_ZN6Halide8Internal3For4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_4ExprESA_NS0_7ForTypeENS_9DeviceAPIENS0_4StmtE'/>
<use f='halide/build/include/Halide.h' l='15960' c='_ZN6Halide5Stage12set_dim_typeERKNS_9VarOrRVarENS_8Internal7ForTypeE'/>
<use f='halide/build/include/Halide.h' l='19003' c='_ZN6Halide8InternallsERSoRKNS0_7ForTypeE'/>
<doc f='halide/build/include/Halide.h' l='4133'>/** An enum describing a type of loop traversal. Used in schedules,
 * and in the For loop IR node. Serial is a conventional ordered for
 * loop. Iterations occur in increasing order, and each iteration must
 * appear to have finished before the next begins. Parallel, GPUBlock,
 * and GPUThread are parallel and unordered: iterations may occur in
 * any order, and multiple iterations may occur
 * simultaneously. Vectorized and GPULane are parallel and
 * synchronous: they act as if all iterations occur at the same time
 * in lockstep. */</doc>
<def f='halide/src/Expr.h' l='395' ll='404'/>
<use f='halide/src/Expr.h' l='407' c='_ZN6Halide8Internal21is_unordered_parallelENS0_7ForTypeE'/>
<use f='halide/src/Expr.h' l='410' c='_ZN6Halide8Internal11is_parallelENS0_7ForTypeE'/>
<use f='halide/src/IR.h' l='733'/>
<use f='halide/src/IR.h' l='737' c='_ZN6Halide8Internal3For4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_4ExprESA_NS0_7ForTypeENS_9DeviceAPIENS0_4StmtE'/>
<use f='halide/src/Schedule.h' l='395'/>
<use f='halide/src/Func.h' l='80' c='_ZN6Halide5Stage12set_dim_typeERKNS_9VarOrRVarENS_8Internal7ForTypeE'/>
<doc f='halide/src/Expr.h' l='386'>/** An enum describing a type of loop traversal. Used in schedules,
 * and in the For loop IR node. Serial is a conventional ordered for
 * loop. Iterations occur in increasing order, and each iteration must
 * appear to have finished before the next begins. Parallel, GPUBlock,
 * and GPUThread are parallel and unordered: iterations may occur in
 * any order, and multiple iterations may occur
 * simultaneously. Vectorized and GPULane are parallel and
 * synchronous: they act as if all iterations occur at the same time
 * in lockstep. */</doc>
<use f='halide/src/IRPrinter.h' l='72' c='_ZN6Halide8InternallsERSoRKNS0_7ForTypeE'/>
<use f='halide/src/CodeGen_C.cpp' l='314'/>
<use f='halide/src/Expr.cpp' l='77' c='_ZN6Halide8Internal21is_unordered_parallelENS0_7ForTypeE'/>
<use f='halide/src/Expr.cpp' l='84' c='_ZN6Halide8Internal11is_parallelENS0_7ForTypeE'/>
<use f='halide/src/Func.cpp' l='348' c='_ZN6Halide5Stage12set_dim_typeERKNS_9VarOrRVarENS_8Internal7ForTypeE'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='1378' c='_ZN6Halide8Internal12_GLOBAL__N_130FuseGPUThreadLoopsSingleKernel5visitEPKNS0_3ForE'/>
<use f='halide/src/IR.cpp' l='328' c='_ZN6Halide8Internal3For4makeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_4ExprESA_NS0_7ForTypeENS_9DeviceAPIENS0_4StmtE'/>
<use f='halide/src/IRPrinter.cpp' l='250' c='_ZN6Halide8InternallsERSoRKNS0_7ForTypeE'/>
<use f='halide/src/RebaseLoopsToZero.cpp' l='12' c='_ZN6Halide8Internal12_GLOBAL__N_113should_rebaseENS0_7ForTypeE'/>
<use f='halide/src/ScheduleFunctions.cpp' l='930' c='_ZN6Halide8Internal12_GLOBAL__N_121SubstituteFusedBounds5visitEPKNS0_3ForE'/>
<use f='halide/src/VectorizeLoops.cpp' l='951' c='_ZN6Halide8Internal12_GLOBAL__N_110VectorSubs5visitEPKNS0_3ForE'/>
