<def f='halide/llvm-install/include/llvm/IR/Constants.h' l='202' ll='204' type='bool llvm::ConstantInt::isZero() const'/>
<use f='halide/llvm-install/include/llvm/IR/Operator.h' l='524' u='c' c='_ZNK4llvm11GEPOperator17hasAllZeroIndicesEv'/>
<use f='halide/llvm-install/include/llvm/IR/IntrinsicInst.h' l='654' u='c' c='_ZNK4llvm12MemIntrinsic10isVolatileEv'/>
<doc f='halide/llvm-install/include/llvm/IR/Constants.h' l='199'>/// This is just a convenience method to make client code smaller for a
  /// common code. It also correctly performs the comparison without the
  /// potential for an assertion from getZExtValue().</doc>
<use f='halide/src/CodeGen_Internal.cpp' l='641' u='c' c='_ZN6Halide8Internal11get_md_boolEPN4llvm8MetadataERb'/>
