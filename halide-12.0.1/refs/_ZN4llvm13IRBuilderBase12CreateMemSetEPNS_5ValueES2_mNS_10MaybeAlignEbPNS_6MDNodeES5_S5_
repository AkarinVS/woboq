<def f='halide/llvm-install/include/llvm/IR/IRBuilder.h' l='580' ll='586' type='llvm::CallInst * llvm::IRBuilderBase::CreateMemSet(llvm::Value * Ptr, llvm::Value * Val, uint64_t Size, llvm::MaybeAlign Align, bool isVolatile = false, llvm::MDNode * TBAATag = nullptr, llvm::MDNode * ScopeTag = nullptr, llvm::MDNode * NoAliasTag = nullptr)'/>
<doc f='halide/llvm-install/include/llvm/IR/IRBuilder.h' l='570'>//===--------------------------------------------------------------------===//
  // Intrinsic creation methods
  //===--------------------------------------------------------------------===//

  /// Create and insert a memset to the specified pointer and the
  /// specified value.
  ///
  /// If the pointer isn&apos;t an i8*, it will be converted. If a TBAA tag is
  /// specified, it will be added to the instruction. Likewise with alias.scope
  /// and noalias tags.</doc>
<use f='halide/src/CodeGen_LLVM.cpp' l='4665' u='c' c='_ZN6Halide8Internal12CodeGen_LLVM22create_alloca_at_entryEPN4llvm4TypeEibRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
