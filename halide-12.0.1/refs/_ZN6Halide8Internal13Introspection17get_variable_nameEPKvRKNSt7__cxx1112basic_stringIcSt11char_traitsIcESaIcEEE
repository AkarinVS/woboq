<dec f='halide/build/include/Halide.h' l='22983' type='std::string Halide::Internal::Introspection::get_variable_name(const void * , const std::string &amp; expected_type)'/>
<use f='halide/build/include/Halide.h' l='23043' u='c' c='_ZN6Halide8InternalL19check_introspectionEPKvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_SA_i'/>
<doc f='halide/build/include/Halide.h' l='22979'>/** Get the name of a stack variable from its address. The stack
 * variable must be in a compilation unit compiled with -g to
 * work. The expected type helps distinguish between variables at the
 * same address, e.g a class instance vs its first member. */</doc>
<dec f='halide/src/Introspection.h' l='23' type='std::string Halide::Internal::Introspection::get_variable_name(const void * , const std::string &amp; expected_type)'/>
<use f='halide/src/Introspection.h' l='83' u='c' c='_ZN6Halide8InternalL19check_introspectionEPKvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_SA_i'/>
<doc f='halide/src/Introspection.h' l='19'>/** Get the name of a stack variable from its address. The stack
 * variable must be in a compilation unit compiled with -g to
 * work. The expected type helps distinguish between variables at the
 * same address, e.g a class instance vs its first member. */</doc>
<def f='halide/src/Introspection.cpp' l='2245' ll='2261' type='std::string Halide::Internal::Introspection::get_variable_name(const void * var, const std::string &amp; expected_type)'/>
<use f='halide/src/Util.cpp' l='251' u='c' c='_ZN6Halide8Internal16make_entity_nameEPvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEc'/>
