<dec f='halide/build/include/Halide.h' l='18327' type='std::vector&lt;Argument&gt; Halide::Func::infer_arguments() const'/>
<doc f='halide/build/include/Halide.h' l='18319'>/** Infer the arguments to the Func, sorted into a canonical order:
     * all buffers (sorted alphabetically by name), followed by all non-buffers
     * (sorted alphabetically by name).
     This lets you write things like:
     \code
     func.compile_to_assembly(&quot;/dev/stdout&quot;, func.infer_arguments());
     \endcode
     */</doc>
<use f='halide/python_bindings/src/PyFunc.cpp' l='339' u='a' c='_ZN6Halide14PythonBindings11define_funcERN8pybind117module_E'/>
<dec f='halide/src/Func.h' l='2447' type='std::vector&lt;Argument&gt; Halide::Func::infer_arguments() const'/>
<doc f='halide/src/Func.h' l='2439'>/** Infer the arguments to the Func, sorted into a canonical order:
     * all buffers (sorted alphabetically by name), followed by all non-buffers
     * (sorted alphabetically by name).
     This lets you write things like:
     \code
     func.compile_to_assembly(&quot;/dev/stdout&quot;, func.infer_arguments());
     \endcode
     */</doc>
<def f='halide/src/Func.cpp' l='3154' ll='3156' type='vector&lt;Halide::Argument&gt; Halide::Func::infer_arguments() const'/>
