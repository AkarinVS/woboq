<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/core/api/flatbuffer_conversions.h' l='251' type='TfLiteStatus tflite::ParsePow(const tflite::Operator * op, tflite::ErrorReporter * error_reporter, tflite::BuiltinDataAllocator * allocator, void ** builtin_data)'/>
<use f='halide/build-apps/_deps/tflite-src/tensorflow/lite/core/api/flatbuffer_conversions.cc' l='361' u='c' c='_ZN6tflite12_GLOBAL__N_117ParseOpDataTfLiteEPKNS_8OperatorENS_15BuiltinOperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv'/>
<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/core/api/flatbuffer_conversions.cc' l='1612' ll='1615' type='TfLiteStatus tflite::ParsePow(const tflite::Operator * , tflite::ErrorReporter * , tflite::BuiltinDataAllocator * , void ** )'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/core/api/flatbuffer_conversions.cc' l='1609'>// We have this parse function instead of directly returning kTfLiteOk from the
// switch-case in ParseOpData because this function is used as part of the
// selective registration for the OpResolver implementation in micro.</doc>
