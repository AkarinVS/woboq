<dec f='halide/build/include/Halide.h' l='17801' type='Halide::Func &amp; Halide::Func::gpu_blocks(const Halide::VarOrRVar &amp; block_x, Halide::DeviceAPI device_api = DeviceAPI::Default_GPU)'/>
<doc f='halide/build/include/Halide.h' l='17796'>/** Tell Halide that the following dimensions correspond to GPU
     * block indices. This is useful for scheduling stages that will
     * run serially within each GPU block. If the selected target is
     * not ptx, this just marks those dimensions as parallel. */
    // @{</doc>
<dec f='halide/src/Func.h' l='1921' type='Halide::Func &amp; Halide::Func::gpu_blocks(const Halide::VarOrRVar &amp; block_x, Halide::DeviceAPI device_api = DeviceAPI::Default_GPU)'/>
<doc f='halide/src/Func.h' l='1916'>/** Tell Halide that the following dimensions correspond to GPU
     * block indices. This is useful for scheduling stages that will
     * run serially within each GPU block. If the selected target is
     * not ptx, this just marks those dimensions as parallel. */
    // @{</doc>
<def f='halide/src/Func.cpp' l='2425' ll='2429' type='Halide::Func &amp; Halide::Func::gpu_blocks(const Halide::VarOrRVar &amp; bx, Halide::DeviceAPI device_api = DeviceAPI::Default_GPU)'/>
<use f='halide/tutorial/lesson_12_using_the_gpu.cpp' l='146' u='c' c='_ZN10MyPipeline16schedule_for_gpuEv'/>
