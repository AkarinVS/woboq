<dec f='halide/build/include/Halide.h' l='2984' type='std::string Halide::Internal::file_make_temp(const std::string &amp; prefix, const std::string &amp; suffix)'/>
<use f='halide/build/include/Halide.h' l='3041' u='c' c='_ZN6Halide8Internal13TemporaryFileC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_'/>
<doc f='halide/build/include/Halide.h' l='2974'>/** Create a unique file with a name of the form prefixXXXXXsuffix in an arbitrary
 * (but writable) directory; this is typically /tmp, but the specific
 * location is not guaranteed. (Note that the exact form of the file name
 * may vary; in particular, the suffix may be ignored on Windows.)
 * The file is created (but not opened), thus this can be called from
 * different threads (or processes, e.g. when building with parallel make)
 * without risking collision. Note that if this file is used as a temporary
 * file, the caller is responsibly for deleting it. Neither the prefix nor suffix
 * may contain a directory separator.
 */</doc>
<dec f='halide/src/Util.h' l='232' type='std::string Halide::Internal::file_make_temp(const std::string &amp; prefix, const std::string &amp; suffix)'/>
<use f='halide/src/Util.h' l='289' u='c' c='_ZN6Halide8Internal13TemporaryFileC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_'/>
<doc f='halide/src/Util.h' l='222'>/** Create a unique file with a name of the form prefixXXXXXsuffix in an arbitrary
 * (but writable) directory; this is typically /tmp, but the specific
 * location is not guaranteed. (Note that the exact form of the file name
 * may vary; in particular, the suffix may be ignored on Windows.)
 * The file is created (but not opened), thus this can be called from
 * different threads (or processes, e.g. when building with parallel make)
 * without risking collision. Note that if this file is used as a temporary
 * file, the caller is responsibly for deleting it. Neither the prefix nor suffix
 * may contain a directory separator.
 */</doc>
<def f='halide/src/Util.cpp' l='391' ll='418' type='std::string Halide::Internal::file_make_temp(const std::string &amp; prefix, const std::string &amp; suffix)'/>
