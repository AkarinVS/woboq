<def f='halide/llvm-install/include/llvm/Support/MathExtras.h' l='684' ll='692' type='uint64_t llvm::NextPowerOf2(uint64_t A)'/>
<use f='halide/llvm-install/include/llvm/Support/MathExtras.h' l='706' u='c' c='_ZN4llvm12PowerOf2CeilEm'/>
<use f='halide/llvm-install/include/llvm/ADT/DenseMap.h' l='392' u='c' c='_ZN4llvm12DenseMapBase31getMinBucketToReserveForEntriesEj'/>
<use f='halide/llvm-install/include/llvm/ADT/DenseMap.h' l='806' u='c' c='_ZN4llvm8DenseMap4growEj'/>
<use f='halide/llvm-install/include/llvm/ADT/DenseMap.h' l='1040' u='c' c='_ZN4llvm13SmallDenseMap4growEj'/>
<use f='halide/llvm-install/include/llvm/Support/TypeSize.h' l='364' u='c' c='_ZNK4llvm14LinearPolySize23coefficientNextPowerOf2Ev'/>
<use f='halide/llvm-install/include/llvm/Support/Allocator.h' l='437' u='c' c='_ZnwmRN4llvm20BumpPtrAllocatorImplIT_XT0_EXT1_EXT2_EEE'/>
<doc f='halide/llvm-install/include/llvm/Support/MathExtras.h' l='682'>/// Returns the next power of two (in 64-bits) that is strictly greater than A.
/// Returns zero on overflow.</doc>
