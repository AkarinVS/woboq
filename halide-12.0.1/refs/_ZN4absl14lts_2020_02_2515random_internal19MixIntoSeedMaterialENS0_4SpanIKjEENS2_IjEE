<dec f='halide/build-apps/abseil-cpp/absl/random/internal/seed_material.h' l='90' type='void absl::lts_2020_02_25::random_internal::MixIntoSeedMaterial(absl::Span&lt;const uint32_t&gt; sequence, absl::Span&lt;uint32_t&gt; seed_material)'/>
<doc f='halide/build-apps/abseil-cpp/absl/random/internal/seed_material.h' l='83'>// Mixes given sequence of values with into given sequence of seed material.
// Time complexity of this function is O(sequence.size() *
// seed_material.size()).
//
// Algorithm is based on code available at
// https://gist.github.com/imneme/540829265469e673d045
// by Melissa O&apos;Neill.</doc>
<def f='halide/build-apps/abseil-cpp/absl/random/internal/seed_material.cc' l='168' ll='198' type='void absl::lts_2020_02_25::random_internal::MixIntoSeedMaterial(absl::Span&lt;const uint32_t&gt; sequence, absl::Span&lt;uint32_t&gt; seed_material)'/>
<use f='halide/build-apps/abseil-cpp/absl/random/internal/salted_seed_seq.h' l='111' u='c' c='_ZN4absl14lts_2020_02_2515random_internal13SaltedSeedSeq19generate_contiguousENS0_4SpanIjEE'/>
