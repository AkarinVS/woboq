<def f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1452' ll='1459' type='Offset&lt;flatbuffers::String&gt; flatbuffers::FlatBufferBuilder::CreateString(const char * str, size_t len)'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1465' u='c' c='_ZN11flatbuffers17FlatBufferBuilder12CreateStringEPKc'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1472' u='c' c='_ZN11flatbuffers17FlatBufferBuilder12CreateStringEPc'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1479' u='c' c='_ZN11flatbuffers17FlatBufferBuilder12CreateStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1497' u='c' c='_ZN11flatbuffers17FlatBufferBuilder12CreateStringEPKNS_6StringE'/>
<use f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1520' u='c' c='_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm'/>
<doc f='halide/build-apps/flatbuffers/include/flatbuffers/flatbuffers.h' l='1446'>/// @endcond

  /// @brief Store a string in the buffer, which can contain any binary data.
  /// @param[in] str A const char pointer to the data to be stored as a string.
  /// @param[in] len The number of bytes that should be stored from `str`.
  /// @return Returns the offset in the buffer where the string starts.</doc>
