<dec f='halide/build/include/Halide.h' l='19215' type='void Halide::Internal::CodeGen_C::create_assertion(const std::string &amp; id_cond, const Halide::Expr &amp; message)'/>
<dec f='halide/src/CodeGen_C.h' l='95' type='void Halide::Internal::CodeGen_C::create_assertion(const std::string &amp; id_cond, const Halide::Expr &amp; message)'/>
<def f='halide/src/CodeGen_C.cpp' l='2555' ll='2569' type='void Halide::Internal::CodeGen_C::create_assertion(const std::string &amp; id_cond, const Halide::Expr &amp; message)'/>
<use f='halide/src/CodeGen_C.cpp' l='2572' u='c' c='_ZN6Halide8Internal9CodeGen_C16create_assertionERKNS_4ExprES4_'/>
<use f='halide/src/CodeGen_C.cpp' l='2789' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_8AllocateE'/>
<doc f='halide/src/CodeGen_C.cpp' l='2551'>// Halide asserts have different semantics to C asserts.  They&apos;re
// supposed to clean up and make the containing function return
// -1, so we can&apos;t use the C version of assert. Instead we convert
// to an if statement.</doc>
