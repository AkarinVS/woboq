<dec f='halide/halide-install/include/Halide.h' l='21117' type='std::map&lt;std::string, Box&gt; Halide::Internal::inference_bounds(const std::vector&lt;Func&gt; &amp; funcs, const std::vector&lt;Box&gt; &amp; output_bounds)'/>
<doc f='halide/halide-install/include/Halide.h' l='21113'>/**
 * Compute the bounds of funcs. The bounds represent a conservative region
 * that is used by the &quot;consumers&quot; of the function, except of itself.
 */</doc>
<dec f='halide/build/include/Halide.h' l='21117' type='std::map&lt;std::string, Box&gt; Halide::Internal::inference_bounds(const std::vector&lt;Func&gt; &amp; funcs, const std::vector&lt;Box&gt; &amp; output_bounds)'/>
<doc f='halide/build/include/Halide.h' l='21113'>/**
 * Compute the bounds of funcs. The bounds represent a conservative region
 * that is used by the &quot;consumers&quot; of the function, except of itself.
 */</doc>
<dec f='halide/src/DerivativeUtils.h' l='54' type='std::map&lt;std::string, Box&gt; Halide::Internal::inference_bounds(const std::vector&lt;Func&gt; &amp; funcs, const std::vector&lt;Box&gt; &amp; output_bounds)'/>
<doc f='halide/src/DerivativeUtils.h' l='50'>/**
 * Compute the bounds of funcs. The bounds represent a conservative region
 * that is used by the &quot;consumers&quot; of the function, except of itself.
 */</doc>
<def f='halide/src/DerivativeUtils.cpp' l='214' ll='302' type='map&lt;std::string, Halide::Internal::Box&gt; Halide::Internal::inference_bounds(const vector&lt;Halide::Func&gt; &amp; funcs, const vector&lt;Halide::Internal::Box&gt; &amp; output_bounds)'/>
<use f='halide/src/DerivativeUtils.cpp' l='306' u='c' c='_ZN6Halide8Internal16inference_boundsB5cxx11ERKNS_4FuncERKNS0_3BoxE'/>
<use f='halide/src/autoschedulers/li2018/GradientAutoscheduler.cpp' l='18' u='c' c='_ZN6Halide8Internal13Autoscheduler12_GLOBAL__N_116inference_boundsB5cxx11ERKSt6vectorINS0_8FunctionESaIS4_EERKS3_INS0_3BoxESaIS9_EE'/>
