<def f='halide/build/include/Halide.h' l='26532' ll='26539' type='Halide::NamesInterface::Pipeline Halide::Generator::build_pipeline_impl(double )'/>
<doc f='halide/build/include/Halide.h' l='26523'>// Implementations for build_pipeline_impl(), specialized on whether we
    // have build() or generate()/schedule() methods.

    // MSVC apparently has some weirdness with the usual sfinae tricks
    // for detecting method-shaped things, so we can&apos;t actually use
    // the helpers above outside of static_assert. Instead we make as
    // many overloads as we can exist, and then use C++&apos;s preference
    // for treating a 0 as an int rather than a double to choose one
    // of them.</doc>
<def f='halide/src/Generator.h' l='3598' ll='3605' type='Halide::NamesInterface::Pipeline Halide::Generator::build_pipeline_impl(double )'/>
<doc f='halide/src/Generator.h' l='3589'>// Implementations for build_pipeline_impl(), specialized on whether we
    // have build() or generate()/schedule() methods.

    // MSVC apparently has some weirdness with the usual sfinae tricks
    // for detecting method-shaped things, so we can&apos;t actually use
    // the helpers above outside of static_assert. Instead we make as
    // many overloads as we can exist, and then use C++&apos;s preference
    // for treating a 0 as an int rather than a double to choose one
    // of them.</doc>
