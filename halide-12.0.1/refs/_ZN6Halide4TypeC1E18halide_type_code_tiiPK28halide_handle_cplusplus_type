<def f='halide/build/include/Halide.h' l='3519' ll='3521' type='void Halide::Type::Type(halide_type_code_t code, int bits, int lanes, const halide_handle_cplusplus_type * handle_type = nullptr)'/>
<use f='halide/build/include/Halide.h' l='3564' u='c' c='_ZNK6Halide4Type9with_codeE18halide_type_code_t'/>
<use f='halide/build/include/Halide.h' l='3570' u='c' c='_ZNK6Halide4Type9with_bitsEi'/>
<use f='halide/build/include/Halide.h' l='3577' u='c' c='_ZNK6Halide4Type10with_lanesEi'/>
<use f='halide/build/include/Halide.h' l='3720' u='c' c='_ZN6Halide3IntEii'/>
<use f='halide/build/include/Halide.h' l='3725' u='c' c='_ZN6Halide4UIntEii'/>
<use f='halide/build/include/Halide.h' l='3730' u='c' c='_ZN6Halide5FloatEii'/>
<use f='halide/build/include/Halide.h' l='3735' u='c' c='_ZN6Halide6BFloatEii'/>
<use f='halide/build/include/Halide.h' l='3745' u='c' c='_ZN6Halide6HandleEiPK28halide_handle_cplusplus_type'/>
<doc f='halide/build/include/Halide.h' l='3515'>/** Construct a runtime representation of a Halide type from:
     * code: The fundamental type from an enum.
     * bits: The bit size of one element.
     * lanes: The number of vector elements in the type. */</doc>
<def f='halide/src/Type.h' l='298' ll='300' type='void Halide::Type::Type(halide_type_code_t code, int bits, int lanes, const halide_handle_cplusplus_type * handle_type = nullptr)'/>
<use f='halide/src/Type.h' l='343' u='c' c='_ZNK6Halide4Type9with_codeE18halide_type_code_t'/>
<use f='halide/src/Type.h' l='349' u='c' c='_ZNK6Halide4Type9with_bitsEi'/>
<use f='halide/src/Type.h' l='356' u='c' c='_ZNK6Halide4Type10with_lanesEi'/>
<use f='halide/src/Type.h' l='499' u='c' c='_ZN6Halide3IntEii'/>
<use f='halide/src/Type.h' l='504' u='c' c='_ZN6Halide4UIntEii'/>
<use f='halide/src/Type.h' l='509' u='c' c='_ZN6Halide5FloatEii'/>
<use f='halide/src/Type.h' l='514' u='c' c='_ZN6Halide6BFloatEii'/>
<use f='halide/src/Type.h' l='524' u='c' c='_ZN6Halide6HandleEiPK28halide_handle_cplusplus_type'/>
<doc f='halide/src/Type.h' l='294'>/** Construct a runtime representation of a Halide type from:
     * code: The fundamental type from an enum.
     * bits: The bit size of one element.
     * lanes: The number of vector elements in the type. */</doc>
<use f='halide/src/HexagonOptimize.cpp' l='217' u='c'/>
<use f='halide/src/HexagonOptimize.cpp' l='218' u='c'/>
<use f='halide/src/HexagonOptimize.cpp' l='219' u='c'/>
<use f='halide/src/HexagonOptimize.cpp' l='220' u='c'/>
<use f='halide/src/HexagonOptimize.cpp' l='221' u='c'/>
<use f='halide/src/HexagonOptimize.cpp' l='222' u='c'/>
<use f='halide/src/HexagonOptimize.cpp' l='223' u='c'/>
<use f='halide/src/HexagonOptimize.cpp' l='224' u='c'/>
<use f='halide/src/HexagonOptimize.cpp' l='577' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116OptimizePatterns12find_mpyaddsERKNS_4ExprE'/>
<use f='halide/src/HexagonOptimize.cpp' l='676' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116OptimizePatterns12find_mpyaddsERKNS_4ExprE'/>
<use f='halide/src/HexagonOptimize.cpp' l='1179' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_120VectorReducePatterns5visitEPKNS0_12VectorReduceE'/>
<use f='halide/src/HexagonOptimize.cpp' l='1276' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_120VectorReducePatterns5visitEPKNS0_12VectorReduceE'/>
