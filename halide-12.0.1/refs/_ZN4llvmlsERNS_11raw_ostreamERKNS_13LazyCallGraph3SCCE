<def f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='446' ll='462' type='llvm::raw_ostream &amp; llvm::operator&lt;&lt;(llvm::raw_ostream &amp; OS, const llvm::LazyCallGraph::SCC &amp; C)'/>
<use f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='520' u='c' c='_ZNK4llvm13LazyCallGraph3SCC7getNameB5cxx11Ev'/>
<use f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='575' u='c' c='_ZN4llvmlsERNS_11raw_ostreamERKNS_13LazyCallGraph6RefSCCE'/>
<use f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='578' u='c' c='_ZN4llvmlsERNS_11raw_ostreamERKNS_13LazyCallGraph6RefSCCE'/>
<doc f='halide/llvm-install/include/llvm/Analysis/LazyCallGraph.h' l='439'>/// Print a short descrtiption useful for debugging or logging.
    ///
    /// We print the function names in the SCC wrapped in &apos;()&apos;s and skipping
    /// the middle functions if there are a large number.
    //
    // Note: this is defined inline to dodge issues with GCC&apos;s interpretation
    // of enclosing namespaces for friend function declarations.</doc>
