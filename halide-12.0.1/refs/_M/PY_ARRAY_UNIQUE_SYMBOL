<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/python/interpreter_wrapper/numpy.h' l='44'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/python/interpreter_wrapper/numpy.h' l='25'>// To handle PyArray_* calles, numpy defines a static lookup table called
// PyArray_API, or PY_ARRAY_UNIQUE_SYMBOL, if defined. This causes the
// PyArray_* pointers to be different for different translation units, unless
// we take care of selectivel defined NO_IMPORT_ARRAY.
//
// Virtually every usage will define NO_IMPORT_ARRAY, and will have access to
// the lookup table via:
//   extern void **PyArray_API;
// In numpy.cc we will define TFLITE_IMPORT_NUMPY, effectively disabling that
// and instead using:
//   void **PyArray_API;
// which is initialized when ImportNumpy() is called.
//
// If we don&apos;t define PY_ARRAY_UNIQUE_SYMBOL then PyArray_API is a static
// variable, which causes strange crashes when the pointers are used across
// translation unit boundaries.
//
// For more info see https://sourceforge.net/p/numpy/mailman/message/5700519
// See also tensorflow/python/lib/core/numpy.h for a similar approach.</doc>
