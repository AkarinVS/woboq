<dec f='halide/build-apps/abseil-cpp/absl/base/internal/thread_annotations.h' l='86'/>
<doc f='halide/build-apps/abseil-cpp/absl/base/internal/thread_annotations.h' l='66'>// PT_GUARDED_BY()
//
// Documents if the memory location pointed to by a pointer should be guarded
// by a mutex when dereferencing the pointer.
//
// Example:
//   class Foo {
//     Mutex mu_;
//     int *p1_ PT_GUARDED_BY(mu_);
//     ...
//   };
//
// Note that a pointer variable to a shared memory location could itself be a
// shared variable.
//
// Example:
//
//   // `q_`, guarded by `mu1_`, points to a shared memory location that is
//   // guarded by `mu2_`:
//   int *q_ GUARDED_BY(mu1_) PT_GUARDED_BY(mu2_);</doc>
