<dec f='halide/build-apps/abseil-cpp/absl/base/internal/direct_mmap.h' l='114'/>
<use f='halide/build-apps/abseil-cpp/absl/base/internal/direct_mmap.h' l='116' u='c'/>
<use f='halide/build-apps/abseil-cpp/absl/base/internal/direct_mmap.h' l='116' u='c'/>
<use f='halide/build-apps/abseil-cpp/absl/base/internal/direct_mmap.h' l='117' u='c'/>
<use f='halide/build-apps/abseil-cpp/absl/base/internal/direct_mmap.h' l='117' u='c'/>
<use f='halide/build-apps/abseil-cpp/absl/base/internal/direct_mmap.h' l='118' u='c'/>
<use f='halide/build-apps/abseil-cpp/absl/base/internal/direct_mmap.h' l='119' u='w'/>
<doc f='halide/build-apps/abseil-cpp/absl/base/internal/direct_mmap.h' l='108'>// The x32 ABI has 32 bit longs, but the syscall interface is 64 bit.
// We need to explicitly cast to an unsigned 64 bit type to avoid implicit
// sign extension.  We can&apos;t cast pointers directly because those are
// 32 bits, and gcc will dump ugly warnings about casting from a pointer
// to an integer of a different size. We also need to make sure __off64_t
// isn&apos;t truncated to 32-bits under x32.</doc>
