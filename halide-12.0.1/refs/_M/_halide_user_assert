<dec f='halide/halide-install/include/Halide.h' l='2482'/>
<doc f='halide/halide-install/include/Halide.h' l='2478'>// The nicely named versions get cleaned up at the end of Halide.h,
// but user code might want to do halide-style user_asserts (e.g. the
// Extern macros introduce calls to user_assert), so for that purpose
// we define an equivalent macro that can be used outside of Halide.h</doc>
<use f='halide/apps/fft/fft_generator.cpp' l='88' u='c'/>
<dec f='halide/build/include/Halide.h' l='2482'/>
<doc f='halide/build/include/Halide.h' l='2478'>// The nicely named versions get cleaned up at the end of Halide.h,
// but user code might want to do halide-style user_asserts (e.g. the
// Extern macros introduce calls to user_assert), so for that purpose
// we define an equivalent macro that can be used outside of Halide.h</doc>
<use f='halide/python_bindings/src/PyIROperator.cpp' l='81' u='c'/>
<use f='halide/python_bindings/src/PyIROperator.cpp' l='83' u='c'/>
<use f='halide/python_bindings/src/PyIROperator.cpp' l='110' u='c'/>
<use f='halide/python_bindings/stub/PyStubImpl.cpp' l='109' u='c'/>
<use f='halide/python_bindings/stub/PyStubImpl.cpp' l='121' u='c'/>
<use f='halide/python_bindings/stub/PyStubImpl.cpp' l='137' u='c'/>
<use f='halide/python_bindings/stub/PyStubImpl.cpp' l='155' u='c'/>
<use f='halide/python_bindings/stub/PyStubImpl.cpp' l='162' u='c'/>
<use f='halide/python_bindings/stub/PyStubImpl.cpp' l='164' u='c'/>
<use f='halide/python_bindings/stub/PyStubImpl.cpp' l='172' u='c'/>
<use f='halide/python_bindings/stub/PyStubImpl.cpp' l='174' u='c'/>
<dec f='halide/src/Error.h' l='146'/>
<doc f='halide/src/Error.h' l='142'>// The nicely named versions get cleaned up at the end of Halide.h,
// but user code might want to do halide-style user_asserts (e.g. the
// Extern macros introduce calls to user_assert), so for that purpose
// we define an equivalent macro that can be used outside of Halide.h</doc>
