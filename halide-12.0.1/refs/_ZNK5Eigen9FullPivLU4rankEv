<def f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='330' ll='339' type='Eigen::Index Eigen::FullPivLU::rank() const'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='350' u='c' c='_ZNK5Eigen9FullPivLU17dimensionOfKernelEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='363' u='c' c='_ZNK5Eigen9FullPivLU11isInjectiveEv'/>
<use f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='376' u='c' c='_ZNK5Eigen9FullPivLU12isSurjectiveEv'/>
<doc f='halide/build-apps/eigen/Eigen/src/LU/FullPivLU.h' l='324'>/** \returns the rank of the matrix of which *this is the LU decomposition.
      *
      * \note This method has to determine which pivots should be considered nonzero.
      *       For that, it uses the threshold value that you can control by calling
      *       setThreshold(const RealScalar&amp;).
      */</doc>
