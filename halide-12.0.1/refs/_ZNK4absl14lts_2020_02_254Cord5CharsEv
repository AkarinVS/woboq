<dec f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='433' type='absl::lts_2020_02_25::Cord::CharRange absl::lts_2020_02_25::Cord::Chars() const'/>
<def f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='1040' type='Cord::CharRange absl::lts_2020_02_25::Cord::Chars() const'/>
<doc f='halide/build-apps/abseil-cpp/absl/strings/cord.h' l='417'>// Returns a range for iterating over the characters of a `Cord` with a
  // range-based for-loop.
  //
  // Example:
  //
  //   void ProcessCord(const Cord&amp; cord) {
  //     for (char c : cord.Chars()) { ... }
  //   }
  //
  // Note that the ordinary caveats of temporary lifetime extension apply:
  //
  //   void Process() {
  //     for (char c : CordFactory().Chars()) {
  //       // The temporary Cord returned by CordFactory has been destroyed!
  //     }
  //   }</doc>
