<def f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1107' ll='1111' type='absl::lts_2020_02_25::Time absl::lts_2020_02_25::FromCivil(absl::lts_2020_02_25::CivilSecond ct, absl::lts_2020_02_25::TimeZone tz)'/>
<doc f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1095'>// FromCivil()
//
// Helper for TimeZone::At(CivilSecond) that provides &quot;order-preserving
// semantics.&quot; If the civil time maps to a unique time, that time is
// returned. If the civil time is repeated in the given time zone, the
// time using the pre-transition offset is returned. Otherwise, the
// civil time is skipped in the given time zone, and the transition time
// is returned. This means that for any two civil times, ct1 and ct2,
// (ct1 &lt; ct2) =&gt; (FromCivil(ct1) &lt;= FromCivil(ct2)), the equal case
// being when two non-existent civil times map to the same transition time.
//
// Note: Accepts civil times of any alignment.</doc>
<use f='halide/build-apps/abseil-cpp/absl/time/civil_time.cc' l='43' u='c' c='_ZN4absl14lts_2020_02_2512_GLOBAL__N_113FormatYearAndB5cxx11ENS0_11string_viewENS0_13time_internal4cctz6detail10civil_timeINS3_10second_tagEEE'/>
