<dec f='halide/halide-install/include/Halide.h' l='31765' type='Halide::Internal::Stmt Halide::Internal::inject_tracing(Halide::Internal::Stmt , const std::string &amp; pipeline_name, bool trace_pipeline, const std::map&lt;std::string, Function&gt; &amp; env, const std::vector&lt;Function&gt; &amp; outputs, const Halide::Target &amp; Target)'/>
<doc f='halide/halide-install/include/Halide.h' l='31761'>/** Take a statement representing a halide pipeline, inject calls to
 * tracing functions at interesting points, such as
 * allocations. Should be done before storage flattening, but after
 * all bounds inference. */</doc>
<dec f='halide/build/include/Halide.h' l='31765' type='Halide::Internal::Stmt Halide::Internal::inject_tracing(Halide::Internal::Stmt , const std::string &amp; pipeline_name, bool trace_pipeline, const std::map&lt;std::string, Function&gt; &amp; env, const std::vector&lt;Function&gt; &amp; outputs, const Halide::Target &amp; Target)'/>
<doc f='halide/build/include/Halide.h' l='31761'>/** Take a statement representing a halide pipeline, inject calls to
 * tracing functions at interesting points, such as
 * allocations. Should be done before storage flattening, but after
 * all bounds inference. */</doc>
<dec f='halide/src/Tracing.h' l='26' type='Halide::Internal::Stmt Halide::Internal::inject_tracing(Halide::Internal::Stmt , const std::string &amp; pipeline_name, bool trace_pipeline, const std::map&lt;std::string, Function&gt; &amp; env, const std::vector&lt;Function&gt; &amp; outputs, const Halide::Target &amp; Target)'/>
<use f='halide/src/Lower.cpp' l='163' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110lower_implERKSt6vectorINS0_8FunctionESaIS3_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS7388887'/>
<doc f='halide/src/Tracing.h' l='22'>/** Take a statement representing a halide pipeline, inject calls to
 * tracing functions at interesting points, such as
 * allocations. Should be done before storage flattening, but after
 * all bounds inference. */</doc>
<def f='halide/src/Tracing.cpp' l='335' ll='468' type='Halide::Internal::Stmt Halide::Internal::inject_tracing(Halide::Internal::Stmt s, const std::string &amp; pipeline_name, bool trace_pipeline, const map&lt;std::string, Halide::Internal::Function&gt; &amp; env, const vector&lt;Halide::Internal::Function&gt; &amp; outputs, const Halide::Target &amp; t)'/>
