<dec f='halide/build-apps/abseil-cpp/absl/flags/internal/commandlineflag.h' l='174' type='bool absl::lts_2020_02_25::flags_internal::CommandLineFlag::SetFromString(absl::string_view value, flags_internal::FlagSettingMode set_mode, flags_internal::ValueSource source, std::string * error)'/>
<ovr f='halide/build-apps/abseil-cpp/absl/flags/internal/flag.h' l='603' c='_ZN4absl14lts_2020_02_2514flags_internal4Flag13SetFromStringENS0_11string_viewENS1_15FlagSettingModeENS1_11ValueSourceEPNSt7__cxx1112basic_stringIcSt113100500'/>
<doc f='halide/build-apps/abseil-cpp/absl/flags/internal/commandlineflag.h' l='166'>// Sets the value of the flag based on specified std::string `value`. If the flag
  // was successfully set to new value, it returns true. Otherwise, sets `error`
  // to indicate the error, leaves the flag unchanged, and returns false. There
  // are three ways to set the flag&apos;s value:
  //  * Update the current flag value
  //  * Update the flag&apos;s default value
  //  * Update the current flag value if it was never set before
  // The mode is selected based on `set_mode` parameter.</doc>
<ovr f='halide/build-apps/abseil-cpp/absl/flags/internal/registry.cc' l='309' c='_ZN4absl14lts_2020_02_2514flags_internal12_GLOBAL__N_114RetiredFlagObj13SetFromStringENS0_11string_viewENS1_15FlagSettingModeENS1_11ValueSourceEPNSt7_3099639'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/type_erased.cc' l='59' u='c' c='_ZN4absl14lts_2020_02_2514flags_internal28SetCommandLineOptionWithModeENS0_11string_viewES2_NS1_15FlagSettingModeE'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/parse.cc' l='699' u='c' c='_ZN4absl14lts_2020_02_2514flags_internal20ParseCommandLineImplEiPPcNS1_14ArgvListActionENS1_16UsageFlagsActionENS1_15OnUndefinedFlagE'/>
