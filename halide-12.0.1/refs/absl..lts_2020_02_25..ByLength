<def f='halide/build-apps/abseil-cpp/absl/strings/str_split.h' l='212' ll='219'/>
<size>8</size>
<doc f='halide/build-apps/abseil-cpp/absl/strings/str_split.h' l='190'>// ByLength
//
// A delimiter for splitting into equal-length strings. The length argument to
// the constructor must be greater than 0.
//
// Note: this delimiter works with single-byte string data, but does not work
// with variable-width encodings, such as UTF-8.
//
// Example:
//
//   using absl::ByLength;
//   std::vector&lt;std::string&gt; v = absl::StrSplit(&quot;123456789&quot;, ByLength(3));

//   // v[0] == &quot;123&quot;, v[1] == &quot;456&quot;, v[2] == &quot;789&quot;
//
// Note that the string does not have to be a multiple of the fixed split
// length. In such a case, the last substring will be shorter.
//
//   using absl::ByLength;
//   std::vector&lt;std::string&gt; v = absl::StrSplit(&quot;12345&quot;, ByLength(2));
//
//   // v[0] == &quot;12&quot;, v[1] == &quot;34&quot;, v[2] == &quot;5&quot;</doc>
<fun r='_ZN4absl14lts_2020_02_258ByLengthC1El'/>
<fun r='_ZNK4absl14lts_2020_02_258ByLength4FindENS0_11string_viewEm'/>
<mbr r='absl::lts_2020_02_25::ByLength::length_' o='0' t='const ptrdiff_t'/>
