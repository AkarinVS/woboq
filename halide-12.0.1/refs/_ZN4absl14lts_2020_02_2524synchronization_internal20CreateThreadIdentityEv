<dec f='halide/build-apps/abseil-cpp/absl/synchronization/internal/create_thread_identity.h' l='37' type='base_internal::ThreadIdentity * absl::lts_2020_02_25::synchronization_internal::CreateThreadIdentity()'/>
<use f='halide/build-apps/abseil-cpp/absl/synchronization/internal/create_thread_identity.h' l='51' u='c' c='_ZN4absl14lts_2020_02_2524synchronization_internal32GetOrCreateCurrentThreadIdentityEv'/>
<dec f='halide/build-apps/abseil-cpp/absl/synchronization/internal/per_thread_sem.h' l='84' type='absl::base_internal::ThreadIdentity * absl::lts_2020_02_25::synchronization_internal::CreateThreadIdentity()'/>
<doc f='halide/build-apps/abseil-cpp/absl/synchronization/internal/create_thread_identity.h' l='35'>// Allocates and attaches a ThreadIdentity object for the calling thread.
// For private use only.</doc>
<def f='halide/build-apps/abseil-cpp/absl/synchronization/internal/create_thread_identity.cc' l='128' ll='134' type='base_internal::ThreadIdentity * absl::lts_2020_02_25::synchronization_internal::CreateThreadIdentity()'/>
<doc f='halide/build-apps/abseil-cpp/absl/synchronization/internal/create_thread_identity.cc' l='125'>// Allocates and attaches ThreadIdentity object for the calling thread.  Returns
// the new identity.
// REQUIRES: CurrentThreadIdentity(false) == nullptr</doc>
