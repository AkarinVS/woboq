<def f='halide/llvm-install/include/llvm/ADT/SmallVector.h' l='113' ll='117' type='void * llvm::SmallVectorTemplateCommon::getFirstEl() const'/>
<use f='halide/llvm-install/include/llvm/ADT/SmallVector.h' l='121' u='c' c='_ZN4llvm25SmallVectorTemplateCommonC1Em'/>
<use f='halide/llvm-install/include/llvm/ADT/SmallVector.h' l='124' u='c' c='_ZN4llvm25SmallVectorTemplateCommon8grow_podEmm'/>
<use f='halide/llvm-install/include/llvm/ADT/SmallVector.h' l='129' u='c' c='_ZNK4llvm25SmallVectorTemplateCommon7isSmallEv'/>
<use f='halide/llvm-install/include/llvm/ADT/SmallVector.h' l='133' u='c' c='_ZN4llvm25SmallVectorTemplateCommon12resetToSmallEv'/>
<doc f='halide/llvm-install/include/llvm/ADT/SmallVector.h' l='110'>/// Find the address of the first element.  For this pointer math to be valid
  /// with small-size of 0 for T with lots of alignment, it&apos;s important that
  /// SmallVectorStorage is properly-aligned even for small-size of 0.</doc>
