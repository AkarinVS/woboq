<dec f='halide/build-apps/abseil-cpp/absl/time/time.h' l='461' type='int64_t absl::lts_2020_02_25::ToInt64Nanoseconds(absl::lts_2020_02_25::Duration d)'/>
<use f='halide/build-apps/abseil-cpp/absl/time/time.h' l='1442' u='c' c='_ZN4absl14lts_2020_02_2513time_internal7ToInt64ENS0_8DurationESt5ratioILl1ELl1000000000EE'/>
<doc f='halide/build-apps/abseil-cpp/absl/time/time.h' l='446'>// ToInt64Nanoseconds()
// ToInt64Microseconds()
// ToInt64Milliseconds()
// ToInt64Seconds()
// ToInt64Minutes()
// ToInt64Hours()
//
// Helper functions that convert a Duration to an integral count of the
// indicated unit. These functions are shorthand for the `IDivDuration()`
// function above; see its documentation for details about overflow, etc.
//
// Example:
//
//   absl::Duration d = absl::Milliseconds(1500);
//   int64_t isec = absl::ToInt64Seconds(d);  // isec == 1</doc>
<def f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='541' ll='548' type='int64_t absl::lts_2020_02_25::ToInt64Nanoseconds(absl::lts_2020_02_25::Duration d)'/>
<doc f='halide/build-apps/abseil-cpp/absl/time/duration.cc' l='537'>//
// Conversion to other duration types.
//</doc>
