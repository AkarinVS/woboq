<dec f='halide/build-apps/abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.h' l='125' type='bool absl::lts_2020_02_25::time_internal::cctz::ParsePosixSpec(const std::string &amp; spec, absl::lts_2020_02_25::time_internal::cctz::PosixTimeZone * res)'/>
<use f='halide/build-apps/abseil-cpp/absl/time/internal/cctz/src/time_zone_info.cc' l='299' u='c' c='_ZN4absl14lts_2020_02_2513time_internal4cctz12TimeZoneInfo17ExtendTransitionsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS3_6HeaderE'/>
<doc f='halide/build-apps/abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.h' l='121'>// Breaks down a POSIX time-zone specification into its constituent pieces,
// filling in any missing values (DST offset, or start/end transition times)
// with the standard-defined defaults. Returns false if the specification
// could not be parsed (although some fields of *res may have been altered).</doc>
<def f='halide/build-apps/abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.cc' l='136' ll='154' type='bool absl::lts_2020_02_25::time_internal::cctz::ParsePosixSpec(const std::string &amp; spec, absl::lts_2020_02_25::time_internal::cctz::PosixTimeZone * res)'/>
<doc f='halide/build-apps/abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.cc' l='135'>// spec = std offset [ dst [ offset ] , datetime , datetime ]</doc>
