<use f='halide/halide-install/include/Halide.h' l='3835' c='_ZNK6Halide8Internal6IRNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/halide-install/include/Halide.h' l='3904' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/halide-install/include/Halide.h' l='3914' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/halide-install/include/Halide.h' l='3937' c='_ZNK6Halide8Internal8IRHandle6acceptEPNS0_9IRVisitorE'/>
<use f='halide/halide-install/include/Halide.h' l='6327' c='_ZNK6Halide8Internal12FuncSchedule6acceptEPNS0_9IRVisitorE'/>
<use f='halide/halide-install/include/Halide.h' l='6433' c='_ZNK6Halide8Internal13StageSchedule6acceptEPNS0_9IRVisitorE'/>
<use f='halide/halide-install/include/Halide.h' l='8641' c='_ZNK6Halide8Internal10Definition6acceptEPNS0_9IRVisitorE'/>
<use f='halide/halide-install/include/Halide.h' l='11898' c='_ZNK6Halide8Internal15ReductionDomain6acceptEPNS0_9IRVisitorE'/>
<def f='halide/halide-install/include/Halide.h' l='12801' ll='12860'/>
<ovr f='halide/halide-install/include/Halide.h' l='12865' c='Halide::Internal::IRGraphVisitor'/>
<use f='halide/halide-install/include/Halide.h' l='12865'/>
<ovr f='halide/halide-install/include/Halide.h' l='13141' c='Halide::Internal::FindAllCalls'/>
<use f='halide/halide-install/include/Halide.h' l='13141'/>
<use f='halide/halide-install/include/Halide.h' l='13704' c='_ZNK6Halide8Internal8Function6acceptEPNS0_9IRVisitorE'/>
<ovr f='halide/halide-install/include/Halide.h' l='18861' c='Halide::Internal::Closure'/>
<use f='halide/halide-install/include/Halide.h' l='18861'/>
<ovr f='halide/halide-install/include/Halide.h' l='19029' c='Halide::Internal::IRPrinter'/>
<use f='halide/halide-install/include/Halide.h' l='19029'/>
<ovr f='halide/halide-install/include/Halide.h' l='19796' c='Halide::Internal::CodeGen_LLVM'/>
<use f='halide/halide-install/include/Halide.h' l='19796'/>
<size>8</size>
<doc f='halide/halide-install/include/Halide.h' l='12797'>/** A base class for algorithms that need to recursively walk over the
 * IR. The default implementations just recursively walk over the
 * children. Override the ones you care about.
 */</doc>
<fun r='_ZN6Halide8Internal9IRVisitorC1Ev'/>
<fun r='_ZN6Halide8Internal9IRVisitorD1Ev'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_6IntImmE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7UIntImmE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8FloatImmE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_9StringImmE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4CastE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8VariableE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3AddE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3SubE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3MulE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3DivE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3ModE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3MinE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3MaxE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2EQE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2NEE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2LTE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2LEE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2GTE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2GEE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3AndE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2OrE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3NotE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_6SelectE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4LoadE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4RampE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_9BroadcastE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4CallE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3LetE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7LetStmtE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_10AssertStmtE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_16ProducerConsumerE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3ForE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_5StoreE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7ProvideE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8AllocateE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4FreeE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7RealizeE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_5BlockE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_10IfThenElseE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8EvaluateE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7ShuffleE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_12VectorReduceE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8PrefetchE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4ForkE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7AcquireE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_6AtomicE'/>
<use f='halide/build/include/Halide.h' l='3835' c='_ZNK6Halide8Internal6IRNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/build/include/Halide.h' l='3904' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/build/include/Halide.h' l='3914' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/build/include/Halide.h' l='3937' c='_ZNK6Halide8Internal8IRHandle6acceptEPNS0_9IRVisitorE'/>
<use f='halide/build/include/Halide.h' l='6327' c='_ZNK6Halide8Internal12FuncSchedule6acceptEPNS0_9IRVisitorE'/>
<use f='halide/build/include/Halide.h' l='6433' c='_ZNK6Halide8Internal13StageSchedule6acceptEPNS0_9IRVisitorE'/>
<use f='halide/build/include/Halide.h' l='8641' c='_ZNK6Halide8Internal10Definition6acceptEPNS0_9IRVisitorE'/>
<use f='halide/build/include/Halide.h' l='11898' c='_ZNK6Halide8Internal15ReductionDomain6acceptEPNS0_9IRVisitorE'/>
<def f='halide/build/include/Halide.h' l='12801' ll='12860'/>
<ovr f='halide/build/include/Halide.h' l='12865' c='Halide::Internal::IRGraphVisitor'/>
<use f='halide/build/include/Halide.h' l='12865'/>
<ovr f='halide/build/include/Halide.h' l='13141' c='Halide::Internal::FindAllCalls'/>
<use f='halide/build/include/Halide.h' l='13141'/>
<use f='halide/build/include/Halide.h' l='13704' c='_ZNK6Halide8Internal8Function6acceptEPNS0_9IRVisitorE'/>
<ovr f='halide/build/include/Halide.h' l='18861' c='Halide::Internal::Closure'/>
<use f='halide/build/include/Halide.h' l='18861'/>
<ovr f='halide/build/include/Halide.h' l='19029' c='Halide::Internal::IRPrinter'/>
<use f='halide/build/include/Halide.h' l='19029'/>
<ovr f='halide/build/include/Halide.h' l='19796' c='Halide::Internal::CodeGen_LLVM'/>
<use f='halide/build/include/Halide.h' l='19796'/>
<size>8</size>
<doc f='halide/build/include/Halide.h' l='12797'>/** A base class for algorithms that need to recursively walk over the
 * IR. The default implementations just recursively walk over the
 * children. Override the ones you care about.
 */</doc>
<fun r='_ZN6Halide8Internal9IRVisitorC1Ev'/>
<fun r='_ZN6Halide8Internal9IRVisitorD1Ev'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_6IntImmE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7UIntImmE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8FloatImmE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_9StringImmE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4CastE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8VariableE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3AddE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3SubE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3MulE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3DivE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3ModE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3MinE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3MaxE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2EQE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2NEE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2LTE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2LEE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2GTE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2GEE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3AndE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2OrE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3NotE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_6SelectE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4LoadE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4RampE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_9BroadcastE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4CallE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3LetE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7LetStmtE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_10AssertStmtE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_16ProducerConsumerE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3ForE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_5StoreE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7ProvideE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8AllocateE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4FreeE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7RealizeE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_5BlockE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_10IfThenElseE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8EvaluateE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7ShuffleE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_12VectorReduceE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8PrefetchE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4ForkE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7AcquireE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_6AtomicE'/>
<use f='halide/src/Expr.h' l='88' c='_ZNK6Halide8Internal6IRNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/Expr.h' l='157' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/Expr.h' l='167' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/Expr.h' l='190' c='_ZNK6Halide8Internal8IRHandle6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/Reduction.h' l='100' c='_ZNK6Halide8Internal15ReductionDomain6acceptEPNS0_9IRVisitorE'/>
<def f='halide/src/IRVisitor.h' l='19' ll='78'/>
<ovr f='halide/src/IRVisitor.h' l='83' c='Halide::Internal::IRGraphVisitor'/>
<use f='halide/src/IRVisitor.h' l='83'/>
<use f='halide/src/Schedule.h' l='610' c='_ZNK6Halide8Internal12FuncSchedule6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/Schedule.h' l='716' c='_ZNK6Halide8Internal13StageSchedule6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/Definition.h' l='69' c='_ZNK6Halide8Internal10Definition6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/Function.h' l='101' c='_ZNK6Halide8Internal8Function6acceptEPNS0_9IRVisitorE'/>
<size>8</size>
<doc f='halide/src/IRVisitor.h' l='15'>/** A base class for algorithms that need to recursively walk over the
 * IR. The default implementations just recursively walk over the
 * children. Override the ones you care about.
 */</doc>
<fun r='_ZN6Halide8Internal9IRVisitorC1Ev'/>
<fun r='_ZN6Halide8Internal9IRVisitorD1Ev'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_6IntImmE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7UIntImmE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8FloatImmE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_9StringImmE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4CastE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8VariableE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3AddE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3SubE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3MulE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3DivE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3ModE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3MinE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3MaxE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2EQE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2NEE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2LTE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2LEE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2GTE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2GEE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3AndE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_2OrE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3NotE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_6SelectE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4LoadE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4RampE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_9BroadcastE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4CallE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3LetE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7LetStmtE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_10AssertStmtE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_16ProducerConsumerE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_3ForE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_5StoreE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7ProvideE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8AllocateE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4FreeE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7RealizeE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_5BlockE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_10IfThenElseE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8EvaluateE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7ShuffleE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_12VectorReduceE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_8PrefetchE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_4ForkE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_7AcquireE'/>
<fun r='_ZN6Halide8Internal9IRVisitor5visitEPKNS0_6AtomicE'/>
<ovr f='halide/src/IRPrinter.h' l='98' c='Halide::Internal::IRPrinter'/>
<use f='halide/src/IRPrinter.h' l='98'/>
<size>8</size>
<ovr f='halide/src/AsyncProducers.cpp' l='290' c='Halide::Internal::(anonymousnamespace)::CountConsumeNodes'/>
<use f='halide/src/AsyncProducers.cpp' l='290'/>
<size>8</size>
<ovr f='halide/src/AutoScheduleUtils.h' l='26' c='Halide::Internal::FindAllCalls'/>
<use f='halide/src/AutoScheduleUtils.h' l='26'/>
<size>8</size>
<ovr f='halide/src/Closure.h' l='28' c='Halide::Internal::Closure'/>
<use f='halide/src/Closure.h' l='28'/>
<size>8</size>
<ovr f='halide/src/Bounds.cpp' l='106' c='Halide::Internal::(anonymousnamespace)::Bounds'/>
<use f='halide/src/Bounds.cpp' l='106'/>
<ovr f='halide/src/Bounds.cpp' l='1843' c='Halide::Internal::(anonymousnamespace)::FindInnermostVar'/>
<use f='halide/src/Bounds.cpp' l='1843'/>
<ovr f='halide/src/Bounds.cpp' l='2103' c='Halide::Internal::(anonymousnamespace)::BoxesTouched::CountVars'/>
<use f='halide/src/Bounds.cpp' l='2103'/>
<ovr f='halide/src/Bounds.cpp' l='2438' c='FindFreeVars'/>
<use f='halide/src/Bounds.cpp' l='2438' c='_ZN6Halide8Internal12_GLOBAL__N_112BoxesTouched14find_free_varsERKNS_4ExprE'/>
<size>8</size>
<ovr f='halide/src/BoundsInference.cpp' l='34' c='Halide::Internal::(anonymousnamespace)::DependsOnBoundsInference'/>
<use f='halide/src/BoundsInference.cpp' l='34'/>
<ovr f='halide/src/BoundsInference.cpp' l='74' c='Halide::Internal::(anonymousnamespace)::BoundsOfInnerVar'/>
<use f='halide/src/BoundsInference.cpp' l='74'/>
<size>8</size>
<ovr f='halide/src/CanonicalizeGPUVars.cpp' l='31' c='Halide::Internal::(anonymousnamespace)::CountGPUBlocksThreads'/>
<use f='halide/src/CanonicalizeGPUVars.cpp' l='31'/>
<size>8</size>
<ovr f='halide/src/CodeGen_LLVM.h' l='57' c='Halide::Internal::CodeGen_LLVM'/>
<use f='halide/src/CodeGen_LLVM.h' l='57'/>
<size>8</size>
<ovr f='halide/src/CodeGen_D3D12Compute_Dev.cpp' l='1147' c='FindThreadGroupSize'/>
<use f='halide/src/CodeGen_D3D12Compute_Dev.cpp' l='1147' c='_ZN6Halide8Internal12_GLOBAL__N_124CodeGen_D3D12Compute_Dev22CodeGen_D3D12Compute_C10add_kernelENS0_4StmtERKNSt7__cxx1112basic_stringIcSt11char_traits2924180'/>
<size>8</size>
<ovr f='halide/src/CodeGen_GPU_Dev.cpp' l='32' c='Halide::Internal::(anonymousnamespace)::IsBlockUniform'/>
<use f='halide/src/CodeGen_GPU_Dev.cpp' l='32'/>
<ovr f='halide/src/CodeGen_GPU_Dev.cpp' l='58' c='Halide::Internal::(anonymousnamespace)::IsBufferConstant'/>
<use f='halide/src/CodeGen_GPU_Dev.cpp' l='58'/>
<size>8</size>
<ovr f='halide/src/CodeGen_LLVM.cpp' l='3606' c='MayBlock'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='3606' c='_ZN6Halide8Internal12CodeGen_LLVM17do_parallel_tasksERKSt6vectorINS1_12ParallelTaskESaIS3_EE'/>
<ovr f='halide/src/CodeGen_LLVM.cpp' l='3625' c='MinThreads'/>
<use f='halide/src/CodeGen_LLVM.cpp' l='3625' c='_ZN6Halide8Internal12CodeGen_LLVM17do_parallel_tasksERKSt6vectorINS1_12ParallelTaskESaIS3_EE'/>
<size>8</size>
<ovr f='halide/src/CodeGen_Metal_Dev.cpp' l='674' c='FindShared'/>
<use f='halide/src/CodeGen_Metal_Dev.cpp' l='674' c='_ZN6Halide8Internal12_GLOBAL__N_117CodeGen_Metal_Dev15CodeGen_Metal_C10add_kernelERKNS0_4StmtERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERK14018673'/>
<size>8</size>
<ovr f='halide/src/CodeGen_OpenCL_Dev.cpp' l='1017' c='FindShared'/>
<use f='halide/src/CodeGen_OpenCL_Dev.cpp' l='1017' c='_ZN6Halide8Internal12_GLOBAL__N_118CodeGen_OpenCL_Dev16CodeGen_OpenCL_C10add_kernelENS0_4StmtERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERK15661578'/>
<size>8</size>
<ovr f='halide/src/CodeGen_OpenGLCompute_Dev.cpp' l='673' c='Halide::Internal::(anonymousnamespace)::(anonymousnamespace)::FindSharedAllocations'/>
<use f='halide/src/CodeGen_OpenGLCompute_Dev.cpp' l='673'/>
<size>8</size>
<use f='halide/src/Definition.cpp' l='31' c='_ZNK6Halide8Internal18DefinitionContents6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/Definition.cpp' l='141' c='_ZNK6Halide8Internal10Definition6acceptEPNS0_9IRVisitorE'/>
<ovr f='halide/src/Derivative.cpp' l='42' c='Halide::Internal::(anonymousnamespace)::ReverseAccumulationVisitor'/>
<use f='halide/src/Derivative.cpp' l='42'/>
<size>8</size>
<ovr f='halide/src/EarlyFree.cpp' l='16' c='Halide::Internal::(anonymousnamespace)::FindLastUse'/>
<use f='halide/src/EarlyFree.cpp' l='16'/>
<size>8</size>
<ovr f='halide/src/FindCalls.cpp' l='16' c='Halide::Internal::(anonymousnamespace)::FindCalls'/>
<use f='halide/src/FindCalls.cpp' l='16'/>
<size>8</size>
<ovr f='halide/src/Func.cpp' l='314' c='Checker'/>
<use f='halide/src/Func.cpp' l='314' c='_ZN6Halide12_GLOBAL__N_119is_const_assignmentERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_4ExprESaISA_EESE_'/>
<size>8</size>
<use f='halide/src/Function.cpp' l='97' c='_ZNK6Halide8Internal16FunctionContents6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/Function.cpp' l='757' c='_ZNK6Halide8Internal8Function6acceptEPNS0_9IRVisitorE'/>
<size>8</size>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='35' c='Halide::Internal::(anonymousnamespace)::ExtractBlockSize'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='35'/>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='1508' c='Halide::Internal::(anonymousnamespace)::ValidateGPULoopNesting'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='1508'/>
<ovr f='halide/src/FuseGPUThreadLoops.cpp' l='1556' c='Halide::Internal::(anonymousnamespace)::FindInnermostGPUBlock'/>
<use f='halide/src/FuseGPUThreadLoops.cpp' l='1556'/>
<size>8</size>
<use f='halide/src/IR.cpp' l='948' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='952' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='956' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='960' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='964' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='968' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='972' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='976' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='980' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='984' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='988' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='992' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='996' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1000' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1004' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1008' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1012' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1016' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1020' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1024' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1028' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1032' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1036' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1040' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1044' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1048' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1052' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1056' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1060' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1064' c='_ZNK6Halide8Internal8ExprNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1068' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1072' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1076' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1080' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1084' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1088' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1092' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1096' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1100' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1104' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1108' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1112' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1116' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1120' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1124' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/IR.cpp' l='1128' c='_ZNK6Halide8Internal8StmtNode6acceptEPNS0_9IRVisitorE'/>
<size>8</size>
<ovr f='halide/src/IREquality.cpp' l='14' c='Halide::Internal::(anonymousnamespace)::IRComparer'/>
<use f='halide/src/IREquality.cpp' l='14'/>
<size>8</size>
<ovr f='halide/src/IRMatch.cpp' l='56' c='Halide::Internal::(anonymousnamespace)::IRMatch'/>
<use f='halide/src/IRMatch.cpp' l='56'/>
<size>8</size>
<ovr f='halide/src/InjectHostDevBufferCopies.cpp' l='31' c='Halide::Internal::(anonymousnamespace)::FindBufferUsage'/>
<use f='halide/src/InjectHostDevBufferCopies.cpp' l='31'/>
<ovr f='halide/src/InjectHostDevBufferCopies.cpp' l='386' c='Halide::Internal::(anonymousnamespace)::InjectBufferCopiesForSingleBuffer::HasLoops'/>
<use f='halide/src/InjectHostDevBufferCopies.cpp' l='386'/>
<ovr f='halide/src/InjectHostDevBufferCopies.cpp' l='442' c='Halide::Internal::(anonymousnamespace)::FindLastUse'/>
<use f='halide/src/InjectHostDevBufferCopies.cpp' l='442'/>
<ovr f='halide/src/InjectHostDevBufferCopies.cpp' l='716' c='Halide::Internal::(anonymousnamespace)::FindOutermostProduce'/>
<use f='halide/src/InjectHostDevBufferCopies.cpp' l='716'/>
<ovr f='halide/src/InjectHostDevBufferCopies.cpp' l='742' c='Halide::Internal::(anonymousnamespace)::InjectBufferCopiesForInputsAndOutputs::FindInputsAndOutputs'/>
<use f='halide/src/InjectHostDevBufferCopies.cpp' l='742'/>
<size>8</size>
<ovr f='halide/src/LICM.cpp' l='23' c='Halide::Internal::(anonymousnamespace)::CanLift'/>
<use f='halide/src/LICM.cpp' l='23'/>
<ovr f='halide/src/LICM.cpp' l='283' c='CollectVars'/>
<use f='halide/src/LICM.cpp' l='283' c='_ZN6Halide8Internal12_GLOBAL__N_14LICM5visitEPKNS0_3ForE'/>
<ovr f='halide/src/LICM.cpp' l='350' c='Halide::Internal::(anonymousnamespace)::GroupLoopInvariants::ExprDepth'/>
<use f='halide/src/LICM.cpp' l='350'/>
<size>8</size>
<ovr f='halide/src/LowerWarpShuffles.cpp' l='128' c='Halide::Internal::(anonymousnamespace)::DetermineAllocStride'/>
<use f='halide/src/LowerWarpShuffles.cpp' l='128'/>
<ovr f='halide/src/LowerWarpShuffles.cpp' l='783' c='Halide::Internal::(anonymousnamespace)::HasLaneLoop'/>
<use f='halide/src/LowerWarpShuffles.cpp' l='783'/>
<size>8</size>
<ovr f='halide/src/ModulusRemainder.cpp' l='22' c='Halide::Internal::(anonymousnamespace)::ComputeModulusRemainder'/>
<use f='halide/src/ModulusRemainder.cpp' l='22'/>
<size>8</size>
<ovr f='halide/src/Monotonic.cpp' l='219' c='Halide::Internal::(anonymousnamespace)::DerivativeBounds'/>
<use f='halide/src/Monotonic.cpp' l='219'/>
<size>8</size>
<ovr f='halide/src/OffloadGPULoops.cpp' l='31' c='Halide::Internal::(anonymousnamespace)::ExtractBounds'/>
<use f='halide/src/OffloadGPULoops.cpp' l='31'/>
<size>8</size>
<ovr f='halide/src/ParallelRVar.cpp' l='23' c='Halide::Internal::(anonymousnamespace)::FindLoads'/>
<use f='halide/src/ParallelRVar.cpp' l='23'/>
<size>8</size>
<ovr f='halide/src/PartitionLoops.cpp' l='81' c='Halide::Internal::(anonymousnamespace)::HasLikelyTag'/>
<use f='halide/src/PartitionLoops.cpp' l='81'/>
<ovr f='halide/src/PartitionLoops.cpp' l='215' c='Halide::Internal::(anonymousnamespace)::ExprUsesInvalidBuffers'/>
<use f='halide/src/PartitionLoops.cpp' l='215'/>
<ovr f='halide/src/PartitionLoops.cpp' l='243' c='Halide::Internal::(anonymousnamespace)::FindSimplifications'/>
<use f='halide/src/PartitionLoops.cpp' l='243'/>
<ovr f='halide/src/PartitionLoops.cpp' l='462' c='Halide::Internal::(anonymousnamespace)::ContainsWarpSynchronousLogic'/>
<use f='halide/src/PartitionLoops.cpp' l='462'/>
<ovr f='halide/src/PartitionLoops.cpp' l='756' c='Halide::Internal::(anonymousnamespace)::ExprContainsLoad'/>
<use f='halide/src/PartitionLoops.cpp' l='756'/>
<ovr f='halide/src/PartitionLoops.cpp' l='995' c='Halide::Internal::(anonymousnamespace)::ContainsHotLoop'/>
<use f='halide/src/PartitionLoops.cpp' l='995'/>
<size>8</size>
<ovr f='halide/src/Prefetch.cpp' l='28' c='Halide::Internal::(anonymousnamespace)::CollectExternalBufferBounds'/>
<use f='halide/src/Prefetch.cpp' l='28'/>
<size>8</size>
<ovr f='halide/src/PrintLoopNest.cpp' l='32' c='Halide::Internal::(anonymousnamespace)::PrintLoopNest'/>
<use f='halide/src/PrintLoopNest.cpp' l='32'/>
<size>8</size>
<use f='halide/src/Reduction.cpp' l='105' c='_ZN6Halide8Internal23ReductionDomainContents6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/Reduction.cpp' l='217' c='_ZNK6Halide8Internal15ReductionDomain6acceptEPNS0_9IRVisitorE'/>
<size>8</size>
<ovr f='halide/src/RegionCosts.cpp' l='22' c='Halide::Internal::(anonymousnamespace)::FindImageInputs'/>
<use f='halide/src/RegionCosts.cpp' l='22'/>
<ovr f='halide/src/RegionCosts.cpp' l='63' c='Halide::Internal::(anonymousnamespace)::ExprCost'/>
<use f='halide/src/RegionCosts.cpp' l='63'/>
<size>8</size>
<use f='halide/src/Schedule.cpp' l='448' c='_ZNK6Halide8Internal12FuncSchedule6acceptEPNS0_9IRVisitorE'/>
<use f='halide/src/Schedule.cpp' l='588' c='_ZNK6Halide8Internal13StageSchedule6acceptEPNS0_9IRVisitorE'/>
<ovr f='halide/src/ScheduleFunctions.cpp' l='61' c='Halide::Internal::(anonymousnamespace)::ContainsImpureCall'/>
<use f='halide/src/ScheduleFunctions.cpp' l='61'/>
<ovr f='halide/src/ScheduleFunctions.cpp' l='757' c='Halide::Internal::(anonymousnamespace)::IsUsedInStmt'/>
<use f='halide/src/ScheduleFunctions.cpp' l='757'/>
<ovr f='halide/src/ScheduleFunctions.cpp' l='792' c='Halide::Internal::(anonymousnamespace)::IsRealizedInStmt'/>
<use f='halide/src/ScheduleFunctions.cpp' l='792'/>
<ovr f='halide/src/ScheduleFunctions.cpp' l='869' c='Halide::Internal::(anonymousnamespace)::CollectBounds'/>
<use f='halide/src/ScheduleFunctions.cpp' l='869'/>
<ovr f='halide/src/ScheduleFunctions.cpp' l='1683' c='Halide::Internal::(anonymousnamespace)::ComputeLegalSchedules'/>
<use f='halide/src/ScheduleFunctions.cpp' l='1683'/>
<ovr f='halide/src/ScheduleFunctions.cpp' l='1799' c='Halide::Internal::(anonymousnamespace)::StmtUsesFunc'/>
<use f='halide/src/ScheduleFunctions.cpp' l='1799'/>
<ovr f='halide/src/ScheduleFunctions.cpp' l='1824' c='Halide::Internal::(anonymousnamespace)::PrintUsesOfFunc'/>
<use f='halide/src/ScheduleFunctions.cpp' l='1824'/>
<size>8</size>
<ovr f='halide/src/Simplify_Let.cpp' l='12' c='Halide::Internal::(anonymousnamespace)::CountVarUses'/>
<use f='halide/src/Simplify_Let.cpp' l='12'/>
<size>8</size>
<ovr f='halide/src/SkipStages.cpp' l='42' c='Halide::Internal::(anonymousnamespace)::PredicateFinder'/>
<use f='halide/src/SkipStages.cpp' l='42'/>
<ovr f='halide/src/SkipStages.cpp' l='432' c='Halide::Internal::(anonymousnamespace)::MightBeSkippable'/>
<use f='halide/src/SkipStages.cpp' l='432'/>
<size>8</size>
<ovr f='halide/src/SlidingWindow.cpp' l='34' c='Halide::Internal::(anonymousnamespace)::ExprDependsOnVar'/>
<use f='halide/src/SlidingWindow.cpp' l='34'/>
<ovr f='halide/src/SlidingWindow.cpp' l='95' c='Halide::Internal::(anonymousnamespace)::FindProduce'/>
<use f='halide/src/SlidingWindow.cpp' l='95'/>
<ovr f='halide/src/SlidingWindow.cpp' l='644' c='Halide::Internal::(anonymousnamespace)::Dependencies'/>
<use f='halide/src/SlidingWindow.cpp' l='644'/>
<size>8</size>
<ovr f='halide/src/Solve.cpp' l='803' c='Halide::Internal::(anonymousnamespace)::SolveForInterval'/>
<use f='halide/src/Solve.cpp' l='803'/>
<size>8</size>
<ovr f='halide/src/SplitTuples.cpp' l='24' c='Halide::Internal::(anonymousnamespace)::FindCallValueIndices'/>
<use f='halide/src/SplitTuples.cpp' l='24'/>
<ovr f='halide/src/SplitTuples.cpp' l='40' c='Halide::Internal::(anonymousnamespace)::UsesExternImage'/>
<use f='halide/src/SplitTuples.cpp' l='40'/>
<ovr f='halide/src/SplitTuples.cpp' l='165' c='Checker'/>
<use f='halide/src/SplitTuples.cpp' l='165' c='_ZN6Halide8Internal12_GLOBAL__N_111SplitTuples13visit_provideEPKNS0_7ProvideEPKNS0_6AtomicE'/>
<ovr f='halide/src/SplitTuples.cpp' l='349' c='Halide::Internal::(anonymousnamespace)::SplitScatterGather::GetScatterGatherSize'/>
<use f='halide/src/SplitTuples.cpp' l='349'/>
<size>8</size>
<ovr f='halide/src/StmtToHtml.cpp' l='26' c='Halide::Internal::(anonymousnamespace)::StmtToHtml'/>
<use f='halide/src/StmtToHtml.cpp' l='26'/>
<size>8</size>
<ovr f='halide/src/StorageFolding.cpp' l='29' c='Halide::Internal::(anonymousnamespace)::CountProducers'/>
<use f='halide/src/StorageFolding.cpp' l='29'/>
<ovr f='halide/src/StorageFolding.cpp' l='405' c='Halide::Internal::(anonymousnamespace)::HasExternConsumer'/>
<use f='halide/src/StorageFolding.cpp' l='405'/>
<ovr f='halide/src/StorageFolding.cpp' l='424' c='Halide::Internal::(anonymousnamespace)::VectorAccessOfFoldedDim'/>
<use f='halide/src/StorageFolding.cpp' l='424'/>
<size>8</size>
<ovr f='halide/src/TrimNoOps.cpp' l='37' c='Halide::Internal::(anonymousnamespace)::LoadsFromBuffer'/>
<use f='halide/src/TrimNoOps.cpp' l='37'/>
<ovr f='halide/src/TrimNoOps.cpp' l='64' c='Halide::Internal::(anonymousnamespace)::IsNoOp'/>
<use f='halide/src/TrimNoOps.cpp' l='64'/>
<size>8</size>
<ovr f='halide/src/UniquifyVariableNames.cpp' l='122' c='Halide::Internal::(anonymousnamespace)::FindFreeVars'/>
<use f='halide/src/UniquifyVariableNames.cpp' l='122'/>
<size>8</size>
<ovr f='halide/src/UnpackBuffers.cpp' l='23' c='Halide::Internal::(anonymousnamespace)::FindBufferSymbols'/>
<use f='halide/src/UnpackBuffers.cpp' l='23'/>
<size>8</size>
<ovr f='halide/src/VectorizeLoops.cpp' l='338' c='Halide::Internal::(anonymousnamespace)::UsesGPUVars'/>
<use f='halide/src/VectorizeLoops.cpp' l='338'/>
<ovr f='halide/src/VectorizeLoops.cpp' l='1591' c='Halide::Internal::(anonymousnamespace)::AllStoresInScope'/>
<use f='halide/src/VectorizeLoops.cpp' l='1591'/>
<size>8</size>
<ovr f='halide/src/autoschedulers/adams2019/FunctionDAG.cpp' l='23' c='Halide::Internal::Autoscheduler::(anonymousnamespace)::Featurizer'/>
<use f='halide/src/autoschedulers/adams2019/FunctionDAG.cpp' l='23'/>
<ovr f='halide/src/autoschedulers/adams2019/FunctionDAG.cpp' l='761' c='CheckTypes'/>
<use f='halide/src/autoschedulers/adams2019/FunctionDAG.cpp' l='761' c='_ZN6Halide8Internal13Autoscheduler11FunctionDAGC1ERKSt6vectorINS0_8FunctionESaIS4_EERKNS_13MachineParamsERKNS_6TargetE'/>
<size>8</size>
<ovr f='halide/src/autoschedulers/mullapudi2016/AutoSchedule.cpp' l='2576' c='Halide::Internal::(anonymousnamespace)::FindVarsUsingVar'/>
<use f='halide/src/autoschedulers/mullapudi2016/AutoSchedule.cpp' l='2576'/>
<size>8</size>
