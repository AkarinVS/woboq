<dec f='halide/build/include/Halide.h' l='4355' type='void Halide::Internal::ConstantInterval::ConstantInterval(int64_t min, int64_t max)'/>
<doc f='halide/build/include/Halide.h' l='4354'>/** Construct an interval from a lower and upper bound. */</doc>
<dec f='halide/src/Interval.h' l='125' type='void Halide::Internal::ConstantInterval::ConstantInterval(int64_t min, int64_t max)'/>
<doc f='halide/src/Interval.h' l='124'>/** Construct an interval from a lower and upper bound. */</doc>
<def f='halide/src/Interval.cpp' l='162' ll='165' type='void Halide::Internal::ConstantInterval::ConstantInterval(int64_t min, int64_t max)'/>
<use f='halide/src/Interval.cpp' l='172' u='c' c='_ZN6Halide8Internal16ConstantInterval12single_pointEl'/>
<use f='halide/src/Interval.cpp' l='176' u='c' c='_ZN6Halide8Internal16ConstantInterval13bounded_belowEl'/>
<use f='halide/src/Interval.cpp' l='182' u='c' c='_ZN6Halide8Internal16ConstantInterval13bounded_aboveEl'/>
<use f='halide/src/Monotonic.cpp' l='117' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_13addERKNS0_16ConstantIntervalEl'/>
<use f='halide/src/Monotonic.cpp' l='134' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_13subERKNS0_16ConstantIntervalEl'/>
<use f='halide/src/Monotonic.cpp' l='176' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_18multiplyERKNS0_16ConstantIntervalES4_'/>
<use f='halide/src/Monotonic.cpp' l='355' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_116DerivativeBounds8visit_eqERKNS_4ExprES5_'/>
