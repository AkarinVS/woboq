<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='139' c='_ZN4llvm11PassManager3runERT_RT0_DpT1_'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='141'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='150'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='155'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='158'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='160' c='_ZN4llvm19RequireAnalysisPassIT_NS_13LazyCallGraph3SCCENS_15AnalysisManagerIS3_JRS2_EEEJS5_RNS_17CGSCCUpdateResultEEE3runERS3_RS6_S5_S8_'/>
<def f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='232' ll='328'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='344'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='379' c='_ZN4llvm39createModuleToPostOrderCGSCCPassAdaptorET_'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='437' c='_ZN4llvm41updateCGAndAnalysisManagerForFunctionPassERNS_13LazyCallGraphERNS0_3SCCERNS0_4NodeERNS_15AnalysisManagerIS2_JS1_EEERNS_17CGSCCUpdateResultER14548421'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='448' c='_ZN4llvm38updateCGAndAnalysisManagerForCGSCCPassERNS_13LazyCallGraphERNS0_3SCCERNS0_4NodeERNS_15AnalysisManagerIS2_JS1_EEERNS_17CGSCCUpdateResultERNS6_INS_8FunctionEJEEE'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='482' c='_ZN4llvm26CGSCCToFunctionPassAdaptor3runERNS_13LazyCallGraph3SCCERNS_15AnalysisManagerIS2_JRS1_EEES5_RNS_17CGSCCUpdateResultE'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='520'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='529' c='_ZN4llvm21DevirtSCCRepeatedPass3runERNS_13LazyCallGraph3SCCERNS_15AnalysisManagerIS2_JRS1_EEES5_RNS_17CGSCCUpdateResultE'/>
<use f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='543' c='_ZN4llvm27createDevirtSCCRepeatedPassET_i'/>
<use f='halide/llvm-install/include/llvm/Transforms/IPO/Inliner.h' l='104' c='_ZN4llvm11InlinerPass3runERNS_13LazyCallGraph3SCCERNS_15AnalysisManagerIS2_JRS1_EEES5_RNS_17CGSCCUpdateResultE'/>
<size>944</size>
<doc f='halide/llvm-install/include/llvm/Analysis/CGSCCPassManager.h' l='217'>/// Support structure for SCC passes to communicate updates the call graph back
/// to the CGSCC pass manager infrsatructure.
///
/// The CGSCC pass manager runs SCC passes which are allowed to update the call
/// graph and SCC structures. This means the structure the pass manager works
/// on is mutating underneath it. In order to support that, there needs to be
/// careful communication about the precise nature and ramifications of these
/// updates to the pass management infrastructure.
///
/// All SCC passes will have to accept a reference to the management layer&apos;s
/// update result struct and use it to reflect the results of any CG updates
/// performed.
///
/// Passes which do not change the call graph structure in any way can just
/// ignore this argument to their run method.</doc>
<mbr r='llvm::CGSCCUpdateResult::RCWorklist' o='0' t='SmallPriorityWorklist&lt;LazyCallGraph::RefSCC *, 1&gt; &amp;'/>
<mbr r='llvm::CGSCCUpdateResult::CWorklist' o='64' t='SmallPriorityWorklist&lt;LazyCallGraph::SCC *, 1&gt; &amp;'/>
<mbr r='llvm::CGSCCUpdateResult::InvalidatedRefSCCs' o='128' t='SmallPtrSetImpl&lt;LazyCallGraph::RefSCC *&gt; &amp;'/>
<mbr r='llvm::CGSCCUpdateResult::InvalidatedSCCs' o='192' t='SmallPtrSetImpl&lt;LazyCallGraph::SCC *&gt; &amp;'/>
<mbr r='llvm::CGSCCUpdateResult::UpdatedRC' o='256' t='LazyCallGraph::RefSCC *'/>
<mbr r='llvm::CGSCCUpdateResult::UpdatedC' o='320' t='LazyCallGraph::SCC *'/>
<mbr r='llvm::CGSCCUpdateResult::CrossSCCPA' o='384' t='llvm::PreservedAnalyses'/>
<mbr r='llvm::CGSCCUpdateResult::InlinedInternalEdges' o='1152' t='SmallDenseSet&lt;std::pair&lt;LazyCallGraph::Node *, LazyCallGraph::SCC *&gt;, 4&gt; &amp;'/>
<mbr r='llvm::CGSCCUpdateResult::IndirectVHs' o='1216' t='SmallMapVector&lt;llvm::Value *, llvm::WeakTrackingVH, 16&gt;'/>
