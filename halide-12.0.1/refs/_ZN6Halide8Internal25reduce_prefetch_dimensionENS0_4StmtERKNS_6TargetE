<dec f='halide/halide-install/include/Halide.h' l='30648' type='Halide::Internal::Stmt Halide::Internal::reduce_prefetch_dimension(Halide::Internal::Stmt stmt, const Halide::Target &amp; t)'/>
<doc f='halide/halide-install/include/Halide.h' l='30643'>/** Reduce a multi-dimensional prefetch into a prefetch of lower dimension
 * (max dimension of the prefetch is specified by target architecture).
 * This keeps the &apos;max_dim&apos; innermost dimensions and adds loops for the rest
 * of the dimensions. If maximum prefetched-byte-size is specified (depending
 * on the architecture), this also adds an outer loops that tile the prefetches. */</doc>
<dec f='halide/build/include/Halide.h' l='30648' type='Halide::Internal::Stmt Halide::Internal::reduce_prefetch_dimension(Halide::Internal::Stmt stmt, const Halide::Target &amp; t)'/>
<doc f='halide/build/include/Halide.h' l='30643'>/** Reduce a multi-dimensional prefetch into a prefetch of lower dimension
 * (max dimension of the prefetch is specified by target architecture).
 * This keeps the &apos;max_dim&apos; innermost dimensions and adds loops for the rest
 * of the dimensions. If maximum prefetched-byte-size is specified (depending
 * on the architecture), this also adds an outer loops that tile the prefetches. */</doc>
<dec f='halide/src/Prefetch.h' l='39' type='Halide::Internal::Stmt Halide::Internal::reduce_prefetch_dimension(Halide::Internal::Stmt stmt, const Halide::Target &amp; t)'/>
<use f='halide/src/Lower.cpp' l='305' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_110lower_implERKSt6vectorINS0_8FunctionESaIS3_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_6TargetERKS7388887'/>
<doc f='halide/src/Prefetch.h' l='34'>/** Reduce a multi-dimensional prefetch into a prefetch of lower dimension
 * (max dimension of the prefetch is specified by target architecture).
 * This keeps the &apos;max_dim&apos; innermost dimensions and adds loops for the rest
 * of the dimensions. If maximum prefetched-byte-size is specified (depending
 * on the architecture), this also adds an outer loops that tile the prefetches. */</doc>
<def f='halide/src/Prefetch.cpp' l='358' ll='384' type='Halide::Internal::Stmt Halide::Internal::reduce_prefetch_dimension(Halide::Internal::Stmt stmt, const Halide::Target &amp; t)'/>
