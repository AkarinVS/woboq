<use f='halide/build-apps/eigen/Eigen/src/Core/DenseBase.h' l='565'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/DenseBase.h' l='566'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/CoreEvaluators.h' l='1475'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/CoreEvaluators.h' l='1476'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/CoreEvaluators.h' l='1478'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/VectorwiseOp.h' l='356'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/VectorwiseOp.h' l='357'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/Reverse.h' l='20'/>
<def f='halide/build-apps/eigen/Eigen/src/Core/Reverse.h' l='63' ll='108'/>
<use f='halide/build-apps/eigen/Eigen/src/Core/Reverse.h' l='64'/>
<doc f='halide/build-apps/eigen/Eigen/src/Core/Reverse.h' l='49'>/** \class Reverse
  * \ingroup Core_Module
  *
  * \brief Expression of the reverse of a vector or matrix
  *
  * \tparam MatrixType the type of the object of which we are taking the reverse
  * \tparam Direction defines the direction of the reverse operation, can be Vertical, Horizontal, or BothDirections
  *
  * This class represents an expression of the reverse of a vector.
  * It is the return type of MatrixBase::reverse() and VectorwiseOp::reverse()
  * and most of the time this is the only way it is used.
  *
  * \sa MatrixBase::reverse(), VectorwiseOp::reverse()
  */</doc>
<fun r='_ZN5Eigen7ReverseC1ERKT_'/>
<fun r='_ZN5Eigen7ReverseC1ERKNS_7ReverseIT_XT0_EEE'/>
<fun r='_ZNK5Eigen7Reverse4rowsEv'/>
<fun r='_ZNK5Eigen7Reverse4colsEv'/>
<fun r='_ZNK5Eigen7Reverse11innerStrideEv'/>
<fun r='_ZNK5Eigen7Reverse16nestedExpressionEv'/>
<mbr r='Eigen::Reverse::m_matrix' t='typename MatrixType::Nested'/>
<use f='halide/build-apps/eigen/blas/level1_cplx_impl.h' l='131' c='zdrot_'/>
<use f='halide/build-apps/eigen/blas/level1_cplx_impl.h' l='132' c='zdrot_'/>
<use f='halide/build-apps/eigen/blas/level1_real_impl.h' l='92' c='drot_'/>
<use f='halide/build-apps/eigen/blas/level1_real_impl.h' l='93' c='drot_'/>
