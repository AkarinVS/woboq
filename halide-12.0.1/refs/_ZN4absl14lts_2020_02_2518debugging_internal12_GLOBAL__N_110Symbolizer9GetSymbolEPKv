<dec f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='280' type='const char * absl::lts_2020_02_25::debugging_internal::(anonymous namespace)::Symbolizer::GetSymbol(const void *const pc)'/>
<def f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='1278' ll='1341' type='const char * absl::lts_2020_02_25::debugging_internal::(anonymous namespace)::Symbolizer::GetSymbol(const void *const pc)'/>
<use f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='1459' u='c' c='_ZN4absl14lts_2020_02_259SymbolizeEPKvPci'/>
<doc f='halide/build-apps/abseil-cpp/absl/debugging/symbolize_elf.inc' l='1271'>// The implementation of our symbolization routine.  If it
// successfully finds the symbol containing &quot;pc&quot; and obtains the
// symbol name, returns pointer to that symbol. Otherwise, returns nullptr.
// If any symbol decorators have been installed via InstallSymbolDecorator(),
// they are called here as well.
// To keep stack consumption low, we would like this function to not
// get inlined.</doc>
