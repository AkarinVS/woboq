<def f='halide/src/autoschedulers/adams2019/AutoSchedule.cpp' l='465' ll='533' type='IntrusivePtr&lt;Halide::Internal::Autoscheduler::State&gt; Halide::Internal::Autoscheduler::optimal_schedule(Halide::Internal::Autoscheduler::FunctionDAG &amp; dag, const vector&lt;Halide::Internal::Function&gt; &amp; outputs, const Halide::MachineParams &amp; params, Halide::CostModel * cost_model, std::mt19937 &amp; rng, int beam_size, int64_t memory_limit, const Halide::Internal::Autoscheduler::CachingOptions &amp; options)'/>
<use f='halide/src/autoschedulers/adams2019/AutoSchedule.cpp' l='595' u='c' c='_ZN6Halide8Internal13Autoscheduler17generate_scheduleERKSt6vectorINS0_8FunctionESaIS3_EERKNS_6TargetERKNS_13MachineParamsEPNS_20AutoSchedulerResultsE'/>
<use f='halide/src/autoschedulers/adams2019/AutoSchedule.cpp' l='673' u='c' c='_ZN6Halide8Internal13Autoscheduler23find_and_apply_scheduleERNS1_11FunctionDAGERKSt6vectorINS0_8FunctionESaIS5_EERKNS_13MachineParamsEPNS_9CostModelEi5169466'/>
<doc f='halide/src/autoschedulers/adams2019/AutoSchedule.cpp' l='464'>// Performance coarse-to-fine beam search and return the best state found.</doc>
