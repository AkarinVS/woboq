<def f='halide/build-apps/abseil-cpp/absl/strings/str_split.h' l='181' ll='188'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/usage.cc' l='142' c='_ZN4absl14lts_2020_02_2514flags_internal12_GLOBAL__N_121FlagHelpPrettyPrinter5WriteENS0_11string_viewEb'/>
<use f='halide/build-apps/abseil-cpp/absl/flags/internal/usage.cc' l='148' c='_ZN4absl14lts_2020_02_2514flags_internal12_GLOBAL__N_121FlagHelpPrettyPrinter5WriteENS0_11string_viewEb'/>
<size>32</size>
<doc f='halide/build-apps/abseil-cpp/absl/strings/str_split.h' l='164'>// ByAnyChar
//
// A delimiter that will match any of the given byte-sized characters within
// its provided string.
//
// Note: this delimiter works with single-byte string data, but does not work
// with variable-width encodings, such as UTF-8.
//
// Example:
//
//   using absl::ByAnyChar;
//   std::vector&lt;std::string&gt; v = absl::StrSplit(&quot;a,b=c&quot;, ByAnyChar(&quot;,=&quot;));
//   // v[0] == &quot;a&quot;, v[1] == &quot;b&quot;, v[2] == &quot;c&quot;
//
// If `ByAnyChar` is given the empty string, it behaves exactly like
// `ByString` and matches each individual character in the input string.
//</doc>
<fun r='_ZN4absl14lts_2020_02_259ByAnyCharC1ENS0_11string_viewE'/>
<fun r='_ZNK4absl14lts_2020_02_259ByAnyChar4FindENS0_11string_viewEm'/>
<mbr r='absl::lts_2020_02_25::ByAnyChar::delimiters_' o='0' t='const std::string'/>
