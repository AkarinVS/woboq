<def f='halide/llvm-install/include/llvm/DebugInfo/DIContext.h' l='187' ll='222'/>
<use f='halide/llvm-install/include/llvm/DebugInfo/DIContext.h' l='202' c='_ZN4llvm13DIDumpOptions15getForSingleDIEEv'/>
<use f='halide/llvm-install/include/llvm/DebugInfo/DIContext.h' l='203' c='_ZN4llvm13DIDumpOptions15getForSingleDIEEv'/>
<use f='halide/llvm-install/include/llvm/DebugInfo/DIContext.h' l='210' c='_ZNK4llvm13DIDumpOptions19noImplicitRecursionEv'/>
<use f='halide/llvm-install/include/llvm/DebugInfo/DIContext.h' l='211' c='_ZNK4llvm13DIDumpOptions19noImplicitRecursionEv'/>
<use f='halide/llvm-install/include/llvm/DebugInfo/DIContext.h' l='236' c='_ZN4llvm9DIContext4dumpERNS_11raw_ostreamENS_13DIDumpOptionsE'/>
<use f='halide/llvm-install/include/llvm/DebugInfo/DIContext.h' l='238' c='_ZN4llvm9DIContext6verifyERNS_11raw_ostreamENS_13DIDumpOptionsE'/>
<size>88</size>
<doc f='halide/llvm-install/include/llvm/DebugInfo/DIContext.h' l='185'>/// Container for dump options that control which debug information will be
/// dumped.</doc>
<mbr r='llvm::DIDumpOptions::DumpType' o='0' t='unsigned int'/>
<mbr r='llvm::DIDumpOptions::ChildRecurseDepth' o='32' t='unsigned int'/>
<mbr r='llvm::DIDumpOptions::ParentRecurseDepth' o='64' t='unsigned int'/>
<mbr r='llvm::DIDumpOptions::Version' o='96' t='uint16_t'/>
<mbr r='llvm::DIDumpOptions::AddrSize' o='112' t='uint8_t'/>
<mbr r='llvm::DIDumpOptions::ShowAddresses' o='120' t='bool'/>
<mbr r='llvm::DIDumpOptions::ShowChildren' o='128' t='bool'/>
<mbr r='llvm::DIDumpOptions::ShowParents' o='136' t='bool'/>
<mbr r='llvm::DIDumpOptions::ShowForm' o='144' t='bool'/>
<mbr r='llvm::DIDumpOptions::SummarizeTypes' o='152' t='bool'/>
<mbr r='llvm::DIDumpOptions::Verbose' o='160' t='bool'/>
<mbr r='llvm::DIDumpOptions::DisplayRawContents' o='168' t='bool'/>
<fun r='_ZN4llvm13DIDumpOptions15getForSingleDIEEv'/>
<fun r='_ZNK4llvm13DIDumpOptions19noImplicitRecursionEv'/>
<mbr r='llvm::DIDumpOptions::RecoverableErrorHandler' o='192' t='std::function&lt;void (Error)&gt;'/>
<mbr r='llvm::DIDumpOptions::WarningHandler' o='448' t='std::function&lt;void (Error)&gt;'/>
