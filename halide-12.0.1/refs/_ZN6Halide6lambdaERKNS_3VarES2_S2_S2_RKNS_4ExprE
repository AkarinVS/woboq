<dec f='halide/build/include/Halide.h' l='18485' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Var &amp; z, const Halide::Var &amp; w, const Halide::Expr &amp; e)'/>
<doc f='halide/build/include/Halide.h' l='18481'>/** Create a 4-D halide function in the first four arguments that
 * returns the last argument. The function may have more dimensions if
 * the expression contains implicit arguments and the list of Var
 * arguments contains a placeholder (&quot;_&quot;). */</doc>
<dec f='halide/src/Lambda.h' l='40' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Var &amp; z, const Halide::Var &amp; w, const Halide::Expr &amp; e)'/>
<doc f='halide/src/Lambda.h' l='36'>/** Create a 4-D halide function in the first four arguments that
 * returns the last argument. The function may have more dimensions if
 * the expression contains implicit arguments and the list of Var
 * arguments contains a placeholder (&quot;_&quot;). */</doc>
<def f='halide/src/Lambda.cpp' l='29' ll='33' type='Halide::Func Halide::lambda(const Halide::Var &amp; x, const Halide::Var &amp; y, const Halide::Var &amp; z, const Halide::Var &amp; w, const Halide::Expr &amp; e)'/>
