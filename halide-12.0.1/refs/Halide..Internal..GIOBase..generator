<dec f='halide/build/include/Halide.h' l='24417' type='Halide::Internal::GeneratorBase *'/>
<use f='halide/build/include/Halide.h' l='26137' u='w' c='_ZN6Halide8Internal13GeneratorBase9add_inputERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_4TypeE'/>
<offset>1088</offset>
<doc f='halide/build/include/Halide.h' l='24412'>// Generator which owns this Input or Output. Note that this will be null
    // initially; the GeneratorBase itself will set this field when it initially
    // builds its info about params. However, since it isn&apos;t
    // appropriate for Input&lt;&gt; or Output&lt;&gt; to be declared outside of a Generator,
    // all reasonable non-testing code should expect this to be non-null.</doc>
<dec f='halide/src/Generator.h' l='1483' type='Halide::Internal::GeneratorBase *'/>
<use f='halide/src/Generator.h' l='3203' u='w' c='_ZN6Halide8Internal13GeneratorBase9add_inputERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_4TypeE'/>
<use f='halide/src/Generator.cpp' l='1185' u='r' c='_ZN6Halide8Internal18GeneratorParamInfoC1EPNS0_13GeneratorBaseEm'/>
<use f='halide/src/Generator.cpp' l='1185' u='r' c='_ZN6Halide8Internal18GeneratorParamInfoC1EPNS0_13GeneratorBaseEm'/>
<use f='halide/src/Generator.cpp' l='1186' u='w' c='_ZN6Halide8Internal18GeneratorParamInfoC1EPNS0_13GeneratorBaseEm'/>
<use f='halide/src/Generator.cpp' l='1199' u='r' c='_ZN6Halide8Internal18GeneratorParamInfoC1EPNS0_13GeneratorBaseEm'/>
<use f='halide/src/Generator.cpp' l='1199' u='r' c='_ZN6Halide8Internal18GeneratorParamInfoC1EPNS0_13GeneratorBaseEm'/>
<use f='halide/src/Generator.cpp' l='1200' u='w' c='_ZN6Halide8Internal18GeneratorParamInfoC1EPNS0_13GeneratorBaseEm'/>
<use f='halide/src/Generator.cpp' l='1750' u='r' c='_ZN6Halide8Internal7GIOBase8set_typeERKNS_4TypeE'/>
<use f='halide/src/Generator.cpp' l='1756' u='r' c='_ZN6Halide8Internal7GIOBase14set_dimensionsEi'/>
<use f='halide/src/Generator.cpp' l='1762' u='r' c='_ZN6Halide8Internal7GIOBase14set_array_sizeEi'/>
<use f='halide/src/Generator.cpp' l='1853' u='r' c='_ZNK6Halide8Internal7GIOBase16check_gio_accessEv'/>
<use f='halide/src/Generator.cpp' l='1856' u='r' c='_ZNK6Halide8Internal7GIOBase16check_gio_accessEv'/>
<use f='halide/src/Generator.cpp' l='1898' u='r' c='_ZNK6Halide8Internal18GeneratorInputBase20check_value_writableEv'/>
<use f='halide/src/Generator.cpp' l='1898' u='r' c='_ZNK6Halide8Internal18GeneratorInputBase20check_value_writableEv'/>
<use f='halide/src/Generator.cpp' l='1946' u='r' c='_ZN6Halide8Internal18GeneratorInputBase10set_inputsERKSt6vectorINS0_9StubInputESaIS3_EE'/>
<use f='halide/src/Generator.cpp' l='2037' u='r' c='_ZNK6Halide8Internal19GeneratorOutputBase20check_value_writableEv'/>
<use f='halide/src/Generator.cpp' l='2037' u='r' c='_ZNK6Halide8Internal19GeneratorOutputBase20check_value_writableEv'/>
<offset>1088</offset>
<doc f='halide/src/Generator.h' l='1478'>// Generator which owns this Input or Output. Note that this will be null
    // initially; the GeneratorBase itself will set this field when it initially
    // builds its info about params. However, since it isn&apos;t
    // appropriate for Input&lt;&gt; or Output&lt;&gt; to be declared outside of a Generator,
    // all reasonable non-testing code should expect this to be non-null.</doc>
