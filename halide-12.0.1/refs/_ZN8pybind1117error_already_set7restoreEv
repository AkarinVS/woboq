<def f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='340' type='void pybind11::error_already_set::restore()'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='349' u='c' c='_ZN8pybind1117error_already_set21discard_as_unraisableENS_6objectE'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/detail/internals.h' l='229' u='c' c='_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE'/>
<use f='halide/build/_deps/pybind11-src/include/pybind11/pybind11.h' l='811' u='c' c='_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_'/>
<doc f='halide/build/_deps/pybind11-src/include/pybind11/pytypes.h' l='337'>/// Give the currently-held error back to Python, if any.  If there is currently a Python error
    /// already set it is cleared first.  After this call, the current object no longer stores the
    /// error variables (but the `.what()` string is still available).</doc>
