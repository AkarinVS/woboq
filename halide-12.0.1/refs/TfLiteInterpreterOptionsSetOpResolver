<dec f='halide/build-apps/_deps/tflite-src/tensorflow/lite/c/c_api_experimental.h' l='83' type='void TfLiteInterpreterOptionsSetOpResolver(TfLiteInterpreterOptions * options, const TfLiteRegistration *(*)(void *, TfLiteBuiltinOperator, int) find_builtin_op, const TfLiteRegistration *(*)(void *, const char *, int) find_custom_op, void * op_resolver_user_data)'/>
<def f='halide/build-apps/_deps/tflite-src/tensorflow/lite/c/c_api_experimental.cc' l='60' ll='71' type='void TfLiteInterpreterOptionsSetOpResolver(TfLiteInterpreterOptions * options, const TfLiteRegistration *(*)(void *, TfLiteBuiltinOperator, int) find_builtin_op, const TfLiteRegistration *(*)(void *, const char *, int) find_custom_op, void * op_resolver_user_data)'/>
<doc f='halide/build-apps/_deps/tflite-src/tensorflow/lite/c/c_api_experimental.h' l='70'>/// Registers callbacks for resolving builtin or custom operators.
///
/// The `TfLiteInterpreterOptionsSetOpResolver` function provides an alternative
/// method for registering builtin ops and/or custom ops, by providing operator
/// resolver callbacks.  Unlike using `TfLiteInterpreterOptionsAddBuiltinOp`
/// and/or `TfLiteInterpreterOptionsAddAddCustomOp`, these let you register all
/// the operators in a single call.
///
/// Code that uses this function should NOT call
/// `TfLiteInterpreterOptionsAddBuiltin&apos; or
/// `TfLiteInterpreterOptionsAddCustomOp&apos; on the same options object.
///
/// WARNING: This is an experimental API and subject to change.</doc>
