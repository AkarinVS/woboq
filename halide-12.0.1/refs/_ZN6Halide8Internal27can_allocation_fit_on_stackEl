<dec f='halide/build/include/Halide.h' l='19688' type='bool Halide::Internal::can_allocation_fit_on_stack(int64_t size)'/>
<doc f='halide/build/include/Halide.h' l='19685'>/** Given a size (in bytes), return True if the allocation size can fit
 * on the stack; otherwise, return False. This routine asserts if size is
 * non-positive. */</doc>
<dec f='halide/src/CodeGen_Internal.h' l='85' type='bool Halide::Internal::can_allocation_fit_on_stack(int64_t size)'/>
<use f='halide/src/BoundSmallAllocations.cpp' l='147' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_121BoundSmallAllocations5visitEPKNS0_8AllocateE'/>
<doc f='halide/src/CodeGen_Internal.h' l='82'>/** Given a size (in bytes), return True if the allocation size can fit
 * on the stack; otherwise, return False. This routine asserts if size is
 * non-positive. */</doc>
<use f='halide/src/CodeGen_C.cpp' l='2718' u='c' c='_ZN6Halide8Internal9CodeGen_C5visitEPKNS0_8AllocateE'/>
<def f='halide/src/CodeGen_Internal.cpp' l='263' ll='266' type='bool Halide::Internal::can_allocation_fit_on_stack(int64_t size)'/>
<use f='halide/src/CodeGen_Posix.cpp' l='99' u='c' c='_ZN6Halide8Internal13CodeGen_Posix17create_allocationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_4TypeENS_10MemoryTypeERKSt6vectorINS_4E15349718'/>
<use f='halide/src/Profiling.cpp' l='107' u='c' c='_ZN6Halide8Internal12_GLOBAL__N_115InjectProfiling23compute_allocation_sizeERKSt6vectorINS_4ExprESaIS4_EERKS4_RKNS_4TypeERKNSt7__cxx1112basic_stringIc13793051'/>
