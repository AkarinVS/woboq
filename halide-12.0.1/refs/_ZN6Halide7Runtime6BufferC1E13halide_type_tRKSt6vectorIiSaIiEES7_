<def f='halide/build/include/Halide.h' l='9633' ll='9636' type='void Halide::Runtime::Buffer::Buffer&lt;T, D&gt;(halide_type_t t, const std::vector&lt;int&gt; &amp; sizes, const std::vector&lt;int&gt; &amp; storage_order)'/>
<doc f='halide/build/include/Halide.h' l='9629'>/** Allocate a new image of unknown type using a vector of ints as the size and
     * a vector of indices indicating the storage order for each dimension. The
     * length of the sizes vector and the storage-order vector must match. For instance,
     * to allocate an interleaved RGB buffer, you would pass {2, 0, 1} for storage_order. */</doc>
<def f='halide/src/runtime/HalideBuffer.h' l='871' ll='874' type='void Halide::Runtime::Buffer::Buffer&lt;T, D&gt;(halide_type_t t, const std::vector&lt;int&gt; &amp; sizes, const std::vector&lt;int&gt; &amp; storage_order)'/>
<doc f='halide/src/runtime/HalideBuffer.h' l='867'>/** Allocate a new image of unknown type using a vector of ints as the size and
     * a vector of indices indicating the storage order for each dimension. The
     * length of the sizes vector and the storage-order vector must match. For instance,
     * to allocate an interleaved RGB buffer, you would pass {2, 0, 1} for storage_order. */</doc>
