<dec f='include/libavutil/mem.h' l='303' type='void * av_realloc_f(void * ptr, size_t nelem, size_t elsize)'/>
<doc f='include/libavutil/mem.h' l='288'>/**
 * Allocate, reallocate, or free a block of memory.
 *
 * This function does the same thing as av_realloc(), except:
 * - It takes two size arguments and allocates `nelem * elsize` bytes,
 *   after checking the result of the multiplication for integer overflow.
 * - It frees the input block in case of failure, thus avoiding the memory
 *   leak with the classic
 *   @code{.c}
 *   buf = realloc(buf);
 *   if (!buf)
 *       return -1;
 *   @endcode
 *   pattern.
 */</doc>
