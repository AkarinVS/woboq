<dec f='x265/source/x265.h' l='821' type='const char *'/>
<offset>64</offset>
<doc f='x265/source/x265.h' l='782'>/* Comma seperated list of threads per NUMA node. If &quot;none&quot;, then no worker
     * pools are created and only frame parallelism is possible. If NULL or &quot;&quot;
     * (default) x265 will use all available threads on each NUMA node.
     *
     * &apos;+&apos;  is a special value indicating all cores detected on the node
     * &apos;*&apos;  is a special value indicating all cores detected on the node and all
     *      remaining nodes.
     * &apos;-&apos;  is a special value indicating no cores on the node, same as &apos;0&apos;
     *
     * example strings for a 4-node system:
     *   &quot;&quot;        - default, unspecified, all numa nodes are used for thread pools
     *   &quot;*&quot;       - same as default
     *   &quot;none&quot;    - no thread pools are created, only frame parallelism possible
     *   &quot;-&quot;       - same as &quot;none&quot;
     *   &quot;10&quot;      - allocate one pool, using up to 10 cores on node 0
     *   &quot;-,+&quot;     - allocate one pool, using all cores on node 1
     *   &quot;+,-,+&quot;   - allocate two pools, using all cores on nodes 0 and 2
     *   &quot;+,-,+,-&quot; - allocate two pools, using all cores on nodes 0 and 2
     *   &quot;-,*&quot;     - allocate three pools, using all cores on nodes 1, 2 and 3
     *   &quot;8,8,8,8&quot; - allocate four pools with up to 8 threads in each pool
     *
     * The total number of threads will be determined by the number of threads
     * assigned to all nodes. The worker threads will each be given affinity for
     * their node, they will not be allowed to migrate between nodes, but they
     * will be allowed to move between CPU cores within their node.
     *
     * If the three pool features: bEnableWavefront, bDistributeModeAnalysis and
     * bDistributeMotionEstimation are all disabled, then numaPools is ignored
     * and no thread pools are created.
     *
     * If &quot;none&quot; is specified, then all three of the thread pool features are
     * implicitly disabled.
     *
     * Multiple thread pools will be allocated for any NUMA node with more than
     * 64 logical CPU cores. But any given thread pool will always use at most
     * one NUMA node.
     *
     * Frame encoders are distributed between the available thread pools, and
     * the encoder will never generate more thread pools than frameNumThreads */</doc>
<use f='x265/source/common/param.cpp' l='1193' u='w' c='x265_param_parse'/>
<use f='x265/source/common/param.cpp' l='2094' u='r' c='_ZN4x26517x265_param2stringEP10x265_paramii'/>
<use f='x265/source/common/param.cpp' l='2095' u='r' c='_ZN4x26517x265_param2stringEP10x265_paramii'/>
<use f='x265/source/common/param.cpp' l='2109' u='r' c='_ZN4x26517x265_param2stringEP10x265_paramii'/>
<use f='x265/source/common/param.cpp' l='2110' u='r' c='_ZN4x26517x265_param2stringEP10x265_paramii'/>
<use f='x265/source/common/param.cpp' l='2423' u='r' c='_ZN4x26516x265_copy_paramsEP10x265_paramS1_'/>
<use f='x265/source/common/param.cpp' l='2423' u='w' c='_ZN4x26516x265_copy_paramsEP10x265_paramS1_'/>
<use f='x265/source/common/param.cpp' l='2423' u='r' c='_ZN4x26516x265_copy_paramsEP10x265_paramS1_'/>
<use f='x265/source/common/param.cpp' l='2424' u='w' c='_ZN4x26516x265_copy_paramsEP10x265_paramS1_'/>
<use f='x265/source/common/threadpool.cpp' l='320' u='r' c='_ZN4x26510ThreadPool16allocThreadPoolsEP10x265_paramRib'/>
<use f='x265/source/common/threadpool.cpp' l='320' u='r' c='_ZN4x26510ThreadPool16allocThreadPoolsEP10x265_paramRib'/>
<use f='x265/source/common/threadpool.cpp' l='322' u='r' c='_ZN4x26510ThreadPool16allocThreadPoolsEP10x265_paramRib'/>
<use f='x265/source/encoder/encoder.cpp' l='286' u='r' c='_ZN4x2657Encoder6createEv'/>
<use f='x265/source/encoder/encoder.cpp' l='286' u='r' c='_ZN4x2657Encoder6createEv'/>
<use f='x265/source/encoder/encoder.cpp' l='1012' u='r' c='_ZN4x2657Encoder7destroyEv'/>
