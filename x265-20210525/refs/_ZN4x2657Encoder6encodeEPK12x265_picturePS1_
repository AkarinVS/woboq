<dec f='x265/source/encoder/encoder.h' l='312' type='int x265::Encoder::encode(const x265_picture * pic, x265_picture * pic_out)'/>
<use f='x265/source/encoder/api.cpp' l='581' u='c' c='x265_encoder_encode'/>
<def f='x265/source/encoder/encoder.cpp' l='1616' ll='2498' type='int x265::Encoder::encode(const x265_picture * pic_in, x265_picture * pic_out)'/>
<doc f='x265/source/encoder/encoder.cpp' l='1605'>/**
 * Feed one new input frame into the encoder, get one frame out. If pic_in is
 * NULL, a flush condition is implied and pic_in must be NULL for all subsequent
 * calls for this encoder instance.
 *
 * pic_in  input original YUV picture or NULL
 * pic_out pointer to reconstructed picture struct
 *
 * returns 0 if no frames are currently available for output
 *         1 if frame was output, m_nalList contains access unit
 *         negative on malloc error or abort */</doc>
