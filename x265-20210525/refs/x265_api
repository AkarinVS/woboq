<def f='x265/source/x265.h' l='2250' ll='2302'/>
<use f='x265/source/x265.h' l='2250'/>
<size>288</size>
<doc f='x265/source/x265.h' l='2244'>/* === Multi-lib API ===
 * By using this method to gain access to the libx265 interfaces, you allow run-
 * time selection between various available libx265 libraries based on the
 * encoder parameters. The most likely use case is to choose between Main and
 * Main10 builds of libx265. */</doc>
<mbr r='x265_api::api_major_version' o='0' t='int'/>
<mbr r='x265_api::api_build_number' o='32' t='int'/>
<mbr r='x265_api::sizeof_param' o='64' t='int'/>
<mbr r='x265_api::sizeof_picture' o='96' t='int'/>
<mbr r='x265_api::sizeof_analysis_data' o='128' t='int'/>
<mbr r='x265_api::sizeof_zone' o='160' t='int'/>
<mbr r='x265_api::sizeof_stats' o='192' t='int'/>
<mbr r='x265_api::bit_depth' o='224' t='int'/>
<mbr r='x265_api::version_str' o='256' t='const char *'/>
<mbr r='x265_api::build_info_str' o='320' t='const char *'/>
<mbr r='x265_api::param_alloc' o='384' t='x265_param *(*)()'/>
<mbr r='x265_api::param_free' o='448' t='void (*)(x265_param *)'/>
<mbr r='x265_api::param_default' o='512' t='void (*)(x265_param *)'/>
<mbr r='x265_api::param_parse' o='576' t='int (*)(x265_param *, const char *, const char *)'/>
<mbr r='x265_api::param_apply_profile' o='640' t='int (*)(x265_param *, const char *)'/>
<mbr r='x265_api::param_default_preset' o='704' t='int (*)(x265_param *, const char *, const char *)'/>
<mbr r='x265_api::picture_alloc' o='768' t='x265_picture *(*)()'/>
<mbr r='x265_api::picture_free' o='832' t='void (*)(x265_picture *)'/>
<mbr r='x265_api::picture_init' o='896' t='void (*)(x265_param *, x265_picture *)'/>
<mbr r='x265_api::encoder_open' o='960' t='x265_encoder *(*)(x265_param *)'/>
<mbr r='x265_api::encoder_parameters' o='1024' t='void (*)(x265_encoder *, x265_param *)'/>
<mbr r='x265_api::encoder_reconfig' o='1088' t='int (*)(x265_encoder *, x265_param *)'/>
<mbr r='x265_api::encoder_reconfig_zone' o='1152' t='int (*)(x265_encoder *, x265_zone *)'/>
<mbr r='x265_api::encoder_headers' o='1216' t='int (*)(x265_encoder *, x265_nal **, uint32_t *)'/>
<mbr r='x265_api::encoder_encode' o='1280' t='int (*)(x265_encoder *, x265_nal **, uint32_t *, x265_picture *, x265_picture *)'/>
<mbr r='x265_api::encoder_get_stats' o='1344' t='void (*)(x265_encoder *, x265_stats *, uint32_t)'/>
<mbr r='x265_api::encoder_log' o='1408' t='void (*)(x265_encoder *, int, char **)'/>
<mbr r='x265_api::encoder_close' o='1472' t='void (*)(x265_encoder *)'/>
<mbr r='x265_api::cleanup' o='1536' t='void (*)()'/>
<mbr r='x265_api::sizeof_frame_stats' o='1600' t='int'/>
<mbr r='x265_api::encoder_intra_refresh' o='1664' t='int (*)(x265_encoder *)'/>
<mbr r='x265_api::encoder_ctu_info' o='1728' t='int (*)(x265_encoder *, int, x265_ctu_info_t **)'/>
<mbr r='x265_api::get_slicetype_poc_and_scenecut' o='1792' t='int (*)(x265_encoder *, int *, int *, int *)'/>
<mbr r='x265_api::get_ref_frame_list' o='1856' t='int (*)(x265_encoder *, x265_picyuv **, x265_picyuv **, int, int, int *, int *)'/>
<mbr r='x265_api::csvlog_open' o='1920' t='FILE *(*)(const x265_param *)'/>
<mbr r='x265_api::csvlog_frame' o='1984' t='void (*)(const x265_param *, const x265_picture *)'/>
<mbr r='x265_api::csvlog_encode' o='2048' t='void (*)(const x265_param *, const x265_stats *, int, int, int, char **)'/>
<mbr r='x265_api::dither_image' o='2112' t='void (*)(x265_picture *, int, int, int16_t *, int)'/>
<mbr r='x265_api::set_analysis_data' o='2176' t='int (*)(x265_encoder *, x265_analysis_data *, int, uint32_t)'/>
<mbr r='x265_api::zone_param_parse' o='2240' t='int (*)(x265_param *, const char *, const char *)'/>
