<dec f='x265/source/x265.h' l='2323' macro='1' type='const x265_api * x265_api_get_200(int bitDepth)'/>
<doc f='x265/source/x265.h' l='2311'>/* x265_api_get:
 *   Retrieve the programming interface for a linked x265 library.
 *   May return NULL if no library is available that supports the
 *   requested bit depth. If bitDepth is 0 the function is guarunteed
 *   to return a non-NULL x265_api pointer, from the linked libx265.
 *
 *   If the requested bitDepth is not supported by the linked libx265,
 *   it will attempt to dynamically bind x265_api_get() from a shared
 *   library with an appropriate name:
 *     8bit:  libx265_main.so
 *     10bit: libx265_main10.so
 *   Obviously the shared library file extension is platform specific */</doc>
<def f='x265/source/encoder/api.cpp' l='1107' macro='1' type='const x265_api * x265_api_get_200(int bitDepth)'/>
<use f='x265/source/encoder/api.cpp' l='1519' macro='1' u='c' c='x265_csvlog_encode'/>
<use f='x265/source/encoder/api.cpp' l='1678' macro='1' u='c' c='x265_dither_image'/>
<use f='x265/source/x265cli.cpp' l='491' macro='1' u='c' c='_ZN4x26510CLIOptions14parseZoneParamEiPPcP10x265_parami'/>
<use f='x265/source/x265cli.cpp' l='495' macro='1' u='c' c='_ZN4x26510CLIOptions14parseZoneParamEiPPcP10x265_parami'/>
<use f='x265/source/x265cli.cpp' l='618' macro='1' u='c' c='_ZN4x26510CLIOptions5parseEiPPc'/>
<use f='x265/source/x265cli.cpp' l='622' macro='1' u='c' c='_ZN4x26510CLIOptions5parseEiPPc'/>
